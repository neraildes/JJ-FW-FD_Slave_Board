

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Sep 29 11:44:44 2021

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9s 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	plic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text18,local,class=CODE,merge=1,delta=2
    26                           	psect	text19,local,class=CODE,merge=1,delta=2
    27                           	psect	text23,local,class=CODE,merge=1,delta=2
    28                           	psect	text25,local,class=CODE,merge=1,delta=2
    29                           	psect	text26,local,class=CODE,merge=1,delta=2
    30                           	psect	text43,local,class=CODE,merge=1,delta=2
    31                           	psect	text50,local,class=CODE,merge=1,delta=2
    32                           	psect	text58,local,class=CODE,merge=1,delta=2
    33                           	psect	text68,local,class=CODE,merge=1,delta=2
    34                           	psect	text69,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	psect	pa_nodes0,global,class=CODE,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F886 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0097                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  0105                     	;# 
   212  0107                     	;# 
   213  0108                     	;# 
   214  0109                     	;# 
   215  010C                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  010F                     	;# 
   220  0185                     	;# 
   221  0187                     	;# 
   222  0188                     	;# 
   223  0189                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  000E                     	;# 
   240  000E                     	;# 
   241  000F                     	;# 
   242  0010                     	;# 
   243  0011                     	;# 
   244  0012                     	;# 
   245  0013                     	;# 
   246  0014                     	;# 
   247  0015                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0017                     	;# 
   251  0018                     	;# 
   252  0019                     	;# 
   253  001A                     	;# 
   254  001B                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001D                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  0087                     	;# 
   264  0089                     	;# 
   265  008C                     	;# 
   266  008D                     	;# 
   267  008E                     	;# 
   268  008F                     	;# 
   269  0090                     	;# 
   270  0091                     	;# 
   271  0092                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0094                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  0105                     	;# 
   288  0107                     	;# 
   289  0108                     	;# 
   290  0109                     	;# 
   291  010C                     	;# 
   292  010C                     	;# 
   293  010D                     	;# 
   294  010E                     	;# 
   295  010F                     	;# 
   296  0185                     	;# 
   297  0187                     	;# 
   298  0188                     	;# 
   299  0189                     	;# 
   300  018C                     	;# 
   301  018D                     	;# 
   302  0000                     	;# 
   303  0001                     	;# 
   304  0002                     	;# 
   305  0003                     	;# 
   306  0004                     	;# 
   307  0005                     	;# 
   308  0006                     	;# 
   309  0007                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  008F                     	;# 
   421  0090                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  0105                     	;# 
   440  0107                     	;# 
   441  0108                     	;# 
   442  0109                     	;# 
   443  010C                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  0185                     	;# 
   449  0187                     	;# 
   450  0188                     	;# 
   451  0189                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0000                     	;# 
   455  0001                     	;# 
   456  0002                     	;# 
   457  0003                     	;# 
   458  0004                     	;# 
   459  0005                     	;# 
   460  0006                     	;# 
   461  0007                     	;# 
   462  0009                     	;# 
   463  000A                     	;# 
   464  000B                     	;# 
   465  000C                     	;# 
   466  000D                     	;# 
   467  000E                     	;# 
   468  000E                     	;# 
   469  000F                     	;# 
   470  0010                     	;# 
   471  0011                     	;# 
   472  0012                     	;# 
   473  0013                     	;# 
   474  0014                     	;# 
   475  0015                     	;# 
   476  0015                     	;# 
   477  0016                     	;# 
   478  0017                     	;# 
   479  0018                     	;# 
   480  0019                     	;# 
   481  001A                     	;# 
   482  001B                     	;# 
   483  001B                     	;# 
   484  001C                     	;# 
   485  001D                     	;# 
   486  001E                     	;# 
   487  001F                     	;# 
   488  0081                     	;# 
   489  0085                     	;# 
   490  0086                     	;# 
   491  0087                     	;# 
   492  0089                     	;# 
   493  008C                     	;# 
   494  008D                     	;# 
   495  008E                     	;# 
   496  008F                     	;# 
   497  0090                     	;# 
   498  0091                     	;# 
   499  0092                     	;# 
   500  0093                     	;# 
   501  0093                     	;# 
   502  0093                     	;# 
   503  0094                     	;# 
   504  0095                     	;# 
   505  0096                     	;# 
   506  0097                     	;# 
   507  0098                     	;# 
   508  0099                     	;# 
   509  009A                     	;# 
   510  009B                     	;# 
   511  009C                     	;# 
   512  009D                     	;# 
   513  009E                     	;# 
   514  009F                     	;# 
   515  0105                     	;# 
   516  0107                     	;# 
   517  0108                     	;# 
   518  0109                     	;# 
   519  010C                     	;# 
   520  010C                     	;# 
   521  010D                     	;# 
   522  010E                     	;# 
   523  010F                     	;# 
   524  0185                     	;# 
   525  0187                     	;# 
   526  0188                     	;# 
   527  0189                     	;# 
   528  018C                     	;# 
   529  018D                     	;# 
   530  0000                     	;# 
   531  0001                     	;# 
   532  0002                     	;# 
   533  0003                     	;# 
   534  0004                     	;# 
   535  0005                     	;# 
   536  0006                     	;# 
   537  0007                     	;# 
   538  0009                     	;# 
   539  000A                     	;# 
   540  000B                     	;# 
   541  000C                     	;# 
   542  000D                     	;# 
   543  000E                     	;# 
   544  000E                     	;# 
   545  000F                     	;# 
   546  0010                     	;# 
   547  0011                     	;# 
   548  0012                     	;# 
   549  0013                     	;# 
   550  0014                     	;# 
   551  0015                     	;# 
   552  0015                     	;# 
   553  0016                     	;# 
   554  0017                     	;# 
   555  0018                     	;# 
   556  0019                     	;# 
   557  001A                     	;# 
   558  001B                     	;# 
   559  001B                     	;# 
   560  001C                     	;# 
   561  001D                     	;# 
   562  001E                     	;# 
   563  001F                     	;# 
   564  0081                     	;# 
   565  0085                     	;# 
   566  0086                     	;# 
   567  0087                     	;# 
   568  0089                     	;# 
   569  008C                     	;# 
   570  008D                     	;# 
   571  008E                     	;# 
   572  008F                     	;# 
   573  0090                     	;# 
   574  0091                     	;# 
   575  0092                     	;# 
   576  0093                     	;# 
   577  0093                     	;# 
   578  0093                     	;# 
   579  0094                     	;# 
   580  0095                     	;# 
   581  0096                     	;# 
   582  0097                     	;# 
   583  0098                     	;# 
   584  0099                     	;# 
   585  009A                     	;# 
   586  009B                     	;# 
   587  009C                     	;# 
   588  009D                     	;# 
   589  009E                     	;# 
   590  009F                     	;# 
   591  0105                     	;# 
   592  0107                     	;# 
   593  0108                     	;# 
   594  0109                     	;# 
   595  010C                     	;# 
   596  010C                     	;# 
   597  010D                     	;# 
   598  010E                     	;# 
   599  010F                     	;# 
   600  0185                     	;# 
   601  0187                     	;# 
   602  0188                     	;# 
   603  0189                     	;# 
   604  018C                     	;# 
   605  018D                     	;# 
   606  0000                     	;# 
   607  0001                     	;# 
   608  0002                     	;# 
   609  0003                     	;# 
   610  0004                     	;# 
   611  0005                     	;# 
   612  0006                     	;# 
   613  0007                     	;# 
   614  0009                     	;# 
   615  000A                     	;# 
   616  000B                     	;# 
   617  000C                     	;# 
   618  000D                     	;# 
   619  000E                     	;# 
   620  000E                     	;# 
   621  000F                     	;# 
   622  0010                     	;# 
   623  0011                     	;# 
   624  0012                     	;# 
   625  0013                     	;# 
   626  0014                     	;# 
   627  0015                     	;# 
   628  0015                     	;# 
   629  0016                     	;# 
   630  0017                     	;# 
   631  0018                     	;# 
   632  0019                     	;# 
   633  001A                     	;# 
   634  001B                     	;# 
   635  001B                     	;# 
   636  001C                     	;# 
   637  001D                     	;# 
   638  001E                     	;# 
   639  001F                     	;# 
   640  0081                     	;# 
   641  0085                     	;# 
   642  0086                     	;# 
   643  0087                     	;# 
   644  0089                     	;# 
   645  008C                     	;# 
   646  008D                     	;# 
   647  008E                     	;# 
   648  008F                     	;# 
   649  0090                     	;# 
   650  0091                     	;# 
   651  0092                     	;# 
   652  0093                     	;# 
   653  0093                     	;# 
   654  0093                     	;# 
   655  0094                     	;# 
   656  0095                     	;# 
   657  0096                     	;# 
   658  0097                     	;# 
   659  0098                     	;# 
   660  0099                     	;# 
   661  009A                     	;# 
   662  009B                     	;# 
   663  009C                     	;# 
   664  009D                     	;# 
   665  009E                     	;# 
   666  009F                     	;# 
   667  0105                     	;# 
   668  0107                     	;# 
   669  0108                     	;# 
   670  0109                     	;# 
   671  010C                     	;# 
   672  010C                     	;# 
   673  010D                     	;# 
   674  010E                     	;# 
   675  010F                     	;# 
   676  0185                     	;# 
   677  0187                     	;# 
   678  0188                     	;# 
   679  0189                     	;# 
   680  018C                     	;# 
   681  018D                     	;# 
   682  0000                     	;# 
   683  0001                     	;# 
   684  0002                     	;# 
   685  0003                     	;# 
   686  0004                     	;# 
   687  0005                     	;# 
   688  0006                     	;# 
   689  0007                     	;# 
   690  0009                     	;# 
   691  000A                     	;# 
   692  000B                     	;# 
   693  000C                     	;# 
   694  000D                     	;# 
   695  000E                     	;# 
   696  000E                     	;# 
   697  000F                     	;# 
   698  0010                     	;# 
   699  0011                     	;# 
   700  0012                     	;# 
   701  0013                     	;# 
   702  0014                     	;# 
   703  0015                     	;# 
   704  0015                     	;# 
   705  0016                     	;# 
   706  0017                     	;# 
   707  0018                     	;# 
   708  0019                     	;# 
   709  001A                     	;# 
   710  001B                     	;# 
   711  001B                     	;# 
   712  001C                     	;# 
   713  001D                     	;# 
   714  001E                     	;# 
   715  001F                     	;# 
   716  0081                     	;# 
   717  0085                     	;# 
   718  0086                     	;# 
   719  0087                     	;# 
   720  0089                     	;# 
   721  008C                     	;# 
   722  008D                     	;# 
   723  008E                     	;# 
   724  008F                     	;# 
   725  0090                     	;# 
   726  0091                     	;# 
   727  0092                     	;# 
   728  0093                     	;# 
   729  0093                     	;# 
   730  0093                     	;# 
   731  0094                     	;# 
   732  0095                     	;# 
   733  0096                     	;# 
   734  0097                     	;# 
   735  0098                     	;# 
   736  0099                     	;# 
   737  009A                     	;# 
   738  009B                     	;# 
   739  009C                     	;# 
   740  009D                     	;# 
   741  009E                     	;# 
   742  009F                     	;# 
   743  0105                     	;# 
   744  0107                     	;# 
   745  0108                     	;# 
   746  0109                     	;# 
   747  010C                     	;# 
   748  010C                     	;# 
   749  010D                     	;# 
   750  010E                     	;# 
   751  010F                     	;# 
   752  0185                     	;# 
   753  0187                     	;# 
   754  0188                     	;# 
   755  0189                     	;# 
   756  018C                     	;# 
   757  018D                     	;# 
   758  0000                     	;# 
   759  0001                     	;# 
   760  0002                     	;# 
   761  0003                     	;# 
   762  0004                     	;# 
   763  0005                     	;# 
   764  0006                     	;# 
   765  0007                     	;# 
   766  0009                     	;# 
   767  000A                     	;# 
   768  000B                     	;# 
   769  000C                     	;# 
   770  000D                     	;# 
   771  000E                     	;# 
   772  000E                     	;# 
   773  000F                     	;# 
   774  0010                     	;# 
   775  0011                     	;# 
   776  0012                     	;# 
   777  0013                     	;# 
   778  0014                     	;# 
   779  0015                     	;# 
   780  0015                     	;# 
   781  0016                     	;# 
   782  0017                     	;# 
   783  0018                     	;# 
   784  0019                     	;# 
   785  001A                     	;# 
   786  001B                     	;# 
   787  001B                     	;# 
   788  001C                     	;# 
   789  001D                     	;# 
   790  001E                     	;# 
   791  001F                     	;# 
   792  0081                     	;# 
   793  0085                     	;# 
   794  0086                     	;# 
   795  0087                     	;# 
   796  0089                     	;# 
   797  008C                     	;# 
   798  008D                     	;# 
   799  008E                     	;# 
   800  008F                     	;# 
   801  0090                     	;# 
   802  0091                     	;# 
   803  0092                     	;# 
   804  0093                     	;# 
   805  0093                     	;# 
   806  0093                     	;# 
   807  0094                     	;# 
   808  0095                     	;# 
   809  0096                     	;# 
   810  0097                     	;# 
   811  0098                     	;# 
   812  0099                     	;# 
   813  009A                     	;# 
   814  009B                     	;# 
   815  009C                     	;# 
   816  009D                     	;# 
   817  009E                     	;# 
   818  009F                     	;# 
   819  0105                     	;# 
   820  0107                     	;# 
   821  0108                     	;# 
   822  0109                     	;# 
   823  010C                     	;# 
   824  010C                     	;# 
   825  010D                     	;# 
   826  010E                     	;# 
   827  010F                     	;# 
   828  0185                     	;# 
   829  0187                     	;# 
   830  0188                     	;# 
   831  0189                     	;# 
   832  018C                     	;# 
   833  018D                     	;# 
   834  0000                     	;# 
   835  0001                     	;# 
   836  0002                     	;# 
   837  0003                     	;# 
   838  0004                     	;# 
   839  0005                     	;# 
   840  0006                     	;# 
   841  0007                     	;# 
   842  0009                     	;# 
   843  000A                     	;# 
   844  000B                     	;# 
   845  000C                     	;# 
   846  000D                     	;# 
   847  000E                     	;# 
   848  000E                     	;# 
   849  000F                     	;# 
   850  0010                     	;# 
   851  0011                     	;# 
   852  0012                     	;# 
   853  0013                     	;# 
   854  0014                     	;# 
   855  0015                     	;# 
   856  0015                     	;# 
   857  0016                     	;# 
   858  0017                     	;# 
   859  0018                     	;# 
   860  0019                     	;# 
   861  001A                     	;# 
   862  001B                     	;# 
   863  001B                     	;# 
   864  001C                     	;# 
   865  001D                     	;# 
   866  001E                     	;# 
   867  001F                     	;# 
   868  0081                     	;# 
   869  0085                     	;# 
   870  0086                     	;# 
   871  0087                     	;# 
   872  0089                     	;# 
   873  008C                     	;# 
   874  008D                     	;# 
   875  008E                     	;# 
   876  008F                     	;# 
   877  0090                     	;# 
   878  0091                     	;# 
   879  0092                     	;# 
   880  0093                     	;# 
   881  0093                     	;# 
   882  0093                     	;# 
   883  0094                     	;# 
   884  0095                     	;# 
   885  0096                     	;# 
   886  0097                     	;# 
   887  0098                     	;# 
   888  0099                     	;# 
   889  009A                     	;# 
   890  009B                     	;# 
   891  009C                     	;# 
   892  009D                     	;# 
   893  009E                     	;# 
   894  009F                     	;# 
   895  0105                     	;# 
   896  0107                     	;# 
   897  0108                     	;# 
   898  0109                     	;# 
   899  010C                     	;# 
   900  010C                     	;# 
   901  010D                     	;# 
   902  010E                     	;# 
   903  010F                     	;# 
   904  0185                     	;# 
   905  0187                     	;# 
   906  0188                     	;# 
   907  0189                     	;# 
   908  018C                     	;# 
   909  018D                     	;# 
   910  0000                     	;# 
   911  0001                     	;# 
   912  0002                     	;# 
   913  0003                     	;# 
   914  0004                     	;# 
   915  0005                     	;# 
   916  0006                     	;# 
   917  0007                     	;# 
   918  0009                     	;# 
   919  000A                     	;# 
   920  000B                     	;# 
   921  000C                     	;# 
   922  000D                     	;# 
   923  000E                     	;# 
   924  000E                     	;# 
   925  000F                     	;# 
   926  0010                     	;# 
   927  0011                     	;# 
   928  0012                     	;# 
   929  0013                     	;# 
   930  0014                     	;# 
   931  0015                     	;# 
   932  0015                     	;# 
   933  0016                     	;# 
   934  0017                     	;# 
   935  0018                     	;# 
   936  0019                     	;# 
   937  001A                     	;# 
   938  001B                     	;# 
   939  001B                     	;# 
   940  001C                     	;# 
   941  001D                     	;# 
   942  001E                     	;# 
   943  001F                     	;# 
   944  0081                     	;# 
   945  0085                     	;# 
   946  0086                     	;# 
   947  0087                     	;# 
   948  0089                     	;# 
   949  008C                     	;# 
   950  008D                     	;# 
   951  008E                     	;# 
   952  008F                     	;# 
   953  0090                     	;# 
   954  0091                     	;# 
   955  0092                     	;# 
   956  0093                     	;# 
   957  0093                     	;# 
   958  0093                     	;# 
   959  0094                     	;# 
   960  0095                     	;# 
   961  0096                     	;# 
   962  0097                     	;# 
   963  0098                     	;# 
   964  0099                     	;# 
   965  009A                     	;# 
   966  009B                     	;# 
   967  009C                     	;# 
   968  009D                     	;# 
   969  009E                     	;# 
   970  009F                     	;# 
   971  0105                     	;# 
   972  0107                     	;# 
   973  0108                     	;# 
   974  0109                     	;# 
   975  010C                     	;# 
   976  010C                     	;# 
   977  010D                     	;# 
   978  010E                     	;# 
   979  010F                     	;# 
   980  0185                     	;# 
   981  0187                     	;# 
   982  0188                     	;# 
   983  0189                     	;# 
   984  018C                     	;# 
   985  018D                     	;# 
   986  0000                     	;# 
   987  0001                     	;# 
   988  0002                     	;# 
   989  0003                     	;# 
   990  0004                     	;# 
   991  0005                     	;# 
   992  0006                     	;# 
   993  0007                     	;# 
   994  0009                     	;# 
   995  000A                     	;# 
   996  000B                     	;# 
   997  000C                     	;# 
   998  000D                     	;# 
   999  000E                     	;# 
  1000  000E                     	;# 
  1001  000F                     	;# 
  1002  0010                     	;# 
  1003  0011                     	;# 
  1004  0012                     	;# 
  1005  0013                     	;# 
  1006  0014                     	;# 
  1007  0015                     	;# 
  1008  0015                     	;# 
  1009  0016                     	;# 
  1010  0017                     	;# 
  1011  0018                     	;# 
  1012  0019                     	;# 
  1013  001A                     	;# 
  1014  001B                     	;# 
  1015  001B                     	;# 
  1016  001C                     	;# 
  1017  001D                     	;# 
  1018  001E                     	;# 
  1019  001F                     	;# 
  1020  0081                     	;# 
  1021  0085                     	;# 
  1022  0086                     	;# 
  1023  0087                     	;# 
  1024  0089                     	;# 
  1025  008C                     	;# 
  1026  008D                     	;# 
  1027  008E                     	;# 
  1028  008F                     	;# 
  1029  0090                     	;# 
  1030  0091                     	;# 
  1031  0092                     	;# 
  1032  0093                     	;# 
  1033  0093                     	;# 
  1034  0093                     	;# 
  1035  0094                     	;# 
  1036  0095                     	;# 
  1037  0096                     	;# 
  1038  0097                     	;# 
  1039  0098                     	;# 
  1040  0099                     	;# 
  1041  009A                     	;# 
  1042  009B                     	;# 
  1043  009C                     	;# 
  1044  009D                     	;# 
  1045  009E                     	;# 
  1046  009F                     	;# 
  1047  0105                     	;# 
  1048  0107                     	;# 
  1049  0108                     	;# 
  1050  0109                     	;# 
  1051  010C                     	;# 
  1052  010C                     	;# 
  1053  010D                     	;# 
  1054  010E                     	;# 
  1055  010F                     	;# 
  1056  0185                     	;# 
  1057  0187                     	;# 
  1058  0188                     	;# 
  1059  0189                     	;# 
  1060  018C                     	;# 
  1061  018D                     	;# 
  1062  0000                     	;# 
  1063  0001                     	;# 
  1064  0002                     	;# 
  1065  0003                     	;# 
  1066  0004                     	;# 
  1067  0005                     	;# 
  1068  0006                     	;# 
  1069  0007                     	;# 
  1070  0009                     	;# 
  1071  000A                     	;# 
  1072  000B                     	;# 
  1073  000C                     	;# 
  1074  000D                     	;# 
  1075  000E                     	;# 
  1076  000E                     	;# 
  1077  000F                     	;# 
  1078  0010                     	;# 
  1079  0011                     	;# 
  1080  0012                     	;# 
  1081  0013                     	;# 
  1082  0014                     	;# 
  1083  0015                     	;# 
  1084  0015                     	;# 
  1085  0016                     	;# 
  1086  0017                     	;# 
  1087  0018                     	;# 
  1088  0019                     	;# 
  1089  001A                     	;# 
  1090  001B                     	;# 
  1091  001B                     	;# 
  1092  001C                     	;# 
  1093  001D                     	;# 
  1094  001E                     	;# 
  1095  001F                     	;# 
  1096  0081                     	;# 
  1097  0085                     	;# 
  1098  0086                     	;# 
  1099  0087                     	;# 
  1100  0089                     	;# 
  1101  008C                     	;# 
  1102  008D                     	;# 
  1103  008E                     	;# 
  1104  008F                     	;# 
  1105  0090                     	;# 
  1106  0091                     	;# 
  1107  0092                     	;# 
  1108  0093                     	;# 
  1109  0093                     	;# 
  1110  0093                     	;# 
  1111  0094                     	;# 
  1112  0095                     	;# 
  1113  0096                     	;# 
  1114  0097                     	;# 
  1115  0098                     	;# 
  1116  0099                     	;# 
  1117  009A                     	;# 
  1118  009B                     	;# 
  1119  009C                     	;# 
  1120  009D                     	;# 
  1121  009E                     	;# 
  1122  009F                     	;# 
  1123  0105                     	;# 
  1124  0107                     	;# 
  1125  0108                     	;# 
  1126  0109                     	;# 
  1127  010C                     	;# 
  1128  010C                     	;# 
  1129  010D                     	;# 
  1130  010E                     	;# 
  1131  010F                     	;# 
  1132  0185                     	;# 
  1133  0187                     	;# 
  1134  0188                     	;# 
  1135  0189                     	;# 
  1136  018C                     	;# 
  1137  018D                     	;# 
  1138                           
  1139                           	psect	idataCOMMON
  1140  0000                     __pidataCOMMON:
  1141                           
  1142                           	psect	idataBANK1
  1143  0000                     __pidataBANK1:
  1144                           
  1145                           	psect	strings
  1146  1000                     __pstrings:
  1147  1000                     stringtab:
  1148  1000                     __stringtab:
  1149                           
  1150                           ;	String table - string pointers are 1 byte each
  1151  1000  1BFF               	btfsc	btemp+1,7
  1152  1001  280A               	ljmp	stringcode
  1153  1002  1383               	bcf	3,7
  1154  1003  187F               	btfsc	btemp+1,0
  1155  1004  1783               	bsf	3,7
  1156  1005  0800               	movf	0,w
  1157  1006  0A84               	incf	4,f
  1158  1007  1903               	skipnz
  1159  1008  0AFF               	incf	btemp+1,f
  1160  1009  0008               	return
  1161  100A                     stringcode:
  1162  100A                     stringdir:
  1163  100A  3010               	movlw	high stringdir
  1164  100B  008A               	movwf	10
  1165  100C  0804               	movf	4,w
  1166  100D  0A84               	incf	4,f
  1167  100E  0782               	addwf	2,f
  1168  100F                     __stringbase:
  1169  100F  3400               	retlw	0
  1170  1010                     __end_of__stringtab:
  1171  1010                     log@coeff:
  1172  1010  3400               	retlw	0
  1173  1011  3400               	retlw	0
  1174  1012  3400               	retlw	0
  1175  1013  3400               	retlw	0
  1176  1014  34C4               	retlw	196
  1177  1015  34FF               	retlw	255
  1178  1016  347F               	retlw	127
  1179  1017  343F               	retlw	63
  1180  1018  3480               	retlw	128
  1181  1019  34EF               	retlw	239
  1182  101A  34FF               	retlw	255
  1183  101B  34BE               	retlw	190
  1184  101C  3490               	retlw	144
  1185  101D  34E1               	retlw	225
  1186  101E  34A9               	retlw	169
  1187  101F  343E               	retlw	62
  1188  1020  34EC               	retlw	236
  1189  1021  3482               	retlw	130
  1190  1022  3476               	retlw	118
  1191  1023  34BE               	retlw	190
  1192  1024  3482               	retlw	130
  1193  1025  34AD               	retlw	173
  1194  1026  342B               	retlw	43
  1195  1027  343E               	retlw	62
  1196  1028  340E               	retlw	14
  1197  1029  343C               	retlw	60
  1198  102A  34C3               	retlw	195
  1199  102B  34BD               	retlw	189
  1200  102C  3487               	retlw	135
  1201  102D  34D1               	retlw	209
  1202  102E  3413               	retlw	19
  1203  102F  343D               	retlw	61
  1204  1030  3441               	retlw	65
  1205  1031  3478               	retlw	120
  1206  1032  34D3               	retlw	211
  1207  1033  34BB               	retlw	187
  1208  1034                     __end_oflog@coeff:
  1209  1034                     _BETA:
  1210                           
  1211                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1212  1034  3400               	retlw	0
  1213  1035  3460               	retlw	96
  1214  1036  3478               	retlw	120
  1215  1037  3445               	retlw	69
  1216  1038                     __end_of_BETA:
  1217  1038                     _BALANCE_RESISTOR:
  1218                           
  1219                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1220  1038  3400               	retlw	0
  1221  1039  3440               	retlw	64
  1222  103A  341C               	retlw	28
  1223  103B  3446               	retlw	70
  1224  103C                     __end_of_BALANCE_RESISTOR:
  1225  0019                     _TXREG	set	25
  1226  0018                     _RCSTAbits	set	24
  1227  001A                     _RCREG	set	26
  1228  000E                     _TMR1L	set	14
  1229  000F                     _TMR1H	set	15
  1230  000C                     _PIR1bits	set	12
  1231  001E                     _ADRESH	set	30
  1232  001F                     _ADCON0bits	set	31
  1233  0005                     _PORTAbits	set	5
  1234  0007                     _PORTCbits	set	7
  1235  0010                     _T1CON	set	16
  1236  0006                     _PORTBbits	set	6
  1237  0009                     _PORTE	set	9
  1238  0007                     _PORTC	set	7
  1239  0005                     _PORTA	set	5
  1240  0013                     _SSPBUF	set	19
  1241  000B                     _INTCONbits	set	11
  1242  0014                     _SSPCON	set	20
  1243  0006                     _PORTB	set	6
  1244  00C4                     _CREN	set	196
  1245  0081                     _TMR1CS	set	129
  1246  0085                     _T1CKPS1	set	133
  1247  0084                     _T1CKPS0	set	132
  1248  008C                     _PIE1bits	set	140
  1249  0099                     _SPBRG	set	153
  1250  0098                     _TXSTAbits	set	152
  1251  009E                     _ADRESL	set	158
  1252  009F                     _ADCON1bits	set	159
  1253  009F                     _ADCON1	set	159
  1254  0095                     _WPUB	set	149
  1255  0081                     _OPTION_REGbits	set	129
  1256  0089                     _TRISE	set	137
  1257  0087                     _TRISC	set	135
  1258  0086                     _TRISB	set	134
  1259  0085                     _TRISA	set	133
  1260  008F                     _OSCCONbits	set	143
  1261  0091                     _SSPCON2bits	set	145
  1262  0094                     _SSPSTAT	set	148
  1263  0093                     _SSPADD	set	147
  1264  0091                     _SSPCON2	set	145
  1265  043F                     _TRISC7	set	1087
  1266  043E                     _TRISC6	set	1086
  1267  0460                     _TMR1IE	set	1120
  1268  043C                     _TRISC4	set	1084
  1269  043B                     _TRISC3	set	1083
  1270  010C                     _EEDATA	set	268
  1271  010D                     _EEADR	set	269
  1272  0187                     _BAUDCTLbits	set	391
  1273  018D                     _EECON2	set	397
  1274  018C                     _EECON1bits	set	396
  1275  0189                     _ANSELH	set	393
  1276  0188                     _ANSEL	set	392
  1277  103C                     STR_1:
  1278  103C  3476               	retlw	118	;'v'
  1279  103D  3431               	retlw	49	;'1'
  1280  103E  342E               	retlw	46	;'.'
  1281  103F  3430               	retlw	48	;'0'
  1282  1040  342E               	retlw	46	;'.'
  1283  1041  3432               	retlw	50	;'2'
  1284  1042  3436               	retlw	54	;'6'
  1285  1043  3400               	retlw	0
  1286  1044                     STR_2:
  1287  1044  344F               	retlw	79	;'O'
  1288  1045  344B               	retlw	75	;'K'
  1289  1046  3400               	retlw	0
  1290                           
  1291                           	psect	cinit
  1292  0015                     start_initialization:	
  1293                           ; #config settings
  1294                           
  1295  0015                     __initialization:
  1296                           
  1297                           ; Initialize objects allocated to BANK1
  1298  0015  1683               	bsf	3,5	;RP0=1, select bank1
  1299                           
  1300                           ;initializer for _RL0Status
  1301  0016  3001               	movlw	1
  1302  0017  00ED               	movwf	__pdataBANK1& (0+127)
  1303                           
  1304                           ;initializer for _RL1Status
  1305  0018  00FC               	movwf	__pdataCOMMON& (0+127)
  1306  0019  3090               	movlw	low __pbssBANK3
  1307                           
  1308                           ; Clear objects allocated to BANK3
  1309  001A  1783               	bsf	3,7	;select IRP bank2
  1310  001B  0084               	movwf	4
  1311  001C  30E9               	movlw	low (__pbssBANK3+89)
  1312  001D  120A  158A  200C  120A  118A  	fcall	clear_ram0
  1313                           
  1314                           ; Clear objects allocated to BANK2
  1315  0022  3010               	movlw	low __pbssBANK2
  1316  0023  0084               	movwf	4
  1317  0024  3065               	movlw	low (__pbssBANK2+85)
  1318  0025  120A  158A  200C  120A  118A  	fcall	clear_ram0
  1319  002A  30DD               	movlw	low __pbssBANK1
  1320                           
  1321                           ; Clear objects allocated to BANK1
  1322  002B  1383               	bcf	3,7	;select IRP bank0
  1323  002C  0084               	movwf	4
  1324  002D  30ED               	movlw	low (__pbssBANK1+16)
  1325  002E  120A  158A  200C   	fcall	clear_ram0
  1326                           
  1327                           ; Clear objects allocated to COMMON
  1328  0031  01F0               	clrf	__pbssCOMMON& (0+127)
  1329  0032  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1330  0033  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1331  0034  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1332  0035  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1333  0036  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1334  0037                     end_of_initialization:	
  1335                           ;End of C runtime variable initialization code
  1336                           
  1337  0037                     __end_of__initialization:
  1338  0037  0183               	clrf	3
  1339  0038  120A  158A  2814   	ljmp	l7330	;jump to C main() function
  1340                           
  1341                           	psect	bssCOMMON
  1342  0070                     __pbssCOMMON:
  1343  0070                     _minuto:
  1344  0070                     	ds	1
  1345  0071                     _destino:
  1346  0071                     	ds	1
  1347  0072                     _canal:
  1348  0072                     	ds	1
  1349  0073                     _Histerese1:
  1350  0073                     	ds	1
  1351  0074                     _hora:
  1352  0074                     	ds	1
  1353  0075                     _segundo:
  1354  0075                     	ds	1
  1355                           
  1356                           	psect	dataCOMMON
  1357  007C                     __pdataCOMMON:
  1358  007C                     _RL1Status:
  1359  007C                     	ds	1
  1360                           
  1361                           	psect	bssBANK1
  1362  00DD                     __pbssBANK1:
  1363  00DD                     _SetPoint1:
  1364  00DD                     	ds	4
  1365  00E1                     _SetPoint0:
  1366  00E1                     	ds	4
  1367  00E5                     _Board_Number:
  1368  00E5                     	ds	1
  1369  00E6                     _TempoCNT_1:
  1370  00E6                     	ds	1
  1371  00E7                     _TempoOFF_1:
  1372  00E7                     	ds	1
  1373  00E8                     _TempoON_1:
  1374  00E8                     	ds	1
  1375  00E9                     _TempoCNT_0:
  1376  00E9                     	ds	1
  1377  00EA                     _TempoOFF_0:
  1378  00EA                     	ds	1
  1379  00EB                     _TempoON_0:
  1380  00EB                     	ds	1
  1381  00EC                     _generic_status:
  1382  00EC                     	ds	1
  1383                           
  1384                           	psect	dataBANK1
  1385  00ED                     __pdataBANK1:
  1386  00ED                     _RL0Status:
  1387  00ED                     	ds	1
  1388                           
  1389                           	psect	bssBANK3
  1390  0190                     __pbssBANK3:
  1391  0190                     _Temperatura1:
  1392  0190                     	ds	4
  1393  0194                     _Temperatura0:
  1394  0194                     	ds	4
  1395  0198                     _Histerese0:
  1396  0198                     	ds	4
  1397  019C                     _tempodecorrido:
  1398  019C                     	ds	2
  1399  019E                     _count:
  1400  019E                     	ds	2
  1401  01A0                     _header:
  1402  01A0                     	ds	2
  1403  01A2                     _Status1:
  1404  01A2                     	ds	2
  1405  01A4                     _Status0:
  1406  01A4                     	ds	2
  1407  01A6                     _milisegundo:
  1408  01A6                     	ds	2
  1409  01A8                     _Delay_Led_Usart:
  1410  01A8                     	ds	2
  1411  01AA                     _Delay_Led_Tmr0:
  1412  01AA                     	ds	2
  1413  01AC                     _Delay_Led_Memory:
  1414  01AC                     	ds	2
  1415  01AE                     _pointer:
  1416  01AE                     	ds	1
  1417  01AF                     _usart_protocol:
  1418  01AF                     	ds	58
  1419                           
  1420                           	psect	bssBANK2
  1421  0110                     __pbssBANK2:
  1422  0110                     _usart_buffer:
  1423  0110                     	ds	52
  1424  0144                     _buffer:
  1425  0144                     	ds	33
  1426                           
  1427                           	psect	clrtext
  1428  080C                     clear_ram0:	
  1429                           ;	Called with FSR containing the base address, and
  1430                           ;	W with the last address+1
  1431                           
  1432  080C  0064               	clrwdt	;clear the watchdog before getting into this loop
  1433  080D                     clrloop0:
  1434  080D  0180               	clrf	0	;clear RAM location pointed to by FSR
  1435  080E  0A84               	incf	4,f	;increment pointer
  1436  080F  0604               	xorwf	4,w	;XOR with final address
  1437  0810  1903               	btfsc	3,2	;have we reached the end yet?
  1438  0811  3400               	retlw	0	;all done for this memory range, return
  1439  0812  0604               	xorwf	4,w	;XOR again to restore value
  1440  0813  280D               	goto	clrloop0	;do the next byte
  1441                           
  1442                           	psect	cstackBANK1
  1443  00A0                     __pcstackBANK1:
  1444  00A0                     ?_eval_poly:
  1445  00A0                     ?___fltol:	
  1446                           ; 4 bytes @ 0x0
  1447                           
  1448  00A0                     ?___fldiv:	
  1449                           ; 4 bytes @ 0x0
  1450                           
  1451  00A0                     ___fltol@f1:	
  1452                           ; 4 bytes @ 0x0
  1453                           
  1454  00A0                     ___fldiv@a:	
  1455                           ; 4 bytes @ 0x0
  1456                           
  1457  00A0                     eval_poly@x:	
  1458                           ; 4 bytes @ 0x0
  1459                           
  1460                           
  1461                           ; 4 bytes @ 0x0
  1462  00A0                     	ds	4
  1463  00A4                     ??___fltol:
  1464  00A4                     eval_poly@d:	
  1465                           ; 1 bytes @ 0x4
  1466                           
  1467  00A4                     ___fldiv@b:	
  1468                           ; 1 bytes @ 0x4
  1469                           
  1470                           
  1471                           ; 4 bytes @ 0x4
  1472  00A4                     	ds	1
  1473  00A5                     eval_poly@n:
  1474                           
  1475                           ; 2 bytes @ 0x5
  1476  00A5                     	ds	2
  1477  00A7                     ??_eval_poly:
  1478                           
  1479                           ; 1 bytes @ 0x7
  1480  00A7                     	ds	1
  1481  00A8                     ?_USART_put_int:
  1482  00A8                     ?_EEPROM_24C1025_Write_Int:	
  1483                           ; 1 bytes @ 0x8
  1484                           
  1485  00A8                     ??___fldiv:	
  1486                           ; 1 bytes @ 0x8
  1487                           
  1488  00A8                     USART_put_int@value:	
  1489                           ; 1 bytes @ 0x8
  1490                           
  1491  00A8                     EEPROM_24C1025_Write_Int@mem_add:	
  1492                           ; 2 bytes @ 0x8
  1493                           
  1494                           
  1495                           ; 4 bytes @ 0x8
  1496  00A8                     	ds	2
  1497  00AA                     ?_PROCULUS_Control_Register_Write:
  1498  00AA                     ?_PROCULUS_VP_Write:	
  1499                           ; 1 bytes @ 0xA
  1500                           
  1501  00AA                     PROCULUS_Control_Register_Write@size:	
  1502                           ; 1 bytes @ 0xA
  1503                           
  1504  00AA                     PROCULUS_VP_Write@vp:	
  1505                           ; 1 bytes @ 0xA
  1506                           
  1507                           
  1508                           ; 2 bytes @ 0xA
  1509  00AA                     	ds	1
  1510  00AB                     ??_PROCULUS_Control_Register_Write:
  1511                           
  1512                           ; 1 bytes @ 0xB
  1513  00AB                     	ds	1
  1514  00AC                     PROCULUS_Control_Register_Write@vetor:
  1515  00AC                     EEPROM_24C1025_Write_Int@data:	
  1516                           ; 1 bytes @ 0xC
  1517                           
  1518  00AC                     PROCULUS_VP_Write@vetor:	
  1519                           ; 2 bytes @ 0xC
  1520                           
  1521  00AC                     ___fldiv@rem:	
  1522                           ; 2 bytes @ 0xC
  1523                           
  1524  00AC                     eval_poly@res:	
  1525                           ; 4 bytes @ 0xC
  1526                           
  1527                           
  1528                           ; 4 bytes @ 0xC
  1529  00AC                     	ds	1
  1530  00AD                     PROCULUS_Control_Register_Write@i:
  1531                           
  1532                           ; 1 bytes @ 0xD
  1533  00AD                     	ds	1
  1534  00AE                     ?_PROCULUS_Show_Screen:
  1535  00AE                     ?_PROCULUS_Buzzer:	
  1536                           ; 1 bytes @ 0xE
  1537                           
  1538  00AE                     EEPROM_24C1025_Write_Int@chip_add:	
  1539                           ; 1 bytes @ 0xE
  1540                           
  1541  00AE                     PROCULUS_VP_Write@size:	
  1542                           ; 1 bytes @ 0xE
  1543                           
  1544  00AE                     PROCULUS_Buzzer@time_ms_x_10:	
  1545                           ; 1 bytes @ 0xE
  1546                           
  1547  00AE                     PROCULUS_Show_Screen@screen:	
  1548                           ; 2 bytes @ 0xE
  1549                           
  1550                           
  1551                           ; 2 bytes @ 0xE
  1552  00AE                     	ds	1
  1553  00AF                     ??_PROCULUS_VP_Write:
  1554  00AF                     EEPROM_24C1025_Write_Int@local:	
  1555                           ; 1 bytes @ 0xF
  1556                           
  1557                           
  1558                           ; 2 bytes @ 0xF
  1559  00AF                     	ds	1
  1560  00B0                     ?_log:
  1561  00B0                     ___fldiv@sign:	
  1562                           ; 4 bytes @ 0x10
  1563                           
  1564  00B0                     PROCULUS_Buzzer@vetor:	
  1565                           ; 1 bytes @ 0x10
  1566                           
  1567  00B0                     PROCULUS_Show_Screen@vetor:	
  1568                           ; 2 bytes @ 0x10
  1569                           
  1570  00B0                     log@x:	
  1571                           ; 3 bytes @ 0x10
  1572                           
  1573                           
  1574                           ; 4 bytes @ 0x10
  1575  00B0                     	ds	1
  1576  00B1                     ?_Save_Log:
  1577  00B1                     ?_EEPROM_24C1025_Fill_All:	
  1578                           ; 1 bytes @ 0x11
  1579                           
  1580  00B1                     PROCULUS_VP_Write@i:	
  1581                           ; 1 bytes @ 0x11
  1582                           
  1583  00B1                     EEPROM_24C1025_Fill_All@value:	
  1584                           ; 1 bytes @ 0x11
  1585                           
  1586  00B1                     ___fldiv@new_exp:	
  1587                           ; 2 bytes @ 0x11
  1588                           
  1589  00B1                     Save_Log@add_datalog:	
  1590                           ; 2 bytes @ 0x11
  1591                           
  1592                           
  1593                           ; 4 bytes @ 0x11
  1594  00B1                     	ds	1
  1595  00B2                     ?_PROCULUS_VP_Write_String:
  1596  00B2                     PROCULUS_VP_Write_String@vp:	
  1597                           ; 1 bytes @ 0x12
  1598                           
  1599                           
  1600                           ; 2 bytes @ 0x12
  1601  00B2                     	ds	1
  1602  00B3                     EEPROM_24C1025_Fill_All@chip_add:
  1603  00B3                     ___fldiv@grs:	
  1604                           ; 1 bytes @ 0x13
  1605                           
  1606                           
  1607                           ; 4 bytes @ 0x13
  1608  00B3                     	ds	1
  1609  00B4                     PROCULUS_VP_Write_String@text:
  1610  00B4                     EEPROM_24C1025_Fill_All@mem_add:	
  1611                           ; 1 bytes @ 0x14
  1612                           
  1613                           
  1614                           ; 4 bytes @ 0x14
  1615  00B4                     	ds	3
  1616  00B7                     ___fldiv@bexp:
  1617                           
  1618                           ; 1 bytes @ 0x17
  1619  00B7                     	ds	1
  1620  00B8                     ___fldiv@aexp:
  1621                           
  1622                           ; 1 bytes @ 0x18
  1623  00B8                     	ds	1
  1624  00B9                     ??_Load_Work:
  1625  00B9                     ?_ADC_Read_NTC:	
  1626                           ; 1 bytes @ 0x19
  1627                           
  1628                           
  1629                           ; 4 bytes @ 0x19
  1630  00B9                     	ds	4
  1631  00BD                     ??_Decodify_Command:
  1632  00BD                     ADC_Read_NTC@calc:	
  1633                           ; 1 bytes @ 0x1D
  1634                           
  1635                           
  1636                           ; 4 bytes @ 0x1D
  1637  00BD                     	ds	2
  1638  00BF                     Decodify_Command@dados:
  1639                           
  1640                           ; 2 bytes @ 0x1F
  1641  00BF                     	ds	2
  1642  00C1                     Decodify_Command@add:
  1643  00C1                     ADC_Read_NTC@B:	
  1644                           ; 1 bytes @ 0x21
  1645                           
  1646                           
  1647                           ; 2 bytes @ 0x21
  1648  00C1                     	ds	1
  1649  00C2                     Decodify_Command@sizedata:
  1650                           
  1651                           ; 1 bytes @ 0x22
  1652  00C2                     	ds	1
  1653  00C3                     Decodify_Command@tempint:
  1654  00C3                     ADC_Read_NTC@resistencia:	
  1655                           ; 2 bytes @ 0x23
  1656                           
  1657                           
  1658                           ; 4 bytes @ 0x23
  1659  00C3                     	ds	2
  1660  00C5                     Decodify_Command@OutPut:
  1661                           
  1662                           ; 4 bytes @ 0x25
  1663  00C5                     	ds	2
  1664  00C7                     ADC_Read_NTC@i:
  1665                           
  1666                           ; 1 bytes @ 0x27
  1667  00C7                     	ds	1
  1668  00C8                     ADC_Read_NTC@value:
  1669                           
  1670                           ; 2 bytes @ 0x28
  1671  00C8                     	ds	1
  1672  00C9                     Decodify_Command@tempchar:
  1673                           
  1674                           ; 1 bytes @ 0x29
  1675  00C9                     	ds	1
  1676  00CA                     Decodify_Command@add_24LCxxxx:
  1677  00CA                     ADC_Read_NTC@temperatura:	
  1678                           ; 4 bytes @ 0x2A
  1679                           
  1680                           
  1681                           ; 4 bytes @ 0x2A
  1682  00CA                     	ds	4
  1683  00CE                     _mediatemperaturaNTC$2351:
  1684                           
  1685                           ; 4 bytes @ 0x2E
  1686  00CE                     	ds	4
  1687  00D2                     mediatemperaturaNTC@canal:
  1688                           
  1689                           ; 1 bytes @ 0x32
  1690  00D2                     	ds	1
  1691  00D3                     mediatemperaturaNTC@Temp:
  1692                           
  1693                           ; 4 bytes @ 0x33
  1694  00D3                     	ds	4
  1695  00D7                     mediatemperaturaNTC@i:
  1696                           
  1697                           ; 1 bytes @ 0x37
  1698  00D7                     	ds	1
  1699  00D8                     ??_main:
  1700                           
  1701                           ; 1 bytes @ 0x38
  1702  00D8                     	ds	3
  1703  00DB                     main@reset:
  1704                           
  1705                           ; 2 bytes @ 0x3B
  1706  00DB                     	ds	2
  1707                           
  1708                           	psect	cstackCOMMON
  1709  0076                     __pcstackCOMMON:
  1710  0076                     ?_I2C_Master_Start:
  1711  0076                     ?_I2C_Master_Stop:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714  0076                     ?_I2C_Master_RepeatedStart:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717  0076                     ?_USART_putc:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720  0076                     ?_ADC_init:	
  1721                           ; 1 bytes @ 0x0
  1722                           
  1723  0076                     ?_Load_Work:	
  1724                           ; 1 bytes @ 0x0
  1725                           
  1726  0076                     ?_mediatemperaturaNTC:	
  1727                           ; 1 bytes @ 0x0
  1728                           
  1729  0076                     ?_Auto_Relay0:	
  1730                           ; 1 bytes @ 0x0
  1731                           
  1732  0076                     ?_Auto_Relay1:	
  1733                           ; 1 bytes @ 0x0
  1734                           
  1735  0076                     ?_Decodify_Command:	
  1736                           ; 1 bytes @ 0x0
  1737                           
  1738  0076                     ?_USART_to_Protocol:	
  1739                           ; 1 bytes @ 0x0
  1740                           
  1741  0076                     ?_Send_To_MB:	
  1742                           ; 1 bytes @ 0x0
  1743                           
  1744  0076                     ?_Send_Reply_OK:	
  1745                           ; 1 bytes @ 0x0
  1746                           
  1747  0076                     ?_EEPROM_Read_Byte:	
  1748                           ; 1 bytes @ 0x0
  1749                           
  1750  0076                     ?_Package_Usart_is_for_me:	
  1751                           ; 1 bytes @ 0x0
  1752                           
  1753  0076                     ?_Rele0Ligado:	
  1754                           ; 1 bytes @ 0x0
  1755                           
  1756  0076                     ?_Rele1Ligado:	
  1757                           ; 1 bytes @ 0x0
  1758                           
  1759  0076                     ?_Rele0Desligado:	
  1760                           ; 1 bytes @ 0x0
  1761                           
  1762  0076                     ?_Rele1Desligado:	
  1763                           ; 1 bytes @ 0x0
  1764                           
  1765  0076                     ?_I2C_Master_Wait:	
  1766                           ; 1 bytes @ 0x0
  1767                           
  1768  0076                     ?_main:	
  1769                           ; 1 bytes @ 0x0
  1770                           
  1771  0076                     ?_isr:	
  1772                           ; 1 bytes @ 0x0
  1773                           
  1774  0076                     ??_isr:	
  1775                           ; 1 bytes @ 0x0
  1776                           
  1777  0076                     ADC_Read_NTC@canal:	
  1778                           ; 1 bytes @ 0x0
  1779                           
  1780                           
  1781                           ; 1 bytes @ 0x0
  1782  0076                     	ds	4
  1783  007A                     isr@tempo:
  1784                           
  1785                           ; 2 bytes @ 0x4
  1786  007A                     	ds	2
  1787                           
  1788                           	psect	cstackBANK0
  1789  0020                     __pcstackBANK0:
  1790  0020                     ?___fleq:
  1791  0020                     ?_my_delay_ms_WDT:	
  1792                           ; 1 bit 
  1793                           
  1794  0020                     ??_USART_putc:	
  1795                           ; 1 bytes @ 0x0
  1796                           
  1797  0020                     ??_ADC_init:	
  1798                           ; 1 bytes @ 0x0
  1799                           
  1800  0020                     ?_USART_init:	
  1801                           ; 1 bytes @ 0x0
  1802                           
  1803  0020                     ??_USART_to_Protocol:	
  1804                           ; 1 bytes @ 0x0
  1805                           
  1806  0020                     ?_strcpy:	
  1807                           ; 1 bytes @ 0x0
  1808                           
  1809  0020                     ?_EEPROM_Write_Byte:	
  1810                           ; 1 bytes @ 0x0
  1811                           
  1812  0020                     ??_EEPROM_Read_Byte:	
  1813                           ; 1 bytes @ 0x0
  1814                           
  1815  0020                     ?_my_delay_ms:	
  1816                           ; 1 bytes @ 0x0
  1817                           
  1818  0020                     ??_Package_Usart_is_for_me:	
  1819                           ; 1 bytes @ 0x0
  1820                           
  1821  0020                     ??_Rele0Ligado:	
  1822                           ; 1 bytes @ 0x0
  1823                           
  1824  0020                     ??_Rele1Ligado:	
  1825                           ; 1 bytes @ 0x0
  1826                           
  1827  0020                     ??_Rele0Desligado:	
  1828                           ; 1 bytes @ 0x0
  1829                           
  1830  0020                     ??_Rele1Desligado:	
  1831                           ; 1 bytes @ 0x0
  1832                           
  1833  0020                     ?_PROCULUS_Delay:	
  1834                           ; 1 bytes @ 0x0
  1835                           
  1836  0020                     ??_I2C_Master_Wait:	
  1837                           ; 1 bytes @ 0x0
  1838                           
  1839  0020                     ?_strlen:	
  1840                           ; 1 bytes @ 0x0
  1841                           
  1842  0020                     ?_captura:	
  1843                           ; 2 bytes @ 0x0
  1844                           
  1845  0020                     ?__Umul8_16:	
  1846                           ; 2 bytes @ 0x0
  1847                           
  1848  0020                     ?___lwdiv:	
  1849                           ; 2 bytes @ 0x0
  1850                           
  1851  0020                     ?___lldiv:	
  1852                           ; 2 bytes @ 0x0
  1853                           
  1854  0020                     EEPROM_Write_Byte@dado:	
  1855                           ; 4 bytes @ 0x0
  1856                           
  1857  0020                     Package_Usart_is_for_me@retorno:	
  1858                           ; 1 bytes @ 0x0
  1859                           
  1860  0020                     USART_putc@value:	
  1861                           ; 1 bytes @ 0x0
  1862                           
  1863  0020                     __Umul8_16@multiplicand:	
  1864                           ; 1 bytes @ 0x0
  1865                           
  1866  0020                     strcpy@from:	
  1867                           ; 1 bytes @ 0x0
  1868                           
  1869  0020                     PROCULUS_Delay@tempo_ms:	
  1870                           ; 1 bytes @ 0x0
  1871                           
  1872  0020                     ___lwdiv@divisor:	
  1873                           ; 2 bytes @ 0x0
  1874                           
  1875  0020                     my_delay_ms@time:	
  1876                           ; 2 bytes @ 0x0
  1877                           
  1878  0020                     my_delay_ms_WDT@time:	
  1879                           ; 4 bytes @ 0x0
  1880                           
  1881  0020                     USART_init@baudrate:	
  1882                           ; 4 bytes @ 0x0
  1883                           
  1884  0020                     ___lldiv@divisor:	
  1885                           ; 4 bytes @ 0x0
  1886                           
  1887  0020                     ___fleq@ff1:	
  1888                           ; 4 bytes @ 0x0
  1889                           
  1890                           
  1891                           ; 4 bytes @ 0x0
  1892  0020                     	ds	1
  1893  0021                     ??_strcpy:
  1894  0021                     ??_Send_To_MB:	
  1895                           ; 1 bytes @ 0x1
  1896                           
  1897  0021                     ?_USART_put_string:	
  1898                           ; 1 bytes @ 0x1
  1899                           
  1900  0021                     ??_EEPROM_Write_Byte:	
  1901                           ; 1 bytes @ 0x1
  1902                           
  1903  0021                     Send_To_MB@size:	
  1904                           ; 1 bytes @ 0x1
  1905                           
  1906  0021                     USART_put_string@vetor:	
  1907                           ; 1 bytes @ 0x1
  1908                           
  1909                           
  1910                           ; 2 bytes @ 0x1
  1911  0021                     	ds	1
  1912  0022                     ??_strlen:
  1913  0022                     ??_captura:	
  1914                           ; 1 bytes @ 0x2
  1915                           
  1916  0022                     ??_PROCULUS_Delay:	
  1917                           ; 1 bytes @ 0x2
  1918                           
  1919  0022                     ??__Umul8_16:	
  1920                           ; 1 bytes @ 0x2
  1921                           
  1922  0022                     I2C_Master_Wait@tempo:	
  1923                           ; 1 bytes @ 0x2
  1924                           
  1925  0022                     EEPROM_Read_Byte@addr:	
  1926                           ; 1 bytes @ 0x2
  1927                           
  1928  0022                     strcpy@to:	
  1929                           ; 1 bytes @ 0x2
  1930                           
  1931  0022                     strlen@s:	
  1932                           ; 1 bytes @ 0x2
  1933                           
  1934  0022                     USART_to_Protocol@i:	
  1935                           ; 1 bytes @ 0x2
  1936                           
  1937  0022                     ___lwdiv@dividend:	
  1938                           ; 2 bytes @ 0x2
  1939                           
  1940  0022                     __Umul8_16@product:	
  1941                           ; 2 bytes @ 0x2
  1942                           
  1943                           
  1944                           ; 2 bytes @ 0x2
  1945  0022                     	ds	1
  1946  0023                     ??_I2C_Master_Start:
  1947  0023                     ?_I2C_Master_Write:	
  1948                           ; 1 bytes @ 0x3
  1949                           
  1950  0023                     ??_I2C_Master_Stop:	
  1951                           ; 1 bytes @ 0x3
  1952                           
  1953  0023                     ??_I2C_Master_RepeatedStart:	
  1954                           ; 1 bytes @ 0x3
  1955                           
  1956  0023                     ??_USART_put_string:	
  1957                           ; 1 bytes @ 0x3
  1958                           
  1959  0023                     ?_EEPROM_Read_String:	
  1960                           ; 1 bytes @ 0x3
  1961                           
  1962  0023                     ?_I2C_Master_Read:	
  1963                           ; 1 bytes @ 0x3
  1964                           
  1965  0023                     ?_EEPROM_Read_Integer:	
  1966                           ; 2 bytes @ 0x3
  1967                           
  1968  0023                     EEPROM_Write_Byte@addr:	
  1969                           ; 2 bytes @ 0x3
  1970                           
  1971  0023                     EEPROM_Read_String@dado:	
  1972                           ; 1 bytes @ 0x3
  1973                           
  1974  0023                     strcpy@cp:	
  1975                           ; 1 bytes @ 0x3
  1976                           
  1977  0023                     strlen@cp:	
  1978                           ; 1 bytes @ 0x3
  1979                           
  1980  0023                     I2C_Master_Write@d:	
  1981                           ; 1 bytes @ 0x3
  1982                           
  1983  0023                     I2C_Master_Read@a:	
  1984                           ; 2 bytes @ 0x3
  1985                           
  1986  0023                     USART_put_string@ptr:	
  1987                           ; 2 bytes @ 0x3
  1988                           
  1989                           
  1990                           ; 2 bytes @ 0x3
  1991  0023                     	ds	1
  1992  0024                     ??_my_delay_ms_WDT:
  1993  0024                     ??_USART_init:	
  1994                           ; 1 bytes @ 0x4
  1995                           
  1996  0024                     ??_EEPROM_Read_String:	
  1997                           ; 1 bytes @ 0x4
  1998                           
  1999  0024                     ??_my_delay_ms:	
  2000                           ; 1 bytes @ 0x4
  2001                           
  2002  0024                     ??___lwdiv:	
  2003                           ; 1 bytes @ 0x4
  2004                           
  2005  0024                     EEPROM_Write_Byte@last_GIE:	
  2006                           ; 1 bytes @ 0x4
  2007                           
  2008  0024                     EEPROM_Read_String@addr:	
  2009                           ; 1 bytes @ 0x4
  2010                           
  2011  0024                     USART_init@i:	
  2012                           ; 1 bytes @ 0x4
  2013                           
  2014  0024                     USART_to_Protocol@usart_protocol:	
  2015                           ; 1 bytes @ 0x4
  2016                           
  2017  0024                     ___lwdiv@counter:	
  2018                           ; 1 bytes @ 0x4
  2019                           
  2020  0024                     PROCULUS_Delay@i:	
  2021                           ; 1 bytes @ 0x4
  2022                           
  2023  0024                     __Umul8_16@word_mpld:	
  2024                           ; 2 bytes @ 0x4
  2025                           
  2026  0024                     ___lldiv@dividend:	
  2027                           ; 2 bytes @ 0x4
  2028                           
  2029  0024                     ___fleq@ff2:	
  2030                           ; 4 bytes @ 0x4
  2031                           
  2032                           
  2033                           ; 4 bytes @ 0x4
  2034  0024                     	ds	1
  2035  0025                     ??_I2C_Master_Write:
  2036  0025                     ??_I2C_Master_Read:	
  2037                           ; 1 bytes @ 0x5
  2038                           
  2039  0025                     ??_EEPROM_Read_Integer:	
  2040                           ; 1 bytes @ 0x5
  2041                           
  2042  0025                     ?_EEPROM_Write_Integer:	
  2043                           ; 1 bytes @ 0x5
  2044                           
  2045  0025                     ??_Send_Reply_OK:	
  2046                           ; 1 bytes @ 0x5
  2047                           
  2048  0025                     ?_EEPROM_Write_String:	
  2049                           ; 1 bytes @ 0x5
  2050                           
  2051  0025                     EEPROM_Read_Integer@addr:	
  2052                           ; 1 bytes @ 0x5
  2053                           
  2054  0025                     EEPROM_Write_String@dado:	
  2055                           ; 1 bytes @ 0x5
  2056                           
  2057  0025                     EEPROM_Read_String@c:	
  2058                           ; 1 bytes @ 0x5
  2059                           
  2060  0025                     I2C_Master_Read@temp:	
  2061                           ; 1 bytes @ 0x5
  2062                           
  2063  0025                     EEPROM_Write_Integer@dado:	
  2064                           ; 2 bytes @ 0x5
  2065                           
  2066  0025                     ___lwdiv@quotient:	
  2067                           ; 2 bytes @ 0x5
  2068                           
  2069                           
  2070                           ; 2 bytes @ 0x5
  2071  0025                     	ds	1
  2072  0026                     ??_EEPROM_Write_String:
  2073  0026                     EEPROM_Read_Integer@ptr:	
  2074                           ; 1 bytes @ 0x6
  2075                           
  2076  0026                     EEPROM_Write_String@addr:	
  2077                           ; 1 bytes @ 0x6
  2078                           
  2079  0026                     __Umul8_16@multiplier:	
  2080                           ; 1 bytes @ 0x6
  2081                           
  2082  0026                     my_delay_ms@i:	
  2083                           ; 1 bytes @ 0x6
  2084                           
  2085  0026                     my_delay_ms_WDT@i:	
  2086                           ; 4 bytes @ 0x6
  2087                           
  2088                           
  2089                           ; 4 bytes @ 0x6
  2090  0026                     	ds	1
  2091  0027                     ??_EEPROM_Write_Integer:
  2092  0027                     ?_EEPROM_24C1025_Read_Buffer_USART:	
  2093                           ; 1 bytes @ 0x7
  2094                           
  2095  0027                     ?_EEPROM_24C1025_Read_Str:	
  2096                           ; 1 bytes @ 0x7
  2097                           
  2098  0027                     EEPROM_Read_Integer@result:	
  2099                           ; 1 bytes @ 0x7
  2100                           
  2101  0027                     EEPROM_24C1025_Read_Buffer_USART@mem_add:	
  2102                           ; 2 bytes @ 0x7
  2103                           
  2104  0027                     EEPROM_24C1025_Read_Str@mem_add:	
  2105                           ; 4 bytes @ 0x7
  2106                           
  2107                           
  2108                           ; 4 bytes @ 0x7
  2109  0027                     	ds	1
  2110  0028                     ??___lldiv:
  2111  0028                     ??___fleq:	
  2112                           ; 1 bytes @ 0x8
  2113                           
  2114  0028                     ___lldiv@quotient:	
  2115                           ; 1 bytes @ 0x8
  2116                           
  2117                           
  2118                           ; 4 bytes @ 0x8
  2119  0028                     	ds	1
  2120  0029                     EEPROM_Write_Integer@addr:
  2121  0029                     EEPROM_Read_Integer@i:	
  2122                           ; 1 bytes @ 0x9
  2123                           
  2124                           
  2125                           ; 1 bytes @ 0x9
  2126  0029                     	ds	1
  2127  002A                     ?_EEPROM_24C1025_Write_Buffer:
  2128  002A                     ?_EEPROM_24C1025_Read_Buffer:	
  2129                           ; 1 bytes @ 0xA
  2130                           
  2131  002A                     ?_EEPROM_24C1025_Write_Str:	
  2132                           ; 1 bytes @ 0xA
  2133                           
  2134  002A                     ?___xxtofl:	
  2135                           ; 1 bytes @ 0xA
  2136                           
  2137  002A                     EEPROM_Write_Integer@ptr:	
  2138                           ; 4 bytes @ 0xA
  2139                           
  2140  002A                     EEPROM_24C1025_Write_Buffer@mem_add:	
  2141                           ; 1 bytes @ 0xA
  2142                           
  2143  002A                     EEPROM_24C1025_Read_Buffer@mem_add:	
  2144                           ; 4 bytes @ 0xA
  2145                           
  2146  002A                     EEPROM_24C1025_Write_Str@mem_add:	
  2147                           ; 4 bytes @ 0xA
  2148                           
  2149  002A                     ___xxtofl@val:	
  2150                           ; 4 bytes @ 0xA
  2151                           
  2152                           
  2153                           ; 4 bytes @ 0xA
  2154  002A                     	ds	1
  2155  002B                     EEPROM_24C1025_Read_Buffer_USART@sizedata:
  2156  002B                     EEPROM_24C1025_Read_Str@buffer:	
  2157                           ; 1 bytes @ 0xB
  2158                           
  2159  002B                     EEPROM_Write_Integer@i:	
  2160                           ; 1 bytes @ 0xB
  2161                           
  2162                           
  2163                           ; 1 bytes @ 0xB
  2164  002B                     	ds	1
  2165  002C                     ??_EEPROM_24C1025_Read_Str:
  2166  002C                     ?_frexp:	
  2167                           ; 1 bytes @ 0xC
  2168                           
  2169  002C                     EEPROM_24C1025_Read_Buffer_USART@data:	
  2170                           ; 4 bytes @ 0xC
  2171                           
  2172  002C                     ___lldiv@counter:	
  2173                           ; 1 bytes @ 0xC
  2174                           
  2175  002C                     frexp@value:	
  2176                           ; 1 bytes @ 0xC
  2177                           
  2178                           
  2179                           ; 4 bytes @ 0xC
  2180  002C                     	ds	1
  2181  002D                     ??_EEPROM_24C1025_Read_Buffer_USART:
  2182  002D                     ?_I2C_Master_Init:	
  2183                           ; 1 bytes @ 0xD
  2184                           
  2185  002D                     I2C_Master_Init@c:	
  2186                           ; 1 bytes @ 0xD
  2187                           
  2188                           
  2189                           ; 4 bytes @ 0xD
  2190  002D                     	ds	1
  2191  002E                     ??___xxtofl:
  2192  002E                     EEPROM_24C1025_Write_Buffer@sizedata:	
  2193                           ; 1 bytes @ 0xE
  2194                           
  2195  002E                     EEPROM_24C1025_Read_Buffer@sizedata:	
  2196                           ; 1 bytes @ 0xE
  2197                           
  2198  002E                     EEPROM_24C1025_Read_Buffer_USART@cnt_117:	
  2199                           ; 1 bytes @ 0xE
  2200                           
  2201  002E                     EEPROM_24C1025_Write_Str@data:	
  2202                           ; 1 bytes @ 0xE
  2203                           
  2204  002E                     EEPROM_24C1025_Read_Str@cnt:	
  2205                           ; 1 bytes @ 0xE
  2206                           
  2207                           
  2208                           ; 1 bytes @ 0xE
  2209  002E                     	ds	1
  2210  002F                     ??_EEPROM_24C1025_Write_Str:
  2211  002F                     EEPROM_24C1025_Read_Buffer@data:	
  2212                           ; 1 bytes @ 0xF
  2213                           
  2214  002F                     EEPROM_24C1025_Read_Buffer_USART@chip_add:	
  2215                           ; 1 bytes @ 0xF
  2216                           
  2217  002F                     EEPROM_24C1025_Write_Str@chip_add:	
  2218                           ; 1 bytes @ 0xF
  2219                           
  2220  002F                     EEPROM_24C1025_Read_Str@chip_add:	
  2221                           ; 1 bytes @ 0xF
  2222                           
  2223  002F                     EEPROM_24C1025_Write_Buffer@data:	
  2224                           ; 1 bytes @ 0xF
  2225                           
  2226                           
  2227                           ; 2 bytes @ 0xF
  2228  002F                     	ds	1
  2229  0030                     ??_EEPROM_24C1025_Read_Buffer:
  2230  0030                     EEPROM_24C1025_Read_Buffer_USART@range:	
  2231                           ; 1 bytes @ 0x10
  2232                           
  2233  0030                     EEPROM_24C1025_Write_Str@range:	
  2234                           ; 1 bytes @ 0x10
  2235                           
  2236  0030                     EEPROM_24C1025_Read_Str@range:	
  2237                           ; 1 bytes @ 0x10
  2238                           
  2239  0030                     frexp@eptr:	
  2240                           ; 1 bytes @ 0x10
  2241                           
  2242                           
  2243                           ; 1 bytes @ 0x10
  2244  0030                     	ds	1
  2245  0031                     ??_frexp:
  2246  0031                     ??_EEPROM_24C1025_Write_Buffer:	
  2247                           ; 1 bytes @ 0x11
  2248                           
  2249  0031                     ??_I2C_Master_Init:	
  2250                           ; 1 bytes @ 0x11
  2251                           
  2252  0031                     EEPROM_24C1025_Read_Buffer@cnt_108:	
  2253                           ; 1 bytes @ 0x11
  2254                           
  2255  0031                     EEPROM_24C1025_Read_Buffer_USART@ctrl:	
  2256                           ; 1 bytes @ 0x11
  2257                           
  2258  0031                     EEPROM_24C1025_Write_Str@ctrl:	
  2259                           ; 1 bytes @ 0x11
  2260                           
  2261  0031                     EEPROM_24C1025_Read_Str@ctrl:	
  2262                           ; 1 bytes @ 0x11
  2263                           
  2264                           
  2265                           ; 1 bytes @ 0x11
  2266  0031                     	ds	1
  2267  0032                     EEPROM_24C1025_Read_Buffer@chip_add:
  2268  0032                     ___xxtofl@sign:	
  2269                           ; 1 bytes @ 0x12
  2270                           
  2271                           
  2272                           ; 1 bytes @ 0x12
  2273  0032                     	ds	1
  2274  0033                     EEPROM_24C1025_Write_Buffer@count:
  2275  0033                     EEPROM_24C1025_Read_Buffer@range:	
  2276                           ; 1 bytes @ 0x13
  2277                           
  2278  0033                     ___xxtofl@exp:	
  2279                           ; 1 bytes @ 0x13
  2280                           
  2281                           
  2282                           ; 1 bytes @ 0x13
  2283  0033                     	ds	1
  2284  0034                     EEPROM_24C1025_Write_Buffer@chip_add:
  2285  0034                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2286                           ; 1 bytes @ 0x14
  2287                           
  2288  0034                     ___xxtofl@arg:	
  2289                           ; 1 bytes @ 0x14
  2290                           
  2291                           
  2292                           ; 4 bytes @ 0x14
  2293  0034                     	ds	1
  2294  0035                     ?_EEPROM_24C1025_Read_Byte:
  2295  0035                     ?_EEPROM_24C1025_Read_Int:	
  2296                           ; 1 bytes @ 0x15
  2297                           
  2298  0035                     EEPROM_24C1025_Write_Buffer@range:	
  2299                           ; 2 bytes @ 0x15
  2300                           
  2301  0035                     EEPROM_24C1025_Read_Byte@mem_add:	
  2302                           ; 1 bytes @ 0x15
  2303                           
  2304  0035                     EEPROM_24C1025_Read_Int@mem_add:	
  2305                           ; 4 bytes @ 0x15
  2306                           
  2307                           
  2308                           ; 4 bytes @ 0x15
  2309  0035                     	ds	1
  2310  0036                     EEPROM_24C1025_Write_Buffer@ctrl:
  2311                           
  2312                           ; 1 bytes @ 0x16
  2313  0036                     	ds	1
  2314  0037                     ?_EEPROM_24C1025_Write_Byte:
  2315  0037                     EEPROM_24C1025_Write_Byte@mem_add:	
  2316                           ; 1 bytes @ 0x17
  2317                           
  2318                           
  2319                           ; 4 bytes @ 0x17
  2320  0037                     	ds	1
  2321  0038                     ?___fladd:
  2322  0038                     ___fladd@b:	
  2323                           ; 4 bytes @ 0x18
  2324                           
  2325                           
  2326                           ; 4 bytes @ 0x18
  2327  0038                     	ds	1
  2328  0039                     ??_EEPROM_24C1025_Read_Byte:
  2329  0039                     ??_EEPROM_24C1025_Read_Int:	
  2330                           ; 1 bytes @ 0x19
  2331                           
  2332  0039                     EEPROM_24C1025_Read_Byte@chip_add:	
  2333                           ; 1 bytes @ 0x19
  2334                           
  2335  0039                     EEPROM_24C1025_Read_Int@chip_add:	
  2336                           ; 1 bytes @ 0x19
  2337                           
  2338                           
  2339                           ; 1 bytes @ 0x19
  2340  0039                     	ds	1
  2341  003A                     EEPROM_24C1025_Read_Byte@data:
  2342  003A                     EEPROM_24C1025_Read_Int@data:	
  2343                           ; 1 bytes @ 0x1A
  2344                           
  2345                           
  2346                           ; 2 bytes @ 0x1A
  2347  003A                     	ds	1
  2348  003B                     EEPROM_24C1025_Write_Byte@data:
  2349                           
  2350                           ; 1 bytes @ 0x1B
  2351  003B                     	ds	1
  2352  003C                     ??_EEPROM_24C1025_Write_Byte:
  2353  003C                     EEPROM_24C1025_Write_Byte@chip_add:	
  2354                           ; 1 bytes @ 0x1C
  2355                           
  2356  003C                     ___fladd@a:	
  2357                           ; 1 bytes @ 0x1C
  2358                           
  2359                           
  2360                           ; 4 bytes @ 0x1C
  2361  003C                     	ds	4
  2362  0040                     ??___fladd:
  2363                           
  2364                           ; 1 bytes @ 0x20
  2365  0040                     	ds	8
  2366  0048                     ___fladd@signs:
  2367                           
  2368                           ; 1 bytes @ 0x28
  2369  0048                     	ds	1
  2370  0049                     ___fladd@aexp:
  2371                           
  2372                           ; 1 bytes @ 0x29
  2373  0049                     	ds	1
  2374  004A                     ___fladd@bexp:
  2375                           
  2376                           ; 1 bytes @ 0x2A
  2377  004A                     	ds	1
  2378  004B                     ___fladd@grs:
  2379                           
  2380                           ; 1 bytes @ 0x2B
  2381  004B                     	ds	1
  2382  004C                     ?___flsub:
  2383  004C                     ___flsub@a:	
  2384                           ; 4 bytes @ 0x2C
  2385                           
  2386                           
  2387                           ; 4 bytes @ 0x2C
  2388  004C                     	ds	4
  2389  0050                     ___flsub@b:
  2390                           
  2391                           ; 4 bytes @ 0x30
  2392  0050                     	ds	4
  2393  0054                     ?___flge:
  2394  0054                     ??___flsub:	
  2395                           ; 1 bit 
  2396                           
  2397  0054                     ?___flmul:	
  2398                           ; 1 bytes @ 0x34
  2399                           
  2400  0054                     ___flge@ff1:	
  2401                           ; 4 bytes @ 0x34
  2402                           
  2403  0054                     ___flmul@b:	
  2404                           ; 4 bytes @ 0x34
  2405                           
  2406                           
  2407                           ; 4 bytes @ 0x34
  2408  0054                     	ds	4
  2409  0058                     ___flge@ff2:
  2410  0058                     ___flmul@a:	
  2411                           ; 4 bytes @ 0x38
  2412                           
  2413                           
  2414                           ; 4 bytes @ 0x38
  2415  0058                     	ds	4
  2416  005C                     ??___flge:
  2417  005C                     ??___flmul:	
  2418                           ; 1 bytes @ 0x3C
  2419                           
  2420                           
  2421                           ; 1 bytes @ 0x3C
  2422  005C                     	ds	4
  2423  0060                     ??_Auto_Relay0:
  2424  0060                     ??_Auto_Relay1:	
  2425                           ; 1 bytes @ 0x40
  2426                           
  2427  0060                     ___flmul@sign:	
  2428                           ; 1 bytes @ 0x40
  2429                           
  2430                           
  2431                           ; 1 bytes @ 0x40
  2432  0060                     	ds	1
  2433  0061                     ___flmul@aexp:
  2434                           
  2435                           ; 1 bytes @ 0x41
  2436  0061                     	ds	1
  2437  0062                     ___flmul@bexp:
  2438                           
  2439                           ; 1 bytes @ 0x42
  2440  0062                     	ds	1
  2441  0063                     ___flmul@grs:
  2442                           
  2443                           ; 4 bytes @ 0x43
  2444  0063                     	ds	4
  2445  0067                     ___flmul@prod:
  2446                           
  2447                           ; 4 bytes @ 0x47
  2448  0067                     	ds	4
  2449  006B                     ___flmul@temp:
  2450                           
  2451                           ; 2 bytes @ 0x4B
  2452  006B                     	ds	2
  2453  006D                     ??_log:
  2454  006D                     ___fltol@sign1:	
  2455                           ; 1 bytes @ 0x4D
  2456                           
  2457  006D                     log@exponent:	
  2458                           ; 1 bytes @ 0x4D
  2459                           
  2460                           
  2461                           ; 2 bytes @ 0x4D
  2462  006D                     	ds	1
  2463  006E                     ___fltol@exp1:
  2464                           
  2465                           ; 1 bytes @ 0x4E
  2466  006E                     	ds	1
  2467  006F                     ??_mediatemperaturaNTC:
  2468  006F                     ??_USART_put_int:	
  2469                           ; 1 bytes @ 0x4F
  2470                           
  2471  006F                     ??_Save_Log:	
  2472                           ; 1 bytes @ 0x4F
  2473                           
  2474  006F                     ??_ADC_Read_NTC:	
  2475                           ; 1 bytes @ 0x4F
  2476                           
  2477  006F                     ??_EEPROM_24C1025_Write_Int:	
  2478                           ; 1 bytes @ 0x4F
  2479                           
  2480  006F                     ??_EEPROM_24C1025_Fill_All:	
  2481                           ; 1 bytes @ 0x4F
  2482                           
  2483  006F                     USART_put_int@dado:	
  2484                           ; 1 bytes @ 0x4F
  2485                           
  2486                           
  2487                           ; 1 bytes @ 0x4F
  2488  006F                     	ds	1
  2489  0070                     ??_PROCULUS_Show_Screen:
  2490  0070                     ??_PROCULUS_Buzzer:	
  2491                           ; 1 bytes @ 0x50
  2492                           
  2493  0070                     ??_PROCULUS_VP_Write_String:	
  2494                           ; 1 bytes @ 0x50
  2495                           
  2496                           
  2497                           	psect	maintext
  2498  0814                     __pmaintext:	
  2499                           ; 1 bytes @ 0x50
  2500 ;;
  2501 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2502 ;;
  2503 ;; *************** function _main *****************
  2504 ;; Defined at:
  2505 ;;		line 149 in file "SlaveLiofilizadorVer1.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;		None
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;  reset           2   59[BANK1 ] unsigned int 
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  1    wreg      void 
  2512 ;; Registers used:
  2513 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2514 ;; Tracked objects:
  2515 ;;		On entry : B00/0
  2516 ;;		On exit  : 300/100
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2519 ;;      Params:         0       0       0       0       0
  2520 ;;      Locals:         0       0       2       0       0
  2521 ;;      Temps:          0       0       3       0       0
  2522 ;;      Totals:         0       0       5       0       0
  2523 ;;Total ram usage:        5 bytes
  2524 ;; Hardware stack levels required when called: 7
  2525 ;; This function calls:
  2526 ;;		_ADC_init
  2527 ;;		_Auto_Relay0
  2528 ;;		_Auto_Relay1
  2529 ;;		_Decodify_Command
  2530 ;;		_EEPROM_Read_Integer
  2531 ;;		_EEPROM_Write_Integer
  2532 ;;		_I2C_Master_Init
  2533 ;;		_Load_Work
  2534 ;;		_USART_init
  2535 ;;		_mediatemperaturaNTC
  2536 ;;		_my_delay_ms_WDT
  2537 ;; This function is called by:
  2538 ;;		Startup code after reset
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           
  2543                           ;psect for function _main
  2544  0814                     _main:
  2545  0814                     l7330:	
  2546                           ;incstack = 0
  2547                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2548                           
  2549                           
  2550                           ;SlaveLiofilizadorVer1.c: 150:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2551  0814  3002               	movlw	2
  2552  0815  1683               	bsf	3,5	;RP0=1, select bank1
  2553  0816  1303               	bcf	3,6	;RP1=0, select bank1
  2554  0817  00DA               	movwf	(??_main^(0+128)+2)
  2555  0818  3004               	movlw	4
  2556  0819  00D9               	movwf	(??_main^(0+128)+1)
  2557  081A  30B9               	movlw	185
  2558  081B  00D8               	movwf	??_main^(0+128)
  2559  081C                     u6627:
  2560  081C  0BD8               	decfsz	??_main^(0+128),f
  2561  081D  281C               	goto	u6627
  2562  081E  0BD9               	decfsz	(??_main^(0+128)+1),f
  2563  081F  281C               	goto	u6627
  2564  0820  0BDA               	decfsz	(??_main^(0+128)+2),f
  2565  0821  281C               	goto	u6627
  2566  0822  2823               	nop2
  2567                           
  2568                           ;SlaveLiofilizadorVer1.c: 151:      OSCCONbits.IRCF0=1;
  2569  0823  1683               	bsf	3,5	;RP0=1, select bank1
  2570  0824  1303               	bcf	3,6	;RP1=0, select bank1
  2571  0825  160F               	bsf	15,4	;volatile
  2572                           
  2573                           ;SlaveLiofilizadorVer1.c: 152:      OSCCONbits.IRCF1=1;
  2574  0826  168F               	bsf	15,5	;volatile
  2575                           
  2576                           ;SlaveLiofilizadorVer1.c: 153:      OSCCONbits.IRCF2=1;
  2577  0827  170F               	bsf	15,6	;volatile
  2578                           
  2579                           ;SlaveLiofilizadorVer1.c: 155:      PORTA=0;
  2580  0828  1283               	bcf	3,5	;RP0=0, select bank0
  2581  0829  0185               	clrf	5	;volatile
  2582                           
  2583                           ;SlaveLiofilizadorVer1.c: 156:      PORTB=0;
  2584  082A  0186               	clrf	6	;volatile
  2585                           
  2586                           ;SlaveLiofilizadorVer1.c: 157:      PORTC=0;
  2587  082B  0187               	clrf	7	;volatile
  2588                           
  2589                           ;SlaveLiofilizadorVer1.c: 158:      PORTE=0;
  2590  082C  0189               	clrf	9	;volatile
  2591                           
  2592                           ;SlaveLiofilizadorVer1.c: 159:      TRISA=0b11101111;
  2593  082D  30EF               	movlw	239
  2594  082E  1683               	bsf	3,5	;RP0=1, select bank1
  2595  082F  0085               	movwf	5	;volatile
  2596                           
  2597                           ;SlaveLiofilizadorVer1.c: 160:      TRISB=0b00001111;
  2598  0830  300F               	movlw	15
  2599  0831  0086               	movwf	6	;volatile
  2600                           
  2601                           ;SlaveLiofilizadorVer1.c: 161:      TRISC=0xF0;
  2602  0832  30F0               	movlw	240
  2603  0833  0087               	movwf	7	;volatile
  2604                           
  2605                           ;SlaveLiofilizadorVer1.c: 162:      TRISE=0xFF;
  2606  0834  30FF               	movlw	255
  2607  0835  0089               	movwf	9	;volatile
  2608                           
  2609                           ;SlaveLiofilizadorVer1.c: 164:      ANSEL=0x00000011;
  2610  0836  3011               	movlw	17
  2611  0837  1703               	bsf	3,6	;RP1=1, select bank3
  2612  0838  0088               	movwf	8	;volatile
  2613                           
  2614                           ;SlaveLiofilizadorVer1.c: 165:      ANSELH=0x00000000;
  2615  0839  0189               	clrf	9	;volatile
  2616                           
  2617                           ;SlaveLiofilizadorVer1.c: 167:      OPTION_REGbits.nRBPU=0;
  2618  083A  1303               	bcf	3,6	;RP1=0, select bank1
  2619  083B  1381               	bcf	1,7	;volatile
  2620                           
  2621                           ;SlaveLiofilizadorVer1.c: 168:      WPUB=0b00001111;
  2622  083C  300F               	movlw	15
  2623  083D  0095               	movwf	21	;volatile
  2624                           
  2625                           ;SlaveLiofilizadorVer1.c: 171:      PORTBbits.RB7 =1;
  2626  083E  1283               	bcf	3,5	;RP0=0, select bank0
  2627  083F  1786               	bsf	6,7	;volatile
  2628                           
  2629                           ;SlaveLiofilizadorVer1.c: 172:      PORTBbits.RB6 =1;
  2630  0840  1706               	bsf	6,6	;volatile
  2631                           
  2632                           ;SlaveLiofilizadorVer1.c: 173:      PORTBbits.RB5=1;
  2633  0841  1686               	bsf	6,5	;volatile
  2634                           
  2635                           ;SlaveLiofilizadorVer1.c: 174:      generic_status.flag_usart_error=0;
  2636  0842  1683               	bsf	3,5	;RP0=1, select bank1
  2637  0843  10EC               	bcf	_generic_status^(0+128),1
  2638                           
  2639                           ;SlaveLiofilizadorVer1.c: 175:      my_delay_ms_WDT(1000);
  2640  0844  1283               	bcf	3,5	;RP0=0, select bank0
  2641  0845  3003               	movlw	3
  2642  0846  01A3               	clrf	my_delay_ms_WDT@time+3
  2643  0847  01A2               	clrf	my_delay_ms_WDT@time+2
  2644  0848  00A1               	movwf	my_delay_ms_WDT@time+1
  2645  0849  30E8               	movlw	232
  2646  084A  00A0               	movwf	my_delay_ms_WDT@time
  2647  084B  160A  118A  277B  120A  158A  	fcall	_my_delay_ms_WDT
  2648                           
  2649                           ;SlaveLiofilizadorVer1.c: 177:      OPTION_REGbits.T0CS=0;
  2650  0850  1683               	bsf	3,5	;RP0=1, select bank1
  2651  0851  1281               	bcf	1,5	;volatile
  2652                           
  2653                           ;SlaveLiofilizadorVer1.c: 178:      OPTION_REGbits.PSA =1;
  2654  0852  1581               	bsf	1,3	;volatile
  2655                           
  2656                           ;SlaveLiofilizadorVer1.c: 179:      OPTION_REGbits.PS0 =1;
  2657  0853  1401               	bsf	1,0	;volatile
  2658                           
  2659                           ;SlaveLiofilizadorVer1.c: 180:      OPTION_REGbits.PS1 =1;
  2660  0854  1481               	bsf	1,1	;volatile
  2661                           
  2662                           ;SlaveLiofilizadorVer1.c: 181:      OPTION_REGbits.PS2 =1;
  2663  0855  1501               	bsf	1,2	;volatile
  2664                           
  2665                           ;SlaveLiofilizadorVer1.c: 182:      INTCONbits.T0IE =0;
  2666  0856  128B               	bcf	11,5	;volatile
  2667                           
  2668                           ;SlaveLiofilizadorVer1.c: 183:      INTCONbits.INTE =0;
  2669  0857  120B               	bcf	11,4	;volatile
  2670                           
  2671                           ;SlaveLiofilizadorVer1.c: 184:      INTCONbits.GIE =1;
  2672  0858  178B               	bsf	11,7	;volatile
  2673                           
  2674                           ;SlaveLiofilizadorVer1.c: 187:      INTCONbits.PEIE = 1;
  2675  0859  170B               	bsf	11,6	;volatile
  2676                           
  2677                           ;SlaveLiofilizadorVer1.c: 188:      T1CKPS0=1;
  2678  085A  1283               	bcf	3,5	;RP0=0, select bank0
  2679  085B  1610               	bsf	16,4	;volatile
  2680                           
  2681                           ;SlaveLiofilizadorVer1.c: 189:      T1CKPS1=1;
  2682  085C  1690               	bsf	16,5	;volatile
  2683                           
  2684                           ;SlaveLiofilizadorVer1.c: 190:      TMR1CS=0;
  2685  085D  1090               	bcf	16,1	;volatile
  2686                           
  2687                           ;SlaveLiofilizadorVer1.c: 191:      TMR1IE=1;
  2688  085E  1683               	bsf	3,5	;RP0=1, select bank1
  2689  085F  140C               	bsf	12,0	;volatile
  2690                           
  2691                           ;SlaveLiofilizadorVer1.c: 192:      T1CON=1;
  2692  0860  3001               	movlw	1
  2693  0861  1283               	bcf	3,5	;RP0=0, select bank0
  2694  0862  0090               	movwf	16	;volatile
  2695  0863  0064               	clrwdt	;# 
  2696                           
  2697                           ;SlaveLiofilizadorVer1.c: 199:      ADC_init();
  2698  0864  120A  118A  27F0  120A  158A  	fcall	_ADC_init
  2699                           
  2700                           ;SlaveLiofilizadorVer1.c: 200:      I2C_Master_Init(100000);
  2701  0869  3001               	movlw	1
  2702  086A  01B0               	clrf	I2C_Master_Init@c+3
  2703  086B  00AF               	movwf	I2C_Master_Init@c+2
  2704  086C  3086               	movlw	134
  2705  086D  00AE               	movwf	I2C_Master_Init@c+1
  2706  086E  30A0               	movlw	160
  2707  086F  00AD               	movwf	I2C_Master_Init@c
  2708  0870  120A  118A  2730  120A  158A  	fcall	_I2C_Master_Init
  2709                           
  2710                           ;SlaveLiofilizadorVer1.c: 201:      USART_init(115200);
  2711  0875  1283               	bcf	3,5	;RP0=0, select bank0
  2712  0876  3001               	movlw	1
  2713  0877  01A3               	clrf	USART_init@baudrate+3
  2714  0878  00A2               	movwf	USART_init@baudrate+2
  2715  0879  30C2               	movlw	194
  2716  087A  00A1               	movwf	USART_init@baudrate+1
  2717  087B  01A0               	clrf	USART_init@baudrate
  2718  087C  160A  118A  2047  120A  158A  	fcall	_USART_init
  2719                           
  2720                           ;SlaveLiofilizadorVer1.c: 207:      {;SlaveLiofilizadorVer1.c: 208:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 209:      reset=EEPROM_Read_Integer(0x10);
  2721  0881  3010               	movlw	16
  2722  0882  120A  118A  25E2  120A  158A  	fcall	_EEPROM_Read_Integer
  2723  0887  0824               	movf	?_EEPROM_Read_Integer+1,w
  2724  0888  1683               	bsf	3,5	;RP0=1, select bank1
  2725  0889  00DC               	movwf	(main@reset+1)^(0+128)
  2726  088A  1283               	bcf	3,5	;RP0=0, select bank0
  2727  088B  0823               	movf	?_EEPROM_Read_Integer,w
  2728  088C  1683               	bsf	3,5	;RP0=1, select bank1
  2729  088D  00DB               	movwf	main@reset^(0+128)
  2730                           
  2731                           ;SlaveLiofilizadorVer1.c: 210:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2732  088E  0F5B               	incfsz	main@reset^(0+128),w
  2733  088F  289C               	goto	l7402
  2734  0890  0A5C               	incf	(main@reset+1)^(0+128),w
  2735  0891  1D03               	btfss	3,2
  2736  0892  289C               	goto	l7402
  2737  0893  1283               	bcf	3,5	;RP0=0, select bank0
  2738  0894  3010               	movlw	16
  2739  0895  01A5               	clrf	EEPROM_Write_Integer@dado
  2740  0896  01A6               	clrf	EEPROM_Write_Integer@dado+1
  2741  0897  120A  118A  26A0  120A  158A  	fcall	_EEPROM_Write_Integer
  2742  089C                     l7402:
  2743                           
  2744                           ;SlaveLiofilizadorVer1.c: 211:      reset++;
  2745  089C  1683               	bsf	3,5	;RP0=1, select bank1
  2746  089D  1303               	bcf	3,6	;RP1=0, select bank1
  2747  089E  0ADB               	incf	main@reset^(0+128),f
  2748  089F  1903               	skipnz
  2749  08A0  0ADC               	incf	(main@reset+1)^(0+128),f
  2750                           
  2751                           ;SlaveLiofilizadorVer1.c: 212:      EEPROM_Write_Integer(0x10,reset);
  2752  08A1  085C               	movf	(main@reset+1)^(0+128),w
  2753  08A2  1283               	bcf	3,5	;RP0=0, select bank0
  2754  08A3  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2755  08A4  1683               	bsf	3,5	;RP0=1, select bank1
  2756  08A5  085B               	movf	main@reset^(0+128),w
  2757  08A6  1283               	bcf	3,5	;RP0=0, select bank0
  2758  08A7  00A5               	movwf	EEPROM_Write_Integer@dado
  2759  08A8  3010               	movlw	16
  2760  08A9  120A  118A  26A0  120A  158A  	fcall	_EEPROM_Write_Integer
  2761                           
  2762                           ;SlaveLiofilizadorVer1.c: 213:      };SlaveLiofilizadorVer1.c: 217:      Delay_Led_Tmr0 
      +                          = 0;
  2763  08AE  1683               	bsf	3,5	;RP0=1, select bank3
  2764  08AF  1703               	bsf	3,6	;RP1=1, select bank3
  2765  08B0  01AA               	clrf	_Delay_Led_Tmr0^(0+384)	;volatile
  2766  08B1  01AB               	clrf	(_Delay_Led_Tmr0+1)^(0+384)	;volatile
  2767                           
  2768                           ;SlaveLiofilizadorVer1.c: 218:      Delay_Led_Usart = 0;
  2769  08B2  01A8               	clrf	_Delay_Led_Usart^(0+384)	;volatile
  2770  08B3  01A9               	clrf	(_Delay_Led_Usart+1)^(0+384)	;volatile
  2771                           
  2772                           ;SlaveLiofilizadorVer1.c: 219:      Delay_Led_Memory = 0;
  2773  08B4  01AC               	clrf	_Delay_Led_Memory^(0+384)	;volatile
  2774  08B5  01AD               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
  2775                           
  2776                           ;SlaveLiofilizadorVer1.c: 221:      segundo=0;
  2777  08B6  01F5               	clrf	_segundo	;volatile
  2778                           
  2779                           ;SlaveLiofilizadorVer1.c: 222:      hora=0;
  2780  08B7  01F4               	clrf	_hora	;volatile
  2781                           
  2782                           ;SlaveLiofilizadorVer1.c: 223:      PORTCbits.RC0=0;
  2783  08B8  1283               	bcf	3,5	;RP0=0, select bank0
  2784  08B9  1303               	bcf	3,6	;RP1=0, select bank0
  2785  08BA  1007               	bcf	7,0	;volatile
  2786                           
  2787                           ;SlaveLiofilizadorVer1.c: 224:      PORTCbits.RC1=0;
  2788  08BB  1087               	bcf	7,1	;volatile
  2789                           
  2790                           ;SlaveLiofilizadorVer1.c: 225:      PORTAbits.RA2=0;
  2791  08BC  1105               	bcf	5,2	;volatile
  2792                           
  2793                           ;SlaveLiofilizadorVer1.c: 226:      PORTAbits.RA3=0;
  2794  08BD  1185               	bcf	5,3	;volatile
  2795                           
  2796                           ;SlaveLiofilizadorVer1.c: 229:      Board_Number=(((0x0F)&(~PORTB)));
  2797  08BE  0906               	comf	6,w	;volatile
  2798  08BF  1683               	bsf	3,5	;RP0=1, select bank1
  2799  08C0  00E5               	movwf	_Board_Number^(0+128)
  2800  08C1  300F               	movlw	15
  2801  08C2  05E5               	andwf	_Board_Number^(0+128),f
  2802                           
  2803                           ;SlaveLiofilizadorVer1.c: 230:      canal=1;
  2804  08C3  01F2               	clrf	_canal
  2805  08C4  0AF2               	incf	_canal,f
  2806                           
  2807                           ;SlaveLiofilizadorVer1.c: 244:      Load_Work();
  2808  08C5  120A  118A  2501  120A  158A  	fcall	_Load_Work
  2809                           
  2810                           ;SlaveLiofilizadorVer1.c: 245:      generic_status.flag_global_hot=0;
  2811  08CA  1683               	bsf	3,5	;RP0=1, select bank1
  2812  08CB  1303               	bcf	3,6	;RP1=0, select bank1
  2813  08CC  136C               	bcf	_generic_status^(0+128),6
  2814  08CD                     l7432:
  2815                           
  2816                           ;SlaveLiofilizadorVer1.c: 252:           {;SlaveLiofilizadorVer1.c: 254:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2817  08CD  1303               	bcf	3,6	;RP1=0, select bank1
  2818  08CE  3002               	movlw	2
  2819  08CF  17EC               	bsf	_generic_status^(0+128),7
  2820                           
  2821                           ;SlaveLiofilizadorVer1.c: 258:          if(++canal==2) canal=0;
  2822  08D0  0AF2               	incf	_canal,f
  2823  08D1  0672               	xorwf	_canal,w
  2824  08D2  1903               	btfsc	3,2
  2825  08D3  01F2               	clrf	_canal
  2826                           
  2827                           ;SlaveLiofilizadorVer1.c: 259:          mediatemperaturaNTC(canal);
  2828  08D4  0872               	movf	_canal,w
  2829  08D5  120A  158A  211B  120A  158A  	fcall	_mediatemperaturaNTC
  2830                           
  2831                           ;SlaveLiofilizadorVer1.c: 262:          if (generic_status.flag_usart_error) Delay_Led_M
      +                          emory=200;
  2832  08DA  1303               	bcf	3,6	;RP1=0, select bank1
  2833  08DB  1CEC               	btfss	_generic_status^(0+128),1
  2834  08DC  28E1               	goto	l7444
  2835  08DD  30C8               	movlw	200
  2836  08DE  1703               	bsf	3,6	;RP1=1, select bank3
  2837  08DF  00AC               	movwf	_Delay_Led_Memory^(0+384)	;volatile
  2838  08E0  01AD               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
  2839  08E1                     l7444:
  2840                           
  2841                           ;SlaveLiofilizadorVer1.c: 265:          if(generic_status.flag_global_hot)
  2842  08E1  1303               	bcf	3,6	;RP1=0, select bank1
  2843  08E2  1F6C               	btfss	_generic_status^(0+128),6
  2844  08E3  28EF               	goto	l431
  2845                           
  2846                           ;SlaveLiofilizadorVer1.c: 266:             {;SlaveLiofilizadorVer1.c: 267:              
      +                          Auto_Relay0();
  2847  08E4  160A  158A  2564  120A  158A  	fcall	_Auto_Relay0
  2848                           
  2849                           ;SlaveLiofilizadorVer1.c: 268:              Auto_Relay1();
  2850  08E9  160A  158A  250F  120A  158A  	fcall	_Auto_Relay1
  2851                           
  2852                           ;SlaveLiofilizadorVer1.c: 269:             }
  2853  08EE  28F2               	goto	l432
  2854  08EF                     l431:	
  2855                           ;SlaveLiofilizadorVer1.c: 270:          else
  2856                           
  2857                           
  2858                           ;SlaveLiofilizadorVer1.c: 271:             {;SlaveLiofilizadorVer1.c: 272:             P
      +                          ORTCbits.RC0=0;
  2859  08EF  1283               	bcf	3,5	;RP0=0, select bank0
  2860  08F0  1007               	bcf	7,0	;volatile
  2861                           
  2862                           ;SlaveLiofilizadorVer1.c: 273:             PORTCbits.RC1=0;
  2863  08F1  1087               	bcf	7,1	;volatile
  2864  08F2                     l432:	
  2865                           ;SlaveLiofilizadorVer1.c: 274:             }
  2866                           
  2867                           
  2868                           ;SlaveLiofilizadorVer1.c: 292:          if(generic_status.flag_usart_rx==1)
  2869  08F2  1683               	bsf	3,5	;RP0=1, select bank1
  2870  08F3  1C6C               	btfss	_generic_status^(0+128),0
  2871  08F4  28CD               	goto	l7432
  2872                           
  2873                           ;SlaveLiofilizadorVer1.c: 293:             {;SlaveLiofilizadorVer1.c: 294:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2874  08F5  1283               	bcf	3,5	;RP0=0, select bank2
  2875  08F6  1703               	bsf	3,6	;RP1=1, select bank2
  2876  08F7  0810               	movf	_usart_buffer^(0+256),w	;volatile
  2877  08F8  1683               	bsf	3,5	;RP0=1, select bank3
  2878  08F9  00A1               	movwf	(_header+1)^(0+384)
  2879  08FA  1283               	bcf	3,5	;RP0=0, select bank2
  2880  08FB  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  2881  08FC  1683               	bsf	3,5	;RP0=1, select bank3
  2882  08FD  00A0               	movwf	_header^(0+384)
  2883                           
  2884                           ;SlaveLiofilizadorVer1.c: 295:             if(header==0xAABB)
  2885  08FE  3ABB               	xorlw	187
  2886  08FF  30AA               	movlw	170
  2887  0900  1903               	skipnz
  2888  0901  0621               	xorwf	(_header+1)^(0+384),w
  2889  0902  1D03               	btfss	3,2
  2890  0903  28CD               	goto	l7432
  2891                           
  2892                           ;SlaveLiofilizadorVer1.c: 296:                {;SlaveLiofilizadorVer1.c: 297:           
      +                               destino =usart_buffer[3];
  2893  0904  1283               	bcf	3,5	;RP0=0, select bank2
  2894  0905  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  2895  0906  00F1               	movwf	_destino
  2896                           
  2897                           ;SlaveLiofilizadorVer1.c: 298:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2898  0907  1683               	bsf	3,5	;RP0=1, select bank1
  2899  0908  1303               	bcf	3,6	;RP1=0, select bank1
  2900  0909  0665               	xorwf	_Board_Number^(0+128),w
  2901  090A  1903               	skipnz
  2902  090B  290E               	goto	l7456
  2903  090C  0F71               	incfsz	_destino,w
  2904  090D  28CD               	goto	l7432
  2905  090E                     l7456:
  2906                           
  2907                           ;SlaveLiofilizadorVer1.c: 299:                       {;SlaveLiofilizadorVer1.c: 300:    
      +                                             Delay_Led_Usart=20;
  2908  090E  3014               	movlw	20
  2909  090F  1703               	bsf	3,6	;RP1=1, select bank3
  2910  0910  00A8               	movwf	_Delay_Led_Usart^(0+384)	;volatile
  2911  0911  01A9               	clrf	(_Delay_Led_Usart+1)^(0+384)	;volatile
  2912                           
  2913                           ;SlaveLiofilizadorVer1.c: 301:                       Decodify_Command();
  2914  0912  120A  118A  2070  120A  158A  	fcall	_Decodify_Command
  2915                           
  2916                           ;SlaveLiofilizadorVer1.c: 302:                       generic_status.flag_usart_rx=0;
  2917  0917  1683               	bsf	3,5	;RP0=1, select bank1
  2918  0918  1303               	bcf	3,6	;RP1=0, select bank1
  2919  0919  106C               	bcf	_generic_status^(0+128),0
  2920                           
  2921                           ;SlaveLiofilizadorVer1.c: 305:             }
  2922  091A  28CD               	goto	l7432
  2923  091B                     __end_of_main:
  2924                           
  2925                           	psect	text1
  2926  091B                     __ptext1:	
  2927 ;; *************** function _mediatemperaturaNTC *****************
  2928 ;; Defined at:
  2929 ;;		line 641 in file "SlaveLiofilizadorVer1.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  canal           1    wreg     unsigned char 
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;  canal           1   50[BANK1 ] unsigned char 
  2934 ;;  Temp            4   51[BANK1 ] float 
  2935 ;;  i               1   55[BANK1 ] unsigned char 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  1    wreg      void 
  2938 ;; Registers used:
  2939 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2940 ;; Tracked objects:
  2941 ;;		On entry : 300/100
  2942 ;;		On exit  : 100/100
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2945 ;;      Params:         0       0       0       0       0
  2946 ;;      Locals:         0       0      10       0       0
  2947 ;;      Temps:          0       1       0       0       0
  2948 ;;      Totals:         0       1      10       0       0
  2949 ;;Total ram usage:       11 bytes
  2950 ;; Hardware stack levels used: 1
  2951 ;; Hardware stack levels required when called: 6
  2952 ;; This function calls:
  2953 ;;		_ADC_Read_NTC
  2954 ;;		_Package_Usart_is_for_me
  2955 ;;		_Rele0Ligado
  2956 ;;		_Rele1Ligado
  2957 ;;		___fladd
  2958 ;;		___fldiv
  2959 ;;		___xxtofl
  2960 ;;		_my_delay_ms
  2961 ;; This function is called by:
  2962 ;;		_main
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           
  2967                           ;psect for function _mediatemperaturaNTC
  2968  091B                     _mediatemperaturaNTC:
  2969                           
  2970                           ;incstack = 0
  2971                           ; Regs used in _mediatemperaturaNTC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  2972                           ;mediatemperaturaNTC@canal stored from wreg
  2973  091B  00D2               	movwf	mediatemperaturaNTC@canal^(0+128)
  2974                           
  2975                           ;SlaveLiofilizadorVer1.c: 641: void mediatemperaturaNTC(unsigned char canal);SlaveLiofil
      +                          izadorVer1.c: 642:      {;SlaveLiofilizadorVer1.c: 643:      float Temp;;SlaveLiofilizad
      +                          orVer1.c: 644:      char i;;SlaveLiofilizadorVer1.c: 646:      ADCON0bits.CHS=canal;
  2976  091C  1283               	bcf	3,5	;RP0=0, select bank0
  2977  091D  00EF               	movwf	??_mediatemperaturaNTC
  2978  091E  0DEF               	rlf	??_mediatemperaturaNTC,f
  2979  091F  0DEF               	rlf	??_mediatemperaturaNTC,f
  2980  0920  081F               	movf	31,w	;volatile
  2981  0921  066F               	xorwf	??_mediatemperaturaNTC,w
  2982  0922  39C3               	andlw	-61
  2983  0923  066F               	xorwf	??_mediatemperaturaNTC,w
  2984  0924  009F               	movwf	31	;volatile
  2985                           
  2986                           ;SlaveLiofilizadorVer1.c: 647:      my_delay_ms(1);
  2987  0925  01A0               	clrf	my_delay_ms@time
  2988  0926  0AA0               	incf	my_delay_ms@time,f
  2989  0927  01A1               	clrf	my_delay_ms@time+1
  2990  0928  01A2               	clrf	my_delay_ms@time+2
  2991  0929  01A3               	clrf	my_delay_ms@time+3
  2992  092A  160A  158A  2481  120A  158A  	fcall	_my_delay_ms
  2993                           
  2994                           ;SlaveLiofilizadorVer1.c: 649:      Temp=0;
  2995  092F  1683               	bsf	3,5	;RP0=1, select bank1
  2996  0930  01D3               	clrf	mediatemperaturaNTC@Temp^(0+128)
  2997  0931  01D4               	clrf	(mediatemperaturaNTC@Temp+1)^(0+128)
  2998  0932  01D5               	clrf	(mediatemperaturaNTC@Temp+2)^(0+128)
  2999  0933  01D6               	clrf	(mediatemperaturaNTC@Temp+3)^(0+128)
  3000                           
  3001                           ;SlaveLiofilizadorVer1.c: 651:      for(i=1;i<15;i++)
  3002  0934  01D7               	clrf	mediatemperaturaNTC@i^(0+128)
  3003  0935  0AD7               	incf	mediatemperaturaNTC@i^(0+128),f
  3004  0936                     l7052:
  3005                           
  3006                           ;SlaveLiofilizadorVer1.c: 652:          {;SlaveLiofilizadorVer1.c: 653:          Temp+=A
      +                          DC_Read_NTC(canal);
  3007  0936  2443  120A  158A   	fcall	_ADC_Read_NTC
  3008  0939  083C               	movf	(?_ADC_Read_NTC+3)^(0+128),w
  3009  093A  00D1               	movwf	(_mediatemperaturaNTC$2351+3)^(0+128)
  3010  093B  083B               	movf	(?_ADC_Read_NTC+2)^(0+128),w
  3011  093C  00D0               	movwf	(_mediatemperaturaNTC$2351+2)^(0+128)
  3012  093D  083A               	movf	(?_ADC_Read_NTC+1)^(0+128),w
  3013  093E  00CF               	movwf	(_mediatemperaturaNTC$2351+1)^(0+128)
  3014  093F  0839               	movf	?_ADC_Read_NTC^(0+128),w
  3015  0940  00CE               	movwf	_mediatemperaturaNTC$2351^(0+128)
  3016                           
  3017                           ;SlaveLiofilizadorVer1.c: 652:          {;SlaveLiofilizadorVer1.c: 653:          Temp+=A
      +                          DC_Read_NTC(canal);
  3018  0941  0851               	movf	(_mediatemperaturaNTC$2351+3)^(0+128),w
  3019  0942  1283               	bcf	3,5	;RP0=0, select bank0
  3020  0943  00BB               	movwf	___fladd@b+3
  3021  0944  1683               	bsf	3,5	;RP0=1, select bank1
  3022  0945  0850               	movf	(_mediatemperaturaNTC$2351+2)^(0+128),w
  3023  0946  1283               	bcf	3,5	;RP0=0, select bank0
  3024  0947  00BA               	movwf	___fladd@b+2
  3025  0948  1683               	bsf	3,5	;RP0=1, select bank1
  3026  0949  084F               	movf	(_mediatemperaturaNTC$2351+1)^(0+128),w
  3027  094A  1283               	bcf	3,5	;RP0=0, select bank0
  3028  094B  00B9               	movwf	___fladd@b+1
  3029  094C  1683               	bsf	3,5	;RP0=1, select bank1
  3030  094D  084E               	movf	_mediatemperaturaNTC$2351^(0+128),w
  3031  094E  1283               	bcf	3,5	;RP0=0, select bank0
  3032  094F  00B8               	movwf	___fladd@b
  3033  0950  1683               	bsf	3,5	;RP0=1, select bank1
  3034  0951  0856               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3035  0952  1283               	bcf	3,5	;RP0=0, select bank0
  3036  0953  00BF               	movwf	___fladd@a+3
  3037  0954  1683               	bsf	3,5	;RP0=1, select bank1
  3038  0955  0855               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3039  0956  1283               	bcf	3,5	;RP0=0, select bank0
  3040  0957  00BE               	movwf	___fladd@a+2
  3041  0958  1683               	bsf	3,5	;RP0=1, select bank1
  3042  0959  0854               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3043  095A  1283               	bcf	3,5	;RP0=0, select bank0
  3044  095B  00BD               	movwf	___fladd@a+1
  3045  095C  1683               	bsf	3,5	;RP0=1, select bank1
  3046  095D  0853               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3047  095E  1283               	bcf	3,5	;RP0=0, select bank0
  3048  095F  00BC               	movwf	___fladd@a
  3049  0960  22D4  120A  158A   	fcall	___fladd
  3050  0963  083B               	movf	?___fladd+3,w
  3051  0964  1683               	bsf	3,5	;RP0=1, select bank1
  3052  0965  00D6               	movwf	(mediatemperaturaNTC@Temp+3)^(0+128)
  3053  0966  1283               	bcf	3,5	;RP0=0, select bank0
  3054  0967  083A               	movf	?___fladd+2,w
  3055  0968  1683               	bsf	3,5	;RP0=1, select bank1
  3056  0969  00D5               	movwf	(mediatemperaturaNTC@Temp+2)^(0+128)
  3057  096A  1283               	bcf	3,5	;RP0=0, select bank0
  3058  096B  0839               	movf	?___fladd+1,w
  3059  096C  1683               	bsf	3,5	;RP0=1, select bank1
  3060  096D  00D4               	movwf	(mediatemperaturaNTC@Temp+1)^(0+128)
  3061  096E  1283               	bcf	3,5	;RP0=0, select bank0
  3062  096F  0838               	movf	?___fladd,w
  3063  0970  1683               	bsf	3,5	;RP0=1, select bank1
  3064  0971  00D3               	movwf	mediatemperaturaNTC@Temp^(0+128)
  3065                           
  3066                           ;SlaveLiofilizadorVer1.c: 655:          if(Package_Usart_is_for_me()==1) break;
  3067  0972  27E8  120A  158A   	fcall	_Package_Usart_is_for_me
  3068  0975  3A01               	xorlw	1
  3069  0976  1903               	btfsc	3,2
  3070  0977  299E               	goto	l7080
  3071                           
  3072                           ;SlaveLiofilizadorVer1.c: 657:          if(generic_status.flag_global_hot)
  3073  0978  1683               	bsf	3,5	;RP0=1, select bank1
  3074  0979  1F6C               	btfss	_generic_status^(0+128),6
  3075  097A  2997               	goto	l7076
  3076                           
  3077                           ;SlaveLiofilizadorVer1.c: 658:            {;SlaveLiofilizadorVer1.c: 660:            if(
      +                          (TempoCNT_0==0)&&
  3078  097B  0869               	movf	_TempoCNT_0^(0+128),w	;volatile
  3079  097C  1D03               	btfss	3,2
  3080  097D  2988               	goto	l7068
  3081  097E  0B6D               	decfsz	_RL0Status^(0+128),w
  3082  097F  2988               	goto	l7068
  3083  0980  1703               	bsf	3,6	;RP1=1, select bank3
  3084  0981  0324               	decf	_Status0^(0+384),w
  3085  0982  0425               	iorwf	(_Status0+1)^(0+384),w
  3086  0983  1D03               	btfss	3,2
  3087  0984  2988               	goto	l7068
  3088                           
  3089                           ;SlaveLiofilizadorVer1.c: 662:               (Status0==1)) Rele0Ligado();
  3090  0985  21F9  120A  158A   	fcall	_Rele0Ligado
  3091  0988                     l7068:
  3092                           
  3093                           ;SlaveLiofilizadorVer1.c: 664:            if((TempoCNT_1==0)&&
  3094  0988  1683               	bsf	3,5	;RP0=1, select bank1
  3095  0989  1303               	bcf	3,6	;RP1=0, select bank1
  3096  098A  0866               	movf	_TempoCNT_1^(0+128),w	;volatile
  3097  098B  1D03               	btfss	3,2
  3098  098C  2997               	goto	l7076
  3099  098D  0B7C               	decfsz	_RL1Status,w
  3100  098E  2997               	goto	l7076
  3101  098F  1703               	bsf	3,6	;RP1=1, select bank3
  3102  0990  0322               	decf	_Status1^(0+384),w
  3103  0991  0423               	iorwf	(_Status1+1)^(0+384),w
  3104  0992  1D03               	btfss	3,2
  3105  0993  2997               	goto	l7076
  3106                           
  3107                           ;SlaveLiofilizadorVer1.c: 666:               (Status1==1)) Rele1Ligado();
  3108  0994  2210  120A  158A   	fcall	_Rele1Ligado
  3109  0997                     l7076:
  3110                           
  3111                           ;SlaveLiofilizadorVer1.c: 669:          }
  3112  0997  1683               	bsf	3,5	;RP0=1, select bank1
  3113  0998  1303               	bcf	3,6	;RP1=0, select bank1
  3114  0999  300F               	movlw	15
  3115  099A  0AD7               	incf	mediatemperaturaNTC@i^(0+128),f
  3116  099B  0257               	subwf	mediatemperaturaNTC@i^(0+128),w
  3117  099C  1C03               	skipc
  3118  099D  2936               	goto	l7052
  3119  099E                     l7080:
  3120                           
  3121                           ;SlaveLiofilizadorVer1.c: 670:      if(i<10)
  3122  099E  300A               	movlw	10
  3123  099F  1683               	bsf	3,5	;RP0=1, select bank1
  3124  09A0  0257               	subwf	mediatemperaturaNTC@i^(0+128),w
  3125  09A1  1C03               	btfss	3,0
  3126  09A2  0008               	return
  3127                           
  3128                           ;SlaveLiofilizadorVer1.c: 675:      if(i==15)
  3129  09A3  300F               	movlw	15
  3130  09A4  0657               	xorwf	mediatemperaturaNTC@i^(0+128),w
  3131  09A5  1D03               	btfss	3,2
  3132  09A6  29B6               	goto	l7088
  3133                           
  3134                           ;SlaveLiofilizadorVer1.c: 676:         Temp/=(i-1);
  3135  09A7  0857               	movf	mediatemperaturaNTC@i^(0+128),w
  3136  09A8  3EFF               	addlw	255
  3137  09A9  1283               	bcf	3,5	;RP0=0, select bank0
  3138  09AA  00AA               	movwf	___xxtofl@val
  3139  09AB  30FF               	movlw	255
  3140  09AC  1803               	skipnc
  3141  09AD  3000               	movlw	0
  3142  09AE  00AB               	movwf	___xxtofl@val+1
  3143  09AF  01AC               	clrf	___xxtofl@val+2
  3144  09B0  1BAB               	btfsc	___xxtofl@val+1,7
  3145  09B1  03AC               	decf	___xxtofl@val+2,f
  3146  09B2  082C               	movf	___xxtofl@val+2,w
  3147  09B3  00AD               	movwf	___xxtofl@val+3
  3148  09B4  3001               	movlw	1
  3149  09B5  29BD               	goto	L1
  3150  09B6                     l7088:
  3151                           
  3152                           ;SlaveLiofilizadorVer1.c: 678:         Temp/=(i);
  3153  09B6  0857               	movf	mediatemperaturaNTC@i^(0+128),w
  3154  09B7  1283               	bcf	3,5	;RP0=0, select bank0
  3155  09B8  160A  158A  27FA  120A  158A  	fcall	PL82	;call to abstracted procedure
  3156  09BD                     L1:
  3157  09BD  25B5  120A  158A   	fcall	___xxtofl
  3158  09C0  278A  120A  158A   	fcall	PL22	;call to abstracted procedure
  3159  09C3  0856               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3160  09C4  00A7               	movwf	(___fldiv@b+3)^(0+128)
  3161  09C5  0855               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3162  09C6  00A6               	movwf	(___fldiv@b+2)^(0+128)
  3163  09C7  0854               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3164  09C8  00A5               	movwf	(___fldiv@b+1)^(0+128)
  3165  09C9  0853               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3166  09CA  00A4               	movwf	___fldiv@b^(0+128)
  3167  09CB  2623  120A  158A   	fcall	___fldiv
  3168  09CE  0823               	movf	(?___fldiv+3)^(0+128),w
  3169  09CF  00D6               	movwf	(mediatemperaturaNTC@Temp+3)^(0+128)
  3170  09D0  0822               	movf	(?___fldiv+2)^(0+128),w
  3171  09D1  00D5               	movwf	(mediatemperaturaNTC@Temp+2)^(0+128)
  3172  09D2  0821               	movf	(?___fldiv+1)^(0+128),w
  3173  09D3  00D4               	movwf	(mediatemperaturaNTC@Temp+1)^(0+128)
  3174  09D4  0820               	movf	?___fldiv^(0+128),w
  3175  09D5  00D3               	movwf	mediatemperaturaNTC@Temp^(0+128)
  3176                           
  3177                           ;SlaveLiofilizadorVer1.c: 680:      if(canal==0)
  3178  09D6  0852               	movf	mediatemperaturaNTC@canal^(0+128),w
  3179  09D7  1D03               	btfss	3,2
  3180  09D8  29E9               	goto	l7094
  3181                           
  3182                           ;SlaveLiofilizadorVer1.c: 681:         {;SlaveLiofilizadorVer1.c: 682:         Temperatu
      +                          ra0=Temp;
  3183  09D9  0856               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3184  09DA  1703               	bsf	3,6	;RP1=1, select bank3
  3185  09DB  0097               	movwf	(_Temperatura0+3)^(0+384)
  3186  09DC  1303               	bcf	3,6	;RP1=0, select bank1
  3187  09DD  0855               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3188  09DE  1703               	bsf	3,6	;RP1=1, select bank3
  3189  09DF  0096               	movwf	(_Temperatura0+2)^(0+384)
  3190  09E0  1303               	bcf	3,6	;RP1=0, select bank1
  3191  09E1  0854               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3192  09E2  1703               	bsf	3,6	;RP1=1, select bank3
  3193  09E3  0095               	movwf	(_Temperatura0+1)^(0+384)
  3194  09E4  1303               	bcf	3,6	;RP1=0, select bank1
  3195  09E5  0853               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3196  09E6  1703               	bsf	3,6	;RP1=1, select bank3
  3197  09E7  0094               	movwf	_Temperatura0^(0+384)
  3198                           
  3199                           ;SlaveLiofilizadorVer1.c: 683:         }
  3200  09E8  0008               	return
  3201  09E9                     l7094:
  3202                           
  3203                           ;SlaveLiofilizadorVer1.c: 685:         {;SlaveLiofilizadorVer1.c: 686:         Temperatu
      +                          ra1=Temp;
  3204  09E9  0856               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3205  09EA  1703               	bsf	3,6	;RP1=1, select bank3
  3206  09EB  0093               	movwf	(_Temperatura1+3)^(0+384)
  3207  09EC  1303               	bcf	3,6	;RP1=0, select bank1
  3208  09ED  0855               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3209  09EE  1703               	bsf	3,6	;RP1=1, select bank3
  3210  09EF  0092               	movwf	(_Temperatura1+2)^(0+384)
  3211  09F0  1303               	bcf	3,6	;RP1=0, select bank1
  3212  09F1  0854               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3213  09F2  1703               	bsf	3,6	;RP1=1, select bank3
  3214  09F3  0091               	movwf	(_Temperatura1+1)^(0+384)
  3215  09F4  1303               	bcf	3,6	;RP1=0, select bank1
  3216  09F5  0853               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3217  09F6  1703               	bsf	3,6	;RP1=1, select bank3
  3218  09F7  0090               	movwf	_Temperatura1^(0+384)
  3219  09F8  0008               	return
  3220  09F9                     __end_of_mediatemperaturaNTC:
  3221  09F9                     __ptext66:	
  3222 ;; *************** function _Rele0Ligado *****************
  3223 ;; Defined at:
  3224 ;;		line 924 in file "SlaveLiofilizadorVer1.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;		None
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;		None
  3229 ;; Return value:  Size  Location     Type
  3230 ;;                  1    wreg      void 
  3231 ;; Registers used:
  3232 ;;		wreg, status,2, status,0
  3233 ;; Tracked objects:
  3234 ;;		On entry : 100/300
  3235 ;;		On exit  : 200/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3238 ;;      Params:         0       0       0       0       0
  3239 ;;      Locals:         0       0       0       0       0
  3240 ;;      Temps:          0       0       0       0       0
  3241 ;;      Totals:         0       0       0       0       0
  3242 ;;Total ram usage:        0 bytes
  3243 ;; Hardware stack levels used: 1
  3244 ;; Hardware stack levels required when called: 1
  3245 ;; This function calls:
  3246 ;;		Nothing
  3247 ;; This function is called by:
  3248 ;;		_mediatemperaturaNTC
  3249 ;;		_Auto_Relay0
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253                           
  3254                           ;psect for function _Rele0Ligado
  3255  09F9                     _Rele0Ligado:
  3256  09F9                     l6908:	
  3257                           ;incstack = 0
  3258                           ; Regs used in _Rele0Ligado: [wreg+status,2+status,0]
  3259                           
  3260                           
  3261                           ;SlaveLiofilizadorVer1.c: 927:         if(TempoCNT_0==0)
  3262  09F9  1303               	bcf	3,6	;RP1=0, select bank1
  3263  09FA  0869               	movf	_TempoCNT_0^(0+128),w	;volatile
  3264  09FB  1D03               	btfss	3,2
  3265  09FC  0008               	return
  3266                           
  3267                           ;SlaveLiofilizadorVer1.c: 928:             {;SlaveLiofilizadorVer1.c: 931:             i
      +                          f(PORTCbits.RC0==0)
  3268  09FD  1283               	bcf	3,5	;RP0=0, select bank0
  3269  09FE  1807               	btfsc	7,0	;volatile
  3270  09FF  2A08               	goto	l6918
  3271                           
  3272                           ;SlaveLiofilizadorVer1.c: 932:               {;SlaveLiofilizadorVer1.c: 933:            
      +                             if(TempoON_0!=0)
  3273  0A00  1683               	bsf	3,5	;RP0=1, select bank1
  3274  0A01  086B               	movf	_TempoON_0^(0+128),w
  3275  0A02  1903               	btfsc	3,2
  3276  0A03  0008               	return
  3277                           
  3278                           ;SlaveLiofilizadorVer1.c: 934:                  {;SlaveLiofilizadorVer1.c: 935:         
      +                                   TempoCNT_0=TempoON_0;
  3279  0A04  00E9               	movwf	_TempoCNT_0^(0+128)	;volatile
  3280                           
  3281                           ;SlaveLiofilizadorVer1.c: 936:                  PORTCbits.RC0=1;
  3282  0A05  1283               	bcf	3,5	;RP0=0, select bank0
  3283  0A06  1407               	bsf	7,0	;volatile
  3284  0A07  0008               	return
  3285  0A08                     l6918:
  3286                           
  3287                           ;SlaveLiofilizadorVer1.c: 940:               {;SlaveLiofilizadorVer1.c: 941:            
      +                             if(TempoOFF_0!=0)
  3288  0A08  1683               	bsf	3,5	;RP0=1, select bank1
  3289  0A09  086A               	movf	_TempoOFF_0^(0+128),w
  3290  0A0A  1903               	btfsc	3,2
  3291  0A0B  0008               	return
  3292                           
  3293                           ;SlaveLiofilizadorVer1.c: 942:                  {;SlaveLiofilizadorVer1.c: 943:         
      +                                   TempoCNT_0=TempoOFF_0;
  3294  0A0C  00E9               	movwf	_TempoCNT_0^(0+128)	;volatile
  3295                           
  3296                           ;SlaveLiofilizadorVer1.c: 944:                  PORTCbits.RC0=0;
  3297  0A0D  1283               	bcf	3,5	;RP0=0, select bank0
  3298  0A0E  1007               	bcf	7,0	;volatile
  3299  0A0F  0008               	return
  3300  0A10                     __end_of_Rele0Ligado:
  3301  0A10                     __ptext60:	
  3302 ;; *************** function _Rele1Ligado *****************
  3303 ;; Defined at:
  3304 ;;		line 951 in file "SlaveLiofilizadorVer1.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;		None
  3307 ;; Auto vars:     Size  Location     Type
  3308 ;;		None
  3309 ;; Return value:  Size  Location     Type
  3310 ;;                  1    wreg      void 
  3311 ;; Registers used:
  3312 ;;		wreg, status,2, status,0
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/300
  3315 ;;		On exit  : 200/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3318 ;;      Params:         0       0       0       0       0
  3319 ;;      Locals:         0       0       0       0       0
  3320 ;;      Temps:          0       0       0       0       0
  3321 ;;      Totals:         0       0       0       0       0
  3322 ;;Total ram usage:        0 bytes
  3323 ;; Hardware stack levels used: 1
  3324 ;; Hardware stack levels required when called: 1
  3325 ;; This function calls:
  3326 ;;		Nothing
  3327 ;; This function is called by:
  3328 ;;		_mediatemperaturaNTC
  3329 ;;		_Auto_Relay1
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           
  3334                           ;psect for function _Rele1Ligado
  3335  0A10                     _Rele1Ligado:
  3336  0A10                     l6924:	
  3337                           ;incstack = 0
  3338                           ; Regs used in _Rele1Ligado: [wreg+status,2+status,0]
  3339                           
  3340                           
  3341                           ;SlaveLiofilizadorVer1.c: 954:         if(TempoCNT_1==0)
  3342  0A10  1683               	bsf	3,5	;RP0=1, select bank1
  3343  0A11  1303               	bcf	3,6	;RP1=0, select bank1
  3344  0A12  0866               	movf	_TempoCNT_1^(0+128),w	;volatile
  3345  0A13  1D03               	btfss	3,2
  3346  0A14  0008               	return
  3347                           
  3348                           ;SlaveLiofilizadorVer1.c: 955:             {;SlaveLiofilizadorVer1.c: 958:             i
      +                          f(PORTCbits.RC1==0)
  3349  0A15  1283               	bcf	3,5	;RP0=0, select bank0
  3350  0A16  1887               	btfsc	7,1	;volatile
  3351  0A17  2A20               	goto	l6934
  3352                           
  3353                           ;SlaveLiofilizadorVer1.c: 959:               {;SlaveLiofilizadorVer1.c: 960:            
      +                             if(TempoON_1!=0)
  3354  0A18  1683               	bsf	3,5	;RP0=1, select bank1
  3355  0A19  0868               	movf	_TempoON_1^(0+128),w
  3356  0A1A  1903               	btfsc	3,2
  3357  0A1B  0008               	return
  3358                           
  3359                           ;SlaveLiofilizadorVer1.c: 961:                  {;SlaveLiofilizadorVer1.c: 962:         
      +                                   TempoCNT_1=TempoON_1;
  3360  0A1C  00E6               	movwf	_TempoCNT_1^(0+128)	;volatile
  3361                           
  3362                           ;SlaveLiofilizadorVer1.c: 963:                  PORTCbits.RC1=1;
  3363  0A1D  1283               	bcf	3,5	;RP0=0, select bank0
  3364  0A1E  1487               	bsf	7,1	;volatile
  3365  0A1F  0008               	return
  3366  0A20                     l6934:
  3367                           
  3368                           ;SlaveLiofilizadorVer1.c: 967:               {;SlaveLiofilizadorVer1.c: 968:            
      +                             if(TempoOFF_1!=0)
  3369  0A20  1683               	bsf	3,5	;RP0=1, select bank1
  3370  0A21  0867               	movf	_TempoOFF_1^(0+128),w
  3371  0A22  1903               	btfsc	3,2
  3372  0A23  0008               	return
  3373                           
  3374                           ;SlaveLiofilizadorVer1.c: 969:                  {;SlaveLiofilizadorVer1.c: 970:         
      +                                   TempoCNT_1=TempoOFF_1;
  3375  0A24  00E6               	movwf	_TempoCNT_1^(0+128)	;volatile
  3376                           
  3377                           ;SlaveLiofilizadorVer1.c: 971:                  PORTCbits.RC1=0;
  3378  0A25  1283               	bcf	3,5	;RP0=0, select bank0
  3379  0A26  1087               	bcf	7,1	;volatile
  3380  0A27  0008               	return
  3381  0A28                     __end_of_Rele1Ligado:
  3382  0A28                     __ptext8:	
  3383 ;; *************** function _eval_poly *****************
  3384 ;; Defined at:
  3385 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\evalpoly.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  x               4    0[BANK1 ] PTR int 
  3388 ;;  d               1    4[BANK1 ] PTR const 
  3389 ;;		 -> log@coeff(36), 
  3390 ;;  n               2    5[BANK1 ] int 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  res             4   12[BANK1 ] int 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  4    0[BANK1 ] int 
  3395 ;; Registers used:
  3396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3397 ;; Tracked objects:
  3398 ;;		On entry : 300/100
  3399 ;;		On exit  : 300/100
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3402 ;;      Params:         0       0       7       0       0
  3403 ;;      Locals:         0       0       4       0       0
  3404 ;;      Temps:          0       0       5       0       0
  3405 ;;      Totals:         0       0      16       0       0
  3406 ;;Total ram usage:       16 bytes
  3407 ;; Hardware stack levels used: 1
  3408 ;; Hardware stack levels required when called: 3
  3409 ;; This function calls:
  3410 ;;		___fladd
  3411 ;;		___flmul
  3412 ;; This function is called by:
  3413 ;;		_log
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           
  3418                           ;psect for function _eval_poly
  3419  0A28                     _eval_poly:
  3420                           
  3421                           ;incstack = 0
  3422                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3423  0A28  0825               	movf	eval_poly@n^(0+128),w
  3424  0A29  00A7               	movwf	??_eval_poly^(0+128)
  3425  0A2A  3001               	movlw	1
  3426  0A2B  1003               	clrc
  3427  0A2C                     L2:
  3428  0A2C  0DA7               	rlf	??_eval_poly^(0+128),f
  3429  0A2D  3EFF               	addlw	-1
  3430  0A2E  1003               	clrc
  3431  0A2F  1D03               	skipz
  3432  0A30  2A2C               	goto	L2
  3433  0A31  0D27               	rlf	??_eval_poly^(0+128),w
  3434  0A32  0724               	addwf	eval_poly@d^(0+128),w
  3435  0A33  0084               	movwf	4
  3436  0A34  160A  118A  200A  120A  158A  	fcall	stringdir
  3437  0A39  00A8               	movwf	(??_eval_poly+1)^(0+128)
  3438  0A3A  160A  118A  200A  120A  158A  	fcall	stringdir
  3439  0A3F  00A9               	movwf	((??_eval_poly+1)^(0+128)+1)
  3440  0A40  160A  118A  200A  120A  158A  	fcall	stringdir
  3441  0A45  00AA               	movwf	((??_eval_poly+1)^(0+128)+2)
  3442  0A46  160A  118A  200A  120A  158A  	fcall	stringdir
  3443  0A4B  00AB               	movwf	((??_eval_poly+1)^(0+128)+3)
  3444  0A4C  082B               	movf	(??_eval_poly+4)^(0+128),w
  3445  0A4D  00AF               	movwf	(eval_poly@res+3)^(0+128)
  3446  0A4E  082A               	movf	(??_eval_poly+3)^(0+128),w
  3447  0A4F  00AE               	movwf	(eval_poly@res+2)^(0+128)
  3448  0A50  0829               	movf	(??_eval_poly+2)^(0+128),w
  3449  0A51  00AD               	movwf	(eval_poly@res+1)^(0+128)
  3450  0A52  0828               	movf	(??_eval_poly+1)^(0+128),w
  3451  0A53                     L4:
  3452  0A53  00AC               	movwf	eval_poly@res^(0+128)
  3453  0A54  0825               	movf	eval_poly@n^(0+128),w
  3454  0A55  0426               	iorwf	(eval_poly@n+1)^(0+128),w
  3455  0A56  1903               	btfsc	3,2
  3456  0A57  2ACB               	goto	l6274
  3457  0A58  30FF               	movlw	-1
  3458  0A59  07A5               	addwf	eval_poly@n^(0+128),f
  3459  0A5A  1C03               	skipc
  3460  0A5B  03A6               	decf	(eval_poly@n+1)^(0+128),f
  3461  0A5C  0825               	movf	eval_poly@n^(0+128),w
  3462  0A5D  00A7               	movwf	??_eval_poly^(0+128)
  3463  0A5E  3001               	movlw	1
  3464  0A5F  1003               	clrc
  3465  0A60                     L3:
  3466  0A60  0DA7               	rlf	??_eval_poly^(0+128),f
  3467  0A61  3EFF               	addlw	-1
  3468  0A62  1003               	clrc
  3469  0A63  1D03               	skipz
  3470  0A64  2A60               	goto	L3
  3471  0A65  0D27               	rlf	??_eval_poly^(0+128),w
  3472  0A66  0724               	addwf	eval_poly@d^(0+128),w
  3473  0A67  0084               	movwf	4
  3474  0A68  160A  118A  200A  120A  158A  	fcall	stringdir
  3475  0A6D  00A8               	movwf	(??_eval_poly+1)^(0+128)
  3476  0A6E  160A  118A  200A  120A  158A  	fcall	stringdir
  3477  0A73  00A9               	movwf	((??_eval_poly+1)^(0+128)+1)
  3478  0A74  160A  118A  200A  120A  158A  	fcall	stringdir
  3479  0A79  00AA               	movwf	((??_eval_poly+1)^(0+128)+2)
  3480  0A7A  160A  118A  200A  120A  158A  	fcall	stringdir
  3481  0A7F  00AB               	movwf	((??_eval_poly+1)^(0+128)+3)
  3482  0A80  082B               	movf	(??_eval_poly+4)^(0+128),w
  3483  0A81  1283               	bcf	3,5	;RP0=0, select bank0
  3484  0A82  00BB               	movwf	___fladd@b+3
  3485  0A83  1683               	bsf	3,5	;RP0=1, select bank1
  3486  0A84  082A               	movf	(??_eval_poly+3)^(0+128),w
  3487  0A85  1283               	bcf	3,5	;RP0=0, select bank0
  3488  0A86  00BA               	movwf	___fladd@b+2
  3489  0A87  1683               	bsf	3,5	;RP0=1, select bank1
  3490  0A88  0829               	movf	(??_eval_poly+2)^(0+128),w
  3491  0A89  1283               	bcf	3,5	;RP0=0, select bank0
  3492  0A8A  00B9               	movwf	___fladd@b+1
  3493  0A8B  1683               	bsf	3,5	;RP0=1, select bank1
  3494  0A8C  0828               	movf	(??_eval_poly+1)^(0+128),w
  3495  0A8D  1283               	bcf	3,5	;RP0=0, select bank0
  3496  0A8E  00B8               	movwf	___fladd@b
  3497  0A8F  1683               	bsf	3,5	;RP0=1, select bank1
  3498  0A90  082F               	movf	(eval_poly@res+3)^(0+128),w
  3499  0A91  1283               	bcf	3,5	;RP0=0, select bank0
  3500  0A92  00D7               	movwf	___flmul@b+3
  3501  0A93  1683               	bsf	3,5	;RP0=1, select bank1
  3502  0A94  082E               	movf	(eval_poly@res+2)^(0+128),w
  3503  0A95  1283               	bcf	3,5	;RP0=0, select bank0
  3504  0A96  00D6               	movwf	___flmul@b+2
  3505  0A97  1683               	bsf	3,5	;RP0=1, select bank1
  3506  0A98  082D               	movf	(eval_poly@res+1)^(0+128),w
  3507  0A99  1283               	bcf	3,5	;RP0=0, select bank0
  3508  0A9A  00D5               	movwf	___flmul@b+1
  3509  0A9B  1683               	bsf	3,5	;RP0=1, select bank1
  3510  0A9C  082C               	movf	eval_poly@res^(0+128),w
  3511  0A9D  1283               	bcf	3,5	;RP0=0, select bank0
  3512  0A9E  00D4               	movwf	___flmul@b
  3513  0A9F  1683               	bsf	3,5	;RP0=1, select bank1
  3514  0AA0  0823               	movf	(eval_poly@x+3)^(0+128),w
  3515  0AA1  1283               	bcf	3,5	;RP0=0, select bank0
  3516  0AA2  00DB               	movwf	___flmul@a+3
  3517  0AA3  1683               	bsf	3,5	;RP0=1, select bank1
  3518  0AA4  0822               	movf	(eval_poly@x+2)^(0+128),w
  3519  0AA5  1283               	bcf	3,5	;RP0=0, select bank0
  3520  0AA6  00DA               	movwf	___flmul@a+2
  3521  0AA7  1683               	bsf	3,5	;RP0=1, select bank1
  3522  0AA8  0821               	movf	(eval_poly@x+1)^(0+128),w
  3523  0AA9  1283               	bcf	3,5	;RP0=0, select bank0
  3524  0AAA  00D9               	movwf	___flmul@a+1
  3525  0AAB  1683               	bsf	3,5	;RP0=1, select bank1
  3526  0AAC  0820               	movf	eval_poly@x^(0+128),w
  3527  0AAD  1283               	bcf	3,5	;RP0=0, select bank0
  3528  0AAE  00D8               	movwf	___flmul@a
  3529  0AAF  120A  118A  2392  120A  158A  	fcall	___flmul
  3530  0AB4  160A  158A  27DD  120A  158A  	fcall	PL28	;call to abstracted procedure
  3531  0AB9  22D4  120A  158A   	fcall	___fladd
  3532  0ABC  083B               	movf	?___fladd+3,w
  3533  0ABD  1683               	bsf	3,5	;RP0=1, select bank1
  3534  0ABE  00AF               	movwf	(eval_poly@res+3)^(0+128)
  3535  0ABF  1283               	bcf	3,5	;RP0=0, select bank0
  3536  0AC0  083A               	movf	?___fladd+2,w
  3537  0AC1  1683               	bsf	3,5	;RP0=1, select bank1
  3538  0AC2  00AE               	movwf	(eval_poly@res+2)^(0+128)
  3539  0AC3  1283               	bcf	3,5	;RP0=0, select bank0
  3540  0AC4  0839               	movf	?___fladd+1,w
  3541  0AC5  1683               	bsf	3,5	;RP0=1, select bank1
  3542  0AC6  00AD               	movwf	(eval_poly@res+1)^(0+128)
  3543  0AC7  1283               	bcf	3,5	;RP0=0, select bank0
  3544  0AC8  0838               	movf	?___fladd,w
  3545  0AC9  1683               	bsf	3,5	;RP0=1, select bank1
  3546  0ACA  2A53               	goto	L4
  3547  0ACB                     l6274:
  3548  0ACB  082F               	movf	(eval_poly@res+3)^(0+128),w
  3549  0ACC  00A3               	movwf	(?_eval_poly+3)^(0+128)
  3550  0ACD  082E               	movf	(eval_poly@res+2)^(0+128),w
  3551  0ACE  00A2               	movwf	(?_eval_poly+2)^(0+128)
  3552  0ACF  082D               	movf	(eval_poly@res+1)^(0+128),w
  3553  0AD0  00A1               	movwf	(?_eval_poly+1)^(0+128)
  3554  0AD1  082C               	movf	eval_poly@res^(0+128),w
  3555  0AD2  00A0               	movwf	?_eval_poly^(0+128)
  3556  0AD3  0008               	return
  3557  0AD4                     __end_of_eval_poly:
  3558  0AD4                     __ptext64:	
  3559 ;; *************** function ___fladd *****************
  3560 ;; Defined at:
  3561 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;  b               4   24[BANK0 ] void 
  3564 ;;  a               4   28[BANK0 ] void 
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;  grs             1   43[BANK0 ] unsigned char 
  3567 ;;  bexp            1   42[BANK0 ] unsigned char 
  3568 ;;  aexp            1   41[BANK0 ] unsigned char 
  3569 ;;  signs           1   40[BANK0 ] unsigned char 
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  4   24[BANK0 ] unsigned char 
  3572 ;; Registers used:
  3573 ;;		wreg, status,2, status,0, btemp+1
  3574 ;; Tracked objects:
  3575 ;;		On entry : 300/0
  3576 ;;		On exit  : 300/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3579 ;;      Params:         0       8       0       0       0
  3580 ;;      Locals:         0       4       0       0       0
  3581 ;;      Temps:          0       8       0       0       0
  3582 ;;      Totals:         0      20       0       0       0
  3583 ;;Total ram usage:       20 bytes
  3584 ;; Hardware stack levels used: 1
  3585 ;; Hardware stack levels required when called: 1
  3586 ;; This function calls:
  3587 ;;		Nothing
  3588 ;; This function is called by:
  3589 ;;		_mediatemperaturaNTC
  3590 ;;		_ADC_Read_NTC
  3591 ;;		___flsub
  3592 ;;		_log
  3593 ;;		_eval_poly
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           
  3598                           ;psect for function ___fladd
  3599  0AD4                     ___fladd:
  3600                           
  3601                           ;incstack = 0
  3602                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3603  0AD4  083B               	movf	___fladd@b+3,w
  3604  0AD5  00C8               	movwf	___fladd@signs
  3605  0AD6  3080               	movlw	128
  3606  0AD7  05C8               	andwf	___fladd@signs,f
  3607  0AD8  1003               	clrc
  3608  0AD9  0D3B               	rlf	___fladd@b+3,w
  3609  0ADA  00CA               	movwf	___fladd@bexp
  3610  0ADB  1BBA               	btfsc	___fladd@b+2,7
  3611  0ADC  144A               	bsf	___fladd@bexp,0
  3612  0ADD  084A               	movf	___fladd@bexp,w
  3613  0ADE  1903               	btfsc	3,2
  3614  0ADF  2AE8               	goto	l1340
  3615  0AE0  0F4A               	incfsz	___fladd@bexp,w
  3616  0AE1  2AE6               	goto	l1341
  3617  0AE2  01B8               	clrf	___fladd@b
  3618  0AE3  01B9               	clrf	___fladd@b+1
  3619  0AE4  01BA               	clrf	___fladd@b+2
  3620  0AE5  01BB               	clrf	___fladd@b+3
  3621  0AE6                     l1341:
  3622  0AE6  17BA               	bsf	___fladd@b+2,7
  3623  0AE7  2AEB               	goto	L17
  3624  0AE8                     l1340:
  3625  0AE8  01B8               	clrf	___fladd@b
  3626  0AE9  01B9               	clrf	___fladd@b+1
  3627  0AEA  01BA               	clrf	___fladd@b+2
  3628  0AEB                     L17:
  3629  0AEB  01BB               	clrf	___fladd@b+3
  3630  0AEC  083F               	movf	___fladd@a+3,w
  3631  0AED  00C9               	movwf	___fladd@aexp
  3632  0AEE  3080               	movlw	128
  3633  0AEF  05C9               	andwf	___fladd@aexp,f
  3634  0AF0  0849               	movf	___fladd@aexp,w
  3635  0AF1  0648               	xorwf	___fladd@signs,w
  3636  0AF2  1D03               	btfss	3,2
  3637  0AF3  1748               	bsf	___fladd@signs,6
  3638  0AF4  1003               	clrc
  3639  0AF5  0D3F               	rlf	___fladd@a+3,w
  3640  0AF6  00C9               	movwf	___fladd@aexp
  3641  0AF7  1BBE               	btfsc	___fladd@a+2,7
  3642  0AF8  1449               	bsf	___fladd@aexp,0
  3643  0AF9  0849               	movf	___fladd@aexp,w
  3644  0AFA  1903               	btfsc	3,2
  3645  0AFB  2B04               	goto	l1345
  3646  0AFC  0F49               	incfsz	___fladd@aexp,w
  3647  0AFD  2B02               	goto	l1346
  3648  0AFE  01BC               	clrf	___fladd@a
  3649  0AFF  01BD               	clrf	___fladd@a+1
  3650  0B00  01BE               	clrf	___fladd@a+2
  3651  0B01  01BF               	clrf	___fladd@a+3
  3652  0B02                     l1346:
  3653  0B02  17BE               	bsf	___fladd@a+2,7
  3654  0B03  2B07               	goto	L18
  3655  0B04                     l1345:
  3656  0B04  01BC               	clrf	___fladd@a
  3657  0B05  01BD               	clrf	___fladd@a+1
  3658  0B06  01BE               	clrf	___fladd@a+2
  3659  0B07                     L18:
  3660  0B07  01BF               	clrf	___fladd@a+3
  3661  0B08  084A               	movf	___fladd@bexp,w
  3662  0B09  0249               	subwf	___fladd@aexp,w
  3663  0B0A  1803               	skipnc
  3664  0B0B  2B2E               	goto	l3966
  3665  0B0C  1F48               	btfss	___fladd@signs,6
  3666  0B0D  2B10               	goto	l3936
  3667  0B0E  3080               	movlw	128
  3668  0B0F  06C8               	xorwf	___fladd@signs,f
  3669  0B10                     l3936:
  3670  0B10  084A               	movf	___fladd@bexp,w
  3671  0B11  00CB               	movwf	___fladd@grs
  3672  0B12  0849               	movf	___fladd@aexp,w
  3673  0B13  00CA               	movwf	___fladd@bexp
  3674  0B14  084B               	movf	___fladd@grs,w
  3675  0B15  00C9               	movwf	___fladd@aexp
  3676  0B16  0838               	movf	___fladd@b,w
  3677  0B17  00CB               	movwf	___fladd@grs
  3678  0B18  083C               	movf	___fladd@a,w
  3679  0B19  00B8               	movwf	___fladd@b
  3680  0B1A  084B               	movf	___fladd@grs,w
  3681  0B1B  00BC               	movwf	___fladd@a
  3682  0B1C  0839               	movf	___fladd@b+1,w
  3683  0B1D  00CB               	movwf	___fladd@grs
  3684  0B1E  083D               	movf	___fladd@a+1,w
  3685  0B1F  00B9               	movwf	___fladd@b+1
  3686  0B20  084B               	movf	___fladd@grs,w
  3687  0B21  00BD               	movwf	___fladd@a+1
  3688  0B22  083A               	movf	___fladd@b+2,w
  3689  0B23  00CB               	movwf	___fladd@grs
  3690  0B24  083E               	movf	___fladd@a+2,w
  3691  0B25  00BA               	movwf	___fladd@b+2
  3692  0B26  084B               	movf	___fladd@grs,w
  3693  0B27  00BE               	movwf	___fladd@a+2
  3694  0B28  083B               	movf	___fladd@b+3,w
  3695  0B29  00CB               	movwf	___fladd@grs
  3696  0B2A  083F               	movf	___fladd@a+3,w
  3697  0B2B  00BB               	movwf	___fladd@b+3
  3698  0B2C  084B               	movf	___fladd@grs,w
  3699  0B2D  00BF               	movwf	___fladd@a+3
  3700  0B2E                     l3966:
  3701  0B2E  01CB               	clrf	___fladd@grs
  3702  0B2F  0849               	movf	___fladd@aexp,w
  3703  0B30  00C0               	movwf	??___fladd
  3704  0B31  01C1               	clrf	??___fladd+1
  3705  0B32  0841               	movf	??___fladd+1,w
  3706  0B33  00C3               	movwf	??___fladd+3
  3707  0B34  084A               	movf	___fladd@bexp,w
  3708  0B35  0240               	subwf	??___fladd,w
  3709  0B36  00C2               	movwf	??___fladd+2
  3710  0B37  1C03               	skipc
  3711  0B38  03C3               	decf	??___fladd+3,f
  3712  0B39  0843               	movf	??___fladd+3,w
  3713  0B3A  3A80               	xorlw	128
  3714  0B3B  00FF               	movwf	127
  3715  0B3C  3080               	movlw	128
  3716  0B3D  027F               	subwf	127,w
  3717  0B3E  1D03               	skipz
  3718  0B3F  2B42               	goto	u2825
  3719  0B40  301A               	movlw	26
  3720  0B41  0242               	subwf	??___fladd+2,w
  3721  0B42                     u2825:
  3722  0B42  1C03               	skipc
  3723  0B43  2B63               	goto	l3982
  3724  0B44  1283               	bcf	3,5	;RP0=0, select bank0
  3725  0B45  1303               	bcf	3,6	;RP1=0, select bank0
  3726  0B46  083B               	movf	___fladd@b+3,w
  3727  0B47  043A               	iorwf	___fladd@b+2,w
  3728  0B48  0439               	iorwf	___fladd@b+1,w
  3729  0B49  0438               	iorwf	___fladd@b,w
  3730  0B4A  1903               	btfsc	3,2
  3731  0B4B  2B4E               	goto	u2830
  3732  0B4C  3001               	movlw	1
  3733  0B4D  2B4F               	goto	u2840
  3734  0B4E                     u2830:
  3735  0B4E  3000               	movlw	0
  3736  0B4F                     u2840:
  3737  0B4F  00CB               	movwf	___fladd@grs
  3738  0B50  01B8               	clrf	___fladd@b
  3739  0B51  01B9               	clrf	___fladd@b+1
  3740  0B52  01BA               	clrf	___fladd@b+2
  3741  0B53  01BB               	clrf	___fladd@b+3
  3742  0B54  0849               	movf	___fladd@aexp,w
  3743  0B55  00CA               	movwf	___fladd@bexp
  3744  0B56  2B69               	goto	l1351
  3745  0B57                     l1353:
  3746  0B57  1C4B               	btfss	___fladd@grs,0
  3747  0B58  2B5E               	goto	l1354
  3748  0B59  1003               	clrc
  3749  0B5A  0C4B               	rrf	___fladd@grs,w
  3750  0B5B  3801               	iorlw	1
  3751  0B5C  00CB               	movwf	___fladd@grs
  3752  0B5D  2B60               	goto	l1355
  3753  0B5E                     l1354:
  3754  0B5E  1003               	clrc
  3755  0B5F  0CCB               	rrf	___fladd@grs,f
  3756  0B60                     l1355:
  3757  0B60  27BF  120A  158A   	fcall	PL54	;call to abstracted procedure
  3758  0B63                     l3982:
  3759  0B63  1283               	bcf	3,5	;RP0=0, select bank0
  3760  0B64  1303               	bcf	3,6	;RP1=0, select bank0
  3761  0B65  0849               	movf	___fladd@aexp,w
  3762  0B66  024A               	subwf	___fladd@bexp,w
  3763  0B67  1C03               	skipc
  3764  0B68  2B57               	goto	l1353
  3765  0B69                     l1351:
  3766  0B69  1B48               	btfsc	___fladd@signs,6
  3767  0B6A  2B92               	goto	l4002
  3768  0B6B  084A               	movf	___fladd@bexp,w
  3769  0B6C  1D03               	btfss	3,2
  3770  0B6D  2B6F               	goto	l3988
  3771  0B6E  2FD5               	ljmp	PL78	;call to abstracted procedure
  3772  0B6F                     l3988:
  3773  0B6F  083C               	movf	___fladd@a,w
  3774  0B70  07B8               	addwf	___fladd@b,f
  3775  0B71  083D               	movf	___fladd@a+1,w
  3776  0B72  1103               	clrz
  3777  0B73  1803               	skipnc
  3778  0B74  3E01               	addlw	1
  3779  0B75  1D03               	btfss	3,2
  3780  0B76  07B9               	addwf	___fladd@b+1,f
  3781  0B77  083E               	movf	___fladd@a+2,w
  3782  0B78  1103               	clrz
  3783  0B79  1803               	skipnc
  3784  0B7A  3E01               	addlw	1
  3785  0B7B  1D03               	btfss	3,2
  3786  0B7C  07BA               	addwf	___fladd@b+2,f
  3787  0B7D  083F               	movf	___fladd@a+3,w
  3788  0B7E  1103               	clrz
  3789  0B7F  1803               	skipnc
  3790  0B80  3E01               	addlw	1
  3791  0B81  1D03               	btfss	3,2
  3792  0B82  07BB               	addwf	___fladd@b+3,f
  3793  0B83  1C3B               	btfss	___fladd@b+3,0
  3794  0B84  2C0E               	goto	l4032
  3795  0B85  1C4B               	btfss	___fladd@grs,0
  3796  0B86  2B8C               	goto	l1362
  3797  0B87  1003               	clrc
  3798  0B88  0C4B               	rrf	___fladd@grs,w
  3799  0B89  3801               	iorlw	1
  3800  0B8A  00CB               	movwf	___fladd@grs
  3801  0B8B  2B8E               	goto	l1363
  3802  0B8C                     l1362:
  3803  0B8C  1003               	clrc
  3804  0B8D  0CCB               	rrf	___fladd@grs,f
  3805  0B8E                     l1363:
  3806  0B8E  27BF  120A  158A   	fcall	PL54	;call to abstracted procedure
  3807  0B91  2C0E               	goto	l4032
  3808  0B92                     l4002:
  3809  0B92  083B               	movf	___fladd@b+3,w
  3810  0B93  3A80               	xorlw	128
  3811  0B94  00FF               	movwf	127
  3812  0B95  083F               	movf	___fladd@a+3,w
  3813  0B96  3A80               	xorlw	128
  3814  0B97  027F               	subwf	127,w
  3815  0B98  1D03               	skipz
  3816  0B99  2BA4               	goto	u2943
  3817  0B9A  083E               	movf	___fladd@a+2,w
  3818  0B9B  023A               	subwf	___fladd@b+2,w
  3819  0B9C  1D03               	skipz
  3820  0B9D  2BA4               	goto	u2943
  3821  0B9E  083D               	movf	___fladd@a+1,w
  3822  0B9F  0239               	subwf	___fladd@b+1,w
  3823  0BA0  1D03               	skipz
  3824  0BA1  2BA4               	goto	u2943
  3825  0BA2  083C               	movf	___fladd@a,w
  3826  0BA3  0238               	subwf	___fladd@b,w
  3827  0BA4                     u2943:
  3828  0BA4  1803               	skipnc
  3829  0BA5  2BE4               	goto	l4012
  3830  0BA6  30FF               	movlw	255
  3831  0BA7  00C0               	movwf	??___fladd
  3832  0BA8  00C1               	movwf	??___fladd+1
  3833  0BA9  00C2               	movwf	??___fladd+2
  3834  0BAA  00C3               	movwf	??___fladd+3
  3835  0BAB  083C               	movf	___fladd@a,w
  3836  0BAC  00C4               	movwf	??___fladd+4
  3837  0BAD  083D               	movf	___fladd@a+1,w
  3838  0BAE  00C5               	movwf	??___fladd+5
  3839  0BAF  083E               	movf	___fladd@a+2,w
  3840  0BB0  00C6               	movwf	??___fladd+6
  3841  0BB1  083F               	movf	___fladd@a+3,w
  3842  0BB2  00C7               	movwf	??___fladd+7
  3843  0BB3  0838               	movf	___fladd@b,w
  3844  0BB4  02C4               	subwf	??___fladd+4,f
  3845  0BB5  0839               	movf	___fladd@b+1,w
  3846  0BB6  1C03               	skipc
  3847  0BB7  0F39               	incfsz	___fladd@b+1,w
  3848  0BB8  02C5               	subwf	??___fladd+5,f
  3849  0BB9  083A               	movf	___fladd@b+2,w
  3850  0BBA  1C03               	skipc
  3851  0BBB  0F3A               	incfsz	___fladd@b+2,w
  3852  0BBC  02C6               	subwf	??___fladd+6,f
  3853  0BBD  083B               	movf	___fladd@b+3,w
  3854  0BBE  1C03               	skipc
  3855  0BBF  0F3B               	incfsz	___fladd@b+3,w
  3856  0BC0  02C7               	subwf	??___fladd+7,f
  3857  0BC1  0844               	movf	??___fladd+4,w
  3858  0BC2  07C0               	addwf	??___fladd,f
  3859  0BC3  0845               	movf	??___fladd+5,w
  3860  0BC4  1803               	skipnc
  3861  0BC5  0F45               	incfsz	??___fladd+5,w
  3862  0BC6  07C1               	addwf	??___fladd+1,f
  3863  0BC7  0846               	movf	??___fladd+6,w
  3864  0BC8  1803               	skipnc
  3865  0BC9  0F46               	incfsz	??___fladd+6,w
  3866  0BCA  07C2               	addwf	??___fladd+2,f
  3867  0BCB  0847               	movf	??___fladd+7,w
  3868  0BCC  1803               	skipnc
  3869  0BCD  0A47               	incf	??___fladd+7,w
  3870  0BCE  07C3               	addwf	??___fladd+3,f
  3871  0BCF  0843               	movf	??___fladd+3,w
  3872  0BD0  00BB               	movwf	___fladd@b+3
  3873  0BD1  0842               	movf	??___fladd+2,w
  3874  0BD2  00BA               	movwf	___fladd@b+2
  3875  0BD3  0841               	movf	??___fladd+1,w
  3876  0BD4  00B9               	movwf	___fladd@b+1
  3877  0BD5  0840               	movf	??___fladd,w
  3878  0BD6  00B8               	movwf	___fladd@b
  3879  0BD7  3080               	movlw	128
  3880  0BD8  06C8               	xorwf	___fladd@signs,f
  3881  0BD9  09CB               	comf	___fladd@grs,f
  3882  0BDA  0FCB               	incfsz	___fladd@grs,f
  3883  0BDB  2BF2               	goto	l1368
  3884  0BDC  0AB8               	incf	___fladd@b,f
  3885  0BDD  1903               	skipnz
  3886  0BDE  0AB9               	incf	___fladd@b+1,f
  3887  0BDF  1903               	skipnz
  3888  0BE0  0ABA               	incf	___fladd@b+2,f
  3889  0BE1  1903               	skipnz
  3890  0BE2  0ABB               	incf	___fladd@b+3,f
  3891  0BE3  2BF2               	goto	l1368
  3892  0BE4                     l4012:
  3893  0BE4  083C               	movf	___fladd@a,w
  3894  0BE5  02B8               	subwf	___fladd@b,f
  3895  0BE6  083D               	movf	___fladd@a+1,w
  3896  0BE7  1C03               	skipc
  3897  0BE8  0F3D               	incfsz	___fladd@a+1,w
  3898  0BE9  02B9               	subwf	___fladd@b+1,f
  3899  0BEA  083E               	movf	___fladd@a+2,w
  3900  0BEB  1C03               	skipc
  3901  0BEC  0F3E               	incfsz	___fladd@a+2,w
  3902  0BED  02BA               	subwf	___fladd@b+2,f
  3903  0BEE  083F               	movf	___fladd@a+3,w
  3904  0BEF  1C03               	skipc
  3905  0BF0  0F3F               	incfsz	___fladd@a+3,w
  3906  0BF1  02BB               	subwf	___fladd@b+3,f
  3907  0BF2                     l1368:
  3908  0BF2  083B               	movf	___fladd@b+3,w
  3909  0BF3  043A               	iorwf	___fladd@b+2,w
  3910  0BF4  0439               	iorwf	___fladd@b+1,w
  3911  0BF5  0438               	iorwf	___fladd@b,w
  3912  0BF6  1D03               	skipz
  3913  0BF7  2C0C               	goto	l4030
  3914  0BF8  084B               	movf	___fladd@grs,w
  3915  0BF9  1D03               	btfss	3,2
  3916  0BFA  2C0C               	goto	l4030
  3917  0BFB  2FD5               	ljmp	PL78	;call to abstracted procedure
  3918  0BFC                     l4018:
  3919  0BFC  1003               	clrc
  3920  0BFD  0DB8               	rlf	___fladd@b,f
  3921  0BFE  0DB9               	rlf	___fladd@b+1,f
  3922  0BFF  0DBA               	rlf	___fladd@b+2,f
  3923  0C00  0DBB               	rlf	___fladd@b+3,f
  3924  0C01  1BCB               	btfsc	___fladd@grs,7
  3925  0C02  1438               	bsf	___fladd@b,0
  3926  0C03  1C4B               	btfss	___fladd@grs,0
  3927  0C04  2C07               	goto	l1373
  3928  0C05  1403               	setc
  3929  0C06  2C08               	goto	L19
  3930  0C07                     l1373:
  3931  0C07  1003               	clrc
  3932  0C08                     L19:
  3933  0C08  0DCB               	rlf	___fladd@grs,f
  3934  0C09  084A               	movf	___fladd@bexp,w
  3935  0C0A  1D03               	btfss	3,2
  3936  0C0B  03CA               	decf	___fladd@bexp,f
  3937  0C0C                     l4030:
  3938  0C0C  1FBA               	btfss	___fladd@b+2,7
  3939  0C0D  2BFC               	goto	l4018
  3940  0C0E                     l4032:
  3941  0C0E  01C9               	clrf	___fladd@aexp
  3942  0C0F  1FCB               	btfss	___fladd@grs,7
  3943  0C10  2C19               	goto	l4042
  3944  0C11  084B               	movf	___fladd@grs,w
  3945  0C12  397F               	andlw	127
  3946  0C13  1903               	btfsc	3,2
  3947  0C14  1838               	btfsc	___fladd@b,0
  3948  0C15  2C17               	goto	l4038
  3949  0C16  2C19               	goto	l4042
  3950  0C17                     l4038:
  3951  0C17  01C9               	clrf	___fladd@aexp
  3952  0C18  0AC9               	incf	___fladd@aexp,f
  3953  0C19                     l4042:
  3954  0C19  0849               	movf	___fladd@aexp,w
  3955  0C1A  1903               	btfsc	3,2
  3956  0C1B  2C2C               	goto	l4054
  3957  0C1C  0AB8               	incf	___fladd@b,f
  3958  0C1D  1903               	skipnz
  3959  0C1E  0AB9               	incf	___fladd@b+1,f
  3960  0C1F  1903               	skipnz
  3961  0C20  0ABA               	incf	___fladd@b+2,f
  3962  0C21  1903               	skipnz
  3963  0C22  0ABB               	incf	___fladd@b+3,f
  3964  0C23  1C3B               	btfss	___fladd@b+3,0
  3965  0C24  2C2C               	goto	l4054
  3966  0C25  0D3B               	rlf	___fladd@b+3,w
  3967  0C26  0CBB               	rrf	___fladd@b+3,f
  3968  0C27  0CBA               	rrf	___fladd@b+2,f
  3969  0C28  0CB9               	rrf	___fladd@b+1,f
  3970  0C29  0CB8               	rrf	___fladd@b,f
  3971  0C2A  0F4A               	incfsz	___fladd@bexp,w
  3972  0C2B  0ACA               	incf	___fladd@bexp,f
  3973  0C2C                     l4054:
  3974  0C2C  0A4A               	incf	___fladd@bexp,w
  3975  0C2D  1D03               	btfss	3,2
  3976  0C2E  084A               	movf	___fladd@bexp,w
  3977  0C2F  1D03               	btfss	3,2
  3978  0C30  2C38               	goto	l4062
  3979  0C31  01B8               	clrf	___fladd@b
  3980  0C32  01B9               	clrf	___fladd@b+1
  3981  0C33  01BA               	clrf	___fladd@b+2
  3982  0C34  01BB               	clrf	___fladd@b+3
  3983  0C35  084A               	movf	___fladd@bexp,w
  3984  0C36  1903               	btfsc	3,2
  3985  0C37  01C8               	clrf	___fladd@signs
  3986  0C38                     l4062:
  3987  0C38  1C4A               	btfss	___fladd@bexp,0
  3988  0C39  2C3C               	goto	l1388
  3989  0C3A  17BA               	bsf	___fladd@b+2,7
  3990  0C3B  2C3D               	goto	l4066
  3991  0C3C                     l1388:
  3992  0C3C  13BA               	bcf	___fladd@b+2,7
  3993  0C3D                     l4066:
  3994  0C3D  1003               	clrc
  3995  0C3E  0C4A               	rrf	___fladd@bexp,w
  3996  0C3F  00BB               	movwf	___fladd@b+3
  3997  0C40  1BC8               	btfsc	___fladd@signs,7
  3998  0C41  17BB               	bsf	___fladd@b+3,7
  3999  0C42  0008               	return
  4000  0C43                     __end_of___fladd:
  4001  0C43                     __ptext4:	
  4002 ;; *************** function _ADC_Read_NTC *****************
  4003 ;; Defined at:
  4004 ;;		line 73 in file "adc.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;  canal           1    wreg     unsigned char 
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;  canal           1    0[COMMON] unsigned char 
  4009 ;;  temperatura     4   42[BANK1 ] float 
  4010 ;;  resistencia     4   35[BANK1 ] float 
  4011 ;;  calc            4   29[BANK1 ] float 
  4012 ;;  value           2   40[BANK1 ] unsigned int 
  4013 ;;  B               2   33[BANK1 ] int 
  4014 ;;  i               1   39[BANK1 ] unsigned char 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  4   25[BANK1 ] float 
  4017 ;; Registers used:
  4018 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4019 ;; Tracked objects:
  4020 ;;		On entry : 300/100
  4021 ;;		On exit  : 300/100
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4024 ;;      Params:         0       0       4       0       0
  4025 ;;      Locals:         0       0      17       0       0
  4026 ;;      Temps:          0       0       0       0       0
  4027 ;;      Totals:         0       0      21       0       0
  4028 ;;Total ram usage:       21 bytes
  4029 ;; Hardware stack levels used: 1
  4030 ;; Hardware stack levels required when called: 5
  4031 ;; This function calls:
  4032 ;;		___fladd
  4033 ;;		___fldiv
  4034 ;;		___flmul
  4035 ;;		___flsub
  4036 ;;		___lwdiv
  4037 ;;		___xxtofl
  4038 ;;		_captura
  4039 ;;		_log
  4040 ;; This function is called by:
  4041 ;;		_mediatemperaturaNTC
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045                           
  4046                           ;psect for function _ADC_Read_NTC
  4047  0C43                     _ADC_Read_NTC:
  4048                           
  4049                           ;adc.c: 74:     int B = 3975;
  4050                           
  4051                           ;incstack = 0
  4052                           ; Regs used in _ADC_Read_NTC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4053  0C43  3087               	movlw	135
  4054  0C44  00C1               	movwf	ADC_Read_NTC@B^(0+128)
  4055  0C45  300F               	movlw	15
  4056  0C46  00C2               	movwf	(ADC_Read_NTC@B^(0+128)+1)
  4057                           
  4058                           ;adc.c: 75:     float resistencia;;adc.c: 76:     float temperatura;;adc.c: 77:     floa
      +                          t calc;;adc.c: 78:     unsigned int value;;adc.c: 79:     unsigned char i;;adc.c: 81:   
      +                            value=0;
  4059  0C47  01C8               	clrf	ADC_Read_NTC@value^(0+128)
  4060  0C48  01C9               	clrf	(ADC_Read_NTC@value+1)^(0+128)
  4061                           
  4062                           ;adc.c: 82:     for(i=1;i<=50;i++)
  4063  0C49  01C7               	clrf	ADC_Read_NTC@i^(0+128)
  4064  0C4A  0AC7               	incf	ADC_Read_NTC@i^(0+128),f
  4065  0C4B                     l6878:
  4066                           
  4067                           ;adc.c: 83:         value+=captura();
  4068  0C4B  27DA  120A  158A   	fcall	_captura
  4069  0C4E  0820               	movf	?_captura,w
  4070  0C4F  1683               	bsf	3,5	;RP0=1, select bank1
  4071  0C50  07C8               	addwf	ADC_Read_NTC@value^(0+128),f
  4072  0C51  1803               	skipnc
  4073  0C52  0AC9               	incf	(ADC_Read_NTC@value+1)^(0+128),f
  4074  0C53  1283               	bcf	3,5	;RP0=0, select bank0
  4075  0C54  0821               	movf	?_captura+1,w
  4076  0C55  1683               	bsf	3,5	;RP0=1, select bank1
  4077  0C56  07C9               	addwf	(ADC_Read_NTC@value+1)^(0+128),f
  4078  0C57  3033               	movlw	51
  4079  0C58  0AC7               	incf	ADC_Read_NTC@i^(0+128),f
  4080  0C59  0247               	subwf	ADC_Read_NTC@i^(0+128),w
  4081  0C5A  1C03               	skipc
  4082  0C5B  2C4B               	goto	l6878
  4083                           
  4084                           ;adc.c: 84:     value/=(i-1);
  4085  0C5C  0847               	movf	ADC_Read_NTC@i^(0+128),w
  4086  0C5D  1283               	bcf	3,5	;RP0=0, select bank0
  4087  0C5E  00A0               	movwf	___lwdiv@divisor
  4088  0C5F  30FF               	movlw	255
  4089  0C60  01A1               	clrf	___lwdiv@divisor+1
  4090  0C61  07A0               	addwf	___lwdiv@divisor,f
  4091  0C62  1803               	skipnc
  4092  0C63  0AA1               	incf	___lwdiv@divisor+1,f
  4093  0C64  07A1               	addwf	___lwdiv@divisor+1,f
  4094  0C65  1683               	bsf	3,5	;RP0=1, select bank1
  4095  0C66  0849               	movf	(ADC_Read_NTC@value+1)^(0+128),w
  4096  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4097  0C68  00A3               	movwf	___lwdiv@dividend+1
  4098  0C69  1683               	bsf	3,5	;RP0=1, select bank1
  4099  0C6A  0848               	movf	ADC_Read_NTC@value^(0+128),w
  4100  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  4101  0C6C  00A2               	movwf	___lwdiv@dividend
  4102  0C6D  2760  120A  158A   	fcall	___lwdiv
  4103  0C70  0821               	movf	?___lwdiv+1,w
  4104  0C71  1683               	bsf	3,5	;RP0=1, select bank1
  4105  0C72  00C9               	movwf	(ADC_Read_NTC@value+1)^(0+128)
  4106  0C73  1283               	bcf	3,5	;RP0=0, select bank0
  4107  0C74  0820               	movf	?___lwdiv,w
  4108  0C75  1683               	bsf	3,5	;RP0=1, select bank1
  4109  0C76  00C8               	movwf	ADC_Read_NTC@value^(0+128)
  4110                           
  4111                           ;adc.c: 85:     resistencia =(1023.0-value);
  4112  0C77  279A  120A  158A   	fcall	PL24	;call to abstracted procedure
  4113  0C7A  25B5  120A  158A   	fcall	___xxtofl
  4114  0C7D  27A4  120A  158A   	fcall	PL32	;call to abstracted procedure
  4115  0C80  3044               	movlw	68
  4116  0C81  00D3               	movwf	___flsub@b+3
  4117  0C82  307F               	movlw	127
  4118  0C83  00D2               	movwf	___flsub@b+2
  4119  0C84  30C0               	movlw	192
  4120  0C85  00D1               	movwf	___flsub@b+1
  4121  0C86  01D0               	clrf	___flsub@b
  4122  0C87  2744  120A  158A   	fcall	___flsub
  4123  0C8A  084F               	movf	?___flsub+3,w
  4124  0C8B  1683               	bsf	3,5	;RP0=1, select bank1
  4125  0C8C  00C6               	movwf	(ADC_Read_NTC@resistencia+3)^(0+128)
  4126  0C8D  1283               	bcf	3,5	;RP0=0, select bank0
  4127  0C8E  084E               	movf	?___flsub+2,w
  4128  0C8F  1683               	bsf	3,5	;RP0=1, select bank1
  4129  0C90  00C5               	movwf	(ADC_Read_NTC@resistencia+2)^(0+128)
  4130  0C91  1283               	bcf	3,5	;RP0=0, select bank0
  4131  0C92  084D               	movf	?___flsub+1,w
  4132  0C93  1683               	bsf	3,5	;RP0=1, select bank1
  4133  0C94  00C4               	movwf	(ADC_Read_NTC@resistencia+1)^(0+128)
  4134  0C95  1283               	bcf	3,5	;RP0=0, select bank0
  4135  0C96  084C               	movf	?___flsub,w
  4136  0C97  1683               	bsf	3,5	;RP0=1, select bank1
  4137  0C98  00C3               	movwf	ADC_Read_NTC@resistencia^(0+128)
  4138                           
  4139                           ;adc.c: 86:     resistencia*=(10000.0-value);
  4140  0C99  3046               	movlw	70
  4141  0C9A  1283               	bcf	3,5	;RP0=0, select bank0
  4142  0C9B  00D3               	movwf	___flsub@b+3
  4143  0C9C  301C               	movlw	28
  4144  0C9D  00D2               	movwf	___flsub@b+2
  4145  0C9E  3040               	movlw	64
  4146  0C9F  00D1               	movwf	___flsub@b+1
  4147  0CA0  01D0               	clrf	___flsub@b
  4148  0CA1  1683               	bsf	3,5	;RP0=1, select bank1
  4149  0CA2  0848               	movf	ADC_Read_NTC@value^(0+128),w
  4150  0CA3  279A  120A  158A   	fcall	PL24	;call to abstracted procedure
  4151  0CA6  25B5  120A  158A   	fcall	___xxtofl
  4152  0CA9  27A4  120A  158A   	fcall	PL32	;call to abstracted procedure
  4153  0CAC  2744               	fcall	___flsub
  4154  0CAD  084F               	movf	?___flsub+3,w
  4155  0CAE  00D7               	movwf	___flmul@b+3
  4156  0CAF  084E               	movf	?___flsub+2,w
  4157  0CB0  00D6               	movwf	___flmul@b+2
  4158  0CB1  084D               	movf	?___flsub+1,w
  4159  0CB2  00D5               	movwf	___flmul@b+1
  4160  0CB3  084C               	movf	?___flsub,w
  4161  0CB4  00D4               	movwf	___flmul@b
  4162  0CB5  1683               	bsf	3,5	;RP0=1, select bank1
  4163  0CB6  0846               	movf	(ADC_Read_NTC@resistencia+3)^(0+128),w
  4164  0CB7  1283               	bcf	3,5	;RP0=0, select bank0
  4165  0CB8  00DB               	movwf	___flmul@a+3
  4166  0CB9  1683               	bsf	3,5	;RP0=1, select bank1
  4167  0CBA  0845               	movf	(ADC_Read_NTC@resistencia+2)^(0+128),w
  4168  0CBB  1283               	bcf	3,5	;RP0=0, select bank0
  4169  0CBC  00DA               	movwf	___flmul@a+2
  4170  0CBD  1683               	bsf	3,5	;RP0=1, select bank1
  4171  0CBE  0844               	movf	(ADC_Read_NTC@resistencia+1)^(0+128),w
  4172  0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  4173  0CC0  00D9               	movwf	___flmul@a+1
  4174  0CC1  1683               	bsf	3,5	;RP0=1, select bank1
  4175  0CC2  0843               	movf	ADC_Read_NTC@resistencia^(0+128),w
  4176  0CC3  1283               	bcf	3,5	;RP0=0, select bank0
  4177  0CC4  00D8               	movwf	___flmul@a
  4178  0CC5  120A  118A  2392  120A  158A  	fcall	___flmul
  4179  0CCA  0857               	movf	?___flmul+3,w
  4180  0CCB  1683               	bsf	3,5	;RP0=1, select bank1
  4181  0CCC  00C6               	movwf	(ADC_Read_NTC@resistencia+3)^(0+128)
  4182  0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  4183  0CCE  0856               	movf	?___flmul+2,w
  4184  0CCF  1683               	bsf	3,5	;RP0=1, select bank1
  4185  0CD0  00C5               	movwf	(ADC_Read_NTC@resistencia+2)^(0+128)
  4186  0CD1  1283               	bcf	3,5	;RP0=0, select bank0
  4187  0CD2  0855               	movf	?___flmul+1,w
  4188  0CD3  1683               	bsf	3,5	;RP0=1, select bank1
  4189  0CD4  00C4               	movwf	(ADC_Read_NTC@resistencia+1)^(0+128)
  4190  0CD5  1283               	bcf	3,5	;RP0=0, select bank0
  4191  0CD6  0854               	movf	?___flmul,w
  4192  0CD7  1683               	bsf	3,5	;RP0=1, select bank1
  4193  0CD8  00C3               	movwf	ADC_Read_NTC@resistencia^(0+128)
  4194                           
  4195                           ;adc.c: 87:     temperatura =value*10000.0/resistencia;
  4196  0CD9  0846               	movf	(ADC_Read_NTC@resistencia+3)^(0+128),w
  4197  0CDA  00A3               	movwf	(___fldiv@a+3)^(0+128)
  4198  0CDB  0845               	movf	(ADC_Read_NTC@resistencia+2)^(0+128),w
  4199  0CDC  00A2               	movwf	(___fldiv@a+2)^(0+128)
  4200  0CDD  0844               	movf	(ADC_Read_NTC@resistencia+1)^(0+128),w
  4201  0CDE  00A1               	movwf	(___fldiv@a+1)^(0+128)
  4202  0CDF  0843               	movf	ADC_Read_NTC@resistencia^(0+128),w
  4203  0CE0  00A0               	movwf	___fldiv@a^(0+128)
  4204  0CE1  3046               	movlw	70
  4205  0CE2  1283               	bcf	3,5	;RP0=0, select bank0
  4206  0CE3  00D7               	movwf	___flmul@b+3
  4207  0CE4  301C               	movlw	28
  4208  0CE5  00D6               	movwf	___flmul@b+2
  4209  0CE6  3040               	movlw	64
  4210  0CE7  00D5               	movwf	___flmul@b+1
  4211  0CE8  01D4               	clrf	___flmul@b
  4212  0CE9  1683               	bsf	3,5	;RP0=1, select bank1
  4213  0CEA  0848               	movf	ADC_Read_NTC@value^(0+128),w
  4214  0CEB  279A  120A  158A   	fcall	PL24	;call to abstracted procedure
  4215  0CEE  25B5  120A  158A   	fcall	___xxtofl
  4216  0CF1  27B6               	fcall	PL52	;call to abstracted procedure
  4217  0CF2  120A  118A  2392  120A  158A  	fcall	___flmul
  4218  0CF7  0857               	movf	?___flmul+3,w
  4219  0CF8  1683               	bsf	3,5	;RP0=1, select bank1
  4220  0CF9  00A7               	movwf	(___fldiv@b+3)^(0+128)
  4221  0CFA  1283               	bcf	3,5	;RP0=0, select bank0
  4222  0CFB  0856               	movf	?___flmul+2,w
  4223  0CFC  1683               	bsf	3,5	;RP0=1, select bank1
  4224  0CFD  00A6               	movwf	(___fldiv@b+2)^(0+128)
  4225  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  4226  0CFF  0855               	movf	?___flmul+1,w
  4227  0D00  1683               	bsf	3,5	;RP0=1, select bank1
  4228  0D01  00A5               	movwf	(___fldiv@b+1)^(0+128)
  4229  0D02  1283               	bcf	3,5	;RP0=0, select bank0
  4230  0D03  0854               	movf	?___flmul,w
  4231  0D04  1683               	bsf	3,5	;RP0=1, select bank1
  4232  0D05  00A4               	movwf	___fldiv@b^(0+128)
  4233  0D06  2623  120A  158A   	fcall	___fldiv
  4234  0D09  27AD               	fcall	PL34	;call to abstracted procedure
  4235                           
  4236                           ;adc.c: 88:     calc=temperatura;
  4237  0D0A  084D               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4238  0D0B  00C0               	movwf	(ADC_Read_NTC@calc+3)^(0+128)
  4239  0D0C  084C               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4240  0D0D  00BF               	movwf	(ADC_Read_NTC@calc+2)^(0+128)
  4241  0D0E  084B               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4242  0D0F  00BE               	movwf	(ADC_Read_NTC@calc+1)^(0+128)
  4243  0D10  084A               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4244  0D11  00BD               	movwf	ADC_Read_NTC@calc^(0+128)
  4245                           
  4246                           ;adc.c: 89:     temperatura =log(calc);
  4247  0D12  0840               	movf	(ADC_Read_NTC@calc+3)^(0+128),w
  4248  0D13  00B3               	movwf	(log@x+3)^(0+128)
  4249  0D14  083F               	movf	(ADC_Read_NTC@calc+2)^(0+128),w
  4250  0D15  00B2               	movwf	(log@x+2)^(0+128)
  4251  0D16  083E               	movf	(ADC_Read_NTC@calc+1)^(0+128),w
  4252  0D17  00B1               	movwf	(log@x+1)^(0+128)
  4253  0D18  083D               	movf	ADC_Read_NTC@calc^(0+128),w
  4254  0D19  00B0               	movwf	log@x^(0+128)
  4255  0D1A  160A  158A  25C3  120A  158A  	fcall	_log
  4256  0D1F  0833               	movf	(?_log+3)^(0+128),w
  4257  0D20  00CD               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  4258  0D21  0832               	movf	(?_log+2)^(0+128),w
  4259  0D22  00CC               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  4260  0D23  0831               	movf	(?_log+1)^(0+128),w
  4261  0D24  00CB               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  4262  0D25  0830               	movf	?_log^(0+128),w
  4263  0D26  00CA               	movwf	ADC_Read_NTC@temperatura^(0+128)
  4264                           
  4265                           ;adc.c: 90:     temperatura/=B;
  4266  0D27  0841               	movf	ADC_Read_NTC@B^(0+128),w
  4267  0D28  1283               	bcf	3,5	;RP0=0, select bank0
  4268  0D29  00AA               	movwf	___xxtofl@val
  4269  0D2A  1683               	bsf	3,5	;RP0=1, select bank1
  4270  0D2B  0842               	movf	(ADC_Read_NTC@B+1)^(0+128),w
  4271  0D2C  1283               	bcf	3,5	;RP0=0, select bank0
  4272  0D2D  27C8  120A  158A   	fcall	PL58	;call to abstracted procedure
  4273  0D30  25B5  120A  158A   	fcall	___xxtofl
  4274  0D33  278A  120A  158A   	fcall	PL22	;call to abstracted procedure
  4275  0D36  084D               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4276  0D37  00A7               	movwf	(___fldiv@b+3)^(0+128)
  4277  0D38  084C               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4278  0D39  00A6               	movwf	(___fldiv@b+2)^(0+128)
  4279  0D3A  084B               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4280  0D3B  00A5               	movwf	(___fldiv@b+1)^(0+128)
  4281  0D3C  084A               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4282  0D3D  00A4               	movwf	___fldiv@b^(0+128)
  4283  0D3E  2623  120A  158A   	fcall	___fldiv
  4284  0D41  27AD  120A  158A   	fcall	PL34	;call to abstracted procedure
  4285                           
  4286                           ;adc.c: 91:     temperatura+=1/(25+273.15);
  4287  0D44  303B               	movlw	59
  4288  0D45  1283               	bcf	3,5	;RP0=0, select bank0
  4289  0D46  00BB               	movwf	___fladd@b+3
  4290  0D47  305B               	movlw	91
  4291  0D48  00BA               	movwf	___fladd@b+2
  4292  0D49  30CF               	movlw	207
  4293  0D4A  00B9               	movwf	___fladd@b+1
  4294  0D4B  300F               	movlw	15
  4295  0D4C  00B8               	movwf	___fladd@b
  4296  0D4D  1683               	bsf	3,5	;RP0=1, select bank1
  4297  0D4E  084D               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4298  0D4F  1283               	bcf	3,5	;RP0=0, select bank0
  4299  0D50  00BF               	movwf	___fladd@a+3
  4300  0D51  1683               	bsf	3,5	;RP0=1, select bank1
  4301  0D52  084C               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4302  0D53  1283               	bcf	3,5	;RP0=0, select bank0
  4303  0D54  00BE               	movwf	___fladd@a+2
  4304  0D55  1683               	bsf	3,5	;RP0=1, select bank1
  4305  0D56  084B               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4306  0D57  1283               	bcf	3,5	;RP0=0, select bank0
  4307  0D58  00BD               	movwf	___fladd@a+1
  4308  0D59  1683               	bsf	3,5	;RP0=1, select bank1
  4309  0D5A  084A               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4310  0D5B  1283               	bcf	3,5	;RP0=0, select bank0
  4311  0D5C  00BC               	movwf	___fladd@a
  4312  0D5D  22D4  120A  158A   	fcall	___fladd
  4313  0D60  083B               	movf	?___fladd+3,w
  4314  0D61  1683               	bsf	3,5	;RP0=1, select bank1
  4315  0D62  00CD               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  4316  0D63  1283               	bcf	3,5	;RP0=0, select bank0
  4317  0D64  083A               	movf	?___fladd+2,w
  4318  0D65  1683               	bsf	3,5	;RP0=1, select bank1
  4319  0D66  00CC               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  4320  0D67  1283               	bcf	3,5	;RP0=0, select bank0
  4321  0D68  0839               	movf	?___fladd+1,w
  4322  0D69  1683               	bsf	3,5	;RP0=1, select bank1
  4323  0D6A  00CB               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  4324  0D6B  1283               	bcf	3,5	;RP0=0, select bank0
  4325  0D6C  0838               	movf	?___fladd,w
  4326  0D6D  1683               	bsf	3,5	;RP0=1, select bank1
  4327  0D6E  00CA               	movwf	ADC_Read_NTC@temperatura^(0+128)
  4328                           
  4329                           ;adc.c: 92:     temperatura =1/temperatura;
  4330  0D6F  084D               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4331  0D70  00A3               	movwf	(___fldiv@a+3)^(0+128)
  4332  0D71  084C               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4333  0D72  00A2               	movwf	(___fldiv@a+2)^(0+128)
  4334  0D73  084B               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4335  0D74  00A1               	movwf	(___fldiv@a+1)^(0+128)
  4336  0D75  084A               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4337  0D76  00A0               	movwf	___fldiv@a^(0+128)
  4338  0D77  303F               	movlw	63
  4339  0D78  00A7               	movwf	(___fldiv@b+3)^(0+128)
  4340  0D79  3080               	movlw	128
  4341  0D7A  00A6               	movwf	(___fldiv@b+2)^(0+128)
  4342  0D7B  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4343  0D7C  01A4               	clrf	___fldiv@b^(0+128)
  4344  0D7D  2623  120A  158A   	fcall	___fldiv
  4345  0D80  27AD  120A  158A   	fcall	PL34	;call to abstracted procedure
  4346                           
  4347                           ;adc.c: 93:     temperatura-=273.15;
  4348  0D83  3043               	movlw	67
  4349  0D84  1283               	bcf	3,5	;RP0=0, select bank0
  4350  0D85  00CF               	movwf	___flsub@a+3
  4351  0D86  3088               	movlw	136
  4352  0D87  00CE               	movwf	___flsub@a+2
  4353  0D88  3093               	movlw	147
  4354  0D89  00CD               	movwf	___flsub@a+1
  4355  0D8A  3033               	movlw	51
  4356  0D8B  00CC               	movwf	___flsub@a
  4357  0D8C  1683               	bsf	3,5	;RP0=1, select bank1
  4358  0D8D  084D               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4359  0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  4360  0D8F  00D3               	movwf	___flsub@b+3
  4361  0D90  1683               	bsf	3,5	;RP0=1, select bank1
  4362  0D91  084C               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4363  0D92  1283               	bcf	3,5	;RP0=0, select bank0
  4364  0D93  00D2               	movwf	___flsub@b+2
  4365  0D94  1683               	bsf	3,5	;RP0=1, select bank1
  4366  0D95  084B               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4367  0D96  1283               	bcf	3,5	;RP0=0, select bank0
  4368  0D97  00D1               	movwf	___flsub@b+1
  4369  0D98  1683               	bsf	3,5	;RP0=1, select bank1
  4370  0D99  084A               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4371  0D9A  1283               	bcf	3,5	;RP0=0, select bank0
  4372  0D9B  00D0               	movwf	___flsub@b
  4373  0D9C  2744               	fcall	___flsub
  4374  0D9D  084F               	movf	?___flsub+3,w
  4375  0D9E  1683               	bsf	3,5	;RP0=1, select bank1
  4376  0D9F  00CD               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  4377  0DA0  1283               	bcf	3,5	;RP0=0, select bank0
  4378  0DA1  084E               	movf	?___flsub+2,w
  4379  0DA2  1683               	bsf	3,5	;RP0=1, select bank1
  4380  0DA3  00CC               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  4381  0DA4  1283               	bcf	3,5	;RP0=0, select bank0
  4382  0DA5  084D               	movf	?___flsub+1,w
  4383  0DA6  1683               	bsf	3,5	;RP0=1, select bank1
  4384  0DA7  00CB               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  4385  0DA8  1283               	bcf	3,5	;RP0=0, select bank0
  4386  0DA9  084C               	movf	?___flsub,w
  4387  0DAA  1683               	bsf	3,5	;RP0=1, select bank1
  4388  0DAB  00CA               	movwf	ADC_Read_NTC@temperatura^(0+128)
  4389                           
  4390                           ;adc.c: 95:     return temperatura;
  4391  0DAC  084D               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4392  0DAD  00BC               	movwf	(?_ADC_Read_NTC+3)^(0+128)
  4393  0DAE  084C               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4394  0DAF  00BB               	movwf	(?_ADC_Read_NTC+2)^(0+128)
  4395  0DB0  084B               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4396  0DB1  00BA               	movwf	(?_ADC_Read_NTC+1)^(0+128)
  4397  0DB2  084A               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4398  0DB3  00B9               	movwf	?_ADC_Read_NTC^(0+128)
  4399  0DB4  0008               	return
  4400  0DB5                     __end_of_ADC_Read_NTC:
  4401  0DB5                     __ptext59:	
  4402 ;; *************** function ___xxtofl *****************
  4403 ;; Defined at:
  4404 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;  sign            1    wreg     unsigned char 
  4407 ;;  val             4   10[BANK0 ] long 
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;  sign            1   18[BANK0 ] unsigned char 
  4410 ;;  arg             4   20[BANK0 ] unsigned long 
  4411 ;;  exp             1   19[BANK0 ] unsigned char 
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  4   10[BANK0 ] unsigned char 
  4414 ;; Registers used:
  4415 ;;		wreg, status,2, status,0
  4416 ;; Tracked objects:
  4417 ;;		On entry : 300/0
  4418 ;;		On exit  : 300/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4421 ;;      Params:         0       4       0       0       0
  4422 ;;      Locals:         0       6       0       0       0
  4423 ;;      Temps:          0       4       0       0       0
  4424 ;;      Totals:         0      14       0       0       0
  4425 ;;Total ram usage:       14 bytes
  4426 ;; Hardware stack levels used: 1
  4427 ;; Hardware stack levels required when called: 1
  4428 ;; This function calls:
  4429 ;;		Nothing
  4430 ;; This function is called by:
  4431 ;;		_mediatemperaturaNTC
  4432 ;;		_Auto_Relay1
  4433 ;;		_Load_Work
  4434 ;;		_ADC_Read_NTC
  4435 ;;		_log
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           
  4439                           
  4440                           ;psect for function ___xxtofl
  4441  0DB5                     ___xxtofl:
  4442                           
  4443                           ;incstack = 0
  4444                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4445                           ;___xxtofl@sign stored from wreg
  4446  0DB5  00B2               	movwf	___xxtofl@sign
  4447  0DB6  0832               	movf	___xxtofl@sign,w
  4448  0DB7  1D03               	btfss	3,2
  4449  0DB8  1FAD               	btfss	___xxtofl@val+3,7
  4450  0DB9  2DCA               	goto	l4358
  4451  0DBA  092A               	comf	___xxtofl@val,w
  4452  0DBB  00B4               	movwf	___xxtofl@arg
  4453  0DBC  092B               	comf	___xxtofl@val+1,w
  4454  0DBD  00B5               	movwf	___xxtofl@arg+1
  4455  0DBE  092C               	comf	___xxtofl@val+2,w
  4456  0DBF  00B6               	movwf	___xxtofl@arg+2
  4457  0DC0  092D               	comf	___xxtofl@val+3,w
  4458  0DC1  00B7               	movwf	___xxtofl@arg+3
  4459  0DC2  0AB4               	incf	___xxtofl@arg,f
  4460  0DC3  1903               	skipnz
  4461  0DC4  0AB5               	incf	___xxtofl@arg+1,f
  4462  0DC5  1903               	skipnz
  4463  0DC6  0AB6               	incf	___xxtofl@arg+2,f
  4464  0DC7  1903               	skipnz
  4465  0DC8  0AB7               	incf	___xxtofl@arg+3,f
  4466  0DC9  2DD2               	goto	l1487
  4467  0DCA                     l4358:
  4468  0DCA  082D               	movf	___xxtofl@val+3,w
  4469  0DCB  00B7               	movwf	___xxtofl@arg+3
  4470  0DCC  082C               	movf	___xxtofl@val+2,w
  4471  0DCD  00B6               	movwf	___xxtofl@arg+2
  4472  0DCE  082B               	movf	___xxtofl@val+1,w
  4473  0DCF  00B5               	movwf	___xxtofl@arg+1
  4474  0DD0  082A               	movf	___xxtofl@val,w
  4475  0DD1  00B4               	movwf	___xxtofl@arg
  4476  0DD2                     l1487:
  4477  0DD2  082D               	movf	___xxtofl@val+3,w
  4478  0DD3  042C               	iorwf	___xxtofl@val+2,w
  4479  0DD4  042B               	iorwf	___xxtofl@val+1,w
  4480  0DD5  042A               	iorwf	___xxtofl@val,w
  4481  0DD6  1D03               	skipz
  4482  0DD7  2DDD               	goto	l4362
  4483  0DD8  01AA               	clrf	?___xxtofl
  4484  0DD9  01AB               	clrf	?___xxtofl+1
  4485  0DDA  01AC               	clrf	?___xxtofl+2
  4486  0DDB  01AD               	clrf	?___xxtofl+3
  4487  0DDC  0008               	return
  4488  0DDD                     l4362:
  4489  0DDD  3096               	movlw	150
  4490  0DDE  00B3               	movwf	___xxtofl@exp
  4491  0DDF                     l4366:
  4492  0DDF  30FE               	movlw	254
  4493  0DE0  0537               	andwf	___xxtofl@arg+3,w
  4494  0DE1  1903               	btfsc	3,2
  4495  0DE2  2DF3               	goto	l4370
  4496  0DE3  0AB3               	incf	___xxtofl@exp,f
  4497  0DE4  27CF  120A  158A   	fcall	PL76	;call to abstracted procedure
  4498  0DE7  2DDF               	goto	l4366
  4499  0DE8                     l4368:
  4500  0DE8  0AB3               	incf	___xxtofl@exp,f
  4501  0DE9  0AB4               	incf	___xxtofl@arg,f
  4502  0DEA  1903               	skipnz
  4503  0DEB  0AB5               	incf	___xxtofl@arg+1,f
  4504  0DEC  1903               	skipnz
  4505  0DED  0AB6               	incf	___xxtofl@arg+2,f
  4506  0DEE  1903               	skipnz
  4507  0DEF  0AB7               	incf	___xxtofl@arg+3,f
  4508  0DF0  27CF  120A  158A   	fcall	PL76	;call to abstracted procedure
  4509  0DF3                     l4370:
  4510  0DF3  30FF               	movlw	255
  4511  0DF4  0537               	andwf	___xxtofl@arg+3,w
  4512  0DF5  1903               	btfsc	3,2
  4513  0DF6  2E02               	goto	l4374
  4514  0DF7  2DE8               	goto	l4368
  4515  0DF8                     l4376:
  4516  0DF8  3002               	movlw	2
  4517  0DF9  0233               	subwf	___xxtofl@exp,w
  4518  0DFA  1C03               	btfss	3,0
  4519  0DFB  2E04               	goto	l1500
  4520  0DFC  03B3               	decf	___xxtofl@exp,f
  4521  0DFD  1003               	clrc
  4522  0DFE  0DB4               	rlf	___xxtofl@arg,f
  4523  0DFF  0DB5               	rlf	___xxtofl@arg+1,f
  4524  0E00  0DB6               	rlf	___xxtofl@arg+2,f
  4525  0E01  0DB7               	rlf	___xxtofl@arg+3,f
  4526  0E02                     l4374:
  4527  0E02  1FB6               	btfss	___xxtofl@arg+2,7
  4528  0E03  2DF8               	goto	l4376
  4529  0E04                     l1500:
  4530  0E04  1C33               	btfss	___xxtofl@exp,0
  4531  0E05  13B6               	bcf	___xxtofl@arg+2,7
  4532  0E06  1003               	clrc
  4533  0E07  0CB3               	rrf	___xxtofl@exp,f
  4534  0E08  0833               	movf	___xxtofl@exp,w
  4535  0E09  00B1               	movwf	??___xxtofl+3
  4536  0E0A  01B0               	clrf	??___xxtofl+2
  4537  0E0B  01AF               	clrf	??___xxtofl+1
  4538  0E0C  01AE               	clrf	??___xxtofl
  4539  0E0D  082E               	movf	??___xxtofl,w
  4540  0E0E  04B4               	iorwf	___xxtofl@arg,f
  4541  0E0F  082F               	movf	??___xxtofl+1,w
  4542  0E10  04B5               	iorwf	___xxtofl@arg+1,f
  4543  0E11  0830               	movf	??___xxtofl+2,w
  4544  0E12  04B6               	iorwf	___xxtofl@arg+2,f
  4545  0E13  0831               	movf	??___xxtofl+3,w
  4546  0E14  04B7               	iorwf	___xxtofl@arg+3,f
  4547  0E15  0832               	movf	___xxtofl@sign,w
  4548  0E16  1D03               	btfss	3,2
  4549  0E17  1FAD               	btfss	___xxtofl@val+3,7
  4550  0E18  2E1A               	goto	l4388
  4551  0E19  17B7               	bsf	___xxtofl@arg+3,7
  4552  0E1A                     l4388:
  4553  0E1A  0837               	movf	___xxtofl@arg+3,w
  4554  0E1B  00AD               	movwf	?___xxtofl+3
  4555  0E1C  0836               	movf	___xxtofl@arg+2,w
  4556  0E1D  00AC               	movwf	?___xxtofl+2
  4557  0E1E  0835               	movf	___xxtofl@arg+1,w
  4558  0E1F  00AB               	movwf	?___xxtofl+1
  4559  0E20  0834               	movf	___xxtofl@arg,w
  4560  0E21  00AA               	movwf	?___xxtofl
  4561  0E22  0008               	return
  4562  0E23                     __end_of___xxtofl:
  4563  0E23                     __ptext33:	
  4564 ;; *************** function ___fldiv *****************
  4565 ;; Defined at:
  4566 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;  a               4    0[BANK1 ] void 
  4569 ;;  b               4    4[BANK1 ] void 
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;  grs             4   19[BANK1 ] unsigned long 
  4572 ;;  rem             4   12[BANK1 ] unsigned long 
  4573 ;;  new_exp         2   17[BANK1 ] int 
  4574 ;;  aexp            1   24[BANK1 ] unsigned char 
  4575 ;;  bexp            1   23[BANK1 ] unsigned char 
  4576 ;;  sign            1   16[BANK1 ] unsigned char 
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  4    0[BANK1 ] unsigned char 
  4579 ;; Registers used:
  4580 ;;		wreg, status,2, status,0, btemp+1
  4581 ;; Tracked objects:
  4582 ;;		On entry : 300/100
  4583 ;;		On exit  : 300/100
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4586 ;;      Params:         0       0       8       0       0
  4587 ;;      Locals:         0       0      13       0       0
  4588 ;;      Temps:          0       0       4       0       0
  4589 ;;      Totals:         0       0      25       0       0
  4590 ;;Total ram usage:       25 bytes
  4591 ;; Hardware stack levels used: 1
  4592 ;; Hardware stack levels required when called: 1
  4593 ;; This function calls:
  4594 ;;		Nothing
  4595 ;; This function is called by:
  4596 ;;		_mediatemperaturaNTC
  4597 ;;		_Load_Work
  4598 ;;		_ADC_Read_NTC
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           
  4603                           ;psect for function ___fldiv
  4604  0E23                     ___fldiv:
  4605                           
  4606                           ;incstack = 0
  4607                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4608  0E23  0827               	movf	(___fldiv@b^(0+128)+3),w
  4609  0E24  00B0               	movwf	___fldiv@sign^(0+128)
  4610  0E25  3080               	movlw	128
  4611  0E26  05B0               	andwf	___fldiv@sign^(0+128),f
  4612  0E27  1003               	clrc
  4613  0E28  0D27               	rlf	(___fldiv@b^(0+128)+3),w
  4614  0E29  00B7               	movwf	___fldiv@bexp^(0+128)
  4615  0E2A  1BA6               	btfsc	(___fldiv@b^(0+128)+2),7
  4616  0E2B  1437               	bsf	___fldiv@bexp^(0+128),0
  4617  0E2C  0837               	movf	___fldiv@bexp^(0+128),w
  4618  0E2D  1903               	btfsc	3,2
  4619  0E2E  2E38               	goto	l1397
  4620  0E2F  0F37               	incfsz	___fldiv@bexp^(0+128),w
  4621  0E30  2E35               	goto	l1398
  4622  0E31  01A4               	clrf	___fldiv@b^(0+128)
  4623  0E32  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4624  0E33  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4625  0E34  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4626  0E35                     l1398:
  4627  0E35  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  4628  0E36  01A7               	clrf	(___fldiv@b^(0+128)+3)
  4629  0E37  2E3C               	goto	l4734
  4630  0E38                     l1397:
  4631  0E38  01A4               	clrf	___fldiv@b^(0+128)
  4632  0E39  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4633  0E3A  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4634  0E3B  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4635  0E3C                     l4734:
  4636  0E3C  0823               	movf	(___fldiv@a^(0+128)+3),w
  4637  0E3D  3980               	andlw	128
  4638  0E3E  06B0               	xorwf	___fldiv@sign^(0+128),f
  4639  0E3F  1003               	clrc
  4640  0E40  0D23               	rlf	(___fldiv@a^(0+128)+3),w
  4641  0E41  00B8               	movwf	___fldiv@aexp^(0+128)
  4642  0E42  1BA2               	btfsc	(___fldiv@a^(0+128)+2),7
  4643  0E43  1438               	bsf	___fldiv@aexp^(0+128),0
  4644  0E44  0838               	movf	___fldiv@aexp^(0+128),w
  4645  0E45  1903               	btfsc	3,2
  4646  0E46  2E50               	goto	l1401
  4647  0E47  0F38               	incfsz	___fldiv@aexp^(0+128),w
  4648  0E48  2E4D               	goto	l1402
  4649  0E49  01A0               	clrf	___fldiv@a^(0+128)
  4650  0E4A  01A1               	clrf	(___fldiv@a+1)^(0+128)
  4651  0E4B  01A2               	clrf	(___fldiv@a+2)^(0+128)
  4652  0E4C  01A3               	clrf	(___fldiv@a+3)^(0+128)
  4653  0E4D                     l1402:
  4654  0E4D  17A2               	bsf	(___fldiv@a^(0+128)+2),7
  4655  0E4E  01A3               	clrf	(___fldiv@a^(0+128)+3)
  4656  0E4F  2E54               	goto	l4748
  4657  0E50                     l1401:
  4658  0E50  01A0               	clrf	___fldiv@a^(0+128)
  4659  0E51  01A1               	clrf	(___fldiv@a+1)^(0+128)
  4660  0E52  01A2               	clrf	(___fldiv@a+2)^(0+128)
  4661  0E53  01A3               	clrf	(___fldiv@a+3)^(0+128)
  4662  0E54                     l4748:
  4663  0E54  0823               	movf	(___fldiv@a+3)^(0+128),w
  4664  0E55  0422               	iorwf	(___fldiv@a+2)^(0+128),w
  4665  0E56  0421               	iorwf	(___fldiv@a+1)^(0+128),w
  4666  0E57  0420               	iorwf	___fldiv@a^(0+128),w
  4667  0E58  1D03               	skipz
  4668  0E59  2E6D               	goto	l4760
  4669  0E5A  3080               	movlw	128
  4670  0E5B  01A4               	clrf	___fldiv@b^(0+128)
  4671  0E5C  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4672  0E5D  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4673  0E5E  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4674  0E5F  04A6               	iorwf	(___fldiv@b^(0+128)+2),f
  4675  0E60  307F               	movlw	127
  4676  0E61  04A7               	iorwf	((___fldiv@b+1)^(0+128)+2),f
  4677  0E62                     L15:
  4678  0E62  0830               	movf	___fldiv@sign^(0+128),w
  4679  0E63  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
  4680  0E64  0827               	movf	(___fldiv@b+3)^(0+128),w
  4681  0E65  00A3               	movwf	(?___fldiv+3)^(0+128)
  4682  0E66  0826               	movf	(___fldiv@b+2)^(0+128),w
  4683  0E67  00A2               	movwf	(?___fldiv+2)^(0+128)
  4684  0E68  0825               	movf	(___fldiv@b+1)^(0+128),w
  4685  0E69  00A1               	movwf	(?___fldiv+1)^(0+128)
  4686  0E6A  0824               	movf	___fldiv@b^(0+128),w
  4687  0E6B  00A0               	movwf	?___fldiv^(0+128)
  4688  0E6C  0008               	return
  4689  0E6D                     l4760:
  4690  0E6D  0837               	movf	___fldiv@bexp^(0+128),w
  4691  0E6E  1D03               	btfss	3,2
  4692  0E6F  2E75               	goto	l4768
  4693  0E70  01A0               	clrf	?___fldiv^(0+128)
  4694  0E71  01A1               	clrf	(?___fldiv+1)^(0+128)
  4695  0E72  01A2               	clrf	(?___fldiv+2)^(0+128)
  4696  0E73  01A3               	clrf	(?___fldiv+3)^(0+128)
  4697  0E74  0008               	return
  4698  0E75                     l4768:
  4699  0E75  0837               	movf	___fldiv@bexp^(0+128),w
  4700  0E76  00B1               	movwf	___fldiv@new_exp^(0+128)
  4701  0E77  01B2               	clrf	(___fldiv@new_exp+1)^(0+128)
  4702  0E78  0838               	movf	___fldiv@aexp^(0+128),w
  4703  0E79  02B1               	subwf	___fldiv@new_exp^(0+128),f
  4704  0E7A  1C03               	skipc
  4705  0E7B  03B2               	decf	(___fldiv@new_exp+1)^(0+128),f
  4706  0E7C  307F               	movlw	127
  4707  0E7D  07B1               	addwf	___fldiv@new_exp^(0+128),f
  4708  0E7E  1803               	skipnc
  4709  0E7F  0AB2               	incf	(___fldiv@new_exp+1)^(0+128),f
  4710  0E80  0827               	movf	(___fldiv@b+3)^(0+128),w
  4711  0E81  00AF               	movwf	(___fldiv@rem+3)^(0+128)
  4712  0E82  0826               	movf	(___fldiv@b+2)^(0+128),w
  4713  0E83  00AE               	movwf	(___fldiv@rem+2)^(0+128)
  4714  0E84  0825               	movf	(___fldiv@b+1)^(0+128),w
  4715  0E85  00AD               	movwf	(___fldiv@rem+1)^(0+128)
  4716  0E86  0824               	movf	___fldiv@b^(0+128),w
  4717  0E87  00AC               	movwf	___fldiv@rem^(0+128)
  4718  0E88  01A4               	clrf	___fldiv@b^(0+128)
  4719  0E89  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4720  0E8A  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4721  0E8B  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4722  0E8C  01B3               	clrf	___fldiv@grs^(0+128)
  4723  0E8D  01B4               	clrf	(___fldiv@grs+1)^(0+128)
  4724  0E8E  01B5               	clrf	(___fldiv@grs+2)^(0+128)
  4725  0E8F  01B6               	clrf	(___fldiv@grs+3)^(0+128)
  4726  0E90  01B8               	clrf	___fldiv@aexp^(0+128)
  4727  0E91                     l4794:
  4728  0E91  301A               	movlw	26
  4729  0E92  0238               	subwf	___fldiv@aexp^(0+128),w
  4730  0E93  1803               	btfsc	3,0
  4731  0E94  2ECA               	goto	l4796
  4732  0E95  0838               	movf	___fldiv@aexp^(0+128),w
  4733  0E96  1903               	btfsc	3,2
  4734  0E97  2EA9               	goto	l4786
  4735  0E98  1003               	clrc
  4736  0E99  0DAC               	rlf	___fldiv@rem^(0+128),f
  4737  0E9A  0DAD               	rlf	(___fldiv@rem+1)^(0+128),f
  4738  0E9B  0DAE               	rlf	(___fldiv@rem+2)^(0+128),f
  4739  0E9C  0DAF               	rlf	(___fldiv@rem+3)^(0+128),f
  4740  0E9D  1003               	clrc
  4741  0E9E  0DA4               	rlf	___fldiv@b^(0+128),f
  4742  0E9F  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  4743  0EA0  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  4744  0EA1  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  4745  0EA2  1BB6               	btfsc	(___fldiv@grs+3)^(0+128),7
  4746  0EA3  1424               	bsf	___fldiv@b^(0+128),0
  4747  0EA4  1003               	clrc
  4748  0EA5  0DB3               	rlf	___fldiv@grs^(0+128),f
  4749  0EA6  0DB4               	rlf	(___fldiv@grs+1)^(0+128),f
  4750  0EA7  0DB5               	rlf	(___fldiv@grs+2)^(0+128),f
  4751  0EA8  0DB6               	rlf	(___fldiv@grs+3)^(0+128),f
  4752  0EA9                     l4786:
  4753  0EA9  0823               	movf	(___fldiv@a+3)^(0+128),w
  4754  0EAA  022F               	subwf	(___fldiv@rem+3)^(0+128),w
  4755  0EAB  1D03               	skipz
  4756  0EAC  2EB7               	goto	u4135
  4757  0EAD  0822               	movf	(___fldiv@a+2)^(0+128),w
  4758  0EAE  022E               	subwf	(___fldiv@rem+2)^(0+128),w
  4759  0EAF  1D03               	skipz
  4760  0EB0  2EB7               	goto	u4135
  4761  0EB1  0821               	movf	(___fldiv@a+1)^(0+128),w
  4762  0EB2  022D               	subwf	(___fldiv@rem+1)^(0+128),w
  4763  0EB3  1D03               	skipz
  4764  0EB4  2EB7               	goto	u4135
  4765  0EB5  0820               	movf	___fldiv@a^(0+128),w
  4766  0EB6  022C               	subwf	___fldiv@rem^(0+128),w
  4767  0EB7                     u4135:
  4768  0EB7  1C03               	skipc
  4769  0EB8  2EC8               	goto	l4792
  4770  0EB9  1736               	bsf	(___fldiv@grs^(0+128)+3),6
  4771  0EBA  0820               	movf	___fldiv@a^(0+128),w
  4772  0EBB  02AC               	subwf	___fldiv@rem^(0+128),f
  4773  0EBC  0821               	movf	(___fldiv@a+1)^(0+128),w
  4774  0EBD  1C03               	skipc
  4775  0EBE  0F21               	incfsz	(___fldiv@a+1)^(0+128),w
  4776  0EBF  02AD               	subwf	(___fldiv@rem+1)^(0+128),f
  4777  0EC0  0822               	movf	(___fldiv@a+2)^(0+128),w
  4778  0EC1  1C03               	skipc
  4779  0EC2  0F22               	incfsz	(___fldiv@a+2)^(0+128),w
  4780  0EC3  02AE               	subwf	(___fldiv@rem+2)^(0+128),f
  4781  0EC4  0823               	movf	(___fldiv@a+3)^(0+128),w
  4782  0EC5  1C03               	skipc
  4783  0EC6  0F23               	incfsz	(___fldiv@a+3)^(0+128),w
  4784  0EC7  02AF               	subwf	(___fldiv@rem+3)^(0+128),f
  4785  0EC8                     l4792:
  4786  0EC8  0AB8               	incf	___fldiv@aexp^(0+128),f
  4787  0EC9  2E91               	goto	l4794
  4788  0ECA                     l4796:
  4789  0ECA  082F               	movf	(___fldiv@rem+3)^(0+128),w
  4790  0ECB  042E               	iorwf	(___fldiv@rem+2)^(0+128),w
  4791  0ECC  042D               	iorwf	(___fldiv@rem+1)^(0+128),w
  4792  0ECD  042C               	iorwf	___fldiv@rem^(0+128),w
  4793  0ECE  1D03               	btfss	3,2
  4794  0ECF  1433               	bsf	___fldiv@grs^(0+128),0
  4795  0ED0                     l4810:
  4796  0ED0  1BA6               	btfsc	(___fldiv@b+2)^(0+128),7
  4797  0ED1  2EE3               	goto	l4812
  4798  0ED2  1003               	clrc
  4799  0ED3  0DA4               	rlf	___fldiv@b^(0+128),f
  4800  0ED4  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  4801  0ED5  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  4802  0ED6  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  4803  0ED7  1BB6               	btfsc	(___fldiv@grs+3)^(0+128),7
  4804  0ED8  1424               	bsf	___fldiv@b^(0+128),0
  4805  0ED9  30FF               	movlw	-1
  4806  0EDA  1003               	clrc
  4807  0EDB  0DB3               	rlf	___fldiv@grs^(0+128),f
  4808  0EDC  0DB4               	rlf	(___fldiv@grs+1)^(0+128),f
  4809  0EDD  0DB5               	rlf	(___fldiv@grs+2)^(0+128),f
  4810  0EDE  0DB6               	rlf	(___fldiv@grs+3)^(0+128),f
  4811  0EDF  07B1               	addwf	___fldiv@new_exp^(0+128),f
  4812  0EE0  1C03               	skipc
  4813  0EE1  03B2               	decf	(___fldiv@new_exp+1)^(0+128),f
  4814  0EE2  2ED0               	goto	l4810
  4815  0EE3                     l4812:
  4816  0EE3  01B8               	clrf	___fldiv@aexp^(0+128)
  4817  0EE4  1FB6               	btfss	(___fldiv@grs+3)^(0+128),7
  4818  0EE5  2EF9               	goto	l4822
  4819  0EE6  0833               	movf	___fldiv@grs^(0+128),w
  4820  0EE7  00A8               	movwf	??___fldiv^(0+128)
  4821  0EE8  0834               	movf	(___fldiv@grs+1)^(0+128),w
  4822  0EE9  00A9               	movwf	(??___fldiv^(0+128)+1)
  4823  0EEA  0835               	movf	(___fldiv@grs+2)^(0+128),w
  4824  0EEB  00AA               	movwf	(??___fldiv^(0+128)+2)
  4825  0EEC  307F               	movlw	127
  4826  0EED  0536               	andwf	(___fldiv@grs+3)^(0+128),w
  4827  0EEE  00AB               	movwf	(??___fldiv^(0+128)+3)
  4828  0EEF  082B               	movf	(??___fldiv+3)^(0+128),w
  4829  0EF0  042A               	iorwf	(??___fldiv+2)^(0+128),w
  4830  0EF1  0429               	iorwf	(??___fldiv+1)^(0+128),w
  4831  0EF2  0428               	iorwf	??___fldiv^(0+128),w
  4832  0EF3  1903               	skipnz
  4833  0EF4  1824               	btfsc	___fldiv@b^(0+128),0
  4834  0EF5  2EF7               	goto	l4818
  4835  0EF6  2EF9               	goto	l4822
  4836  0EF7                     l4818:
  4837  0EF7  01B8               	clrf	___fldiv@aexp^(0+128)
  4838  0EF8  0AB8               	incf	___fldiv@aexp^(0+128),f
  4839  0EF9                     l4822:
  4840  0EF9  0838               	movf	___fldiv@aexp^(0+128),w
  4841  0EFA  1903               	btfsc	3,2
  4842  0EFB  2F0D               	goto	l4832
  4843  0EFC  0AA4               	incf	___fldiv@b^(0+128),f
  4844  0EFD  1903               	skipnz
  4845  0EFE  0AA5               	incf	(___fldiv@b+1)^(0+128),f
  4846  0EFF  1903               	skipnz
  4847  0F00  0AA6               	incf	(___fldiv@b+2)^(0+128),f
  4848  0F01  1903               	skipnz
  4849  0F02  0AA7               	incf	(___fldiv@b+3)^(0+128),f
  4850  0F03  1C27               	btfss	(___fldiv@b+3)^(0+128),0
  4851  0F04  2F0D               	goto	l4832
  4852  0F05  0D27               	rlf	(___fldiv@b+3)^(0+128),w
  4853  0F06  0CA7               	rrf	(___fldiv@b+3)^(0+128),f
  4854  0F07  0CA6               	rrf	(___fldiv@b+2)^(0+128),f
  4855  0F08  0CA5               	rrf	(___fldiv@b+1)^(0+128),f
  4856  0F09  0CA4               	rrf	___fldiv@b^(0+128),f
  4857  0F0A  0AB1               	incf	___fldiv@new_exp^(0+128),f
  4858  0F0B  1903               	skipnz
  4859  0F0C  0AB2               	incf	(___fldiv@new_exp+1)^(0+128),f
  4860  0F0D                     l4832:
  4861  0F0D  0832               	movf	(___fldiv@new_exp+1)^(0+128),w
  4862  0F0E  3A80               	xorlw	128
  4863  0F0F  00FF               	movwf	127
  4864  0F10  3080               	movlw	128
  4865  0F11  027F               	subwf	127,w
  4866  0F12  1D03               	skipz
  4867  0F13  2F16               	goto	u4235
  4868  0F14  30FF               	movlw	255
  4869  0F15  0231               	subwf	___fldiv@new_exp^(0+128),w
  4870  0F16                     u4235:
  4871  0F16  1C03               	skipc
  4872  0F17  2F21               	goto	l4838
  4873  0F18  30FF               	movlw	255
  4874  0F19  1683               	bsf	3,5	;RP0=1, select bank1
  4875  0F1A  1303               	bcf	3,6	;RP1=0, select bank1
  4876  0F1B  00B1               	movwf	___fldiv@new_exp^(0+128)
  4877  0F1C  01B2               	clrf	(___fldiv@new_exp+1)^(0+128)
  4878  0F1D  01A4               	clrf	___fldiv@b^(0+128)
  4879  0F1E  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4880  0F1F  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4881  0F20  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4882  0F21                     l4838:
  4883  0F21  1683               	bsf	3,5	;RP0=1, select bank1
  4884  0F22  1303               	bcf	3,6	;RP1=0, select bank1
  4885  0F23  0832               	movf	(___fldiv@new_exp+1)^(0+128),w
  4886  0F24  3A80               	xorlw	128
  4887  0F25  00FF               	movwf	127
  4888  0F26  3080               	movlw	128
  4889  0F27  027F               	subwf	127,w
  4890  0F28  1D03               	skipz
  4891  0F29  2F2C               	goto	u4245
  4892  0F2A  3001               	movlw	1
  4893  0F2B  0231               	subwf	___fldiv@new_exp^(0+128),w
  4894  0F2C                     u4245:
  4895  0F2C  1803               	skipnc
  4896  0F2D  2F37               	goto	l4844
  4897  0F2E  1683               	bsf	3,5	;RP0=1, select bank1
  4898  0F2F  1303               	bcf	3,6	;RP1=0, select bank1
  4899  0F30  01B1               	clrf	___fldiv@new_exp^(0+128)
  4900  0F31  01B2               	clrf	(___fldiv@new_exp+1)^(0+128)
  4901  0F32  01A4               	clrf	___fldiv@b^(0+128)
  4902  0F33  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4903  0F34  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4904  0F35  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4905  0F36  01B0               	clrf	___fldiv@sign^(0+128)
  4906  0F37                     l4844:
  4907  0F37  1683               	bsf	3,5	;RP0=1, select bank1
  4908  0F38  1303               	bcf	3,6	;RP1=0, select bank1
  4909  0F39  0831               	movf	___fldiv@new_exp^(0+128),w
  4910  0F3A  00B7               	movwf	___fldiv@bexp^(0+128)
  4911  0F3B  1C37               	btfss	___fldiv@bexp^(0+128),0
  4912  0F3C  2F3F               	goto	l1426
  4913  0F3D  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  4914  0F3E  2F40               	goto	l4850
  4915  0F3F                     l1426:
  4916  0F3F  13A6               	bcf	(___fldiv@b^(0+128)+2),7
  4917  0F40                     l4850:
  4918  0F40  1003               	clrc
  4919  0F41  0C37               	rrf	___fldiv@bexp^(0+128),w
  4920  0F42  00A7               	movwf	(___fldiv@b^(0+128)+3)
  4921  0F43  2E62               	goto	L15
  4922  0F44                     __end_of___fldiv:
  4923  0F44                     __ptext63:	
  4924 ;; *************** function ___flsub *****************
  4925 ;; Defined at:
  4926 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;  a               4   44[BANK0 ] void 
  4929 ;;  b               4   48[BANK0 ] void 
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;		None
  4932 ;; Return value:  Size  Location     Type
  4933 ;;                  4   44[BANK0 ] void 
  4934 ;; Registers used:
  4935 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4936 ;; Tracked objects:
  4937 ;;		On entry : 300/0
  4938 ;;		On exit  : 300/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4941 ;;      Params:         0       8       0       0       0
  4942 ;;      Locals:         0       0       0       0       0
  4943 ;;      Temps:          0       0       0       0       0
  4944 ;;      Totals:         0       8       0       0       0
  4945 ;;Total ram usage:        8 bytes
  4946 ;; Hardware stack levels used: 1
  4947 ;; Hardware stack levels required when called: 2
  4948 ;; This function calls:
  4949 ;;		___fladd
  4950 ;; This function is called by:
  4951 ;;		_Auto_Relay0
  4952 ;;		_Auto_Relay1
  4953 ;;		_ADC_Read_NTC
  4954 ;; This function uses a non-reentrant model
  4955 ;;
  4956                           
  4957                           
  4958                           ;psect for function ___flsub
  4959  0F44                     ___flsub:
  4960                           
  4961                           ;incstack = 0
  4962                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4963  0F44  3080               	movlw	128
  4964  0F45  06CF               	xorwf	___flsub@a+3,f
  4965  0F46  0853               	movf	___flsub@b+3,w
  4966  0F47  00BB               	movwf	___fladd@b+3
  4967  0F48  0852               	movf	___flsub@b+2,w
  4968  0F49  00BA               	movwf	___fladd@b+2
  4969  0F4A  0851               	movf	___flsub@b+1,w
  4970  0F4B  00B9               	movwf	___fladd@b+1
  4971  0F4C  0850               	movf	___flsub@b,w
  4972  0F4D  00B8               	movwf	___fladd@b
  4973  0F4E  084F               	movf	___flsub@a+3,w
  4974  0F4F  00BF               	movwf	___fladd@a+3
  4975  0F50  084E               	movf	___flsub@a+2,w
  4976  0F51  00BE               	movwf	___fladd@a+2
  4977  0F52  084D               	movf	___flsub@a+1,w
  4978  0F53  00BD               	movwf	___fladd@a+1
  4979  0F54  084C               	movf	___flsub@a,w
  4980  0F55  00BC               	movwf	___fladd@a
  4981  0F56  22D4               	fcall	___fladd
  4982  0F57  083B               	movf	?___fladd+3,w
  4983  0F58  00CF               	movwf	?___flsub+3
  4984  0F59  083A               	movf	?___fladd+2,w
  4985  0F5A  00CE               	movwf	?___flsub+2
  4986  0F5B  0839               	movf	?___fladd+1,w
  4987  0F5C  00CD               	movwf	?___flsub+1
  4988  0F5D  0838               	movf	?___fladd,w
  4989  0F5E  00CC               	movwf	?___flsub
  4990  0F5F  0008               	return
  4991  0F60                     __end_of___flsub:
  4992  0F60                     __ptext28:	
  4993 ;; *************** function ___lwdiv *****************
  4994 ;; Defined at:
  4995 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;  divisor         2    0[BANK0 ] unsigned int 
  4998 ;;  dividend        2    2[BANK0 ] unsigned int 
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;  quotient        2    5[BANK0 ] unsigned int 
  5001 ;;  counter         1    4[BANK0 ] unsigned char 
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  2    0[BANK0 ] unsigned int 
  5004 ;; Registers used:
  5005 ;;		wreg, status,2, status,0
  5006 ;; Tracked objects:
  5007 ;;		On entry : 300/0
  5008 ;;		On exit  : 300/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5011 ;;      Params:         0       4       0       0       0
  5012 ;;      Locals:         0       3       0       0       0
  5013 ;;      Temps:          0       0       0       0       0
  5014 ;;      Totals:         0       7       0       0       0
  5015 ;;Total ram usage:        7 bytes
  5016 ;; Hardware stack levels used: 1
  5017 ;; Hardware stack levels required when called: 1
  5018 ;; This function calls:
  5019 ;;		Nothing
  5020 ;; This function is called by:
  5021 ;;		_ADC_Read_NTC
  5022 ;;		_PROCULUS_Buzzer
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           
  5027                           ;psect for function ___lwdiv
  5028  0F60                     ___lwdiv:
  5029                           
  5030                           ;incstack = 0
  5031                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5032  0F60  01A5               	clrf	___lwdiv@quotient
  5033  0F61  01A6               	clrf	___lwdiv@quotient+1
  5034  0F62  0820               	movf	___lwdiv@divisor,w
  5035  0F63  0421               	iorwf	___lwdiv@divisor+1,w
  5036  0F64  1903               	btfsc	3,2
  5037  0F65  2F85               	goto	l6500
  5038  0F66  01A4               	clrf	___lwdiv@counter
  5039  0F67                     L13:
  5040  0F67  0AA4               	incf	___lwdiv@counter,f
  5041  0F68  1BA1               	btfsc	___lwdiv@divisor+1,7
  5042  0F69  2F6E               	goto	l6488
  5043  0F6A  1003               	clrc
  5044  0F6B  0DA0               	rlf	___lwdiv@divisor,f
  5045  0F6C  0DA1               	rlf	___lwdiv@divisor+1,f
  5046  0F6D  2F67               	goto	L13
  5047  0F6E                     l6488:
  5048  0F6E  1003               	clrc
  5049  0F6F  0DA5               	rlf	___lwdiv@quotient,f
  5050  0F70  0DA6               	rlf	___lwdiv@quotient+1,f
  5051  0F71  0821               	movf	___lwdiv@divisor+1,w
  5052  0F72  0223               	subwf	___lwdiv@dividend+1,w
  5053  0F73  1D03               	skipz
  5054  0F74  2F77               	goto	u5855
  5055  0F75  0820               	movf	___lwdiv@divisor,w
  5056  0F76  0222               	subwf	___lwdiv@dividend,w
  5057  0F77                     u5855:
  5058  0F77  1C03               	skipc
  5059  0F78  2F81               	goto	L14
  5060  0F79  0820               	movf	___lwdiv@divisor,w
  5061  0F7A  02A2               	subwf	___lwdiv@dividend,f
  5062  0F7B  0821               	movf	___lwdiv@divisor+1,w
  5063  0F7C  1C03               	skipc
  5064  0F7D  03A3               	decf	___lwdiv@dividend+1,f
  5065  0F7E  02A3               	subwf	___lwdiv@dividend+1,f
  5066  0F7F  1425               	bsf	___lwdiv@quotient,0
  5067  0F80  1003               	clrc
  5068  0F81                     L14:
  5069  0F81  0CA1               	rrf	___lwdiv@divisor+1,f
  5070  0F82  0CA0               	rrf	___lwdiv@divisor,f
  5071  0F83  0BA4               	decfsz	___lwdiv@counter,f
  5072  0F84  2F6E               	goto	l6488
  5073  0F85                     l6500:
  5074  0F85  0826               	movf	___lwdiv@quotient+1,w
  5075  0F86  00A1               	movwf	?___lwdiv+1
  5076  0F87  0825               	movf	___lwdiv@quotient,w
  5077  0F88  00A0               	movwf	?___lwdiv
  5078  0F89  0008               	return
  5079  0F8A                     __end_of___lwdiv:
  5080  0F8A                     PL22:
  5081  0F8A  082D               	movf	?___xxtofl+3,w
  5082  0F8B  1683               	bsf	3,5	;RP0=1, select bank1
  5083  0F8C  00A3               	movwf	(___fldiv@a+3)^(0+128)
  5084  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  5085  0F8E  082C               	movf	?___xxtofl+2,w
  5086  0F8F  1683               	bsf	3,5	;RP0=1, select bank1
  5087  0F90  00A2               	movwf	(___fldiv@a+2)^(0+128)
  5088  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  5089  0F92  082B               	movf	?___xxtofl+1,w
  5090  0F93  1683               	bsf	3,5	;RP0=1, select bank1
  5091  0F94  00A1               	movwf	(___fldiv@a+1)^(0+128)
  5092  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  5093  0F96  082A               	movf	?___xxtofl,w
  5094  0F97  1683               	bsf	3,5	;RP0=1, select bank1
  5095  0F98  00A0               	movwf	___fldiv@a^(0+128)
  5096  0F99  0008               	return
  5097  0F9A                     __end_ofPL22:
  5098  0F9A                     PL24:
  5099  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  5100  0F9B  00AA               	movwf	___xxtofl@val
  5101  0F9C  1683               	bsf	3,5	;RP0=1, select bank1
  5102  0F9D  0849               	movf	(ADC_Read_NTC@value+1)^(0+128),w
  5103  0F9E  1283               	bcf	3,5	;RP0=0, select bank0
  5104  0F9F  00AB               	movwf	___xxtofl@val+1
  5105  0FA0  3000               	movlw	0
  5106  0FA1  01AC               	clrf	___xxtofl@val+2
  5107  0FA2  01AD               	clrf	___xxtofl@val+3
  5108  0FA3  0008               	return
  5109  0FA4                     __end_ofPL24:
  5110  0FA4                     PL32:
  5111  0FA4  082D               	movf	?___xxtofl+3,w
  5112  0FA5  00CF               	movwf	___flsub@a+3
  5113  0FA6  082C               	movf	?___xxtofl+2,w
  5114  0FA7  00CE               	movwf	___flsub@a+2
  5115  0FA8  082B               	movf	?___xxtofl+1,w
  5116  0FA9  00CD               	movwf	___flsub@a+1
  5117  0FAA  082A               	movf	?___xxtofl,w
  5118  0FAB  00CC               	movwf	___flsub@a
  5119  0FAC  0008               	return
  5120  0FAD                     __end_ofPL32:
  5121  0FAD                     PL34:
  5122  0FAD  0823               	movf	(?___fldiv+3)^(0+128),w
  5123  0FAE  00CD               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  5124  0FAF  0822               	movf	(?___fldiv+2)^(0+128),w
  5125  0FB0  00CC               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  5126  0FB1  0821               	movf	(?___fldiv+1)^(0+128),w
  5127  0FB2  00CB               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  5128  0FB3  0820               	movf	?___fldiv^(0+128),w
  5129  0FB4  00CA               	movwf	ADC_Read_NTC@temperatura^(0+128)
  5130  0FB5  0008               	return
  5131  0FB6                     __end_ofPL34:
  5132  0FB6                     PL52:
  5133  0FB6  082D               	movf	?___xxtofl+3,w
  5134  0FB7  00DB               	movwf	___flmul@a+3
  5135  0FB8  082C               	movf	?___xxtofl+2,w
  5136  0FB9  00DA               	movwf	___flmul@a+2
  5137  0FBA  082B               	movf	?___xxtofl+1,w
  5138  0FBB  00D9               	movwf	___flmul@a+1
  5139  0FBC  082A               	movf	?___xxtofl,w
  5140  0FBD  00D8               	movwf	___flmul@a
  5141  0FBE  0008               	return
  5142  0FBF                     __end_ofPL52:
  5143  0FBF                     PL54:
  5144  0FBF  1838               	btfsc	___fladd@b,0
  5145  0FC0  17CB               	bsf	___fladd@grs,7
  5146  0FC1  0D3B               	rlf	___fladd@b+3,w
  5147  0FC2  0CBB               	rrf	___fladd@b+3,f
  5148  0FC3  0CBA               	rrf	___fladd@b+2,f
  5149  0FC4  0CB9               	rrf	___fladd@b+1,f
  5150  0FC5  0CB8               	rrf	___fladd@b,f
  5151  0FC6  0ACA               	incf	___fladd@bexp,f
  5152  0FC7  0008               	return
  5153  0FC8                     __end_ofPL54:
  5154  0FC8                     PL58:
  5155  0FC8  00AB               	movwf	___xxtofl@val+1
  5156  0FC9  3000               	movlw	0
  5157  0FCA  1BAB               	btfsc	___xxtofl@val+1,7
  5158  0FCB  30FF               	movlw	255
  5159  0FCC  00AC               	movwf	___xxtofl@val+2
  5160  0FCD  00AD               	movwf	___xxtofl@val+3
  5161  0FCE  3401               	retlw	1
  5162  0FCF                     __end_ofPL58:
  5163  0FCF                     PL76:
  5164  0FCF  1003               	clrc
  5165  0FD0  0CB7               	rrf	___xxtofl@arg+3,f
  5166  0FD1  0CB6               	rrf	___xxtofl@arg+2,f
  5167  0FD2  0CB5               	rrf	___xxtofl@arg+1,f
  5168  0FD3  0CB4               	rrf	___xxtofl@arg,f
  5169  0FD4  0008               	return
  5170  0FD5                     __end_ofPL76:
  5171  0FD5                     PL78:
  5172  0FD5  01B8               	clrf	?___fladd
  5173  0FD6  01B9               	clrf	?___fladd+1
  5174  0FD7  01BA               	clrf	?___fladd+2
  5175  0FD8  01BB               	clrf	?___fladd+3
  5176  0FD9  0008               	return
  5177  0FDA                     __end_ofPL78:
  5178  0FDA                     __ptext9:	
  5179 ;; *************** function _captura *****************
  5180 ;; Defined at:
  5181 ;;		line 140 in file "adc.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;		None
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;		None
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  2    0[BANK0 ] unsigned int 
  5188 ;; Registers used:
  5189 ;;		wreg
  5190 ;; Tracked objects:
  5191 ;;		On entry : 300/100
  5192 ;;		On exit  : 300/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5195 ;;      Params:         0       2       0       0       0
  5196 ;;      Locals:         0       0       0       0       0
  5197 ;;      Temps:          0       0       0       0       0
  5198 ;;      Totals:         0       2       0       0       0
  5199 ;;Total ram usage:        2 bytes
  5200 ;; Hardware stack levels used: 1
  5201 ;; Hardware stack levels required when called: 1
  5202 ;; This function calls:
  5203 ;;		Nothing
  5204 ;; This function is called by:
  5205 ;;		_ADC_Read_NTC
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           
  5210                           ;psect for function _captura
  5211  0FDA                     _captura:
  5212                           
  5213                           ;adc.c: 141:     ADCON0bits.GO=1;
  5214                           
  5215                           ;incstack = 0
  5216                           ; Regs used in _captura: [wreg]
  5217  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  5218  0FDB  149F               	bsf	31,1	;volatile
  5219  0FDC                     l598:	
  5220                           ;adc.c: 145:           }
  5221                           
  5222                           
  5223                           ;adc.c: 142:     while(ADCON0bits.GO)
  5224  0FDC  189F               	btfsc	31,1	;volatile
  5225  0FDD  2FDC               	goto	l598
  5226                           
  5227                           ;adc.c: 146:     return ((ADRESH<<8)+ADRESL);
  5228  0FDE  081E               	movf	30,w	;volatile
  5229  0FDF  00A1               	movwf	?_captura+1
  5230  0FE0  01A0               	clrf	?_captura
  5231  0FE1  1683               	bsf	3,5	;RP0=1, select bank1
  5232  0FE2  081E               	movf	30,w	;volatile
  5233  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  5234  0FE4  07A0               	addwf	?_captura,f
  5235  0FE5  1803               	skipnc
  5236  0FE6  0AA1               	incf	?_captura+1,f
  5237  0FE7  0008               	return
  5238  0FE8                     __end_of_captura:
  5239  0FE8                     __ptext3:	
  5240 ;; *************** function _Package_Usart_is_for_me *****************
  5241 ;; Defined at:
  5242 ;;		line 8 in file "protocolo.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;		None
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;  retorno         1    0[BANK0 ] unsigned char 
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  1    wreg      unsigned char 
  5249 ;; Registers used:
  5250 ;;		wreg, status,2, status,0
  5251 ;; Tracked objects:
  5252 ;;		On entry : 300/100
  5253 ;;		On exit  : 300/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5256 ;;      Params:         0       0       0       0       0
  5257 ;;      Locals:         0       1       0       0       0
  5258 ;;      Temps:          0       0       0       0       0
  5259 ;;      Totals:         0       1       0       0       0
  5260 ;;Total ram usage:        1 bytes
  5261 ;; Hardware stack levels used: 1
  5262 ;; Hardware stack levels required when called: 1
  5263 ;; This function calls:
  5264 ;;		Nothing
  5265 ;; This function is called by:
  5266 ;;		_mediatemperaturaNTC
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270                           
  5271                           ;psect for function _Package_Usart_is_for_me
  5272  0FE8                     _Package_Usart_is_for_me:
  5273                           
  5274                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  5275                           
  5276                           ;incstack = 0
  5277                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  5278  0FE8  1C6C               	btfss	_generic_status^(0+128),0
  5279  0FE9  2FFB               	goto	l5314
  5280                           
  5281                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  5282  0FEA  1283               	bcf	3,5	;RP0=0, select bank2
  5283  0FEB  1703               	bsf	3,6	;RP1=1, select bank2
  5284  0FEC  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  5285  0FED  1683               	bsf	3,5	;RP0=1, select bank1
  5286  0FEE  1303               	bcf	3,6	;RP1=0, select bank1
  5287  0FEF  0665               	xorwf	_Board_Number^(0+128),w
  5288  0FF0  1903               	skipnz
  5289  0FF1  2FF6               	goto	l886
  5290  0FF2  1283               	bcf	3,5	;RP0=0, select bank2
  5291  0FF3  1703               	bsf	3,6	;RP1=1, select bank2
  5292  0FF4  0F13               	incfsz	(_usart_buffer^(0+256)+3),w	;volatile
  5293  0FF5  2FFB               	goto	l5314
  5294  0FF6                     l886:
  5295                           
  5296                           ;protocolo.c: 13:             retorno=1;
  5297  0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  5298  0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  5299  0FF8  01A0               	clrf	Package_Usart_is_for_me@retorno
  5300  0FF9  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  5301  0FFA  2FFE               	goto	l5318
  5302  0FFB                     l5314:
  5303                           
  5304                           ;protocolo.c: 15:             retorno=0;
  5305  0FFB  1283               	bcf	3,5	;RP0=0, select bank0
  5306  0FFC  1303               	bcf	3,6	;RP1=0, select bank0
  5307  0FFD  01A0               	clrf	Package_Usart_is_for_me@retorno
  5308  0FFE                     l5318:
  5309                           
  5310                           ;protocolo.c: 21:      return retorno;
  5311  0FFE  0820               	movf	Package_Usart_is_for_me@retorno,w
  5312  0FFF  0008               	return
  5313  1000                     __end_of_Package_Usart_is_for_me:
  5314                           
  5315                           	psect	text2
  5316  1C81                     __ptext2:	
  5317 ;; *************** function _my_delay_ms *****************
  5318 ;; Defined at:
  5319 ;;		line 5 in file "my_delay.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;  time            4    0[BANK0 ] long 
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;  i               4    6[BANK0 ] long 
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  1    wreg      void 
  5326 ;; Registers used:
  5327 ;;		wreg, status,2, status,0, btemp+1
  5328 ;; Tracked objects:
  5329 ;;		On entry : 300/0
  5330 ;;		On exit  : 300/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5333 ;;      Params:         0       4       0       0       0
  5334 ;;      Locals:         0       4       0       0       0
  5335 ;;      Temps:          0       2       0       0       0
  5336 ;;      Totals:         0      10       0       0       0
  5337 ;;Total ram usage:       10 bytes
  5338 ;; Hardware stack levels used: 1
  5339 ;; Hardware stack levels required when called: 1
  5340 ;; This function calls:
  5341 ;;		Nothing
  5342 ;; This function is called by:
  5343 ;;		_mediatemperaturaNTC
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           
  5348                           ;psect for function _my_delay_ms
  5349  1C81                     _my_delay_ms:
  5350                           
  5351                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  5352                           
  5353                           ;incstack = 0
  5354                           ; Regs used in _my_delay_ms: [wreg+status,2+status,0+btemp+1]
  5355  1C81  01A6               	clrf	my_delay_ms@i
  5356  1C82  01A7               	clrf	my_delay_ms@i+1
  5357  1C83  01A8               	clrf	my_delay_ms@i+2
  5358  1C84  01A9               	clrf	my_delay_ms@i+3
  5359  1C85                     l5264:
  5360  1C85  0829               	movf	my_delay_ms@i+3,w
  5361  1C86  3A80               	xorlw	128
  5362  1C87  00FF               	movwf	127
  5363  1C88  0823               	movf	my_delay_ms@time+3,w
  5364  1C89  3A80               	xorlw	128
  5365  1C8A  027F               	subwf	127,w
  5366  1C8B  1D03               	skipz
  5367  1C8C  2C97               	goto	u4513
  5368  1C8D  0822               	movf	my_delay_ms@time+2,w
  5369  1C8E  0228               	subwf	my_delay_ms@i+2,w
  5370  1C8F  1D03               	skipz
  5371  1C90  2C97               	goto	u4513
  5372  1C91  0821               	movf	my_delay_ms@time+1,w
  5373  1C92  0227               	subwf	my_delay_ms@i+1,w
  5374  1C93  1D03               	skipz
  5375  1C94  2C97               	goto	u4513
  5376  1C95  0820               	movf	my_delay_ms@time,w
  5377  1C96  0226               	subwf	my_delay_ms@i,w
  5378  1C97                     u4513:
  5379  1C97  1803               	btfsc	3,0
  5380  1C98  0008               	return
  5381                           
  5382                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  5383  1C99  3003               	movlw	3
  5384  1C9A  1283               	bcf	3,5	;RP0=0, select bank0
  5385  1C9B  1303               	bcf	3,6	;RP1=0, select bank0
  5386  1C9C  00A5               	movwf	??_my_delay_ms+1
  5387  1C9D  3097               	movlw	151
  5388  1C9E  00A4               	movwf	??_my_delay_ms
  5389  1C9F                     u6637:
  5390  1C9F  0BA4               	decfsz	??_my_delay_ms,f
  5391  1CA0  2C9F               	goto	u6637
  5392  1CA1  0BA5               	decfsz	??_my_delay_ms+1,f
  5393  1CA2  2C9F               	goto	u6637
  5394                           
  5395                           ;my_delay.c: 10:             }
  5396  1CA3  1283               	bcf	3,5	;RP0=0, select bank0
  5397  1CA4  1303               	bcf	3,6	;RP1=0, select bank0
  5398  1CA5  0AA6               	incf	my_delay_ms@i,f
  5399  1CA6  1903               	skipnz
  5400  1CA7  0AA7               	incf	my_delay_ms@i+1,f
  5401  1CA8  1903               	skipnz
  5402  1CA9  0AA8               	incf	my_delay_ms@i+2,f
  5403  1CAA  1903               	skipnz
  5404  1CAB  0AA9               	incf	my_delay_ms@i+3,f
  5405  1CAC  2C85               	goto	l5264
  5406  1CAD                     __end_of_my_delay_ms:
  5407                           
  5408                           	psect	text10
  5409  1047                     __ptext10:	
  5410 ;; *************** function _USART_init *****************
  5411 ;; Defined at:
  5412 ;;		line 18 in file "usart.c"
  5413 ;; Parameters:    Size  Location     Type
  5414 ;;  baudrate        4    0[BANK0 ] unsigned long 
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;  i               1    4[BANK0 ] unsigned char 
  5417 ;;  erro            1    0        unsigned char 
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  1    wreg      void 
  5420 ;; Registers used:
  5421 ;;		wreg, status,2, status,0
  5422 ;; Tracked objects:
  5423 ;;		On entry : 300/0
  5424 ;;		On exit  : 300/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5427 ;;      Params:         0       4       0       0       0
  5428 ;;      Locals:         0       1       0       0       0
  5429 ;;      Temps:          0       0       0       0       0
  5430 ;;      Totals:         0       5       0       0       0
  5431 ;;Total ram usage:        5 bytes
  5432 ;; Hardware stack levels used: 1
  5433 ;; Hardware stack levels required when called: 1
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		_main
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441                           
  5442                           ;psect for function _USART_init
  5443  1047                     _USART_init:
  5444                           
  5445                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  5446                           
  5447                           ;incstack = 0
  5448                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  5449  1047  304B               	movlw	75
  5450  1048  0621               	xorwf	USART_init@baudrate+1,w
  5451  1049  0420               	iorwf	USART_init@baudrate,w
  5452  104A  0422               	iorwf	USART_init@baudrate+2,w
  5453  104B  0423               	iorwf	USART_init@baudrate+3,w
  5454  104C  1D03               	btfss	3,2
  5455  104D  285A               	goto	l7000
  5456                           
  5457                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  5458  104E  1283               	bcf	3,5	;RP0=0, select bank0
  5459  104F  1303               	bcf	3,6	;RP1=0, select bank0
  5460  1050  1798               	bsf	24,7	;volatile
  5461                           
  5462                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  5463  1051  1618               	bsf	24,4	;volatile
  5464                           
  5465                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  5466  1052  1683               	bsf	3,5	;RP0=1, select bank1
  5467  1053  1518               	bsf	24,2	;volatile
  5468                           
  5469                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  5470  1054  1218               	bcf	24,4	;volatile
  5471                           
  5472                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  5473  1055  1318               	bcf	24,6	;volatile
  5474                           
  5475                           ;usart.c: 32:           SPBRG =12;
  5476  1056  300C               	movlw	12
  5477  1057  0099               	movwf	25	;volatile
  5478                           
  5479                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  5480  1058  170B               	bsf	11,6	;volatile
  5481  1059  2876               	goto	L5
  5482  105A                     l7000:	
  5483                           ;usart.c: 35:           }
  5484                           
  5485                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  5486                           
  5487  105A  30C2               	movlw	194
  5488  105B  1283               	bcf	3,5	;RP0=0, select bank0
  5489  105C  1303               	bcf	3,6	;RP1=0, select bank0
  5490  105D  0621               	xorwf	USART_init@baudrate+1,w
  5491  105E  1D03               	skipz
  5492  105F  2877               	goto	l7020
  5493  1060  0322               	decf	USART_init@baudrate+2,w
  5494  1061  0420               	iorwf	USART_init@baudrate,w
  5495  1062  0423               	iorwf	USART_init@baudrate+3,w
  5496  1063  1D03               	btfss	3,2
  5497  1064  2877               	goto	l7020
  5498                           
  5499                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  5500  1065  3010               	movlw	16
  5501  1066  1683               	bsf	3,5	;RP0=1, select bank1
  5502  1067  1303               	bcf	3,6	;RP1=0, select bank1
  5503  1068  0099               	movwf	25	;volatile
  5504                           
  5505                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  5506  1069  1703               	bsf	3,6	;RP1=1, select bank3
  5507  106A  1587               	bsf	7,3	;volatile
  5508                           
  5509                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  5510  106B  1303               	bcf	3,6	;RP1=0, select bank1
  5511  106C  1518               	bsf	24,2	;volatile
  5512                           
  5513                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  5514  106D  1283               	bcf	3,5	;RP0=0, select bank0
  5515  106E  1798               	bsf	24,7	;volatile
  5516                           
  5517                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  5518  106F  1683               	bsf	3,5	;RP0=1, select bank1
  5519  1070  1218               	bcf	24,4	;volatile
  5520                           
  5521                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  5522  1071  1318               	bcf	24,6	;volatile
  5523                           
  5524                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  5525  1072  1283               	bcf	3,5	;RP0=0, select bank0
  5526  1073  1618               	bsf	24,4	;volatile
  5527                           
  5528                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  5529  1074  170B               	bsf	11,6	;volatile
  5530                           
  5531                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  5532  1075  1683               	bsf	3,5	;RP0=1, select bank1
  5533  1076                     L5:
  5534  1076  168C               	bsf	12,5	;volatile
  5535  1077                     l7020:
  5536                           
  5537                           ;usart.c: 68:      TRISC6= 1;
  5538  1077  1683               	bsf	3,5	;RP0=1, select bank1
  5539  1078  1303               	bcf	3,6	;RP1=0, select bank1
  5540  1079  1707               	bsf	7,6	;volatile
  5541                           
  5542                           ;usart.c: 69:      TRISC7= 1;
  5543  107A  1787               	bsf	7,7	;volatile
  5544                           
  5545                           ;usart.c: 71:      CREN=0;
  5546  107B  1283               	bcf	3,5	;RP0=0, select bank0
  5547  107C  1218               	bcf	24,4	;volatile
  5548                           
  5549                           ;usart.c: 72:      CREN=1;
  5550  107D  1618               	bsf	24,4	;volatile
  5551                           
  5552                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  5553  107E  01A4               	clrf	USART_init@i
  5554  107F                     l7034:
  5555  107F  081A               	movf	26,w	;volatile
  5556  1080  300F               	movlw	15
  5557  1081  0AA4               	incf	USART_init@i,f
  5558  1082  0224               	subwf	USART_init@i,w
  5559  1083  1803               	btfsc	3,0
  5560  1084  0008               	return
  5561  1085  287F               	goto	l7034
  5562  1086                     __end_of_USART_init:
  5563                           
  5564                           	psect	text11
  5565  0730                     __ptext11:	
  5566 ;; *************** function _I2C_Master_Init *****************
  5567 ;; Defined at:
  5568 ;;		line 7 in file "I2C.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;  c               4   13[BANK0 ] const unsigned long 
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;		None
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  1    wreg      void 
  5575 ;; Registers used:
  5576 ;;		wreg, status,2, status,0, pclath, cstack
  5577 ;; Tracked objects:
  5578 ;;		On entry : 300/0
  5579 ;;		On exit  : 300/100
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5582 ;;      Params:         0       4       0       0       0
  5583 ;;      Locals:         0       0       0       0       0
  5584 ;;      Temps:          0       4       0       0       0
  5585 ;;      Totals:         0       8       0       0       0
  5586 ;;Total ram usage:        8 bytes
  5587 ;; Hardware stack levels used: 1
  5588 ;; Hardware stack levels required when called: 2
  5589 ;; This function calls:
  5590 ;;		___lldiv
  5591 ;; This function is called by:
  5592 ;;		_main
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           
  5597                           ;psect for function _I2C_Master_Init
  5598  0730                     _I2C_Master_Init:
  5599                           
  5600                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  5601                           
  5602                           ;incstack = 0
  5603                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  5604  0730  3028               	movlw	40
  5605  0731  0094               	movwf	20	;volatile
  5606                           
  5607                           ;I2C.c: 11:   SSPCON2 = 0;
  5608  0732  1683               	bsf	3,5	;RP0=1, select bank1
  5609  0733  0191               	clrf	17	;volatile
  5610                           
  5611                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  5612  0734  1283               	bcf	3,5	;RP0=0, select bank0
  5613  0735  082D               	movf	I2C_Master_Init@c,w
  5614  0736  00B1               	movwf	??_I2C_Master_Init
  5615  0737  082E               	movf	I2C_Master_Init@c+1,w
  5616  0738  00B2               	movwf	??_I2C_Master_Init+1
  5617  0739  082F               	movf	I2C_Master_Init@c+2,w
  5618  073A  00B3               	movwf	??_I2C_Master_Init+2
  5619  073B  0830               	movf	I2C_Master_Init@c+3,w
  5620  073C  00B4               	movwf	??_I2C_Master_Init+3
  5621  073D  3002               	movlw	2
  5622  073E                     u6225:
  5623  073E  1003               	clrc
  5624  073F  0DB1               	rlf	??_I2C_Master_Init,f
  5625  0740  0DB2               	rlf	??_I2C_Master_Init+1,f
  5626  0741  0DB3               	rlf	??_I2C_Master_Init+2,f
  5627  0742  0DB4               	rlf	??_I2C_Master_Init+3,f
  5628  0743  3EFF               	addlw	-1
  5629  0744  1D03               	skipz
  5630  0745  2F3E               	goto	u6225
  5631  0746  0834               	movf	??_I2C_Master_Init+3,w
  5632  0747  00A3               	movwf	___lldiv@divisor+3
  5633  0748  0833               	movf	??_I2C_Master_Init+2,w
  5634  0749  00A2               	movwf	___lldiv@divisor+2
  5635  074A  0832               	movf	??_I2C_Master_Init+1,w
  5636  074B  00A1               	movwf	___lldiv@divisor+1
  5637  074C  0831               	movf	??_I2C_Master_Init,w
  5638  074D  00A0               	movwf	___lldiv@divisor
  5639  074E  307A               	movlw	122
  5640  074F  01A7               	clrf	___lldiv@dividend+3
  5641  0750  00A6               	movwf	___lldiv@dividend+2
  5642  0751  3012               	movlw	18
  5643  0752  00A5               	movwf	___lldiv@dividend+1
  5644  0753  01A4               	clrf	___lldiv@dividend
  5645  0754  275D               	fcall	___lldiv
  5646  0755  0820               	movf	?___lldiv,w
  5647  0756  3EFF               	addlw	255
  5648  0757  1683               	bsf	3,5	;RP0=1, select bank1
  5649  0758  0093               	movwf	19	;volatile
  5650                           
  5651                           ;I2C.c: 13:   SSPSTAT = 0;
  5652  0759  0194               	clrf	20	;volatile
  5653                           
  5654                           ;I2C.c: 14:   TRISC3 = 1;
  5655  075A  1587               	bsf	7,3	;volatile
  5656                           
  5657                           ;I2C.c: 15:   TRISC4 = 1;
  5658  075B  1607               	bsf	7,4	;volatile
  5659  075C  0008               	return
  5660  075D                     __end_of_I2C_Master_Init:
  5661  075D                     __ptext12:	
  5662 ;; *************** function ___lldiv *****************
  5663 ;; Defined at:
  5664 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  5665 ;; Parameters:    Size  Location     Type
  5666 ;;  divisor         4    0[BANK0 ] unsigned long 
  5667 ;;  dividend        4    4[BANK0 ] unsigned long 
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;  quotient        4    8[BANK0 ] unsigned long 
  5670 ;;  counter         1   12[BANK0 ] unsigned char 
  5671 ;; Return value:  Size  Location     Type
  5672 ;;                  4    0[BANK0 ] unsigned long 
  5673 ;; Registers used:
  5674 ;;		wreg, status,2, status,0
  5675 ;; Tracked objects:
  5676 ;;		On entry : 300/0
  5677 ;;		On exit  : 300/0
  5678 ;;		Unchanged: 0/0
  5679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5680 ;;      Params:         0       8       0       0       0
  5681 ;;      Locals:         0       5       0       0       0
  5682 ;;      Temps:          0       0       0       0       0
  5683 ;;      Totals:         0      13       0       0       0
  5684 ;;Total ram usage:       13 bytes
  5685 ;; Hardware stack levels used: 1
  5686 ;; Hardware stack levels required when called: 1
  5687 ;; This function calls:
  5688 ;;		Nothing
  5689 ;; This function is called by:
  5690 ;;		_I2C_Master_Init
  5691 ;; This function uses a non-reentrant model
  5692 ;;
  5693                           
  5694                           
  5695                           ;psect for function ___lldiv
  5696  075D                     ___lldiv:
  5697                           
  5698                           ;incstack = 0
  5699                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5700  075D  01A8               	clrf	___lldiv@quotient
  5701  075E  01A9               	clrf	___lldiv@quotient+1
  5702  075F  01AA               	clrf	___lldiv@quotient+2
  5703  0760  01AB               	clrf	___lldiv@quotient+3
  5704  0761  0823               	movf	___lldiv@divisor+3,w
  5705  0762  0422               	iorwf	___lldiv@divisor+2,w
  5706  0763  0421               	iorwf	___lldiv@divisor+1,w
  5707  0764  0420               	iorwf	___lldiv@divisor,w
  5708  0765  1903               	skipnz
  5709  0766  2F9C               	goto	l6966
  5710  0767  01AC               	clrf	___lldiv@counter
  5711  0768                     L6:
  5712  0768  0AAC               	incf	___lldiv@counter,f
  5713  0769  1BA3               	btfsc	___lldiv@divisor+3,7
  5714  076A  2F71               	goto	l6954
  5715  076B  1003               	clrc
  5716  076C  0DA0               	rlf	___lldiv@divisor,f
  5717  076D  0DA1               	rlf	___lldiv@divisor+1,f
  5718  076E  0DA2               	rlf	___lldiv@divisor+2,f
  5719  076F  0DA3               	rlf	___lldiv@divisor+3,f
  5720  0770  2F68               	goto	L6
  5721  0771                     l6954:
  5722  0771  1003               	clrc
  5723  0772  0DA8               	rlf	___lldiv@quotient,f
  5724  0773  0DA9               	rlf	___lldiv@quotient+1,f
  5725  0774  0DAA               	rlf	___lldiv@quotient+2,f
  5726  0775  0DAB               	rlf	___lldiv@quotient+3,f
  5727  0776  0823               	movf	___lldiv@divisor+3,w
  5728  0777  0227               	subwf	___lldiv@dividend+3,w
  5729  0778  1D03               	skipz
  5730  0779  2F84               	goto	u6205
  5731  077A  0822               	movf	___lldiv@divisor+2,w
  5732  077B  0226               	subwf	___lldiv@dividend+2,w
  5733  077C  1D03               	skipz
  5734  077D  2F84               	goto	u6205
  5735  077E  0821               	movf	___lldiv@divisor+1,w
  5736  077F  0225               	subwf	___lldiv@dividend+1,w
  5737  0780  1D03               	skipz
  5738  0781  2F84               	goto	u6205
  5739  0782  0820               	movf	___lldiv@divisor,w
  5740  0783  0224               	subwf	___lldiv@dividend,w
  5741  0784                     u6205:
  5742  0784  1C03               	skipc
  5743  0785  2F96               	goto	L7
  5744  0786  0820               	movf	___lldiv@divisor,w
  5745  0787  02A4               	subwf	___lldiv@dividend,f
  5746  0788  0821               	movf	___lldiv@divisor+1,w
  5747  0789  1C03               	skipc
  5748  078A  0F21               	incfsz	___lldiv@divisor+1,w
  5749  078B  02A5               	subwf	___lldiv@dividend+1,f
  5750  078C  0822               	movf	___lldiv@divisor+2,w
  5751  078D  1C03               	skipc
  5752  078E  0F22               	incfsz	___lldiv@divisor+2,w
  5753  078F  02A6               	subwf	___lldiv@dividend+2,f
  5754  0790  0823               	movf	___lldiv@divisor+3,w
  5755  0791  1C03               	skipc
  5756  0792  0F23               	incfsz	___lldiv@divisor+3,w
  5757  0793  02A7               	subwf	___lldiv@dividend+3,f
  5758  0794  1428               	bsf	___lldiv@quotient,0
  5759  0795  1003               	clrc
  5760  0796                     L7:
  5761  0796  0CA3               	rrf	___lldiv@divisor+3,f
  5762  0797  0CA2               	rrf	___lldiv@divisor+2,f
  5763  0798  0CA1               	rrf	___lldiv@divisor+1,f
  5764  0799  0CA0               	rrf	___lldiv@divisor,f
  5765  079A  0BAC               	decfsz	___lldiv@counter,f
  5766  079B  2F71               	goto	l6954
  5767  079C                     l6966:
  5768  079C  082B               	movf	___lldiv@quotient+3,w
  5769  079D  00A3               	movwf	?___lldiv+3
  5770  079E  082A               	movf	___lldiv@quotient+2,w
  5771  079F  00A2               	movwf	?___lldiv+2
  5772  07A0  0829               	movf	___lldiv@quotient+1,w
  5773  07A1  00A1               	movwf	?___lldiv+1
  5774  07A2  0828               	movf	___lldiv@quotient,w
  5775  07A3  00A0               	movwf	?___lldiv
  5776  07A4  0008               	return
  5777  07A5                     __end_of___lldiv:
  5778                           
  5779                           	psect	text14
  5780  1C48                     __ptext14:	
  5781 ;; *************** function _strcpy *****************
  5782 ;; Defined at:
  5783 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strcpy.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;  to              1    wreg     PTR unsigned char 
  5786 ;;		 -> buffer(33), 
  5787 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  5788 ;;		 -> STR_1(8), 
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;  to              1    2[BANK0 ] PTR unsigned char 
  5791 ;;		 -> buffer(33), 
  5792 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  5793 ;;		 -> buffer(33), 
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  1    wreg      PTR unsigned char 
  5796 ;; Registers used:
  5797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5798 ;; Tracked objects:
  5799 ;;		On entry : 300/0
  5800 ;;		On exit  : B00/800
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5803 ;;      Params:         0       1       0       0       0
  5804 ;;      Locals:         0       2       0       0       0
  5805 ;;      Temps:          0       1       0       0       0
  5806 ;;      Totals:         0       4       0       0       0
  5807 ;;Total ram usage:        4 bytes
  5808 ;; Hardware stack levels used: 2
  5809 ;; Hardware stack levels required when called: 1
  5810 ;; This function calls:
  5811 ;;		Nothing
  5812 ;; This function is called by:
  5813 ;;		_Decodify_Command
  5814 ;; This function uses a non-reentrant model
  5815 ;;
  5816                           
  5817                           
  5818                           ;psect for function _strcpy
  5819  1C48                     _strcpy:
  5820                           
  5821                           ;incstack = 0
  5822                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  5823                           ;strcpy@to stored from wreg
  5824  1C48  00A2               	movwf	strcpy@to
  5825  1C49  00A3               	movwf	strcpy@cp
  5826  1C4A                     l5214:
  5827  1C4A  0820               	movf	strcpy@from,w
  5828  1C4B  0084               	movwf	4
  5829  1C4C  160A  118A  200A  160A  158A  	fcall	stringdir
  5830  1C51  00A1               	movwf	??_strcpy
  5831  1C52  0823               	movf	strcpy@cp,w
  5832  1C53  0084               	movwf	4
  5833  1C54  0821               	movf	??_strcpy,w
  5834  1C55  1783               	bsf	3,7	;select IRP bank2
  5835  1C56  0080               	movwf	0
  5836  1C57  0800               	movf	0,w
  5837  1C58  1903               	btfsc	3,2
  5838  1C59  0008               	return
  5839  1C5A  0AA3               	incf	strcpy@cp,f
  5840  1C5B  0AA0               	incf	strcpy@from,f
  5841  1C5C  2C4A               	goto	l5214
  5842  1C5D                     __end_of_strcpy:
  5843                           
  5844                           	psect	text15
  5845  07A5                     __ptext15:	
  5846 ;; *************** function _USART_to_Protocol *****************
  5847 ;; Defined at:
  5848 ;;		line 77 in file "usart.c"
  5849 ;; Parameters:    Size  Location     Type
  5850 ;;  usart_protoc    1    wreg     PTR struct .
  5851 ;;		 -> usart_protocol(58), 
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  5854 ;;		 -> usart_protocol(58), 
  5855 ;;  i               2    2[BANK0 ] int 
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  1    wreg      void 
  5858 ;; Registers used:
  5859 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5860 ;; Tracked objects:
  5861 ;;		On entry : 300/300
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5865 ;;      Params:         0       0       0       0       0
  5866 ;;      Locals:         0       3       0       0       0
  5867 ;;      Temps:          0       2       0       0       0
  5868 ;;      Totals:         0       5       0       0       0
  5869 ;;Total ram usage:        5 bytes
  5870 ;; Hardware stack levels used: 1
  5871 ;; Hardware stack levels required when called: 1
  5872 ;; This function calls:
  5873 ;;		Nothing
  5874 ;; This function is called by:
  5875 ;;		_Decodify_Command
  5876 ;; This function uses a non-reentrant model
  5877 ;;
  5878                           
  5879                           
  5880                           ;psect for function _USART_to_Protocol
  5881  07A5                     _USART_to_Protocol:
  5882                           
  5883                           ;incstack = 0
  5884                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  5885                           ;USART_to_Protocol@usart_protocol stored from wreg
  5886  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  5887  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  5888  07A7  00A4               	movwf	USART_to_Protocol@usart_protocol
  5889                           
  5890                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  5891  07A8  0084               	movwf	4
  5892  07A9  1703               	bsf	3,6	;RP1=1, select bank2
  5893  07AA  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  5894  07AB  1783               	bsf	3,7	;select IRP bank2
  5895  07AC  0080               	movwf	0
  5896  07AD  0A84               	incf	4,f
  5897  07AE  0810               	movf	_usart_buffer^(0+256),w	;volatile
  5898  07AF  0080               	movwf	0
  5899                           
  5900                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  5901  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  5902  07B1  0824               	movf	USART_to_Protocol@usart_protocol,w
  5903  07B2  3E02               	addlw	2
  5904  07B3  0084               	movwf	4
  5905  07B4  1703               	bsf	3,6	;RP1=1, select bank2
  5906  07B5  0812               	movf	(_usart_buffer^(0+256)+2),w	;volatile
  5907  07B6  0080               	movwf	0
  5908                           
  5909                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  5910  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  5911  07B8  0824               	movf	USART_to_Protocol@usart_protocol,w
  5912  07B9  3E03               	addlw	3
  5913  07BA  0084               	movwf	4
  5914  07BB  1703               	bsf	3,6	;RP1=1, select bank2
  5915  07BC  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  5916  07BD  0080               	movwf	0
  5917                           
  5918                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  5919  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  5920  07BF  0824               	movf	USART_to_Protocol@usart_protocol,w
  5921  07C0  3E04               	addlw	4
  5922  07C1  0084               	movwf	4
  5923  07C2  1703               	bsf	3,6	;RP1=1, select bank2
  5924  07C3  0814               	movf	(_usart_buffer^(0+256)+4),w	;volatile
  5925  07C4  0080               	movwf	0
  5926                           
  5927                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  5928  07C5  1303               	bcf	3,6	;RP1=0, select bank0
  5929  07C6  0824               	movf	USART_to_Protocol@usart_protocol,w
  5930  07C7  3E05               	addlw	5
  5931  07C8  0084               	movwf	4
  5932  07C9  1703               	bsf	3,6	;RP1=1, select bank2
  5933  07CA  0815               	movf	(_usart_buffer^(0+256)+5),w	;volatile
  5934  07CB  0080               	movwf	0
  5935                           
  5936                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  5937  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  5938  07CD  01A2               	clrf	USART_to_Protocol@i
  5939  07CE  01A3               	clrf	USART_to_Protocol@i+1
  5940  07CF                     l5208:
  5941  07CF  0824               	movf	USART_to_Protocol@usart_protocol,w
  5942  07D0  3E05               	addlw	5
  5943  07D1  0084               	movwf	4
  5944  07D2  0823               	movf	USART_to_Protocol@i+1,w
  5945  07D3  3A80               	xorlw	128
  5946  07D4  00A0               	movwf	??_USART_to_Protocol
  5947  07D5  3080               	movlw	128
  5948  07D6  0220               	subwf	??_USART_to_Protocol,w
  5949  07D7  1D03               	skipz
  5950  07D8  2FDB               	goto	u4475
  5951  07D9  0800               	movf	0,w
  5952  07DA  0222               	subwf	USART_to_Protocol@i,w
  5953  07DB                     u4475:
  5954  07DB  1803               	btfsc	3,0
  5955  07DC  0008               	return
  5956                           
  5957                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  5958  07DD  1283               	bcf	3,5	;RP0=0, select bank0
  5959  07DE  1303               	bcf	3,6	;RP1=0, select bank0
  5960  07DF  0822               	movf	USART_to_Protocol@i,w
  5961  07E0  3E16               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  5962  07E1  0084               	movwf	4
  5963  07E2  1783               	bsf	3,7	;select IRP bank2
  5964  07E3  0800               	movf	0,w
  5965  07E4  00A0               	movwf	??_USART_to_Protocol
  5966  07E5  0822               	movf	USART_to_Protocol@i,w
  5967  07E6  0724               	addwf	USART_to_Protocol@usart_protocol,w
  5968  07E7  00A1               	movwf	??_USART_to_Protocol+1
  5969  07E8  3E06               	addlw	6
  5970  07E9  0084               	movwf	4
  5971  07EA  0820               	movf	??_USART_to_Protocol,w
  5972  07EB  0080               	movwf	0
  5973  07EC  0AA2               	incf	USART_to_Protocol@i,f
  5974  07ED  1903               	skipnz
  5975  07EE  0AA3               	incf	USART_to_Protocol@i+1,f
  5976  07EF  2FCF               	goto	l5208
  5977  07F0                     __end_of_USART_to_Protocol:
  5978                           
  5979                           	psect	text18
  5980  1CAD                     __ptext18:	
  5981 ;; *************** function _USART_put_string *****************
  5982 ;; Defined at:
  5983 ;;		line 167 in file "usart.c"
  5984 ;; Parameters:    Size  Location     Type
  5985 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  5986 ;;		 -> STR_2(3), buffer(33), 
  5987 ;; Auto vars:     Size  Location     Type
  5988 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  5989 ;;		 -> STR_2(3), buffer(33), 
  5990 ;; Return value:  Size  Location     Type
  5991 ;;                  1    wreg      void 
  5992 ;; Registers used:
  5993 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5994 ;; Tracked objects:
  5995 ;;		On entry : 300/800
  5996 ;;		On exit  : 300/100
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5999 ;;      Params:         0       2       0       0       0
  6000 ;;      Locals:         0       2       0       0       0
  6001 ;;      Temps:          0       0       0       0       0
  6002 ;;      Totals:         0       4       0       0       0
  6003 ;;Total ram usage:        4 bytes
  6004 ;; Hardware stack levels used: 1
  6005 ;; Hardware stack levels required when called: 2
  6006 ;; This function calls:
  6007 ;;		_USART_putc
  6008 ;; This function is called by:
  6009 ;;		_Decodify_Command
  6010 ;;		_Send_Reply_OK
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014                           
  6015                           ;psect for function _USART_put_string
  6016  1CAD                     _USART_put_string:
  6017  1CAD                     l6402:	
  6018                           ;incstack = 0
  6019                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6020                           
  6021                           
  6022                           ;usart.c: 167: void USART_put_string(char *vetor);usart.c: 168: {;usart.c: 169:     char
      +                           *ptr;;usart.c: 170:     ptr=vetor;
  6023  1CAD  0821               	movf	USART_put_string@vetor,w
  6024  1CAE  00A3               	movwf	USART_put_string@ptr
  6025  1CAF  0822               	movf	USART_put_string@vetor+1,w
  6026  1CB0  00A4               	movwf	USART_put_string@ptr+1
  6027  1CB1                     l6408:	
  6028                           ;usart.c: 171:     while(*ptr){
  6029                           
  6030                           
  6031                           ;usart.c: 171:     while(*ptr){
  6032  1CB1  0824               	movf	USART_put_string@ptr+1,w
  6033  1CB2  00FF               	movwf	127
  6034  1CB3  0823               	movf	USART_put_string@ptr,w
  6035  1CB4  0084               	movwf	4
  6036  1CB5  160A  118A  2000  160A  158A  	fcall	stringtab
  6037  1CBA  3A00               	xorlw	0
  6038  1CBB  1903               	btfsc	3,2
  6039  1CBC  2CD0               	goto	l6410
  6040                           
  6041                           ;usart.c: 172:         USART_putc(*ptr);
  6042  1CBD  0824               	movf	USART_put_string@ptr+1,w
  6043  1CBE  00FF               	movwf	127
  6044  1CBF  0823               	movf	USART_put_string@ptr,w
  6045  1CC0  0084               	movwf	4
  6046  1CC1  160A  118A  2000  160A  158A  	fcall	stringtab
  6047  1CC6  120A  118A  2349  160A  158A  	fcall	_USART_putc
  6048                           
  6049                           ;usart.c: 173:         ptr++;
  6050  1CCB  1283               	bcf	3,5	;RP0=0, select bank0
  6051  1CCC  0AA3               	incf	USART_put_string@ptr,f
  6052  1CCD  1903               	skipnz
  6053  1CCE  0AA4               	incf	USART_put_string@ptr+1,f
  6054  1CCF  2CB1               	goto	l6408
  6055  1CD0                     l6410:
  6056                           
  6057                           ;usart.c: 175:     USART_putc(*ptr);
  6058  1CD0  0824               	movf	USART_put_string@ptr+1,w
  6059  1CD1  00FF               	movwf	127
  6060  1CD2  0823               	movf	USART_put_string@ptr,w
  6061  1CD3  0084               	movwf	4
  6062  1CD4  160A  118A  2000   	fcall	stringtab
  6063  1CD7  120A  118A  2B49   	ljmp	_USART_putc
  6064  1CDA                     __end_of_USART_put_string:
  6065                           
  6066                           	psect	text19
  6067  10F8                     __ptext19:	
  6068 ;; *************** function _Save_Log *****************
  6069 ;; Defined at:
  6070 ;;		line 1004 in file "SlaveLiofilizadorVer1.c"
  6071 ;; Parameters:    Size  Location     Type
  6072 ;;  add_datalog     4   17[BANK1 ] unsigned long 
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;		None
  6075 ;; Return value:  Size  Location     Type
  6076 ;;                  1    wreg      void 
  6077 ;; Registers used:
  6078 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6079 ;; Tracked objects:
  6080 ;;		On entry : 300/100
  6081 ;;		On exit  : 0/0
  6082 ;;		Unchanged: 0/0
  6083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6084 ;;      Params:         0       0       4       0       0
  6085 ;;      Locals:         0       0       0       0       0
  6086 ;;      Temps:          0       0       0       0       0
  6087 ;;      Totals:         0       0       4       0       0
  6088 ;;Total ram usage:        4 bytes
  6089 ;; Hardware stack levels used: 1
  6090 ;; Hardware stack levels required when called: 5
  6091 ;; This function calls:
  6092 ;;		_EEPROM_24C1025_Write_Int
  6093 ;;		___flmul
  6094 ;;		___fltol
  6095 ;; This function is called by:
  6096 ;;		_Decodify_Command
  6097 ;; This function uses a non-reentrant model
  6098 ;;
  6099                           
  6100                           
  6101                           ;psect for function _Save_Log
  6102  10F8                     _Save_Log:
  6103                           
  6104                           ;SlaveLiofilizadorVer1.c: 1005:      EEPROM_24C1025_Write_Int(0x00, add_datalog, Tempera
      +                          tura0*10.0);
  6105                           
  6106                           ;incstack = 0
  6107                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6108  10F8  21C2  160A  118A   	fcall	PL44	;call to abstracted procedure
  6109  10FB  0817               	movf	(_Temperatura0+3)^(0+384),w
  6110  10FC  1283               	bcf	3,5	;RP0=0, select bank0
  6111  10FD  1303               	bcf	3,6	;RP1=0, select bank0
  6112  10FE  00DB               	movwf	___flmul@a+3
  6113  10FF  1683               	bsf	3,5	;RP0=1, select bank3
  6114  1100  1703               	bsf	3,6	;RP1=1, select bank3
  6115  1101  0816               	movf	(_Temperatura0+2)^(0+384),w
  6116  1102  1283               	bcf	3,5	;RP0=0, select bank0
  6117  1103  1303               	bcf	3,6	;RP1=0, select bank0
  6118  1104  00DA               	movwf	___flmul@a+2
  6119  1105  1683               	bsf	3,5	;RP0=1, select bank3
  6120  1106  1703               	bsf	3,6	;RP1=1, select bank3
  6121  1107  0815               	movf	(_Temperatura0+1)^(0+384),w
  6122  1108  1283               	bcf	3,5	;RP0=0, select bank0
  6123  1109  1303               	bcf	3,6	;RP1=0, select bank0
  6124  110A  00D9               	movwf	___flmul@a+1
  6125  110B  1683               	bsf	3,5	;RP0=1, select bank3
  6126  110C  1703               	bsf	3,6	;RP1=1, select bank3
  6127  110D  0814               	movf	_Temperatura0^(0+384),w
  6128  110E  21B8               	fcall	PL42	;call to abstracted procedure
  6129  110F  120A  118A  2392  160A  118A  	fcall	___flmul
  6130  1114  21A8  160A  118A   	fcall	PL18	;call to abstracted procedure
  6131  1117  214E               	fcall	___fltol
  6132  1118  1683               	bsf	3,5	;RP0=1, select bank1
  6133  1119  0821               	movf	(?___fltol+1)^(0+128),w
  6134  111A  00AD               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  6135  111B  0820               	movf	?___fltol^(0+128),w
  6136  111C  00AC               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  6137  111D  3000               	movlw	0
  6138  111E  120A  118A  2373  160A  118A  	fcall	_EEPROM_24C1025_Write_Int
  6139                           
  6140                           ;SlaveLiofilizadorVer1.c: 1006:      EEPROM_24C1025_Write_Int(0x01, add_datalog, Tempera
      +                          tura1*10.0);
  6141  1123  1683               	bsf	3,5	;RP0=1, select bank1
  6142  1124  1303               	bcf	3,6	;RP1=0, select bank1
  6143  1125  21C2  160A  118A   	fcall	PL44	;call to abstracted procedure
  6144  1128  0813               	movf	(_Temperatura1+3)^(0+384),w
  6145  1129  1283               	bcf	3,5	;RP0=0, select bank0
  6146  112A  1303               	bcf	3,6	;RP1=0, select bank0
  6147  112B  00DB               	movwf	___flmul@a+3
  6148  112C  1683               	bsf	3,5	;RP0=1, select bank3
  6149  112D  1703               	bsf	3,6	;RP1=1, select bank3
  6150  112E  0812               	movf	(_Temperatura1+2)^(0+384),w
  6151  112F  1283               	bcf	3,5	;RP0=0, select bank0
  6152  1130  1303               	bcf	3,6	;RP1=0, select bank0
  6153  1131  00DA               	movwf	___flmul@a+2
  6154  1132  1683               	bsf	3,5	;RP0=1, select bank3
  6155  1133  1703               	bsf	3,6	;RP1=1, select bank3
  6156  1134  0811               	movf	(_Temperatura1+1)^(0+384),w
  6157  1135  1283               	bcf	3,5	;RP0=0, select bank0
  6158  1136  1303               	bcf	3,6	;RP1=0, select bank0
  6159  1137  00D9               	movwf	___flmul@a+1
  6160  1138  1683               	bsf	3,5	;RP0=1, select bank3
  6161  1139  1703               	bsf	3,6	;RP1=1, select bank3
  6162  113A  0810               	movf	_Temperatura1^(0+384),w
  6163  113B  21B8               	fcall	PL42	;call to abstracted procedure
  6164  113C  120A  118A  2392  160A  118A  	fcall	___flmul
  6165  1141  21A8  160A  118A   	fcall	PL18	;call to abstracted procedure
  6166  1144  214E               	fcall	___fltol
  6167  1145  1683               	bsf	3,5	;RP0=1, select bank1
  6168  1146  0821               	movf	(?___fltol+1)^(0+128),w
  6169  1147  00AD               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  6170  1148  0820               	movf	?___fltol^(0+128),w
  6171  1149  00AC               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  6172  114A  3001               	movlw	1
  6173  114B  120A  118A  2B73   	ljmp	_EEPROM_24C1025_Write_Int
  6174  114E                     __end_of_Save_Log:
  6175  114E                     __ptext20:	
  6176 ;; *************** function ___fltol *****************
  6177 ;; Defined at:
  6178 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;  f1              4    0[BANK1 ] void 
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;  exp1            1   78[BANK0 ] unsigned char 
  6183 ;;  sign1           1   77[BANK0 ] unsigned char 
  6184 ;; Return value:  Size  Location     Type
  6185 ;;                  4    0[BANK1 ] long 
  6186 ;; Registers used:
  6187 ;;		wreg, status,2, status,0
  6188 ;; Tracked objects:
  6189 ;;		On entry : 300/100
  6190 ;;		On exit  : 200/0
  6191 ;;		Unchanged: 0/0
  6192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6193 ;;      Params:         0       0       4       0       0
  6194 ;;      Locals:         0       2       0       0       0
  6195 ;;      Temps:          0       0       4       0       0
  6196 ;;      Totals:         0       2       8       0       0
  6197 ;;Total ram usage:       10 bytes
  6198 ;; Hardware stack levels used: 1
  6199 ;; Hardware stack levels required when called: 1
  6200 ;; This function calls:
  6201 ;;		Nothing
  6202 ;; This function is called by:
  6203 ;;		_Decodify_Command
  6204 ;;		_Save_Log
  6205 ;; This function uses a non-reentrant model
  6206 ;;
  6207                           
  6208                           
  6209                           ;psect for function ___fltol
  6210  114E                     ___fltol:
  6211                           
  6212                           ;incstack = 0
  6213                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6214  114E  1003               	clrc
  6215  114F  0D22               	rlf	(___fltol@f1+2)^(0+128),w
  6216  1150  0D23               	rlf	(___fltol@f1+3)^(0+128),w
  6217  1151  1283               	bcf	3,5	;RP0=0, select bank0
  6218  1152  00EE               	movwf	___fltol@exp1
  6219  1153  086E               	movf	___fltol@exp1,w
  6220  1154  1D03               	btfss	3,2
  6221  1155  295C               	goto	l4654
  6222  1156                     l4652:
  6223  1156  1683               	bsf	3,5	;RP0=1, select bank1
  6224  1157  01A0               	clrf	?___fltol^(0+128)
  6225  1158  01A1               	clrf	(?___fltol+1)^(0+128)
  6226  1159  01A2               	clrf	(?___fltol+2)^(0+128)
  6227  115A  01A3               	clrf	(?___fltol+3)^(0+128)
  6228  115B  0008               	return
  6229  115C                     l4654:
  6230  115C  1683               	bsf	3,5	;RP0=1, select bank1
  6231  115D  0820               	movf	___fltol@f1^(0+128),w
  6232  115E  00A4               	movwf	??___fltol^(0+128)
  6233  115F  0821               	movf	(___fltol@f1+1)^(0+128),w
  6234  1160  00A5               	movwf	(??___fltol^(0+128)+1)
  6235  1161  0822               	movf	(___fltol@f1+2)^(0+128),w
  6236  1162  00A6               	movwf	(??___fltol^(0+128)+2)
  6237  1163  0823               	movf	(___fltol@f1+3)^(0+128),w
  6238  1164  00A7               	movwf	(??___fltol^(0+128)+3)
  6239  1165  301F               	movlw	31
  6240  1166                     u3925:
  6241  1166  1003               	clrc
  6242  1167  0CA7               	rrf	(??___fltol^(0+128)+3),f
  6243  1168  0CA6               	rrf	(??___fltol^(0+128)+2),f
  6244  1169  0CA5               	rrf	(??___fltol^(0+128)+1),f
  6245  116A  0CA4               	rrf	??___fltol^(0+128),f
  6246  116B  3EFF               	addlw	-1
  6247  116C  1D03               	skipz
  6248  116D  2966               	goto	u3925
  6249  116E  0824               	movf	??___fltol^(0+128),w
  6250  116F  1283               	bcf	3,5	;RP0=0, select bank0
  6251  1170  00ED               	movwf	___fltol@sign1
  6252  1171  1683               	bsf	3,5	;RP0=1, select bank1
  6253  1172  3096               	movlw	150
  6254  1173  17A2               	bsf	(___fltol@f1^(0+128)+2),7
  6255  1174  01A3               	clrf	(___fltol@f1+3)^(0+128)
  6256  1175  1283               	bcf	3,5	;RP0=0, select bank0
  6257  1176  02EE               	subwf	___fltol@exp1,f
  6258  1177  1FEE               	btfss	___fltol@exp1,7
  6259  1178  2988               	goto	l4672
  6260  1179  086E               	movf	___fltol@exp1,w
  6261  117A  3A80               	xorlw	128
  6262  117B  3E97               	addlw	151
  6263  117C  1C03               	btfss	3,0
  6264  117D  2956               	goto	l4652
  6265  117E                     l4668:
  6266  117E  1003               	clrc
  6267  117F  1683               	bsf	3,5	;RP0=1, select bank1
  6268  1180  0CA3               	rrf	(___fltol@f1+3)^(0+128),f
  6269  1181  0CA2               	rrf	(___fltol@f1+2)^(0+128),f
  6270  1182  0CA1               	rrf	(___fltol@f1+1)^(0+128),f
  6271  1183  0CA0               	rrf	___fltol@f1^(0+128),f
  6272  1184  1283               	bcf	3,5	;RP0=0, select bank0
  6273  1185  0FEE               	incfsz	___fltol@exp1,f
  6274  1186  297E               	goto	l4668
  6275  1187  2998               	goto	l4680
  6276  1188                     l4672:
  6277  1188  3020               	movlw	32
  6278  1189  026E               	subwf	___fltol@exp1,w
  6279  118A  1803               	btfsc	3,0
  6280  118B  2956               	goto	l4652
  6281  118C                     l4678:
  6282  118C  086E               	movf	___fltol@exp1,w
  6283  118D  1903               	btfsc	3,2
  6284  118E  2998               	goto	l4680
  6285  118F  1003               	clrc
  6286  1190  1683               	bsf	3,5	;RP0=1, select bank1
  6287  1191  0DA0               	rlf	___fltol@f1^(0+128),f
  6288  1192  0DA1               	rlf	(___fltol@f1+1)^(0+128),f
  6289  1193  0DA2               	rlf	(___fltol@f1+2)^(0+128),f
  6290  1194  0DA3               	rlf	(___fltol@f1+3)^(0+128),f
  6291  1195  1283               	bcf	3,5	;RP0=0, select bank0
  6292  1196  03EE               	decf	___fltol@exp1,f
  6293  1197  298C               	goto	l4678
  6294  1198                     l4680:
  6295  1198  086D               	movf	___fltol@sign1,w
  6296  1199  1903               	btfsc	3,2
  6297  119A  0008               	return
  6298  119B  1683               	bsf	3,5	;RP0=1, select bank1
  6299  119C  09A0               	comf	___fltol@f1^(0+128),f
  6300  119D  09A1               	comf	(___fltol@f1+1)^(0+128),f
  6301  119E  09A2               	comf	(___fltol@f1+2)^(0+128),f
  6302  119F  09A3               	comf	(___fltol@f1+3)^(0+128),f
  6303  11A0  0AA0               	incf	___fltol@f1^(0+128),f
  6304  11A1  1903               	skipnz
  6305  11A2  0AA1               	incf	(___fltol@f1+1)^(0+128),f
  6306  11A3  1903               	skipnz
  6307  11A4  0AA2               	incf	(___fltol@f1+2)^(0+128),f
  6308  11A5  1903               	skipnz
  6309  11A6  0AA3               	incf	(___fltol@f1+3)^(0+128),f
  6310  11A7  0008               	return
  6311  11A8                     __end_of___fltol:
  6312  11A8                     PL18:
  6313  11A8  0857               	movf	?___flmul+3,w
  6314  11A9  1683               	bsf	3,5	;RP0=1, select bank1
  6315  11AA  00A3               	movwf	(___fltol@f1+3)^(0+128)
  6316  11AB  1283               	bcf	3,5	;RP0=0, select bank0
  6317  11AC  0856               	movf	?___flmul+2,w
  6318  11AD  1683               	bsf	3,5	;RP0=1, select bank1
  6319  11AE  00A2               	movwf	(___fltol@f1+2)^(0+128)
  6320  11AF  1283               	bcf	3,5	;RP0=0, select bank0
  6321  11B0  0855               	movf	?___flmul+1,w
  6322  11B1  1683               	bsf	3,5	;RP0=1, select bank1
  6323  11B2  00A1               	movwf	(___fltol@f1+1)^(0+128)
  6324  11B3  1283               	bcf	3,5	;RP0=0, select bank0
  6325  11B4  0854               	movf	?___flmul,w
  6326  11B5  1683               	bsf	3,5	;RP0=1, select bank1
  6327  11B6  00A0               	movwf	___fltol@f1^(0+128)
  6328  11B7  0008               	return
  6329  11B8                     __end_ofPL18:
  6330  11B8                     PL42:
  6331  11B8  1283               	bcf	3,5	;RP0=0, select bank0
  6332  11B9  1303               	bcf	3,6	;RP1=0, select bank0
  6333  11BA  00D8               	movwf	___flmul@a
  6334  11BB  3041               	movlw	65
  6335  11BC  00D7               	movwf	___flmul@b+3
  6336  11BD  3020               	movlw	32
  6337  11BE  00D6               	movwf	___flmul@b+2
  6338  11BF  01D5               	clrf	___flmul@b+1
  6339  11C0  01D4               	clrf	___flmul@b
  6340  11C1  0008               	return
  6341  11C2                     __end_ofPL42:
  6342  11C2                     PL44:
  6343  11C2  0834               	movf	(Save_Log@add_datalog+3)^(0+128),w
  6344  11C3  00AB               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
  6345  11C4  0833               	movf	(Save_Log@add_datalog+2)^(0+128),w
  6346  11C5  00AA               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
  6347  11C6  0832               	movf	(Save_Log@add_datalog+1)^(0+128),w
  6348  11C7  00A9               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
  6349  11C8  0831               	movf	Save_Log@add_datalog^(0+128),w
  6350  11C9  00A8               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
  6351  11CA  1703               	bsf	3,6	;RP1=1, select bank3
  6352  11CB  0008               	return
  6353  11CC                     __end_ofPL44:
  6354                           
  6355                           	psect	text23
  6356  1C5D                     __ptext23:	
  6357 ;; *************** function _PROCULUS_VP_Write_String *****************
  6358 ;; Defined at:
  6359 ;;		line 205 in file "proculus.c"
  6360 ;; Parameters:    Size  Location     Type
  6361 ;;  vp              2   18[BANK1 ] unsigned int 
  6362 ;;  text            1   20[BANK1 ] PTR unsigned char 
  6363 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  6364 ;; Auto vars:     Size  Location     Type
  6365 ;;		None
  6366 ;; Return value:  Size  Location     Type
  6367 ;;                  1    wreg      void 
  6368 ;; Registers used:
  6369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6370 ;; Tracked objects:
  6371 ;;		On entry : 300/100
  6372 ;;		On exit  : 300/0
  6373 ;;		Unchanged: 0/0
  6374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6375 ;;      Params:         0       0       3       0       0
  6376 ;;      Locals:         0       0       0       0       0
  6377 ;;      Temps:          0       0       0       0       0
  6378 ;;      Totals:         0       0       3       0       0
  6379 ;;Total ram usage:        3 bytes
  6380 ;; Hardware stack levels used: 1
  6381 ;; Hardware stack levels required when called: 4
  6382 ;; This function calls:
  6383 ;;		_PROCULUS_VP_Write
  6384 ;;		_strlen
  6385 ;; This function is called by:
  6386 ;;		_Decodify_Command
  6387 ;; This function uses a non-reentrant model
  6388 ;;
  6389                           
  6390                           
  6391                           ;psect for function _PROCULUS_VP_Write_String
  6392  1C5D                     _PROCULUS_VP_Write_String:
  6393                           
  6394                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  6395                           
  6396                           ;incstack = 0
  6397                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6398  1C5D  0833               	movf	(PROCULUS_VP_Write_String@vp+1)^(0+128),w
  6399  1C5E  00AB               	movwf	(PROCULUS_VP_Write@vp+1)^(0+128)
  6400  1C5F  0832               	movf	PROCULUS_VP_Write_String@vp^(0+128),w
  6401  1C60  00AA               	movwf	PROCULUS_VP_Write@vp^(0+128)
  6402  1C61  0834               	movf	PROCULUS_VP_Write_String@text^(0+128),w
  6403  1C62  00AC               	movwf	PROCULUS_VP_Write@vetor^(0+128)
  6404  1C63  3001               	movlw	1
  6405  1C64  00AD               	movwf	(PROCULUS_VP_Write@vetor+1)^(0+128)
  6406  1C65  0834               	movf	PROCULUS_VP_Write_String@text^(0+128),w
  6407  1C66  246E               	fcall	_strlen
  6408  1C67  0820               	movf	?_strlen,w
  6409  1C68  3E01               	addlw	1
  6410  1C69  1683               	bsf	3,5	;RP0=1, select bank1
  6411  1C6A  00AE               	movwf	PROCULUS_VP_Write@size^(0+128)
  6412  1C6B  120A  118A  283B   	ljmp	l6462
  6413  1C6E                     __end_of_PROCULUS_VP_Write_String:
  6414  1C6E                     __ptext24:	
  6415 ;; *************** function _strlen *****************
  6416 ;; Defined at:
  6417 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
  6418 ;; Parameters:    Size  Location     Type
  6419 ;;  s               1    wreg     PTR const unsigned char 
  6420 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;  s               1    2[BANK0 ] PTR const unsigned char 
  6423 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  6424 ;;  cp              1    3[BANK0 ] PTR const unsigned char 
  6425 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  6426 ;; Return value:  Size  Location     Type
  6427 ;;                  2    0[BANK0 ] unsigned int 
  6428 ;; Registers used:
  6429 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6430 ;; Tracked objects:
  6431 ;;		On entry : 0/300
  6432 ;;		On exit  : B00/800
  6433 ;;		Unchanged: 0/0
  6434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6435 ;;      Params:         0       2       0       0       0
  6436 ;;      Locals:         0       2       0       0       0
  6437 ;;      Temps:          0       0       0       0       0
  6438 ;;      Totals:         0       4       0       0       0
  6439 ;;Total ram usage:        4 bytes
  6440 ;; Hardware stack levels used: 1
  6441 ;; Hardware stack levels required when called: 1
  6442 ;; This function calls:
  6443 ;;		Nothing
  6444 ;; This function is called by:
  6445 ;;		_Decodify_Command
  6446 ;;		_PROCULUS_VP_Write_String
  6447 ;; This function uses a non-reentrant model
  6448 ;;
  6449                           
  6450                           
  6451                           ;psect for function _strlen
  6452  1C6E                     _strlen:
  6453                           
  6454                           ;incstack = 0
  6455                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  6456                           ;strlen@s stored from wreg
  6457  1C6E  1283               	bcf	3,5	;RP0=0, select bank0
  6458  1C6F  1303               	bcf	3,6	;RP1=0, select bank0
  6459  1C70  00A2               	movwf	strlen@s
  6460  1C71  00A3               	movwf	strlen@cp
  6461  1C72                     l6416:
  6462  1C72  0823               	movf	strlen@cp,w
  6463  1C73  0084               	movwf	4
  6464  1C74  1783               	bsf	3,7	;select IRP bank2
  6465  1C75  0800               	movf	0,w
  6466  1C76  1903               	btfsc	3,2
  6467  1C77  2C7A               	goto	l6418
  6468  1C78  0AA3               	incf	strlen@cp,f
  6469  1C79  2C72               	goto	l6416
  6470  1C7A                     l6418:
  6471  1C7A  0822               	movf	strlen@s,w
  6472  1C7B  0223               	subwf	strlen@cp,w
  6473  1C7C  00A0               	movwf	?_strlen
  6474  1C7D  01A1               	clrf	?_strlen+1
  6475  1C7E  1BA0               	btfsc	?_strlen,7
  6476  1C7F  03A1               	decf	?_strlen+1,f
  6477  1C80  0008               	return
  6478  1C81                     __end_of_strlen:
  6479                           
  6480                           	psect	text25
  6481  003B                     __ptext25:	
  6482 ;; *************** function _PROCULUS_VP_Write *****************
  6483 ;; Defined at:
  6484 ;;		line 40 in file "proculus.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;  vp              2   10[BANK1 ] unsigned int 
  6487 ;;  vetor           2   12[BANK1 ] PTR unsigned char 
  6488 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  6489 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(52), usart_protocol(58), 
  6490 ;;  size            1   14[BANK1 ] unsigned char 
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;  i               1   17[BANK1 ] unsigned char 
  6493 ;; Return value:  Size  Location     Type
  6494 ;;                  1    wreg      void 
  6495 ;; Registers used:
  6496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6497 ;; Tracked objects:
  6498 ;;		On entry : B00/900
  6499 ;;		On exit  : 300/0
  6500 ;;		Unchanged: 0/0
  6501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6502 ;;      Params:         0       0       5       0       0
  6503 ;;      Locals:         0       0       1       0       0
  6504 ;;      Temps:          0       0       2       0       0
  6505 ;;      Totals:         0       0       8       0       0
  6506 ;;Total ram usage:        8 bytes
  6507 ;; Hardware stack levels used: 1
  6508 ;; Hardware stack levels required when called: 3
  6509 ;; This function calls:
  6510 ;;		_PROCULUS_Delay
  6511 ;;		_USART_put_int
  6512 ;;		_USART_putc
  6513 ;; This function is called by:
  6514 ;;		_PROCULUS_VP_Write_String
  6515 ;; This function uses a non-reentrant model
  6516 ;;
  6517                           
  6518                           
  6519                           ;psect for function _PROCULUS_VP_Write
  6520  003B                     _PROCULUS_VP_Write:
  6521  003B                     l6462:	
  6522                           ;incstack = 0
  6523                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6524                           
  6525                           
  6526                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  6527  003B  30A5               	movlw	165
  6528  003C  00A8               	movwf	USART_put_int@value^(0+128)
  6529  003D  305A               	movlw	90
  6530  003E  00A9               	movwf	(USART_put_int@value^(0+128)+1)
  6531  003F  235A  120A  118A   	fcall	_USART_put_int
  6532                           
  6533                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  6534  0042  082E               	movf	PROCULUS_VP_Write@size^(0+128),w
  6535  0043  3E03               	addlw	3
  6536  0044  2349  120A  118A   	fcall	_USART_putc
  6537                           
  6538                           ;proculus.c: 43:      USART_putc(0x82);
  6539  0047  3082               	movlw	130
  6540  0048  2349  120A  118A   	fcall	_USART_putc
  6541                           
  6542                           ;proculus.c: 44:      USART_put_int(vp);
  6543  004B  082B               	movf	(PROCULUS_VP_Write@vp+1)^(0+128),w
  6544  004C  00A9               	movwf	(USART_put_int@value+1)^(0+128)
  6545  004D  082A               	movf	PROCULUS_VP_Write@vp^(0+128),w
  6546  004E  00A8               	movwf	USART_put_int@value^(0+128)
  6547  004F  235A  120A  118A   	fcall	_USART_put_int
  6548                           
  6549                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  6550  0052  01B1               	clrf	PROCULUS_VP_Write@i^(0+128)
  6551  0053                     l6474:
  6552  0053  082E               	movf	PROCULUS_VP_Write@size^(0+128),w
  6553  0054  0231               	subwf	PROCULUS_VP_Write@i^(0+128),w
  6554  0055  1803               	btfsc	3,0
  6555  0056  2869               	goto	l6476
  6556                           
  6557                           ;proculus.c: 46:          USART_putc(vetor[i]);
  6558  0057  0831               	movf	PROCULUS_VP_Write@i^(0+128),w
  6559  0058  072C               	addwf	PROCULUS_VP_Write@vetor^(0+128),w
  6560  0059  00AF               	movwf	??_PROCULUS_VP_Write^(0+128)
  6561  005A  082D               	movf	(PROCULUS_VP_Write@vetor+1)^(0+128),w
  6562  005B  1803               	skipnc
  6563  005C  3E01               	addlw	1
  6564  005D  00B0               	movwf	(??_PROCULUS_VP_Write^(0+128)+1)
  6565  005E  082F               	movf	??_PROCULUS_VP_Write^(0+128),w
  6566  005F  0084               	movwf	4
  6567  0060  1783               	bsf	3,7
  6568  0061  1C30               	btfss	(??_PROCULUS_VP_Write+1)^(0+128),0
  6569  0062  1383               	bcf	3,7
  6570  0063  0800               	movf	0,w
  6571  0064  2349  120A  118A   	fcall	_USART_putc
  6572  0067  0AB1               	incf	PROCULUS_VP_Write@i^(0+128),f
  6573  0068  2853               	goto	l6474
  6574  0069                     l6476:
  6575                           
  6576                           ;proculus.c: 48:      PROCULUS_Delay(1);
  6577  0069  1283               	bcf	3,5	;RP0=0, select bank0
  6578  006A  01A0               	clrf	PROCULUS_Delay@tempo_ms
  6579  006B  0AA0               	incf	PROCULUS_Delay@tempo_ms,f
  6580  006C  01A1               	clrf	PROCULUS_Delay@tempo_ms+1
  6581  006D  160A  118A  28DE   	ljmp	l4324
  6582  0070                     __end_of_PROCULUS_VP_Write:
  6583  0070                     __ptext13:	
  6584 ;; *************** function _Decodify_Command *****************
  6585 ;; Defined at:
  6586 ;;		line 313 in file "SlaveLiofilizadorVer1.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;		None
  6589 ;; Auto vars:     Size  Location     Type
  6590 ;;  sizedata        1   34[BANK1 ] unsigned char 
  6591 ;;  add             1   33[BANK1 ] unsigned char 
  6592 ;;  add_24LCxxxx    4   42[BANK1 ] unsigned long 
  6593 ;;  OutPut          4   37[BANK1 ] float 
  6594 ;;  tempint         2   35[BANK1 ] int 
  6595 ;;  dados           2   31[BANK1 ] int 
  6596 ;;  tempchar        1   41[BANK1 ] unsigned char 
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  1    wreg      void 
  6599 ;; Registers used:
  6600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6601 ;; Tracked objects:
  6602 ;;		On entry : 300/300
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6606 ;;      Params:         0       0       0       0       0
  6607 ;;      Locals:         0       0      15       0       0
  6608 ;;      Temps:          0       0       2       0       0
  6609 ;;      Totals:         0       0      17       0       0
  6610 ;;Total ram usage:       17 bytes
  6611 ;; Hardware stack levels used: 1
  6612 ;; Hardware stack levels required when called: 6
  6613 ;; This function calls:
  6614 ;;		_EEPROM_24C1025_Fill_All
  6615 ;;		_EEPROM_24C1025_Read_Buffer_USART
  6616 ;;		_EEPROM_24C1025_Read_Byte
  6617 ;;		_EEPROM_24C1025_Read_Int
  6618 ;;		_EEPROM_24C1025_Read_Str
  6619 ;;		_EEPROM_24C1025_Write_Buffer
  6620 ;;		_EEPROM_24C1025_Write_Byte
  6621 ;;		_EEPROM_24C1025_Write_Int
  6622 ;;		_EEPROM_24C1025_Write_Str
  6623 ;;		_EEPROM_Read_Byte
  6624 ;;		_EEPROM_Read_Integer
  6625 ;;		_EEPROM_Read_String
  6626 ;;		_EEPROM_Write_Byte
  6627 ;;		_EEPROM_Write_Integer
  6628 ;;		_EEPROM_Write_String
  6629 ;;		_Load_Work
  6630 ;;		_PROCULUS_Buzzer
  6631 ;;		_PROCULUS_Show_Screen
  6632 ;;		_PROCULUS_VP_Write_String
  6633 ;;		_Save_Log
  6634 ;;		_Send_Reply_OK
  6635 ;;		_Send_To_MB
  6636 ;;		_USART_put_int
  6637 ;;		_USART_put_string
  6638 ;;		_USART_putc
  6639 ;;		_USART_to_Protocol
  6640 ;;		___flmul
  6641 ;;		___fltol
  6642 ;;		_strcpy
  6643 ;;		_strlen
  6644 ;; This function is called by:
  6645 ;;		_main
  6646 ;; This function uses a non-reentrant model
  6647 ;;
  6648                           
  6649                           
  6650                           ;psect for function _Decodify_Command
  6651  0070                     _Decodify_Command:
  6652                           
  6653                           ;SlaveLiofilizadorVer1.c: 315:     int dados;;SlaveLiofilizadorVer1.c: 316:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 317:     int tempint;;SlaveLiofilizadorVer1.c: 318:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 319:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 331:     USART_to_Protocol(&usart_protocol);
  6654                           
  6655                           ;incstack = 0
  6656                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6657  0070  30AF               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  6658  0071  120A  118A  27A5  120A  118A  	fcall	_USART_to_Protocol
  6659                           
  6660                           ;SlaveLiofilizadorVer1.c: 333:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  6661  0076  1683               	bsf	3,5	;RP0=1, select bank3
  6662  0077  1703               	bsf	3,6	;RP1=1, select bank3
  6663  0078  0836               	movf	(_usart_protocol^(0+384)+7),w
  6664  0079  1303               	bcf	3,6	;RP1=0, select bank1
  6665  007A  00CD               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6666                           
  6667                           ;SlaveLiofilizadorVer1.c: 334:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  6668  007B  1703               	bsf	3,6	;RP1=1, select bank3
  6669  007C  0837               	movf	(_usart_protocol^(0+384)+8),w
  6670  007D  1303               	bcf	3,6	;RP1=0, select bank1
  6671  007E  00CC               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6672                           
  6673                           ;SlaveLiofilizadorVer1.c: 335:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  6674  007F  1703               	bsf	3,6	;RP1=1, select bank3
  6675  0080  0838               	movf	(_usart_protocol^(0+384)+9),w
  6676  0081  1303               	bcf	3,6	;RP1=0, select bank1
  6677  0082  00CB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6678                           
  6679                           ;SlaveLiofilizadorVer1.c: 336:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  6680  0083  1703               	bsf	3,6	;RP1=1, select bank3
  6681  0084  0839               	movf	(_usart_protocol^(0+384)+10),w
  6682  0085  1303               	bcf	3,6	;RP1=0, select bank1
  6683  0086  00CA               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6684                           
  6685                           ;SlaveLiofilizadorVer1.c: 343:     switch(usart_protocol.command){
  6686  0087  2AD6               	goto	l7322
  6687  0088                     l7154:
  6688                           
  6689                           ;SlaveLiofilizadorVer1.c: 352:              strcpy(buffer,"v1.0.26");
  6690  0088  302D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  6691  0089  1283               	bcf	3,5	;RP0=0, select bank0
  6692  008A  00A0               	movwf	strcpy@from
  6693  008B  3044               	movlw	(low (_buffer| (0+256)))& (0+255)
  6694  008C  160A  158A  2448  120A  118A  	fcall	_strcpy
  6695                           
  6696                           ;SlaveLiofilizadorVer1.c: 353:              Send_To_MB(11);
  6697  0091  300B               	movlw	11
  6698  0092                     L10:
  6699  0092  232E               	fcall	_Send_To_MB
  6700                           
  6701                           ;SlaveLiofilizadorVer1.c: 354:              USART_put_string(buffer);
  6702  0093  3044               	movlw	(low (_buffer| (0+256)))& (0+255)
  6703  0094  1283               	bcf	3,5	;RP0=0, select bank0
  6704  0095  00A1               	movwf	USART_put_string@vetor
  6705  0096  3001               	movlw	1
  6706  0097  00A2               	movwf	USART_put_string@vetor+1
  6707  0098  160A  158A  2CAD   	ljmp	l6402
  6708  009B                     l7160:	
  6709                           ;SlaveLiofilizadorVer1.c: 355:              break;
  6710                           
  6711                           
  6712                           ;SlaveLiofilizadorVer1.c: 358:              if(usart_protocol.value[0]==0)
  6713  009B  1703               	bsf	3,6	;RP1=1, select bank3
  6714  009C  0835               	movf	(_usart_protocol^(0+384)+6),w
  6715  009D  1D03               	btfss	3,2
  6716  009E  28AD               	goto	l7164
  6717                           
  6718                           ;SlaveLiofilizadorVer1.c: 359:                 OutPut=Temperatura0;
  6719  009F  0817               	movf	(_Temperatura0+3)^(0+384),w
  6720  00A0  1303               	bcf	3,6	;RP1=0, select bank1
  6721  00A1  00C8               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6722  00A2  1703               	bsf	3,6	;RP1=1, select bank3
  6723  00A3  0816               	movf	(_Temperatura0+2)^(0+384),w
  6724  00A4  1303               	bcf	3,6	;RP1=0, select bank1
  6725  00A5  00C7               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6726  00A6  1703               	bsf	3,6	;RP1=1, select bank3
  6727  00A7  0815               	movf	(_Temperatura0+1)^(0+384),w
  6728  00A8  1303               	bcf	3,6	;RP1=0, select bank1
  6729  00A9  00C6               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6730  00AA  1703               	bsf	3,6	;RP1=1, select bank3
  6731  00AB  0814               	movf	_Temperatura0^(0+384),w
  6732  00AC  28BA               	goto	L8
  6733  00AD                     l7164:
  6734                           
  6735                           ;SlaveLiofilizadorVer1.c: 361:                 OutPut=Temperatura1;
  6736  00AD  0813               	movf	(_Temperatura1+3)^(0+384),w
  6737  00AE  1303               	bcf	3,6	;RP1=0, select bank1
  6738  00AF  00C8               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6739  00B0  1703               	bsf	3,6	;RP1=1, select bank3
  6740  00B1  0812               	movf	(_Temperatura1+2)^(0+384),w
  6741  00B2  1303               	bcf	3,6	;RP1=0, select bank1
  6742  00B3  00C7               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6743  00B4  1703               	bsf	3,6	;RP1=1, select bank3
  6744  00B5  0811               	movf	(_Temperatura1+1)^(0+384),w
  6745  00B6  1303               	bcf	3,6	;RP1=0, select bank1
  6746  00B7  00C6               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6747  00B8  1703               	bsf	3,6	;RP1=1, select bank3
  6748  00B9  0810               	movf	_Temperatura1^(0+384),w
  6749  00BA                     L8:
  6750  00BA  1303               	bcf	3,6	;RP1=0, select bank1
  6751  00BB  00C5               	movwf	Decodify_Command@OutPut^(0+128)
  6752                           
  6753                           ;SlaveLiofilizadorVer1.c: 379:              OutPut*=10.0;
  6754  00BC  3041               	movlw	65
  6755  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  6756  00BE  00D7               	movwf	___flmul@b+3
  6757  00BF  3020               	movlw	32
  6758  00C0  00D6               	movwf	___flmul@b+2
  6759  00C1  01D5               	clrf	___flmul@b+1
  6760  00C2  01D4               	clrf	___flmul@b
  6761  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  6762  00C4  0848               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6763  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  6764  00C6  00DB               	movwf	___flmul@a+3
  6765  00C7  1683               	bsf	3,5	;RP0=1, select bank1
  6766  00C8  0847               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6767  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  6768  00CA  00DA               	movwf	___flmul@a+2
  6769  00CB  1683               	bsf	3,5	;RP0=1, select bank1
  6770  00CC  0846               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6771  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  6772  00CE  00D9               	movwf	___flmul@a+1
  6773  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  6774  00D0  0845               	movf	Decodify_Command@OutPut^(0+128),w
  6775  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  6776  00D2  00D8               	movwf	___flmul@a
  6777  00D3  2392  120A  118A   	fcall	___flmul
  6778  00D6  0857               	movf	?___flmul+3,w
  6779  00D7  1683               	bsf	3,5	;RP0=1, select bank1
  6780  00D8  00C8               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6781  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  6782  00DA  0856               	movf	?___flmul+2,w
  6783  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  6784  00DC  00C7               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6785  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  6786  00DE  0855               	movf	?___flmul+1,w
  6787  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  6788  00E0  00C6               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6789  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  6790  00E2  0854               	movf	?___flmul,w
  6791  00E3  1683               	bsf	3,5	;RP0=1, select bank1
  6792  00E4  00C5               	movwf	Decodify_Command@OutPut^(0+128)
  6793                           
  6794                           ;SlaveLiofilizadorVer1.c: 381:              INTCONbits.GIE=0;
  6795  00E5  138B               	bcf	11,7	;volatile
  6796                           
  6797                           ;SlaveLiofilizadorVer1.c: 382:              Send_To_MB(2);
  6798  00E6  3002               	movlw	2
  6799  00E7  232E               	fcall	_Send_To_MB
  6800                           
  6801                           ;SlaveLiofilizadorVer1.c: 383:              USART_put_int(OutPut);
  6802  00E8  0848               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6803  00E9  00A3               	movwf	(___fltol@f1+3)^(0+128)
  6804  00EA  0847               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6805  00EB  00A2               	movwf	(___fltol@f1+2)^(0+128)
  6806  00EC  0846               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6807  00ED  00A1               	movwf	(___fltol@f1+1)^(0+128)
  6808  00EE  0845               	movf	Decodify_Command@OutPut^(0+128),w
  6809  00EF  00A0               	movwf	___fltol@f1^(0+128)
  6810  00F0  160A  118A  214E  120A  118A  	fcall	___fltol
  6811  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  6812  00F6  0821               	movf	(?___fltol+1)^(0+128),w
  6813  00F7  00A9               	movwf	(USART_put_int@value+1)^(0+128)
  6814  00F8  0820               	movf	?___fltol^(0+128),w
  6815  00F9  00A8               	movwf	USART_put_int@value^(0+128)
  6816  00FA  235A               	fcall	_USART_put_int
  6817                           
  6818                           ;SlaveLiofilizadorVer1.c: 384:              INTCONbits.GIE=1;
  6819  00FB  178B               	bsf	11,7	;volatile
  6820                           
  6821                           ;SlaveLiofilizadorVer1.c: 385:              break;
  6822  00FC  0008               	return
  6823  00FD                     l7176:
  6824                           
  6825                           ;SlaveLiofilizadorVer1.c: 390:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  6826  00FD  1703               	bsf	3,6	;RP1=1, select bank3
  6827  00FE  0835               	movf	(_usart_protocol^(0+384)+6),w
  6828  00FF  1303               	bcf	3,6	;RP1=0, select bank1
  6829  0100  00CD               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6830                           
  6831                           ;SlaveLiofilizadorVer1.c: 391:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  6832  0101  1703               	bsf	3,6	;RP1=1, select bank3
  6833  0102  0836               	movf	(_usart_protocol^(0+384)+7),w
  6834  0103  1303               	bcf	3,6	;RP1=0, select bank1
  6835  0104  00CC               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6836                           
  6837                           ;SlaveLiofilizadorVer1.c: 392:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  6838  0105  1703               	bsf	3,6	;RP1=1, select bank3
  6839  0106  0837               	movf	(_usart_protocol^(0+384)+8),w
  6840  0107  1303               	bcf	3,6	;RP1=0, select bank1
  6841  0108  00CB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6842                           
  6843                           ;SlaveLiofilizadorVer1.c: 393:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  6844  0109  1703               	bsf	3,6	;RP1=1, select bank3
  6845  010A  0838               	movf	(_usart_protocol^(0+384)+9),w
  6846  010B  1303               	bcf	3,6	;RP1=0, select bank1
  6847  010C  00CA               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6848                           
  6849                           ;SlaveLiofilizadorVer1.c: 394:              Save_Log(add_24LCxxxx);
  6850  010D  084D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6851  010E  00B4               	movwf	(Save_Log@add_datalog+3)^(0+128)
  6852  010F  084C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6853  0110  00B3               	movwf	(Save_Log@add_datalog+2)^(0+128)
  6854  0111  084B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6855  0112  00B2               	movwf	(Save_Log@add_datalog+1)^(0+128)
  6856  0113  084A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6857  0114  00B1               	movwf	Save_Log@add_datalog^(0+128)
  6858  0115  160A  118A  20F8   	fcall	_Save_Log
  6859                           
  6860                           ;SlaveLiofilizadorVer1.c: 395:              Delay_Led_Tmr0=0;
  6861  0118  1683               	bsf	3,5	;RP0=1, select bank3
  6862  0119  1703               	bsf	3,6	;RP1=1, select bank3
  6863  011A  01AA               	clrf	_Delay_Led_Tmr0^(0+384)	;volatile
  6864  011B  01AB               	clrf	(_Delay_Led_Tmr0+1)^(0+384)	;volatile
  6865                           
  6866                           ;SlaveLiofilizadorVer1.c: 396:              milisegundo=0;
  6867  011C  01A6               	clrf	_milisegundo^(0+384)	;volatile
  6868  011D  01A7               	clrf	(_milisegundo+1)^(0+384)	;volatile
  6869                           
  6870                           ;SlaveLiofilizadorVer1.c: 397:              break;
  6871  011E  0008               	return
  6872  011F                     l7184:
  6873                           
  6874                           ;SlaveLiofilizadorVer1.c: 401:              if(usart_protocol.value[0]==0)
  6875  011F  1703               	bsf	3,6	;RP1=1, select bank3
  6876  0120  0835               	movf	(_usart_protocol^(0+384)+6),w
  6877  0121  1D03               	btfss	3,2
  6878  0122  2926               	goto	l451
  6879                           
  6880                           ;SlaveLiofilizadorVer1.c: 402:                 generic_status.flag_global_hot=0;
  6881  0123  1303               	bcf	3,6	;RP1=0, select bank1
  6882  0124  136C               	bcf	_generic_status^(0+128),6
  6883  0125  0008               	return
  6884  0126                     l451:	
  6885                           ;SlaveLiofilizadorVer1.c: 403:              else
  6886                           
  6887                           
  6888                           ;SlaveLiofilizadorVer1.c: 404:                 generic_status.flag_global_hot=1;
  6889  0126  1303               	bcf	3,6	;RP1=0, select bank1
  6890  0127  176C               	bsf	_generic_status^(0+128),6
  6891  0128  0008               	return
  6892  0129                     l7188:
  6893                           
  6894                           ;SlaveLiofilizadorVer1.c: 409:              Send_To_MB(2);
  6895  0129  3002               	movlw	2
  6896  012A  232E  120A  118A   	fcall	_Send_To_MB
  6897                           
  6898                           ;SlaveLiofilizadorVer1.c: 419:              USART_put_int(3);
  6899  012D  3003               	movlw	3
  6900  012E  00A8               	movwf	USART_put_int@value^(0+128)
  6901  012F  01A9               	clrf	(USART_put_int@value+1)^(0+128)
  6902  0130  2B5A               	ljmp	l6262
  6903  0131                     l7192:	
  6904                           ;SlaveLiofilizadorVer1.c: 421:              break;
  6905                           
  6906                           
  6907                           ;SlaveLiofilizadorVer1.c: 430:              Send_To_MB(3);
  6908  0131  3003               	movlw	3
  6909  0132  232E  120A  118A   	fcall	_Send_To_MB
  6910                           
  6911                           ;SlaveLiofilizadorVer1.c: 431:              Send_Reply_OK();
  6912  0135  236A  120A  118A   	fcall	_Send_Reply_OK
  6913                           
  6914                           ;SlaveLiofilizadorVer1.c: 432:              Load_Work();
  6915  0138  2D01               	ljmp	l6800
  6916  0139                     l7198:	
  6917                           ;SlaveLiofilizadorVer1.c: 433:              break;
  6918                           
  6919                           
  6920                           ;SlaveLiofilizadorVer1.c: 438:              EEPROM_Write_Byte(usart_protocol.value[0],
  6921  0139  1703               	bsf	3,6	;RP1=1, select bank3
  6922  013A  0836               	movf	(_usart_protocol^(0+384)+7),w
  6923  013B  1283               	bcf	3,5	;RP0=0, select bank0
  6924  013C  1303               	bcf	3,6	;RP1=0, select bank0
  6925  013D  00A0               	movwf	EEPROM_Write_Byte@dado
  6926  013E  1683               	bsf	3,5	;RP0=1, select bank3
  6927  013F  1703               	bsf	3,6	;RP1=1, select bank3
  6928  0140  0835               	movf	(_usart_protocol^(0+384)+6),w
  6929  0141  26DB  120A  118A   	fcall	_EEPROM_Write_Byte
  6930  0144                     L9:
  6931                           
  6932                           ;SlaveLiofilizadorVer1.c: 440:              Send_To_MB(3);
  6933  0144  3003               	movlw	3
  6934  0145  232E  120A  118A   	fcall	_Send_To_MB
  6935                           
  6936                           ;SlaveLiofilizadorVer1.c: 441:              Send_Reply_OK();
  6937  0148  2B6A               	ljmp	l6830
  6938  0149                     l7202:	
  6939                           ;SlaveLiofilizadorVer1.c: 442:              break;
  6940                           
  6941                           
  6942                           ;SlaveLiofilizadorVer1.c: 444:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  6943  0149  1703               	bsf	3,6	;RP1=1, select bank3
  6944  014A  0835               	movf	(_usart_protocol^(0+384)+6),w
  6945  014B  25C1  120A  118A   	fcall	_EEPROM_Read_Byte
  6946  014E  1683               	bsf	3,5	;RP0=1, select bank1
  6947  014F  1303               	bcf	3,6	;RP1=0, select bank1
  6948  0150  00C9               	movwf	Decodify_Command@tempchar^(0+128)
  6949                           
  6950                           ;SlaveLiofilizadorVer1.c: 445:              Send_To_MB(1);;
  6951  0151  3001               	movlw	1
  6952  0152  232E  120A  118A   	fcall	_Send_To_MB
  6953                           
  6954                           ;SlaveLiofilizadorVer1.c: 446:              USART_putc(tempchar);
  6955  0155  0849               	movf	Decodify_Command@tempchar^(0+128),w
  6956  0156  2B49               	ljmp	_USART_putc
  6957  0157                     l7208:	
  6958                           ;SlaveLiofilizadorVer1.c: 447:              break;
  6959                           
  6960                           
  6961                           ;SlaveLiofilizadorVer1.c: 449:              {;SlaveLiofilizadorVer1.c: 450:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 451:              add=usart_protocol.value[
      +                          0];
  6962  0157  1703               	bsf	3,6	;RP1=1, select bank3
  6963  0158  0835               	movf	(_usart_protocol^(0+384)+6),w
  6964  0159  1303               	bcf	3,6	;RP1=0, select bank1
  6965  015A  00C1               	movwf	Decodify_Command@add^(0+128)
  6966                           
  6967                           ;SlaveLiofilizadorVer1.c: 452:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  6968  015B  1703               	bsf	3,6	;RP1=1, select bank3
  6969  015C  0836               	movf	(_usart_protocol^(0+384)+7),w
  6970  015D  1303               	bcf	3,6	;RP1=0, select bank1
  6971  015E  00C0               	movwf	(Decodify_Command@dados+1)^(0+128)
  6972  015F  1703               	bsf	3,6	;RP1=1, select bank3
  6973  0160  0837               	movf	(_usart_protocol^(0+384)+8),w
  6974  0161  1303               	bcf	3,6	;RP1=0, select bank1
  6975  0162  00BF               	movwf	Decodify_Command@dados^(0+128)
  6976                           
  6977                           ;SlaveLiofilizadorVer1.c: 453:              EEPROM_Write_Integer(add,dados);
  6978  0163  0840               	movf	(Decodify_Command@dados+1)^(0+128),w
  6979  0164  1283               	bcf	3,5	;RP0=0, select bank0
  6980  0165  00A6               	movwf	EEPROM_Write_Integer@dado+1
  6981  0166  1683               	bsf	3,5	;RP0=1, select bank1
  6982  0167  083F               	movf	Decodify_Command@dados^(0+128),w
  6983  0168  1283               	bcf	3,5	;RP0=0, select bank0
  6984  0169  00A5               	movwf	EEPROM_Write_Integer@dado
  6985  016A  1683               	bsf	3,5	;RP0=1, select bank1
  6986  016B  0841               	movf	Decodify_Command@add^(0+128),w
  6987  016C  26A0  120A  118A   	fcall	_EEPROM_Write_Integer
  6988  016F  2944               	goto	L9
  6989  0170                     l7216:	
  6990                           ;SlaveLiofilizadorVer1.c: 454:              Send_To_MB(3);
  6991                           
  6992                           
  6993                           ;SlaveLiofilizadorVer1.c: 459:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  6994  0170  1703               	bsf	3,6	;RP1=1, select bank3
  6995  0171  0835               	movf	(_usart_protocol^(0+384)+6),w
  6996  0172  25E2  120A  118A   	fcall	_EEPROM_Read_Integer
  6997  0175  0824               	movf	?_EEPROM_Read_Integer+1,w
  6998  0176  1683               	bsf	3,5	;RP0=1, select bank1
  6999  0177  00C4               	movwf	(Decodify_Command@tempint+1)^(0+128)
  7000  0178  1283               	bcf	3,5	;RP0=0, select bank0
  7001  0179  0823               	movf	?_EEPROM_Read_Integer,w
  7002  017A                     L11:
  7003  017A  1683               	bsf	3,5	;RP0=1, select bank1
  7004  017B  00C3               	movwf	Decodify_Command@tempint^(0+128)
  7005                           
  7006                           ;SlaveLiofilizadorVer1.c: 460:              Send_To_MB(2);
  7007  017C  3002               	movlw	2
  7008  017D  232E  120A  118A   	fcall	_Send_To_MB
  7009                           
  7010                           ;SlaveLiofilizadorVer1.c: 461:              USART_put_int(tempint);
  7011  0180  0844               	movf	(Decodify_Command@tempint+1)^(0+128),w
  7012  0181  00A9               	movwf	(USART_put_int@value+1)^(0+128)
  7013  0182  0843               	movf	Decodify_Command@tempint^(0+128),w
  7014  0183  00A8               	movwf	USART_put_int@value^(0+128)
  7015  0184  2B5A               	ljmp	l6262
  7016  0185                     l7222:	
  7017                           ;SlaveLiofilizadorVer1.c: 462:              break;
  7018                           
  7019                           
  7020                           ;SlaveLiofilizadorVer1.c: 465:              EEPROM_Write_String(usart_protocol.value[0],
  7021  0185  30B6               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  7022  0186  1283               	bcf	3,5	;RP0=0, select bank0
  7023  0187  00A5               	movwf	EEPROM_Write_String@dado
  7024  0188  1683               	bsf	3,5	;RP0=1, select bank3
  7025  0189  1703               	bsf	3,6	;RP1=1, select bank3
  7026  018A  0835               	movf	(_usart_protocol^(0+384)+6),w
  7027  018B  26C3  120A  118A   	fcall	_EEPROM_Write_String
  7028  018E  2944               	goto	L9
  7029  018F                     l7228:	
  7030                           ;SlaveLiofilizadorVer1.c: 467:              Send_To_MB(3);
  7031                           
  7032                           
  7033                           ;SlaveLiofilizadorVer1.c: 471:              {;SlaveLiofilizadorVer1.c: 472:             
      +                           EEPROM_Read_String(usart_protocol.value[0],buffer);
  7034  018F  3044               	movlw	(low (_buffer| (0+256)))& (0+255)
  7035  0190  1283               	bcf	3,5	;RP0=0, select bank0
  7036  0191  00A3               	movwf	EEPROM_Read_String@dado
  7037  0192  1683               	bsf	3,5	;RP0=1, select bank3
  7038  0193  1703               	bsf	3,6	;RP1=1, select bank3
  7039  0194  0835               	movf	(_usart_protocol^(0+384)+6),w
  7040  0195  271C  120A  118A   	fcall	_EEPROM_Read_String
  7041                           
  7042                           ;SlaveLiofilizadorVer1.c: 473:              Send_To_MB(sizeof(buffer));
  7043  0198  3021               	movlw	33
  7044  0199  2892               	goto	L10
  7045  019A                     l7234:
  7046                           
  7047                           ;SlaveLiofilizadorVer1.c: 480:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  7048  019A  084D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7049  019B  1283               	bcf	3,5	;RP0=0, select bank0
  7050  019C  00BA               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  7051  019D  1683               	bsf	3,5	;RP0=1, select bank1
  7052  019E  084C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7053  019F  1283               	bcf	3,5	;RP0=0, select bank0
  7054  01A0  00B9               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  7055  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  7056  01A2  084B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7057  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  7058  01A4  00B8               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  7059  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  7060  01A6  084A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7061  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  7062  01A8  00B7               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  7063  01A9  1683               	bsf	3,5	;RP0=1, select bank3
  7064  01AA  1703               	bsf	3,6	;RP1=1, select bank3
  7065  01AB  083A               	movf	(_usart_protocol^(0+384)+11),w
  7066  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  7067  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  7068  01AE  00BB               	movwf	EEPROM_24C1025_Write_Byte@data
  7069  01AF  1683               	bsf	3,5	;RP0=1, select bank3
  7070  01B0  1703               	bsf	3,6	;RP1=1, select bank3
  7071  01B1  0835               	movf	(_usart_protocol^(0+384)+6),w
  7072  01B2  2614  120A  118A   	fcall	_EEPROM_24C1025_Write_Byte
  7073  01B5  2944               	goto	L9
  7074  01B6                     l7240:	
  7075                           ;SlaveLiofilizadorVer1.c: 483:              Send_To_MB(3);
  7076                           
  7077                           
  7078                           ;SlaveLiofilizadorVer1.c: 487:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  7079  01B6  084D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7080  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  7081  01B8  00B8               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  7082  01B9  1683               	bsf	3,5	;RP0=1, select bank1
  7083  01BA  084C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7084  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  7085  01BC  00B7               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  7086  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  7087  01BE  084B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7088  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  7089  01C0  00B6               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  7090  01C1  1683               	bsf	3,5	;RP0=1, select bank1
  7091  01C2  084A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7092  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  7093  01C4  00B5               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  7094  01C5  1683               	bsf	3,5	;RP0=1, select bank3
  7095  01C6  1703               	bsf	3,6	;RP1=1, select bank3
  7096  01C7  0835               	movf	(_usart_protocol^(0+384)+6),w
  7097  01C8  25FD  120A  118A   	fcall	_EEPROM_24C1025_Read_Byte
  7098  01CB  1683               	bsf	3,5	;RP0=1, select bank1
  7099  01CC  00C9               	movwf	Decodify_Command@tempchar^(0+128)
  7100                           
  7101                           ;SlaveLiofilizadorVer1.c: 491:              Send_To_MB(1);
  7102  01CD  3001               	movlw	1
  7103  01CE  232E  120A  118A   	fcall	_Send_To_MB
  7104                           
  7105                           ;SlaveLiofilizadorVer1.c: 492:              USART_putc(tempchar);
  7106  01D1  0849               	movf	Decodify_Command@tempchar^(0+128),w
  7107  01D2  2B49               	ljmp	_USART_putc
  7108  01D3                     l7246:	
  7109                           ;SlaveLiofilizadorVer1.c: 493:              break;
  7110                           
  7111                           
  7112                           ;SlaveLiofilizadorVer1.c: 495:              {;SlaveLiofilizadorVer1.c: 496:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  7113  01D3  084D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7114  01D4  00AB               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
  7115  01D5  084C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7116  01D6  00AA               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
  7117  01D7  084B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7118  01D8  00A9               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
  7119  01D9  084A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7120  01DA  00A8               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
  7121  01DB  1703               	bsf	3,6	;RP1=1, select bank3
  7122  01DC  083A               	movf	(_usart_protocol^(0+384)+11),w
  7123  01DD  1303               	bcf	3,6	;RP1=0, select bank1
  7124  01DE  00AD               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  7125  01DF  1703               	bsf	3,6	;RP1=1, select bank3
  7126  01E0  083B               	movf	(_usart_protocol^(0+384)+12),w
  7127  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  7128  01E2  00AC               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  7129  01E3  1703               	bsf	3,6	;RP1=1, select bank3
  7130  01E4  0835               	movf	(_usart_protocol^(0+384)+6),w
  7131  01E5  2373  120A  118A   	fcall	_EEPROM_24C1025_Write_Int
  7132  01E8  2944               	goto	L9
  7133  01E9                     l7252:	
  7134                           ;SlaveLiofilizadorVer1.c: 501:              Send_To_MB(3);
  7135                           
  7136                           
  7137                           ;SlaveLiofilizadorVer1.c: 506:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  7138  01E9  084D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7139  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  7140  01EB  00B8               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  7141  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  7142  01ED  084C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7143  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  7144  01EF  00B7               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  7145  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  7146  01F1  084B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7147  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  7148  01F3  00B6               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  7149  01F4  1683               	bsf	3,5	;RP0=1, select bank1
  7150  01F5  084A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7151  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  7152  01F7  00B5               	movwf	EEPROM_24C1025_Read_Int@mem_add
  7153  01F8  1683               	bsf	3,5	;RP0=1, select bank3
  7154  01F9  1703               	bsf	3,6	;RP1=1, select bank3
  7155  01FA  0835               	movf	(_usart_protocol^(0+384)+6),w
  7156  01FB  160A  118A  22AA  120A  118A  	fcall	_EEPROM_24C1025_Read_Int
  7157  0200  0836               	movf	?_EEPROM_24C1025_Read_Int+1,w
  7158  0201  1683               	bsf	3,5	;RP0=1, select bank1
  7159  0202  00C4               	movwf	(Decodify_Command@tempint+1)^(0+128)
  7160  0203  1283               	bcf	3,5	;RP0=0, select bank0
  7161  0204  0835               	movf	?_EEPROM_24C1025_Read_Int,w
  7162  0205  297A               	goto	L11
  7163  0206                     l7258:	
  7164                           ;SlaveLiofilizadorVer1.c: 508:              Send_To_MB(2);
  7165                           
  7166                           
  7167                           ;SlaveLiofilizadorVer1.c: 514:              {;SlaveLiofilizadorVer1.c: 515:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 516:              sizedata=usart_protocol.value
      +                          [5];
  7168  0206  1703               	bsf	3,6	;RP1=1, select bank3
  7169  0207  083A               	movf	(_usart_protocol^(0+384)+11),w
  7170  0208  1303               	bcf	3,6	;RP1=0, select bank1
  7171  0209  00C2               	movwf	Decodify_Command@sizedata^(0+128)
  7172                           
  7173                           ;SlaveLiofilizadorVer1.c: 517:              Send_To_MB(sizedata);
  7174  020A  232E               	fcall	_Send_To_MB
  7175                           
  7176                           ;SlaveLiofilizadorVer1.c: 518:              EEPROM_24C1025_Read_Buffer_USART(usart_proto
      +                          col.value[0],
  7177  020B  084D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7178  020C  1283               	bcf	3,5	;RP0=0, select bank0
  7179  020D  00AA               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3
  7180  020E  1683               	bsf	3,5	;RP0=1, select bank1
  7181  020F  084C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7182  0210  1283               	bcf	3,5	;RP0=0, select bank0
  7183  0211  00A9               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2
  7184  0212  1683               	bsf	3,5	;RP0=1, select bank1
  7185  0213  084B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7186  0214  1283               	bcf	3,5	;RP0=0, select bank0
  7187  0215  00A8               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1
  7188  0216  1683               	bsf	3,5	;RP0=1, select bank1
  7189  0217  084A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7190  0218  1283               	bcf	3,5	;RP0=0, select bank0
  7191  0219  00A7               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add
  7192  021A  1683               	bsf	3,5	;RP0=1, select bank1
  7193  021B  0842               	movf	Decodify_Command@sizedata^(0+128),w
  7194  021C  1283               	bcf	3,5	;RP0=0, select bank0
  7195  021D  00AB               	movwf	EEPROM_24C1025_Read_Buffer_USART@sizedata
  7196  021E  3044               	movlw	(low (_buffer| (0+256)))& (0+255)
  7197  021F  00AC               	movwf	EEPROM_24C1025_Read_Buffer_USART@data
  7198  0220  1683               	bsf	3,5	;RP0=1, select bank3
  7199  0221  1703               	bsf	3,6	;RP1=1, select bank3
  7200  0222  0835               	movf	(_usart_protocol^(0+384)+6),w
  7201  0223  160A  118A  2D93   	ljmp	_EEPROM_24C1025_Read_Buffer_USART
  7202  0226                     l7264:	
  7203                           ;SlaveLiofilizadorVer1.c: 523:              };SlaveLiofilizadorVer1.c: 524:             
      +                           break;
  7204                           
  7205                           
  7206                           ;SlaveLiofilizadorVer1.c: 527:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  7207  0226  084D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7208  0227  1283               	bcf	3,5	;RP0=0, select bank0
  7209  0228  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  7210  0229  1683               	bsf	3,5	;RP0=1, select bank1
  7211  022A  084C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7212  022B  1283               	bcf	3,5	;RP0=0, select bank0
  7213  022C  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  7214  022D  1683               	bsf	3,5	;RP0=1, select bank1
  7215  022E  084B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7216  022F  1283               	bcf	3,5	;RP0=0, select bank0
  7217  0230  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  7218  0231  1683               	bsf	3,5	;RP0=1, select bank1
  7219  0232  084A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7220  0233  1283               	bcf	3,5	;RP0=0, select bank0
  7221  0234  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  7222  0235  1683               	bsf	3,5	;RP0=1, select bank3
  7223  0236  1703               	bsf	3,6	;RP1=1, select bank3
  7224  0237  083A               	movf	(_usart_protocol^(0+384)+11),w
  7225  0238  1283               	bcf	3,5	;RP0=0, select bank0
  7226  0239  1303               	bcf	3,6	;RP1=0, select bank0
  7227  023A  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  7228  023B  30BB               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  7229  023C  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  7230  023D  3001               	movlw	1
  7231  023E  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  7232  023F  1683               	bsf	3,5	;RP0=1, select bank3
  7233  0240  1703               	bsf	3,6	;RP1=1, select bank3
  7234  0241  0835               	movf	(_usart_protocol^(0+384)+6),w
  7235  0242  160A  118A  2687  120A  118A  	fcall	_EEPROM_24C1025_Write_Buffer
  7236  0247  2944               	goto	L9
  7237  0248                     l7270:	
  7238                           ;SlaveLiofilizadorVer1.c: 532:              Send_To_MB(3);
  7239                           
  7240                           
  7241                           ;SlaveLiofilizadorVer1.c: 537:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  7242  0248  084D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7243  0249  1283               	bcf	3,5	;RP0=0, select bank0
  7244  024A  00AD               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  7245  024B  1683               	bsf	3,5	;RP0=1, select bank1
  7246  024C  084C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7247  024D  1283               	bcf	3,5	;RP0=0, select bank0
  7248  024E  00AC               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  7249  024F  1683               	bsf	3,5	;RP0=1, select bank1
  7250  0250  084B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7251  0251  1283               	bcf	3,5	;RP0=0, select bank0
  7252  0252  00AB               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  7253  0253  1683               	bsf	3,5	;RP0=1, select bank1
  7254  0254  084A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7255  0255  1283               	bcf	3,5	;RP0=0, select bank0
  7256  0256  00AA               	movwf	EEPROM_24C1025_Write_Str@mem_add
  7257  0257  30BA               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  7258  0258  00AE               	movwf	EEPROM_24C1025_Write_Str@data
  7259  0259  1683               	bsf	3,5	;RP0=1, select bank3
  7260  025A  1703               	bsf	3,6	;RP1=1, select bank3
  7261  025B  0835               	movf	(_usart_protocol^(0+384)+6),w
  7262  025C  160A  118A  22C2  120A  118A  	fcall	_EEPROM_24C1025_Write_Str
  7263  0261  2944               	goto	L9
  7264  0262                     l7276:	
  7265                           ;SlaveLiofilizadorVer1.c: 540:              Send_To_MB(3);
  7266                           
  7267                           
  7268                           ;SlaveLiofilizadorVer1.c: 544:              {;SlaveLiofilizadorVer1.c: 545:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  7269  0262  084D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7270  0263  1283               	bcf	3,5	;RP0=0, select bank0
  7271  0264  00AA               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  7272  0265  1683               	bsf	3,5	;RP0=1, select bank1
  7273  0266  084C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7274  0267  1283               	bcf	3,5	;RP0=0, select bank0
  7275  0268  00A9               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  7276  0269  1683               	bsf	3,5	;RP0=1, select bank1
  7277  026A  084B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7278  026B  1283               	bcf	3,5	;RP0=0, select bank0
  7279  026C  00A8               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  7280  026D  1683               	bsf	3,5	;RP0=1, select bank1
  7281  026E  084A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7282  026F  1283               	bcf	3,5	;RP0=0, select bank0
  7283  0270  00A7               	movwf	EEPROM_24C1025_Read_Str@mem_add
  7284  0271  3044               	movlw	(low (_buffer| (0+256)))& (0+255)
  7285  0272  00AB               	movwf	EEPROM_24C1025_Read_Str@buffer
  7286  0273  1683               	bsf	3,5	;RP0=1, select bank3
  7287  0274  1703               	bsf	3,6	;RP1=1, select bank3
  7288  0275  0835               	movf	(_usart_protocol^(0+384)+6),w
  7289  0276  160A  118A  235D  120A  118A  	fcall	_EEPROM_24C1025_Read_Str
  7290                           
  7291                           ;SlaveLiofilizadorVer1.c: 549:              Send_To_MB(strlen(buffer)+1);
  7292  027B  3044               	movlw	(low (_buffer| (0+256)))& (0+255)
  7293  027C  160A  158A  246E  120A  118A  	fcall	_strlen
  7294  0281  0820               	movf	?_strlen,w
  7295  0282  3E01               	addlw	1
  7296  0283  2892               	goto	L10
  7297  0284                     l7280:
  7298                           
  7299                           ;SlaveLiofilizadorVer1.c: 555:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  7300  0284  1703               	bsf	3,6	;RP1=1, select bank3
  7301  0285  0836               	movf	(_usart_protocol^(0+384)+7),w
  7302  0286  1303               	bcf	3,6	;RP1=0, select bank1
  7303  0287  00B1               	movwf	EEPROM_24C1025_Fill_All@value^(0+128)
  7304  0288  01B2               	clrf	(EEPROM_24C1025_Fill_All@value+1)^(0+128)
  7305  0289  1703               	bsf	3,6	;RP1=1, select bank3
  7306  028A  0835               	movf	(_usart_protocol^(0+384)+6),w
  7307  028B  160A  158A  24DA  120A  118A  	fcall	_EEPROM_24C1025_Fill_All
  7308  0290  2944               	goto	L9
  7309  0291                     l7286:	
  7310                           ;SlaveLiofilizadorVer1.c: 557:              Send_To_MB(3);
  7311                           
  7312                           
  7313                           ;SlaveLiofilizadorVer1.c: 562:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  7314  0291  1703               	bsf	3,6	;RP1=1, select bank3
  7315  0292  0835               	movf	(_usart_protocol^(0+384)+6),w
  7316  0293  1303               	bcf	3,6	;RP1=0, select bank1
  7317  0294  00AE               	movwf	PROCULUS_Show_Screen@screen^(0+128)
  7318  0295  01AF               	clrf	(PROCULUS_Show_Screen@screen+1)^(0+128)
  7319  0296  160A  118A  2086  120A  118A  	fcall	_PROCULUS_Show_Screen
  7320  029B  2944               	goto	L9
  7321  029C                     l7292:	
  7322                           ;SlaveLiofilizadorVer1.c: 563:              Send_To_MB(3);
  7323                           
  7324                           
  7325                           ;SlaveLiofilizadorVer1.c: 568:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  7326  029C  1703               	bsf	3,6	;RP1=1, select bank3
  7327  029D  0835               	movf	(_usart_protocol^(0+384)+6),w
  7328  029E  1303               	bcf	3,6	;RP1=0, select bank1
  7329  029F  00AF               	movwf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128)
  7330  02A0  1703               	bsf	3,6	;RP1=1, select bank3
  7331  02A1  0836               	movf	(_usart_protocol^(0+384)+7),w
  7332  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  7333  02A3  00AE               	movwf	PROCULUS_Buzzer@time_ms_x_10^(0+128)
  7334  02A4  160A  118A  2090  120A  118A  	fcall	_PROCULUS_Buzzer
  7335  02A9  2944               	goto	L9
  7336  02AA                     l7298:	
  7337                           ;SlaveLiofilizadorVer1.c: 570:              Send_To_MB(3);
  7338                           
  7339                           
  7340                           ;SlaveLiofilizadorVer1.c: 574:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  7341  02AA  1703               	bsf	3,6	;RP1=1, select bank3
  7342  02AB  0835               	movf	(_usart_protocol^(0+384)+6),w
  7343  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  7344  02AD  00B3               	movwf	(PROCULUS_VP_Write_String@vp+1)^(0+128)
  7345  02AE  1703               	bsf	3,6	;RP1=1, select bank3
  7346  02AF  0836               	movf	(_usart_protocol^(0+384)+7),w
  7347  02B0  1303               	bcf	3,6	;RP1=0, select bank1
  7348  02B1  00B2               	movwf	PROCULUS_VP_Write_String@vp^(0+128)
  7349  02B2  30B7               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  7350  02B3  00B4               	movwf	PROCULUS_VP_Write_String@text^(0+128)
  7351  02B4  160A  158A  245D  120A  118A  	fcall	_PROCULUS_VP_Write_String
  7352  02B9  2944               	goto	L9
  7353  02BA                     l7304:	
  7354                           ;SlaveLiofilizadorVer1.c: 577:              Send_To_MB(3);
  7355                           
  7356                           
  7357                           ;SlaveLiofilizadorVer1.c: 583:              if(usart_protocol.value[0]==0)
  7358  02BA  1703               	bsf	3,6	;RP1=1, select bank3
  7359  02BB  0835               	movf	(_usart_protocol^(0+384)+6),w
  7360  02BC  1D03               	btfss	3,2
  7361  02BD  2AC9               	goto	l7310
  7362                           
  7363                           ;SlaveLiofilizadorVer1.c: 584:                 {;SlaveLiofilizadorVer1.c: 586:          
      +                                 if(!usart_protocol.value[1])
  7364  02BE  0836               	movf	(_usart_protocol^(0+384)+7),w
  7365  02BF  1D03               	btfss	3,2
  7366  02C0  2AC5               	goto	l475
  7367                           
  7368                           ;SlaveLiofilizadorVer1.c: 587:                    PORTCbits.RC0=0;
  7369  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  7370  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  7371  02C3  1007               	bcf	7,0	;volatile
  7372  02C4  2944               	goto	L9
  7373  02C5                     l475:	
  7374                           ;SlaveLiofilizadorVer1.c: 588:                 else
  7375                           
  7376                           
  7377                           ;SlaveLiofilizadorVer1.c: 589:                    PORTCbits.RC0=1;
  7378  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  7379  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  7380  02C7  1407               	bsf	7,0	;volatile
  7381  02C8  2944               	goto	L9
  7382  02C9                     l7310:
  7383  02C9  0B35               	decfsz	(_usart_protocol^(0+384)+6),w
  7384  02CA  2944               	goto	L9
  7385                           
  7386                           ;SlaveLiofilizadorVer1.c: 592:                      {;SlaveLiofilizadorVer1.c: 594:     
      +                                            if(!usart_protocol.value[1])
  7387  02CB  0836               	movf	(_usart_protocol^(0+384)+7),w
  7388  02CC  1D03               	btfss	3,2
  7389  02CD  2AD2               	goto	l479
  7390                           
  7391                           ;SlaveLiofilizadorVer1.c: 595:                          PORTCbits.RC1=0;
  7392  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  7393  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  7394  02D0  1087               	bcf	7,1	;volatile
  7395  02D1  2944               	goto	L9
  7396  02D2                     l479:	
  7397                           ;SlaveLiofilizadorVer1.c: 596:                       else
  7398                           
  7399                           
  7400                           ;SlaveLiofilizadorVer1.c: 597:                          PORTCbits.RC1=1;
  7401  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  7402  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  7403  02D4  1487               	bsf	7,1	;volatile
  7404  02D5  2944               	goto	L9
  7405  02D6                     l7322:	
  7406                           ;SlaveLiofilizadorVer1.c: 599:              Send_To_MB(3);
  7407                           
  7408  02D6  1703               	bsf	3,6	;RP1=1, select bank3
  7409  02D7  0833               	movf	(_usart_protocol^(0+384)+4),w
  7410  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  7411  02D9  00BD               	movwf	??_Decodify_Command^(0+128)
  7412  02DA  01BE               	clrf	(??_Decodify_Command^(0+128)+1)
  7413                           
  7414                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7415                           ; Switch size 1, requested type "space"
  7416                           ; Number of cases is 1, Range of values is 0 to 0
  7417                           ; switch strategies available:
  7418                           ; Name         Instructions Cycles
  7419                           ; simple_byte            4     3 (average)
  7420                           ; direct_byte           11     8 (fixed)
  7421                           ; jumptable            260     6 (fixed)
  7422                           ;	Chosen strategy is simple_byte
  7423  02DB  083E               	movf	(??_Decodify_Command+1)^(0+128),w
  7424  02DC  3A00               	xorlw	0	; case 0
  7425  02DD  1903               	skipnz
  7426  02DE  2AE0               	goto	l7492
  7427  02DF  2B2D               	goto	l481
  7428  02E0                     l7492:
  7429                           
  7430                           ; Switch size 1, requested type "space"
  7431                           ; Number of cases is 25, Range of values is 1 to 65
  7432                           ; switch strategies available:
  7433                           ; Name         Instructions Cycles
  7434                           ; simple_byte           76    39 (average)
  7435                           ; direct_byte          206    11 (fixed)
  7436                           ; jumptable            263     9 (fixed)
  7437                           ;	Chosen strategy is simple_byte
  7438  02E0  083D               	movf	??_Decodify_Command^(0+128),w
  7439  02E1  3A01               	xorlw	1	; case 1
  7440  02E2  1903               	skipnz
  7441  02E3  2931               	goto	l7192
  7442  02E4  3A03               	xorlw	3	; case 2
  7443  02E5  1903               	skipnz
  7444  02E6  28FD               	goto	l7176
  7445  02E7  3A01               	xorlw	1	; case 3
  7446  02E8  1903               	skipnz
  7447  02E9  2929               	goto	l7188
  7448  02EA  3A0B               	xorlw	11	; case 8
  7449  02EB  1903               	skipnz
  7450  02EC  2939               	goto	l7198
  7451  02ED  3A01               	xorlw	1	; case 9
  7452  02EE  1903               	skipnz
  7453  02EF  2949               	goto	l7202
  7454  02F0  3A03               	xorlw	3	; case 10
  7455  02F1  1903               	skipnz
  7456  02F2  2957               	goto	l7208
  7457  02F3  3A01               	xorlw	1	; case 11
  7458  02F4  1903               	skipnz
  7459  02F5  2970               	goto	l7216
  7460  02F6  3A07               	xorlw	7	; case 12
  7461  02F7  1903               	skipnz
  7462  02F8  2985               	goto	l7222
  7463  02F9  3A01               	xorlw	1	; case 13
  7464  02FA  1903               	skipnz
  7465  02FB  298F               	goto	l7228
  7466  02FC  3A1C               	xorlw	28	; case 17
  7467  02FD  1903               	skipnz
  7468  02FE  299A               	goto	l7234
  7469  02FF  3A03               	xorlw	3	; case 18
  7470  0300  1903               	skipnz
  7471  0301  29B6               	goto	l7240
  7472  0302  3A01               	xorlw	1	; case 19
  7473  0303  1903               	skipnz
  7474  0304  29D3               	goto	l7246
  7475  0305  3A07               	xorlw	7	; case 20
  7476  0306  1903               	skipnz
  7477  0307  29E9               	goto	l7252
  7478  0308  3A01               	xorlw	1	; case 21
  7479  0309  1903               	skipnz
  7480  030A  2A48               	goto	l7270
  7481  030B  3A03               	xorlw	3	; case 22
  7482  030C  1903               	skipnz
  7483  030D  2A62               	goto	l7276
  7484  030E  3A01               	xorlw	1	; case 23
  7485  030F  1903               	skipnz
  7486  0310  2A26               	goto	l7264
  7487  0311  3A0F               	xorlw	15	; case 24
  7488  0312  1903               	skipnz
  7489  0313  2A06               	goto	l7258
  7490  0314  3A01               	xorlw	1	; case 25
  7491  0315  1903               	skipnz
  7492  0316  2A84               	goto	l7280
  7493  0317  3A03               	xorlw	3	; case 26
  7494  0318  1903               	skipnz
  7495  0319  289B               	goto	l7160
  7496  031A  3A38               	xorlw	56	; case 34
  7497  031B  1903               	skipnz
  7498  031C  2AAA               	goto	l7298
  7499  031D  3A06               	xorlw	6	; case 36
  7500  031E  1903               	skipnz
  7501  031F  2A9C               	goto	l7292
  7502  0320  3A01               	xorlw	1	; case 37
  7503  0321  1903               	skipnz
  7504  0322  2A91               	goto	l7286
  7505  0323  3A15               	xorlw	21	; case 48
  7506  0324  1903               	skipnz
  7507  0325  2ABA               	goto	l7304
  7508  0326  3A70               	xorlw	112	; case 64
  7509  0327  1903               	skipnz
  7510  0328  291F               	goto	l7184
  7511  0329  3A01               	xorlw	1	; case 65
  7512  032A  1903               	skipnz
  7513  032B  2888               	goto	l7154
  7514  032C  2B2D               	goto	l481
  7515  032D                     l481:
  7516  032D  0008               	return
  7517  032E                     __end_of_Decodify_Command:
  7518  032E                     __ptext16:	
  7519 ;; *************** function _Send_To_MB *****************
  7520 ;; Defined at:
  7521 ;;		line 608 in file "SlaveLiofilizadorVer1.c"
  7522 ;; Parameters:    Size  Location     Type
  7523 ;;  size            1    wreg     unsigned char 
  7524 ;; Auto vars:     Size  Location     Type
  7525 ;;  size            1    1[BANK0 ] unsigned char 
  7526 ;; Return value:  Size  Location     Type
  7527 ;;                  1    wreg      void 
  7528 ;; Registers used:
  7529 ;;		wreg, status,2, status,0, pclath, cstack
  7530 ;; Tracked objects:
  7531 ;;		On entry : 0/800
  7532 ;;		On exit  : 300/100
  7533 ;;		Unchanged: 0/0
  7534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7535 ;;      Params:         0       0       0       0       0
  7536 ;;      Locals:         0       1       0       0       0
  7537 ;;      Temps:          0       0       0       0       0
  7538 ;;      Totals:         0       1       0       0       0
  7539 ;;Total ram usage:        1 bytes
  7540 ;; Hardware stack levels used: 1
  7541 ;; Hardware stack levels required when called: 2
  7542 ;; This function calls:
  7543 ;;		_USART_putc
  7544 ;; This function is called by:
  7545 ;;		_Decodify_Command
  7546 ;; This function uses a non-reentrant model
  7547 ;;
  7548                           
  7549                           
  7550                           ;psect for function _Send_To_MB
  7551  032E                     _Send_To_MB:
  7552                           
  7553                           ;incstack = 0
  7554                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  7555                           ;Send_To_MB@size stored from wreg
  7556  032E  1283               	bcf	3,5	;RP0=0, select bank0
  7557  032F  1303               	bcf	3,6	;RP1=0, select bank0
  7558  0330  00A1               	movwf	Send_To_MB@size
  7559                           
  7560                           ;SlaveLiofilizadorVer1.c: 610:      USART_putc(0xAA);
  7561  0331  30AA               	movlw	170
  7562  0332  2349  120A  118A   	fcall	_USART_putc
  7563                           
  7564                           ;SlaveLiofilizadorVer1.c: 611:      USART_putc(0xBB);
  7565  0335  30BB               	movlw	187
  7566  0336  2349  120A  118A   	fcall	_USART_putc
  7567                           
  7568                           ;SlaveLiofilizadorVer1.c: 612:      USART_putc(Board_Number);
  7569  0339  0865               	movf	_Board_Number^(0+128),w
  7570  033A  2349  120A  118A   	fcall	_USART_putc
  7571                           
  7572                           ;SlaveLiofilizadorVer1.c: 613:      USART_putc(0x00);
  7573  033D  3000               	movlw	0
  7574  033E  2349  120A  118A   	fcall	_USART_putc
  7575                           
  7576                           ;SlaveLiofilizadorVer1.c: 614:      USART_putc(usart_protocol.command);
  7577  0341  1703               	bsf	3,6	;RP1=1, select bank3
  7578  0342  0833               	movf	(_usart_protocol^(0+384)+4),w
  7579  0343  2349  120A  118A   	fcall	_USART_putc
  7580                           
  7581                           ;SlaveLiofilizadorVer1.c: 615:      USART_putc(size);
  7582  0346  1283               	bcf	3,5	;RP0=0, select bank0
  7583  0347  0821               	movf	Send_To_MB@size,w
  7584  0348  2B49               	ljmp	_USART_putc
  7585  0349                     __end_of_Send_To_MB:
  7586  0349                     __ptext47:	
  7587 ;; *************** function _USART_putc *****************
  7588 ;; Defined at:
  7589 ;;		line 89 in file "usart.c"
  7590 ;; Parameters:    Size  Location     Type
  7591 ;;  value           1    wreg     unsigned char 
  7592 ;; Auto vars:     Size  Location     Type
  7593 ;;  value           1    0[BANK0 ] unsigned char 
  7594 ;; Return value:  Size  Location     Type
  7595 ;;                  1    wreg      void 
  7596 ;; Registers used:
  7597 ;;		wreg
  7598 ;; Tracked objects:
  7599 ;;		On entry : 0/100
  7600 ;;		On exit  : 300/100
  7601 ;;		Unchanged: 0/0
  7602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7603 ;;      Params:         0       0       0       0       0
  7604 ;;      Locals:         0       1       0       0       0
  7605 ;;      Temps:          0       0       0       0       0
  7606 ;;      Totals:         0       1       0       0       0
  7607 ;;Total ram usage:        1 bytes
  7608 ;; Hardware stack levels used: 1
  7609 ;; Hardware stack levels required when called: 1
  7610 ;; This function calls:
  7611 ;;		Nothing
  7612 ;; This function is called by:
  7613 ;;		_EEPROM_24C1025_Read_Buffer_USART
  7614 ;;		_Decodify_Command
  7615 ;;		_Send_To_MB
  7616 ;;		_PROCULUS_Control_Register_Write
  7617 ;;		_PROCULUS_VP_Write
  7618 ;;		_USART_put_int
  7619 ;;		_USART_put_string
  7620 ;; This function uses a non-reentrant model
  7621 ;;
  7622                           
  7623                           
  7624                           ;psect for function _USART_putc
  7625  0349                     _USART_putc:
  7626                           
  7627                           ;incstack = 0
  7628                           ; Regs used in _USART_putc: [wreg]
  7629                           ;USART_putc@value stored from wreg
  7630  0349  1283               	bcf	3,5	;RP0=0, select bank0
  7631  034A  1303               	bcf	3,6	;RP1=0, select bank0
  7632  034B  00A0               	movwf	USART_putc@value
  7633                           
  7634                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
  7635  034C  3014               	movlw	20
  7636  034D  1683               	bsf	3,5	;RP0=1, select bank3
  7637  034E  1703               	bsf	3,6	;RP1=1, select bank3
  7638  034F  00A8               	movwf	_Delay_Led_Usart^(0+384)	;volatile
  7639  0350  01A9               	clrf	(_Delay_Led_Usart+1)^(0+384)	;volatile
  7640  0351                     l944:	
  7641                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
  7642                           
  7643  0351  1303               	bcf	3,6	;RP1=0, select bank1
  7644  0352  1C98               	btfss	24,1	;volatile
  7645  0353  2B51               	goto	l944
  7646                           
  7647                           ;usart.c: 93:     TXREG=value;
  7648  0354  1283               	bcf	3,5	;RP0=0, select bank0
  7649  0355  0820               	movf	USART_putc@value,w
  7650  0356  0099               	movwf	25	;volatile
  7651                           
  7652                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
  7653  0357  1683               	bsf	3,5	;RP0=1, select bank1
  7654  0358  1698               	bsf	24,5	;volatile
  7655  0359  0008               	return
  7656  035A                     __end_of_USART_putc:
  7657  035A                     __ptext30:	
  7658 ;; *************** function _USART_put_int *****************
  7659 ;; Defined at:
  7660 ;;		line 137 in file "usart.c"
  7661 ;; Parameters:    Size  Location     Type
  7662 ;;  value           2    8[BANK1 ] int 
  7663 ;; Auto vars:     Size  Location     Type
  7664 ;;  dado            1   79[BANK0 ] PTR unsigned char 
  7665 ;;		 -> USART_put_int@value(2), 
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  1    wreg      void 
  7668 ;; Registers used:
  7669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7670 ;; Tracked objects:
  7671 ;;		On entry : 300/100
  7672 ;;		On exit  : 300/100
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7675 ;;      Params:         0       0       2       0       0
  7676 ;;      Locals:         0       1       0       0       0
  7677 ;;      Temps:          0       0       0       0       0
  7678 ;;      Totals:         0       1       2       0       0
  7679 ;;Total ram usage:        3 bytes
  7680 ;; Hardware stack levels used: 1
  7681 ;; Hardware stack levels required when called: 2
  7682 ;; This function calls:
  7683 ;;		_USART_putc
  7684 ;; This function is called by:
  7685 ;;		_Decodify_Command
  7686 ;;		_PROCULUS_Control_Register_Write
  7687 ;;		_PROCULUS_VP_Write
  7688 ;; This function uses a non-reentrant model
  7689 ;;
  7690                           
  7691                           
  7692                           ;psect for function _USART_put_int
  7693  035A                     _USART_put_int:
  7694  035A                     l6262:	
  7695                           ;incstack = 0
  7696                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7697                           
  7698                           
  7699                           ;usart.c: 138:      char *dado;;usart.c: 139:      dado=(char*)&value;
  7700  035A  30A8               	movlw	(low (USART_put_int@value| 0))& (0+255)
  7701  035B  1283               	bcf	3,5	;RP0=0, select bank0
  7702  035C  00EF               	movwf	USART_put_int@dado
  7703                           
  7704                           ;usart.c: 140:      USART_putc(*(dado+1));
  7705  035D  0A6F               	incf	USART_put_int@dado,w
  7706  035E  0084               	movwf	4
  7707  035F  1383               	bcf	3,7	;select IRP bank0
  7708  0360  0800               	movf	0,w
  7709  0361  2349  120A  118A   	fcall	_USART_putc
  7710                           
  7711                           ;usart.c: 141:      USART_putc(*dado);
  7712  0364  1283               	bcf	3,5	;RP0=0, select bank0
  7713  0365  086F               	movf	USART_put_int@dado,w
  7714  0366  0084               	movwf	4
  7715  0367  1383               	bcf	3,7	;select IRP bank0
  7716  0368  0800               	movf	0,w
  7717  0369  2B49               	ljmp	_USART_putc
  7718  036A                     __end_of_USART_put_int:
  7719  036A                     __ptext17:	
  7720 ;; *************** function _Send_Reply_OK *****************
  7721 ;; Defined at:
  7722 ;;		line 619 in file "SlaveLiofilizadorVer1.c"
  7723 ;; Parameters:    Size  Location     Type
  7724 ;;		None
  7725 ;; Auto vars:     Size  Location     Type
  7726 ;;		None
  7727 ;; Return value:  Size  Location     Type
  7728 ;;                  1    wreg      void 
  7729 ;; Registers used:
  7730 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7731 ;; Tracked objects:
  7732 ;;		On entry : 100/100
  7733 ;;		On exit  : 300/100
  7734 ;;		Unchanged: 0/0
  7735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7736 ;;      Params:         0       0       0       0       0
  7737 ;;      Locals:         0       0       0       0       0
  7738 ;;      Temps:          0       0       0       0       0
  7739 ;;      Totals:         0       0       0       0       0
  7740 ;;Total ram usage:        0 bytes
  7741 ;; Hardware stack levels used: 1
  7742 ;; Hardware stack levels required when called: 3
  7743 ;; This function calls:
  7744 ;;		_USART_put_string
  7745 ;; This function is called by:
  7746 ;;		_Decodify_Command
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750                           
  7751                           ;psect for function _Send_Reply_OK
  7752  036A                     _Send_Reply_OK:
  7753  036A                     l6830:	
  7754                           ;incstack = 0
  7755                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7756                           
  7757                           
  7758                           ;SlaveLiofilizadorVer1.c: 620:      USART_put_string("OK");
  7759  036A  3035               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  7760  036B  1283               	bcf	3,5	;RP0=0, select bank0
  7761  036C  1303               	bcf	3,6	;RP1=0, select bank0
  7762  036D  00A1               	movwf	USART_put_string@vetor
  7763  036E  3080               	movlw	128
  7764  036F  00A2               	movwf	USART_put_string@vetor+1
  7765  0370  160A  158A  2CAD   	ljmp	l6402
  7766  0373                     __end_of_Send_Reply_OK:
  7767  0373                     __ptext51:	
  7768 ;; *************** function _EEPROM_24C1025_Write_Int *****************
  7769 ;; Defined at:
  7770 ;;		line 352 in file "EEPROM_24C1025.c"
  7771 ;; Parameters:    Size  Location     Type
  7772 ;;  chip_add        1    wreg     unsigned char 
  7773 ;;  mem_add         4    8[BANK1 ] unsigned long 
  7774 ;;  data            2   12[BANK1 ] int 
  7775 ;; Auto vars:     Size  Location     Type
  7776 ;;  chip_add        1   14[BANK1 ] unsigned char 
  7777 ;;  local           2   15[BANK1 ] unsigned char [2]
  7778 ;; Return value:  Size  Location     Type
  7779 ;;                  1    wreg      void 
  7780 ;; Registers used:
  7781 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7782 ;; Tracked objects:
  7783 ;;		On entry : 100/300
  7784 ;;		On exit  : 0/0
  7785 ;;		Unchanged: 0/0
  7786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7787 ;;      Params:         0       0       6       0       0
  7788 ;;      Locals:         0       0       3       0       0
  7789 ;;      Temps:          0       0       0       0       0
  7790 ;;      Totals:         0       0       9       0       0
  7791 ;;Total ram usage:        9 bytes
  7792 ;; Hardware stack levels used: 1
  7793 ;; Hardware stack levels required when called: 4
  7794 ;; This function calls:
  7795 ;;		_EEPROM_24C1025_Write_Buffer
  7796 ;; This function is called by:
  7797 ;;		_EEPROM_24C1025_Fill_All
  7798 ;;		_Decodify_Command
  7799 ;;		_Save_Log
  7800 ;; This function uses a non-reentrant model
  7801 ;;
  7802                           
  7803                           
  7804                           ;psect for function _EEPROM_24C1025_Write_Int
  7805  0373                     _EEPROM_24C1025_Write_Int:
  7806                           
  7807                           ;incstack = 0
  7808                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  7809                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
  7810  0373  1303               	bcf	3,6	;RP1=0, select bank1
  7811  0374  00AE               	movwf	EEPROM_24C1025_Write_Int@chip_add^(0+128)
  7812                           
  7813                           ;EEPROM_24C1025.c: 353:      char local[2];;EEPROM_24C1025.c: 354:      local[0]=((char 
      +                          *)&data)[1];
  7814  0375  082D               	movf	(EEPROM_24C1025_Write_Int@data^(0+128)+1),w
  7815  0376  00AF               	movwf	EEPROM_24C1025_Write_Int@local^(0+128)
  7816                           
  7817                           ;EEPROM_24C1025.c: 355:      local[1]=((char *)&data)[0];
  7818  0377  082C               	movf	EEPROM_24C1025_Write_Int@data^(0+128),w
  7819  0378  00B0               	movwf	(EEPROM_24C1025_Write_Int@local^(0+128)+1)
  7820                           
  7821                           ;EEPROM_24C1025.c: 356:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
  7822  0379  082B               	movf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128),w
  7823  037A  1283               	bcf	3,5	;RP0=0, select bank0
  7824  037B  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  7825  037C  1683               	bsf	3,5	;RP0=1, select bank1
  7826  037D  082A               	movf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128),w
  7827  037E  1283               	bcf	3,5	;RP0=0, select bank0
  7828  037F  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  7829  0380  1683               	bsf	3,5	;RP0=1, select bank1
  7830  0381  0829               	movf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128),w
  7831  0382  1283               	bcf	3,5	;RP0=0, select bank0
  7832  0383  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  7833  0384  1683               	bsf	3,5	;RP0=1, select bank1
  7834  0385  0828               	movf	EEPROM_24C1025_Write_Int@mem_add^(0+128),w
  7835  0386  1283               	bcf	3,5	;RP0=0, select bank0
  7836  0387  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  7837  0388  3002               	movlw	2
  7838  0389  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  7839  038A  30AF               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
  7840  038B  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  7841  038C  01B0               	clrf	EEPROM_24C1025_Write_Buffer@data+1
  7842  038D  1683               	bsf	3,5	;RP0=1, select bank1
  7843  038E  082E               	movf	EEPROM_24C1025_Write_Int@chip_add^(0+128),w
  7844  038F  160A  118A  2E87   	ljmp	_EEPROM_24C1025_Write_Buffer
  7845  0392                     __end_of_EEPROM_24C1025_Write_Int:
  7846  0392                     __ptext21:	
  7847 ;; *************** function ___flmul *****************
  7848 ;; Defined at:
  7849 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;  b               4   52[BANK0 ] long 
  7852 ;;  a               4   56[BANK0 ] long 
  7853 ;; Auto vars:     Size  Location     Type
  7854 ;;  prod            4   71[BANK0 ] struct .
  7855 ;;  grs             4   67[BANK0 ] unsigned long 
  7856 ;;  temp            2   75[BANK0 ] struct .
  7857 ;;  bexp            1   66[BANK0 ] unsigned char 
  7858 ;;  aexp            1   65[BANK0 ] unsigned char 
  7859 ;;  sign            1   64[BANK0 ] unsigned char 
  7860 ;; Return value:  Size  Location     Type
  7861 ;;                  4   52[BANK0 ] unsigned char 
  7862 ;; Registers used:
  7863 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7864 ;; Tracked objects:
  7865 ;;		On entry : 300/0
  7866 ;;		On exit  : 300/0
  7867 ;;		Unchanged: 0/0
  7868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7869 ;;      Params:         0       8       0       0       0
  7870 ;;      Locals:         0      13       0       0       0
  7871 ;;      Temps:          0       4       0       0       0
  7872 ;;      Totals:         0      25       0       0       0
  7873 ;;Total ram usage:       25 bytes
  7874 ;; Hardware stack levels used: 1
  7875 ;; Hardware stack levels required when called: 2
  7876 ;; This function calls:
  7877 ;;		__Umul8_16
  7878 ;; This function is called by:
  7879 ;;		_Decodify_Command
  7880 ;;		_Save_Log
  7881 ;;		_ADC_Read_NTC
  7882 ;;		_log
  7883 ;;		_eval_poly
  7884 ;; This function uses a non-reentrant model
  7885 ;;
  7886                           
  7887                           
  7888                           ;psect for function ___flmul
  7889  0392                     ___flmul:
  7890                           
  7891                           ;incstack = 0
  7892                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7893  0392  0857               	movf	___flmul@b+3,w
  7894  0393  00E0               	movwf	___flmul@sign
  7895  0394  3080               	movlw	128
  7896  0395  05E0               	andwf	___flmul@sign,f
  7897  0396  1003               	clrc
  7898  0397  0D57               	rlf	___flmul@b+3,w
  7899  0398  00E2               	movwf	___flmul@bexp
  7900  0399  1BD6               	btfsc	___flmul@b+2,7
  7901  039A  1462               	bsf	___flmul@bexp,0
  7902  039B  0862               	movf	___flmul@bexp,w
  7903  039C  1903               	btfsc	3,2
  7904  039D  2BA6               	goto	l1433
  7905  039E  0F62               	incfsz	___flmul@bexp,w
  7906  039F  2BA4               	goto	l1434
  7907  03A0  01D4               	clrf	___flmul@b
  7908  03A1  01D5               	clrf	___flmul@b+1
  7909  03A2  01D6               	clrf	___flmul@b+2
  7910  03A3  01D7               	clrf	___flmul@b+3
  7911  03A4                     l1434:
  7912  03A4  17D6               	bsf	___flmul@b+2,7
  7913  03A5  2BAA               	goto	l6042
  7914  03A6                     l1433:
  7915  03A6  01D4               	clrf	___flmul@b
  7916  03A7  01D5               	clrf	___flmul@b+1
  7917  03A8  01D6               	clrf	___flmul@b+2
  7918  03A9  01D7               	clrf	___flmul@b+3
  7919  03AA                     l6042:
  7920  03AA  085B               	movf	___flmul@a+3,w
  7921  03AB  3980               	andlw	128
  7922  03AC  06E0               	xorwf	___flmul@sign,f
  7923  03AD  1003               	clrc
  7924  03AE  0D5B               	rlf	___flmul@a+3,w
  7925  03AF  00E1               	movwf	___flmul@aexp
  7926  03B0  1BDA               	btfsc	___flmul@a+2,7
  7927  03B1  1461               	bsf	___flmul@aexp,0
  7928  03B2  0861               	movf	___flmul@aexp,w
  7929  03B3  1903               	btfsc	3,2
  7930  03B4  2BBD               	goto	l1437
  7931  03B5  0F61               	incfsz	___flmul@aexp,w
  7932  03B6  2BBB               	goto	l1438
  7933  03B7  01D8               	clrf	___flmul@a
  7934  03B8  01D9               	clrf	___flmul@a+1
  7935  03B9  01DA               	clrf	___flmul@a+2
  7936  03BA  01DB               	clrf	___flmul@a+3
  7937  03BB                     l1438:
  7938  03BB  17DA               	bsf	___flmul@a+2,7
  7939  03BC  2BC1               	goto	l6054
  7940  03BD                     l1437:
  7941  03BD  01D8               	clrf	___flmul@a
  7942  03BE  01D9               	clrf	___flmul@a+1
  7943  03BF  01DA               	clrf	___flmul@a+2
  7944  03C0  01DB               	clrf	___flmul@a+3
  7945  03C1                     l6054:
  7946  03C1  0861               	movf	___flmul@aexp,w
  7947  03C2  1D03               	btfss	3,2
  7948  03C3  0862               	movf	___flmul@bexp,w
  7949  03C4  1D03               	btfss	3,2
  7950  03C5  2BCB               	goto	l6058
  7951  03C6  01D4               	clrf	?___flmul
  7952  03C7  01D5               	clrf	?___flmul+1
  7953  03C8  01D6               	clrf	?___flmul+2
  7954  03C9  01D7               	clrf	?___flmul+3
  7955  03CA  0008               	return
  7956  03CB                     l6058:
  7957  03CB  0854               	movf	___flmul@b,w
  7958  03CC  00A0               	movwf	__Umul8_16@multiplicand
  7959  03CD  085A               	movf	___flmul@a+2,w
  7960  03CE  24E6  120A  118A   	fcall	__Umul8_16
  7961  03D1  0821               	movf	?__Umul8_16+1,w
  7962  03D2  00EC               	movwf	___flmul@temp+1
  7963  03D3  0820               	movf	?__Umul8_16,w
  7964  03D4  00EB               	movwf	___flmul@temp
  7965  03D5  00E3               	movwf	___flmul@grs
  7966  03D6  01E4               	clrf	___flmul@grs+1
  7967  03D7  01E5               	clrf	___flmul@grs+2
  7968  03D8  01E6               	clrf	___flmul@grs+3
  7969  03D9  086C               	movf	___flmul@temp+1,w
  7970  03DA  00E7               	movwf	___flmul@prod
  7971  03DB  01E8               	clrf	___flmul@prod+1
  7972  03DC  01E9               	clrf	___flmul@prod+2
  7973  03DD  01EA               	clrf	___flmul@prod+3
  7974  03DE  0855               	movf	___flmul@b+1,w
  7975  03DF  00A0               	movwf	__Umul8_16@multiplicand
  7976  03E0  0859               	movf	___flmul@a+1,w
  7977  03E1  24E6  120A  118A   	fcall	__Umul8_16
  7978  03E4  2675  120A  118A   	fcall	PL20	;call to abstracted procedure
  7979  03E7  1803               	skipnc
  7980  03E8  07E8               	addwf	___flmul@prod+1,f
  7981  03E9  1803               	skipnc
  7982  03EA  07E9               	addwf	___flmul@prod+2,f
  7983  03EB  1803               	skipnc
  7984  03EC  07EA               	addwf	___flmul@prod+3,f
  7985  03ED  0856               	movf	___flmul@b+2,w
  7986  03EE  00A0               	movwf	__Umul8_16@multiplicand
  7987  03EF  0858               	movf	___flmul@a,w
  7988  03F0  24E6  120A  118A   	fcall	__Umul8_16
  7989  03F3  2675  120A  118A   	fcall	PL20	;call to abstracted procedure
  7990  03F6  2684  120A  118A   	fcall	PL26	;call to abstracted procedure
  7991  03F9  0855               	movf	___flmul@b+1,w
  7992  03FA  00A0               	movwf	__Umul8_16@multiplicand
  7993  03FB  0858               	movf	___flmul@a,w
  7994  03FC  24E6  120A  118A   	fcall	__Umul8_16
  7995  03FF  2628  120A  118A   	fcall	PL2	;call to abstracted procedure
  7996  0402  1803               	skipnc
  7997  0403  3E01               	addlw	1
  7998  0404  1D03               	btfss	3,2
  7999  0405  07E6               	addwf	___flmul@grs+3,f
  8000  0406  0854               	movf	___flmul@b,w
  8001  0407  00A0               	movwf	__Umul8_16@multiplicand
  8002  0408  0859               	movf	___flmul@a+1,w
  8003  0409  24E6  120A  118A   	fcall	__Umul8_16
  8004  040C  2628  120A  118A   	fcall	PL2	;call to abstracted procedure
  8005  040F  1803               	skipnc
  8006  0410  3E01               	addlw	1
  8007  0411  1D03               	btfss	3,2
  8008  0412  07E6               	addwf	___flmul@grs+3,f
  8009  0413  0865               	movf	___flmul@grs+2,w
  8010  0414  00E6               	movwf	___flmul@grs+3
  8011  0415  0864               	movf	___flmul@grs+1,w
  8012  0416  00E5               	movwf	___flmul@grs+2
  8013  0417  0863               	movf	___flmul@grs,w
  8014  0418  00E4               	movwf	___flmul@grs+1
  8015  0419  01E3               	clrf	___flmul@grs
  8016  041A  0854               	movf	___flmul@b,w
  8017  041B  00A0               	movwf	__Umul8_16@multiplicand
  8018  041C  0858               	movf	___flmul@a,w
  8019  041D  24E6  120A  118A   	fcall	__Umul8_16
  8020  0420  2628  120A  118A   	fcall	PL2	;call to abstracted procedure
  8021  0423  1803               	skipnc
  8022  0424  3E01               	addlw	1
  8023  0425  1D03               	btfss	3,2
  8024  0426  07E6               	addwf	___flmul@grs+3,f
  8025  0427  0855               	movf	___flmul@b+1,w
  8026  0428  00A0               	movwf	__Umul8_16@multiplicand
  8027  0429  085A               	movf	___flmul@a+2,w
  8028  042A  24E6  120A  118A   	fcall	__Umul8_16
  8029  042D  0821               	movf	?__Umul8_16+1,w
  8030  042E  2642  120A  118A   	fcall	PL8	;call to abstracted procedure
  8031  0431  264B  120A  118A   	fcall	PL14	;call to abstracted procedure
  8032  0434  2699  120A  118A   	fcall	PL64	;call to abstracted procedure
  8033  0437  0859               	movf	___flmul@a+1,w
  8034  0438  24E6  120A  118A   	fcall	__Umul8_16
  8035  043B  0821               	movf	?__Umul8_16+1,w
  8036  043C  2642  120A  118A   	fcall	PL8	;call to abstracted procedure
  8037  043F  264B  120A  118A   	fcall	PL14	;call to abstracted procedure
  8038  0442  2699  120A  118A   	fcall	PL64	;call to abstracted procedure
  8039  0445  085A               	movf	___flmul@a+2,w
  8040  0446  24E6  120A  118A   	fcall	__Umul8_16
  8041  0449  0821               	movf	?__Umul8_16+1,w
  8042  044A  2642  120A  118A   	fcall	PL8	;call to abstracted procedure
  8043  044D  085E               	movf	??___flmul+2,w
  8044  044E  00DF               	movwf	??___flmul+3
  8045  044F  085D               	movf	??___flmul+1,w
  8046  0450  00DE               	movwf	??___flmul+2
  8047  0451  085C               	movf	??___flmul,w
  8048  0452  00DD               	movwf	??___flmul+1
  8049  0453  01DC               	clrf	??___flmul
  8050  0454  264B  120A  118A   	fcall	PL14	;call to abstracted procedure
  8051  0457  1803               	skipnc
  8052  0458  3E01               	addlw	1
  8053  0459  1D03               	btfss	3,2
  8054  045A  07EA               	addwf	___flmul@prod+3,f
  8055  045B  0866               	movf	___flmul@grs+3,w
  8056  045C  07E7               	addwf	___flmul@prod,f
  8057  045D  3001               	movlw	1
  8058  045E  2684  120A  118A   	fcall	PL26	;call to abstracted procedure
  8059  0461  0862               	movf	___flmul@bexp,w
  8060  0462  00EB               	movwf	___flmul@temp
  8061  0463  01EC               	clrf	___flmul@temp+1
  8062  0464  0861               	movf	___flmul@aexp,w
  8063  0465  07EB               	addwf	___flmul@temp,f
  8064  0466  1803               	skipnc
  8065  0467  0AEC               	incf	___flmul@temp+1,f
  8066  0468  3082               	movlw	-126
  8067  0469                     L12:
  8068  0469  07EB               	addwf	___flmul@temp,f
  8069  046A  1C03               	skipc
  8070  046B  03EC               	decf	___flmul@temp+1,f
  8071  046C  1BE9               	btfsc	___flmul@prod+2,7
  8072  046D  2C7C               	goto	l6106
  8073  046E  1003               	clrc
  8074  046F  0DE7               	rlf	___flmul@prod,f
  8075  0470  0DE8               	rlf	___flmul@prod+1,f
  8076  0471  0DE9               	rlf	___flmul@prod+2,f
  8077  0472  0DEA               	rlf	___flmul@prod+3,f
  8078  0473  1BE6               	btfsc	___flmul@grs+3,7
  8079  0474  1467               	bsf	___flmul@prod,0
  8080  0475  30FF               	movlw	-1
  8081  0476  1003               	clrc
  8082  0477  0DE3               	rlf	___flmul@grs,f
  8083  0478  0DE4               	rlf	___flmul@grs+1,f
  8084  0479  0DE5               	rlf	___flmul@grs+2,f
  8085  047A  0DE6               	rlf	___flmul@grs+3,f
  8086  047B  2C69               	goto	L12
  8087  047C                     l6106:
  8088  047C  01E1               	clrf	___flmul@aexp
  8089  047D  1FE6               	btfss	___flmul@grs+3,7
  8090  047E  2C91               	goto	l6116
  8091  047F  0863               	movf	___flmul@grs,w
  8092  0480  00DC               	movwf	??___flmul
  8093  0481  0864               	movf	___flmul@grs+1,w
  8094  0482  00DD               	movwf	??___flmul+1
  8095  0483  0865               	movf	___flmul@grs+2,w
  8096  0484  00DE               	movwf	??___flmul+2
  8097  0485  307F               	movlw	127
  8098  0486  0566               	andwf	___flmul@grs+3,w
  8099  0487  00DF               	movwf	??___flmul+3
  8100  0488  045E               	iorwf	??___flmul+2,w
  8101  0489  045D               	iorwf	??___flmul+1,w
  8102  048A  045C               	iorwf	??___flmul,w
  8103  048B  1903               	skipnz
  8104  048C  1867               	btfsc	___flmul@prod,0
  8105  048D  2C8F               	goto	l6112
  8106  048E  2C91               	goto	l6116
  8107  048F                     l6112:
  8108  048F  01E1               	clrf	___flmul@aexp
  8109  0490  0AE1               	incf	___flmul@aexp,f
  8110  0491                     l6116:
  8111  0491  0861               	movf	___flmul@aexp,w
  8112  0492  1903               	btfsc	3,2
  8113  0493  2CA5               	goto	l6126
  8114  0494  0AE7               	incf	___flmul@prod,f
  8115  0495  1903               	skipnz
  8116  0496  0AE8               	incf	___flmul@prod+1,f
  8117  0497  1903               	skipnz
  8118  0498  0AE9               	incf	___flmul@prod+2,f
  8119  0499  1903               	skipnz
  8120  049A  0AEA               	incf	___flmul@prod+3,f
  8121  049B  1C6A               	btfss	___flmul@prod+3,0
  8122  049C  2CA5               	goto	l6126
  8123  049D  0D6A               	rlf	___flmul@prod+3,w
  8124  049E  0CEA               	rrf	___flmul@prod+3,f
  8125  049F  0CE9               	rrf	___flmul@prod+2,f
  8126  04A0  0CE8               	rrf	___flmul@prod+1,f
  8127  04A1  0CE7               	rrf	___flmul@prod,f
  8128  04A2  0AEB               	incf	___flmul@temp,f
  8129  04A3  1903               	skipnz
  8130  04A4  0AEC               	incf	___flmul@temp+1,f
  8131  04A5                     l6126:
  8132  04A5  086C               	movf	___flmul@temp+1,w
  8133  04A6  3A80               	xorlw	128
  8134  04A7  00FF               	movwf	127
  8135  04A8  3080               	movlw	128
  8136  04A9  027F               	subwf	127,w
  8137  04AA  1D03               	skipz
  8138  04AB  2CAE               	goto	u5515
  8139  04AC  30FF               	movlw	255
  8140  04AD  026B               	subwf	___flmul@temp,w
  8141  04AE                     u5515:
  8142  04AE  1C03               	skipc
  8143  04AF  2CB9               	goto	l6130
  8144  04B0  307F               	movlw	127
  8145  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  8146  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  8147  04B3  00EA               	movwf	___flmul@prod+3
  8148  04B4  3080               	movlw	128
  8149  04B5  00E9               	movwf	___flmul@prod+2
  8150  04B6  01E8               	clrf	___flmul@prod+1
  8151  04B7  01E7               	clrf	___flmul@prod
  8152  04B8  2CDB               	goto	l1455
  8153  04B9                     l6130:
  8154  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  8155  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  8156  04BB  086C               	movf	___flmul@temp+1,w
  8157  04BC  3A80               	xorlw	128
  8158  04BD  00FF               	movwf	127
  8159  04BE  3080               	movlw	128
  8160  04BF  027F               	subwf	127,w
  8161  04C0  1D03               	skipz
  8162  04C1  2CC4               	goto	u5525
  8163  04C2  3001               	movlw	1
  8164  04C3  026B               	subwf	___flmul@temp,w
  8165  04C4                     u5525:
  8166  04C4  1803               	skipnc
  8167  04C5  2CCE               	goto	l6136
  8168  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  8169  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  8170  04C8  01E7               	clrf	___flmul@prod
  8171  04C9  01E8               	clrf	___flmul@prod+1
  8172  04CA  01E9               	clrf	___flmul@prod+2
  8173  04CB  01EA               	clrf	___flmul@prod+3
  8174  04CC  01E0               	clrf	___flmul@sign
  8175  04CD  2CDB               	goto	l1455
  8176  04CE                     l6136:
  8177  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  8178  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  8179  04D0  086B               	movf	___flmul@temp,w
  8180  04D1  00E2               	movwf	___flmul@bexp
  8181  04D2  307F               	movlw	127
  8182  04D3  05E9               	andwf	___flmul@prod+2,f
  8183  04D4  3000               	movlw	0
  8184  04D5  01EA               	clrf	___flmul@prod+3
  8185  04D6  1862               	btfsc	___flmul@bexp,0
  8186  04D7  17E9               	bsf	___flmul@prod+2,7
  8187  04D8  1003               	clrc
  8188  04D9  0C62               	rrf	___flmul@bexp,w
  8189  04DA  00EA               	movwf	___flmul@prod+3
  8190  04DB                     l1455:
  8191  04DB  0860               	movf	___flmul@sign,w
  8192  04DC  04EA               	iorwf	___flmul@prod+3,f
  8193  04DD  086A               	movf	___flmul@prod+3,w
  8194  04DE  00D7               	movwf	?___flmul+3
  8195  04DF  0869               	movf	___flmul@prod+2,w
  8196  04E0  00D6               	movwf	?___flmul+2
  8197  04E1  0868               	movf	___flmul@prod+1,w
  8198  04E2  00D5               	movwf	?___flmul+1
  8199  04E3  0867               	movf	___flmul@prod,w
  8200  04E4  00D4               	movwf	?___flmul
  8201  04E5  0008               	return
  8202  04E6                     __end_of___flmul:
  8203  04E6                     __ptext22:	
  8204 ;; *************** function __Umul8_16 *****************
  8205 ;; Defined at:
  8206 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  8207 ;; Parameters:    Size  Location     Type
  8208 ;;  multiplier      1    wreg     unsigned char 
  8209 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8210 ;; Auto vars:     Size  Location     Type
  8211 ;;  multiplier      1    6[BANK0 ] unsigned char 
  8212 ;;  word_mpld       2    4[BANK0 ] unsigned int 
  8213 ;;  product         2    2[BANK0 ] unsigned int 
  8214 ;; Return value:  Size  Location     Type
  8215 ;;                  2    0[BANK0 ] unsigned int 
  8216 ;; Registers used:
  8217 ;;		wreg, status,2, status,0
  8218 ;; Tracked objects:
  8219 ;;		On entry : 300/0
  8220 ;;		On exit  : 300/0
  8221 ;;		Unchanged: 0/0
  8222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8223 ;;      Params:         0       2       0       0       0
  8224 ;;      Locals:         0       5       0       0       0
  8225 ;;      Temps:          0       0       0       0       0
  8226 ;;      Totals:         0       7       0       0       0
  8227 ;;Total ram usage:        7 bytes
  8228 ;; Hardware stack levels used: 1
  8229 ;; Hardware stack levels required when called: 1
  8230 ;; This function calls:
  8231 ;;		Nothing
  8232 ;; This function is called by:
  8233 ;;		___flmul
  8234 ;; This function uses a non-reentrant model
  8235 ;;
  8236                           
  8237                           
  8238                           ;psect for function __Umul8_16
  8239  04E6                     __Umul8_16:
  8240                           
  8241                           ;incstack = 0
  8242                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8243                           ;__Umul8_16@multiplier stored from wreg
  8244  04E6  00A6               	movwf	__Umul8_16@multiplier
  8245  04E7  01A2               	clrf	__Umul8_16@product
  8246  04E8  01A3               	clrf	__Umul8_16@product+1
  8247  04E9  0820               	movf	__Umul8_16@multiplicand,w
  8248  04EA  00A4               	movwf	__Umul8_16@word_mpld
  8249  04EB  01A5               	clrf	__Umul8_16@word_mpld+1
  8250  04EC                     l6006:
  8251  04EC  1C26               	btfss	__Umul8_16@multiplier,0
  8252  04ED  2CF4               	goto	l6010
  8253  04EE  0824               	movf	__Umul8_16@word_mpld,w
  8254  04EF  07A2               	addwf	__Umul8_16@product,f
  8255  04F0  1803               	skipnc
  8256  04F1  0AA3               	incf	__Umul8_16@product+1,f
  8257  04F2  0825               	movf	__Umul8_16@word_mpld+1,w
  8258  04F3  07A3               	addwf	__Umul8_16@product+1,f
  8259  04F4                     l6010:
  8260  04F4  1003               	clrc
  8261  04F5  0DA4               	rlf	__Umul8_16@word_mpld,f
  8262  04F6  0DA5               	rlf	__Umul8_16@word_mpld+1,f
  8263  04F7  1003               	clrc
  8264  04F8  0CA6               	rrf	__Umul8_16@multiplier,f
  8265  04F9  0826               	movf	__Umul8_16@multiplier,w
  8266  04FA  1D03               	btfss	3,2
  8267  04FB  2CEC               	goto	l6006
  8268  04FC  0823               	movf	__Umul8_16@product+1,w
  8269  04FD  00A1               	movwf	?__Umul8_16+1
  8270  04FE  0822               	movf	__Umul8_16@product,w
  8271  04FF  00A0               	movwf	?__Umul8_16
  8272  0500  0008               	return
  8273  0501                     __end_of__Umul8_16:
  8274  0501                     __ptext32:	
  8275 ;; *************** function _Load_Work *****************
  8276 ;; Defined at:
  8277 ;;		line 981 in file "SlaveLiofilizadorVer1.c"
  8278 ;; Parameters:    Size  Location     Type
  8279 ;;		None
  8280 ;; Auto vars:     Size  Location     Type
  8281 ;;		None
  8282 ;; Return value:  Size  Location     Type
  8283 ;;                  1    wreg      void 
  8284 ;; Registers used:
  8285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8286 ;; Tracked objects:
  8287 ;;		On entry : 300/100
  8288 ;;		On exit  : 300/200
  8289 ;;		Unchanged: 0/0
  8290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8291 ;;      Params:         0       0       0       0       0
  8292 ;;      Locals:         0       0       0       0       0
  8293 ;;      Temps:          0       0       4       0       0
  8294 ;;      Totals:         0       0       4       0       0
  8295 ;;Total ram usage:        4 bytes
  8296 ;; Hardware stack levels used: 1
  8297 ;; Hardware stack levels required when called: 3
  8298 ;; This function calls:
  8299 ;;		_EEPROM_Read_Byte
  8300 ;;		_EEPROM_Read_Integer
  8301 ;;		___fldiv
  8302 ;;		___xxtofl
  8303 ;; This function is called by:
  8304 ;;		_main
  8305 ;;		_Decodify_Command
  8306 ;; This function uses a non-reentrant model
  8307 ;;
  8308                           
  8309                           
  8310                           ;psect for function _Load_Work
  8311  0501                     _Load_Work:
  8312  0501                     l6800:	
  8313                           ;incstack = 0
  8314                           ; Regs used in _Load_Work: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8315                           
  8316                           
  8317                           ;SlaveLiofilizadorVer1.c: 984:      SetPoint0 = EEPROM_Read_Integer(0);
  8318  0501  3000               	movlw	0
  8319  0502  25E2  120A  118A   	fcall	_EEPROM_Read_Integer
  8320  0505  265C               	fcall	PL16	;call to abstracted procedure
  8321  0506  120A  158A  25B5  120A  118A  	fcall	___xxtofl
  8322  050B  082D               	movf	?___xxtofl+3,w
  8323  050C  1683               	bsf	3,5	;RP0=1, select bank1
  8324  050D  00E4               	movwf	(_SetPoint0+3)^(0+128)	;volatile
  8325  050E  1283               	bcf	3,5	;RP0=0, select bank0
  8326  050F  082C               	movf	?___xxtofl+2,w
  8327  0510  1683               	bsf	3,5	;RP0=1, select bank1
  8328  0511  00E3               	movwf	(_SetPoint0+2)^(0+128)	;volatile
  8329  0512  1283               	bcf	3,5	;RP0=0, select bank0
  8330  0513  082B               	movf	?___xxtofl+1,w
  8331  0514  1683               	bsf	3,5	;RP0=1, select bank1
  8332  0515  00E2               	movwf	(_SetPoint0+1)^(0+128)	;volatile
  8333  0516  1283               	bcf	3,5	;RP0=0, select bank0
  8334  0517  082A               	movf	?___xxtofl,w
  8335  0518  1683               	bsf	3,5	;RP0=1, select bank1
  8336  0519  00E1               	movwf	_SetPoint0^(0+128)	;volatile
  8337                           
  8338                           ;SlaveLiofilizadorVer1.c: 985:      SetPoint0/=10;
  8339  051A  2692               	fcall	PL62	;call to abstracted procedure
  8340  051B  0864               	movf	(_SetPoint0+3)^(0+128),w	;volatile
  8341  051C  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8342  051D  0863               	movf	(_SetPoint0+2)^(0+128),w	;volatile
  8343  051E  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8344  051F  0862               	movf	(_SetPoint0+1)^(0+128),w	;volatile
  8345  0520  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8346  0521  0861               	movf	_SetPoint0^(0+128),w	;volatile
  8347  0522  00A4               	movwf	___fldiv@b^(0+128)
  8348  0523  120A  158A  2623  120A  118A  	fcall	___fldiv
  8349  0528  0823               	movf	(?___fldiv+3)^(0+128),w
  8350  0529  00E4               	movwf	(_SetPoint0+3)^(0+128)	;volatile
  8351  052A  0822               	movf	(?___fldiv+2)^(0+128),w
  8352  052B  00E3               	movwf	(_SetPoint0+2)^(0+128)	;volatile
  8353  052C  0821               	movf	(?___fldiv+1)^(0+128),w
  8354  052D  00E2               	movwf	(_SetPoint0+1)^(0+128)	;volatile
  8355  052E  0820               	movf	?___fldiv^(0+128),w
  8356  052F  00E1               	movwf	_SetPoint0^(0+128)	;volatile
  8357                           
  8358                           ;SlaveLiofilizadorVer1.c: 986:      TempoON_0 = EEPROM_Read_Byte(2);
  8359  0530  3002               	movlw	2
  8360  0531  25C1  120A  118A   	fcall	_EEPROM_Read_Byte
  8361  0534  1683               	bsf	3,5	;RP0=1, select bank1
  8362  0535  1303               	bcf	3,6	;RP1=0, select bank1
  8363  0536  00EB               	movwf	_TempoON_0^(0+128)
  8364                           
  8365                           ;SlaveLiofilizadorVer1.c: 987:      TempoOFF_0= EEPROM_Read_Byte(3);
  8366  0537  3003               	movlw	3
  8367  0538  25C1  120A  118A   	fcall	_EEPROM_Read_Byte
  8368  053B  1683               	bsf	3,5	;RP0=1, select bank1
  8369  053C  1303               	bcf	3,6	;RP1=0, select bank1
  8370  053D  00EA               	movwf	_TempoOFF_0^(0+128)
  8371                           
  8372                           ;SlaveLiofilizadorVer1.c: 988:      Histerese0= EEPROM_Read_Byte(4);
  8373  053E  3004               	movlw	4
  8374  053F  25C1               	fcall	_EEPROM_Read_Byte
  8375  0540  1303               	bcf	3,6	;RP1=0, select bank0
  8376  0541  00AA               	movwf	___xxtofl@val
  8377  0542  3000               	movlw	0
  8378  0543  01AB               	clrf	___xxtofl@val+1
  8379  0544  01AC               	clrf	___xxtofl@val+2
  8380  0545  01AD               	clrf	___xxtofl@val+3
  8381  0546  120A  158A  25B5  120A  118A  	fcall	___xxtofl
  8382  054B  082D               	movf	?___xxtofl+3,w
  8383  054C  1683               	bsf	3,5	;RP0=1, select bank3
  8384  054D  1703               	bsf	3,6	;RP1=1, select bank3
  8385  054E  009B               	movwf	(_Histerese0+3)^(0+384)
  8386  054F  1283               	bcf	3,5	;RP0=0, select bank0
  8387  0550  1303               	bcf	3,6	;RP1=0, select bank0
  8388  0551  082C               	movf	?___xxtofl+2,w
  8389  0552  1683               	bsf	3,5	;RP0=1, select bank3
  8390  0553  1703               	bsf	3,6	;RP1=1, select bank3
  8391  0554  009A               	movwf	(_Histerese0+2)^(0+384)
  8392  0555  1283               	bcf	3,5	;RP0=0, select bank0
  8393  0556  1303               	bcf	3,6	;RP1=0, select bank0
  8394  0557  082B               	movf	?___xxtofl+1,w
  8395  0558  1683               	bsf	3,5	;RP0=1, select bank3
  8396  0559  1703               	bsf	3,6	;RP1=1, select bank3
  8397  055A  0099               	movwf	(_Histerese0+1)^(0+384)
  8398  055B  1283               	bcf	3,5	;RP0=0, select bank0
  8399  055C  1303               	bcf	3,6	;RP1=0, select bank0
  8400  055D  082A               	movf	?___xxtofl,w
  8401  055E  1683               	bsf	3,5	;RP0=1, select bank3
  8402  055F  1703               	bsf	3,6	;RP1=1, select bank3
  8403  0560  0098               	movwf	_Histerese0^(0+384)
  8404                           
  8405                           ;SlaveLiofilizadorVer1.c: 989:      Status0 = EEPROM_Read_Integer(5);
  8406  0561  3005               	movlw	5
  8407  0562  25E2  120A  118A   	fcall	_EEPROM_Read_Integer
  8408  0565  0824               	movf	?_EEPROM_Read_Integer+1,w
  8409  0566  1683               	bsf	3,5	;RP0=1, select bank3
  8410  0567  1703               	bsf	3,6	;RP1=1, select bank3
  8411  0568  00A5               	movwf	(_Status0+1)^(0+384)
  8412  0569  1283               	bcf	3,5	;RP0=0, select bank0
  8413  056A  1303               	bcf	3,6	;RP1=0, select bank0
  8414  056B  0823               	movf	?_EEPROM_Read_Integer,w
  8415  056C  1683               	bsf	3,5	;RP0=1, select bank3
  8416  056D  1703               	bsf	3,6	;RP1=1, select bank3
  8417  056E  00A4               	movwf	_Status0^(0+384)
  8418                           
  8419                           ;SlaveLiofilizadorVer1.c: 991:      SetPoint1 = EEPROM_Read_Integer(7);
  8420  056F  3007               	movlw	7
  8421  0570  25E2  120A  118A   	fcall	_EEPROM_Read_Integer
  8422  0573  265C               	fcall	PL16	;call to abstracted procedure
  8423  0574  120A  158A  25B5  120A  118A  	fcall	___xxtofl
  8424  0579  082D               	movf	?___xxtofl+3,w
  8425  057A  1683               	bsf	3,5	;RP0=1, select bank1
  8426  057B  00E0               	movwf	(_SetPoint1+3)^(0+128)	;volatile
  8427  057C  1283               	bcf	3,5	;RP0=0, select bank0
  8428  057D  082C               	movf	?___xxtofl+2,w
  8429  057E  1683               	bsf	3,5	;RP0=1, select bank1
  8430  057F  00DF               	movwf	(_SetPoint1+2)^(0+128)	;volatile
  8431  0580  1283               	bcf	3,5	;RP0=0, select bank0
  8432  0581  082B               	movf	?___xxtofl+1,w
  8433  0582  1683               	bsf	3,5	;RP0=1, select bank1
  8434  0583  00DE               	movwf	(_SetPoint1+1)^(0+128)	;volatile
  8435  0584  1283               	bcf	3,5	;RP0=0, select bank0
  8436  0585  082A               	movf	?___xxtofl,w
  8437  0586  1683               	bsf	3,5	;RP0=1, select bank1
  8438  0587  00DD               	movwf	_SetPoint1^(0+128)	;volatile
  8439                           
  8440                           ;SlaveLiofilizadorVer1.c: 992:      SetPoint1/=10;
  8441  0588  2692               	fcall	PL62	;call to abstracted procedure
  8442  0589  0860               	movf	(_SetPoint1+3)^(0+128),w	;volatile
  8443  058A  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8444  058B  085F               	movf	(_SetPoint1+2)^(0+128),w	;volatile
  8445  058C  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8446  058D  085E               	movf	(_SetPoint1+1)^(0+128),w	;volatile
  8447  058E  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8448  058F  085D               	movf	_SetPoint1^(0+128),w	;volatile
  8449  0590  00A4               	movwf	___fldiv@b^(0+128)
  8450  0591  120A  158A  2623  120A  118A  	fcall	___fldiv
  8451  0596  0823               	movf	(?___fldiv+3)^(0+128),w
  8452  0597  00E0               	movwf	(_SetPoint1+3)^(0+128)	;volatile
  8453  0598  0822               	movf	(?___fldiv+2)^(0+128),w
  8454  0599  00DF               	movwf	(_SetPoint1+2)^(0+128)	;volatile
  8455  059A  0821               	movf	(?___fldiv+1)^(0+128),w
  8456  059B  00DE               	movwf	(_SetPoint1+1)^(0+128)	;volatile
  8457  059C  0820               	movf	?___fldiv^(0+128),w
  8458  059D  00DD               	movwf	_SetPoint1^(0+128)	;volatile
  8459                           
  8460                           ;SlaveLiofilizadorVer1.c: 993:      TempoON_1 = EEPROM_Read_Byte(9);
  8461  059E  3009               	movlw	9
  8462  059F  25C1  120A  118A   	fcall	_EEPROM_Read_Byte
  8463  05A2  1683               	bsf	3,5	;RP0=1, select bank1
  8464  05A3  1303               	bcf	3,6	;RP1=0, select bank1
  8465  05A4  00E8               	movwf	_TempoON_1^(0+128)
  8466                           
  8467                           ;SlaveLiofilizadorVer1.c: 994:      TempoOFF_1= EEPROM_Read_Byte(10);
  8468  05A5  300A               	movlw	10
  8469  05A6  25C1  120A  118A   	fcall	_EEPROM_Read_Byte
  8470  05A9  1683               	bsf	3,5	;RP0=1, select bank1
  8471  05AA  1303               	bcf	3,6	;RP1=0, select bank1
  8472  05AB  00E7               	movwf	_TempoOFF_1^(0+128)
  8473                           
  8474                           ;SlaveLiofilizadorVer1.c: 995:      Histerese1= EEPROM_Read_Byte(11);
  8475  05AC  300B               	movlw	11
  8476  05AD  25C1  120A  118A   	fcall	_EEPROM_Read_Byte
  8477  05B0  00F3               	movwf	_Histerese1
  8478                           
  8479                           ;SlaveLiofilizadorVer1.c: 996:      Status1 = EEPROM_Read_Integer(12);
  8480  05B1  300C               	movlw	12
  8481  05B2  25E2  120A  118A   	fcall	_EEPROM_Read_Integer
  8482  05B5  0824               	movf	?_EEPROM_Read_Integer+1,w
  8483  05B6  1683               	bsf	3,5	;RP0=1, select bank3
  8484  05B7  1703               	bsf	3,6	;RP1=1, select bank3
  8485  05B8  00A3               	movwf	(_Status1+1)^(0+384)
  8486  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  8487  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  8488  05BB  0823               	movf	?_EEPROM_Read_Integer,w
  8489  05BC  1683               	bsf	3,5	;RP0=1, select bank3
  8490  05BD  1703               	bsf	3,6	;RP1=1, select bank3
  8491  05BE  00A2               	movwf	_Status1^(0+384)
  8492                           
  8493                           ;SlaveLiofilizadorVer1.c: 998:      statuspower.bits=EEPROM_Read_Byte(14);
  8494  05BF  300E               	movlw	14
  8495  05C0  2DC1               	ljmp	_EEPROM_Read_Byte
  8496  05C1                     __end_of_Load_Work:
  8497  05C1                     __ptext39:	
  8498 ;; *************** function _EEPROM_Read_Byte *****************
  8499 ;; Defined at:
  8500 ;;		line 52 in file "eeprom.c"
  8501 ;; Parameters:    Size  Location     Type
  8502 ;;  addr            1    wreg     unsigned char 
  8503 ;; Auto vars:     Size  Location     Type
  8504 ;;  addr            1    2[BANK0 ] unsigned char 
  8505 ;; Return value:  Size  Location     Type
  8506 ;;                  1    wreg      unsigned char 
  8507 ;; Registers used:
  8508 ;;		wreg
  8509 ;; Tracked objects:
  8510 ;;		On entry : 0/300
  8511 ;;		On exit  : 300/200
  8512 ;;		Unchanged: 0/0
  8513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8514 ;;      Params:         0       0       0       0       0
  8515 ;;      Locals:         0       1       0       0       0
  8516 ;;      Temps:          0       2       0       0       0
  8517 ;;      Totals:         0       3       0       0       0
  8518 ;;Total ram usage:        3 bytes
  8519 ;; Hardware stack levels used: 1
  8520 ;; Hardware stack levels required when called: 1
  8521 ;; This function calls:
  8522 ;;		Nothing
  8523 ;; This function is called by:
  8524 ;;		_Decodify_Command
  8525 ;;		_Load_Work
  8526 ;;		_EEPROM_Read_Integer
  8527 ;;		_EEPROM_Read_String
  8528 ;; This function uses a non-reentrant model
  8529 ;;
  8530                           
  8531                           
  8532                           ;psect for function _EEPROM_Read_Byte
  8533  05C1                     _EEPROM_Read_Byte:
  8534                           
  8535                           ;incstack = 0
  8536                           ; Regs used in _EEPROM_Read_Byte: [wreg]
  8537                           ;EEPROM_Read_Byte@addr stored from wreg
  8538  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  8539  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  8540  05C3  00A2               	movwf	EEPROM_Read_Byte@addr
  8541                           
  8542                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
  8543  05C4  3014               	movlw	20
  8544  05C5  1683               	bsf	3,5	;RP0=1, select bank3
  8545  05C6  1703               	bsf	3,6	;RP1=1, select bank3
  8546  05C7  00AC               	movwf	_Delay_Led_Memory^(0+384)	;volatile
  8547  05C8  01AD               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
  8548  05C9                     l632:	
  8549                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
  8550                           
  8551  05C9  188C               	btfsc	12,1	;volsfr
  8552  05CA  2DC9               	goto	l632
  8553                           
  8554                           ;eeprom.c: 57:    EEADR=addr;
  8555  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  8556  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  8557  05CD  0822               	movf	EEPROM_Read_Byte@addr,w
  8558  05CE  1703               	bsf	3,6	;RP1=1, select bank2
  8559  05CF  008D               	movwf	13	;volatile
  8560                           
  8561                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
  8562  05D0  1683               	bsf	3,5	;RP0=1, select bank3
  8563  05D1  138C               	bcf	12,7	;volsfr
  8564                           
  8565                           ;eeprom.c: 59:    EECON1bits.RD=1;
  8566  05D2  140C               	bsf	12,0	;volsfr
  8567                           
  8568                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
  8569  05D3  304E               	movlw	78
  8570  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  8571  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  8572  05D6  00A1               	movwf	??_EEPROM_Read_Byte+1
  8573  05D7  30EA               	movlw	234
  8574  05D8  00A0               	movwf	??_EEPROM_Read_Byte
  8575  05D9                     u6677:
  8576  05D9  0BA0               	decfsz	??_EEPROM_Read_Byte,f
  8577  05DA  2DD9               	goto	u6677
  8578  05DB  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
  8579  05DC  2DD9               	goto	u6677
  8580  05DD  0000               	nop
  8581                           
  8582                           ;eeprom.c: 61:    return EEDATA;
  8583  05DE  1283               	bcf	3,5	;RP0=0, select bank2
  8584  05DF  1703               	bsf	3,6	;RP1=1, select bank2
  8585  05E0  080C               	movf	12,w	;volatile
  8586  05E1  0008               	return
  8587  05E2                     __end_of_EEPROM_Read_Byte:
  8588  05E2                     __ptext34:	
  8589 ;; *************** function _EEPROM_Read_Integer *****************
  8590 ;; Defined at:
  8591 ;;		line 81 in file "eeprom.c"
  8592 ;; Parameters:    Size  Location     Type
  8593 ;;  addr            1    wreg     unsigned char 
  8594 ;; Auto vars:     Size  Location     Type
  8595 ;;  addr            1    5[BANK0 ] unsigned char 
  8596 ;;  result          2    7[BANK0 ] unsigned int 
  8597 ;;  i               1    9[BANK0 ] unsigned char 
  8598 ;;  ptr             1    6[BANK0 ] PTR unsigned char 
  8599 ;;		 -> EEPROM_Read_Integer@result(2), 
  8600 ;; Return value:  Size  Location     Type
  8601 ;;                  2    3[BANK0 ] unsigned int 
  8602 ;; Registers used:
  8603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8604 ;; Tracked objects:
  8605 ;;		On entry : 0/0
  8606 ;;		On exit  : B00/0
  8607 ;;		Unchanged: 0/0
  8608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8609 ;;      Params:         0       2       0       0       0
  8610 ;;      Locals:         0       5       0       0       0
  8611 ;;      Temps:          0       0       0       0       0
  8612 ;;      Totals:         0       7       0       0       0
  8613 ;;Total ram usage:        7 bytes
  8614 ;; Hardware stack levels used: 1
  8615 ;; Hardware stack levels required when called: 2
  8616 ;; This function calls:
  8617 ;;		_EEPROM_Read_Byte
  8618 ;; This function is called by:
  8619 ;;		_main
  8620 ;;		_Decodify_Command
  8621 ;;		_Load_Work
  8622 ;; This function uses a non-reentrant model
  8623 ;;
  8624                           
  8625                           
  8626                           ;psect for function _EEPROM_Read_Integer
  8627  05E2                     _EEPROM_Read_Integer:
  8628                           
  8629                           ;incstack = 0
  8630                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8631                           ;EEPROM_Read_Integer@addr stored from wreg
  8632  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  8633  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  8634  05E4  00A5               	movwf	EEPROM_Read_Integer@addr
  8635                           
  8636                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
  8637  05E5  3027               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
  8638  05E6  00A6               	movwf	EEPROM_Read_Integer@ptr
  8639                           
  8640                           ;eeprom.c: 87:       for (i=0;i<2;i++)
  8641  05E7  01A9               	clrf	EEPROM_Read_Integer@i
  8642  05E8                     l6386:
  8643                           
  8644                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
  8645  05E8  0826               	movf	EEPROM_Read_Integer@ptr,w
  8646  05E9  0084               	movwf	4
  8647  05EA  0825               	movf	EEPROM_Read_Integer@addr,w
  8648  05EB  25C1  120A  118A   	fcall	_EEPROM_Read_Byte
  8649  05EE  1383               	bcf	3,7	;select IRP bank0
  8650  05EF  0080               	movwf	0
  8651  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  8652  05F1  3002               	movlw	2
  8653  05F2  0AA5               	incf	EEPROM_Read_Integer@addr,f
  8654  05F3  0AA6               	incf	EEPROM_Read_Integer@ptr,f
  8655  05F4  0AA9               	incf	EEPROM_Read_Integer@i,f
  8656  05F5  0229               	subwf	EEPROM_Read_Integer@i,w
  8657  05F6  1C03               	skipc
  8658  05F7  2DE8               	goto	l6386
  8659                           
  8660                           ;eeprom.c: 89:       return result;
  8661  05F8  0828               	movf	EEPROM_Read_Integer@result+1,w
  8662  05F9  00A4               	movwf	?_EEPROM_Read_Integer+1
  8663  05FA  0827               	movf	EEPROM_Read_Integer@result,w
  8664  05FB  00A3               	movwf	?_EEPROM_Read_Integer
  8665  05FC  0008               	return
  8666  05FD                     __end_of_EEPROM_Read_Integer:
  8667  05FD                     __ptext44:	
  8668 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
  8669 ;; Defined at:
  8670 ;;		line 346 in file "EEPROM_24C1025.c"
  8671 ;; Parameters:    Size  Location     Type
  8672 ;;  chip_add        1    wreg     unsigned char 
  8673 ;;  mem_add         4   21[BANK0 ] unsigned long 
  8674 ;; Auto vars:     Size  Location     Type
  8675 ;;  chip_add        1   25[BANK0 ] unsigned char 
  8676 ;;  data            1   26[BANK0 ] unsigned char 
  8677 ;; Return value:  Size  Location     Type
  8678 ;;                  1    wreg      unsigned char 
  8679 ;; Registers used:
  8680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8681 ;; Tracked objects:
  8682 ;;		On entry : 300/300
  8683 ;;		On exit  : 300/0
  8684 ;;		Unchanged: 0/0
  8685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8686 ;;      Params:         0       4       0       0       0
  8687 ;;      Locals:         0       2       0       0       0
  8688 ;;      Temps:          0       0       0       0       0
  8689 ;;      Totals:         0       6       0       0       0
  8690 ;;Total ram usage:        6 bytes
  8691 ;; Hardware stack levels used: 1
  8692 ;; Hardware stack levels required when called: 4
  8693 ;; This function calls:
  8694 ;;		_EEPROM_24C1025_Read_Buffer
  8695 ;; This function is called by:
  8696 ;;		_Decodify_Command
  8697 ;; This function uses a non-reentrant model
  8698 ;;
  8699                           
  8700                           
  8701                           ;psect for function _EEPROM_24C1025_Read_Byte
  8702  05FD                     _EEPROM_24C1025_Read_Byte:
  8703                           
  8704                           ;incstack = 0
  8705                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  8706                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
  8707  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  8708  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  8709  05FF  00B9               	movwf	EEPROM_24C1025_Read_Byte@chip_add
  8710                           
  8711                           ;EEPROM_24C1025.c: 347:     char data;;EEPROM_24C1025.c: 348:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
  8712  0600  0838               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
  8713  0601  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
  8714  0602  0837               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
  8715  0603  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
  8716  0604  0836               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
  8717  0605  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
  8718  0606  0835               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
  8719  0607  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
  8720  0608  303A               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
  8721  0609  01AE               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
  8722  060A  0AAE               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
  8723  060B  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
  8724  060C  0839               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
  8725  060D  160A  118A  24A9   	fcall	_EEPROM_24C1025_Read_Buffer
  8726                           
  8727                           ;EEPROM_24C1025.c: 349:     return data;
  8728  0610  1283               	bcf	3,5	;RP0=0, select bank0
  8729  0611  1303               	bcf	3,6	;RP1=0, select bank0
  8730  0612  083A               	movf	EEPROM_24C1025_Read_Byte@data,w
  8731  0613  0008               	return
  8732  0614                     __end_of_EEPROM_24C1025_Read_Byte:
  8733  0614                     __ptext41:	
  8734 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
  8735 ;; Defined at:
  8736 ;;		line 341 in file "EEPROM_24C1025.c"
  8737 ;; Parameters:    Size  Location     Type
  8738 ;;  chip_add        1    wreg     unsigned char 
  8739 ;;  mem_add         4   23[BANK0 ] unsigned long 
  8740 ;;  data            1   27[BANK0 ] unsigned char 
  8741 ;; Auto vars:     Size  Location     Type
  8742 ;;  chip_add        1   28[BANK0 ] unsigned char 
  8743 ;; Return value:  Size  Location     Type
  8744 ;;                  1    wreg      void 
  8745 ;; Registers used:
  8746 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8747 ;; Tracked objects:
  8748 ;;		On entry : 300/300
  8749 ;;		On exit  : 0/0
  8750 ;;		Unchanged: 0/0
  8751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8752 ;;      Params:         0       5       0       0       0
  8753 ;;      Locals:         0       1       0       0       0
  8754 ;;      Temps:          0       0       0       0       0
  8755 ;;      Totals:         0       6       0       0       0
  8756 ;;Total ram usage:        6 bytes
  8757 ;; Hardware stack levels used: 1
  8758 ;; Hardware stack levels required when called: 4
  8759 ;; This function calls:
  8760 ;;		_EEPROM_24C1025_Write_Buffer
  8761 ;; This function is called by:
  8762 ;;		_Decodify_Command
  8763 ;; This function uses a non-reentrant model
  8764 ;;
  8765                           
  8766                           
  8767                           ;psect for function _EEPROM_24C1025_Write_Byte
  8768  0614                     _EEPROM_24C1025_Write_Byte:
  8769                           
  8770                           ;incstack = 0
  8771                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  8772                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
  8773  0614  1283               	bcf	3,5	;RP0=0, select bank0
  8774  0615  1303               	bcf	3,6	;RP1=0, select bank0
  8775  0616  00BC               	movwf	EEPROM_24C1025_Write_Byte@chip_add
  8776                           
  8777                           ;EEPROM_24C1025.c: 342:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
  8778  0617  083A               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
  8779  0618  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  8780  0619  0839               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
  8781  061A  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  8782  061B  0838               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
  8783  061C  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  8784  061D  0837               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
  8785  061E  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  8786  061F  303B               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
  8787  0620  01AE               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
  8788  0621  0AAE               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
  8789  0622  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  8790  0623  01B0               	clrf	EEPROM_24C1025_Write_Buffer@data+1
  8791  0624  083C               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
  8792  0625  160A  118A  2E87   	ljmp	_EEPROM_24C1025_Write_Buffer
  8793  0628                     __end_of_EEPROM_24C1025_Write_Byte:
  8794  0628                     PL2:
  8795  0628  0821               	movf	?__Umul8_16+1,w
  8796  0629  00EC               	movwf	___flmul@temp+1
  8797  062A  0820               	movf	?__Umul8_16,w
  8798  062B  00EB               	movwf	___flmul@temp
  8799  062C  00DC               	movwf	??___flmul
  8800  062D  086C               	movf	___flmul@temp+1,w
  8801  062E  00DD               	movwf	??___flmul+1
  8802  062F  01DE               	clrf	??___flmul+2
  8803  0630  01DF               	clrf	??___flmul+3
  8804  0631  085C               	movf	??___flmul,w
  8805  0632  07E3               	addwf	___flmul@grs,f
  8806  0633  085D               	movf	??___flmul+1,w
  8807  0634  1103               	clrz
  8808  0635  1803               	skipnc
  8809  0636  3E01               	addlw	1
  8810  0637  1D03               	btfss	3,2
  8811  0638  07E4               	addwf	___flmul@grs+1,f
  8812  0639  085E               	movf	??___flmul+2,w
  8813  063A  1103               	clrz
  8814  063B  1803               	skipnc
  8815  063C  3E01               	addlw	1
  8816  063D  1D03               	btfss	3,2
  8817  063E  07E5               	addwf	___flmul@grs+2,f
  8818  063F  085F               	movf	??___flmul+3,w
  8819  0640  1103               	clrz
  8820  0641  0008               	return
  8821  0642                     __end_ofPL2:
  8822  0642                     PL8:
  8823  0642  00EC               	movwf	___flmul@temp+1
  8824  0643  0820               	movf	?__Umul8_16,w
  8825  0644  00EB               	movwf	___flmul@temp
  8826  0645  00DC               	movwf	??___flmul
  8827  0646  086C               	movf	___flmul@temp+1,w
  8828  0647  00DD               	movwf	??___flmul+1
  8829  0648  01DE               	clrf	??___flmul+2
  8830  0649  01DF               	clrf	??___flmul+3
  8831  064A  0008               	return
  8832  064B                     __end_ofPL8:
  8833  064B                     PL14:
  8834  064B  085C               	movf	??___flmul,w
  8835  064C  07E7               	addwf	___flmul@prod,f
  8836  064D  085D               	movf	??___flmul+1,w
  8837  064E  1103               	clrz
  8838  064F  1803               	skipnc
  8839  0650  3E01               	addlw	1
  8840  0651  1D03               	btfss	3,2
  8841  0652  07E8               	addwf	___flmul@prod+1,f
  8842  0653  085E               	movf	??___flmul+2,w
  8843  0654  1103               	clrz
  8844  0655  1803               	skipnc
  8845  0656  3E01               	addlw	1
  8846  0657  1D03               	btfss	3,2
  8847  0658  07E9               	addwf	___flmul@prod+2,f
  8848  0659  085F               	movf	??___flmul+3,w
  8849  065A  1103               	clrz
  8850  065B  0008               	return
  8851  065C                     __end_ofPL14:
  8852  065C                     PL16:
  8853  065C  0823               	movf	?_EEPROM_Read_Integer,w
  8854  065D  1683               	bsf	3,5	;RP0=1, select bank1
  8855  065E  00B9               	movwf	??_Load_Work^(0+128)
  8856  065F  1283               	bcf	3,5	;RP0=0, select bank0
  8857  0660  0824               	movf	?_EEPROM_Read_Integer+1,w
  8858  0661  1683               	bsf	3,5	;RP0=1, select bank1
  8859  0662  00BA               	movwf	(??_Load_Work^(0+128)+1)
  8860  0663  01BB               	clrf	(??_Load_Work^(0+128)+2)
  8861  0664  01BC               	clrf	(??_Load_Work^(0+128)+3)
  8862  0665  083C               	movf	(??_Load_Work+3)^(0+128),w
  8863  0666  1283               	bcf	3,5	;RP0=0, select bank0
  8864  0667  00AD               	movwf	___xxtofl@val+3
  8865  0668  1683               	bsf	3,5	;RP0=1, select bank1
  8866  0669  083B               	movf	(??_Load_Work+2)^(0+128),w
  8867  066A  1283               	bcf	3,5	;RP0=0, select bank0
  8868  066B  00AC               	movwf	___xxtofl@val+2
  8869  066C  1683               	bsf	3,5	;RP0=1, select bank1
  8870  066D  083A               	movf	(??_Load_Work+1)^(0+128),w
  8871  066E  1283               	bcf	3,5	;RP0=0, select bank0
  8872  066F  00AB               	movwf	___xxtofl@val+1
  8873  0670  1683               	bsf	3,5	;RP0=1, select bank1
  8874  0671  0839               	movf	??_Load_Work^(0+128),w
  8875  0672  1283               	bcf	3,5	;RP0=0, select bank0
  8876  0673  00AA               	movwf	___xxtofl@val
  8877  0674  3400               	retlw	0
  8878  0675                     __end_ofPL16:
  8879  0675                     PL20:
  8880  0675  0821               	movf	?__Umul8_16+1,w
  8881  0676  00EC               	movwf	___flmul@temp+1
  8882  0677  0820               	movf	?__Umul8_16,w
  8883  0678  00EB               	movwf	___flmul@temp
  8884  0679  07E3               	addwf	___flmul@grs,f
  8885  067A  3001               	movlw	1
  8886  067B  1803               	skipnc
  8887  067C  07E4               	addwf	___flmul@grs+1,f
  8888  067D  1803               	skipnc
  8889  067E  07E5               	addwf	___flmul@grs+2,f
  8890  067F  1803               	skipnc
  8891  0680  07E6               	addwf	___flmul@grs+3,f
  8892  0681  086C               	movf	___flmul@temp+1,w
  8893  0682  07E7               	addwf	___flmul@prod,f
  8894  0683  3401               	retlw	1
  8895  0684                     __end_ofPL20:
  8896  0684                     PL26:
  8897  0684  1803               	skipnc
  8898  0685  07E8               	addwf	___flmul@prod+1,f
  8899  0686  1803               	skipnc
  8900  0687  07E9               	addwf	___flmul@prod+2,f
  8901  0688  1803               	skipnc
  8902  0689  07EA               	addwf	___flmul@prod+3,f
  8903  068A  0865               	movf	___flmul@grs+2,w
  8904  068B  00E6               	movwf	___flmul@grs+3
  8905  068C  0864               	movf	___flmul@grs+1,w
  8906  068D  00E5               	movwf	___flmul@grs+2
  8907  068E  0863               	movf	___flmul@grs,w
  8908  068F  00E4               	movwf	___flmul@grs+1
  8909  0690  01E3               	clrf	___flmul@grs
  8910  0691  0008               	return
  8911  0692                     __end_ofPL26:
  8912  0692                     PL62:
  8913  0692  3041               	movlw	65
  8914  0693  00A3               	movwf	(___fldiv@a+3)^(0+128)
  8915  0694  3020               	movlw	32
  8916  0695  00A2               	movwf	(___fldiv@a+2)^(0+128)
  8917  0696  01A1               	clrf	(___fldiv@a+1)^(0+128)
  8918  0697  01A0               	clrf	___fldiv@a^(0+128)
  8919  0698  0008               	return
  8920  0699                     __end_ofPL62:
  8921  0699                     PL64:
  8922  0699  1803               	skipnc
  8923  069A  3E01               	addlw	1
  8924  069B  1D03               	btfss	3,2
  8925  069C  07EA               	addwf	___flmul@prod+3,f
  8926  069D  0856               	movf	___flmul@b+2,w
  8927  069E  00A0               	movwf	__Umul8_16@multiplicand
  8928  069F  0008               	return
  8929  06A0                     __end_ofPL64:
  8930  06A0                     __ptext36:	
  8931 ;; *************** function _EEPROM_Write_Integer *****************
  8932 ;; Defined at:
  8933 ;;		line 68 in file "eeprom.c"
  8934 ;; Parameters:    Size  Location     Type
  8935 ;;  addr            1    wreg     unsigned char 
  8936 ;;  dado            2    5[BANK0 ] unsigned int 
  8937 ;; Auto vars:     Size  Location     Type
  8938 ;;  addr            1    9[BANK0 ] unsigned char 
  8939 ;;  i               1   11[BANK0 ] unsigned char 
  8940 ;;  ptr             1   10[BANK0 ] PTR unsigned char 
  8941 ;;		 -> EEPROM_Write_Integer@dado(2), 
  8942 ;;  addr_memo       1    0        unsigned char 
  8943 ;; Return value:  Size  Location     Type
  8944 ;;                  1    wreg      void 
  8945 ;; Registers used:
  8946 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8947 ;; Tracked objects:
  8948 ;;		On entry : 200/0
  8949 ;;		On exit  : 0/0
  8950 ;;		Unchanged: 0/0
  8951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8952 ;;      Params:         0       2       0       0       0
  8953 ;;      Locals:         0       3       0       0       0
  8954 ;;      Temps:          0       2       0       0       0
  8955 ;;      Totals:         0       7       0       0       0
  8956 ;;Total ram usage:        7 bytes
  8957 ;; Hardware stack levels used: 1
  8958 ;; Hardware stack levels required when called: 2
  8959 ;; This function calls:
  8960 ;;		_EEPROM_Write_Byte
  8961 ;; This function is called by:
  8962 ;;		_main
  8963 ;;		_Decodify_Command
  8964 ;; This function uses a non-reentrant model
  8965 ;;
  8966                           
  8967                           
  8968                           ;psect for function _EEPROM_Write_Integer
  8969  06A0                     _EEPROM_Write_Integer:
  8970                           
  8971                           ;incstack = 0
  8972                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8973                           ;EEPROM_Write_Integer@addr stored from wreg
  8974  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  8975  06A1  00A9               	movwf	EEPROM_Write_Integer@addr
  8976                           
  8977                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
  8978  06A2  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
  8979  06A3  00AA               	movwf	EEPROM_Write_Integer@ptr
  8980                           
  8981                           ;eeprom.c: 75:       for (i=0;i<2;i++)
  8982  06A4  01AB               	clrf	EEPROM_Write_Integer@i
  8983  06A5                     l5154:
  8984                           
  8985                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
  8986  06A5  082A               	movf	EEPROM_Write_Integer@ptr,w
  8987  06A6  0084               	movwf	4
  8988  06A7  1383               	bcf	3,7	;select IRP bank0
  8989  06A8  0800               	movf	0,w
  8990  06A9  00A0               	movwf	EEPROM_Write_Byte@dado
  8991  06AA  0829               	movf	EEPROM_Write_Integer@addr,w
  8992  06AB  26DB  120A  118A   	fcall	_EEPROM_Write_Byte
  8993  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  8994  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  8995  06B0  3002               	movlw	2
  8996  06B1  0AAA               	incf	EEPROM_Write_Integer@ptr,f
  8997  06B2  0AA9               	incf	EEPROM_Write_Integer@addr,f
  8998  06B3  0AAB               	incf	EEPROM_Write_Integer@i,f
  8999  06B4  022B               	subwf	EEPROM_Write_Integer@i,w
  9000  06B5  1C03               	skipc
  9001  06B6  2EA5               	goto	l5154
  9002                           
  9003                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
  9004  06B7  304E               	movlw	78
  9005  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  9006  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  9007  06BA  00A8               	movwf	??_EEPROM_Write_Integer+1
  9008  06BB  30EA               	movlw	234
  9009  06BC  00A7               	movwf	??_EEPROM_Write_Integer
  9010  06BD                     u6657:
  9011  06BD  0BA7               	decfsz	??_EEPROM_Write_Integer,f
  9012  06BE  2EBD               	goto	u6657
  9013  06BF  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
  9014  06C0  2EBD               	goto	u6657
  9015  06C1  0000               	nop
  9016  06C2  0008               	return
  9017  06C3                     __end_of_EEPROM_Write_Integer:
  9018  06C3                     __ptext35:	
  9019 ;; *************** function _EEPROM_Write_String *****************
  9020 ;; Defined at:
  9021 ;;		line 97 in file "eeprom.c"
  9022 ;; Parameters:    Size  Location     Type
  9023 ;;  addr            1    wreg     unsigned char 
  9024 ;;  dado            1    5[BANK0 ] PTR unsigned char 
  9025 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  9026 ;; Auto vars:     Size  Location     Type
  9027 ;;  addr            1    6[BANK0 ] unsigned char 
  9028 ;; Return value:  Size  Location     Type
  9029 ;;                  1    wreg      void 
  9030 ;; Registers used:
  9031 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9032 ;; Tracked objects:
  9033 ;;		On entry : 300/300
  9034 ;;		On exit  : 0/0
  9035 ;;		Unchanged: 0/0
  9036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9037 ;;      Params:         0       1       0       0       0
  9038 ;;      Locals:         0       1       0       0       0
  9039 ;;      Temps:          0       0       0       0       0
  9040 ;;      Totals:         0       2       0       0       0
  9041 ;;Total ram usage:        2 bytes
  9042 ;; Hardware stack levels used: 1
  9043 ;; Hardware stack levels required when called: 2
  9044 ;; This function calls:
  9045 ;;		_EEPROM_Write_Byte
  9046 ;; This function is called by:
  9047 ;;		_Decodify_Command
  9048 ;; This function uses a non-reentrant model
  9049 ;;
  9050                           
  9051                           
  9052                           ;psect for function _EEPROM_Write_String
  9053  06C3                     _EEPROM_Write_String:
  9054                           
  9055                           ;incstack = 0
  9056                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9057                           ;EEPROM_Write_String@addr stored from wreg
  9058  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  9059  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  9060  06C5  00A6               	movwf	EEPROM_Write_String@addr
  9061  06C6                     l6840:	
  9062                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
  9063                           
  9064                           
  9065                           ;eeprom.c: 99:     while(*dado)
  9066  06C6  0825               	movf	EEPROM_Write_String@dado,w
  9067  06C7  0084               	movwf	4
  9068  06C8  1783               	bsf	3,7	;select IRP bank2
  9069  06C9  0800               	movf	0,w
  9070  06CA  1903               	btfsc	3,2
  9071  06CB  2ED7               	goto	l6842
  9072                           
  9073                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
  9074  06CC  2716  120A  118A   	fcall	PL80	;call to abstracted procedure
  9075  06CF  26DB  120A  118A   	fcall	_EEPROM_Write_Byte
  9076                           
  9077                           ;eeprom.c: 102:      addr++;
  9078  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  9079  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  9080  06D4  0AA6               	incf	EEPROM_Write_String@addr,f
  9081                           
  9082                           ;eeprom.c: 103:      dado++;
  9083  06D5  0AA5               	incf	EEPROM_Write_String@dado,f
  9084  06D6  2EC6               	goto	l6840
  9085  06D7                     l6842:
  9086                           
  9087                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
  9088  06D7  2716  120A  118A   	fcall	PL80	;call to abstracted procedure
  9089  06DA  2EDB               	ljmp	_EEPROM_Write_Byte
  9090  06DB                     __end_of_EEPROM_Write_String:
  9091  06DB                     __ptext37:	
  9092 ;; *************** function _EEPROM_Write_Byte *****************
  9093 ;; Defined at:
  9094 ;;		line 21 in file "eeprom.c"
  9095 ;; Parameters:    Size  Location     Type
  9096 ;;  addr            1    wreg     unsigned char 
  9097 ;;  dado            1    0[BANK0 ] unsigned char 
  9098 ;; Auto vars:     Size  Location     Type
  9099 ;;  addr            1    3[BANK0 ] unsigned char 
  9100 ;;  last_GIE        1    4[BANK0 ] unsigned char 
  9101 ;; Return value:  Size  Location     Type
  9102 ;;                  1    wreg      void 
  9103 ;; Registers used:
  9104 ;;		wreg, status,2, status,0
  9105 ;; Tracked objects:
  9106 ;;		On entry : 0/300
  9107 ;;		On exit  : 0/0
  9108 ;;		Unchanged: 0/0
  9109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9110 ;;      Params:         0       1       0       0       0
  9111 ;;      Locals:         0       2       0       0       0
  9112 ;;      Temps:          0       2       0       0       0
  9113 ;;      Totals:         0       5       0       0       0
  9114 ;;Total ram usage:        5 bytes
  9115 ;; Hardware stack levels used: 1
  9116 ;; Hardware stack levels required when called: 1
  9117 ;; This function calls:
  9118 ;;		Nothing
  9119 ;; This function is called by:
  9120 ;;		_Decodify_Command
  9121 ;;		_EEPROM_Write_Integer
  9122 ;;		_EEPROM_Write_String
  9123 ;; This function uses a non-reentrant model
  9124 ;;
  9125                           
  9126                           
  9127                           ;psect for function _EEPROM_Write_Byte
  9128  06DB                     _EEPROM_Write_Byte:
  9129                           
  9130                           ;incstack = 0
  9131                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
  9132                           ;EEPROM_Write_Byte@addr stored from wreg
  9133  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  9134  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  9135  06DD  00A3               	movwf	EEPROM_Write_Byte@addr
  9136                           
  9137                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
  9138  06DE  3014               	movlw	20
  9139  06DF  1683               	bsf	3,5	;RP0=1, select bank3
  9140  06E0  1703               	bsf	3,6	;RP1=1, select bank3
  9141  06E1  00AC               	movwf	_Delay_Led_Memory^(0+384)	;volatile
  9142  06E2  01AD               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
  9143  06E3                     l622:	
  9144                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
  9145                           
  9146  06E3  188C               	btfsc	12,1	;volsfr
  9147  06E4  2EE3               	goto	l622
  9148                           
  9149                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
  9150  06E5  1F8B               	btfss	11,7	;volatile
  9151  06E6  2EEC               	goto	l4560
  9152                           
  9153                           ;eeprom.c: 28:           last_GIE=1;
  9154  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  9155  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  9156  06E9  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9157  06EA  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
  9158  06EB  2EEF               	goto	l4562
  9159  06EC                     l4560:
  9160                           
  9161                           ;eeprom.c: 30:           last_GIE=0;
  9162  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  9163  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  9164  06EE  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9165  06EF                     l4562:
  9166                           
  9167                           ;eeprom.c: 32:        EEADR=addr;
  9168  06EF  0823               	movf	EEPROM_Write_Byte@addr,w
  9169  06F0  1703               	bsf	3,6	;RP1=1, select bank2
  9170  06F1  008D               	movwf	13	;volatile
  9171                           
  9172                           ;eeprom.c: 33:        EEDATA=dado;
  9173  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  9174  06F3  0820               	movf	EEPROM_Write_Byte@dado,w
  9175  06F4  1703               	bsf	3,6	;RP1=1, select bank2
  9176  06F5  008C               	movwf	12	;volatile
  9177                           
  9178                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
  9179  06F6  1683               	bsf	3,5	;RP0=1, select bank3
  9180  06F7  138C               	bcf	12,7	;volsfr
  9181                           
  9182                           ;eeprom.c: 35:        EECON1bits.WREN=1;
  9183  06F8  150C               	bsf	12,2	;volsfr
  9184                           
  9185                           ;eeprom.c: 36:        INTCONbits.GIE=0;
  9186  06F9  138B               	bcf	11,7	;volatile
  9187                           
  9188                           ;eeprom.c: 37:        EECON2=0x55;
  9189  06FA  3055               	movlw	85
  9190  06FB  008D               	movwf	13	;volsfr
  9191                           
  9192                           ;eeprom.c: 38:        EECON2=0xAA;
  9193  06FC  30AA               	movlw	170
  9194  06FD  008D               	movwf	13	;volsfr
  9195                           
  9196                           ;eeprom.c: 39:        EECON1bits.WR=1;
  9197  06FE  148C               	bsf	12,1	;volsfr
  9198                           
  9199                           ;eeprom.c: 41:        if(last_GIE==1)
  9200  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  9201  0700  1303               	bcf	3,6	;RP1=0, select bank0
  9202  0701  0324               	decf	EEPROM_Write_Byte@last_GIE,w
  9203  0702  1D03               	btfss	3,2
  9204  0703  2F06               	goto	l627
  9205                           
  9206                           ;eeprom.c: 42:           INTCONbits.GIE=1;
  9207  0704  178B               	bsf	11,7	;volatile
  9208  0705  2F07               	goto	l628
  9209  0706                     l627:	
  9210                           ;eeprom.c: 43:        else
  9211                           
  9212                           
  9213                           ;eeprom.c: 44:           INTCONbits.GIE=0;
  9214  0706  138B               	bcf	11,7	;volatile
  9215  0707                     l628:
  9216                           
  9217                           ;eeprom.c: 46:        EECON1bits.WREN=0;
  9218  0707  1683               	bsf	3,5	;RP0=1, select bank3
  9219  0708  1703               	bsf	3,6	;RP1=1, select bank3
  9220  0709  110C               	bcf	12,2	;volsfr
  9221                           
  9222                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
  9223  070A  304E               	movlw	78
  9224  070B  1283               	bcf	3,5	;RP0=0, select bank0
  9225  070C  1303               	bcf	3,6	;RP1=0, select bank0
  9226  070D  00A2               	movwf	??_EEPROM_Write_Byte+1
  9227  070E  30EA               	movlw	234
  9228  070F  00A1               	movwf	??_EEPROM_Write_Byte
  9229  0710                     u6667:
  9230  0710  0BA1               	decfsz	??_EEPROM_Write_Byte,f
  9231  0711  2F10               	goto	u6667
  9232  0712  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
  9233  0713  2F10               	goto	u6667
  9234  0714  0000               	nop
  9235  0715  0008               	return
  9236  0716                     __end_of_EEPROM_Write_Byte:
  9237  0716                     PL80:
  9238  0716  0825               	movf	EEPROM_Write_String@dado,w
  9239  0717  0084               	movwf	4
  9240  0718  0800               	movf	0,w
  9241  0719  00A0               	movwf	EEPROM_Write_Byte@dado
  9242  071A  0826               	movf	EEPROM_Write_String@addr,w
  9243  071B  0008               	return
  9244  071C                     __end_ofPL80:
  9245  071C                     __ptext38:	
  9246 ;; *************** function _EEPROM_Read_String *****************
  9247 ;; Defined at:
  9248 ;;		line 109 in file "eeprom.c"
  9249 ;; Parameters:    Size  Location     Type
  9250 ;;  addr            1    wreg     unsigned char 
  9251 ;;  dado            1    3[BANK0 ] PTR unsigned char 
  9252 ;;		 -> buffer(33), 
  9253 ;; Auto vars:     Size  Location     Type
  9254 ;;  addr            1    4[BANK0 ] unsigned char 
  9255 ;;  c               1    5[BANK0 ] unsigned char 
  9256 ;; Return value:  Size  Location     Type
  9257 ;;                  1    wreg      void 
  9258 ;; Registers used:
  9259 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9260 ;; Tracked objects:
  9261 ;;		On entry : 300/300
  9262 ;;		On exit  : B00/800
  9263 ;;		Unchanged: 0/0
  9264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9265 ;;      Params:         0       1       0       0       0
  9266 ;;      Locals:         0       2       0       0       0
  9267 ;;      Temps:          0       0       0       0       0
  9268 ;;      Totals:         0       3       0       0       0
  9269 ;;Total ram usage:        3 bytes
  9270 ;; Hardware stack levels used: 1
  9271 ;; Hardware stack levels required when called: 2
  9272 ;; This function calls:
  9273 ;;		_EEPROM_Read_Byte
  9274 ;; This function is called by:
  9275 ;;		_Decodify_Command
  9276 ;; This function uses a non-reentrant model
  9277 ;;
  9278                           
  9279                           
  9280                           ;psect for function _EEPROM_Read_String
  9281  071C                     _EEPROM_Read_String:
  9282                           
  9283                           ;incstack = 0
  9284                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9285                           ;EEPROM_Read_String@addr stored from wreg
  9286  071C  1283               	bcf	3,5	;RP0=0, select bank0
  9287  071D  1303               	bcf	3,6	;RP1=0, select bank0
  9288  071E  00A4               	movwf	EEPROM_Read_String@addr
  9289  071F                     l654:	
  9290                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
  9291                           
  9292                           
  9293                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
  9294  071F  0824               	movf	EEPROM_Read_String@addr,w
  9295  0720  25C1  120A  118A   	fcall	_EEPROM_Read_Byte
  9296  0723  1303               	bcf	3,6	;RP1=0, select bank0
  9297  0724  00A5               	movwf	EEPROM_Read_String@c
  9298  0725  0AA4               	incf	EEPROM_Read_String@addr,f
  9299                           
  9300                           ;eeprom.c: 114:         *(dado++)=c;
  9301  0726  0823               	movf	EEPROM_Read_String@dado,w
  9302  0727  0084               	movwf	4
  9303  0728  0825               	movf	EEPROM_Read_String@c,w
  9304  0729  1783               	bsf	3,7	;select IRP bank2
  9305  072A  0080               	movwf	0
  9306  072B  0AA3               	incf	EEPROM_Read_String@dado,f
  9307                           
  9308                           ;eeprom.c: 116:       }while(c);
  9309  072C  0825               	movf	EEPROM_Read_String@c,w
  9310  072D  1903               	btfsc	3,2
  9311  072E  0008               	return
  9312  072F  2F1F               	goto	l654
  9313  0730                     __end_of_EEPROM_Read_String:
  9314                           
  9315                           	psect	text26
  9316  1086                     __ptext26:	
  9317 ;; *************** function _PROCULUS_Show_Screen *****************
  9318 ;; Defined at:
  9319 ;;		line 243 in file "proculus.c"
  9320 ;; Parameters:    Size  Location     Type
  9321 ;;  screen          2   14[BANK1 ] unsigned int 
  9322 ;; Auto vars:     Size  Location     Type
  9323 ;;  vetor           3   16[BANK1 ] unsigned char [3]
  9324 ;; Return value:  Size  Location     Type
  9325 ;;                  1    wreg      void 
  9326 ;; Registers used:
  9327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9328 ;; Tracked objects:
  9329 ;;		On entry : 300/100
  9330 ;;		On exit  : 300/0
  9331 ;;		Unchanged: 0/0
  9332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9333 ;;      Params:         0       0       2       0       0
  9334 ;;      Locals:         0       0       3       0       0
  9335 ;;      Temps:          0       0       0       0       0
  9336 ;;      Totals:         0       0       5       0       0
  9337 ;;Total ram usage:        5 bytes
  9338 ;; Hardware stack levels used: 1
  9339 ;; Hardware stack levels required when called: 4
  9340 ;; This function calls:
  9341 ;;		_PROCULUS_Control_Register_Write
  9342 ;; This function is called by:
  9343 ;;		_Decodify_Command
  9344 ;; This function uses a non-reentrant model
  9345 ;;
  9346                           
  9347                           
  9348                           ;psect for function _PROCULUS_Show_Screen
  9349  1086                     _PROCULUS_Show_Screen:
  9350                           
  9351                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  9352                           
  9353                           ;incstack = 0
  9354                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9355  1086  3003               	movlw	3
  9356  1087  00B0               	movwf	PROCULUS_Show_Screen@vetor^(0+128)
  9357                           
  9358                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  9359  1088  082F               	movf	(PROCULUS_Show_Screen@screen^(0+128)+1),w
  9360  1089  00B1               	movwf	(PROCULUS_Show_Screen@vetor^(0+128)+1)
  9361                           
  9362                           ;proculus.c: 247:      vetor[2] = (char) screen;
  9363  108A  082E               	movf	PROCULUS_Show_Screen@screen^(0+128),w
  9364  108B  00B2               	movwf	(PROCULUS_Show_Screen@vetor^(0+128)+2)
  9365                           
  9366                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  9367  108C  3003               	movlw	3
  9368  108D  00AA               	movwf	PROCULUS_Control_Register_Write@size^(0+128)
  9369  108E  30B0               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  9370  108F  28B0               	ljmp	_PROCULUS_Control_Register_Write
  9371  1090                     __end_of_PROCULUS_Show_Screen:
  9372  1090                     __ptext27:	
  9373 ;; *************** function _PROCULUS_Buzzer *****************
  9374 ;; Defined at:
  9375 ;;		line 223 in file "proculus.c"
  9376 ;; Parameters:    Size  Location     Type
  9377 ;;  time_ms_x_10    2   14[BANK1 ] unsigned int 
  9378 ;; Auto vars:     Size  Location     Type
  9379 ;;  vetor           2   16[BANK1 ] unsigned char [2]
  9380 ;; Return value:  Size  Location     Type
  9381 ;;                  1    wreg      void 
  9382 ;; Registers used:
  9383 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9384 ;; Tracked objects:
  9385 ;;		On entry : 300/100
  9386 ;;		On exit  : 300/0
  9387 ;;		Unchanged: 0/0
  9388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9389 ;;      Params:         0       0       2       0       0
  9390 ;;      Locals:         0       0       2       0       0
  9391 ;;      Temps:          0       0       0       0       0
  9392 ;;      Totals:         0       0       4       0       0
  9393 ;;Total ram usage:        4 bytes
  9394 ;; Hardware stack levels used: 1
  9395 ;; Hardware stack levels required when called: 4
  9396 ;; This function calls:
  9397 ;;		_PROCULUS_Control_Register_Write
  9398 ;;		___lwdiv
  9399 ;; This function is called by:
  9400 ;;		_Decodify_Command
  9401 ;; This function uses a non-reentrant model
  9402 ;;
  9403                           
  9404                           
  9405                           ;psect for function _PROCULUS_Buzzer
  9406  1090                     _PROCULUS_Buzzer:
  9407                           
  9408                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
  9409                           
  9410                           ;incstack = 0
  9411                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9412  1090  300A               	movlw	10
  9413  1091  1283               	bcf	3,5	;RP0=0, select bank0
  9414  1092  00A0               	movwf	___lwdiv@divisor
  9415  1093  01A1               	clrf	___lwdiv@divisor+1
  9416  1094  1683               	bsf	3,5	;RP0=1, select bank1
  9417  1095  082F               	movf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128),w
  9418  1096  1283               	bcf	3,5	;RP0=0, select bank0
  9419  1097  00A3               	movwf	___lwdiv@dividend+1
  9420  1098  1683               	bsf	3,5	;RP0=1, select bank1
  9421  1099  082E               	movf	PROCULUS_Buzzer@time_ms_x_10^(0+128),w
  9422  109A  1283               	bcf	3,5	;RP0=0, select bank0
  9423  109B  00A2               	movwf	___lwdiv@dividend
  9424  109C  120A  158A  2760  160A  118A  	fcall	___lwdiv
  9425  10A1  0821               	movf	?___lwdiv+1,w
  9426  10A2  1683               	bsf	3,5	;RP0=1, select bank1
  9427  10A3  00AF               	movwf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128)
  9428  10A4  1283               	bcf	3,5	;RP0=0, select bank0
  9429  10A5  0820               	movf	?___lwdiv,w
  9430  10A6  1683               	bsf	3,5	;RP0=1, select bank1
  9431  10A7  00AE               	movwf	PROCULUS_Buzzer@time_ms_x_10^(0+128)
  9432                           
  9433                           ;proculus.c: 226:      vetor[0]=0x02;
  9434  10A8  3002               	movlw	2
  9435  10A9  00B0               	movwf	PROCULUS_Buzzer@vetor^(0+128)
  9436                           
  9437                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
  9438  10AA  082E               	movf	PROCULUS_Buzzer@time_ms_x_10^(0+128),w
  9439  10AB  00B1               	movwf	(PROCULUS_Buzzer@vetor^(0+128)+1)
  9440                           
  9441                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
  9442  10AC  3002               	movlw	2
  9443  10AD  00AA               	movwf	PROCULUS_Control_Register_Write@size^(0+128)
  9444  10AE  30B0               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
  9445  10AF  28B0               	ljmp	_PROCULUS_Control_Register_Write
  9446  10B0                     __end_of_PROCULUS_Buzzer:
  9447  10B0                     __ptext29:	
  9448 ;; *************** function _PROCULUS_Control_Register_Write *****************
  9449 ;; Defined at:
  9450 ;;		line 13 in file "proculus.c"
  9451 ;; Parameters:    Size  Location     Type
  9452 ;;  vetor           1    wreg     PTR unsigned char 
  9453 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9454 ;;  size            1   10[BANK1 ] unsigned char 
  9455 ;; Auto vars:     Size  Location     Type
  9456 ;;  vetor           1   12[BANK1 ] PTR unsigned char 
  9457 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9458 ;;  i               1   13[BANK1 ] unsigned char 
  9459 ;; Return value:  Size  Location     Type
  9460 ;;                  1    wreg      void 
  9461 ;; Registers used:
  9462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9463 ;; Tracked objects:
  9464 ;;		On entry : 300/100
  9465 ;;		On exit  : 300/0
  9466 ;;		Unchanged: 0/0
  9467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9468 ;;      Params:         0       0       1       0       0
  9469 ;;      Locals:         0       0       2       0       0
  9470 ;;      Temps:          0       0       1       0       0
  9471 ;;      Totals:         0       0       4       0       0
  9472 ;;Total ram usage:        4 bytes
  9473 ;; Hardware stack levels used: 1
  9474 ;; Hardware stack levels required when called: 3
  9475 ;; This function calls:
  9476 ;;		_PROCULUS_Delay
  9477 ;;		_USART_put_int
  9478 ;;		_USART_putc
  9479 ;; This function is called by:
  9480 ;;		_PROCULUS_Buzzer
  9481 ;;		_PROCULUS_Show_Screen
  9482 ;; This function uses a non-reentrant model
  9483 ;;
  9484                           
  9485                           
  9486                           ;psect for function _PROCULUS_Control_Register_Write
  9487  10B0                     _PROCULUS_Control_Register_Write:
  9488                           
  9489                           ;incstack = 0
  9490                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
  9491                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
  9492  10B0  00AC               	movwf	PROCULUS_Control_Register_Write@vetor^(0+128)
  9493                           
  9494                           ;proculus.c: 14:      USART_put_int(0x5AA5);
  9495  10B1  30A5               	movlw	165
  9496  10B2  00A8               	movwf	USART_put_int@value^(0+128)
  9497  10B3  305A               	movlw	90
  9498  10B4  00A9               	movwf	(USART_put_int@value^(0+128)+1)
  9499  10B5  120A  118A  235A  160A  118A  	fcall	_USART_put_int
  9500                           
  9501                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
  9502  10BA  082A               	movf	PROCULUS_Control_Register_Write@size^(0+128),w
  9503  10BB  3E01               	addlw	1
  9504  10BC  120A  118A  2349  160A  118A  	fcall	_USART_putc
  9505                           
  9506                           ;proculus.c: 16:      USART_putc(0x80);
  9507  10C1  3080               	movlw	128
  9508  10C2  120A  118A  2349  160A  118A  	fcall	_USART_putc
  9509                           
  9510                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
  9511  10C7  01AD               	clrf	PROCULUS_Control_Register_Write@i^(0+128)
  9512  10C8                     l6458:
  9513  10C8  082A               	movf	PROCULUS_Control_Register_Write@size^(0+128),w
  9514  10C9  022D               	subwf	PROCULUS_Control_Register_Write@i^(0+128),w
  9515  10CA  1803               	btfsc	3,0
  9516  10CB  28D9               	goto	l6460
  9517                           
  9518                           ;proculus.c: 18:          USART_putc(vetor[i]);
  9519  10CC  082D               	movf	PROCULUS_Control_Register_Write@i^(0+128),w
  9520  10CD  072C               	addwf	PROCULUS_Control_Register_Write@vetor^(0+128),w
  9521  10CE  00AB               	movwf	??_PROCULUS_Control_Register_Write^(0+128)
  9522  10CF  0084               	movwf	4
  9523  10D0  1383               	bcf	3,7	;select IRP bank0
  9524  10D1  0800               	movf	0,w
  9525  10D2  120A  118A  2349  160A  118A  	fcall	_USART_putc
  9526  10D7  0AAD               	incf	PROCULUS_Control_Register_Write@i^(0+128),f
  9527  10D8  28C8               	goto	l6458
  9528  10D9                     l6460:
  9529                           
  9530                           ;proculus.c: 19:      PROCULUS_Delay(1);
  9531  10D9  1283               	bcf	3,5	;RP0=0, select bank0
  9532  10DA  01A0               	clrf	PROCULUS_Delay@tempo_ms
  9533  10DB  0AA0               	incf	PROCULUS_Delay@tempo_ms,f
  9534  10DC  01A1               	clrf	PROCULUS_Delay@tempo_ms+1
  9535  10DD  28DE               	ljmp	l4324
  9536  10DE                     __end_of_PROCULUS_Control_Register_Write:
  9537  10DE                     __ptext31:	
  9538 ;; *************** function _PROCULUS_Delay *****************
  9539 ;; Defined at:
  9540 ;;		line 267 in file "proculus.c"
  9541 ;; Parameters:    Size  Location     Type
  9542 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
  9543 ;; Auto vars:     Size  Location     Type
  9544 ;;  i               2    4[BANK0 ] unsigned int 
  9545 ;; Return value:  Size  Location     Type
  9546 ;;                  1    wreg      void 
  9547 ;; Registers used:
  9548 ;;		wreg, status,2, status,0
  9549 ;; Tracked objects:
  9550 ;;		On entry : 300/800
  9551 ;;		On exit  : 300/0
  9552 ;;		Unchanged: 0/0
  9553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9554 ;;      Params:         0       2       0       0       0
  9555 ;;      Locals:         0       2       0       0       0
  9556 ;;      Temps:          0       2       0       0       0
  9557 ;;      Totals:         0       6       0       0       0
  9558 ;;Total ram usage:        6 bytes
  9559 ;; Hardware stack levels used: 1
  9560 ;; Hardware stack levels required when called: 1
  9561 ;; This function calls:
  9562 ;;		Nothing
  9563 ;; This function is called by:
  9564 ;;		_PROCULUS_Control_Register_Write
  9565 ;;		_PROCULUS_VP_Write
  9566 ;; This function uses a non-reentrant model
  9567 ;;
  9568                           
  9569                           
  9570                           ;psect for function _PROCULUS_Delay
  9571  10DE                     _PROCULUS_Delay:
  9572  10DE                     l4324:	
  9573                           ;incstack = 0
  9574                           ; Regs used in _PROCULUS_Delay: [wreg+status,2+status,0]
  9575                           
  9576                           
  9577                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
  9578  10DE  01A4               	clrf	PROCULUS_Delay@i
  9579  10DF  01A5               	clrf	PROCULUS_Delay@i+1
  9580  10E0                     l4330:
  9581  10E0  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
  9582  10E1  0225               	subwf	PROCULUS_Delay@i+1,w
  9583  10E2  1D03               	skipz
  9584  10E3  28E6               	goto	u3525
  9585  10E4  0820               	movf	PROCULUS_Delay@tempo_ms,w
  9586  10E5  0224               	subwf	PROCULUS_Delay@i,w
  9587  10E6                     u3525:
  9588  10E6  1803               	btfsc	3,0
  9589  10E7  0008               	return
  9590                           
  9591                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
  9592  10E8  3003               	movlw	3
  9593  10E9  1283               	bcf	3,5	;RP0=0, select bank0
  9594  10EA  1303               	bcf	3,6	;RP1=0, select bank0
  9595  10EB  00A3               	movwf	??_PROCULUS_Delay+1
  9596  10EC  3097               	movlw	151
  9597  10ED  00A2               	movwf	??_PROCULUS_Delay
  9598  10EE                     u6647:
  9599  10EE  0BA2               	decfsz	??_PROCULUS_Delay,f
  9600  10EF  28EE               	goto	u6647
  9601  10F0  0BA3               	decfsz	??_PROCULUS_Delay+1,f
  9602  10F1  28EE               	goto	u6647
  9603                           
  9604                           ;proculus.c: 270:     }
  9605  10F2  1283               	bcf	3,5	;RP0=0, select bank0
  9606  10F3  1303               	bcf	3,6	;RP1=0, select bank0
  9607  10F4  0AA4               	incf	PROCULUS_Delay@i,f
  9608  10F5  1903               	skipnz
  9609  10F6  0AA5               	incf	PROCULUS_Delay@i+1,f
  9610  10F7  28E0               	goto	l4330
  9611  10F8                     __end_of_PROCULUS_Delay:
  9612                           
  9613                           	psect	text43
  9614  12AA                     __ptext43:	
  9615 ;; *************** function _EEPROM_24C1025_Read_Int *****************
  9616 ;; Defined at:
  9617 ;;		line 360 in file "EEPROM_24C1025.c"
  9618 ;; Parameters:    Size  Location     Type
  9619 ;;  chip_add        1    wreg     unsigned char 
  9620 ;;  mem_add         4   21[BANK0 ] unsigned long 
  9621 ;; Auto vars:     Size  Location     Type
  9622 ;;  chip_add        1   25[BANK0 ] unsigned char 
  9623 ;;  data            2   26[BANK0 ] unsigned char [2]
  9624 ;; Return value:  Size  Location     Type
  9625 ;;                  2   21[BANK0 ] unsigned int 
  9626 ;; Registers used:
  9627 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9628 ;; Tracked objects:
  9629 ;;		On entry : 300/300
  9630 ;;		On exit  : 300/0
  9631 ;;		Unchanged: 0/0
  9632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9633 ;;      Params:         0       4       0       0       0
  9634 ;;      Locals:         0       3       0       0       0
  9635 ;;      Temps:          0       0       0       0       0
  9636 ;;      Totals:         0       7       0       0       0
  9637 ;;Total ram usage:        7 bytes
  9638 ;; Hardware stack levels used: 1
  9639 ;; Hardware stack levels required when called: 4
  9640 ;; This function calls:
  9641 ;;		_EEPROM_24C1025_Read_Buffer
  9642 ;; This function is called by:
  9643 ;;		_Decodify_Command
  9644 ;; This function uses a non-reentrant model
  9645 ;;
  9646                           
  9647                           
  9648                           ;psect for function _EEPROM_24C1025_Read_Int
  9649  12AA                     _EEPROM_24C1025_Read_Int:
  9650                           
  9651                           ;incstack = 0
  9652                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  9653                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
  9654  12AA  1283               	bcf	3,5	;RP0=0, select bank0
  9655  12AB  1303               	bcf	3,6	;RP1=0, select bank0
  9656  12AC  00B9               	movwf	EEPROM_24C1025_Read_Int@chip_add
  9657                           
  9658                           ;EEPROM_24C1025.c: 361:     char data[2];;EEPROM_24C1025.c: 362:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
  9659  12AD  0838               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
  9660  12AE  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
  9661  12AF  0837               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
  9662  12B0  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
  9663  12B1  0836               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
  9664  12B2  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
  9665  12B3  0835               	movf	EEPROM_24C1025_Read_Int@mem_add,w
  9666  12B4  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
  9667  12B5  3002               	movlw	2
  9668  12B6  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
  9669  12B7  303A               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
  9670  12B8  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
  9671  12B9  0839               	movf	EEPROM_24C1025_Read_Int@chip_add,w
  9672  12BA  24A9               	fcall	_EEPROM_24C1025_Read_Buffer
  9673                           
  9674                           ;EEPROM_24C1025.c: 363:     return (data[0]<<8)+data[1];
  9675  12BB  1283               	bcf	3,5	;RP0=0, select bank0
  9676  12BC  1303               	bcf	3,6	;RP1=0, select bank0
  9677  12BD  083A               	movf	EEPROM_24C1025_Read_Int@data,w
  9678  12BE  00B6               	movwf	?_EEPROM_24C1025_Read_Int+1
  9679  12BF  083B               	movf	EEPROM_24C1025_Read_Int@data+1,w
  9680  12C0  00B5               	movwf	?_EEPROM_24C1025_Read_Int
  9681  12C1  0008               	return
  9682  12C2                     __end_of_EEPROM_24C1025_Read_Int:
  9683  12C2                     __ptext40:	
  9684 ;; *************** function _EEPROM_24C1025_Write_Str *****************
  9685 ;; Defined at:
  9686 ;;		line 220 in file "EEPROM_24C1025.c"
  9687 ;; Parameters:    Size  Location     Type
  9688 ;;  chip_add        1    wreg     unsigned char 
  9689 ;;  mem_add         4   10[BANK0 ] unsigned long 
  9690 ;;  data            1   14[BANK0 ] PTR unsigned char 
  9691 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  9692 ;; Auto vars:     Size  Location     Type
  9693 ;;  chip_add        1   15[BANK0 ] unsigned char 
  9694 ;;  ctrl            1   17[BANK0 ] unsigned char 
  9695 ;;  range           1   16[BANK0 ] unsigned char 
  9696 ;; Return value:  Size  Location     Type
  9697 ;;                  1    wreg      void 
  9698 ;; Registers used:
  9699 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9700 ;; Tracked objects:
  9701 ;;		On entry : 300/300
  9702 ;;		On exit  : 0/0
  9703 ;;		Unchanged: 0/0
  9704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9705 ;;      Params:         0       5       0       0       0
  9706 ;;      Locals:         0       3       0       0       0
  9707 ;;      Temps:          0       0       0       0       0
  9708 ;;      Totals:         0       8       0       0       0
  9709 ;;Total ram usage:        8 bytes
  9710 ;; Hardware stack levels used: 1
  9711 ;; Hardware stack levels required when called: 3
  9712 ;; This function calls:
  9713 ;;		_I2C_Master_Start
  9714 ;;		_I2C_Master_Stop
  9715 ;;		_I2C_Master_Write
  9716 ;;		_my_delay_ms_WDT
  9717 ;; This function is called by:
  9718 ;;		_Decodify_Command
  9719 ;; This function uses a non-reentrant model
  9720 ;;
  9721                           
  9722                           
  9723                           ;psect for function _EEPROM_24C1025_Write_Str
  9724  12C2                     _EEPROM_24C1025_Write_Str:
  9725                           
  9726                           ;incstack = 0
  9727                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  9728                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
  9729  12C2  1283               	bcf	3,5	;RP0=0, select bank0
  9730  12C3  1303               	bcf	3,6	;RP1=0, select bank0
  9731  12C4  00AF               	movwf	EEPROM_24C1025_Write_Str@chip_add
  9732                           
  9733                           ;EEPROM_24C1025.c: 222:      unsigned char ctrl;;EEPROM_24C1025.c: 224:      if(mem_add>
      +                          0x1FFFF) return;
  9734  12C5  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  9735  12C6  1D03               	btfss	3,2
  9736  12C7  0008               	return
  9737  12C8  3002               	movlw	2
  9738  12C9  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  9739  12CA  1D03               	skipz
  9740  12CB  2AD2               	goto	u5933
  9741  12CC  3000               	movlw	0
  9742  12CD  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9743  12CE  1D03               	skipz
  9744  12CF  2AD2               	goto	u5933
  9745  12D0  3000               	movlw	0
  9746  12D1  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  9747  12D2                     u5933:
  9748  12D2  1803               	btfsc	3,0
  9749  12D3  0008               	return
  9750                           
  9751                           ;EEPROM_24C1025.c: 226:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9752  12D4  1283               	bcf	3,5	;RP0=0, select bank0
  9753  12D5  1303               	bcf	3,6	;RP1=0, select bank0
  9754  12D6                     L16:
  9755  12D6  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  9756  12D7  1D03               	btfss	3,2
  9757  12D8  2AE5               	goto	l6610
  9758  12D9  3001               	movlw	1
  9759  12DA  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  9760  12DB  1D03               	skipz
  9761  12DC  2AE3               	goto	u5943
  9762  12DD  3000               	movlw	0
  9763  12DE  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9764  12DF  1D03               	skipz
  9765  12E0  2AE3               	goto	u5943
  9766  12E1  3000               	movlw	0
  9767  12E2  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  9768  12E3                     u5943:
  9769  12E3  1C03               	btfss	3,0
  9770  12E4  2AEA               	goto	l6612
  9771  12E5                     l6610:
  9772  12E5  3008               	movlw	8
  9773  12E6  1283               	bcf	3,5	;RP0=0, select bank0
  9774  12E7  1303               	bcf	3,6	;RP1=0, select bank0
  9775  12E8  00B0               	movwf	EEPROM_24C1025_Write_Str@range
  9776  12E9  2AED               	goto	l6614
  9777  12EA                     l6612:
  9778  12EA  1283               	bcf	3,5	;RP0=0, select bank0
  9779  12EB  1303               	bcf	3,6	;RP1=0, select bank0
  9780  12EC  01B0               	clrf	EEPROM_24C1025_Write_Str@range
  9781  12ED                     l6614:
  9782                           
  9783                           ;EEPROM_24C1025.c: 227:      ctrl=chip_add;
  9784  12ED  082F               	movf	EEPROM_24C1025_Write_Str@chip_add,w
  9785  12EE  00B1               	movwf	EEPROM_24C1025_Write_Str@ctrl
  9786  12EF  30A0               	movlw	160
  9787                           
  9788                           ;EEPROM_24C1025.c: 228:      ctrl<<=1;
  9789  12F0  1003               	clrc
  9790  12F1  0DB1               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
  9791                           
  9792                           ;EEPROM_24C1025.c: 229:      ctrl |= 0xA0;
  9793  12F2  04B1               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
  9794                           
  9795                           ;EEPROM_24C1025.c: 230:      ctrl |= range;
  9796  12F3  0830               	movf	EEPROM_24C1025_Write_Str@range,w
  9797  12F4  04B1               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
  9798                           
  9799                           ;EEPROM_24C1025.c: 232:      I2C_Master_Start();
  9800  12F5  249A  160A  118A   	fcall	_I2C_Master_Start
  9801                           
  9802                           ;EEPROM_24C1025.c: 233:      I2C_Master_Write(ctrl);
  9803  12F8  1283               	bcf	3,5	;RP0=0, select bank0
  9804  12F9  0831               	movf	EEPROM_24C1025_Write_Str@ctrl,w
  9805  12FA  00A3               	movwf	I2C_Master_Write@d
  9806  12FB  01A4               	clrf	I2C_Master_Write@d+1
  9807  12FC  2762  160A  118A   	fcall	_I2C_Master_Write
  9808                           
  9809                           ;EEPROM_24C1025.c: 234:      I2C_Master_Write(((char *)&mem_add)[1]);
  9810  12FF  082B               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9811  1300  00A3               	movwf	I2C_Master_Write@d
  9812  1301  01A4               	clrf	I2C_Master_Write@d+1
  9813  1302  2762  160A  118A   	fcall	_I2C_Master_Write
  9814                           
  9815                           ;EEPROM_24C1025.c: 235:      I2C_Master_Write(((char *)&mem_add)[0]);
  9816  1305  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
  9817  1306  00A3               	movwf	I2C_Master_Write@d
  9818  1307  01A4               	clrf	I2C_Master_Write@d+1
  9819  1308  2762  160A  118A   	fcall	_I2C_Master_Write
  9820  130B                     l6674:	
  9821                           ;EEPROM_24C1025.c: 236:      while(*data)
  9822                           
  9823                           
  9824                           ;EEPROM_24C1025.c: 236:      while(*data)
  9825  130B  082E               	movf	EEPROM_24C1025_Write_Str@data,w
  9826  130C  0084               	movwf	4
  9827  130D  1783               	bsf	3,7	;select IRP bank2
  9828  130E  0800               	movf	0,w
  9829  130F  1903               	btfsc	3,2
  9830  1310  2B51               	goto	l6676
  9831  1311  0064               	clrwdt	;# 
  9832                           
  9833                           ;EEPROM_24C1025.c: 239:           if(mem_add>0x1FFFF) return;
  9834  1312  1283               	bcf	3,5	;RP0=0, select bank0
  9835  1313  1303               	bcf	3,6	;RP1=0, select bank0
  9836  1314  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  9837  1315  1D03               	btfss	3,2
  9838  1316  0008               	return
  9839  1317  3002               	movlw	2
  9840  1318  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  9841  1319  1D03               	skipz
  9842  131A  2B21               	goto	u5953
  9843  131B  3000               	movlw	0
  9844  131C  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9845  131D  1D03               	skipz
  9846  131E  2B21               	goto	u5953
  9847  131F  3000               	movlw	0
  9848  1320  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  9849  1321                     u5953:
  9850  1321  1803               	btfsc	3,0
  9851  1322  0008               	return
  9852                           
  9853                           ;EEPROM_24C1025.c: 240:           if((mem_add+1)%128==0)
  9854  1323  1283               	bcf	3,5	;RP0=0, select bank0
  9855  1324  1303               	bcf	3,6	;RP1=0, select bank0
  9856  1325  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
  9857  1326  3E01               	addlw	1
  9858  1327  397F               	andlw	127
  9859  1328  1D03               	btfss	3,2
  9860  1329  2B42               	goto	l6668
  9861                           
  9862                           ;EEPROM_24C1025.c: 241:             {;EEPROM_24C1025.c: 242:             I2C_Master_Writ
      +                          e(*data);
  9863  132A  27E7  160A  118A   	fcall	PL60	;call to abstracted procedure
  9864  132D  2762  160A  118A   	fcall	_I2C_Master_Write
  9865                           
  9866                           ;EEPROM_24C1025.c: 243:             I2C_Master_Stop();
  9867  1330  276B  160A  118A   	fcall	_I2C_Master_Stop
  9868                           
  9869                           ;EEPROM_24C1025.c: 245:             my_delay_ms_WDT(5);
  9870  1333  27B1  160A  118A   	fcall	PL36	;call to abstracted procedure
  9871  1336  277B  160A  118A   	fcall	_my_delay_ms_WDT
  9872                           
  9873                           ;EEPROM_24C1025.c: 246:             mem_add++;
  9874  1339  0AAA               	incf	EEPROM_24C1025_Write_Str@mem_add,f
  9875  133A  1903               	skipnz
  9876  133B  0AAB               	incf	EEPROM_24C1025_Write_Str@mem_add+1,f
  9877  133C  1903               	skipnz
  9878  133D  0AAC               	incf	EEPROM_24C1025_Write_Str@mem_add+2,f
  9879  133E  1903               	skipnz
  9880  133F  0AAD               	incf	EEPROM_24C1025_Write_Str@mem_add+3,f
  9881                           
  9882                           ;EEPROM_24C1025.c: 247:             data++;
  9883  1340  0AAE               	incf	EEPROM_24C1025_Write_Str@data,f
  9884  1341  2AD6               	goto	L16
  9885  1342                     l6668:	
  9886                           ;EEPROM_24C1025.c: 248:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9887                           
  9888                           
  9889                           ;EEPROM_24C1025.c: 260:             {;EEPROM_24C1025.c: 261:             I2C_Master_Writ
      +                          e(*data);
  9890  1342  27E7  160A  118A   	fcall	PL60	;call to abstracted procedure
  9891  1345  2762  160A  118A   	fcall	_I2C_Master_Write
  9892                           
  9893                           ;EEPROM_24C1025.c: 262:             data++;
  9894  1348  0AAE               	incf	EEPROM_24C1025_Write_Str@data,f
  9895                           
  9896                           ;EEPROM_24C1025.c: 263:             mem_add++;
  9897  1349  0AAA               	incf	EEPROM_24C1025_Write_Str@mem_add,f
  9898  134A  1903               	skipnz
  9899  134B  0AAB               	incf	EEPROM_24C1025_Write_Str@mem_add+1,f
  9900  134C  1903               	skipnz
  9901  134D  0AAC               	incf	EEPROM_24C1025_Write_Str@mem_add+2,f
  9902  134E  1903               	skipnz
  9903  134F  0AAD               	incf	EEPROM_24C1025_Write_Str@mem_add+3,f
  9904  1350  2B0B               	goto	l6674
  9905  1351                     l6676:
  9906                           
  9907                           ;EEPROM_24C1025.c: 266:      I2C_Master_Write(0);
  9908  1351  01A3               	clrf	I2C_Master_Write@d
  9909  1352  01A4               	clrf	I2C_Master_Write@d+1
  9910  1353  2762  160A  118A   	fcall	_I2C_Master_Write
  9911                           
  9912                           ;EEPROM_24C1025.c: 267:      I2C_Master_Stop();
  9913  1356  276B  160A  118A   	fcall	_I2C_Master_Stop
  9914                           
  9915                           ;EEPROM_24C1025.c: 268:      my_delay_ms_WDT(5);
  9916  1359  27B1  160A  118A   	fcall	PL36	;call to abstracted procedure
  9917  135C  2F7B               	ljmp	l3860
  9918  135D                     __end_of_EEPROM_24C1025_Write_Str:
  9919  135D                     __ptext42:	
  9920 ;; *************** function _EEPROM_24C1025_Read_Str *****************
  9921 ;; Defined at:
  9922 ;;		line 275 in file "EEPROM_24C1025.c"
  9923 ;; Parameters:    Size  Location     Type
  9924 ;;  chip_add        1    wreg     unsigned char 
  9925 ;;  mem_add         4    7[BANK0 ] unsigned long 
  9926 ;;  buffer          1   11[BANK0 ] PTR unsigned char 
  9927 ;;		 -> buffer(33), 
  9928 ;; Auto vars:     Size  Location     Type
  9929 ;;  chip_add        1   15[BANK0 ] unsigned char 
  9930 ;;  ctrl            1   17[BANK0 ] unsigned char 
  9931 ;;  range           1   16[BANK0 ] unsigned char 
  9932 ;;  cnt             1   14[BANK0 ] unsigned char 
  9933 ;; Return value:  Size  Location     Type
  9934 ;;                  1    wreg      void 
  9935 ;; Registers used:
  9936 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9937 ;; Tracked objects:
  9938 ;;		On entry : 300/300
  9939 ;;		On exit  : 0/0
  9940 ;;		Unchanged: 0/0
  9941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9942 ;;      Params:         0       5       0       0       0
  9943 ;;      Locals:         0       4       0       0       0
  9944 ;;      Temps:          0       2       0       0       0
  9945 ;;      Totals:         0      11       0       0       0
  9946 ;;Total ram usage:       11 bytes
  9947 ;; Hardware stack levels used: 1
  9948 ;; Hardware stack levels required when called: 3
  9949 ;; This function calls:
  9950 ;;		_I2C_Master_Read
  9951 ;;		_I2C_Master_RepeatedStart
  9952 ;;		_I2C_Master_Start
  9953 ;;		_I2C_Master_Stop
  9954 ;;		_I2C_Master_Write
  9955 ;; This function is called by:
  9956 ;;		_Decodify_Command
  9957 ;; This function uses a non-reentrant model
  9958 ;;
  9959                           
  9960                           
  9961                           ;psect for function _EEPROM_24C1025_Read_Str
  9962  135D                     _EEPROM_24C1025_Read_Str:
  9963                           
  9964                           ;incstack = 0
  9965                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9966                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
  9967  135D  1283               	bcf	3,5	;RP0=0, select bank0
  9968  135E  1303               	bcf	3,6	;RP1=0, select bank0
  9969  135F  00AF               	movwf	EEPROM_24C1025_Read_Str@chip_add
  9970                           
  9971                           ;EEPROM_24C1025.c: 277:      unsigned char range=0;
  9972  1360  01B0               	clrf	EEPROM_24C1025_Read_Str@range
  9973                           
  9974                           ;EEPROM_24C1025.c: 278:      unsigned char ctrl;;EEPROM_24C1025.c: 280:      if(mem_add>
      +                          0x1FFFF) return;
  9975  1361  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  9976  1362  1D03               	btfss	3,2
  9977  1363  0008               	return
  9978  1364  3002               	movlw	2
  9979  1365  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  9980  1366  1D03               	skipz
  9981  1367  2B6E               	goto	u5993
  9982  1368  3000               	movlw	0
  9983  1369  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  9984  136A  1D03               	skipz
  9985  136B  2B6E               	goto	u5993
  9986  136C  3000               	movlw	0
  9987  136D  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  9988  136E                     u5993:
  9989  136E  1803               	btfsc	3,0
  9990  136F  0008               	return
  9991                           
  9992                           ;EEPROM_24C1025.c: 282:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9993  1370  1283               	bcf	3,5	;RP0=0, select bank0
  9994  1371  1303               	bcf	3,6	;RP1=0, select bank0
  9995  1372  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  9996  1373  1D03               	btfss	3,2
  9997  1374  2B81               	goto	l6688
  9998  1375  3001               	movlw	1
  9999  1376  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10000  1377  1D03               	skipz
 10001  1378  2B7F               	goto	u6003
 10002  1379  3000               	movlw	0
 10003  137A  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10004  137B  1D03               	skipz
 10005  137C  2B7F               	goto	u6003
 10006  137D  3000               	movlw	0
 10007  137E  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10008  137F                     u6003:
 10009  137F  1C03               	btfss	3,0
 10010  1380  2B86               	goto	l6690
 10011  1381                     l6688:
 10012  1381  3008               	movlw	8
 10013  1382  1283               	bcf	3,5	;RP0=0, select bank0
 10014  1383  1303               	bcf	3,6	;RP1=0, select bank0
 10015  1384  00B0               	movwf	EEPROM_24C1025_Read_Str@range
 10016  1385  2B89               	goto	l6692
 10017  1386                     l6690:
 10018  1386  1283               	bcf	3,5	;RP0=0, select bank0
 10019  1387  1303               	bcf	3,6	;RP1=0, select bank0
 10020  1388  01B0               	clrf	EEPROM_24C1025_Read_Str@range
 10021  1389                     l6692:
 10022                           
 10023                           ;EEPROM_24C1025.c: 283:      ctrl=chip_add;
 10024                           
 10025                           ;EEPROM_24C1025.c: 284:      ctrl<<=1;
 10026                           
 10027                           ;EEPROM_24C1025.c: 285:      ctrl |= 0xA0;
 10028                           
 10029                           ;EEPROM_24C1025.c: 286:      ctrl |= 0b00000001;
 10030                           
 10031                           ;EEPROM_24C1025.c: 287:      ctrl |= range;
 10032  1389  27C0  160A  118A   	fcall	PL46	;call to abstracted procedure
 10033                           
 10034                           ;EEPROM_24C1025.c: 289:      I2C_Master_Start();
 10035  138C  249A  160A  118A   	fcall	_I2C_Master_Start
 10036                           
 10037                           ;EEPROM_24C1025.c: 290:      I2C_Master_Write(ctrl & 0xFE);
 10038  138F  27FA  160A  118A   	fcall	PL74	;call to abstracted procedure
 10039  1392  2762  160A  118A   	fcall	_I2C_Master_Write
 10040                           
 10041                           ;EEPROM_24C1025.c: 291:      I2C_Master_Write(((char *)&mem_add)[1]);
 10042  1395  0828               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10043  1396  00A3               	movwf	I2C_Master_Write@d
 10044  1397  01A4               	clrf	I2C_Master_Write@d+1
 10045  1398  2762  160A  118A   	fcall	_I2C_Master_Write
 10046                           
 10047                           ;EEPROM_24C1025.c: 292:      I2C_Master_Write(((char *)&mem_add)[0]);
 10048  139B  0827               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10049  139C  00A3               	movwf	I2C_Master_Write@d
 10050  139D  01A4               	clrf	I2C_Master_Write@d+1
 10051  139E  2762  160A  118A   	fcall	_I2C_Master_Write
 10052                           
 10053                           ;EEPROM_24C1025.c: 293:      I2C_Master_RepeatedStart();
 10054  13A1  2772  160A  118A   	fcall	_I2C_Master_RepeatedStart
 10055                           
 10056                           ;EEPROM_24C1025.c: 294:      I2C_Master_Write(ctrl);
 10057  13A4  1283               	bcf	3,5	;RP0=0, select bank0
 10058  13A5  0831               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10059  13A6  00A3               	movwf	I2C_Master_Write@d
 10060  13A7  01A4               	clrf	I2C_Master_Write@d+1
 10061  13A8  2762  160A  118A   	fcall	_I2C_Master_Write
 10062                           
 10063                           ;EEPROM_24C1025.c: 296:      cnt=0;
 10064  13AB  01AE               	clrf	EEPROM_24C1025_Read_Str@cnt
 10065  13AC                     l6716:
 10066                           
 10067                           ;EEPROM_24C1025.c: 298:            if(mem_add>0x1FFFF) break;
 10068  13AC  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10069  13AD  1D03               	btfss	3,2
 10070  13AE  2C3C               	goto	l6770
 10071  13AF  3002               	movlw	2
 10072  13B0  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10073  13B1  1D03               	skipz
 10074  13B2  2BB9               	goto	u6013
 10075  13B3  3000               	movlw	0
 10076  13B4  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10077  13B5  1D03               	skipz
 10078  13B6  2BB9               	goto	u6013
 10079  13B7  3000               	movlw	0
 10080  13B8  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10081  13B9                     u6013:
 10082  13B9  1803               	btfsc	3,0
 10083  13BA  2C3C               	goto	l6770
 10084                           
 10085                           ;EEPROM_24C1025.c: 299:            if((mem_add+1)%128==0)
 10086  13BB  1283               	bcf	3,5	;RP0=0, select bank0
 10087  13BC  1303               	bcf	3,6	;RP1=0, select bank0
 10088  13BD  0827               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10089  13BE  3E01               	addlw	1
 10090  13BF  397F               	andlw	127
 10091  13C0  1D03               	btfss	3,2
 10092  13C1  2C1D               	goto	l6760
 10093                           
 10094                           ;EEPROM_24C1025.c: 300:              {;EEPROM_24C1025.c: 301:              (*buffer)=I2C
      +                          _Master_Read(0);
 10095  13C2  082B               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10096  13C3  0084               	movwf	4
 10097  13C4  01A3               	clrf	I2C_Master_Read@a
 10098  13C5  01A4               	clrf	I2C_Master_Read@a+1
 10099  13C6  2450  160A  118A   	fcall	_I2C_Master_Read
 10100  13C9  0823               	movf	?_I2C_Master_Read,w
 10101  13CA  1783               	bsf	3,7	;select IRP bank2
 10102  13CB  0080               	movwf	0
 10103                           
 10104                           ;EEPROM_24C1025.c: 302:              I2C_Master_Stop();
 10105  13CC  276B  160A  118A   	fcall	_I2C_Master_Stop
 10106                           
 10107                           ;EEPROM_24C1025.c: 304:              _delay((unsigned long)((5)*(8000000/4000.0)));
 10108  13CF  300D               	movlw	13
 10109  13D0  1283               	bcf	3,5	;RP0=0, select bank0
 10110  13D1  1303               	bcf	3,6	;RP1=0, select bank0
 10111  13D2  00AD               	movwf	??_EEPROM_24C1025_Read_Str+1
 10112  13D3  30FB               	movlw	251
 10113  13D4  00AC               	movwf	??_EEPROM_24C1025_Read_Str
 10114  13D5                     u6687:
 10115  13D5  0BAC               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10116  13D6  2BD5               	goto	u6687
 10117  13D7  0BAD               	decfsz	??_EEPROM_24C1025_Read_Str+1,f
 10118  13D8  2BD5               	goto	u6687
 10119                           
 10120                           ;EEPROM_24C1025.c: 305:              mem_add++;
 10121  13D9  1283               	bcf	3,5	;RP0=0, select bank0
 10122  13DA  1303               	bcf	3,6	;RP1=0, select bank0
 10123  13DB  0AA7               	incf	EEPROM_24C1025_Read_Str@mem_add,f
 10124  13DC  1903               	skipnz
 10125  13DD  0AA8               	incf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10126  13DE  1903               	skipnz
 10127  13DF  0AA9               	incf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10128  13E0  1903               	skipnz
 10129  13E1  0AAA               	incf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10130                           
 10131                           ;EEPROM_24C1025.c: 306:              buffer++;
 10132  13E2  0AAB               	incf	EEPROM_24C1025_Read_Str@buffer,f
 10133                           
 10134                           ;EEPROM_24C1025.c: 307:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10135  13E3  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10136  13E4  1D03               	btfss	3,2
 10137  13E5  2BF2               	goto	l6734
 10138  13E6  3001               	movlw	1
 10139  13E7  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10140  13E8  1D03               	skipz
 10141  13E9  2BF0               	goto	u6033
 10142  13EA  3000               	movlw	0
 10143  13EB  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10144  13EC  1D03               	skipz
 10145  13ED  2BF0               	goto	u6033
 10146  13EE  3000               	movlw	0
 10147  13EF  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10148  13F0                     u6033:
 10149  13F0  1C03               	btfss	3,0
 10150  13F1  2BF7               	goto	l6736
 10151  13F2                     l6734:
 10152  13F2  3008               	movlw	8
 10153  13F3  1283               	bcf	3,5	;RP0=0, select bank0
 10154  13F4  1303               	bcf	3,6	;RP1=0, select bank0
 10155  13F5  00B0               	movwf	EEPROM_24C1025_Read_Str@range
 10156  13F6  2BFA               	goto	l6738
 10157  13F7                     l6736:
 10158  13F7  1283               	bcf	3,5	;RP0=0, select bank0
 10159  13F8  1303               	bcf	3,6	;RP1=0, select bank0
 10160  13F9  01B0               	clrf	EEPROM_24C1025_Read_Str@range
 10161  13FA                     l6738:
 10162                           
 10163                           ;EEPROM_24C1025.c: 308:              ctrl=chip_add;
 10164                           
 10165                           ;EEPROM_24C1025.c: 309:              ctrl<<=1;
 10166                           
 10167                           ;EEPROM_24C1025.c: 310:              ctrl |= 0xA0;
 10168                           
 10169                           ;EEPROM_24C1025.c: 311:              ctrl |= 0b00000001;
 10170                           
 10171                           ;EEPROM_24C1025.c: 312:              ctrl |= range;
 10172  13FA  27C0  160A  118A   	fcall	PL46	;call to abstracted procedure
 10173                           
 10174                           ;EEPROM_24C1025.c: 314:              I2C_Master_Start();
 10175  13FD  249A  160A  118A   	fcall	_I2C_Master_Start
 10176                           
 10177                           ;EEPROM_24C1025.c: 315:              I2C_Master_Write(ctrl & 0xFE);
 10178  1400  27FA  160A  118A   	fcall	PL74	;call to abstracted procedure
 10179  1403  2762  160A  118A   	fcall	_I2C_Master_Write
 10180                           
 10181                           ;EEPROM_24C1025.c: 316:              I2C_Master_Write(((char *)&mem_add)[1]);
 10182  1406  0828               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10183  1407  00A3               	movwf	I2C_Master_Write@d
 10184  1408  01A4               	clrf	I2C_Master_Write@d+1
 10185  1409  2762  160A  118A   	fcall	_I2C_Master_Write
 10186                           
 10187                           ;EEPROM_24C1025.c: 317:              I2C_Master_Write(((char *)&mem_add)[0]);
 10188  140C  0827               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10189  140D  00A3               	movwf	I2C_Master_Write@d
 10190  140E  01A4               	clrf	I2C_Master_Write@d+1
 10191  140F  2762  160A  118A   	fcall	_I2C_Master_Write
 10192                           
 10193                           ;EEPROM_24C1025.c: 318:              I2C_Master_RepeatedStart();
 10194  1412  2772  160A  118A   	fcall	_I2C_Master_RepeatedStart
 10195                           
 10196                           ;EEPROM_24C1025.c: 319:              I2C_Master_Write(ctrl);
 10197  1415  1283               	bcf	3,5	;RP0=0, select bank0
 10198  1416  0831               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10199  1417  00A3               	movwf	I2C_Master_Write@d
 10200  1418  01A4               	clrf	I2C_Master_Write@d+1
 10201  1419  2762  160A  118A   	fcall	_I2C_Master_Write
 10202                           
 10203                           ;EEPROM_24C1025.c: 320:              }
 10204  141C  2C35               	goto	l6768
 10205  141D                     l6760:
 10206                           
 10207                           ;EEPROM_24C1025.c: 322:              {;EEPROM_24C1025.c: 323:              (*buffer)=I2C
      +                          _Master_Read(1);
 10208  141D  082B               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10209  141E  0084               	movwf	4
 10210  141F  01A3               	clrf	I2C_Master_Read@a
 10211  1420  0AA3               	incf	I2C_Master_Read@a,f
 10212  1421  01A4               	clrf	I2C_Master_Read@a+1
 10213  1422  2450  160A  118A   	fcall	_I2C_Master_Read
 10214  1425  0823               	movf	?_I2C_Master_Read,w
 10215  1426  1783               	bsf	3,7	;select IRP bank2
 10216  1427  0080               	movwf	0
 10217                           
 10218                           ;EEPROM_24C1025.c: 324:              if((*buffer)==0)break;
 10219  1428  082B               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10220  1429  0084               	movwf	4
 10221  142A  0800               	movf	0,w
 10222  142B  1903               	btfsc	3,2
 10223  142C  2C3C               	goto	l6770
 10224                           
 10225                           ;EEPROM_24C1025.c: 325:              buffer++;
 10226  142D  0AAB               	incf	EEPROM_24C1025_Read_Str@buffer,f
 10227                           
 10228                           ;EEPROM_24C1025.c: 326:              mem_add++;
 10229  142E  0AA7               	incf	EEPROM_24C1025_Read_Str@mem_add,f
 10230  142F  1903               	skipnz
 10231  1430  0AA8               	incf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10232  1431  1903               	skipnz
 10233  1432  0AA9               	incf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10234  1433  1903               	skipnz
 10235  1434  0AAA               	incf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10236  1435                     l6768:
 10237                           
 10238                           ;EEPROM_24C1025.c: 328:        }while((cnt++)<64);
 10239  1435  082E               	movf	EEPROM_24C1025_Read_Str@cnt,w
 10240  1436  0AAE               	incf	EEPROM_24C1025_Read_Str@cnt,f
 10241  1437  00AC               	movwf	??_EEPROM_24C1025_Read_Str
 10242  1438  3040               	movlw	64
 10243  1439  022C               	subwf	??_EEPROM_24C1025_Read_Str,w
 10244  143A  1C03               	skipc
 10245  143B  2BAC               	goto	l6716
 10246  143C                     l6770:
 10247                           
 10248                           ;EEPROM_24C1025.c: 330:      I2C_Master_Read(0);
 10249  143C  1283               	bcf	3,5	;RP0=0, select bank0
 10250  143D  1303               	bcf	3,6	;RP1=0, select bank0
 10251  143E  01A3               	clrf	I2C_Master_Read@a
 10252  143F  01A4               	clrf	I2C_Master_Read@a+1
 10253  1440  2450  160A  118A   	fcall	_I2C_Master_Read
 10254                           
 10255                           ;EEPROM_24C1025.c: 331:      I2C_Master_Stop();
 10256  1443  276B  160A  118A   	fcall	_I2C_Master_Stop
 10257                           
 10258                           ;EEPROM_24C1025.c: 332:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 10259  1446  30B9               	movlw	185
 10260  1447  1283               	bcf	3,5	;RP0=0, select bank0
 10261  1448  1303               	bcf	3,6	;RP1=0, select bank0
 10262  1449  00AC               	movwf	??_EEPROM_24C1025_Read_Str
 10263  144A                     u6697:
 10264  144A  2C4B               	nop2
 10265  144B  2C4C               	nop2
 10266  144C  0BAC               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10267  144D  2C4A               	goto	u6697
 10268  144E  2C4F               	nop2
 10269  144F  0008               	return
 10270  1450                     __end_of_EEPROM_24C1025_Read_Str:
 10271  1450                     __ptext49:	
 10272 ;; *************** function _I2C_Master_Read *****************
 10273 ;; Defined at:
 10274 ;;		line 87 in file "I2C.c"
 10275 ;; Parameters:    Size  Location     Type
 10276 ;;  a               2    3[BANK0 ] unsigned short 
 10277 ;; Auto vars:     Size  Location     Type
 10278 ;;  temp            2    5[BANK0 ] unsigned short 
 10279 ;; Return value:  Size  Location     Type
 10280 ;;                  2    3[BANK0 ] unsigned short 
 10281 ;; Registers used:
 10282 ;;		wreg, status,2, status,0, pclath, cstack
 10283 ;; Tracked objects:
 10284 ;;		On entry : 300/0
 10285 ;;		On exit  : 300/0
 10286 ;;		Unchanged: 0/0
 10287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10288 ;;      Params:         0       2       0       0       0
 10289 ;;      Locals:         0       2       0       0       0
 10290 ;;      Temps:          0       0       0       0       0
 10291 ;;      Totals:         0       4       0       0       0
 10292 ;;Total ram usage:        4 bytes
 10293 ;; Hardware stack levels used: 1
 10294 ;; Hardware stack levels required when called: 2
 10295 ;; This function calls:
 10296 ;;		_I2C_Master_Wait
 10297 ;; This function is called by:
 10298 ;;		_EEPROM_24C1025_Read_Buffer
 10299 ;;		_EEPROM_24C1025_Read_Buffer_USART
 10300 ;;		_EEPROM_24C1025_Read_Str
 10301 ;; This function uses a non-reentrant model
 10302 ;;
 10303                           
 10304                           
 10305                           ;psect for function _I2C_Master_Read
 10306  1450                     _I2C_Master_Read:
 10307                           
 10308                           ;I2C.c: 87: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 88: {;I2C.c: 89:   u
      +                          nsigned short temp;;I2C.c: 90:   if(I2C_Master_Wait())SSPCON2bits.RCEN = 1;
 10309                           
 10310                           ;incstack = 0
 10311                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 10312  1450  247B  160A  118A   	fcall	_I2C_Master_Wait
 10313  1453  3A00               	xorlw	0
 10314  1454  1683               	bsf	3,5	;RP0=1, select bank1
 10315  1455  1D03               	btfss	3,2
 10316  1456  1591               	bsf	17,3	;volatile
 10317                           
 10318                           ;I2C.c: 91:   if(I2C_Master_Wait())temp = SSPBUF;
 10319  1457  247B  160A  118A   	fcall	_I2C_Master_Wait
 10320  145A  3A00               	xorlw	0
 10321  145B  1903               	skipnz
 10322  145C  2C60               	goto	l6246
 10323  145D  0813               	movf	19,w	;volatile
 10324  145E  00A5               	movwf	I2C_Master_Read@temp
 10325  145F  01A6               	clrf	I2C_Master_Read@temp+1
 10326  1460                     l6246:
 10327                           
 10328                           ;I2C.c: 92:   if(I2C_Master_Wait())
 10329  1460  247B  160A  118A   	fcall	_I2C_Master_Wait
 10330  1463  3A00               	xorlw	0
 10331  1464  1903               	skipnz
 10332  1465  2C78               	goto	l6258
 10333                           
 10334                           ;I2C.c: 93:     {;I2C.c: 94:     SSPCON2bits.ACKDT = (a)?0:1;
 10335  1466  0823               	movf	I2C_Master_Read@a,w
 10336  1467  0424               	iorwf	I2C_Master_Read@a+1,w
 10337  1468  1D03               	btfss	3,2
 10338  1469  2C6E               	goto	u5640
 10339  146A  1683               	bsf	3,5	;RP0=1, select bank1
 10340  146B  1303               	bcf	3,6	;RP1=0, select bank1
 10341  146C  1691               	bsf	17,5	;volatile
 10342  146D  2C71               	goto	l6250
 10343  146E                     u5640:
 10344  146E  1683               	bsf	3,5	;RP0=1, select bank1
 10345  146F  1303               	bcf	3,6	;RP1=0, select bank1
 10346  1470  1291               	bcf	17,5	;volatile
 10347  1471                     l6250:
 10348                           
 10349                           ;I2C.c: 95:     SSPCON2bits.ACKEN = 1;
 10350  1471  1611               	bsf	17,4	;volatile
 10351                           
 10352                           ;I2C.c: 96:     return temp;
 10353  1472  1283               	bcf	3,5	;RP0=0, select bank0
 10354  1473  0826               	movf	I2C_Master_Read@temp+1,w
 10355  1474  00A4               	movwf	?_I2C_Master_Read+1
 10356  1475  0825               	movf	I2C_Master_Read@temp,w
 10357  1476  00A3               	movwf	?_I2C_Master_Read
 10358  1477  0008               	return
 10359  1478                     l6258:
 10360                           
 10361                           ;I2C.c: 99:     {;I2C.c: 100:     return 0x00;
 10362  1478  01A3               	clrf	?_I2C_Master_Read
 10363  1479  01A4               	clrf	?_I2C_Master_Read+1
 10364  147A  0008               	return
 10365  147B                     __end_of_I2C_Master_Read:
 10366  147B                     __ptext57:	
 10367 ;; *************** function _I2C_Master_Wait *****************
 10368 ;; Defined at:
 10369 ;;		line 37 in file "I2C.c"
 10370 ;; Parameters:    Size  Location     Type
 10371 ;;		None
 10372 ;; Auto vars:     Size  Location     Type
 10373 ;;  tempo           1    2[BANK0 ] unsigned char 
 10374 ;; Return value:  Size  Location     Type
 10375 ;;                  1    wreg      unsigned char 
 10376 ;; Registers used:
 10377 ;;		wreg, status,2, status,0
 10378 ;; Tracked objects:
 10379 ;;		On entry : 0/0
 10380 ;;		On exit  : 300/0
 10381 ;;		Unchanged: 0/0
 10382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10383 ;;      Params:         0       0       0       0       0
 10384 ;;      Locals:         0       1       0       0       0
 10385 ;;      Temps:          0       2       0       0       0
 10386 ;;      Totals:         0       3       0       0       0
 10387 ;;Total ram usage:        3 bytes
 10388 ;; Hardware stack levels used: 1
 10389 ;; Hardware stack levels required when called: 1
 10390 ;; This function calls:
 10391 ;;		Nothing
 10392 ;; This function is called by:
 10393 ;;		_I2C_Master_Start
 10394 ;;		_I2C_Master_RepeatedStart
 10395 ;;		_I2C_Master_Stop
 10396 ;;		_I2C_Master_Write
 10397 ;;		_I2C_Master_Read
 10398 ;; This function uses a non-reentrant model
 10399 ;;
 10400                           
 10401                           
 10402                           ;psect for function _I2C_Master_Wait
 10403  147B                     _I2C_Master_Wait:
 10404                           
 10405                           ;I2C.c: 39:   char tempo;;I2C.c: 40:   tempo=200;
 10406                           
 10407                           ;incstack = 0
 10408                           ; Regs used in _I2C_Master_Wait: [wreg+status,2+status,0]
 10409  147B  30C8               	movlw	200
 10410  147C  1283               	bcf	3,5	;RP0=0, select bank0
 10411  147D  1303               	bcf	3,6	;RP1=0, select bank0
 10412  147E  00A2               	movwf	I2C_Master_Wait@tempo
 10413                           
 10414                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 10415  147F  2C8B               	goto	l3820
 10416  1480                     l3816:
 10417  1480  3003               	movlw	3
 10418                           
 10419                           ;I2C.c: 44:          tempo--;
 10420  1481  03A2               	decf	I2C_Master_Wait@tempo,f
 10421                           
 10422                           ;I2C.c: 47:       _delay((unsigned long)((1)*(8000000/4000.0)));
 10423  1482  1283               	bcf	3,5	;RP0=0, select bank0
 10424  1483  1303               	bcf	3,6	;RP1=0, select bank0
 10425  1484  00A1               	movwf	??_I2C_Master_Wait+1
 10426  1485  3097               	movlw	151
 10427  1486  00A0               	movwf	??_I2C_Master_Wait
 10428  1487                     u6737:
 10429  1487  0BA0               	decfsz	??_I2C_Master_Wait,f
 10430  1488  2C87               	goto	u6737
 10431  1489  0BA1               	decfsz	??_I2C_Master_Wait+1,f
 10432  148A  2C87               	goto	u6737
 10433  148B                     l3820:
 10434                           
 10435                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 10436  148B  1683               	bsf	3,5	;RP0=1, select bank1
 10437  148C  1303               	bcf	3,6	;RP1=0, select bank1
 10438  148D  1914               	btfsc	20,2	;volatile
 10439  148E  2C93               	goto	l3814
 10440  148F  0811               	movf	17,w	;volatile
 10441  1490  391F               	andlw	31
 10442  1491  1903               	btfsc	3,2
 10443  1492  2C97               	goto	l3824
 10444  1493                     l3814:
 10445                           
 10446                           ;I2C.c: 42:       {;I2C.c: 43:       if(tempo)
 10447  1493  1283               	bcf	3,5	;RP0=0, select bank0
 10448  1494  0822               	movf	I2C_Master_Wait@tempo,w
 10449  1495  1D03               	btfss	3,2
 10450  1496  2C80               	goto	l3816
 10451  1497                     l3824:
 10452                           
 10453                           ;I2C.c: 49:   return tempo ;
 10454  1497  1283               	bcf	3,5	;RP0=0, select bank0
 10455  1498  0822               	movf	I2C_Master_Wait@tempo,w
 10456  1499  0008               	return
 10457  149A                     __end_of_I2C_Master_Wait:
 10458  149A                     __ptext56:	
 10459 ;; *************** function _I2C_Master_Start *****************
 10460 ;; Defined at:
 10461 ;;		line 52 in file "I2C.c"
 10462 ;; Parameters:    Size  Location     Type
 10463 ;;		None
 10464 ;; Auto vars:     Size  Location     Type
 10465 ;;		None
 10466 ;; Return value:  Size  Location     Type
 10467 ;;                  1    wreg      void 
 10468 ;; Registers used:
 10469 ;;		wreg, status,2, status,0, pclath, cstack
 10470 ;; Tracked objects:
 10471 ;;		On entry : 300/0
 10472 ;;		On exit  : 200/0
 10473 ;;		Unchanged: 0/0
 10474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10475 ;;      Params:         0       0       0       0       0
 10476 ;;      Locals:         0       0       0       0       0
 10477 ;;      Temps:          0       0       0       0       0
 10478 ;;      Totals:         0       0       0       0       0
 10479 ;;Total ram usage:        0 bytes
 10480 ;; Hardware stack levels used: 1
 10481 ;; Hardware stack levels required when called: 2
 10482 ;; This function calls:
 10483 ;;		_I2C_Master_Wait
 10484 ;; This function is called by:
 10485 ;;		_EEPROM_24C1025_Write_Buffer
 10486 ;;		_EEPROM_24C1025_Read_Buffer
 10487 ;;		_EEPROM_24C1025_Read_Buffer_USART
 10488 ;;		_EEPROM_24C1025_Write_Str
 10489 ;;		_EEPROM_24C1025_Read_Str
 10490 ;; This function uses a non-reentrant model
 10491 ;;
 10492                           
 10493                           
 10494                           ;psect for function _I2C_Master_Start
 10495  149A                     _I2C_Master_Start:
 10496                           
 10497                           ;I2C.c: 54:   INTCONbits.GIE=0;
 10498                           
 10499                           ;incstack = 0
 10500                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 10501  149A  138B               	bcf	11,7	;volatile
 10502                           
 10503                           ;I2C.c: 55:   Delay_Led_Memory=20;
 10504  149B  3014               	movlw	20
 10505  149C  1683               	bsf	3,5	;RP0=1, select bank3
 10506  149D  1703               	bsf	3,6	;RP1=1, select bank3
 10507  149E  00AC               	movwf	_Delay_Led_Memory^(0+384)	;volatile
 10508  149F  01AD               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
 10509                           
 10510                           ;I2C.c: 56:   if(I2C_Master_Wait())
 10511  14A0  247B  160A  118A   	fcall	_I2C_Master_Wait
 10512  14A3  3A00               	xorlw	0
 10513  14A4  1903               	skipnz
 10514  14A5  0008               	return
 10515                           
 10516                           ;I2C.c: 57:     {;I2C.c: 58:     SSPCON2bits.SEN = 1;
 10517  14A6  1683               	bsf	3,5	;RP0=1, select bank1
 10518  14A7  1411               	bsf	17,0	;volatile
 10519  14A8  0008               	return
 10520  14A9                     __end_of_I2C_Master_Start:
 10521  14A9                     __ptext45:	
 10522 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 10523 ;; Defined at:
 10524 ;;		line 77 in file "EEPROM_24C1025.c"
 10525 ;; Parameters:    Size  Location     Type
 10526 ;;  chip_add        1    wreg     unsigned char 
 10527 ;;  mem_add         4   10[BANK0 ] unsigned long 
 10528 ;;  sizedata        1   14[BANK0 ] unsigned char 
 10529 ;;  data            1   15[BANK0 ] PTR unsigned char 
 10530 ;;		 -> EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), 
 10531 ;; Auto vars:     Size  Location     Type
 10532 ;;  chip_add        1   18[BANK0 ] unsigned char 
 10533 ;;  cnt             1   17[BANK0 ] unsigned char 
 10534 ;;  ctrl            1   20[BANK0 ] unsigned char 
 10535 ;;  range           1   19[BANK0 ] unsigned char 
 10536 ;;  cnt             1    0        unsigned char 
 10537 ;; Return value:  Size  Location     Type
 10538 ;;                  1    wreg      void 
 10539 ;; Registers used:
 10540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10541 ;; Tracked objects:
 10542 ;;		On entry : 300/0
 10543 ;;		On exit  : 0/0
 10544 ;;		Unchanged: 0/0
 10545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10546 ;;      Params:         0       6       0       0       0
 10547 ;;      Locals:         0       4       0       0       0
 10548 ;;      Temps:          0       1       0       0       0
 10549 ;;      Totals:         0      11       0       0       0
 10550 ;;Total ram usage:       11 bytes
 10551 ;; Hardware stack levels used: 1
 10552 ;; Hardware stack levels required when called: 3
 10553 ;; This function calls:
 10554 ;;		_I2C_Master_Read
 10555 ;;		_I2C_Master_RepeatedStart
 10556 ;;		_I2C_Master_Start
 10557 ;;		_I2C_Master_Stop
 10558 ;;		_I2C_Master_Write
 10559 ;;		_my_delay_ms_WDT
 10560 ;; This function is called by:
 10561 ;;		_EEPROM_24C1025_Read_Byte
 10562 ;;		_EEPROM_24C1025_Read_Int
 10563 ;; This function uses a non-reentrant model
 10564 ;;
 10565                           
 10566                           
 10567                           ;psect for function _EEPROM_24C1025_Read_Buffer
 10568  14A9                     _EEPROM_24C1025_Read_Buffer:
 10569                           
 10570                           ;incstack = 0
 10571                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
 10572                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 10573  14A9  00B2               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 10574                           
 10575                           ;EEPROM_24C1025.c: 84:      unsigned char ctrl;;EEPROM_24C1025.c: 86:      Delay_Led_Mem
      +                          ory=20;
 10576                           
 10577                           ;EEPROM_24C1025.c: 88:      if(mem_add>0x1FFFF) return;
 10578  14AA  27B8  160A  118A   	fcall	PL40	;call to abstracted procedure
 10579  14AD  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 10580  14AE  1D03               	btfss	3,2
 10581  14AF  0008               	return
 10582  14B0  3002               	movlw	2
 10583  14B1  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 10584  14B2  1D03               	skipz
 10585  14B3  2CBA               	goto	u5693
 10586  14B4  3000               	movlw	0
 10587  14B5  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10588  14B6  1D03               	skipz
 10589  14B7  2CBA               	goto	u5693
 10590  14B8  3000               	movlw	0
 10591  14B9  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10592  14BA                     u5693:
 10593  14BA  1803               	btfsc	3,0
 10594  14BB  0008               	return
 10595                           
 10596                           ;EEPROM_24C1025.c: 90:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10597  14BC  1283               	bcf	3,5	;RP0=0, select bank0
 10598  14BD  1303               	bcf	3,6	;RP1=0, select bank0
 10599  14BE  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 10600  14BF  1D03               	btfss	3,2
 10601  14C0  2CCD               	goto	l6288
 10602  14C1  3001               	movlw	1
 10603  14C2  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 10604  14C3  1D03               	skipz
 10605  14C4  2CCB               	goto	u5703
 10606  14C5  3000               	movlw	0
 10607  14C6  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10608  14C7  1D03               	skipz
 10609  14C8  2CCB               	goto	u5703
 10610  14C9  3000               	movlw	0
 10611  14CA  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10612  14CB                     u5703:
 10613  14CB  1C03               	btfss	3,0
 10614  14CC  2CD2               	goto	l6290
 10615  14CD                     l6288:
 10616  14CD  3008               	movlw	8
 10617  14CE  1283               	bcf	3,5	;RP0=0, select bank0
 10618  14CF  1303               	bcf	3,6	;RP1=0, select bank0
 10619  14D0  00B3               	movwf	EEPROM_24C1025_Read_Buffer@range
 10620  14D1  2CD5               	goto	l6292
 10621  14D2                     l6290:
 10622  14D2  1283               	bcf	3,5	;RP0=0, select bank0
 10623  14D3  1303               	bcf	3,6	;RP1=0, select bank0
 10624  14D4  01B3               	clrf	EEPROM_24C1025_Read_Buffer@range
 10625  14D5                     l6292:
 10626                           
 10627                           ;EEPROM_24C1025.c: 91:      ctrl=chip_add;
 10628                           
 10629                           ;EEPROM_24C1025.c: 92:      ctrl<<=1;
 10630                           
 10631                           ;EEPROM_24C1025.c: 93:      ctrl |= 0xA0;
 10632                           
 10633                           ;EEPROM_24C1025.c: 94:      ctrl |= 0b00000001;
 10634                           
 10635                           ;EEPROM_24C1025.c: 95:      ctrl |= range;
 10636  14D5  27CA  160A  118A   	fcall	PL48	;call to abstracted procedure
 10637                           
 10638                           ;EEPROM_24C1025.c: 97:      I2C_Master_Start();
 10639  14D8  249A  160A  118A   	fcall	_I2C_Master_Start
 10640                           
 10641                           ;EEPROM_24C1025.c: 98:      I2C_Master_Write(ctrl & 0xFE);
 10642  14DB  27F4  160A  118A   	fcall	PL72	;call to abstracted procedure
 10643  14DE  2762  160A  118A   	fcall	_I2C_Master_Write
 10644                           
 10645                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(((char *)&mem_add)[1]);
 10646  14E1  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10647  14E2  00A3               	movwf	I2C_Master_Write@d
 10648  14E3  01A4               	clrf	I2C_Master_Write@d+1
 10649  14E4  2762  160A  118A   	fcall	_I2C_Master_Write
 10650                           
 10651                           ;EEPROM_24C1025.c: 100:      I2C_Master_Write(((char *)&mem_add)[0]);
 10652  14E7  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10653  14E8  00A3               	movwf	I2C_Master_Write@d
 10654  14E9  01A4               	clrf	I2C_Master_Write@d+1
 10655  14EA  2762  160A  118A   	fcall	_I2C_Master_Write
 10656                           
 10657                           ;EEPROM_24C1025.c: 101:      I2C_Master_RepeatedStart();
 10658  14ED  2772  160A  118A   	fcall	_I2C_Master_RepeatedStart
 10659                           
 10660                           ;EEPROM_24C1025.c: 102:      I2C_Master_Write(ctrl);
 10661  14F0  1283               	bcf	3,5	;RP0=0, select bank0
 10662  14F1  0834               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 10663  14F2  00A3               	movwf	I2C_Master_Write@d
 10664  14F3  01A4               	clrf	I2C_Master_Write@d+1
 10665  14F4  2762  160A  118A   	fcall	_I2C_Master_Write
 10666                           
 10667                           ;EEPROM_24C1025.c: 104:      for(char cnt=0;cnt<(sizedata);cnt++)
 10668  14F7  01B1               	clrf	EEPROM_24C1025_Read_Buffer@cnt_108
 10669  14F8                     l6368:
 10670  14F8  082E               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 10671  14F9  0231               	subwf	EEPROM_24C1025_Read_Buffer@cnt_108,w
 10672  14FA  1803               	btfsc	3,0
 10673  14FB  2D7F               	goto	l6370
 10674  14FC  0064               	clrwdt	;# 
 10675                           
 10676                           ;EEPROM_24C1025.c: 107:            if(mem_add>0x1FFFF) break;
 10677  14FD  1283               	bcf	3,5	;RP0=0, select bank0
 10678  14FE  1303               	bcf	3,6	;RP1=0, select bank0
 10679  14FF  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 10680  1500  1D03               	btfss	3,2
 10681  1501  2D7F               	goto	l6370
 10682  1502  3002               	movlw	2
 10683  1503  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 10684  1504  1D03               	skipz
 10685  1505  2D0C               	goto	u5713
 10686  1506  3000               	movlw	0
 10687  1507  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10688  1508  1D03               	skipz
 10689  1509  2D0C               	goto	u5713
 10690  150A  3000               	movlw	0
 10691  150B  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10692  150C                     u5713:
 10693  150C  1803               	btfsc	3,0
 10694  150D  2D7F               	goto	l6370
 10695                           
 10696                           ;EEPROM_24C1025.c: 108:            if((mem_add+1)%128==0)
 10697  150E  1283               	bcf	3,5	;RP0=0, select bank0
 10698  150F  1303               	bcf	3,6	;RP1=0, select bank0
 10699  1510  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10700  1511  3E01               	addlw	1
 10701  1512  397F               	andlw	127
 10702  1513  1D03               	btfss	3,2
 10703  1514  2D6A               	goto	l6360
 10704                           
 10705                           ;EEPROM_24C1025.c: 109:              {;EEPROM_24C1025.c: 110:              (*data)=I2C_M
      +                          aster_Read(0);
 10706  1515  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 10707  1516  0084               	movwf	4
 10708  1517  01A3               	clrf	I2C_Master_Read@a
 10709  1518  01A4               	clrf	I2C_Master_Read@a+1
 10710  1519  2450  160A  118A   	fcall	_I2C_Master_Read
 10711  151C  0823               	movf	?_I2C_Master_Read,w
 10712  151D  1383               	bcf	3,7	;select IRP bank0
 10713  151E  0080               	movwf	0
 10714                           
 10715                           ;EEPROM_24C1025.c: 111:              I2C_Master_Stop();
 10716  151F  276B  160A  118A   	fcall	_I2C_Master_Stop
 10717                           
 10718                           ;EEPROM_24C1025.c: 113:              my_delay_ms_WDT(5);
 10719  1522  27B1  160A  118A   	fcall	PL36	;call to abstracted procedure
 10720  1525  277B  160A  118A   	fcall	_my_delay_ms_WDT
 10721                           
 10722                           ;EEPROM_24C1025.c: 114:              mem_add++;
 10723  1528  0AAA               	incf	EEPROM_24C1025_Read_Buffer@mem_add,f
 10724  1529  1903               	skipnz
 10725  152A  0AAB               	incf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 10726  152B  1903               	skipnz
 10727  152C  0AAC               	incf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 10728  152D  1903               	skipnz
 10729  152E  0AAD               	incf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 10730                           
 10731                           ;EEPROM_24C1025.c: 115:              data++;
 10732  152F  0AAF               	incf	EEPROM_24C1025_Read_Buffer@data,f
 10733                           
 10734                           ;EEPROM_24C1025.c: 116:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10735  1530  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 10736  1531  1D03               	btfss	3,2
 10737  1532  2D3F               	goto	l6334
 10738  1533  3001               	movlw	1
 10739  1534  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 10740  1535  1D03               	skipz
 10741  1536  2D3D               	goto	u5733
 10742  1537  3000               	movlw	0
 10743  1538  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10744  1539  1D03               	skipz
 10745  153A  2D3D               	goto	u5733
 10746  153B  3000               	movlw	0
 10747  153C  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10748  153D                     u5733:
 10749  153D  1C03               	btfss	3,0
 10750  153E  2D44               	goto	l6336
 10751  153F                     l6334:
 10752  153F  3008               	movlw	8
 10753  1540  1283               	bcf	3,5	;RP0=0, select bank0
 10754  1541  1303               	bcf	3,6	;RP1=0, select bank0
 10755  1542  00B3               	movwf	EEPROM_24C1025_Read_Buffer@range
 10756  1543  2D47               	goto	l6338
 10757  1544                     l6336:
 10758  1544  1283               	bcf	3,5	;RP0=0, select bank0
 10759  1545  1303               	bcf	3,6	;RP1=0, select bank0
 10760  1546  01B3               	clrf	EEPROM_24C1025_Read_Buffer@range
 10761  1547                     l6338:
 10762                           
 10763                           ;EEPROM_24C1025.c: 117:              ctrl=chip_add;
 10764                           
 10765                           ;EEPROM_24C1025.c: 118:              ctrl<<=1;
 10766                           
 10767                           ;EEPROM_24C1025.c: 119:              ctrl |= 0xA0;
 10768                           
 10769                           ;EEPROM_24C1025.c: 120:              ctrl |= 0b00000001;
 10770                           
 10771                           ;EEPROM_24C1025.c: 121:              ctrl |= range;
 10772  1547  27CA  160A  118A   	fcall	PL48	;call to abstracted procedure
 10773                           
 10774                           ;EEPROM_24C1025.c: 123:              I2C_Master_Start();
 10775  154A  249A  160A  118A   	fcall	_I2C_Master_Start
 10776                           
 10777                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl & 0xFE);
 10778  154D  27F4  160A  118A   	fcall	PL72	;call to abstracted procedure
 10779  1550  2762  160A  118A   	fcall	_I2C_Master_Write
 10780                           
 10781                           ;EEPROM_24C1025.c: 125:              I2C_Master_Write(((char *)&mem_add)[1]);
 10782  1553  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10783  1554  00A3               	movwf	I2C_Master_Write@d
 10784  1555  01A4               	clrf	I2C_Master_Write@d+1
 10785  1556  2762  160A  118A   	fcall	_I2C_Master_Write
 10786                           
 10787                           ;EEPROM_24C1025.c: 126:              I2C_Master_Write(((char *)&mem_add)[0]);
 10788  1559  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10789  155A  00A3               	movwf	I2C_Master_Write@d
 10790  155B  01A4               	clrf	I2C_Master_Write@d+1
 10791  155C  2762  160A  118A   	fcall	_I2C_Master_Write
 10792                           
 10793                           ;EEPROM_24C1025.c: 127:              I2C_Master_RepeatedStart();
 10794  155F  2772  160A  118A   	fcall	_I2C_Master_RepeatedStart
 10795                           
 10796                           ;EEPROM_24C1025.c: 128:              I2C_Master_Write(ctrl);
 10797  1562  1283               	bcf	3,5	;RP0=0, select bank0
 10798  1563  0834               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 10799  1564  00A3               	movwf	I2C_Master_Write@d
 10800  1565  01A4               	clrf	I2C_Master_Write@d+1
 10801  1566  2762  160A  118A   	fcall	_I2C_Master_Write
 10802                           
 10803                           ;EEPROM_24C1025.c: 129:              }
 10804  1569  2D7D               	goto	l6366
 10805  156A                     l6360:
 10806                           
 10807                           ;EEPROM_24C1025.c: 131:              {;EEPROM_24C1025.c: 132:              (*data)=I2C_M
      +                          aster_Read(1);
 10808  156A  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 10809  156B  0084               	movwf	4
 10810  156C  01A3               	clrf	I2C_Master_Read@a
 10811  156D  0AA3               	incf	I2C_Master_Read@a,f
 10812  156E  01A4               	clrf	I2C_Master_Read@a+1
 10813  156F  2450  160A  118A   	fcall	_I2C_Master_Read
 10814  1572  0823               	movf	?_I2C_Master_Read,w
 10815  1573  1383               	bcf	3,7	;select IRP bank0
 10816  1574  0080               	movwf	0
 10817                           
 10818                           ;EEPROM_24C1025.c: 133:              data++;
 10819  1575  0AAF               	incf	EEPROM_24C1025_Read_Buffer@data,f
 10820                           
 10821                           ;EEPROM_24C1025.c: 134:              mem_add++;
 10822  1576  0AAA               	incf	EEPROM_24C1025_Read_Buffer@mem_add,f
 10823  1577  1903               	skipnz
 10824  1578  0AAB               	incf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 10825  1579  1903               	skipnz
 10826  157A  0AAC               	incf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 10827  157B  1903               	skipnz
 10828  157C  0AAD               	incf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 10829  157D                     l6366:
 10830                           
 10831                           ;EEPROM_24C1025.c: 136:         }
 10832  157D  0AB1               	incf	EEPROM_24C1025_Read_Buffer@cnt_108,f
 10833  157E  2CF8               	goto	l6368
 10834  157F                     l6370:
 10835                           
 10836                           ;EEPROM_24C1025.c: 137:         I2C_Master_Read(0);
 10837  157F  1283               	bcf	3,5	;RP0=0, select bank0
 10838  1580  1303               	bcf	3,6	;RP1=0, select bank0
 10839  1581  01A3               	clrf	I2C_Master_Read@a
 10840  1582  01A4               	clrf	I2C_Master_Read@a+1
 10841  1583  2450  160A  118A   	fcall	_I2C_Master_Read
 10842                           
 10843                           ;EEPROM_24C1025.c: 138:         I2C_Master_Stop();
 10844  1586  276B  160A  118A   	fcall	_I2C_Master_Stop
 10845                           
 10846                           ;EEPROM_24C1025.c: 139:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 10847  1589  30B9               	movlw	185
 10848  158A  1283               	bcf	3,5	;RP0=0, select bank0
 10849  158B  1303               	bcf	3,6	;RP1=0, select bank0
 10850  158C  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10851  158D                     u6707:
 10852  158D  2D8E               	nop2
 10853  158E  2D8F               	nop2
 10854  158F  0BB0               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 10855  1590  2D8D               	goto	u6707
 10856  1591  2D92               	nop2
 10857  1592  0008               	return
 10858  1593                     __end_of_EEPROM_24C1025_Read_Buffer:
 10859  1593                     __ptext46:	
 10860 ;; *************** function _EEPROM_24C1025_Read_Buffer_USART *****************
 10861 ;; Defined at:
 10862 ;;		line 148 in file "EEPROM_24C1025.c"
 10863 ;; Parameters:    Size  Location     Type
 10864 ;;  chip_add        1    wreg     unsigned char 
 10865 ;;  mem_add         4    7[BANK0 ] unsigned long 
 10866 ;;  sizedata        1   11[BANK0 ] unsigned char 
 10867 ;;  data            1   12[BANK0 ] PTR unsigned char 
 10868 ;;		 -> buffer(33), 
 10869 ;; Auto vars:     Size  Location     Type
 10870 ;;  chip_add        1   15[BANK0 ] unsigned char 
 10871 ;;  cnt             1   14[BANK0 ] unsigned char 
 10872 ;;  ctrl            1   17[BANK0 ] unsigned char 
 10873 ;;  range           1   16[BANK0 ] unsigned char 
 10874 ;;  cnt             1    0        unsigned char 
 10875 ;; Return value:  Size  Location     Type
 10876 ;;                  1    wreg      void 
 10877 ;; Registers used:
 10878 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10879 ;; Tracked objects:
 10880 ;;		On entry : 300/300
 10881 ;;		On exit  : 0/0
 10882 ;;		Unchanged: 0/0
 10883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10884 ;;      Params:         0       6       0       0       0
 10885 ;;      Locals:         0       4       0       0       0
 10886 ;;      Temps:          0       1       0       0       0
 10887 ;;      Totals:         0      11       0       0       0
 10888 ;;Total ram usage:       11 bytes
 10889 ;; Hardware stack levels used: 1
 10890 ;; Hardware stack levels required when called: 3
 10891 ;; This function calls:
 10892 ;;		_I2C_Master_Read
 10893 ;;		_I2C_Master_RepeatedStart
 10894 ;;		_I2C_Master_Start
 10895 ;;		_I2C_Master_Stop
 10896 ;;		_I2C_Master_Write
 10897 ;;		_USART_putc
 10898 ;; This function is called by:
 10899 ;;		_Decodify_Command
 10900 ;; This function uses a non-reentrant model
 10901 ;;
 10902                           
 10903                           
 10904                           ;psect for function _EEPROM_24C1025_Read_Buffer_USART
 10905  1593                     _EEPROM_24C1025_Read_Buffer_USART:
 10906                           
 10907                           ;incstack = 0
 10908                           ; Regs used in _EEPROM_24C1025_Read_Buffer_USART: [wreg-fsr0h+status,2+status,0+pclath+c
      +                          stack]
 10909                           ;EEPROM_24C1025_Read_Buffer_USART@chip_add stored from wreg
 10910  1593  1283               	bcf	3,5	;RP0=0, select bank0
 10911  1594  1303               	bcf	3,6	;RP1=0, select bank0
 10912  1595  00AF               	movwf	EEPROM_24C1025_Read_Buffer_USART@chip_add
 10913                           
 10914                           ;EEPROM_24C1025.c: 155:      unsigned char ctrl;;EEPROM_24C1025.c: 157:      Delay_Led_M
      +                          emory=20;
 10915                           
 10916                           ;EEPROM_24C1025.c: 159:      if(mem_add>0x1FFFF) return;
 10917  1596  27B8  160A  118A   	fcall	PL40	;call to abstracted procedure
 10918  1599  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 10919  159A  1D03               	btfss	3,2
 10920  159B  0008               	return
 10921  159C  3002               	movlw	2
 10922  159D  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 10923  159E  1D03               	skipz
 10924  159F  2DA6               	goto	u5873
 10925  15A0  3000               	movlw	0
 10926  15A1  0228               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 10927  15A2  1D03               	skipz
 10928  15A3  2DA6               	goto	u5873
 10929  15A4  3000               	movlw	0
 10930  15A5  0227               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 10931  15A6                     u5873:
 10932  15A6  1803               	btfsc	3,0
 10933  15A7  0008               	return
 10934                           
 10935                           ;EEPROM_24C1025.c: 161:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10936  15A8  1283               	bcf	3,5	;RP0=0, select bank0
 10937  15A9  1303               	bcf	3,6	;RP1=0, select bank0
 10938  15AA  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 10939  15AB  1D03               	btfss	3,2
 10940  15AC  2DB9               	goto	l6520
 10941  15AD  3001               	movlw	1
 10942  15AE  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 10943  15AF  1D03               	skipz
 10944  15B0  2DB7               	goto	u5883
 10945  15B1  3000               	movlw	0
 10946  15B2  0228               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 10947  15B3  1D03               	skipz
 10948  15B4  2DB7               	goto	u5883
 10949  15B5  3000               	movlw	0
 10950  15B6  0227               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 10951  15B7                     u5883:
 10952  15B7  1C03               	btfss	3,0
 10953  15B8  2DBE               	goto	l6522
 10954  15B9                     l6520:
 10955  15B9  3008               	movlw	8
 10956  15BA  1283               	bcf	3,5	;RP0=0, select bank0
 10957  15BB  1303               	bcf	3,6	;RP1=0, select bank0
 10958  15BC  00B0               	movwf	EEPROM_24C1025_Read_Buffer_USART@range
 10959  15BD  2DC1               	goto	l6524
 10960  15BE                     l6522:
 10961  15BE  1283               	bcf	3,5	;RP0=0, select bank0
 10962  15BF  1303               	bcf	3,6	;RP1=0, select bank0
 10963  15C0  01B0               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 10964  15C1                     l6524:
 10965                           
 10966                           ;EEPROM_24C1025.c: 162:      ctrl=chip_add;
 10967                           
 10968                           ;EEPROM_24C1025.c: 163:      ctrl<<=1;
 10969                           
 10970                           ;EEPROM_24C1025.c: 164:      ctrl |= 0xA0;
 10971                           
 10972                           ;EEPROM_24C1025.c: 165:      ctrl |= 0b00000001;
 10973                           
 10974                           ;EEPROM_24C1025.c: 166:      ctrl |= range;
 10975  15C1  27D4  160A  118A   	fcall	PL50	;call to abstracted procedure
 10976                           
 10977                           ;EEPROM_24C1025.c: 168:      I2C_Master_Start();
 10978  15C4  249A  160A  118A   	fcall	_I2C_Master_Start
 10979                           
 10980                           ;EEPROM_24C1025.c: 169:      I2C_Master_Write(ctrl & 0xFE);
 10981  15C7  27EE  160A  118A   	fcall	PL70	;call to abstracted procedure
 10982  15CA  2762  160A  118A   	fcall	_I2C_Master_Write
 10983                           
 10984                           ;EEPROM_24C1025.c: 170:      I2C_Master_Write(((char *)&mem_add)[1]);
 10985  15CD  0828               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 10986  15CE  00A3               	movwf	I2C_Master_Write@d
 10987  15CF  01A4               	clrf	I2C_Master_Write@d+1
 10988  15D0  2762  160A  118A   	fcall	_I2C_Master_Write
 10989                           
 10990                           ;EEPROM_24C1025.c: 171:      I2C_Master_Write(((char *)&mem_add)[0]);
 10991  15D3  0827               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 10992  15D4  00A3               	movwf	I2C_Master_Write@d
 10993  15D5  01A4               	clrf	I2C_Master_Write@d+1
 10994  15D6  2762  160A  118A   	fcall	_I2C_Master_Write
 10995                           
 10996                           ;EEPROM_24C1025.c: 172:      I2C_Master_RepeatedStart();
 10997  15D9  2772  160A  118A   	fcall	_I2C_Master_RepeatedStart
 10998                           
 10999                           ;EEPROM_24C1025.c: 173:      I2C_Master_Write(ctrl);
 11000  15DC  1283               	bcf	3,5	;RP0=0, select bank0
 11001  15DD  0831               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11002  15DE  00A3               	movwf	I2C_Master_Write@d
 11003  15DF  01A4               	clrf	I2C_Master_Write@d+1
 11004  15E0  2762  160A  118A   	fcall	_I2C_Master_Write
 11005                           
 11006                           ;EEPROM_24C1025.c: 175:      for(char cnt=0;cnt<(sizedata);cnt++)
 11007  15E3  01AE               	clrf	EEPROM_24C1025_Read_Buffer_USART@cnt_117
 11008  15E4                     l6596:
 11009  15E4  082B               	movf	EEPROM_24C1025_Read_Buffer_USART@sizedata,w
 11010  15E5  022E               	subwf	EEPROM_24C1025_Read_Buffer_USART@cnt_117,w
 11011  15E6  1803               	btfsc	3,0
 11012  15E7  2E73               	goto	l6598
 11013  15E8  0064               	clrwdt	;# 
 11014                           
 11015                           ;EEPROM_24C1025.c: 178:            if(mem_add>0x1FFFF) break;
 11016  15E9  1283               	bcf	3,5	;RP0=0, select bank0
 11017  15EA  1303               	bcf	3,6	;RP1=0, select bank0
 11018  15EB  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11019  15EC  1D03               	btfss	3,2
 11020  15ED  2E73               	goto	l6598
 11021  15EE  3002               	movlw	2
 11022  15EF  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11023  15F0  1D03               	skipz
 11024  15F1  2DF8               	goto	u5893
 11025  15F2  3000               	movlw	0
 11026  15F3  0228               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11027  15F4  1D03               	skipz
 11028  15F5  2DF8               	goto	u5893
 11029  15F6  3000               	movlw	0
 11030  15F7  0227               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11031  15F8                     u5893:
 11032  15F8  1803               	btfsc	3,0
 11033  15F9  2E73               	goto	l6598
 11034                           
 11035                           ;EEPROM_24C1025.c: 179:            if((mem_add+1)%128==0)
 11036  15FA  1283               	bcf	3,5	;RP0=0, select bank0
 11037  15FB  1303               	bcf	3,6	;RP1=0, select bank0
 11038  15FC  0827               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11039  15FD  3E01               	addlw	1
 11040  15FE  397F               	andlw	127
 11041  15FF  1D03               	btfss	3,2
 11042  1600  2E58               	goto	l6590
 11043                           
 11044                           ;EEPROM_24C1025.c: 180:              {;EEPROM_24C1025.c: 181:              (*data)=I2C_M
      +                          aster_Read(0);
 11045  1601  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11046  1602  0084               	movwf	4
 11047  1603  01A3               	clrf	I2C_Master_Read@a
 11048  1604  01A4               	clrf	I2C_Master_Read@a+1
 11049  1605  2450  160A  118A   	fcall	_I2C_Master_Read
 11050  1608  0823               	movf	?_I2C_Master_Read,w
 11051  1609  1783               	bsf	3,7	;select IRP bank2
 11052  160A  0080               	movwf	0
 11053                           
 11054                           ;EEPROM_24C1025.c: 182:              I2C_Master_Stop();
 11055  160B  276B               	fcall	_I2C_Master_Stop
 11056                           
 11057                           ;EEPROM_24C1025.c: 183:              USART_putc(*data);
 11058  160C  1283               	bcf	3,5	;RP0=0, select bank0
 11059  160D  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11060  160E  0084               	movwf	4
 11061  160F  1783               	bsf	3,7	;select IRP bank2
 11062  1610  0800               	movf	0,w
 11063  1611  120A  118A  2349  160A  118A  	fcall	_USART_putc
 11064                           
 11065                           ;EEPROM_24C1025.c: 186:              mem_add++;
 11066  1616  1283               	bcf	3,5	;RP0=0, select bank0
 11067  1617  0AA7               	incf	EEPROM_24C1025_Read_Buffer_USART@mem_add,f
 11068  1618  1903               	skipnz
 11069  1619  0AA8               	incf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,f
 11070  161A  1903               	skipnz
 11071  161B  0AA9               	incf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,f
 11072  161C  1903               	skipnz
 11073  161D  0AAA               	incf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,f
 11074                           
 11075                           ;EEPROM_24C1025.c: 188:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11076  161E  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11077  161F  1D03               	btfss	3,2
 11078  1620  2E2D               	goto	l6564
 11079  1621  3001               	movlw	1
 11080  1622  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11081  1623  1D03               	skipz
 11082  1624  2E2B               	goto	u5913
 11083  1625  3000               	movlw	0
 11084  1626  0228               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11085  1627  1D03               	skipz
 11086  1628  2E2B               	goto	u5913
 11087  1629  3000               	movlw	0
 11088  162A  0227               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11089  162B                     u5913:
 11090  162B  1C03               	btfss	3,0
 11091  162C  2E32               	goto	l6566
 11092  162D                     l6564:
 11093  162D  3008               	movlw	8
 11094  162E  1283               	bcf	3,5	;RP0=0, select bank0
 11095  162F  1303               	bcf	3,6	;RP1=0, select bank0
 11096  1630  00B0               	movwf	EEPROM_24C1025_Read_Buffer_USART@range
 11097  1631  2E35               	goto	l6568
 11098  1632                     l6566:
 11099  1632  1283               	bcf	3,5	;RP0=0, select bank0
 11100  1633  1303               	bcf	3,6	;RP1=0, select bank0
 11101  1634  01B0               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11102  1635                     l6568:
 11103                           
 11104                           ;EEPROM_24C1025.c: 189:              ctrl=chip_add;
 11105                           
 11106                           ;EEPROM_24C1025.c: 190:              ctrl<<=1;
 11107                           
 11108                           ;EEPROM_24C1025.c: 191:              ctrl |= 0xA0;
 11109                           
 11110                           ;EEPROM_24C1025.c: 192:              ctrl |= 0b00000001;
 11111                           
 11112                           ;EEPROM_24C1025.c: 193:              ctrl |= range;
 11113  1635  27D4  160A  118A   	fcall	PL50	;call to abstracted procedure
 11114                           
 11115                           ;EEPROM_24C1025.c: 195:              I2C_Master_Start();
 11116  1638  249A  160A  118A   	fcall	_I2C_Master_Start
 11117                           
 11118                           ;EEPROM_24C1025.c: 196:              I2C_Master_Write(ctrl & 0xFE);
 11119  163B  27EE  160A  118A   	fcall	PL70	;call to abstracted procedure
 11120  163E  2762  160A  118A   	fcall	_I2C_Master_Write
 11121                           
 11122                           ;EEPROM_24C1025.c: 197:              I2C_Master_Write(((char *)&mem_add)[1]);
 11123  1641  0828               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11124  1642  00A3               	movwf	I2C_Master_Write@d
 11125  1643  01A4               	clrf	I2C_Master_Write@d+1
 11126  1644  2762  160A  118A   	fcall	_I2C_Master_Write
 11127                           
 11128                           ;EEPROM_24C1025.c: 198:              I2C_Master_Write(((char *)&mem_add)[0]);
 11129  1647  0827               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11130  1648  00A3               	movwf	I2C_Master_Write@d
 11131  1649  01A4               	clrf	I2C_Master_Write@d+1
 11132  164A  2762  160A  118A   	fcall	_I2C_Master_Write
 11133                           
 11134                           ;EEPROM_24C1025.c: 199:              I2C_Master_RepeatedStart();
 11135  164D  2772  160A  118A   	fcall	_I2C_Master_RepeatedStart
 11136                           
 11137                           ;EEPROM_24C1025.c: 200:              I2C_Master_Write(ctrl);
 11138  1650  1283               	bcf	3,5	;RP0=0, select bank0
 11139  1651  0831               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11140  1652  00A3               	movwf	I2C_Master_Write@d
 11141  1653  01A4               	clrf	I2C_Master_Write@d+1
 11142  1654  2762  160A  118A   	fcall	_I2C_Master_Write
 11143                           
 11144                           ;EEPROM_24C1025.c: 201:              }
 11145  1657  2E71               	goto	l6594
 11146  1658                     l6590:
 11147                           
 11148                           ;EEPROM_24C1025.c: 203:              {;EEPROM_24C1025.c: 204:              (*data)=I2C_M
      +                          aster_Read(1);
 11149  1658  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11150  1659  0084               	movwf	4
 11151  165A  01A3               	clrf	I2C_Master_Read@a
 11152  165B  0AA3               	incf	I2C_Master_Read@a,f
 11153  165C  01A4               	clrf	I2C_Master_Read@a+1
 11154  165D  2450               	fcall	_I2C_Master_Read
 11155  165E  0823               	movf	?_I2C_Master_Read,w
 11156  165F  1783               	bsf	3,7	;select IRP bank2
 11157  1660  0080               	movwf	0
 11158                           
 11159                           ;EEPROM_24C1025.c: 205:              USART_putc(*data);
 11160  1661  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11161  1662  0084               	movwf	4
 11162  1663  0800               	movf	0,w
 11163  1664  120A  118A  2349  160A  118A  	fcall	_USART_putc
 11164                           
 11165                           ;EEPROM_24C1025.c: 207:              mem_add++;
 11166  1669  1283               	bcf	3,5	;RP0=0, select bank0
 11167  166A  0AA7               	incf	EEPROM_24C1025_Read_Buffer_USART@mem_add,f
 11168  166B  1903               	skipnz
 11169  166C  0AA8               	incf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,f
 11170  166D  1903               	skipnz
 11171  166E  0AA9               	incf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,f
 11172  166F  1903               	skipnz
 11173  1670  0AAA               	incf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,f
 11174  1671                     l6594:
 11175                           
 11176                           ;EEPROM_24C1025.c: 209:         }
 11177  1671  0AAE               	incf	EEPROM_24C1025_Read_Buffer_USART@cnt_117,f
 11178  1672  2DE4               	goto	l6596
 11179  1673                     l6598:
 11180                           
 11181                           ;EEPROM_24C1025.c: 210:         I2C_Master_Read(0);
 11182  1673  1283               	bcf	3,5	;RP0=0, select bank0
 11183  1674  1303               	bcf	3,6	;RP1=0, select bank0
 11184  1675  01A3               	clrf	I2C_Master_Read@a
 11185  1676  01A4               	clrf	I2C_Master_Read@a+1
 11186  1677  2450  160A  118A   	fcall	_I2C_Master_Read
 11187                           
 11188                           ;EEPROM_24C1025.c: 211:         I2C_Master_Stop();
 11189  167A  276B  160A  118A   	fcall	_I2C_Master_Stop
 11190                           
 11191                           ;EEPROM_24C1025.c: 212:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 11192  167D  30B9               	movlw	185
 11193  167E  1283               	bcf	3,5	;RP0=0, select bank0
 11194  167F  1303               	bcf	3,6	;RP1=0, select bank0
 11195  1680  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11196  1681                     u6717:
 11197  1681  2E82               	nop2
 11198  1682  2E83               	nop2
 11199  1683  0BAD               	decfsz	??_EEPROM_24C1025_Read_Buffer_USART,f
 11200  1684  2E81               	goto	u6717
 11201  1685  2E86               	nop2
 11202  1686  0008               	return
 11203  1687                     __end_of_EEPROM_24C1025_Read_Buffer_USART:
 11204  1687                     __ptext52:	
 11205 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 11206 ;; Defined at:
 11207 ;;		line 15 in file "EEPROM_24C1025.c"
 11208 ;; Parameters:    Size  Location     Type
 11209 ;;  chip_add        1    wreg     unsigned char 
 11210 ;;  mem_add         4   10[BANK0 ] unsigned long 
 11211 ;;  sizedata        1   14[BANK0 ] unsigned char 
 11212 ;;  data            2   15[BANK0 ] PTR unsigned char 
 11213 ;;		 -> usart_protocol.value(52), usart_protocol(58), EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(
      +1), 
 11214 ;; Auto vars:     Size  Location     Type
 11215 ;;  chip_add        1   20[BANK0 ] unsigned char 
 11216 ;;  ctrl            1   22[BANK0 ] unsigned char 
 11217 ;;  range           1   21[BANK0 ] unsigned char 
 11218 ;;  count           1   19[BANK0 ] unsigned char 
 11219 ;; Return value:  Size  Location     Type
 11220 ;;                  1    wreg      void 
 11221 ;; Registers used:
 11222 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11223 ;; Tracked objects:
 11224 ;;		On entry : 0/300
 11225 ;;		On exit  : 0/0
 11226 ;;		Unchanged: 0/0
 11227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11228 ;;      Params:         0       7       0       0       0
 11229 ;;      Locals:         0       4       0       0       0
 11230 ;;      Temps:          0       2       0       0       0
 11231 ;;      Totals:         0      13       0       0       0
 11232 ;;Total ram usage:       13 bytes
 11233 ;; Hardware stack levels used: 1
 11234 ;; Hardware stack levels required when called: 3
 11235 ;; This function calls:
 11236 ;;		_I2C_Master_Start
 11237 ;;		_I2C_Master_Stop
 11238 ;;		_I2C_Master_Write
 11239 ;;		_my_delay_ms_WDT
 11240 ;; This function is called by:
 11241 ;;		_EEPROM_24C1025_Write_Byte
 11242 ;;		_EEPROM_24C1025_Write_Int
 11243 ;;		_Decodify_Command
 11244 ;; This function uses a non-reentrant model
 11245 ;;
 11246                           
 11247                           
 11248                           ;psect for function _EEPROM_24C1025_Write_Buffer
 11249  1687                     _EEPROM_24C1025_Write_Buffer:
 11250                           
 11251                           ;incstack = 0
 11252                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
 11253                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 11254  1687  1283               	bcf	3,5	;RP0=0, select bank0
 11255  1688  1303               	bcf	3,6	;RP1=0, select bank0
 11256  1689  00B4               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 11257                           
 11258                           ;EEPROM_24C1025.c: 21:      unsigned char ctrl;;EEPROM_24C1025.c: 22:      unsigned char
      +                           count;;EEPROM_24C1025.c: 24:      Delay_Led_Memory=20;
 11259                           
 11260                           ;EEPROM_24C1025.c: 26:      if(mem_add>0x1FFFF) return;
 11261  168A  27B8  160A  118A   	fcall	PL40	;call to abstracted procedure
 11262  168D  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11263  168E  1D03               	btfss	3,2
 11264  168F  0008               	return
 11265  1690  3002               	movlw	2
 11266  1691  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11267  1692  1D03               	skipz
 11268  1693  2E9A               	goto	u5543
 11269  1694  3000               	movlw	0
 11270  1695  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11271  1696  1D03               	skipz
 11272  1697  2E9A               	goto	u5543
 11273  1698  3000               	movlw	0
 11274  1699  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11275  169A                     u5543:
 11276  169A  1803               	btfsc	3,0
 11277  169B  0008               	return
 11278                           
 11279                           ;EEPROM_24C1025.c: 28:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11280  169C  1283               	bcf	3,5	;RP0=0, select bank0
 11281  169D  1303               	bcf	3,6	;RP1=0, select bank0
 11282  169E  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11283  169F  1D03               	btfss	3,2
 11284  16A0  2EAD               	goto	l6158
 11285  16A1  3001               	movlw	1
 11286  16A2  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11287  16A3  1D03               	skipz
 11288  16A4  2EAB               	goto	u5553
 11289  16A5  3000               	movlw	0
 11290  16A6  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11291  16A7  1D03               	skipz
 11292  16A8  2EAB               	goto	u5553
 11293  16A9  3000               	movlw	0
 11294  16AA  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11295  16AB                     u5553:
 11296  16AB  1C03               	btfss	3,0
 11297  16AC  2EB2               	goto	l6160
 11298  16AD                     l6158:
 11299  16AD  3008               	movlw	8
 11300  16AE  1283               	bcf	3,5	;RP0=0, select bank0
 11301  16AF  1303               	bcf	3,6	;RP1=0, select bank0
 11302  16B0  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 11303  16B1  2EB5               	goto	l6162
 11304  16B2                     l6160:
 11305  16B2  1283               	bcf	3,5	;RP0=0, select bank0
 11306  16B3  1303               	bcf	3,6	;RP1=0, select bank0
 11307  16B4  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 11308  16B5                     l6162:
 11309                           
 11310                           ;EEPROM_24C1025.c: 29:      ctrl=chip_add;
 11311                           
 11312                           ;EEPROM_24C1025.c: 30:      ctrl<<=1;
 11313                           
 11314                           ;EEPROM_24C1025.c: 31:      ctrl |= 0xA0;
 11315                           
 11316                           ;EEPROM_24C1025.c: 32:      ctrl |= range;
 11317  16B5  27DE  160A  118A   	fcall	PL56	;call to abstracted procedure
 11318                           
 11319                           ;EEPROM_24C1025.c: 34:      I2C_Master_Start();
 11320  16B8  249A  160A  118A   	fcall	_I2C_Master_Start
 11321                           
 11322                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(ctrl);
 11323  16BB  1283               	bcf	3,5	;RP0=0, select bank0
 11324  16BC  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 11325  16BD  00A3               	movwf	I2C_Master_Write@d
 11326  16BE  01A4               	clrf	I2C_Master_Write@d+1
 11327  16BF  2762  160A  118A   	fcall	_I2C_Master_Write
 11328                           
 11329                           ;EEPROM_24C1025.c: 36:      I2C_Master_Write(((char *)&mem_add)[1]);
 11330  16C2  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11331  16C3  00A3               	movwf	I2C_Master_Write@d
 11332  16C4  01A4               	clrf	I2C_Master_Write@d+1
 11333  16C5  2762  160A  118A   	fcall	_I2C_Master_Write
 11334                           
 11335                           ;EEPROM_24C1025.c: 37:      I2C_Master_Write(((char *)&mem_add)[0]);
 11336  16C8  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11337  16C9  00A3               	movwf	I2C_Master_Write@d
 11338  16CA  01A4               	clrf	I2C_Master_Write@d+1
 11339  16CB  2762  160A  118A   	fcall	_I2C_Master_Write
 11340                           
 11341                           ;EEPROM_24C1025.c: 38:      for(count=0;count<(sizedata-1);count++)
 11342  16CE  01B3               	clrf	EEPROM_24C1025_Write_Buffer@count
 11343  16CF                     l6226:
 11344  16CF  082E               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 11345  16D0  3EFF               	addlw	255
 11346  16D1  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11347  16D2  30FF               	movlw	255
 11348  16D3  1803               	skipnc
 11349  16D4  3000               	movlw	0
 11350  16D5  00B2               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 11351  16D6  3A80               	xorlw	128
 11352  16D7  3C80               	sublw	128
 11353  16D8  1D03               	skipz
 11354  16D9  2EDC               	goto	u5595
 11355  16DA  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11356  16DB  0233               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 11357  16DC                     u5595:
 11358  16DC  1803               	btfsc	3,0
 11359  16DD  2F53               	goto	l6228
 11360  16DE  0064               	clrwdt	;# 
 11361                           
 11362                           ;EEPROM_24C1025.c: 41:           if(mem_add>0x1FFFF) return;
 11363  16DF  1283               	bcf	3,5	;RP0=0, select bank0
 11364  16E0  1303               	bcf	3,6	;RP1=0, select bank0
 11365  16E1  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11366  16E2  1D03               	btfss	3,2
 11367  16E3  0008               	return
 11368  16E4  3002               	movlw	2
 11369  16E5  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11370  16E6  1D03               	skipz
 11371  16E7  2EEE               	goto	u5563
 11372  16E8  3000               	movlw	0
 11373  16E9  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11374  16EA  1D03               	skipz
 11375  16EB  2EEE               	goto	u5563
 11376  16EC  3000               	movlw	0
 11377  16ED  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11378  16EE                     u5563:
 11379  16EE  1803               	btfsc	3,0
 11380  16EF  0008               	return
 11381                           
 11382                           ;EEPROM_24C1025.c: 42:           if((mem_add+1)%128==0)
 11383  16F0  1283               	bcf	3,5	;RP0=0, select bank0
 11384  16F1  1303               	bcf	3,6	;RP1=0, select bank0
 11385  16F2  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11386  16F3  3E01               	addlw	1
 11387  16F4  397F               	andlw	127
 11388  16F5  1D03               	btfss	3,2
 11389  16F6  2F41               	goto	l6218
 11390                           
 11391                           ;EEPROM_24C1025.c: 43:             {;EEPROM_24C1025.c: 44:             I2C_Master_Write(
      +                          *data);
 11392  16F7  27A8  160A  118A   	fcall	PL30	;call to abstracted procedure
 11393  16FA  2762  160A  118A   	fcall	_I2C_Master_Write
 11394                           
 11395                           ;EEPROM_24C1025.c: 45:             I2C_Master_Stop();
 11396  16FD  276B  160A  118A   	fcall	_I2C_Master_Stop
 11397                           
 11398                           ;EEPROM_24C1025.c: 47:             my_delay_ms_WDT(5);
 11399  1700  27B1  160A  118A   	fcall	PL36	;call to abstracted procedure
 11400  1703  277B  160A  118A   	fcall	_my_delay_ms_WDT
 11401                           
 11402                           ;EEPROM_24C1025.c: 48:             mem_add++;
 11403  1706  0AAA               	incf	EEPROM_24C1025_Write_Buffer@mem_add,f
 11404  1707  1903               	skipnz
 11405  1708  0AAB               	incf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 11406  1709  1903               	skipnz
 11407  170A  0AAC               	incf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 11408  170B  1903               	skipnz
 11409  170C  0AAD               	incf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 11410                           
 11411                           ;EEPROM_24C1025.c: 49:             data++;
 11412  170D  0AAF               	incf	EEPROM_24C1025_Write_Buffer@data,f
 11413  170E  1903               	skipnz
 11414  170F  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 11415                           
 11416                           ;EEPROM_24C1025.c: 50:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11417  1710  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11418  1711  1D03               	btfss	3,2
 11419  1712  2F1F               	goto	l6198
 11420  1713  3001               	movlw	1
 11421  1714  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11422  1715  1D03               	skipz
 11423  1716  2F1D               	goto	u5583
 11424  1717  3000               	movlw	0
 11425  1718  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11426  1719  1D03               	skipz
 11427  171A  2F1D               	goto	u5583
 11428  171B  3000               	movlw	0
 11429  171C  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11430  171D                     u5583:
 11431  171D  1C03               	btfss	3,0
 11432  171E  2F24               	goto	l6200
 11433  171F                     l6198:
 11434  171F  3008               	movlw	8
 11435  1720  1283               	bcf	3,5	;RP0=0, select bank0
 11436  1721  1303               	bcf	3,6	;RP1=0, select bank0
 11437  1722  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 11438  1723  2F27               	goto	l6202
 11439  1724                     l6200:
 11440  1724  1283               	bcf	3,5	;RP0=0, select bank0
 11441  1725  1303               	bcf	3,6	;RP1=0, select bank0
 11442  1726  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 11443  1727                     l6202:
 11444                           
 11445                           ;EEPROM_24C1025.c: 51:             ctrl=chip_add;
 11446                           
 11447                           ;EEPROM_24C1025.c: 52:             ctrl<<=1;
 11448                           
 11449                           ;EEPROM_24C1025.c: 53:             ctrl |= 0xA0;
 11450                           
 11451                           ;EEPROM_24C1025.c: 54:             ctrl |= range;
 11452  1727  27DE  160A  118A   	fcall	PL56	;call to abstracted procedure
 11453                           
 11454                           ;EEPROM_24C1025.c: 56:             I2C_Master_Start();
 11455  172A  249A  160A  118A   	fcall	_I2C_Master_Start
 11456                           
 11457                           ;EEPROM_24C1025.c: 57:             I2C_Master_Write(ctrl);
 11458  172D  1283               	bcf	3,5	;RP0=0, select bank0
 11459  172E  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 11460  172F  00A3               	movwf	I2C_Master_Write@d
 11461  1730  01A4               	clrf	I2C_Master_Write@d+1
 11462  1731  2762  160A  118A   	fcall	_I2C_Master_Write
 11463                           
 11464                           ;EEPROM_24C1025.c: 58:             I2C_Master_Write(((char *)&mem_add)[1]);
 11465  1734  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11466  1735  00A3               	movwf	I2C_Master_Write@d
 11467  1736  01A4               	clrf	I2C_Master_Write@d+1
 11468  1737  2762  160A  118A   	fcall	_I2C_Master_Write
 11469                           
 11470                           ;EEPROM_24C1025.c: 59:             I2C_Master_Write(((char *)&mem_add)[0]);
 11471  173A  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11472  173B  00A3               	movwf	I2C_Master_Write@d
 11473  173C  01A4               	clrf	I2C_Master_Write@d+1
 11474  173D  2762  160A  118A   	fcall	_I2C_Master_Write
 11475                           
 11476                           ;EEPROM_24C1025.c: 60:             }
 11477  1740  2F51               	goto	l6224
 11478  1741                     l6218:
 11479                           
 11480                           ;EEPROM_24C1025.c: 62:             {;EEPROM_24C1025.c: 63:             I2C_Master_Write(
      +                          *data);
 11481  1741  27A8  160A  118A   	fcall	PL30	;call to abstracted procedure
 11482  1744  2762  160A  118A   	fcall	_I2C_Master_Write
 11483                           
 11484                           ;EEPROM_24C1025.c: 64:             data++;
 11485  1747  0AAF               	incf	EEPROM_24C1025_Write_Buffer@data,f
 11486  1748  1903               	skipnz
 11487  1749  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 11488                           
 11489                           ;EEPROM_24C1025.c: 65:             mem_add++;
 11490  174A  0AAA               	incf	EEPROM_24C1025_Write_Buffer@mem_add,f
 11491  174B  1903               	skipnz
 11492  174C  0AAB               	incf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 11493  174D  1903               	skipnz
 11494  174E  0AAC               	incf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 11495  174F  1903               	skipnz
 11496  1750  0AAD               	incf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 11497  1751                     l6224:
 11498                           
 11499                           ;EEPROM_24C1025.c: 67:      }
 11500  1751  0AB3               	incf	EEPROM_24C1025_Write_Buffer@count,f
 11501  1752  2ECF               	goto	l6226
 11502  1753                     l6228:
 11503                           
 11504                           ;EEPROM_24C1025.c: 68:      I2C_Master_Write(*data);
 11505  1753  1283               	bcf	3,5	;RP0=0, select bank0
 11506  1754  1303               	bcf	3,6	;RP1=0, select bank0
 11507  1755  27A8  160A  118A   	fcall	PL30	;call to abstracted procedure
 11508  1758  2762  160A  118A   	fcall	_I2C_Master_Write
 11509                           
 11510                           ;EEPROM_24C1025.c: 69:      I2C_Master_Stop();
 11511  175B  276B  160A  118A   	fcall	_I2C_Master_Stop
 11512                           
 11513                           ;EEPROM_24C1025.c: 71:      my_delay_ms_WDT(5);
 11514  175E  27B1  160A  118A   	fcall	PL36	;call to abstracted procedure
 11515  1761  2F7B               	ljmp	l3860
 11516  1762                     __end_of_EEPROM_24C1025_Write_Buffer:
 11517  1762                     __ptext54:	
 11518 ;; *************** function _I2C_Master_Write *****************
 11519 ;; Defined at:
 11520 ;;		line 79 in file "I2C.c"
 11521 ;; Parameters:    Size  Location     Type
 11522 ;;  d               2    3[BANK0 ] unsigned int 
 11523 ;; Auto vars:     Size  Location     Type
 11524 ;;		None
 11525 ;; Return value:  Size  Location     Type
 11526 ;;                  1    wreg      void 
 11527 ;; Registers used:
 11528 ;;		wreg, status,2, status,0, pclath, cstack
 11529 ;; Tracked objects:
 11530 ;;		On entry : 300/0
 11531 ;;		On exit  : 300/0
 11532 ;;		Unchanged: 0/0
 11533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11534 ;;      Params:         0       2       0       0       0
 11535 ;;      Locals:         0       0       0       0       0
 11536 ;;      Temps:          0       0       0       0       0
 11537 ;;      Totals:         0       2       0       0       0
 11538 ;;Total ram usage:        2 bytes
 11539 ;; Hardware stack levels used: 1
 11540 ;; Hardware stack levels required when called: 2
 11541 ;; This function calls:
 11542 ;;		_I2C_Master_Wait
 11543 ;; This function is called by:
 11544 ;;		_EEPROM_24C1025_Write_Buffer
 11545 ;;		_EEPROM_24C1025_Read_Buffer
 11546 ;;		_EEPROM_24C1025_Read_Buffer_USART
 11547 ;;		_EEPROM_24C1025_Write_Str
 11548 ;;		_EEPROM_24C1025_Read_Str
 11549 ;; This function uses a non-reentrant model
 11550 ;;
 11551                           
 11552                           
 11553                           ;psect for function _I2C_Master_Write
 11554  1762                     _I2C_Master_Write:
 11555                           
 11556                           ;I2C.c: 79: void I2C_Master_Write(unsigned d);I2C.c: 80: {;I2C.c: 81:   if(I2C_Master_Wa
      +                          it())
 11557                           
 11558                           ;incstack = 0
 11559                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 11560  1762  247B  160A  118A   	fcall	_I2C_Master_Wait
 11561  1765  3A00               	xorlw	0
 11562  1766  1903               	skipnz
 11563  1767  0008               	return
 11564                           
 11565                           ;I2C.c: 82:     {;I2C.c: 83:     SSPBUF = d;
 11566  1768  0823               	movf	I2C_Master_Write@d,w
 11567  1769  0093               	movwf	19	;volatile
 11568  176A  0008               	return
 11569  176B                     __end_of_I2C_Master_Write:
 11570  176B                     __ptext55:	
 11571 ;; *************** function _I2C_Master_Stop *****************
 11572 ;; Defined at:
 11573 ;;		line 70 in file "I2C.c"
 11574 ;; Parameters:    Size  Location     Type
 11575 ;;		None
 11576 ;; Auto vars:     Size  Location     Type
 11577 ;;		None
 11578 ;; Return value:  Size  Location     Type
 11579 ;;                  1    wreg      void 
 11580 ;; Registers used:
 11581 ;;		wreg, status,2, status,0, pclath, cstack
 11582 ;; Tracked objects:
 11583 ;;		On entry : 300/800
 11584 ;;		On exit  : 200/0
 11585 ;;		Unchanged: 0/0
 11586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11587 ;;      Params:         0       0       0       0       0
 11588 ;;      Locals:         0       0       0       0       0
 11589 ;;      Temps:          0       0       0       0       0
 11590 ;;      Totals:         0       0       0       0       0
 11591 ;;Total ram usage:        0 bytes
 11592 ;; Hardware stack levels used: 1
 11593 ;; Hardware stack levels required when called: 2
 11594 ;; This function calls:
 11595 ;;		_I2C_Master_Wait
 11596 ;; This function is called by:
 11597 ;;		_EEPROM_24C1025_Write_Buffer
 11598 ;;		_EEPROM_24C1025_Read_Buffer
 11599 ;;		_EEPROM_24C1025_Read_Buffer_USART
 11600 ;;		_EEPROM_24C1025_Write_Str
 11601 ;;		_EEPROM_24C1025_Read_Str
 11602 ;; This function uses a non-reentrant model
 11603 ;;
 11604                           
 11605                           
 11606                           ;psect for function _I2C_Master_Stop
 11607  176B                     _I2C_Master_Stop:
 11608                           
 11609                           ;I2C.c: 72:   if(I2C_Master_Wait())
 11610                           
 11611                           ;incstack = 0
 11612                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 11613  176B  247B               	fcall	_I2C_Master_Wait
 11614  176C  3A00               	xorlw	0
 11615                           
 11616                           ;I2C.c: 73:     {;I2C.c: 74:     SSPCON2bits.PEN = 1;
 11617  176D  1683               	bsf	3,5	;RP0=1, select bank1
 11618  176E  1D03               	btfss	3,2
 11619  176F  1511               	bsf	17,2	;volatile
 11620                           
 11621                           ;I2C.c: 76:   INTCONbits.GIE=1;
 11622                           
 11623                           ;I2C.c: 75:     }
 11624  1770  178B               	bsf	11,7	;volatile
 11625  1771  0008               	return
 11626  1772                     __end_of_I2C_Master_Stop:
 11627  1772                     __ptext48:	
 11628 ;; *************** function _I2C_Master_RepeatedStart *****************
 11629 ;; Defined at:
 11630 ;;		line 62 in file "I2C.c"
 11631 ;; Parameters:    Size  Location     Type
 11632 ;;		None
 11633 ;; Auto vars:     Size  Location     Type
 11634 ;;		None
 11635 ;; Return value:  Size  Location     Type
 11636 ;;                  1    wreg      void 
 11637 ;; Registers used:
 11638 ;;		wreg, status,2, status,0, pclath, cstack
 11639 ;; Tracked objects:
 11640 ;;		On entry : 300/0
 11641 ;;		On exit  : 200/0
 11642 ;;		Unchanged: 0/0
 11643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11644 ;;      Params:         0       0       0       0       0
 11645 ;;      Locals:         0       0       0       0       0
 11646 ;;      Temps:          0       0       0       0       0
 11647 ;;      Totals:         0       0       0       0       0
 11648 ;;Total ram usage:        0 bytes
 11649 ;; Hardware stack levels used: 1
 11650 ;; Hardware stack levels required when called: 2
 11651 ;; This function calls:
 11652 ;;		_I2C_Master_Wait
 11653 ;; This function is called by:
 11654 ;;		_EEPROM_24C1025_Read_Buffer
 11655 ;;		_EEPROM_24C1025_Read_Buffer_USART
 11656 ;;		_EEPROM_24C1025_Read_Str
 11657 ;; This function uses a non-reentrant model
 11658 ;;
 11659                           
 11660                           
 11661                           ;psect for function _I2C_Master_RepeatedStart
 11662  1772                     _I2C_Master_RepeatedStart:
 11663                           
 11664                           ;I2C.c: 64:   if(I2C_Master_Wait())
 11665                           
 11666                           ;incstack = 0
 11667                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 11668  1772  247B  160A  118A   	fcall	_I2C_Master_Wait
 11669  1775  3A00               	xorlw	0
 11670  1776  1903               	skipnz
 11671  1777  0008               	return
 11672                           
 11673                           ;I2C.c: 65:     {;I2C.c: 66:     SSPCON2bits.RSEN = 1;
 11674  1778  1683               	bsf	3,5	;RP0=1, select bank1
 11675  1779  1491               	bsf	17,1	;volatile
 11676  177A  0008               	return
 11677  177B                     __end_of_I2C_Master_RepeatedStart:
 11678  177B                     __ptext53:	
 11679 ;; *************** function _my_delay_ms_WDT *****************
 11680 ;; Defined at:
 11681 ;;		line 13 in file "my_delay.c"
 11682 ;; Parameters:    Size  Location     Type
 11683 ;;  time            4    0[BANK0 ] long 
 11684 ;; Auto vars:     Size  Location     Type
 11685 ;;  i               4    6[BANK0 ] long 
 11686 ;; Return value:  Size  Location     Type
 11687 ;;                  1    wreg      void 
 11688 ;; Registers used:
 11689 ;;		wreg, status,2, status,0, btemp+1
 11690 ;; Tracked objects:
 11691 ;;		On entry : 300/0
 11692 ;;		On exit  : 300/0
 11693 ;;		Unchanged: 0/0
 11694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11695 ;;      Params:         0       4       0       0       0
 11696 ;;      Locals:         0       4       0       0       0
 11697 ;;      Temps:          0       2       0       0       0
 11698 ;;      Totals:         0      10       0       0       0
 11699 ;;Total ram usage:       10 bytes
 11700 ;; Hardware stack levels used: 1
 11701 ;; Hardware stack levels required when called: 1
 11702 ;; This function calls:
 11703 ;;		Nothing
 11704 ;; This function is called by:
 11705 ;;		_EEPROM_24C1025_Write_Buffer
 11706 ;;		_EEPROM_24C1025_Read_Buffer
 11707 ;;		_EEPROM_24C1025_Write_Str
 11708 ;;		_main
 11709 ;; This function uses a non-reentrant model
 11710 ;;
 11711                           
 11712                           
 11713                           ;psect for function _my_delay_ms_WDT
 11714  177B                     _my_delay_ms_WDT:
 11715  177B                     l3860:	
 11716                           ;incstack = 0
 11717                           ; Regs used in _my_delay_ms_WDT: [wreg+status,2+status,0+btemp+1]
 11718                           
 11719                           
 11720                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
 11721  177B  01A6               	clrf	my_delay_ms_WDT@i
 11722  177C  01A7               	clrf	my_delay_ms_WDT@i+1
 11723  177D  01A8               	clrf	my_delay_ms_WDT@i+2
 11724  177E  01A9               	clrf	my_delay_ms_WDT@i+3
 11725  177F                     l3866:
 11726  177F  0829               	movf	my_delay_ms_WDT@i+3,w
 11727  1780  3A80               	xorlw	128
 11728  1781  00FF               	movwf	127
 11729  1782  0823               	movf	my_delay_ms_WDT@time+3,w
 11730  1783  3A80               	xorlw	128
 11731  1784  027F               	subwf	127,w
 11732  1785  1D03               	skipz
 11733  1786  2F91               	goto	u2683
 11734  1787  0822               	movf	my_delay_ms_WDT@time+2,w
 11735  1788  0228               	subwf	my_delay_ms_WDT@i+2,w
 11736  1789  1D03               	skipz
 11737  178A  2F91               	goto	u2683
 11738  178B  0821               	movf	my_delay_ms_WDT@time+1,w
 11739  178C  0227               	subwf	my_delay_ms_WDT@i+1,w
 11740  178D  1D03               	skipz
 11741  178E  2F91               	goto	u2683
 11742  178F  0820               	movf	my_delay_ms_WDT@time,w
 11743  1790  0226               	subwf	my_delay_ms_WDT@i,w
 11744  1791                     u2683:
 11745  1791  1803               	btfsc	3,0
 11746  1792  0008               	return
 11747  1793  0064               	clrwdt	;# 
 11748                           
 11749                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
 11750  1794  3003               	movlw	3
 11751  1795  1283               	bcf	3,5	;RP0=0, select bank0
 11752  1796  1303               	bcf	3,6	;RP1=0, select bank0
 11753  1797  00A5               	movwf	??_my_delay_ms_WDT+1
 11754  1798  3097               	movlw	151
 11755  1799  00A4               	movwf	??_my_delay_ms_WDT
 11756  179A                     u6727:
 11757  179A  0BA4               	decfsz	??_my_delay_ms_WDT,f
 11758  179B  2F9A               	goto	u6727
 11759  179C  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
 11760  179D  2F9A               	goto	u6727
 11761                           
 11762                           ;my_delay.c: 19:             }
 11763  179E  1283               	bcf	3,5	;RP0=0, select bank0
 11764  179F  1303               	bcf	3,6	;RP1=0, select bank0
 11765  17A0  0AA6               	incf	my_delay_ms_WDT@i,f
 11766  17A1  1903               	skipnz
 11767  17A2  0AA7               	incf	my_delay_ms_WDT@i+1,f
 11768  17A3  1903               	skipnz
 11769  17A4  0AA8               	incf	my_delay_ms_WDT@i+2,f
 11770  17A5  1903               	skipnz
 11771  17A6  0AA9               	incf	my_delay_ms_WDT@i+3,f
 11772  17A7  2F7F               	goto	l3866
 11773  17A8                     __end_of_my_delay_ms_WDT:
 11774  17A8                     PL30:
 11775  17A8  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 11776  17A9  0084               	movwf	4
 11777  17AA  1783               	bsf	3,7
 11778  17AB  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 11779  17AC  1383               	bcf	3,7
 11780  17AD  0800               	movf	0,w
 11781  17AE  00A3               	movwf	I2C_Master_Write@d
 11782  17AF  01A4               	clrf	I2C_Master_Write@d+1
 11783  17B0  0008               	return
 11784  17B1                     __end_ofPL30:
 11785  17B1                     PL36:
 11786  17B1  3005               	movlw	5
 11787  17B2  1283               	bcf	3,5	;RP0=0, select bank0
 11788  17B3  00A0               	movwf	my_delay_ms_WDT@time
 11789  17B4  01A1               	clrf	my_delay_ms_WDT@time+1
 11790  17B5  01A2               	clrf	my_delay_ms_WDT@time+2
 11791  17B6  01A3               	clrf	my_delay_ms_WDT@time+3
 11792  17B7  0008               	return
 11793  17B8                     __end_ofPL36:
 11794  17B8                     PL40:
 11795  17B8  3014               	movlw	20
 11796  17B9  1683               	bsf	3,5	;RP0=1, select bank3
 11797  17BA  1703               	bsf	3,6	;RP1=1, select bank3
 11798  17BB  00AC               	movwf	_Delay_Led_Memory^(0+384)	;volatile
 11799  17BC  01AD               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
 11800  17BD  1283               	bcf	3,5	;RP0=0, select bank0
 11801  17BE  1303               	bcf	3,6	;RP1=0, select bank0
 11802  17BF  0008               	return
 11803  17C0                     __end_ofPL40:
 11804  17C0                     PL46:
 11805  17C0  082F               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 11806  17C1  00B1               	movwf	EEPROM_24C1025_Read_Str@ctrl
 11807  17C2  30A0               	movlw	160
 11808  17C3  1003               	clrc
 11809  17C4  0DB1               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 11810  17C5  04B1               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11811  17C6  1431               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 11812  17C7  0830               	movf	EEPROM_24C1025_Read_Str@range,w
 11813  17C8  04B1               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11814  17C9  0008               	return
 11815  17CA                     __end_ofPL46:
 11816  17CA                     PL48:
 11817  17CA  0832               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11818  17CB  00B4               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11819  17CC  30A0               	movlw	160
 11820  17CD  1003               	clrc
 11821  17CE  0DB4               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11822  17CF  04B4               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11823  17D0  1434               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11824  17D1  0833               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11825  17D2  04B4               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11826  17D3  0008               	return
 11827  17D4                     __end_ofPL48:
 11828  17D4                     PL50:
 11829  17D4  082F               	movf	EEPROM_24C1025_Read_Buffer_USART@chip_add,w
 11830  17D5  00B1               	movwf	EEPROM_24C1025_Read_Buffer_USART@ctrl
 11831  17D6  30A0               	movlw	160
 11832  17D7  1003               	clrc
 11833  17D8  0DB1               	rlf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11834  17D9  04B1               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11835  17DA  1431               	bsf	EEPROM_24C1025_Read_Buffer_USART@ctrl,0
 11836  17DB  0830               	movf	EEPROM_24C1025_Read_Buffer_USART@range,w
 11837  17DC  04B1               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11838  17DD  0008               	return
 11839  17DE                     __end_ofPL50:
 11840  17DE                     PL56:
 11841  17DE  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 11842  17DF  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 11843  17E0  30A0               	movlw	160
 11844  17E1  1003               	clrc
 11845  17E2  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 11846  17E3  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 11847  17E4  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 11848  17E5  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 11849  17E6  0008               	return
 11850  17E7                     __end_ofPL56:
 11851  17E7                     PL60:
 11852  17E7  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 11853  17E8  0084               	movwf	4
 11854  17E9  1783               	bsf	3,7	;select IRP bank2
 11855  17EA  0800               	movf	0,w
 11856  17EB  00A3               	movwf	I2C_Master_Write@d
 11857  17EC  01A4               	clrf	I2C_Master_Write@d+1
 11858  17ED  0008               	return
 11859  17EE                     __end_ofPL60:
 11860  17EE                     PL70:
 11861  17EE  1283               	bcf	3,5	;RP0=0, select bank0
 11862  17EF  0831               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11863  17F0  39FE               	andlw	254
 11864  17F1  00A3               	movwf	I2C_Master_Write@d
 11865  17F2  01A4               	clrf	I2C_Master_Write@d+1
 11866  17F3  0008               	return
 11867  17F4                     __end_ofPL70:
 11868  17F4                     PL72:
 11869  17F4  1283               	bcf	3,5	;RP0=0, select bank0
 11870  17F5  0834               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11871  17F6  39FE               	andlw	254
 11872  17F7  00A3               	movwf	I2C_Master_Write@d
 11873  17F8  01A4               	clrf	I2C_Master_Write@d+1
 11874  17F9  0008               	return
 11875  17FA                     __end_ofPL72:
 11876  17FA                     PL74:
 11877  17FA  1283               	bcf	3,5	;RP0=0, select bank0
 11878  17FB  0831               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 11879  17FC  39FE               	andlw	254
 11880  17FD  00A3               	movwf	I2C_Master_Write@d
 11881  17FE  01A4               	clrf	I2C_Master_Write@d+1
 11882  17FF  0008               	return
 11883  1800                     __end_ofPL74:
 11884                           
 11885                           	psect	text50
 11886  1CDA                     __ptext50:	
 11887 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 11888 ;; Defined at:
 11889 ;;		line 367 in file "EEPROM_24C1025.c"
 11890 ;; Parameters:    Size  Location     Type
 11891 ;;  chip_add        1    wreg     unsigned char 
 11892 ;;  value           2   17[BANK1 ] unsigned int 
 11893 ;; Auto vars:     Size  Location     Type
 11894 ;;  chip_add        1   19[BANK1 ] unsigned char 
 11895 ;;  mem_add         4   20[BANK1 ] unsigned long 
 11896 ;; Return value:  Size  Location     Type
 11897 ;;                  1    wreg      void 
 11898 ;; Registers used:
 11899 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11900 ;; Tracked objects:
 11901 ;;		On entry : 300/300
 11902 ;;		On exit  : 0/0
 11903 ;;		Unchanged: 0/0
 11904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11905 ;;      Params:         0       0       2       0       0
 11906 ;;      Locals:         0       0       5       0       0
 11907 ;;      Temps:          0       0       0       0       0
 11908 ;;      Totals:         0       0       7       0       0
 11909 ;;Total ram usage:        7 bytes
 11910 ;; Hardware stack levels used: 1
 11911 ;; Hardware stack levels required when called: 5
 11912 ;; This function calls:
 11913 ;;		_EEPROM_24C1025_Write_Int
 11914 ;; This function is called by:
 11915 ;;		_Decodify_Command
 11916 ;; This function uses a non-reentrant model
 11917 ;;
 11918                           
 11919                           
 11920                           ;psect for function _EEPROM_24C1025_Fill_All
 11921  1CDA                     _EEPROM_24C1025_Fill_All:
 11922                           
 11923                           ;incstack = 0
 11924                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 11925                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 11926  1CDA  1303               	bcf	3,6	;RP1=0, select bank1
 11927  1CDB  00B3               	movwf	EEPROM_24C1025_Fill_All@chip_add^(0+128)
 11928                           
 11929                           ;EEPROM_24C1025.c: 368:      unsigned long mem_add;;EEPROM_24C1025.c: 369:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 11930  1CDC  01B4               	clrf	EEPROM_24C1025_Fill_All@mem_add^(0+128)
 11931  1CDD  01B5               	clrf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128)
 11932  1CDE  01B6               	clrf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128)
 11933  1CDF  01B7               	clrf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128)
 11934  1CE0                     l6794:
 11935                           
 11936                           ;EEPROM_24C1025.c: 370:         {;EEPROM_24C1025.c: 371:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 11937  1CE0  1683               	bsf	3,5	;RP0=1, select bank1
 11938  1CE1  1303               	bcf	3,6	;RP1=0, select bank1
 11939  1CE2  0837               	movf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),w
 11940  1CE3  00AB               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
 11941  1CE4  0836               	movf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),w
 11942  1CE5  00AA               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
 11943  1CE6  0835               	movf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),w
 11944  1CE7  00A9               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
 11945  1CE8  0834               	movf	EEPROM_24C1025_Fill_All@mem_add^(0+128),w
 11946  1CE9  00A8               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
 11947  1CEA  0832               	movf	(EEPROM_24C1025_Fill_All@value+1)^(0+128),w
 11948  1CEB  00AD               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
 11949  1CEC  0831               	movf	EEPROM_24C1025_Fill_All@value^(0+128),w
 11950  1CED  00AC               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
 11951  1CEE  0833               	movf	EEPROM_24C1025_Fill_All@chip_add^(0+128),w
 11952  1CEF  120A  118A  2373  160A  158A  	fcall	_EEPROM_24C1025_Write_Int
 11953  1CF4  0064               	clrwdt	;# 
 11954                           
 11955                           ;EEPROM_24C1025.c: 373:         }
 11956  1CF5  3002               	movlw	2
 11957  1CF6  1683               	bsf	3,5	;RP0=1, select bank1
 11958  1CF7  1303               	bcf	3,6	;RP1=0, select bank1
 11959  1CF8  07B4               	addwf	EEPROM_24C1025_Fill_All@mem_add^(0+128),f
 11960  1CF9  3001               	movlw	1
 11961  1CFA  1803               	skipnc
 11962  1CFB  07B5               	addwf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),f
 11963  1CFC  1803               	skipnc
 11964  1CFD  07B6               	addwf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),f
 11965  1CFE  1803               	skipnc
 11966  1CFF  07B7               	addwf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),f
 11967  1D00  0837               	movf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),w
 11968  1D01  1D03               	btfss	3,2
 11969  1D02  0008               	return
 11970  1D03  0836               	movf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),w
 11971  1D04  1D03               	btfss	3,2
 11972  1D05  0008               	return
 11973  1D06  3004               	movlw	4
 11974  1D07  0235               	subwf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),w
 11975  1D08  1D03               	skipz
 11976  1D09  2D0C               	goto	u6063
 11977  1D0A  3000               	movlw	0
 11978  1D0B  0234               	subwf	EEPROM_24C1025_Fill_All@mem_add^(0+128),w
 11979  1D0C                     u6063:
 11980  1D0C  1803               	btfsc	3,0
 11981  1D0D  0008               	return
 11982  1D0E  2CE0               	goto	l6794
 11983  1D0F                     __end_of_EEPROM_24C1025_Fill_All:
 11984                           
 11985                           	psect	text58
 11986  1D0F                     __ptext58:	
 11987 ;; *************** function _Auto_Relay1 *****************
 11988 ;; Defined at:
 11989 ;;		line 880 in file "SlaveLiofilizadorVer1.c"
 11990 ;; Parameters:    Size  Location     Type
 11991 ;;		None
 11992 ;; Auto vars:     Size  Location     Type
 11993 ;;		None
 11994 ;; Return value:  Size  Location     Type
 11995 ;;                  1    wreg      void 
 11996 ;; Registers used:
 11997 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 11998 ;; Tracked objects:
 11999 ;;		On entry : 200/100
 12000 ;;		On exit  : 200/0
 12001 ;;		Unchanged: 0/0
 12002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12003 ;;      Params:         0       0       0       0       0
 12004 ;;      Locals:         0       0       0       0       0
 12005 ;;      Temps:          0       0       0       0       0
 12006 ;;      Totals:         0       0       0       0       0
 12007 ;;Total ram usage:        0 bytes
 12008 ;; Hardware stack levels used: 1
 12009 ;; Hardware stack levels required when called: 3
 12010 ;; This function calls:
 12011 ;;		_Rele1Desligado
 12012 ;;		_Rele1Ligado
 12013 ;;		___flge
 12014 ;;		___flsub
 12015 ;;		___xxtofl
 12016 ;; This function is called by:
 12017 ;;		_main
 12018 ;; This function uses a non-reentrant model
 12019 ;;
 12020                           
 12021                           
 12022                           ;psect for function _Auto_Relay1
 12023  1D0F                     _Auto_Relay1:
 12024                           
 12025                           ;SlaveLiofilizadorVer1.c: 881:              if(Status1==0)
 12026                           
 12027                           ;incstack = 0
 12028                           ; Regs used in _Auto_Relay1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12029  1D0F  1683               	bsf	3,5	;RP0=1, select bank3
 12030  1D10  1703               	bsf	3,6	;RP1=1, select bank3
 12031  1D11  0822               	movf	_Status1^(0+384),w
 12032  1D12  0423               	iorwf	(_Status1+1)^(0+384),w
 12033  1D13  1D03               	btfss	3,2
 12034  1D14  2D16               	goto	l7124
 12035  1D15                     l7122:
 12036                           
 12037                           ;SlaveLiofilizadorVer1.c: 882:                  {;SlaveLiofilizadorVer1.c: 883:         
      +                                   Rele1Desligado();
 12038  1D15  2F85               	ljmp	l6942
 12039  1D16                     l7124:	
 12040                           ;SlaveLiofilizadorVer1.c: 884:                  }
 12041                           
 12042                           
 12043                           ;SlaveLiofilizadorVer1.c: 886:                  {;SlaveLiofilizadorVer1.c: 888:         
      +                                   if (Temperatura1<=(SetPoint1-Histerese1))
 12044  1D16  0873               	movf	_Histerese1,w
 12045  1D17  1283               	bcf	3,5	;RP0=0, select bank0
 12046  1D18  1303               	bcf	3,6	;RP1=0, select bank0
 12047  1D19  27FA               	fcall	PL82	;call to abstracted procedure
 12048  1D1A  120A  158A  25B5  160A  158A  	fcall	___xxtofl
 12049  1D1F  120A  158A  27A4  160A  158A  	fcall	PL32	;call to abstracted procedure
 12050  1D24  1683               	bsf	3,5	;RP0=1, select bank1
 12051  1D25  0860               	movf	(_SetPoint1+3)^(0+128),w	;volatile
 12052  1D26  1283               	bcf	3,5	;RP0=0, select bank0
 12053  1D27  00D3               	movwf	___flsub@b+3
 12054  1D28  1683               	bsf	3,5	;RP0=1, select bank1
 12055  1D29  085F               	movf	(_SetPoint1+2)^(0+128),w	;volatile
 12056  1D2A  1283               	bcf	3,5	;RP0=0, select bank0
 12057  1D2B  00D2               	movwf	___flsub@b+2
 12058  1D2C  1683               	bsf	3,5	;RP0=1, select bank1
 12059  1D2D  085E               	movf	(_SetPoint1+1)^(0+128),w	;volatile
 12060  1D2E  1283               	bcf	3,5	;RP0=0, select bank0
 12061  1D2F  00D1               	movwf	___flsub@b+1
 12062  1D30  1683               	bsf	3,5	;RP0=1, select bank1
 12063  1D31  085D               	movf	_SetPoint1^(0+128),w	;volatile
 12064  1D32  1283               	bcf	3,5	;RP0=0, select bank0
 12065  1D33  00D0               	movwf	___flsub@b
 12066  1D34  120A  158A  2744  160A  158A  	fcall	___flsub
 12067  1D39  27E6  160A  158A   	fcall	PL38	;call to abstracted procedure
 12068  1D3C  2789  160A  158A   	fcall	PL4	;call to abstracted procedure
 12069  1D3F  2696  160A  158A   	fcall	___flge
 12070  1D42  1C03               	btfss	3,0
 12071  1D43  2D4C               	goto	l7130
 12072                           
 12073                           ;SlaveLiofilizadorVer1.c: 889:                     {;SlaveLiofilizadorVer1.c: 890:      
      +                                         RL1Status=1;
 12074  1D44  01FC               	clrf	_RL1Status
 12075  1D45  0AFC               	incf	_RL1Status,f
 12076  1D46  2D49               	goto	l7128
 12077  1D47                     l7132:
 12078                           
 12079                           ;SlaveLiofilizadorVer1.c: 894:                           {;SlaveLiofilizadorVer1.c: 895:
      +                                                     if(RL1Status==1)
 12080  1D47  0B7C               	decfsz	_RL1Status,w
 12081  1D48  2D15               	goto	l7122
 12082  1D49                     l7128:
 12083                           
 12084                           ;SlaveLiofilizadorVer1.c: 891:                     Rele1Ligado();
 12085  1D49  120A  158A  2A10   	ljmp	l6924
 12086  1D4C                     l7130:	
 12087                           ;SlaveLiofilizadorVer1.c: 892:                     }
 12088                           
 12089  1D4C  27CD  160A  158A   	fcall	PL12	;call to abstracted procedure
 12090  1D4F  2789  160A  158A   	fcall	PL4	;call to abstracted procedure
 12091  1D52  2696  160A  158A   	fcall	___flge
 12092  1D55  1803               	btfsc	3,0
 12093  1D56  2D47               	goto	l7132
 12094  1D57  27CD  160A  158A   	fcall	PL12	;call to abstracted procedure
 12095  1D5A  2789  160A  158A   	fcall	PL4	;call to abstracted procedure
 12096  1D5D  2696  160A  158A   	fcall	___flge
 12097  1D60  1803               	btfsc	3,0
 12098  1D61  0008               	return
 12099                           
 12100                           ;SlaveLiofilizadorVer1.c: 905:                           {;SlaveLiofilizadorVer1.c: 906:
      +                                                     RL1Status=0;
 12101  1D62  01FC               	clrf	_RL1Status
 12102  1D63  2D15               	goto	l7122
 12103  1D64                     __end_of_Auto_Relay1:
 12104  1D64                     __ptext62:	
 12105 ;; *************** function _Auto_Relay0 *****************
 12106 ;; Defined at:
 12107 ;;		line 844 in file "SlaveLiofilizadorVer1.c"
 12108 ;; Parameters:    Size  Location     Type
 12109 ;;		None
 12110 ;; Auto vars:     Size  Location     Type
 12111 ;;		None
 12112 ;; Return value:  Size  Location     Type
 12113 ;;                  1    wreg      void 
 12114 ;; Registers used:
 12115 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12116 ;; Tracked objects:
 12117 ;;		On entry : 300/100
 12118 ;;		On exit  : 200/0
 12119 ;;		Unchanged: 0/0
 12120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12121 ;;      Params:         0       0       0       0       0
 12122 ;;      Locals:         0       0       0       0       0
 12123 ;;      Temps:          0       0       0       0       0
 12124 ;;      Totals:         0       0       0       0       0
 12125 ;;Total ram usage:        0 bytes
 12126 ;; Hardware stack levels used: 1
 12127 ;; Hardware stack levels required when called: 3
 12128 ;; This function calls:
 12129 ;;		_Rele0Desligado
 12130 ;;		_Rele0Ligado
 12131 ;;		___flge
 12132 ;;		___flsub
 12133 ;; This function is called by:
 12134 ;;		_main
 12135 ;; This function uses a non-reentrant model
 12136 ;;
 12137                           
 12138                           
 12139                           ;psect for function _Auto_Relay0
 12140  1D64                     _Auto_Relay0:
 12141                           
 12142                           ;SlaveLiofilizadorVer1.c: 845:              if(Status0==0)
 12143                           
 12144                           ;incstack = 0
 12145                           ; Regs used in _Auto_Relay0: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12146  1D64  1703               	bsf	3,6	;RP1=1, select bank3
 12147  1D65  0824               	movf	_Status0^(0+384),w
 12148  1D66  0425               	iorwf	(_Status0+1)^(0+384),w
 12149  1D67  1D03               	btfss	3,2
 12150  1D68  2D6A               	goto	l7100
 12151  1D69                     l7098:
 12152                           
 12153                           ;SlaveLiofilizadorVer1.c: 846:                  {;SlaveLiofilizadorVer1.c: 847:         
      +                                   Rele0Desligado();
 12154  1D69  2F81               	ljmp	l6940
 12155  1D6A                     l7100:	
 12156                           ;SlaveLiofilizadorVer1.c: 848:                  }
 12157                           
 12158                           
 12159                           ;SlaveLiofilizadorVer1.c: 850:                  {;SlaveLiofilizadorVer1.c: 852:         
      +                                   if (Temperatura0<=(SetPoint0-Histerese0))
 12160  1D6A  081B               	movf	(_Histerese0+3)^(0+384),w
 12161  1D6B  1283               	bcf	3,5	;RP0=0, select bank0
 12162  1D6C  1303               	bcf	3,6	;RP1=0, select bank0
 12163  1D6D  00CF               	movwf	___flsub@a+3
 12164  1D6E  1683               	bsf	3,5	;RP0=1, select bank3
 12165  1D6F  1703               	bsf	3,6	;RP1=1, select bank3
 12166  1D70  081A               	movf	(_Histerese0+2)^(0+384),w
 12167  1D71  1283               	bcf	3,5	;RP0=0, select bank0
 12168  1D72  1303               	bcf	3,6	;RP1=0, select bank0
 12169  1D73  00CE               	movwf	___flsub@a+2
 12170  1D74  1683               	bsf	3,5	;RP0=1, select bank3
 12171  1D75  1703               	bsf	3,6	;RP1=1, select bank3
 12172  1D76  0819               	movf	(_Histerese0+1)^(0+384),w
 12173  1D77  1283               	bcf	3,5	;RP0=0, select bank0
 12174  1D78  1303               	bcf	3,6	;RP1=0, select bank0
 12175  1D79  00CD               	movwf	___flsub@a+1
 12176  1D7A  1683               	bsf	3,5	;RP0=1, select bank3
 12177  1D7B  1703               	bsf	3,6	;RP1=1, select bank3
 12178  1D7C  0818               	movf	_Histerese0^(0+384),w
 12179  1D7D  1283               	bcf	3,5	;RP0=0, select bank0
 12180  1D7E  1303               	bcf	3,6	;RP1=0, select bank0
 12181  1D7F  00CC               	movwf	___flsub@a
 12182  1D80  1683               	bsf	3,5	;RP0=1, select bank1
 12183  1D81  0864               	movf	(_SetPoint0+3)^(0+128),w	;volatile
 12184  1D82  1283               	bcf	3,5	;RP0=0, select bank0
 12185  1D83  00D3               	movwf	___flsub@b+3
 12186  1D84  1683               	bsf	3,5	;RP0=1, select bank1
 12187  1D85  0863               	movf	(_SetPoint0+2)^(0+128),w	;volatile
 12188  1D86  1283               	bcf	3,5	;RP0=0, select bank0
 12189  1D87  00D2               	movwf	___flsub@b+2
 12190  1D88  1683               	bsf	3,5	;RP0=1, select bank1
 12191  1D89  0862               	movf	(_SetPoint0+1)^(0+128),w	;volatile
 12192  1D8A  1283               	bcf	3,5	;RP0=0, select bank0
 12193  1D8B  00D1               	movwf	___flsub@b+1
 12194  1D8C  1683               	bsf	3,5	;RP0=1, select bank1
 12195  1D8D  0861               	movf	_SetPoint0^(0+128),w	;volatile
 12196  1D8E  1283               	bcf	3,5	;RP0=0, select bank0
 12197  1D8F  00D0               	movwf	___flsub@b
 12198  1D90  120A  158A  2744  160A  158A  	fcall	___flsub
 12199  1D95  27E6  160A  158A   	fcall	PL38	;call to abstracted procedure
 12200  1D98  27A3  160A  158A   	fcall	PL6	;call to abstracted procedure
 12201  1D9B  2696  160A  158A   	fcall	___flge
 12202  1D9E  1C03               	btfss	3,0
 12203  1D9F  2DAA               	goto	l7106
 12204                           
 12205                           ;SlaveLiofilizadorVer1.c: 853:                     {;SlaveLiofilizadorVer1.c: 854:      
      +                                         RL0Status=1;
 12206  1DA0  1683               	bsf	3,5	;RP0=1, select bank1
 12207  1DA1  01ED               	clrf	_RL0Status^(0+128)
 12208  1DA2  0AED               	incf	_RL0Status^(0+128),f
 12209  1DA3  2DA7               	goto	l7104
 12210  1DA4                     l7108:
 12211                           
 12212                           ;SlaveLiofilizadorVer1.c: 858:                           {;SlaveLiofilizadorVer1.c: 859:
      +                                                     if(RL0Status==1)
 12213  1DA4  1683               	bsf	3,5	;RP0=1, select bank1
 12214  1DA5  0B6D               	decfsz	_RL0Status^(0+128),w
 12215  1DA6  2D69               	goto	l7098
 12216  1DA7                     l7104:
 12217                           
 12218                           ;SlaveLiofilizadorVer1.c: 855:                     Rele0Ligado();
 12219  1DA7  120A  158A  29F9   	ljmp	l6908
 12220  1DAA                     l7106:	
 12221                           ;SlaveLiofilizadorVer1.c: 856:                     }
 12222                           
 12223  1DAA  27BD  160A  158A   	fcall	PL10	;call to abstracted procedure
 12224  1DAD  27A3  160A  158A   	fcall	PL6	;call to abstracted procedure
 12225  1DB0  2696  160A  158A   	fcall	___flge
 12226  1DB3  1803               	btfsc	3,0
 12227  1DB4  2DA4               	goto	l7108
 12228  1DB5  27BD  160A  158A   	fcall	PL10	;call to abstracted procedure
 12229  1DB8  27A3  160A  158A   	fcall	PL6	;call to abstracted procedure
 12230  1DBB  2696  160A  158A   	fcall	___flge
 12231  1DBE  1803               	btfsc	3,0
 12232  1DBF  0008               	return
 12233                           
 12234                           ;SlaveLiofilizadorVer1.c: 869:                           {;SlaveLiofilizadorVer1.c: 870:
      +                                                     RL0Status=0;
 12235  1DC0  1683               	bsf	3,5	;RP0=1, select bank1
 12236  1DC1  01ED               	clrf	_RL0Status^(0+128)
 12237  1DC2  2D69               	goto	l7098
 12238  1DC3                     __end_of_Auto_Relay0:
 12239  1DC3                     __ptext5:	
 12240 ;; *************** function _log *****************
 12241 ;; Defined at:
 12242 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\log.c"
 12243 ;; Parameters:    Size  Location     Type
 12244 ;;  x               4   16[BANK1 ] float 
 12245 ;; Auto vars:     Size  Location     Type
 12246 ;;  exponent        2   77[BANK0 ] int 
 12247 ;; Return value:  Size  Location     Type
 12248 ;;                  4   16[BANK1 ] int 
 12249 ;; Registers used:
 12250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12251 ;; Tracked objects:
 12252 ;;		On entry : 300/100
 12253 ;;		On exit  : 300/100
 12254 ;;		Unchanged: 0/0
 12255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12256 ;;      Params:         0       0       4       0       0
 12257 ;;      Locals:         0       2       0       0       0
 12258 ;;      Temps:          0       0       0       0       0
 12259 ;;      Totals:         0       2       4       0       0
 12260 ;;Total ram usage:        6 bytes
 12261 ;; Hardware stack levels used: 1
 12262 ;; Hardware stack levels required when called: 4
 12263 ;; This function calls:
 12264 ;;		___fladd
 12265 ;;		___fleq
 12266 ;;		___flge
 12267 ;;		___flmul
 12268 ;;		___xxtofl
 12269 ;;		_eval_poly
 12270 ;;		_frexp
 12271 ;; This function is called by:
 12272 ;;		_ADC_Read_NTC
 12273 ;; This function uses a non-reentrant model
 12274 ;;
 12275                           
 12276                           
 12277                           ;psect for function _log
 12278  1DC3                     _log:
 12279                           
 12280                           ;incstack = 0
 12281                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 12282  1DC3  0833               	movf	(log@x+3)^(0+128),w
 12283  1DC4  1283               	bcf	3,5	;RP0=0, select bank0
 12284  1DC5  00D7               	movwf	___flge@ff1+3
 12285  1DC6  1683               	bsf	3,5	;RP0=1, select bank1
 12286  1DC7  0832               	movf	(log@x+2)^(0+128),w
 12287  1DC8  1283               	bcf	3,5	;RP0=0, select bank0
 12288  1DC9  00D6               	movwf	___flge@ff1+2
 12289  1DCA  1683               	bsf	3,5	;RP0=1, select bank1
 12290  1DCB  0831               	movf	(log@x+1)^(0+128),w
 12291  1DCC  1283               	bcf	3,5	;RP0=0, select bank0
 12292  1DCD  00D5               	movwf	___flge@ff1+1
 12293  1DCE  1683               	bsf	3,5	;RP0=1, select bank1
 12294  1DCF  0830               	movf	log@x^(0+128),w
 12295  1DD0  1283               	bcf	3,5	;RP0=0, select bank0
 12296  1DD1  00D4               	movwf	___flge@ff1
 12297  1DD2  01D8               	clrf	___flge@ff2
 12298  1DD3  01D9               	clrf	___flge@ff2+1
 12299  1DD4  01DA               	clrf	___flge@ff2+2
 12300  1DD5  01DB               	clrf	___flge@ff2+3
 12301  1DD6  2696  160A  158A   	fcall	___flge
 12302  1DD9  1803               	btfsc	3,0
 12303  1DDA  2DDC               	goto	l6432
 12304  1DDB  2FEE               	ljmp	PL66	;call to abstracted procedure
 12305  1DDC                     l6432:
 12306  1DDC  1683               	bsf	3,5	;RP0=1, select bank1
 12307  1DDD  0833               	movf	(log@x+3)^(0+128),w
 12308  1DDE  1283               	bcf	3,5	;RP0=0, select bank0
 12309  1DDF  00A3               	movwf	___fleq@ff1+3
 12310  1DE0  1683               	bsf	3,5	;RP0=1, select bank1
 12311  1DE1  0832               	movf	(log@x+2)^(0+128),w
 12312  1DE2  1283               	bcf	3,5	;RP0=0, select bank0
 12313  1DE3  00A2               	movwf	___fleq@ff1+2
 12314  1DE4  1683               	bsf	3,5	;RP0=1, select bank1
 12315  1DE5  0831               	movf	(log@x+1)^(0+128),w
 12316  1DE6  1283               	bcf	3,5	;RP0=0, select bank0
 12317  1DE7  00A1               	movwf	___fleq@ff1+1
 12318  1DE8  1683               	bsf	3,5	;RP0=1, select bank1
 12319  1DE9  0830               	movf	log@x^(0+128),w
 12320  1DEA  1283               	bcf	3,5	;RP0=0, select bank0
 12321  1DEB  27F4  160A  158A   	fcall	PL68	;call to abstracted procedure
 12322  1DEE  2704  160A  158A   	fcall	___fleq
 12323  1DF1  1C03               	btfss	3,0
 12324  1DF2  2DF4               	goto	l6436
 12325  1DF3  2FEE               	ljmp	PL66	;call to abstracted procedure
 12326  1DF4                     l6436:
 12327  1DF4  30BF               	movlw	191
 12328  1DF5  00BB               	movwf	___fladd@b+3
 12329  1DF6  3080               	movlw	128
 12330  1DF7  00BA               	movwf	___fladd@b+2
 12331  1DF8  3040               	movlw	64
 12332  1DF9  01B9               	clrf	___fladd@b+1
 12333  1DFA  01B8               	clrf	___fladd@b
 12334  1DFB  00D7               	movwf	___flmul@b+3
 12335  1DFC  306D               	movlw	(low (log@exponent| 0))& (0+255)
 12336  1DFD  01D6               	clrf	___flmul@b+2
 12337  1DFE  01D5               	clrf	___flmul@b+1
 12338  1DFF  01D4               	clrf	___flmul@b
 12339  1E00  00B0               	movwf	frexp@eptr
 12340  1E01  1683               	bsf	3,5	;RP0=1, select bank1
 12341  1E02  0833               	movf	(log@x+3)^(0+128),w
 12342  1E03  1283               	bcf	3,5	;RP0=0, select bank0
 12343  1E04  00AF               	movwf	frexp@value+3
 12344  1E05  1683               	bsf	3,5	;RP0=1, select bank1
 12345  1E06  0832               	movf	(log@x+2)^(0+128),w
 12346  1E07  1283               	bcf	3,5	;RP0=0, select bank0
 12347  1E08  00AE               	movwf	frexp@value+2
 12348  1E09  1683               	bsf	3,5	;RP0=1, select bank1
 12349  1E0A  0831               	movf	(log@x+1)^(0+128),w
 12350  1E0B  1283               	bcf	3,5	;RP0=0, select bank0
 12351  1E0C  00AD               	movwf	frexp@value+1
 12352  1E0D  1683               	bsf	3,5	;RP0=1, select bank1
 12353  1E0E  0830               	movf	log@x^(0+128),w
 12354  1E0F  1283               	bcf	3,5	;RP0=0, select bank0
 12355  1E10  00AC               	movwf	frexp@value
 12356  1E11  273A               	fcall	_frexp
 12357  1E12  082F               	movf	?_frexp+3,w
 12358  1E13  00DB               	movwf	___flmul@a+3
 12359  1E14  082E               	movf	?_frexp+2,w
 12360  1E15  00DA               	movwf	___flmul@a+2
 12361  1E16  082D               	movf	?_frexp+1,w
 12362  1E17  00D9               	movwf	___flmul@a+1
 12363  1E18  082C               	movf	?_frexp,w
 12364  1E19  00D8               	movwf	___flmul@a
 12365  1E1A  120A  118A  2392  160A  158A  	fcall	___flmul
 12366  1E1F  27DD               	fcall	PL28	;call to abstracted procedure
 12367  1E20  120A  158A  22D4  160A  158A  	fcall	___fladd
 12368  1E25  083B               	movf	?___fladd+3,w
 12369  1E26  1683               	bsf	3,5	;RP0=1, select bank1
 12370  1E27  00B3               	movwf	(log@x+3)^(0+128)
 12371  1E28  1283               	bcf	3,5	;RP0=0, select bank0
 12372  1E29  083A               	movf	?___fladd+2,w
 12373  1E2A  1683               	bsf	3,5	;RP0=1, select bank1
 12374  1E2B  00B2               	movwf	(log@x+2)^(0+128)
 12375  1E2C  1283               	bcf	3,5	;RP0=0, select bank0
 12376  1E2D  0839               	movf	?___fladd+1,w
 12377  1E2E  1683               	bsf	3,5	;RP0=1, select bank1
 12378  1E2F  00B1               	movwf	(log@x+1)^(0+128)
 12379  1E30  1283               	bcf	3,5	;RP0=0, select bank0
 12380  1E31  0838               	movf	?___fladd,w
 12381  1E32  1683               	bsf	3,5	;RP0=1, select bank1
 12382  1E33  00B0               	movwf	log@x^(0+128)
 12383  1E34  30FF               	movlw	-1
 12384  1E35  1283               	bcf	3,5	;RP0=0, select bank0
 12385  1E36  07ED               	addwf	log@exponent,f
 12386  1E37  1C03               	skipc
 12387  1E38  03EE               	decf	log@exponent+1,f
 12388  1E39  1683               	bsf	3,5	;RP0=1, select bank1
 12389  1E3A  0833               	movf	(log@x+3)^(0+128),w
 12390  1E3B  00A3               	movwf	(eval_poly@x+3)^(0+128)
 12391  1E3C  0832               	movf	(log@x+2)^(0+128),w
 12392  1E3D  00A2               	movwf	(eval_poly@x+2)^(0+128)
 12393  1E3E  0831               	movf	(log@x+1)^(0+128),w
 12394  1E3F  00A1               	movwf	(eval_poly@x+1)^(0+128)
 12395  1E40  0830               	movf	log@x^(0+128),w
 12396  1E41  00A0               	movwf	eval_poly@x^(0+128)
 12397  1E42  3001               	movlw	(low ((log@coeff-__stringbase)| (0+32768)))& (0+255)
 12398  1E43  00A4               	movwf	eval_poly@d^(0+128)
 12399  1E44  3008               	movlw	8
 12400  1E45  00A5               	movwf	eval_poly@n^(0+128)
 12401  1E46  01A6               	clrf	(eval_poly@n+1)^(0+128)
 12402  1E47  120A  158A  2228  160A  158A  	fcall	_eval_poly
 12403  1E4C  0823               	movf	(?_eval_poly+3)^(0+128),w
 12404  1E4D  00B3               	movwf	(log@x+3)^(0+128)
 12405  1E4E  0822               	movf	(?_eval_poly+2)^(0+128),w
 12406  1E4F  00B2               	movwf	(log@x+2)^(0+128)
 12407  1E50  0821               	movf	(?_eval_poly+1)^(0+128),w
 12408  1E51  00B1               	movwf	(log@x+1)^(0+128)
 12409  1E52  0820               	movf	?_eval_poly^(0+128),w
 12410  1E53  00B0               	movwf	log@x^(0+128)
 12411  1E54  0833               	movf	(log@x+3)^(0+128),w
 12412  1E55  1283               	bcf	3,5	;RP0=0, select bank0
 12413  1E56  00BB               	movwf	___fladd@b+3
 12414  1E57  1683               	bsf	3,5	;RP0=1, select bank1
 12415  1E58  0832               	movf	(log@x+2)^(0+128),w
 12416  1E59  1283               	bcf	3,5	;RP0=0, select bank0
 12417  1E5A  00BA               	movwf	___fladd@b+2
 12418  1E5B  1683               	bsf	3,5	;RP0=1, select bank1
 12419  1E5C  0831               	movf	(log@x+1)^(0+128),w
 12420  1E5D  1283               	bcf	3,5	;RP0=0, select bank0
 12421  1E5E  00B9               	movwf	___fladd@b+1
 12422  1E5F  1683               	bsf	3,5	;RP0=1, select bank1
 12423  1E60  0830               	movf	log@x^(0+128),w
 12424  1E61  1283               	bcf	3,5	;RP0=0, select bank0
 12425  1E62  00B8               	movwf	___fladd@b
 12426  1E63  303F               	movlw	63
 12427  1E64  00D7               	movwf	___flmul@b+3
 12428  1E65  3031               	movlw	49
 12429  1E66  00D6               	movwf	___flmul@b+2
 12430  1E67  3072               	movlw	114
 12431  1E68  00D5               	movwf	___flmul@b+1
 12432  1E69  3018               	movlw	24
 12433  1E6A  00D4               	movwf	___flmul@b
 12434  1E6B  086D               	movf	log@exponent,w
 12435  1E6C  00AA               	movwf	___xxtofl@val
 12436  1E6D  086E               	movf	log@exponent+1,w
 12437  1E6E  120A  158A  27C8  160A  158A  	fcall	PL58	;call to abstracted procedure
 12438  1E73  120A  158A  25B5  160A  158A  	fcall	___xxtofl
 12439  1E78  120A  158A  27B6  160A  158A  	fcall	PL52	;call to abstracted procedure
 12440  1E7D  120A  118A  2392  160A  158A  	fcall	___flmul
 12441  1E82  27DD               	fcall	PL28	;call to abstracted procedure
 12442  1E83  120A  158A  22D4   	fcall	___fladd
 12443  1E86  083B               	movf	?___fladd+3,w
 12444  1E87  1683               	bsf	3,5	;RP0=1, select bank1
 12445  1E88  00B3               	movwf	(?_log+3)^(0+128)
 12446  1E89  1283               	bcf	3,5	;RP0=0, select bank0
 12447  1E8A  083A               	movf	?___fladd+2,w
 12448  1E8B  1683               	bsf	3,5	;RP0=1, select bank1
 12449  1E8C  00B2               	movwf	(?_log+2)^(0+128)
 12450  1E8D  1283               	bcf	3,5	;RP0=0, select bank0
 12451  1E8E  0839               	movf	?___fladd+1,w
 12452  1E8F  1683               	bsf	3,5	;RP0=1, select bank1
 12453  1E90  00B1               	movwf	(?_log+1)^(0+128)
 12454  1E91  1283               	bcf	3,5	;RP0=0, select bank0
 12455  1E92  0838               	movf	?___fladd,w
 12456  1E93  1683               	bsf	3,5	;RP0=1, select bank1
 12457  1E94  00B0               	movwf	?_log^(0+128)
 12458  1E95  0008               	return
 12459  1E96                     __end_of_log:
 12460  1E96                     __ptext65:	
 12461 ;; *************** function ___flge *****************
 12462 ;; Defined at:
 12463 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
 12464 ;; Parameters:    Size  Location     Type
 12465 ;;  ff1             4   52[BANK0 ] unsigned char 
 12466 ;;  ff2             4   56[BANK0 ] unsigned char 
 12467 ;; Auto vars:     Size  Location     Type
 12468 ;;		None
 12469 ;; Return value:  Size  Location     Type
 12470 ;;		None               void
 12471 ;; Registers used:
 12472 ;;		wreg, status,2, status,0
 12473 ;; Tracked objects:
 12474 ;;		On entry : 300/0
 12475 ;;		On exit  : 300/0
 12476 ;;		Unchanged: 0/0
 12477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12478 ;;      Params:         0       8       0       0       0
 12479 ;;      Locals:         0       0       0       0       0
 12480 ;;      Temps:          0       4       0       0       0
 12481 ;;      Totals:         0      12       0       0       0
 12482 ;;Total ram usage:       12 bytes
 12483 ;; Hardware stack levels used: 1
 12484 ;; Hardware stack levels required when called: 1
 12485 ;; This function calls:
 12486 ;;		Nothing
 12487 ;; This function is called by:
 12488 ;;		_Auto_Relay0
 12489 ;;		_Auto_Relay1
 12490 ;;		_log
 12491 ;; This function uses a non-reentrant model
 12492 ;;
 12493                           
 12494                           
 12495                           ;psect for function ___flge
 12496  1E96                     ___flge:
 12497                           
 12498                           ;incstack = 0
 12499                           ; Regs used in ___flge: [wreg+status,2+status,0]
 12500  1E96  3080               	movlw	128
 12501  1E97  01DC               	clrf	??___flge
 12502  1E98  01DD               	clrf	??___flge+1
 12503  1E99  0556               	andwf	___flge@ff1+2,w
 12504  1E9A  00DE               	movwf	??___flge+2
 12505  1E9B  307F               	movlw	127
 12506  1E9C  0557               	andwf	___flge@ff1+3,w
 12507  1E9D  00DF               	movwf	??___flge+3
 12508  1E9E  045E               	iorwf	??___flge+2,w
 12509  1E9F  045D               	iorwf	??___flge+1,w
 12510  1EA0  045C               	iorwf	??___flge,w
 12511  1EA1  1D03               	skipz
 12512  1EA2  2EA7               	goto	l4336
 12513  1EA3  01D4               	clrf	___flge@ff1
 12514  1EA4  01D5               	clrf	___flge@ff1+1
 12515  1EA5  01D6               	clrf	___flge@ff1+2
 12516  1EA6  01D7               	clrf	___flge@ff1+3
 12517  1EA7                     l4336:
 12518  1EA7  3080               	movlw	128
 12519  1EA8  01DC               	clrf	??___flge
 12520  1EA9  01DD               	clrf	??___flge+1
 12521  1EAA  055A               	andwf	___flge@ff2+2,w
 12522  1EAB  00DE               	movwf	??___flge+2
 12523  1EAC  307F               	movlw	127
 12524  1EAD  055B               	andwf	___flge@ff2+3,w
 12525  1EAE  00DF               	movwf	??___flge+3
 12526  1EAF  045E               	iorwf	??___flge+2,w
 12527  1EB0  045D               	iorwf	??___flge+1,w
 12528  1EB1  045C               	iorwf	??___flge,w
 12529  1EB2  1D03               	skipz
 12530  1EB3  2EB8               	goto	l1229
 12531  1EB4  01D8               	clrf	___flge@ff2
 12532  1EB5  01D9               	clrf	___flge@ff2+1
 12533  1EB6  01DA               	clrf	___flge@ff2+2
 12534  1EB7  01DB               	clrf	___flge@ff2+3
 12535  1EB8                     l1229:
 12536  1EB8  1FD7               	btfss	___flge@ff1+3,7
 12537  1EB9  2ED5               	goto	l4342
 12538  1EBA  3080               	movlw	128
 12539  1EBB  01DC               	clrf	??___flge
 12540  1EBC  01DD               	clrf	??___flge+1
 12541  1EBD  01DE               	clrf	??___flge+2
 12542  1EBE  00DF               	movwf	??___flge+3
 12543  1EBF  0854               	movf	___flge@ff1,w
 12544  1EC0  02DC               	subwf	??___flge,f
 12545  1EC1  0855               	movf	___flge@ff1+1,w
 12546  1EC2  1C03               	skipc
 12547  1EC3  0F55               	incfsz	___flge@ff1+1,w
 12548  1EC4  02DD               	subwf	??___flge+1,f
 12549  1EC5  0856               	movf	___flge@ff1+2,w
 12550  1EC6  1C03               	skipc
 12551  1EC7  0F56               	incfsz	___flge@ff1+2,w
 12552  1EC8  02DE               	subwf	??___flge+2,f
 12553  1EC9  0857               	movf	___flge@ff1+3,w
 12554  1ECA  1C03               	skipc
 12555  1ECB  0F57               	incfsz	___flge@ff1+3,w
 12556  1ECC  02DF               	subwf	??___flge+3,f
 12557  1ECD  085F               	movf	??___flge+3,w
 12558  1ECE  00D7               	movwf	___flge@ff1+3
 12559  1ECF  085E               	movf	??___flge+2,w
 12560  1ED0  00D6               	movwf	___flge@ff1+2
 12561  1ED1  085D               	movf	??___flge+1,w
 12562  1ED2  00D5               	movwf	___flge@ff1+1
 12563  1ED3  085C               	movf	??___flge,w
 12564  1ED4  00D4               	movwf	___flge@ff1
 12565  1ED5                     l4342:
 12566  1ED5  1FDB               	btfss	___flge@ff2+3,7
 12567  1ED6  2EF2               	goto	l1231
 12568  1ED7  3080               	movlw	128
 12569  1ED8  01DC               	clrf	??___flge
 12570  1ED9  01DD               	clrf	??___flge+1
 12571  1EDA  01DE               	clrf	??___flge+2
 12572  1EDB  00DF               	movwf	??___flge+3
 12573  1EDC  0858               	movf	___flge@ff2,w
 12574  1EDD  02DC               	subwf	??___flge,f
 12575  1EDE  0859               	movf	___flge@ff2+1,w
 12576  1EDF  1C03               	skipc
 12577  1EE0  0F59               	incfsz	___flge@ff2+1,w
 12578  1EE1  02DD               	subwf	??___flge+1,f
 12579  1EE2  085A               	movf	___flge@ff2+2,w
 12580  1EE3  1C03               	skipc
 12581  1EE4  0F5A               	incfsz	___flge@ff2+2,w
 12582  1EE5  02DE               	subwf	??___flge+2,f
 12583  1EE6  085B               	movf	___flge@ff2+3,w
 12584  1EE7  1C03               	skipc
 12585  1EE8  0F5B               	incfsz	___flge@ff2+3,w
 12586  1EE9  02DF               	subwf	??___flge+3,f
 12587  1EEA  085F               	movf	??___flge+3,w
 12588  1EEB  00DB               	movwf	___flge@ff2+3
 12589  1EEC  085E               	movf	??___flge+2,w
 12590  1EED  00DA               	movwf	___flge@ff2+2
 12591  1EEE  085D               	movf	??___flge+1,w
 12592  1EEF  00D9               	movwf	___flge@ff2+1
 12593  1EF0  085C               	movf	??___flge,w
 12594  1EF1  00D8               	movwf	___flge@ff2
 12595  1EF2                     l1231:
 12596  1EF2  3080               	movlw	128
 12597  1EF3  06D7               	xorwf	___flge@ff1+3,f
 12598  1EF4  06DB               	xorwf	___flge@ff2+3,f
 12599  1EF5  085B               	movf	___flge@ff2+3,w
 12600  1EF6  0257               	subwf	___flge@ff1+3,w
 12601  1EF7  1D03               	skipz
 12602  1EF8  0008               	return
 12603  1EF9  085A               	movf	___flge@ff2+2,w
 12604  1EFA  0256               	subwf	___flge@ff1+2,w
 12605  1EFB  1D03               	skipz
 12606  1EFC  0008               	return
 12607  1EFD  0859               	movf	___flge@ff2+1,w
 12608  1EFE  0255               	subwf	___flge@ff1+1,w
 12609  1EFF  1D03               	skipz
 12610  1F00  0008               	return
 12611  1F01  0858               	movf	___flge@ff2,w
 12612  1F02  0254               	subwf	___flge@ff1,w
 12613  1F03  0008               	return
 12614  1F04                     __end_of___flge:
 12615  1F04                     __ptext7:	
 12616 ;; *************** function ___fleq *****************
 12617 ;; Defined at:
 12618 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fleq.c"
 12619 ;; Parameters:    Size  Location     Type
 12620 ;;  ff1             4    0[BANK0 ] PTR int 
 12621 ;;  ff2             4    4[BANK0 ] PTR int 
 12622 ;; Auto vars:     Size  Location     Type
 12623 ;;		None
 12624 ;; Return value:  Size  Location     Type
 12625 ;;		None               void
 12626 ;; Registers used:
 12627 ;;		wreg, status,2, status,0
 12628 ;; Tracked objects:
 12629 ;;		On entry : 300/0
 12630 ;;		On exit  : 300/0
 12631 ;;		Unchanged: 0/0
 12632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12633 ;;      Params:         0       8       0       0       0
 12634 ;;      Locals:         0       0       0       0       0
 12635 ;;      Temps:          0       4       0       0       0
 12636 ;;      Totals:         0      12       0       0       0
 12637 ;;Total ram usage:       12 bytes
 12638 ;; Hardware stack levels used: 1
 12639 ;; Hardware stack levels required when called: 1
 12640 ;; This function calls:
 12641 ;;		Nothing
 12642 ;; This function is called by:
 12643 ;;		_log
 12644 ;;		_frexp
 12645 ;; This function uses a non-reentrant model
 12646 ;;
 12647                           
 12648                           
 12649                           ;psect for function ___fleq
 12650  1F04                     ___fleq:
 12651                           
 12652                           ;incstack = 0
 12653                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 12654  1F04  3080               	movlw	128
 12655  1F05  01A8               	clrf	??___fleq
 12656  1F06  01A9               	clrf	??___fleq+1
 12657  1F07  0522               	andwf	___fleq@ff1+2,w
 12658  1F08  00AA               	movwf	??___fleq+2
 12659  1F09  307F               	movlw	127
 12660  1F0A  0523               	andwf	___fleq@ff1+3,w
 12661  1F0B  00AB               	movwf	??___fleq+3
 12662  1F0C  042A               	iorwf	??___fleq+2,w
 12663  1F0D  0429               	iorwf	??___fleq+1,w
 12664  1F0E  0428               	iorwf	??___fleq,w
 12665  1F0F  1D03               	skipz
 12666  1F10  2F15               	goto	l3878
 12667  1F11  01A0               	clrf	___fleq@ff1
 12668  1F12  01A1               	clrf	___fleq@ff1+1
 12669  1F13  01A2               	clrf	___fleq@ff1+2
 12670  1F14  01A3               	clrf	___fleq@ff1+3
 12671  1F15                     l3878:
 12672  1F15  3080               	movlw	128
 12673  1F16  01A8               	clrf	??___fleq
 12674  1F17  01A9               	clrf	??___fleq+1
 12675  1F18  0526               	andwf	___fleq@ff2+2,w
 12676  1F19  00AA               	movwf	??___fleq+2
 12677  1F1A  307F               	movlw	127
 12678  1F1B  0527               	andwf	___fleq@ff2+3,w
 12679  1F1C  00AB               	movwf	??___fleq+3
 12680  1F1D  042A               	iorwf	??___fleq+2,w
 12681  1F1E  0429               	iorwf	??___fleq+1,w
 12682  1F1F  0428               	iorwf	??___fleq,w
 12683  1F20  1D03               	skipz
 12684  1F21  2F26               	goto	l3882
 12685  1F22  01A4               	clrf	___fleq@ff2
 12686  1F23  01A5               	clrf	___fleq@ff2+1
 12687  1F24  01A6               	clrf	___fleq@ff2+2
 12688  1F25  01A7               	clrf	___fleq@ff2+3
 12689  1F26                     l3882:
 12690  1F26  0827               	movf	___fleq@ff2+3,w
 12691  1F27  0623               	xorwf	___fleq@ff1+3,w
 12692  1F28  1D03               	skipz
 12693  1F29  2F34               	goto	u2725
 12694  1F2A  0826               	movf	___fleq@ff2+2,w
 12695  1F2B  0622               	xorwf	___fleq@ff1+2,w
 12696  1F2C  1D03               	skipz
 12697  1F2D  2F34               	goto	u2725
 12698  1F2E  0825               	movf	___fleq@ff2+1,w
 12699  1F2F  0621               	xorwf	___fleq@ff1+1,w
 12700  1F30  1D03               	skipz
 12701  1F31  2F34               	goto	u2725
 12702  1F32  0824               	movf	___fleq@ff2,w
 12703  1F33  0620               	xorwf	___fleq@ff1,w
 12704  1F34                     u2725:
 12705  1F34  1903               	skipnz
 12706  1F35  2F38               	goto	l3886
 12707  1F36  1003               	clrc
 12708  1F37  0008               	return
 12709  1F38                     l3886:
 12710  1F38  1403               	setc
 12711  1F39  0008               	return
 12712  1F3A                     __end_of___fleq:
 12713  1F3A                     __ptext6:	
 12714 ;; *************** function _frexp *****************
 12715 ;; Defined at:
 12716 ;;		line 254 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\frexp.c"
 12717 ;; Parameters:    Size  Location     Type
 12718 ;;  value           4   12[BANK0 ] int 
 12719 ;;  eptr            1   16[BANK0 ] PTR int 
 12720 ;;		 -> log@exponent(2), 
 12721 ;; Auto vars:     Size  Location     Type
 12722 ;;		None
 12723 ;; Return value:  Size  Location     Type
 12724 ;;                  4   12[BANK0 ] PTR int 
 12725 ;; Registers used:
 12726 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12727 ;; Tracked objects:
 12728 ;;		On entry : 300/0
 12729 ;;		On exit  : B00/0
 12730 ;;		Unchanged: 0/0
 12731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12732 ;;      Params:         0       5       0       0       0
 12733 ;;      Locals:         0       0       0       0       0
 12734 ;;      Temps:          0       2       0       0       0
 12735 ;;      Totals:         0       7       0       0       0
 12736 ;;Total ram usage:        7 bytes
 12737 ;; Hardware stack levels used: 1
 12738 ;; Hardware stack levels required when called: 2
 12739 ;; This function calls:
 12740 ;;		___fleq
 12741 ;; This function is called by:
 12742 ;;		_log
 12743 ;; This function uses a non-reentrant model
 12744 ;;
 12745                           
 12746                           
 12747                           ;psect for function _frexp
 12748  1F3A                     _frexp:
 12749                           
 12750                           ;incstack = 0
 12751                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 12752  1F3A  082F               	movf	frexp@value+3,w
 12753  1F3B  00A3               	movwf	___fleq@ff1+3
 12754  1F3C  082E               	movf	frexp@value+2,w
 12755  1F3D  00A2               	movwf	___fleq@ff1+2
 12756  1F3E  082D               	movf	frexp@value+1,w
 12757  1F3F  00A1               	movwf	___fleq@ff1+1
 12758  1F40  082C               	movf	frexp@value,w
 12759  1F41  27F4  160A  158A   	fcall	PL68	;call to abstracted procedure
 12760  1F44  2704  160A  158A   	fcall	___fleq
 12761  1F47  1C03               	btfss	3,0
 12762  1F48  2F54               	goto	l4400
 12763  1F49  0830               	movf	frexp@eptr,w
 12764  1F4A  0084               	movwf	4
 12765  1F4B  1383               	bcf	3,7	;select IRP bank0
 12766  1F4C  0180               	clrf	0
 12767  1F4D  0A84               	incf	4,f
 12768  1F4E  0180               	clrf	0
 12769  1F4F  01AC               	clrf	?_frexp
 12770  1F50  01AD               	clrf	?_frexp+1
 12771  1F51  01AE               	clrf	?_frexp+2
 12772  1F52  01AF               	clrf	?_frexp+3
 12773  1F53  0008               	return
 12774  1F54                     l4400:
 12775  1F54  082F               	movf	frexp@value+3,w
 12776  1F55  397F               	andlw	127
 12777  1F56  00B1               	movwf	??_frexp
 12778  1F57  01B2               	clrf	??_frexp+1
 12779  1F58  1003               	clrc
 12780  1F59  0DB1               	rlf	??_frexp,f
 12781  1F5A  0DB2               	rlf	??_frexp+1,f
 12782  1F5B  0830               	movf	frexp@eptr,w
 12783  1F5C  0084               	movwf	4
 12784  1F5D  0831               	movf	??_frexp,w
 12785  1F5E  1383               	bcf	3,7	;select IRP bank0
 12786  1F5F  0080               	movwf	0
 12787  1F60  0A84               	incf	4,f
 12788  1F61  0832               	movf	??_frexp+1,w
 12789  1F62  0080               	movwf	0
 12790  1F63  0D2E               	rlf	frexp@value+2,w
 12791  1F64  0D2E               	rlf	frexp@value+2,w
 12792  1F65  3901               	andlw	1
 12793  1F66  00B1               	movwf	??_frexp
 12794  1F67  01B2               	clrf	??_frexp+1
 12795  1F68  0830               	movf	frexp@eptr,w
 12796  1F69  0084               	movwf	4
 12797  1F6A  0831               	movf	??_frexp,w
 12798  1F6B  0480               	iorwf	0,f
 12799  1F6C  0A84               	incf	4,f
 12800  1F6D  0832               	movf	??_frexp+1,w
 12801  1F6E  0480               	iorwf	0,f
 12802  1F6F  0830               	movf	frexp@eptr,w
 12803  1F70  0084               	movwf	4
 12804  1F71  3082               	movlw	130
 12805  1F72  0780               	addwf	0,f
 12806  1F73  0F84               	incfsz	4,f
 12807  1F74  0800               	movf	0,w
 12808  1F75  1803               	skipnc
 12809  1F76  0A00               	incf	0,w
 12810  1F77  00FF               	movwf	127
 12811  1F78  3EFF               	addlw	255
 12812  1F79  0080               	movwf	0
 12813  1F7A  0384               	decf	4,f
 12814  1F7B  082F               	movf	frexp@value+3,w
 12815  1F7C  3980               	andlw	-128
 12816  1F7D  383F               	iorlw	63
 12817  1F7E  00AF               	movwf	frexp@value+3
 12818  1F7F  13AE               	bcf	frexp@value+2,7
 12819  1F80  0008               	return
 12820  1F81                     __end_of_frexp:
 12821  1F81                     __ptext67:	
 12822 ;; *************** function _Rele0Desligado *****************
 12823 ;; Defined at:
 12824 ;;		line 915 in file "SlaveLiofilizadorVer1.c"
 12825 ;; Parameters:    Size  Location     Type
 12826 ;;		None
 12827 ;; Auto vars:     Size  Location     Type
 12828 ;;		None
 12829 ;; Return value:  Size  Location     Type
 12830 ;;                  1    wreg      void 
 12831 ;; Registers used:
 12832 ;;		None
 12833 ;; Tracked objects:
 12834 ;;		On entry : 100/300
 12835 ;;		On exit  : 300/0
 12836 ;;		Unchanged: 0/0
 12837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12838 ;;      Params:         0       0       0       0       0
 12839 ;;      Locals:         0       0       0       0       0
 12840 ;;      Temps:          0       0       0       0       0
 12841 ;;      Totals:         0       0       0       0       0
 12842 ;;Total ram usage:        0 bytes
 12843 ;; Hardware stack levels used: 1
 12844 ;; Hardware stack levels required when called: 1
 12845 ;; This function calls:
 12846 ;;		Nothing
 12847 ;; This function is called by:
 12848 ;;		_Auto_Relay0
 12849 ;; This function uses a non-reentrant model
 12850 ;;
 12851                           
 12852                           
 12853                           ;psect for function _Rele0Desligado
 12854  1F81                     _Rele0Desligado:
 12855  1F81                     l6940:	
 12856                           ;incstack = 0
 12857                           ; Regs used in _Rele0Desligado: []
 12858                           
 12859                           
 12860                           ;SlaveLiofilizadorVer1.c: 916:      PORTCbits.RC0=0;
 12861  1F81  1283               	bcf	3,5	;RP0=0, select bank0
 12862  1F82  1303               	bcf	3,6	;RP1=0, select bank0
 12863  1F83  1007               	bcf	7,0	;volatile
 12864  1F84  0008               	return
 12865  1F85                     __end_of_Rele0Desligado:
 12866  1F85                     __ptext61:	
 12867 ;; *************** function _Rele1Desligado *****************
 12868 ;; Defined at:
 12869 ;;		line 919 in file "SlaveLiofilizadorVer1.c"
 12870 ;; Parameters:    Size  Location     Type
 12871 ;;		None
 12872 ;; Auto vars:     Size  Location     Type
 12873 ;;		None
 12874 ;; Return value:  Size  Location     Type
 12875 ;;                  1    wreg      void 
 12876 ;; Registers used:
 12877 ;;		None
 12878 ;; Tracked objects:
 12879 ;;		On entry : 0/300
 12880 ;;		On exit  : 300/0
 12881 ;;		Unchanged: 0/0
 12882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12883 ;;      Params:         0       0       0       0       0
 12884 ;;      Locals:         0       0       0       0       0
 12885 ;;      Temps:          0       0       0       0       0
 12886 ;;      Totals:         0       0       0       0       0
 12887 ;;Total ram usage:        0 bytes
 12888 ;; Hardware stack levels used: 1
 12889 ;; Hardware stack levels required when called: 1
 12890 ;; This function calls:
 12891 ;;		Nothing
 12892 ;; This function is called by:
 12893 ;;		_Auto_Relay1
 12894 ;; This function uses a non-reentrant model
 12895 ;;
 12896                           
 12897                           
 12898                           ;psect for function _Rele1Desligado
 12899  1F85                     _Rele1Desligado:
 12900  1F85                     l6942:	
 12901                           ;incstack = 0
 12902                           ; Regs used in _Rele1Desligado: []
 12903                           
 12904                           
 12905                           ;SlaveLiofilizadorVer1.c: 920:      PORTCbits.RC1=0;
 12906  1F85  1283               	bcf	3,5	;RP0=0, select bank0
 12907  1F86  1303               	bcf	3,6	;RP1=0, select bank0
 12908  1F87  1087               	bcf	7,1	;volatile
 12909  1F88  0008               	return
 12910  1F89                     __end_of_Rele1Desligado:
 12911  1F89                     PL4:
 12912  1F89  00D4               	movwf	___flge@ff1
 12913  1F8A  1683               	bsf	3,5	;RP0=1, select bank3
 12914  1F8B  1703               	bsf	3,6	;RP1=1, select bank3
 12915  1F8C  0813               	movf	(_Temperatura1+3)^(0+384),w
 12916  1F8D  1283               	bcf	3,5	;RP0=0, select bank0
 12917  1F8E  1303               	bcf	3,6	;RP1=0, select bank0
 12918  1F8F  00DB               	movwf	___flge@ff2+3
 12919  1F90  1683               	bsf	3,5	;RP0=1, select bank3
 12920  1F91  1703               	bsf	3,6	;RP1=1, select bank3
 12921  1F92  0812               	movf	(_Temperatura1+2)^(0+384),w
 12922  1F93  1283               	bcf	3,5	;RP0=0, select bank0
 12923  1F94  1303               	bcf	3,6	;RP1=0, select bank0
 12924  1F95  00DA               	movwf	___flge@ff2+2
 12925  1F96  1683               	bsf	3,5	;RP0=1, select bank3
 12926  1F97  1703               	bsf	3,6	;RP1=1, select bank3
 12927  1F98  0811               	movf	(_Temperatura1+1)^(0+384),w
 12928  1F99  1283               	bcf	3,5	;RP0=0, select bank0
 12929  1F9A  1303               	bcf	3,6	;RP1=0, select bank0
 12930  1F9B  00D9               	movwf	___flge@ff2+1
 12931  1F9C  1683               	bsf	3,5	;RP0=1, select bank3
 12932  1F9D  1703               	bsf	3,6	;RP1=1, select bank3
 12933  1F9E  0810               	movf	_Temperatura1^(0+384),w
 12934  1F9F  1283               	bcf	3,5	;RP0=0, select bank0
 12935  1FA0  1303               	bcf	3,6	;RP1=0, select bank0
 12936  1FA1  00D8               	movwf	___flge@ff2
 12937  1FA2  0008               	return
 12938  1FA3                     __end_ofPL4:
 12939  1FA3                     PL6:
 12940  1FA3  00D4               	movwf	___flge@ff1
 12941  1FA4  1683               	bsf	3,5	;RP0=1, select bank3
 12942  1FA5  1703               	bsf	3,6	;RP1=1, select bank3
 12943  1FA6  0817               	movf	(_Temperatura0+3)^(0+384),w
 12944  1FA7  1283               	bcf	3,5	;RP0=0, select bank0
 12945  1FA8  1303               	bcf	3,6	;RP1=0, select bank0
 12946  1FA9  00DB               	movwf	___flge@ff2+3
 12947  1FAA  1683               	bsf	3,5	;RP0=1, select bank3
 12948  1FAB  1703               	bsf	3,6	;RP1=1, select bank3
 12949  1FAC  0816               	movf	(_Temperatura0+2)^(0+384),w
 12950  1FAD  1283               	bcf	3,5	;RP0=0, select bank0
 12951  1FAE  1303               	bcf	3,6	;RP1=0, select bank0
 12952  1FAF  00DA               	movwf	___flge@ff2+2
 12953  1FB0  1683               	bsf	3,5	;RP0=1, select bank3
 12954  1FB1  1703               	bsf	3,6	;RP1=1, select bank3
 12955  1FB2  0815               	movf	(_Temperatura0+1)^(0+384),w
 12956  1FB3  1283               	bcf	3,5	;RP0=0, select bank0
 12957  1FB4  1303               	bcf	3,6	;RP1=0, select bank0
 12958  1FB5  00D9               	movwf	___flge@ff2+1
 12959  1FB6  1683               	bsf	3,5	;RP0=1, select bank3
 12960  1FB7  1703               	bsf	3,6	;RP1=1, select bank3
 12961  1FB8  0814               	movf	_Temperatura0^(0+384),w
 12962  1FB9  1283               	bcf	3,5	;RP0=0, select bank0
 12963  1FBA  1303               	bcf	3,6	;RP1=0, select bank0
 12964  1FBB  00D8               	movwf	___flge@ff2
 12965  1FBC  0008               	return
 12966  1FBD                     __end_ofPL6:
 12967  1FBD                     PL10:
 12968  1FBD  1683               	bsf	3,5	;RP0=1, select bank1
 12969  1FBE  0864               	movf	(_SetPoint0+3)^(0+128),w	;volatile
 12970  1FBF  1283               	bcf	3,5	;RP0=0, select bank0
 12971  1FC0  00D7               	movwf	___flge@ff1+3
 12972  1FC1  1683               	bsf	3,5	;RP0=1, select bank1
 12973  1FC2  0863               	movf	(_SetPoint0+2)^(0+128),w	;volatile
 12974  1FC3  1283               	bcf	3,5	;RP0=0, select bank0
 12975  1FC4  00D6               	movwf	___flge@ff1+2
 12976  1FC5  1683               	bsf	3,5	;RP0=1, select bank1
 12977  1FC6  0862               	movf	(_SetPoint0+1)^(0+128),w	;volatile
 12978  1FC7  1283               	bcf	3,5	;RP0=0, select bank0
 12979  1FC8  00D5               	movwf	___flge@ff1+1
 12980  1FC9  1683               	bsf	3,5	;RP0=1, select bank1
 12981  1FCA  0861               	movf	_SetPoint0^(0+128),w	;volatile
 12982  1FCB  1283               	bcf	3,5	;RP0=0, select bank0
 12983  1FCC  0008               	return
 12984  1FCD                     __end_ofPL10:
 12985  1FCD                     PL12:
 12986  1FCD  1683               	bsf	3,5	;RP0=1, select bank1
 12987  1FCE  0860               	movf	(_SetPoint1+3)^(0+128),w	;volatile
 12988  1FCF  1283               	bcf	3,5	;RP0=0, select bank0
 12989  1FD0  00D7               	movwf	___flge@ff1+3
 12990  1FD1  1683               	bsf	3,5	;RP0=1, select bank1
 12991  1FD2  085F               	movf	(_SetPoint1+2)^(0+128),w	;volatile
 12992  1FD3  1283               	bcf	3,5	;RP0=0, select bank0
 12993  1FD4  00D6               	movwf	___flge@ff1+2
 12994  1FD5  1683               	bsf	3,5	;RP0=1, select bank1
 12995  1FD6  085E               	movf	(_SetPoint1+1)^(0+128),w	;volatile
 12996  1FD7  1283               	bcf	3,5	;RP0=0, select bank0
 12997  1FD8  00D5               	movwf	___flge@ff1+1
 12998  1FD9  1683               	bsf	3,5	;RP0=1, select bank1
 12999  1FDA  085D               	movf	_SetPoint1^(0+128),w	;volatile
 13000  1FDB  1283               	bcf	3,5	;RP0=0, select bank0
 13001  1FDC  0008               	return
 13002  1FDD                     __end_ofPL12:
 13003  1FDD                     PL28:
 13004  1FDD  0857               	movf	?___flmul+3,w
 13005  1FDE  00BF               	movwf	___fladd@a+3
 13006  1FDF  0856               	movf	?___flmul+2,w
 13007  1FE0  00BE               	movwf	___fladd@a+2
 13008  1FE1  0855               	movf	?___flmul+1,w
 13009  1FE2  00BD               	movwf	___fladd@a+1
 13010  1FE3  0854               	movf	?___flmul,w
 13011  1FE4  00BC               	movwf	___fladd@a
 13012  1FE5  0008               	return
 13013  1FE6                     __end_ofPL28:
 13014  1FE6                     PL38:
 13015  1FE6  084F               	movf	?___flsub+3,w
 13016  1FE7  00D7               	movwf	___flge@ff1+3
 13017  1FE8  084E               	movf	?___flsub+2,w
 13018  1FE9  00D6               	movwf	___flge@ff1+2
 13019  1FEA  084D               	movf	?___flsub+1,w
 13020  1FEB  00D5               	movwf	___flge@ff1+1
 13021  1FEC  084C               	movf	?___flsub,w
 13022  1FED  0008               	return
 13023  1FEE                     __end_ofPL38:
 13024  1FEE                     PL66:
 13025  1FEE  1683               	bsf	3,5	;RP0=1, select bank1
 13026  1FEF  01B0               	clrf	?_log^(0+128)
 13027  1FF0  01B1               	clrf	(?_log+1)^(0+128)
 13028  1FF1  01B2               	clrf	(?_log+2)^(0+128)
 13029  1FF2  01B3               	clrf	(?_log+3)^(0+128)
 13030  1FF3  0008               	return
 13031  1FF4                     __end_ofPL66:
 13032  1FF4                     PL68:
 13033  1FF4  00A0               	movwf	___fleq@ff1
 13034  1FF5  01A4               	clrf	___fleq@ff2
 13035  1FF6  01A5               	clrf	___fleq@ff2+1
 13036  1FF7  01A6               	clrf	___fleq@ff2+2
 13037  1FF8  01A7               	clrf	___fleq@ff2+3
 13038  1FF9  0008               	return
 13039  1FFA                     __end_ofPL68:
 13040  1FFA                     PL82:
 13041  1FFA  00AA               	movwf	___xxtofl@val
 13042  1FFB  3001               	movlw	1
 13043  1FFC  01AB               	clrf	___xxtofl@val+1
 13044  1FFD  01AC               	clrf	___xxtofl@val+2
 13045  1FFE  01AD               	clrf	___xxtofl@val+3
 13046  1FFF  0008               	return
 13047  2000                     __end_ofPL82:
 13048                           
 13049                           	psect	text68
 13050  07F0                     __ptext68:	
 13051 ;; *************** function _ADC_init *****************
 13052 ;; Defined at:
 13053 ;;		line 10 in file "adc.c"
 13054 ;; Parameters:    Size  Location     Type
 13055 ;;		None
 13056 ;; Auto vars:     Size  Location     Type
 13057 ;;		None
 13058 ;; Return value:  Size  Location     Type
 13059 ;;                  1    wreg      void 
 13060 ;; Registers used:
 13061 ;;		wreg, status,2, status,0
 13062 ;; Tracked objects:
 13063 ;;		On entry : 0/100
 13064 ;;		On exit  : 300/0
 13065 ;;		Unchanged: 0/0
 13066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13067 ;;      Params:         0       0       0       0       0
 13068 ;;      Locals:         0       0       0       0       0
 13069 ;;      Temps:          0       0       0       0       0
 13070 ;;      Totals:         0       0       0       0       0
 13071 ;;Total ram usage:        0 bytes
 13072 ;; Hardware stack levels used: 1
 13073 ;; Hardware stack levels required when called: 1
 13074 ;; This function calls:
 13075 ;;		Nothing
 13076 ;; This function is called by:
 13077 ;;		_main
 13078 ;; This function uses a non-reentrant model
 13079 ;;
 13080                           
 13081                           
 13082                           ;psect for function _ADC_init
 13083  07F0                     _ADC_init:
 13084                           
 13085                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 13086                           
 13087                           ;incstack = 0
 13088                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 13089  07F0  30C0               	movlw	192
 13090  07F1  1283               	bcf	3,5	;RP0=0, select bank0
 13091  07F2  1303               	bcf	3,6	;RP1=0, select bank0
 13092  07F3  049F               	iorwf	31,f	;volatile
 13093                           
 13094                           ;adc.c: 12:      ADCON1=0b10000000;
 13095  07F4  3080               	movlw	128
 13096  07F5  1683               	bsf	3,5	;RP0=1, select bank1
 13097  07F6  009F               	movwf	31	;volatile
 13098                           
 13099                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 13100  07F7  179F               	bsf	31,7	;volatile
 13101                           
 13102                           ;adc.c: 14:      ADCON0bits.ADON=1;
 13103  07F8  1283               	bcf	3,5	;RP0=0, select bank0
 13104  07F9  141F               	bsf	31,0	;volatile
 13105  07FA  0008               	return
 13106  07FB                     __end_of_ADC_init:
 13107                           
 13108                           	psect	text69
 13109  11CC                     __ptext69:	
 13110 ;; *************** function _isr *****************
 13111 ;; Defined at:
 13112 ;;		line 29 in file "isr.c"
 13113 ;; Parameters:    Size  Location     Type
 13114 ;;		None
 13115 ;; Auto vars:     Size  Location     Type
 13116 ;;  tempo           2    4[COMMON] unsigned int 
 13117 ;; Return value:  Size  Location     Type
 13118 ;;                  1    wreg      void 
 13119 ;; Registers used:
 13120 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 13121 ;; Tracked objects:
 13122 ;;		On entry : 0/0
 13123 ;;		On exit  : 300/0
 13124 ;;		Unchanged: 0/0
 13125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13126 ;;      Params:         0       0       0       0       0
 13127 ;;      Locals:         2       0       0       0       0
 13128 ;;      Temps:          4       0       0       0       0
 13129 ;;      Totals:         6       0       0       0       0
 13130 ;;Total ram usage:        6 bytes
 13131 ;; Hardware stack levels used: 1
 13132 ;; This function calls:
 13133 ;;		Nothing
 13134 ;; This function is called by:
 13135 ;;		Interrupt level 1
 13136 ;; This function uses a non-reentrant model
 13137 ;;
 13138                           
 13139                           
 13140                           ;psect for function _isr
 13141  11CC                     _isr:
 13142                           
 13143                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 13144  11CC  188B               	btfsc	11,1	;volatile
 13145                           
 13146                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 13147  11CD  108B               	bcf	11,1	;volatile
 13148                           
 13149                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 13150                           
 13151                           ;isr.c: 37:       }
 13152  11CE  1C0C               	btfss	12,0	;volatile
 13153  11CF  2A47               	goto	i1l5938
 13154                           
 13155                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 13156  11D0  30B1               	movlw	177
 13157  11D1  008F               	movwf	15	;volatile
 13158                           
 13159                           ;isr.c: 42:                 TMR1L=0xF3;
 13160  11D2  30F3               	movlw	243
 13161  11D3  008E               	movwf	14	;volatile
 13162                           
 13163                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 13164  11D4  100C               	bcf	12,0	;volatile
 13165                           
 13166                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 13167  11D5  1683               	bsf	3,5	;RP0=1, select bank1
 13168  11D6  1FEC               	btfss	_generic_status^(0+128),7
 13169  11D7  29DA               	goto	i1l5886
 13170                           
 13171                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 13172  11D8  13EC               	bcf	_generic_status^(0+128),7
 13173  11D9  0064               	clrwdt	;# 
 13174  11DA                     i1l5886:
 13175                           
 13176                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 13177  11DA  300A               	movlw	10
 13178  11DB  1683               	bsf	3,5	;RP0=1, select bank3
 13179  11DC  1703               	bsf	3,6	;RP1=1, select bank3
 13180  11DD  07AA               	addwf	_Delay_Led_Tmr0^(0+384),f	;volatile
 13181  11DE  1803               	skipnc
 13182  11DF  0AAB               	incf	(_Delay_Led_Tmr0+1)^(0+384),f	;volatile
 13183                           
 13184                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 13185  11E0  3003               	movlw	3
 13186  11E1  022B               	subwf	(_Delay_Led_Tmr0+1)^(0+384),w	;volatile
 13187  11E2  30E8               	movlw	232
 13188  11E3  1903               	skipnz
 13189  11E4  022A               	subwf	_Delay_Led_Tmr0^(0+384),w	;volatile
 13190  11E5  1C03               	skipc
 13191  11E6  29E9               	goto	i1l5890
 13192                           
 13193                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 13194  11E7  01AA               	clrf	_Delay_Led_Tmr0^(0+384)	;volatile
 13195  11E8  01AB               	clrf	(_Delay_Led_Tmr0+1)^(0+384)	;volatile
 13196  11E9                     i1l5890:
 13197                           
 13198                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 13199  11E9  3001               	movlw	1
 13200  11EA  022B               	subwf	(_Delay_Led_Tmr0+1)^(0+384),w	;volatile
 13201  11EB  30F4               	movlw	244
 13202  11EC  1903               	skipnz
 13203  11ED  022A               	subwf	_Delay_Led_Tmr0^(0+384),w	;volatile
 13204  11EE  1803               	skipnc
 13205  11EF  29F4               	goto	i1l711
 13206                           
 13207                           ;isr.c: 55:                    PORTBbits.RB7=1;
 13208  11F0  1283               	bcf	3,5	;RP0=0, select bank0
 13209  11F1  1303               	bcf	3,6	;RP1=0, select bank0
 13210  11F2  1786               	bsf	6,7	;volatile
 13211  11F3  29F7               	goto	i1l5894
 13212  11F4                     i1l711:	
 13213                           ;isr.c: 56:                 else
 13214                           
 13215                           
 13216                           ;isr.c: 57:                    PORTBbits.RB7=0;
 13217  11F4  1283               	bcf	3,5	;RP0=0, select bank0
 13218  11F5  1303               	bcf	3,6	;RP1=0, select bank0
 13219  11F6  1386               	bcf	6,7	;volatile
 13220  11F7                     i1l5894:
 13221                           
 13222                           ;isr.c: 60:                 if(Delay_Led_Usart){
 13223  11F7  1683               	bsf	3,5	;RP0=1, select bank3
 13224  11F8  1703               	bsf	3,6	;RP1=1, select bank3
 13225  11F9  0828               	movf	_Delay_Led_Usart^(0+384),w	;volatile
 13226  11FA  0429               	iorwf	(_Delay_Led_Usart+1)^(0+384),w	;volatile
 13227  11FB  1903               	btfsc	3,2
 13228  11FC  2A07               	goto	i1l713
 13229                           
 13230                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 13231  11FD  300A               	movlw	10
 13232  11FE  02A8               	subwf	_Delay_Led_Usart^(0+384),f	;volatile
 13233  11FF  3000               	movlw	0
 13234  1200  1C03               	skipc
 13235  1201  03A9               	decf	(_Delay_Led_Usart+1)^(0+384),f	;volatile
 13236  1202  02A9               	subwf	(_Delay_Led_Usart+1)^(0+384),f	;volatile
 13237                           
 13238                           ;isr.c: 62:                    PORTBbits.RB6=1;
 13239  1203  1283               	bcf	3,5	;RP0=0, select bank0
 13240  1204  1303               	bcf	3,6	;RP1=0, select bank0
 13241  1205  1706               	bsf	6,6	;volatile
 13242                           
 13243                           ;isr.c: 63:                    }
 13244  1206  2A0A               	goto	i1l5900
 13245  1207                     i1l713:	
 13246                           ;isr.c: 64:                 else{
 13247                           
 13248                           
 13249                           ;isr.c: 65:                    PORTBbits.RB6=0;
 13250  1207  1283               	bcf	3,5	;RP0=0, select bank0
 13251  1208  1303               	bcf	3,6	;RP1=0, select bank0
 13252  1209  1306               	bcf	6,6	;volatile
 13253  120A                     i1l5900:
 13254                           
 13255                           ;isr.c: 68:                 if(Delay_Led_Memory){
 13256  120A  1683               	bsf	3,5	;RP0=1, select bank3
 13257  120B  1703               	bsf	3,6	;RP1=1, select bank3
 13258  120C  082C               	movf	_Delay_Led_Memory^(0+384),w	;volatile
 13259  120D  042D               	iorwf	(_Delay_Led_Memory+1)^(0+384),w	;volatile
 13260  120E  1903               	btfsc	3,2
 13261  120F  2A1A               	goto	i1l715
 13262                           
 13263                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 13264  1210  300A               	movlw	10
 13265  1211  02AC               	subwf	_Delay_Led_Memory^(0+384),f	;volatile
 13266  1212  3000               	movlw	0
 13267  1213  1C03               	skipc
 13268  1214  03AD               	decf	(_Delay_Led_Memory+1)^(0+384),f	;volatile
 13269  1215  02AD               	subwf	(_Delay_Led_Memory+1)^(0+384),f	;volatile
 13270                           
 13271                           ;isr.c: 70:                    PORTBbits.RB5=1;
 13272  1216  1283               	bcf	3,5	;RP0=0, select bank0
 13273  1217  1303               	bcf	3,6	;RP1=0, select bank0
 13274  1218  1686               	bsf	6,5	;volatile
 13275                           
 13276                           ;isr.c: 71:                    }
 13277  1219  2A1D               	goto	i1l5906
 13278  121A                     i1l715:	
 13279                           ;isr.c: 72:                 else{
 13280                           
 13281                           
 13282                           ;isr.c: 73:                    PORTBbits.RB5=0;
 13283  121A  1283               	bcf	3,5	;RP0=0, select bank0
 13284  121B  1303               	bcf	3,6	;RP1=0, select bank0
 13285  121C  1286               	bcf	6,5	;volatile
 13286  121D                     i1l5906:
 13287                           
 13288                           ;isr.c: 77:                 tempodecorrido+=10;
 13289  121D  300A               	movlw	10
 13290  121E  1683               	bsf	3,5	;RP0=1, select bank3
 13291  121F  1703               	bsf	3,6	;RP1=1, select bank3
 13292  1220  079C               	addwf	_tempodecorrido^(0+384),f	;volatile
 13293  1221  1803               	skipnc
 13294  1222  0A9D               	incf	(_tempodecorrido+1)^(0+384),f	;volatile
 13295                           
 13296                           ;isr.c: 78:                 milisegundo+=10;
 13297  1223  07A6               	addwf	_milisegundo^(0+384),f	;volatile
 13298  1224  1803               	skipnc
 13299  1225  0AA7               	incf	(_milisegundo+1)^(0+384),f	;volatile
 13300                           
 13301                           ;isr.c: 79:                 if(milisegundo==1000){
 13302  1226  30E8               	movlw	232
 13303  1227  0626               	xorwf	_milisegundo^(0+384),w	;volatile
 13304  1228  3003               	movlw	3
 13305  1229  1903               	skipnz
 13306  122A  0627               	xorwf	(_milisegundo+1)^(0+384),w	;volatile
 13307  122B  1D03               	btfss	3,2
 13308  122C  2A47               	goto	i1l5938
 13309                           
 13310                           ;isr.c: 80:                    milisegundo=0;
 13311  122D  01A6               	clrf	_milisegundo^(0+384)	;volatile
 13312  122E  01A7               	clrf	(_milisegundo+1)^(0+384)	;volatile
 13313                           
 13314                           ;isr.c: 81:                    segundo++;
 13315  122F  0AF5               	incf	_segundo,f	;volatile
 13316                           
 13317                           ;isr.c: 84:                    if(TempoCNT_0>0) TempoCNT_0--;
 13318  1230  1303               	bcf	3,6	;RP1=0, select bank1
 13319  1231  0869               	movf	_TempoCNT_0^(0+128),w	;volatile
 13320  1232  1D03               	btfss	3,2
 13321  1233  03E9               	decf	_TempoCNT_0^(0+128),f	;volatile
 13322                           
 13323                           ;isr.c: 85:                    if(TempoCNT_1>0) TempoCNT_1--;
 13324  1234  0866               	movf	_TempoCNT_1^(0+128),w	;volatile
 13325  1235  1D03               	btfss	3,2
 13326  1236  03E6               	decf	_TempoCNT_1^(0+128),f	;volatile
 13327                           
 13328                           ;isr.c: 88:                    if(segundo==60){
 13329  1237  303C               	movlw	60
 13330  1238  0675               	xorwf	_segundo,w	;volatile
 13331  1239  1D03               	btfss	3,2
 13332  123A  2A47               	goto	i1l5938
 13333                           
 13334                           ;isr.c: 89:                       segundo=0;
 13335  123B  01F5               	clrf	_segundo	;volatile
 13336                           
 13337                           ;isr.c: 90:                       minuto++;
 13338  123C  0AF0               	incf	_minuto,f	;volatile
 13339                           
 13340                           ;isr.c: 91:                       if(minuto==60){
 13341  123D  303C               	movlw	60
 13342  123E  0670               	xorwf	_minuto,w	;volatile
 13343  123F  1D03               	btfss	3,2
 13344  1240  2A47               	goto	i1l5938
 13345                           
 13346                           ;isr.c: 92:                          minuto=0;
 13347  1241  01F0               	clrf	_minuto	;volatile
 13348                           
 13349                           ;isr.c: 93:                          hora++;
 13350  1242  0AF4               	incf	_hora,f	;volatile
 13351                           
 13352                           ;isr.c: 94:                          if(hora==24){
 13353  1243  3018               	movlw	24
 13354  1244  0674               	xorwf	_hora,w	;volatile
 13355  1245  1903               	btfsc	3,2
 13356                           
 13357                           ;isr.c: 95:                             hora=0;
 13358  1246  01F4               	clrf	_hora	;volatile
 13359  1247                     i1l5938:	
 13360                           ;isr.c: 99:                 }
 13361                           
 13362                           
 13363                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13364  1247  1283               	bcf	3,5	;RP0=0, select bank0
 13365  1248  1303               	bcf	3,6	;RP1=0, select bank0
 13366  1249  1E8C               	btfss	12,5	;volatile
 13367  124A  2A9E               	goto	i1l731
 13368                           
 13369                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13370  124B  1683               	bsf	3,5	;RP0=1, select bank1
 13371  124C  301E               	movlw	30
 13372  124D  146C               	bsf	_generic_status^(0+128),0
 13373                           
 13374                           ;isr.c: 109:         tempo=30;
 13375  124E  00FA               	movwf	isr@tempo
 13376  124F  01FB               	clrf	isr@tempo+1
 13377                           
 13378                           ;isr.c: 110:         count=0;
 13379  1250  1703               	bsf	3,6	;RP1=1, select bank3
 13380  1251  019E               	clrf	_count^(0+384)	;volatile
 13381  1252  019F               	clrf	(_count+1)^(0+384)	;volatile
 13382                           
 13383                           ;isr.c: 111:         pointer=usart_buffer;
 13384  1253  3010               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13385  1254  00AE               	movwf	_pointer^(0+384)
 13386  1255                     i1l5958:	
 13387                           ;isr.c: 112:         while(tempo)
 13388                           
 13389                           
 13390                           ;isr.c: 112:         while(tempo)
 13391  1255  087A               	movf	isr@tempo,w
 13392  1256  047B               	iorwf	isr@tempo+1,w
 13393  1257  1903               	btfsc	3,2
 13394  1258  2A84               	goto	i1l5960
 13395                           
 13396                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13397  1259  1283               	bcf	3,5	;RP0=0, select bank0
 13398  125A  1303               	bcf	3,6	;RP1=0, select bank0
 13399  125B  1E8C               	btfss	12,5	;volatile
 13400  125C  2A7D               	goto	i1l5956
 13401                           
 13402                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13403  125D  1683               	bsf	3,5	;RP0=1, select bank3
 13404  125E  1703               	bsf	3,6	;RP1=1, select bank3
 13405  125F  082E               	movf	_pointer^(0+384),w
 13406  1260  0084               	movwf	4
 13407  1261  1283               	bcf	3,5	;RP0=0, select bank0
 13408  1262  1303               	bcf	3,6	;RP1=0, select bank0
 13409  1263  081A               	movf	26,w	;volatile
 13410  1264  1783               	bsf	3,7	;select IRP bank2
 13411  1265  0080               	movwf	0
 13412                           
 13413                           ;isr.c: 118:                 if(count<32+20 -1)
 13414  1266  1683               	bsf	3,5	;RP0=1, select bank3
 13415  1267  1703               	bsf	3,6	;RP1=1, select bank3
 13416  1268  081F               	movf	(_count+1)^(0+384),w	;volatile
 13417  1269  3A80               	xorlw	128
 13418  126A  00FF               	movwf	127
 13419  126B  3080               	movlw	128
 13420  126C  027F               	subwf	127,w
 13421  126D  1D03               	skipz
 13422  126E  2A71               	goto	u523_25
 13423  126F  3033               	movlw	51
 13424  1270  021E               	subwf	_count^(0+384),w	;volatile
 13425  1271                     u523_25:
 13426  1271  1803               	skipnc
 13427  1272  2A79               	goto	i1l5954
 13428                           
 13429                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13430  1273  1683               	bsf	3,5	;RP0=1, select bank3
 13431  1274  1703               	bsf	3,6	;RP1=1, select bank3
 13432  1275  0A9E               	incf	_count^(0+384),f	;volatile
 13433  1276  1903               	skipnz
 13434  1277  0A9F               	incf	(_count+1)^(0+384),f	;volatile
 13435                           
 13436                           ;isr.c: 121:                    pointer++;
 13437  1278  0AAE               	incf	_pointer^(0+384),f
 13438  1279                     i1l5954:
 13439                           
 13440                           ;isr.c: 123:                 tempo=30;
 13441  1279  301E               	movlw	30
 13442  127A  00FA               	movwf	isr@tempo
 13443  127B  01FB               	clrf	isr@tempo+1
 13444                           
 13445                           ;isr.c: 124:             }
 13446  127C  2A55               	goto	i1l5958
 13447  127D                     i1l5956:
 13448                           
 13449                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13450  127D  3001               	movlw	1
 13451  127E  02FA               	subwf	isr@tempo,f
 13452  127F  3000               	movlw	0
 13453  1280  1C03               	skipc
 13454  1281  03FB               	decf	isr@tempo+1,f
 13455  1282  02FB               	subwf	isr@tempo+1,f
 13456  1283  2A55               	goto	i1l5958
 13457  1284                     i1l5960:
 13458                           
 13459                           ;isr.c: 131:         (*pointer)=0;
 13460  1284  1683               	bsf	3,5	;RP0=1, select bank3
 13461  1285  1703               	bsf	3,6	;RP1=1, select bank3
 13462  1286  082E               	movf	_pointer^(0+384),w
 13463  1287  0084               	movwf	4
 13464  1288  1783               	bsf	3,7	;select IRP bank2
 13465  1289  0180               	clrf	0
 13466                           
 13467                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13468  128A  1283               	bcf	3,5	;RP0=0, select bank0
 13469  128B  1303               	bcf	3,6	;RP1=0, select bank0
 13470  128C  1C98               	btfss	24,1	;volatile
 13471  128D  2A9E               	goto	i1l731
 13472                           
 13473                           ;isr.c: 134:            CREN=0;
 13474  128E  1218               	bcf	24,4	;volatile
 13475                           
 13476                           ;isr.c: 135:            CREN=1;
 13477  128F  1618               	bsf	24,4	;volatile
 13478                           
 13479                           ;isr.c: 136:            tempo=RCREG;
 13480  1290  081A               	movf	26,w	;volatile
 13481  1291  00FA               	movwf	isr@tempo
 13482  1292  01FB               	clrf	isr@tempo+1
 13483                           
 13484                           ;isr.c: 137:            tempo=RCREG;
 13485  1293  081A               	movf	26,w	;volatile
 13486  1294  00FA               	movwf	isr@tempo
 13487  1295  01FB               	clrf	isr@tempo+1
 13488                           
 13489                           ;isr.c: 138:            tempo=RCREG;
 13490  1296  081A               	movf	26,w	;volatile
 13491  1297  00FA               	movwf	isr@tempo
 13492  1298  01FB               	clrf	isr@tempo+1
 13493                           
 13494                           ;isr.c: 139:            usart_buffer[0]=0;
 13495  1299  1703               	bsf	3,6	;RP1=1, select bank2
 13496  129A  0190               	clrf	_usart_buffer^(0+256)	;volatile
 13497                           
 13498                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 13499  129B  1683               	bsf	3,5	;RP0=1, select bank1
 13500  129C  1303               	bcf	3,6	;RP1=0, select bank1
 13501  129D  14EC               	bsf	_generic_status^(0+128),1
 13502  129E                     i1l731:
 13503  129E  0879               	movf	??_isr+3,w
 13504  129F  1283               	bcf	3,5	;RP0=0, select bank0
 13505  12A0  00FF               	movwf	127
 13506  12A1  0878               	movf	??_isr+2,w
 13507  12A2  008A               	movwf	10
 13508  12A3  0877               	movf	??_isr+1,w
 13509  12A4  0084               	movwf	4
 13510  12A5  0E76               	swapf	??_isr,w
 13511  12A6  0083               	movwf	3
 13512  12A7  0EFE               	swapf	126,f
 13513  12A8  0E7E               	swapf	126,w
 13514  12A9  0009               	retfie
 13515  12AA                     __end_of_isr:
 13516  007E                     btemp	set	126	;btemp
 13517  007E                     wtemp0	set	126
 13518                           
 13519                           	psect	intentry
 13520  0004                     __pintentry:	
 13521                           ;incstack = 0
 13522                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 13523                           
 13524  0004                     interrupt_function:
 13525  007E                     saved_w	set	btemp
 13526  0004  00FE               	movwf	btemp
 13527  0005  0E03               	swapf	3,w
 13528  0006  00F6               	movwf	??_isr
 13529  0007  0804               	movf	4,w
 13530  0008  00F7               	movwf	??_isr+1
 13531  0009  080A               	movf	10,w
 13532  000A  00F8               	movwf	??_isr+2
 13533  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13534  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13535  000D  087F               	movf	btemp+1,w
 13536  000E  00F9               	movwf	??_isr+3
 13537  000F  160A  118A  29CC   	ljmp	_isr
 13538                           
 13539                           	psect	config
 13540                           
 13541                           ;Config register CONFIG1 @ 0x2007
 13542                           ;	Oscillator Selection bits
 13543                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 13544                           ;	Watchdog Timer Enable bit
 13545                           ;	WDTE = ON, WDT enabled
 13546                           ;	Power-up Timer Enable bit
 13547                           ;	PWRTE = ON, PWRT enabled
 13548                           ;	RE3/MCLR pin function select bit
 13549                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 13550                           ;	Code Protection bit
 13551                           ;	CP = ON, Program memory code protection is enabled
 13552                           ;	Data Code Protection bit
 13553                           ;	CPD = OFF, Data memory code protection is disabled
 13554                           ;	Brown Out Reset Selection bits
 13555                           ;	BOREN = ON, BOR enabled
 13556                           ;	Internal External Switchover bit
 13557                           ;	IESO = ON, Internal/External Switchover mode is enabled
 13558                           ;	Fail-Safe Clock Monitor Enabled bit
 13559                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 13560                           ;	Low Voltage Programming Enable bit
 13561                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 13562                           ;	In-Circuit Debugger Mode bit
 13563                           ;	DEBUG = 0x1, unprogrammed default
 13564  2007                     	org	8199
 13565  2007  2F8C               	dw	12172
 13566                           
 13567                           ;Config register CONFIG2 @ 0x2008
 13568                           ;	Brown-out Reset Selection bit
 13569                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 13570                           ;	Flash Program Memory Self Write Enable bits
 13571                           ;	WRT = OFF, Write protection off
 13572  2008                     	org	8200
 13573  2008  3FFF               	dw	16383

Data Sizes:
    Strings     11
    Constant    44
    Data        2
    BSS         196
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      13
    BANK0            80     80      80
    BANK1            80     61      78
    BANK3            96      0      89
    BANK2            96      0      85

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 58
		 -> buffer(BANK2[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 58
		 -> buffer(BANK2[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK2[33]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK2[33]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(1) Largest target is 36
		 -> log@coeff(CODE[36]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK2[33]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK2[33]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK1[2]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 58
		 -> usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 58
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK1[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK1[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 52
		 -> NULL(NULL[0]), usart_buffer(BANK2[52]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK2[33]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK2[33]), 

    EEPROM_24C1025_Read_Str@buffer	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK2[33]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_24C1025_Read_Buffer_USART@data	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK2[33]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), EEPROM_24C1025_Write_Int@local(BANK1[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_mediatemperaturaNTC
    _ADC_Read_NTC->_log
    _log->___flmul
    _frexp->___fleq
    _eval_poly->___flmul
    _I2C_Master_Init->___lldiv
    _Decodify_Command->_USART_put_int
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->___fltol
    ___fltol->___flmul
    ___flmul->___flsub
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    ___fldiv->___flmul
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_I2C_Master_Read
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_my_delay_ms_WDT
    _EEPROM_24C1025_Read_Buffer_USART->_I2C_Master_Read
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _EEPROM_24C1025_Write_Int->___fltol
    _EEPROM_24C1025_Write_Buffer->_my_delay_ms_WDT
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _Auto_Relay1->___flge
    ___xxtofl->_EEPROM_Read_Integer
    _Auto_Relay0->___flge
    ___flsub->___fladd
    ___fladd->___xxtofl
    ___flge->___flsub

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_mediatemperaturaNTC
    _mediatemperaturaNTC->_ADC_Read_NTC
    _ADC_Read_NTC->___fldiv
    _log->_eval_poly
    _Decodify_Command->_Load_Work
    _Save_Log->_EEPROM_24C1025_Write_Int
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    _Load_Work->___fldiv
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int
    _EEPROM_24C1025_Write_Int->___fltol

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  183980
                                             56 BANK1      5     5      0
                           _ADC_init
                        _Auto_Relay0
                        _Auto_Relay1
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                          _Load_Work
                         _USART_init
                _mediatemperaturaNTC
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _mediatemperaturaNTC                                 11    11      0   50690
                                             79 BANK0      1     1      0
                                             46 BANK1     10    10      0
                       _ADC_Read_NTC
            _Package_Usart_is_for_me
                        _Rele0Ligado
                        _Rele1Ligado
                            ___fladd
                            ___fldiv
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     248
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      26
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Read_NTC                                        22    18      4   42407
                                             25 BANK1     21    17      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___lwdiv
                           ___xxtofl
                            _captura
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  6     2      4   23523
                                             77 BANK0      2     2      0
                                             16 BANK1      4     0      4
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     896
                                             12 BANK0      7     2      5
                             ___fleq
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     520
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           16     9      7    9716
                                              0 BANK1     16     9      7
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           6     2      4     220
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    17    17      0  113323
                                             29 BANK1     17    17      0
            _EEPROM_24C1025_Fill_All
   _EEPROM_24C1025_Read_Buffer_USART
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                          _Load_Work
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     184
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     255
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      53
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     512
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     512
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4   14734
                                             17 BANK1      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             77 BANK0      2     2      0
                                              0 BANK1      8     4      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    5434
                                             52 BANK0     25    17      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            7     5      2     980
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             3     0      3    3297
                                             18 BANK1      3     0      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     202
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    8     3      5    2822
                                             10 BANK1      8     3      5
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 5     3      2    2095
                                             14 BANK1      5     3      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      4     2      2    2690
                                             14 BANK1      4     2      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     632
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1829
                                             10 BANK1      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        3     1      2     964
                                             79 BANK0      1     1      0
                                              8 BANK1      2     0      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     324
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _Load_Work                                            4     4      0    4016
                                             25 BANK1      4     4      0
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2544
                                              0 BANK1     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Integer                                  7     5      2     229
                                              3 BANK0      7     5      2
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  2     1      1     623
                                              5 BANK0      2     1      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2     727
                                              5 BANK0      7     5      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     372
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   3     2      1     245
                                              3 BANK0      3     2      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read_Byte                                     3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                             8     3      5    7066
                                             10 BANK0      8     3      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    8046
                                             23 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    7986
                                              7 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              7     3      4    9108
                                             21 BANK0      7     3      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             6     2      4    9074
                                             21 BANK0      6     2      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          12     6      6    8848
                                             10 BANK0     11     5      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Buffer_USART                    12     6      6    8154
                                              7 BANK0     11     5      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      4     2      2    1271
                                              3 BANK0      4     2      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    8942
                                             17 BANK1      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                             9     3      6    8691
                                              8 BANK1      9     3      6
        _EEPROM_24C1025_Write_Buffer
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    7764
                                             10 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     502
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    5677
                                              3 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Auto_Relay1                                          0     0      0    7442
                     _Rele1Desligado
                        _Rele1Ligado
                             ___flge
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1221
                                             10 BANK0     14    10      4
                   _EEPROM_Read_Byte (ARG)
                _EEPROM_Read_Integer (ARG)
 ---------------------------------------------------------------------------------
 (2) _Rele1Ligado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Rele1Desligado                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Auto_Relay0                                          0     0      0    6221
                     _Rele0Desligado
                        _Rele0Ligado
                             ___flge
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4723
                                             44 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    3758
                                             24 BANK0     20    12      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    1498
                                             52 BANK0     12     4      8
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Rele0Ligado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Rele0Desligado                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  6     6      0      28
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Auto_Relay0
     _Rele0Desligado
     _Rele0Ligado
     ___flge
       ___flsub (ARG)
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flsub
   _Auto_Relay1
     _Rele1Desligado
     _Rele1Ligado
     ___flge
     ___flsub
     ___xxtofl
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
           ___flsub (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
     _EEPROM_24C1025_Read_Buffer_USART
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
       _USART_putc
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
         _I2C_Master_RepeatedStart
         _I2C_Master_Start
         _I2C_Master_Stop
         _I2C_Master_Write
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
       _I2C_Master_RepeatedStart
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
     _EEPROM_24C1025_Write_Buffer
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
     _EEPROM_24C1025_Write_Int
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
       _my_delay_ms_WDT
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _Load_Work
       _EEPROM_Read_Byte
       _EEPROM_Read_Integer
       ___fldiv
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
       ___flmul
       ___fltol
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_int
     _USART_put_string
     _USART_putc
     _USART_to_Protocol
     ___flmul
     ___fltol
     _strcpy
     _strlen
   _EEPROM_Read_Integer
   _EEPROM_Write_Integer
   _I2C_Master_Init
     ___lldiv
   _Load_Work
   _USART_init
   _mediatemperaturaNTC
     _ADC_Read_NTC
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
       ___lwdiv
       ___xxtofl
       _captura
       _log
         ___fladd
         ___fleq
         ___flge
         ___flmul
         ___xxtofl
         _eval_poly
           ___fladd
           ___flmul
         _frexp
     _Package_Usart_is_for_me
     _Rele0Ligado
     _Rele1Ligado
     ___fladd
     ___fldiv
     ___xxtofl
     _my_delay_ms
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      59       9       92.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      55      11       88.5%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     3D      4E       7       97.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     159      12        0.0%
ABS                  0      0     159       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Sep 29 11:44:44 2021

                               _USART_putc 0349                               ___fldiv@aexp 00B8  
                             ___fldiv@bexp 00B7                                          pc 0002  
                             ___fldiv@sign 00B0                                         PL2 0628  
                                       PL4 1F89                                         PL6 1FA3  
                                       PL8 0642            EEPROM_24C1025_Read_Buffer@range 0033  
         EEPROM_24C1025_Write_Str@chip_add 002F                                         fsr 0004  
 __end_of_EEPROM_24C1025_Read_Buffer_USART 1687  __size_of_EEPROM_24C1025_Read_Buffer_USART 00F4  
       ??_EEPROM_24C1025_Read_Buffer_USART 002D          ?_EEPROM_24C1025_Read_Buffer_USART 0027  
         _EEPROM_24C1025_Read_Buffer_USART 1593                              _USART_put_int 035A  
                 Decodify_Command@tempchar 00C9                        __Umul8_16@word_mpld 0024  
                                      PL10 1FBD                                        PL20 0675  
                                      PL12 1FCD                                        PL30 17A8  
                                      PL22 0F8A                                        PL14 064B  
                                      PL40 17B8                                        PL32 0FA4  
                                      PL24 0F9A                                        PL16 065C  
                                      PL50 17D4                                        PL42 11B8  
                                      PL34 0FAD                                        PL26 0684  
                                      PL18 11A8                                        PL60 17E7  
                                      PL52 0FB6                                        PL44 11C2  
                                      PL36 17B1                                        PL28 1FDD  
                                      PL70 17EE                                        PL62 0692  
                                      PL54 0FBF                                        PL46 17C0  
                                      PL38 1FE6                                        PL80 0716  
                                      PL72 17F4                                        PL64 0699  
                                      PL56 17DE                                        PL48 17CA  
                                      PL82 1FFA                                        PL74 17FA  
                                      PL66 1FEE                                        PL58 0FC8  
                                      PL76 0FCF                                        PL68 1FF4  
                                      PL78 0FD5               PROCULUS_VP_Write_String@text 00B4  
                                      l431 08EF                                        l432 08F2  
                                      l451 0126                                        l622 06E3  
                                      l632 05C9                                        l481 032D  
                                      l627 0706                                        l475 02C5  
                                      l628 0707                                        l654 071F  
                                      l479 02D2                                        l598 0FDC  
                                      l944 0351                                        l886 0FF6  
       EEPROM_24C1025_Read_Buffer@chip_add 0032                   Decodify_Command@sizedata 00C2  
                                      _log 1DC3                                        _isr 11CC  
                                      fsr0 0004                              ??_Auto_Relay0 0060  
                            ??_Auto_Relay1 0060                                        indf 0000  
                __end_of_EEPROM_Write_Byte 0716                               ___flmul@aexp 0061  
                             ___flmul@bexp 0062                     PROCULUS_VP_Write@vetor 00AC  
             ?_EEPROM_24C1025_Write_Buffer 002A                               ___flmul@sign 0060  
                             ___flmul@temp 006B                               ___flmul@prod 0067  
  __end_of_PROCULUS_Control_Register_Write 10DE   __size_of_PROCULUS_Control_Register_Write 002E  
        ??_PROCULUS_Control_Register_Write 00AB           ?_PROCULUS_Control_Register_Write 00AA  
          _PROCULUS_Control_Register_Write 10B0                      ??_mediatemperaturaNTC 006F  
                             ___fltol@exp1 006E                                       l1231 1EF2  
                                     l1401 0E50                                       l1402 0E4D  
                                     l1340 0AE8                                       l1500 0E04  
                                     l1229 1EB8                                       l1341 0AE6  
                                     l1351 0B69                                       l1353 0B57  
                                     l1345 0B04                                       l1433 03A6  
                                     l1362 0B8C                                       l4002 0B92  
                                     l1354 0B5E                                       l1346 0B02  
                                     l1426 0F3F                                       l1434 03A4  
                                     l1363 0B8E                                       l1355 0B60  
                                     l4012 0BE4                                       l1373 0C07  
                                     l1437 03BD                                       l4030 0C0C  
                                     l1438 03BB                                       l1455 04DB  
                                     l1368 0BF2                                       l4032 0C0E  
                                     l4042 0C19                                       l4018 0BFC  
                                     l1388 0C3C                                       l1397 0E38  
                                     l4062 0C38                                       l4054 0C2C  
                                     l4038 0C17                                       l1398 0E35  
                                     l1487 0DD2                                       l4400 1F54  
                                     l4066 0C3D                                       l4330 10E0  
                                     l6010 04F4                                       l4324 10DE  
                                     l4342 1ED5                                       l6006 04EC  
                                     l5214 1C4A                                       l4336 1EA7  
                                     l6200 1724                                       l6112 048F  
                                     l5208 07CF                                       l7000 105A  
                                     l4370 0DF3                                       l4362 0DDD  
                                     l6202 1727                                       l5154 06A5  
                                     l6130 04B9                                       l6106 047C  
                                     l6042 03AA                                       l5314 0FFB  
                                     l7100 1D6A                                       l3820 148B  
                                     l6116 0491                                       l7020 1077  
                                     l4374 0E02                                       l4366 0DDF  
                                     l4358 0DCA                                       l3814 1493  
                                     l6126 04A5                                       l6054 03C1  
                                     l5318 0FFE                                       l7104 1DA7  
                                     l4376 0DF8                                       l4368 0DE8  
                                     l3816 1480                                       l3824 1497  
                                     l6224 1751                                       l6160 16B2  
                                     l4560 06EC                                       l6136 04CE  
                                     l5264 1C85                                       l7106 1DAA  
                                     l7130 1D4C                                       l7122 1D15  
                                     l6218 1741                                       l6226 16CF  
                                     l6162 16B5                                       l6250 1471  
                                     l4562 06EF                                       l4810 0ED0  
                                     l6058 03CB                                       l6410 1CD0  
                                     l6402 1CAD                                       l7202 0149  
                                     l7034 107F                                       l7108 1DA4  
                                     l4388 0E1A                                       l7132 1D47  
                                     l7124 1D16                                       l3860 177B  
                                     l6228 1753                                       l4812 0EE3  
                                     l6500 0F85                                       l4652 1156  
                                     l7052 0936                                       l6158 16AD  
                                     l6246 1460                                       l6334 153F  
                                     l4822 0EF9                                       l4734 0E3C  
                                     l6262 035A                                       l4654 115C  
                                     l7310 02C9                                       l7222 0185  
                                     l3936 0B10                                       l7128 1D49  
                                     l6520 15B9                                       l6336 1544  
                                     l6360 156A                                       l4832 0F0D  
                                     l4760 0E6D                                       l6416 1C72  
                                     l4680 1198                                       l4672 1188  
                                     l6408 1CB1                                       l7304 02BA  
                                     l7240 01B6                                       l7216 0170  
                                     l7208 0157                                       l7160 009B  
                                     l6432 1DDC                                       l7080 099E  
                                     l3866 177F                                       l6258 1478  
                                     l6522 15BE                                       l6338 1547  
                                     l6370 157F                                       l6290 14D2  
                                     l6610 12E5                                       l4850 0F40  
                                     l4818 0EF7                                       l6418 1C7A  
                                     l7234 019A                                       l7154 0088  
                                     l7322 02D6                                       l6274 0ACB  
                                     l3882 1F26                                       l7402 089C  
                                     l7330 0814                                       l6524 15C1  
                                     l6292 14D5                                       l6612 12EA  
                                     l4844 0F37                                       l4748 0E54  
                                     l6460 10D9                                       l4668 117E  
                                     l7252 01E9                                       l7228 018F  
                                     l7164 00AD                                       l6436 1DF4  
                                     l7068 0988                                       l7076 0997  
                                     ?_log 00B0                                       l3982 0B63  
                                     l3966 0B2E                                       l6198 171F  
                                     l6366 157D                                       l6614 12ED  
                                     l4838 0F21                                       l6462 003B  
                                     l4678 118C                                       l7270 0248  
                                     l7246 01D3                                       l3886 1F38  
                                     l3878 1F15                                       l7094 09E9  
                                     l6368 14F8                                       l6288 14CD  
                                     l4792 0EC8                                       l4768 0E75  
                                     l6800 0501                                       l7280 0284  
                                     l7264 0226                                       l7192 0131  
                                     l7184 011F                                       l7176 00FD  
                                     l7088 09B6                                       l7432 08CD  
                                     l7098 1D69                                       l6386 05E8  
                                     l4786 0EA9                                       l4794 0E91  
                                     l6458 10C8                                       l6474 0053  
                                     l7258 0206                                       l3988 0B6F  
                                     l6564 162D                                       l6716 13AC  
                                     l4796 0ECA                                       l6476 0069  
                                     l7292 029C                                       l7276 0262  
                                     l7188 0129                                       l7444 08E1  
                                     ?_isr 0076                                       l6566 1632  
                                     l6590 1658                                       l6734 13F2  
                                     l6830 036A                                       l7286 0291  
                                     l7198 0139                                       l6568 1635  
                                     l6736 13F7                                       l6760 141D  
                                     l6840 06C6                                       l6488 0F6E  
                                     l7456 090E                                       l6594 1671  
                                     l6738 13FA                                       l6770 143C  
                                     l6690 1386                                       l6674 130B  
                                     l6842 06D7                                       l7298 02AA  
                                     l6940 1F81                                       l6908 09F9  
                                     l6924 0A10                                       l6596 15E4  
                                     l6692 1389                                       l6676 1351  
                                     l6668 1342                                       l7492 02E0  
                                     l6918 0A08                                       l6942 1F85  
                                     l6934 0A20                                       l6598 1673  
                                     l6768 1435                                       l6688 1381  
                                     l6794 1CE0                                       l6954 0771  
                                     l6966 079C                                       l6878 0C4B  
                                     _BETA 1034                                       STR_1 103C  
                                     STR_2 1044                                       _CREN 00C4  
                                     u4135 0EB7                                       u6003 137F  
                                     u4235 0F16                                       u6013 13B9  
                                     u4245 0F2C                                       u3525 10E6  
                                     u2725 1F34                                       u2830 0B4E  
                                     u2840 0B4F                                       u2825 0B42  
                                     u6033 13F0                                       u4513 1C97  
                                     u2683 1791                                       u6205 0784  
                                     u2943 0BA4                                       u6063 1D0C  
                                     u6225 073E                                       u5515 04AE  
                                     u4475 07DB                                       u5525 04C4  
                                     u3925 1166                                       u5543 169A  
                                     u5703 14CB                                       u5640 146E  
                                     u5553 16AB                                       u5713 150C  
                                     u5563 16EE                                       u5733 153D  
                                     u5583 171D                                       u5913 162B  
                                     u5595 16DC                                       u6707 158D  
                                     u6627 081C                                       u6717 1681  
                                     u5693 14BA                                       u5933 12D2  
                                     u6637 1C9F                                       u6727 179A  
                                     u5943 12E3                                       u6647 10EE  
                                     u5855 0F77                                       u6737 1487  
                                     u5873 15A6                                       u5953 1321  
                                     u6657 06BD                                       u5883 15B7  
                                     u6667 0710                                       u5893 15F8  
                                     u6677 05D9                                       u6687 13D5  
                                     u6697 144A                                       u5993 136E  
                                     _WPUB 0095                       PROCULUS_Buzzer@vetor 00B0  
         __end_of_I2C_Master_RepeatedStart 177B                                       _main 0814  
                                     _hora 0074          __size_of_EEPROM_24C1025_Write_Int 001F  
                                     btemp 007E          __size_of_EEPROM_24C1025_Write_Str 009B  
                                     log@x 00B0                  ?_EEPROM_24C1025_Write_Int 00A8  
                ?_EEPROM_24C1025_Write_Str 002A                __size_of_EEPROM_Read_String 0014  
                                     start 0012                           __end_of_ADC_init 07FB  
                         _BALANCE_RESISTOR 1038                            ___fldiv@new_exp 00B1  
       EEPROM_24C1025_Read_Buffer@sizedata 002E                              ??_Rele0Ligado 0020  
                            ??_Rele1Ligado 0020                                      ??_log 006D  
                                    ??_isr 0076                           ?_I2C_Master_Init 002D  
                         ?_I2C_Master_Read 0023                           ?_I2C_Master_Wait 0076  
                         ?_I2C_Master_Stop 0076                             ?_USART_put_int 00A8  
                    __size_of_ADC_Read_NTC 0172                              ___fltol@sign1 006D  
                          __end_of___fladd 0C43                                      ?_main 0076  
                          __end_of___fldiv 0F44                                      _EEADR 010D  
                          __end_of___flmul 04E6                            __end_of___flsub 0F60  
                          __end_of___fltol 11A8                                      _ANSEL 0188  
                          __end_of___lldiv 07A5                                      _T1CON 0010  
                          __end_of___lwdiv 0F8A                                      i1l711 11F4  
                                    i1l713 1207                                      i1l731 129E  
                                    i1l715 121A                                      _RCREG 001A  
                                    _TMR1H 000F                                      _TMR1L 000E  
                                    _SPBRG 0099                                      _PORTA 0005  
                                    _PORTB 0006                                      _PORTC 0007  
                                    _PORTE 0009                                      _TRISA 0085  
                                    _TRISB 0086                                      _TRISC 0087  
          EEPROM_24C1025_Read_Int@chip_add 0039                                      _TRISE 0089  
                                    _TXREG 0019                            __end_of_captura 0FE8  
                             _usart_buffer 0110                  EEPROM_Read_Integer@result 0027  
                                    _canal 0072               __size_of_EEPROM_Read_Integer 001B  
                                    _count 019E                                      _frexp 1F3A  
            ??_EEPROM_24C1025_Write_Buffer 0031         __size_of_EEPROM_24C1025_Write_Byte 0014  
               ?_EEPROM_24C1025_Write_Byte 0037                        __end_of_Auto_Relay0 1DC3  
                      __end_of_Auto_Relay1 1D64                                      pclath 000A  
                                    status 0003                                      wtemp0 007E  
                  ADC_Read_NTC@resistencia 00C3            EEPROM_24C1025_Read_Byte@mem_add 0035  
                             __end_of_BETA 1038                    ADC_Read_NTC@temperatura 00CA  
                  __size_of_PROCULUS_Delay 001A          __size_of_PROCULUS_VP_Write_String 0011  
                              ?_USART_init 0020                            __initialization 0015  
                ?_PROCULUS_VP_Write_String 00B2                               _ADC_Read_NTC 0C43  
                              ?_USART_putc 0076                                log@exponent 006D  
                             __end_of_main 091B                                 _Histerese0 0198  
                               _Histerese1 0073                             Send_To_MB@size 0021  
                 __end_of_EEPROM_Read_Byte 05E2                                     ??_main 00D8  
                         __end_of_Save_Log 114E                        __end_of_Rele0Ligado 0A10  
                         _USART_put_string 1CAD                        __end_of_Rele1Ligado 0A28  
                    EEPROM_Write_Byte@addr 0023                      EEPROM_Write_Byte@dado 0020  
               __size_of_EEPROM_Write_Byte 003B                          ?_I2C_Master_Start 0076  
                EEPROM_Write_Byte@last_GIE 0024                   _mediatemperaturaNTC$2351 00CE  
                        ?_I2C_Master_Write 0023                         ??_I2C_Master_Start 0023  
                                   _ADCON1 009F                         ??_I2C_Master_Write 0025  
                PROCULUS_Show_Screen@vetor 00B0                                     ?_frexp 002C  
                                   _ADRESH 001E                                     _ADRESL 009E  
                                   _EEDATA 010C                                     _EECON2 018D  
                               _Send_To_MB 032E                      EEPROM_Write_Integer@i 002B  
                                   _ANSELH 0189               __end_of_PROCULUS_Show_Screen 1090  
                           _Rele0Desligado 1F81                                     i1l5900 120A  
                                   i1l5906 121D                                     i1l5960 1284  
                                   i1l5954 1279                                     i1l5890 11E9  
                                   i1l5938 1247                                     i1l5956 127D  
                                   i1l5958 1255                                     i1l5894 11F7  
                                   i1l5886 11DA                                     u523_25 1271  
        __end_of_EEPROM_24C1025_Write_Byte 0628                               ?_my_delay_ms 0020  
                                   _TMR1IE 0460                                     _TMR1CS 0081  
                 ?_EEPROM_24C1025_Fill_All 00B1                         __size_of_Load_Work 00C0  
                                   _SSPADD 0093                                     _TRISC3 043B  
                                   _TRISC4 043C                                     _TRISC6 043E  
                                   _TRISC7 043F                                     _SSPCON 0014  
                                   _SSPBUF 0013             EEPROM_24C1025_Fill_All@mem_add 00B4  
                         __end_of___xxtofl 0E23                             _Rele1Desligado 1F85  
            EEPROM_24C1025_Read_Str@buffer 002B                         PROCULUS_VP_Write@i 00B1  
                 __end_of_Decodify_Command 032E                                 _TempoCNT_0 00E9  
                               _TempoCNT_1 00E6                                 _TempoOFF_0 00EA  
                               _TempoOFF_1 00E7                   ?_EEPROM_24C1025_Read_Int 0035  
                 ?_EEPROM_24C1025_Read_Str 0027                   _I2C_Master_RepeatedStart 1772  
     __size_of_EEPROM_24C1025_Write_Buffer 00DB                                     ___flge 1E96  
                                   ___fleq 1F04                                  ??___fladd 0040  
                                ??___fldiv 00A8                                  ??___flmul 005C  
                                ??___flsub 0054                                  ??___fltol 00A4  
                          ??_USART_put_int 006F                                  ??___lldiv 0028  
                                   _header 01A0                                  ??___lwdiv 0024  
                                   _buffer 0144                          _USART_to_Protocol 07A5  
                          USART_putc@value 0020                                     _minuto 0070  
        EEPROM_24C1025_Read_Buffer@cnt_108 0031                                  ??_captura 0022  
                       ?_USART_to_Protocol 0076               Decodify_Command@add_24LCxxxx 00CA  
                                   _strcpy 1C48                                     _strlen 1C6E  
        EEPROM_24C1025_Read_Buffer@mem_add 002A                               __pdataCOMMON 007C  
         __end_of_EEPROM_24C1025_Read_Byte 0614                         __size_of__Umul8_16 001B  
                              _Auto_Relay0 1D64                                _Auto_Relay1 1D0F  
                                   saved_w 007E          EEPROM_24C1025_Write_Byte@chip_add 003C  
                                ?_ADC_init 0076                        ??_USART_to_Protocol 0020  
                      __size_of_USART_init 003F                     __end_of_Rele0Desligado 1F85  
                      __size_of_USART_putc 0011                                 ___flge@ff1 0054  
                               ___flge@ff2 0058                     __end_of_Rele1Desligado 1F89  
                             ___xxtofl@arg 0034                               ___xxtofl@exp 0033  
                             ___xxtofl@val 002A                                 ___fleq@ff1 0020  
                               ___fleq@ff2 0024                           __end_oflog@coeff 1034  
                  __end_of__initialization 0037        PROCULUS_Control_Register_Write@size 00AA  
                             eval_poly@res 00AC                                 ___fltol@f1 00A0  
                             _Board_Number 00E5                             __pcstackCOMMON 0076  
                 __size_of_PROCULUS_Buzzer 0020                  __end_of_USART_to_Protocol 07F0  
                             __pidataBANK1 0000                                _Rele0Ligado 09F9  
                            __end_of_frexp 1F81                                _Rele1Ligado 0A10  
                    USART_put_string@vetor 0021                                 __end_ofPL2 0642  
                               __end_ofPL4 1FA3                                 __end_ofPL6 1FBD  
                               __end_ofPL8 064B                          __end_of_Load_Work 05C1  
                      my_delay_ms_WDT@time 0020              __size_of_EEPROM_Write_Integer 0023  
                 __size_of_my_delay_ms_WDT 002D                             _OPTION_REGbits 0081  
                 __end_of_BALANCE_RESISTOR 103C           __end_of_EEPROM_24C1025_Write_Int 0392  
         __end_of_EEPROM_24C1025_Write_Str 135D                                 ??_ADC_init 0020  
              __end_of_EEPROM_Write_String 06DB            __end_of_EEPROM_24C1025_Fill_All 1D0F  
                          ?_Rele0Desligado 0076                                    ??_frexp 0031  
                              ?_Send_To_MB 0076                     __size_of_Send_Reply_OK 0009  
                               __pbssBANK1 00DD                                 __pbssBANK2 0110  
                               __pbssBANK3 0190                         __size_of_eval_poly 00AC  
                          ?_Rele1Desligado 0076            __end_of_EEPROM_24C1025_Read_Int 12C2  
          __end_of_EEPROM_24C1025_Read_Str 1450                   ?_Package_Usart_is_for_me 0076  
                                ?_Save_Log 00B1                             _PROCULUS_Delay 10DE  
                        __end_of__Umul8_16 0501                                 __pmaintext 0814  
                                  ?___flge 0054                                    ?___fleq 0020  
                      Save_Log@add_datalog 00B1                        _EEPROM_Read_Integer 05E2  
               PROCULUS_Show_Screen@screen 00AE                                 __pintentry 0004  
                     mediatemperaturaNTC@i 00D7                       _PROCULUS_Show_Screen 1086  
                                  _T1CKPS0 0084                                    _T1CKPS1 0085  
                                  ?_strcpy 0020                                    ?_strlen 0020  
              __end_of_mediatemperaturaNTC 09F9                                  ?___xxtofl 002A  
                     ?_EEPROM_Read_Integer 0023                      Decodify_Command@dados 00BF  
              EEPROM_24C1025_Read_Int@data 003A                                    _SSPCON2 0091  
         __end_of_PROCULUS_VP_Write_String 1C6E                    EEPROM_Read_Integer@addr 0025  
                                  _SSPSTAT 0094                   _EEPROM_24C1025_Read_Byte 05FD  
                               __stringtab 1000                        PROCULUS_VP_Write@vp 00AA  
              ??_EEPROM_24C1025_Write_Byte 003C                 __end_of_EEPROM_Read_String 0730  
                   __end_of_PROCULUS_Delay 10F8                   __end_of_USART_put_string 1CDA  
                     __size_of_my_delay_ms 002C                                 ??_Save_Log 006F  
                          PROCULUS_Delay@i 0024                               ??_USART_init 0024  
              EEPROM_24C1025_Read_Str@ctrl 0031                               ??_USART_putc 0020  
               __size_of_USART_to_Protocol 004B                PROCULUS_Buzzer@time_ms_x_10 00AE  
                                  _Status0 01A4                                    _Status1 01A2  
                          __size_of___flge 006E                            __size_of___fleq 0036  
                                  ___fladd 0AD4                                    ___fldiv 0E23  
                 EEPROM_Write_Integer@addr 0029                                    ___flmul 0392  
                 EEPROM_Write_Integer@dado 0025                                    ___flsub 0F44  
                                  ___fltol 114E                                    ___lldiv 075D  
                                  ___lwdiv 0F60                              _Send_Reply_OK 036A  
                      __size_of_Send_To_MB 001B                      ?_PROCULUS_Show_Screen 00AE  
                        __end_of_eval_poly 0AD4                                    _captura 0FDA  
                                  __ptext1 091B                                    __ptext2 1C81  
                                  __ptext3 0FE8                                    __ptext4 0C43  
                                  __ptext5 1DC3                                    __ptext6 1F3A  
                                  __ptext7 1F04                                    __ptext8 0A28  
                                  __ptext9 0FDA                          ??_PROCULUS_Buzzer 0070  
                                  _destino 0071                          ?_EEPROM_Read_Byte 0076  
                          __size_of_strcpy 0015                            __size_of_strlen 0013  
                             __size_of_log 00D3                               __size_of_isr 00DE  
                               ??___xxtofl 002E                         ??_EEPROM_Read_Byte 0020  
                                  _segundo 0075                   __size_of_I2C_Master_Init 002D  
                 __size_of_I2C_Master_Read 002B                             _usart_protocol 01AF  
                    ??_EEPROM_Read_Integer 0025                   __size_of_I2C_Master_Wait 001F  
                 __size_of_I2C_Master_Stop 0007              EEPROM_24C1025_Write_Int@local 00AF  
                                  _pointer 01AE              EEPROM_24C1025_Write_Byte@data 003B  
                                  clrloop0 080D                         __end_of_USART_init 1086  
          __end_of_Package_Usart_is_for_me 1000                         __end_of_USART_putc 035A  
                     end_of_initialization 0037                   _EEPROM_24C1025_Write_Int 0373  
                        ??_my_delay_ms_WDT 0024                   _EEPROM_24C1025_Write_Str 12C2  
               ??_I2C_Master_RepeatedStart 0023                            ?_PROCULUS_Delay 0020  
                          my_delay_ms@time 0020            EEPROM_24C1025_Write_Buffer@data 002F  
          EEPROM_24C1025_Write_Buffer@ctrl 0036                           ADC_Read_NTC@calc 00BD  
                __size_of_I2C_Master_Start 000F                  __size_of_I2C_Master_Write 0009  
                        ?_Decodify_Command 0076                            ___lldiv@divisor 0020  
                          ___lldiv@counter 002C                                  _RL0Status 00ED  
     EEPROM_24C1025_Read_Buffer_USART@data 002C                                  _RL1Status 007C  
     EEPROM_24C1025_Read_Buffer_USART@ctrl 0031                         ??_Decodify_Command 00BD  
                                _RCSTAbits 0018                           I2C_Master_Init@c 002D  
                         I2C_Master_Read@a 0023                             ?_Send_Reply_OK 0076  
                _EEPROM_24C1025_Write_Byte 0614           __size_of_EEPROM_24C1025_Fill_All 0035  
                                  strlen@s 0022                         USART_to_Protocol@i 0022  
                                _PORTAbits 0005                                  _PORTBbits 0006  
                                _PORTCbits 0007                           _Delay_Led_Memory 01AC  
             ??_EEPROM_24C1025_Read_Buffer 0030              EEPROM_24C1025_Write_Str@range 0030  
                 mediatemperaturaNTC@canal 00D2                                ___fladd@grs 004B  
         __size_of_EEPROM_24C1025_Read_Int 0018    EEPROM_24C1025_Read_Buffer_USART@cnt_117 002E  
         __size_of_EEPROM_24C1025_Read_Str 00F3                               ?_Auto_Relay0 0076  
                             ?_Auto_Relay1 0076                              ___xxtofl@sign 0032  
      __end_of_EEPROM_24C1025_Write_Buffer 1762                _EEPROM_24C1025_Write_Buffer 1687  
  EEPROM_24C1025_Read_Buffer_USART@mem_add 0027                                ___fldiv@grs 00B3  
                              ___fldiv@rem 00AC       PROCULUS_Control_Register_Write@vetor 00AC  
         EEPROM_24C1025_Write_Buffer@count 0033            EEPROM_24C1025_Write_Int@mem_add 00A8  
         EEPROM_24C1025_Write_Buffer@range 0035                          __size_of_ADC_init 000B  
                  Decodify_Command@tempint 00C3                      PROCULUS_VP_Write@size 00AE  
          EEPROM_24C1025_Read_Str@chip_add 002F                                ___flmul@grs 0063  
                 _PROCULUS_VP_Write_String 1C5D                                  _TXSTAbits 0098  
      __size_of_EEPROM_24C1025_Read_Buffer 00EA                     PROCULUS_Delay@tempo_ms 0020  
                   ??_PROCULUS_Show_Screen 0070                               ?_Rele0Ligado 0076  
                             ?_Rele1Ligado 0076                             __end_of___flge 1F04  
                           __end_of___fleq 1F3A                      __end_of_USART_put_int 036A  
                            __pidataCOMMON 0000                                _BAUDCTLbits 0187  
                         ??_Rele0Desligado 0020                             __end_of_strcpy 1C5D  
                           __end_of_strlen 1C81                                __end_ofPL10 1FCD  
                              __end_ofPL20 0684                                __end_ofPL12 1FDD  
                              __end_ofPL30 17B1                                __end_ofPL22 0F9A  
                              __end_ofPL14 065C                                __end_ofPL40 17C0  
                              __end_ofPL32 0FAD                                __end_ofPL24 0FA4  
                              __end_ofPL16 0675                                __end_ofPL50 17DE  
                              __end_ofPL42 11C2                                __end_ofPL34 0FB6  
                              __end_ofPL26 0692                                __end_ofPL18 11B8  
                              __end_ofPL60 17EE                                __end_ofPL52 0FBF  
                              __end_ofPL44 11CC                                __end_ofPL36 17B8  
                              __end_ofPL28 1FE6                                __end_ofPL70 17F4  
                              __end_ofPL62 0699                                __end_ofPL54 0FC8  
                              __end_ofPL46 17CA                                __end_ofPL38 1FEE  
                              __end_ofPL80 071C                                __end_ofPL72 17FA  
                              __end_ofPL64 06A0                                __end_ofPL56 17E7  
                              __end_ofPL48 17D4                                __end_ofPL82 2000  
                              __end_ofPL74 1800                                __end_ofPL66 1FF4  
                              __end_ofPL58 0FCF                                __end_ofPL76 0FD5  
                              __end_ofPL68 1FFA                                __end_ofPL78 0FDA  
                      start_initialization 0015                                 eval_poly@d 00A4  
                               eval_poly@n 00A5                                 eval_poly@x 00A0  
                         ??_Rele1Desligado 0020                                  _Load_Work 0501  
                              __end_of_log 1E96                                __end_of_isr 12AA  
                              USART_init@i 0024                               ??_Send_To_MB 0021  
 EEPROM_24C1025_Read_Buffer_USART@chip_add 002F                                 frexp@value 002C  
                        ??_I2C_Master_Init 0031                          ??_I2C_Master_Read 0025  
                        ??_I2C_Master_Wait 0020                          ??_I2C_Master_Stop 0023  
             __end_of_EEPROM_Write_Integer 06C3           EEPROM_24C1025_Write_Int@chip_add 00AE  
                                _SetPoint0 00E1                                  _SetPoint1 00DD  
                      Decodify_Command@add 00C1                                  _TempoON_0 00EB  
                                _TempoON_1 00E8                            ??_Send_Reply_OK 0025  
                                 ??___flge 005C                                   ??___fleq 0028  
                        __size_of_Save_Log 0056                       I2C_Master_Wait@tempo 0022  
                                __Umul8_16 04E6                                __pdataBANK1 00ED  
                       __end_of_Send_To_MB 0349           __size_of_Package_Usart_is_for_me 0018  
                                 ??_strcpy 0021                                   ??_strlen 0022  
 EEPROM_24C1025_Read_Buffer_USART@sizedata 002B                 ??_EEPROM_24C1025_Read_Byte 0039  
       EEPROM_24C1025_Write_Buffer@mem_add 002A                                  ___fladd@a 003C  
                                ___fladd@b 0038           EEPROM_24C1025_Write_Byte@mem_add 0037  
                                ___fldiv@a 00A0                                  ___fldiv@b 00A4  
                                ___flmul@a 0058                                  ___flmul@b 0054  
                              __pbssCOMMON 0070                                  ___flsub@a 004C  
                                ___flsub@b 0050                                  ___latbits 0002  
                            __pcstackBANK0 0020                              __pcstackBANK1 00A0  
                               ?_Load_Work 0076                          _PROCULUS_VP_Write 003B  
                        __size_of___xxtofl 006E                         ?_PROCULUS_VP_Write 00AA  
             __size_of_EEPROM_Write_String 0018                           _I2C_Master_Start 149A  
                         _I2C_Master_Write 1762                        ??_PROCULUS_VP_Write 00AF  
                           _tempodecorrido 019C                          ?_USART_put_string 0021  
                          _PROCULUS_Buzzer 1090                           ___lwdiv@dividend 0022  
                            ?_ADC_Read_NTC 00B9             Package_Usart_is_for_me@retorno 0020  
                       ??_USART_put_string 0023                                   ?___fladd 0038  
                                 ?___fldiv 00A0                    _EEPROM_24C1025_Fill_All 1CDA  
                                 ?___flmul 0054                                   ?___flsub 004C  
                                 ?___fltol 00A0                                   ?___lldiv 0020  
                               ?__Umul8_16 0020                         _EEPROM_Read_String 071C  
                                 ?___lwdiv 0020         __end_of_EEPROM_24C1025_Read_Buffer 1593  
               _EEPROM_24C1025_Read_Buffer 14A9                                   ?_captura 0020  
                                __pstrings 1000                            _my_delay_ms_WDT 177B  
                  _EEPROM_24C1025_Read_Int 12AA                    _EEPROM_24C1025_Read_Str 135D  
                   EEPROM_Read_Integer@ptr 0026                 ??_EEPROM_24C1025_Write_Int 006F  
               ??_EEPROM_24C1025_Write_Str 002F                        ?_EEPROM_Read_String 0023  
                                _eval_poly 0A28                  __end_of_PROCULUS_VP_Write 0070  
               EEPROM_24C1025_Read_Str@cnt 002E                                   _ADC_init 07F0  
                         ___lwdiv@quotient 0025                    EEPROM_Write_Integer@ptr 002A  
                     __size_of_Auto_Relay0 005F                       __size_of_Auto_Relay1 0055  
                         ??_PROCULUS_Delay 0022                             __size_of_frexp 0047  
           EEPROM_24C1025_Read_Buffer@data 002F               __size_of_mediatemperaturaNTC 00DE  
           EEPROM_24C1025_Read_Buffer@ctrl 0034                              ??_my_delay_ms 0024  
                __size_of_EEPROM_Read_Byte 0021                          interrupt_function 0004  
          EEPROM_24C1025_Write_Str@mem_add 002A                       ??_EEPROM_Read_String 0024  
                                clear_ram0 080C                                   _PIE1bits 008C  
                           ??_ADC_Read_NTC 006F                                   _PIR1bits 000C  
         PROCULUS_Control_Register_Write@i 00AD                     Decodify_Command@OutPut 00C5  
                  mediatemperaturaNTC@Temp 00D3                            _Delay_Led_Usart 01A8  
             EEPROM_24C1025_Read_Byte@data 003A                       __size_of_Rele0Ligado 0017  
                     __size_of_Rele1Ligado 0018                __end_of_EEPROM_Read_Integer 05FD  
                               _ADCON0bits 001F                                __stringbase 100F  
                               _ADCON1bits 009F                  __size_of_Decodify_Command 02BE  
                     _EEPROM_Write_Integer 06A0             EEPROM_24C1025_Read_Int@mem_add 0035  
                               ?_eval_poly 00A0                                  main@reset 00DB  
                              ??_Load_Work 00B9                 ??_PROCULUS_VP_Write_String 0070  
                      I2C_Master_Read@temp 0025                    __end_of_PROCULUS_Buzzer 10B0  
                           _generic_status 00EC                                  frexp@eptr 0030  
                               _EECON1bits 018C                                   _Save_Log 10F8  
                ??_EEPROM_24C1025_Fill_All 006F                        __end_of_my_delay_ms 1CAD  
             EEPROM_24C1025_Read_Str@range 0030                    __end_of_my_delay_ms_WDT 17A8  
                             my_delay_ms@i 0026                              ADC_Read_NTC@B 00C1  
                            ADC_Read_NTC@i 00C7                                ??__Umul8_16 0022  
        __size_of_I2C_Master_RepeatedStart 0009                           __size_of___fladd 016F  
                ??_EEPROM_24C1025_Read_Int 0039                    _Package_Usart_is_for_me 0FE8  
                         __size_of___fldiv 0121                  ??_EEPROM_24C1025_Read_Str 002C  
                         __size_of___flmul 0154                  ?_I2C_Master_RepeatedStart 0076  
                         __size_of___flsub 001C                           __size_of___fltol 005A  
                         __size_of___lldiv 0048                           __size_of___lwdiv 002A  
                       __end_of__stringtab 1010        EEPROM_24C1025_Write_Buffer@chip_add 0034  
                      USART_put_string@ptr 0023                           __size_of_captura 000E  
                    ?_EEPROM_Write_Integer 0025                               _Temperatura0 0194  
                             _Temperatura1 0190                            _I2C_Master_Init 0730  
                          _I2C_Master_Read 1450                                   ___xxtofl 0DB5  
               __size_of_PROCULUS_VP_Write 0035                            _I2C_Master_Wait 147B  
         EEPROM_24C1025_Read_Byte@chip_add 0039                            _I2C_Master_Stop 176B  
                          ___lwdiv@divisor 0020                            ___lwdiv@counter 0024  
                                 __ptext10 1047                                   __ptext11 0730  
                                 __ptext20 114E                                   __ptext12 075D  
                                 __ptext21 0392                                   __ptext13 0070  
                                 __ptext30 035A                                   __ptext22 04E6  
                                 __ptext14 1C48                                   __ptext31 10DE  
                                 __ptext23 1C5D                                   __ptext15 07A5  
                                 __ptext40 12C2                                   __ptext32 0501  
                                 __ptext24 1C6E                                   __ptext16 032E  
                                 __ptext41 0614                                   __ptext33 0E23  
                                 __ptext25 003B                                   __ptext17 036A  
                                 __ptext50 1CDA                                   __ptext42 135D  
                                 __ptext34 05E2                                   __ptext26 1086  
                                 __ptext18 1CAD                                   __ptext51 0373  
                                 __ptext43 12AA                                   __ptext35 06C3  
                                 __ptext27 1090                                   __ptext19 10F8  
                                 __ptext60 0A10                                   __ptext52 1687  
                                 __ptext44 05FD                                   __ptext36 06A0  
                                 __ptext28 0F60                                   __ptext61 1F85  
                                 __ptext53 177B                                   __ptext45 14A9  
                                 __ptext37 06DB                                   __ptext29 10B0  
                                 __ptext62 1D64                                   __ptext54 1762  
                                 __ptext46 1593                                   __ptext38 071C  
                                 __ptext63 0F44                                   __ptext55 176B  
                                 __ptext47 0349                                   __ptext39 05C1  
                                 __ptext64 0AD4                                   __ptext56 149A  
                                 __ptext48 1772                                   __ptext65 1E96  
                                 __ptext57 147B                                   __ptext49 1450  
                                 __ptext66 09F9                                   __ptext58 1D0F  
                                 __ptext67 1F81                                   __ptext59 0DB5  
                                 __ptext68 07F0                                   __ptext69 11CC  
                       USART_put_int@value 00A8                                 strcpy@from 0020  
                            __size_of_main 0107               EEPROM_24C1025_Fill_All@value 00B1  
               PROCULUS_VP_Write_String@vp 00B2        EEPROM_24C1025_Write_Buffer@sizedata 002E  
                              _milisegundo 01A6                             _Delay_Led_Tmr0 01AA  
            __size_of_PROCULUS_Show_Screen 000A                        _EEPROM_Write_String 06C3  
                                 log@coeff 1010                   __end_of_I2C_Master_Start 14A9  
                 __end_of_I2C_Master_Write 176B                                 _INTCONbits 000B  
                              ??_eval_poly 00A7                       __end_of_ADC_Read_NTC 0DB5  
                                 isr@tempo 007A                       EEPROM_Read_Byte@addr 0022  
                   EEPROM_Read_String@addr 0024                     EEPROM_Read_String@dado 0023  
                         my_delay_ms_WDT@i 0026                                   intlevel1 0000  
                         ?_PROCULUS_Buzzer 00AE                          USART_put_int@dado 006F  
                         _EEPROM_Read_Byte 05C1                                _my_delay_ms 1C81  
                        ADC_Read_NTC@canal 0076                       ?_EEPROM_Write_String 0025  
                         ___lldiv@dividend 0024                     __size_of_USART_put_int 0010  
             EEPROM_24C1025_Write_Int@data 00AC                       EEPROM_Read_Integer@i 0029  
                  EEPROM_Write_String@addr 0026                    EEPROM_Write_String@dado 0025  
                        ADC_Read_NTC@value 00C8                         USART_init@baudrate 0020  
                                stringcode 100A                                 _OSCCONbits 008F  
    EEPROM_24C1025_Read_Buffer_USART@range 0030                  ??_Package_Usart_is_for_me 0020  
                         ?_my_delay_ms_WDT 0020                      __end_of_Send_Reply_OK 0373  
                      _mediatemperaturaNTC 091B                    __end_of_I2C_Master_Init 075D  
                  __end_of_I2C_Master_Read 147B                    __end_of_I2C_Master_Wait 149A  
                  __end_of_I2C_Master_Stop 1772               EEPROM_24C1025_Write_Str@data 002E  
             EEPROM_24C1025_Write_Str@ctrl 0031                ?_EEPROM_24C1025_Read_Buffer 002A  
          EEPROM_24C1025_Fill_All@chip_add 00B3                     ??_EEPROM_Write_Integer 0027  
                   __Umul8_16@multiplicand 0020            USART_to_Protocol@usart_protocol 0024  
                         _Decodify_Command 0070                  __size_of_USART_put_string 002D  
                         ___lldiv@quotient 0028                          I2C_Master_Write@d 0023  
                                 strcpy@cp 0023                                   strlen@cp 0023  
                                 strcpy@to 0022                                   stringdir 100A  
                                 stringtab 1000                                _SSPCON2bits 0091  
                        _EEPROM_Write_Byte 06DB             EEPROM_24C1025_Read_Str@mem_add 0027  
                            ___fladd@signs 0048                       ?_mediatemperaturaNTC 0076  
                       ?_EEPROM_Write_Byte 0020                      ??_EEPROM_Write_String 0026  
                  __size_of_Rele0Desligado 0004                               ___fladd@aexp 0049  
                             ___fladd@bexp 004A          __size_of_EEPROM_24C1025_Read_Byte 0017  
                ?_EEPROM_24C1025_Read_Byte 0035                        EEPROM_Read_String@c 0025  
                     __Umul8_16@multiplier 0026                    __size_of_Rele1Desligado 0004  
                      ??_EEPROM_Write_Byte 0021                          __Umul8_16@product 0022  
                               _USART_init 1047  
