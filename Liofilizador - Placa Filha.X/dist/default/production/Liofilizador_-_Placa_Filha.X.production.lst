

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Nov 12 13:39:31 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	intentry,global,class=CODE,delta=2
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    75                           	dabs	1,0x7E,2
    76  0000                     
    77                           ; Version 2.20
    78                           ; Generated 12/02/2020 GMT
    79                           ; 
    80                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC16F886 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  008F                     	;# 
   154  0090                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0093                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0095                     	;# 
   162  0096                     	;# 
   163  0097                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009A                     	;# 
   167  009B                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009E                     	;# 
   171  009F                     	;# 
   172  0105                     	;# 
   173  0107                     	;# 
   174  0108                     	;# 
   175  0109                     	;# 
   176  010C                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  010F                     	;# 
   181  0185                     	;# 
   182  0187                     	;# 
   183  0188                     	;# 
   184  0189                     	;# 
   185  018C                     	;# 
   186  018D                     	;# 
   187  0000                     	;# 
   188  0001                     	;# 
   189  0002                     	;# 
   190  0003                     	;# 
   191  0004                     	;# 
   192  0005                     	;# 
   193  0006                     	;# 
   194  0007                     	;# 
   195  0009                     	;# 
   196  000A                     	;# 
   197  000B                     	;# 
   198  000C                     	;# 
   199  000D                     	;# 
   200  000E                     	;# 
   201  000E                     	;# 
   202  000F                     	;# 
   203  0010                     	;# 
   204  0011                     	;# 
   205  0012                     	;# 
   206  0013                     	;# 
   207  0014                     	;# 
   208  0015                     	;# 
   209  0015                     	;# 
   210  0016                     	;# 
   211  0017                     	;# 
   212  0018                     	;# 
   213  0019                     	;# 
   214  001A                     	;# 
   215  001B                     	;# 
   216  001B                     	;# 
   217  001C                     	;# 
   218  001D                     	;# 
   219  001E                     	;# 
   220  001F                     	;# 
   221  0081                     	;# 
   222  0085                     	;# 
   223  0086                     	;# 
   224  0087                     	;# 
   225  0089                     	;# 
   226  008C                     	;# 
   227  008D                     	;# 
   228  008E                     	;# 
   229  008F                     	;# 
   230  0090                     	;# 
   231  0091                     	;# 
   232  0092                     	;# 
   233  0093                     	;# 
   234  0093                     	;# 
   235  0093                     	;# 
   236  0094                     	;# 
   237  0095                     	;# 
   238  0096                     	;# 
   239  0097                     	;# 
   240  0098                     	;# 
   241  0099                     	;# 
   242  009A                     	;# 
   243  009B                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009E                     	;# 
   247  009F                     	;# 
   248  0105                     	;# 
   249  0107                     	;# 
   250  0108                     	;# 
   251  0109                     	;# 
   252  010C                     	;# 
   253  010C                     	;# 
   254  010D                     	;# 
   255  010E                     	;# 
   256  010F                     	;# 
   257  0185                     	;# 
   258  0187                     	;# 
   259  0188                     	;# 
   260  0189                     	;# 
   261  018C                     	;# 
   262  018D                     	;# 
   263  0000                     	;# 
   264  0001                     	;# 
   265  0002                     	;# 
   266  0003                     	;# 
   267  0004                     	;# 
   268  0005                     	;# 
   269  0006                     	;# 
   270  0007                     	;# 
   271  0009                     	;# 
   272  000A                     	;# 
   273  000B                     	;# 
   274  000C                     	;# 
   275  000D                     	;# 
   276  000E                     	;# 
   277  000E                     	;# 
   278  000F                     	;# 
   279  0010                     	;# 
   280  0011                     	;# 
   281  0012                     	;# 
   282  0013                     	;# 
   283  0014                     	;# 
   284  0015                     	;# 
   285  0015                     	;# 
   286  0016                     	;# 
   287  0017                     	;# 
   288  0018                     	;# 
   289  0019                     	;# 
   290  001A                     	;# 
   291  001B                     	;# 
   292  001B                     	;# 
   293  001C                     	;# 
   294  001D                     	;# 
   295  001E                     	;# 
   296  001F                     	;# 
   297  0081                     	;# 
   298  0085                     	;# 
   299  0086                     	;# 
   300  0087                     	;# 
   301  0089                     	;# 
   302  008C                     	;# 
   303  008D                     	;# 
   304  008E                     	;# 
   305  008F                     	;# 
   306  0090                     	;# 
   307  0091                     	;# 
   308  0092                     	;# 
   309  0093                     	;# 
   310  0093                     	;# 
   311  0093                     	;# 
   312  0094                     	;# 
   313  0095                     	;# 
   314  0096                     	;# 
   315  0097                     	;# 
   316  0098                     	;# 
   317  0099                     	;# 
   318  009A                     	;# 
   319  009B                     	;# 
   320  009C                     	;# 
   321  009D                     	;# 
   322  009E                     	;# 
   323  009F                     	;# 
   324  0105                     	;# 
   325  0107                     	;# 
   326  0108                     	;# 
   327  0109                     	;# 
   328  010C                     	;# 
   329  010C                     	;# 
   330  010D                     	;# 
   331  010E                     	;# 
   332  010F                     	;# 
   333  0185                     	;# 
   334  0187                     	;# 
   335  0188                     	;# 
   336  0189                     	;# 
   337  018C                     	;# 
   338  018D                     	;# 
   339  0000                     	;# 
   340  0001                     	;# 
   341  0002                     	;# 
   342  0003                     	;# 
   343  0004                     	;# 
   344  0005                     	;# 
   345  0006                     	;# 
   346  0007                     	;# 
   347  0009                     	;# 
   348  000A                     	;# 
   349  000B                     	;# 
   350  000C                     	;# 
   351  000D                     	;# 
   352  000E                     	;# 
   353  000E                     	;# 
   354  000F                     	;# 
   355  0010                     	;# 
   356  0011                     	;# 
   357  0012                     	;# 
   358  0013                     	;# 
   359  0014                     	;# 
   360  0015                     	;# 
   361  0015                     	;# 
   362  0016                     	;# 
   363  0017                     	;# 
   364  0018                     	;# 
   365  0019                     	;# 
   366  001A                     	;# 
   367  001B                     	;# 
   368  001B                     	;# 
   369  001C                     	;# 
   370  001D                     	;# 
   371  001E                     	;# 
   372  001F                     	;# 
   373  0081                     	;# 
   374  0085                     	;# 
   375  0086                     	;# 
   376  0087                     	;# 
   377  0089                     	;# 
   378  008C                     	;# 
   379  008D                     	;# 
   380  008E                     	;# 
   381  008F                     	;# 
   382  0090                     	;# 
   383  0091                     	;# 
   384  0092                     	;# 
   385  0093                     	;# 
   386  0093                     	;# 
   387  0093                     	;# 
   388  0094                     	;# 
   389  0095                     	;# 
   390  0096                     	;# 
   391  0097                     	;# 
   392  0098                     	;# 
   393  0099                     	;# 
   394  009A                     	;# 
   395  009B                     	;# 
   396  009C                     	;# 
   397  009D                     	;# 
   398  009E                     	;# 
   399  009F                     	;# 
   400  0105                     	;# 
   401  0107                     	;# 
   402  0108                     	;# 
   403  0109                     	;# 
   404  010C                     	;# 
   405  010C                     	;# 
   406  010D                     	;# 
   407  010E                     	;# 
   408  010F                     	;# 
   409  0185                     	;# 
   410  0187                     	;# 
   411  0188                     	;# 
   412  0189                     	;# 
   413  018C                     	;# 
   414  018D                     	;# 
   415  0000                     	;# 
   416  0001                     	;# 
   417  0002                     	;# 
   418  0003                     	;# 
   419  0004                     	;# 
   420  0005                     	;# 
   421  0006                     	;# 
   422  0007                     	;# 
   423  0009                     	;# 
   424  000A                     	;# 
   425  000B                     	;# 
   426  000C                     	;# 
   427  000D                     	;# 
   428  000E                     	;# 
   429  000E                     	;# 
   430  000F                     	;# 
   431  0010                     	;# 
   432  0011                     	;# 
   433  0012                     	;# 
   434  0013                     	;# 
   435  0014                     	;# 
   436  0015                     	;# 
   437  0015                     	;# 
   438  0016                     	;# 
   439  0017                     	;# 
   440  0018                     	;# 
   441  0019                     	;# 
   442  001A                     	;# 
   443  001B                     	;# 
   444  001B                     	;# 
   445  001C                     	;# 
   446  001D                     	;# 
   447  001E                     	;# 
   448  001F                     	;# 
   449  0081                     	;# 
   450  0085                     	;# 
   451  0086                     	;# 
   452  0087                     	;# 
   453  0089                     	;# 
   454  008C                     	;# 
   455  008D                     	;# 
   456  008E                     	;# 
   457  008F                     	;# 
   458  0090                     	;# 
   459  0091                     	;# 
   460  0092                     	;# 
   461  0093                     	;# 
   462  0093                     	;# 
   463  0093                     	;# 
   464  0094                     	;# 
   465  0095                     	;# 
   466  0096                     	;# 
   467  0097                     	;# 
   468  0098                     	;# 
   469  0099                     	;# 
   470  009A                     	;# 
   471  009B                     	;# 
   472  009C                     	;# 
   473  009D                     	;# 
   474  009E                     	;# 
   475  009F                     	;# 
   476  0105                     	;# 
   477  0107                     	;# 
   478  0108                     	;# 
   479  0109                     	;# 
   480  010C                     	;# 
   481  010C                     	;# 
   482  010D                     	;# 
   483  010E                     	;# 
   484  010F                     	;# 
   485  0185                     	;# 
   486  0187                     	;# 
   487  0188                     	;# 
   488  0189                     	;# 
   489  018C                     	;# 
   490  018D                     	;# 
   491  0000                     	;# 
   492  0001                     	;# 
   493  0002                     	;# 
   494  0003                     	;# 
   495  0004                     	;# 
   496  0005                     	;# 
   497  0006                     	;# 
   498  0007                     	;# 
   499  0009                     	;# 
   500  000A                     	;# 
   501  000B                     	;# 
   502  000C                     	;# 
   503  000D                     	;# 
   504  000E                     	;# 
   505  000E                     	;# 
   506  000F                     	;# 
   507  0010                     	;# 
   508  0011                     	;# 
   509  0012                     	;# 
   510  0013                     	;# 
   511  0014                     	;# 
   512  0015                     	;# 
   513  0015                     	;# 
   514  0016                     	;# 
   515  0017                     	;# 
   516  0018                     	;# 
   517  0019                     	;# 
   518  001A                     	;# 
   519  001B                     	;# 
   520  001B                     	;# 
   521  001C                     	;# 
   522  001D                     	;# 
   523  001E                     	;# 
   524  001F                     	;# 
   525  0081                     	;# 
   526  0085                     	;# 
   527  0086                     	;# 
   528  0087                     	;# 
   529  0089                     	;# 
   530  008C                     	;# 
   531  008D                     	;# 
   532  008E                     	;# 
   533  008F                     	;# 
   534  0090                     	;# 
   535  0091                     	;# 
   536  0092                     	;# 
   537  0093                     	;# 
   538  0093                     	;# 
   539  0093                     	;# 
   540  0094                     	;# 
   541  0095                     	;# 
   542  0096                     	;# 
   543  0097                     	;# 
   544  0098                     	;# 
   545  0099                     	;# 
   546  009A                     	;# 
   547  009B                     	;# 
   548  009C                     	;# 
   549  009D                     	;# 
   550  009E                     	;# 
   551  009F                     	;# 
   552  0105                     	;# 
   553  0107                     	;# 
   554  0108                     	;# 
   555  0109                     	;# 
   556  010C                     	;# 
   557  010C                     	;# 
   558  010D                     	;# 
   559  010E                     	;# 
   560  010F                     	;# 
   561  0185                     	;# 
   562  0187                     	;# 
   563  0188                     	;# 
   564  0189                     	;# 
   565  018C                     	;# 
   566  018D                     	;# 
   567  0000                     	;# 
   568  0001                     	;# 
   569  0002                     	;# 
   570  0003                     	;# 
   571  0004                     	;# 
   572  0005                     	;# 
   573  0006                     	;# 
   574  0007                     	;# 
   575  0009                     	;# 
   576  000A                     	;# 
   577  000B                     	;# 
   578  000C                     	;# 
   579  000D                     	;# 
   580  000E                     	;# 
   581  000E                     	;# 
   582  000F                     	;# 
   583  0010                     	;# 
   584  0011                     	;# 
   585  0012                     	;# 
   586  0013                     	;# 
   587  0014                     	;# 
   588  0015                     	;# 
   589  0015                     	;# 
   590  0016                     	;# 
   591  0017                     	;# 
   592  0018                     	;# 
   593  0019                     	;# 
   594  001A                     	;# 
   595  001B                     	;# 
   596  001B                     	;# 
   597  001C                     	;# 
   598  001D                     	;# 
   599  001E                     	;# 
   600  001F                     	;# 
   601  0081                     	;# 
   602  0085                     	;# 
   603  0086                     	;# 
   604  0087                     	;# 
   605  0089                     	;# 
   606  008C                     	;# 
   607  008D                     	;# 
   608  008E                     	;# 
   609  008F                     	;# 
   610  0090                     	;# 
   611  0091                     	;# 
   612  0092                     	;# 
   613  0093                     	;# 
   614  0093                     	;# 
   615  0093                     	;# 
   616  0094                     	;# 
   617  0095                     	;# 
   618  0096                     	;# 
   619  0097                     	;# 
   620  0098                     	;# 
   621  0099                     	;# 
   622  009A                     	;# 
   623  009B                     	;# 
   624  009C                     	;# 
   625  009D                     	;# 
   626  009E                     	;# 
   627  009F                     	;# 
   628  0105                     	;# 
   629  0107                     	;# 
   630  0108                     	;# 
   631  0109                     	;# 
   632  010C                     	;# 
   633  010C                     	;# 
   634  010D                     	;# 
   635  010E                     	;# 
   636  010F                     	;# 
   637  0185                     	;# 
   638  0187                     	;# 
   639  0188                     	;# 
   640  0189                     	;# 
   641  018C                     	;# 
   642  018D                     	;# 
   643  0000                     	;# 
   644  0001                     	;# 
   645  0002                     	;# 
   646  0003                     	;# 
   647  0004                     	;# 
   648  0005                     	;# 
   649  0006                     	;# 
   650  0007                     	;# 
   651  0009                     	;# 
   652  000A                     	;# 
   653  000B                     	;# 
   654  000C                     	;# 
   655  000D                     	;# 
   656  000E                     	;# 
   657  000E                     	;# 
   658  000F                     	;# 
   659  0010                     	;# 
   660  0011                     	;# 
   661  0012                     	;# 
   662  0013                     	;# 
   663  0014                     	;# 
   664  0015                     	;# 
   665  0015                     	;# 
   666  0016                     	;# 
   667  0017                     	;# 
   668  0018                     	;# 
   669  0019                     	;# 
   670  001A                     	;# 
   671  001B                     	;# 
   672  001B                     	;# 
   673  001C                     	;# 
   674  001D                     	;# 
   675  001E                     	;# 
   676  001F                     	;# 
   677  0081                     	;# 
   678  0085                     	;# 
   679  0086                     	;# 
   680  0087                     	;# 
   681  0089                     	;# 
   682  008C                     	;# 
   683  008D                     	;# 
   684  008E                     	;# 
   685  008F                     	;# 
   686  0090                     	;# 
   687  0091                     	;# 
   688  0092                     	;# 
   689  0093                     	;# 
   690  0093                     	;# 
   691  0093                     	;# 
   692  0094                     	;# 
   693  0095                     	;# 
   694  0096                     	;# 
   695  0097                     	;# 
   696  0098                     	;# 
   697  0099                     	;# 
   698  009A                     	;# 
   699  009B                     	;# 
   700  009C                     	;# 
   701  009D                     	;# 
   702  009E                     	;# 
   703  009F                     	;# 
   704  0105                     	;# 
   705  0107                     	;# 
   706  0108                     	;# 
   707  0109                     	;# 
   708  010C                     	;# 
   709  010C                     	;# 
   710  010D                     	;# 
   711  010E                     	;# 
   712  010F                     	;# 
   713  0185                     	;# 
   714  0187                     	;# 
   715  0188                     	;# 
   716  0189                     	;# 
   717  018C                     	;# 
   718  018D                     	;# 
   719  0000                     	;# 
   720  0001                     	;# 
   721  0002                     	;# 
   722  0003                     	;# 
   723  0004                     	;# 
   724  0005                     	;# 
   725  0006                     	;# 
   726  0007                     	;# 
   727  0009                     	;# 
   728  000A                     	;# 
   729  000B                     	;# 
   730  000C                     	;# 
   731  000D                     	;# 
   732  000E                     	;# 
   733  000E                     	;# 
   734  000F                     	;# 
   735  0010                     	;# 
   736  0011                     	;# 
   737  0012                     	;# 
   738  0013                     	;# 
   739  0014                     	;# 
   740  0015                     	;# 
   741  0015                     	;# 
   742  0016                     	;# 
   743  0017                     	;# 
   744  0018                     	;# 
   745  0019                     	;# 
   746  001A                     	;# 
   747  001B                     	;# 
   748  001B                     	;# 
   749  001C                     	;# 
   750  001D                     	;# 
   751  001E                     	;# 
   752  001F                     	;# 
   753  0081                     	;# 
   754  0085                     	;# 
   755  0086                     	;# 
   756  0087                     	;# 
   757  0089                     	;# 
   758  008C                     	;# 
   759  008D                     	;# 
   760  008E                     	;# 
   761  008F                     	;# 
   762  0090                     	;# 
   763  0091                     	;# 
   764  0092                     	;# 
   765  0093                     	;# 
   766  0093                     	;# 
   767  0093                     	;# 
   768  0094                     	;# 
   769  0095                     	;# 
   770  0096                     	;# 
   771  0097                     	;# 
   772  0098                     	;# 
   773  0099                     	;# 
   774  009A                     	;# 
   775  009B                     	;# 
   776  009C                     	;# 
   777  009D                     	;# 
   778  009E                     	;# 
   779  009F                     	;# 
   780  0105                     	;# 
   781  0107                     	;# 
   782  0108                     	;# 
   783  0109                     	;# 
   784  010C                     	;# 
   785  010C                     	;# 
   786  010D                     	;# 
   787  010E                     	;# 
   788  010F                     	;# 
   789  0185                     	;# 
   790  0187                     	;# 
   791  0188                     	;# 
   792  0189                     	;# 
   793  018C                     	;# 
   794  018D                     	;# 
   795  0000                     	;# 
   796  0001                     	;# 
   797  0002                     	;# 
   798  0003                     	;# 
   799  0004                     	;# 
   800  0005                     	;# 
   801  0006                     	;# 
   802  0007                     	;# 
   803  0009                     	;# 
   804  000A                     	;# 
   805  000B                     	;# 
   806  000C                     	;# 
   807  000D                     	;# 
   808  000E                     	;# 
   809  000E                     	;# 
   810  000F                     	;# 
   811  0010                     	;# 
   812  0011                     	;# 
   813  0012                     	;# 
   814  0013                     	;# 
   815  0014                     	;# 
   816  0015                     	;# 
   817  0015                     	;# 
   818  0016                     	;# 
   819  0017                     	;# 
   820  0018                     	;# 
   821  0019                     	;# 
   822  001A                     	;# 
   823  001B                     	;# 
   824  001B                     	;# 
   825  001C                     	;# 
   826  001D                     	;# 
   827  001E                     	;# 
   828  001F                     	;# 
   829  0081                     	;# 
   830  0085                     	;# 
   831  0086                     	;# 
   832  0087                     	;# 
   833  0089                     	;# 
   834  008C                     	;# 
   835  008D                     	;# 
   836  008E                     	;# 
   837  008F                     	;# 
   838  0090                     	;# 
   839  0091                     	;# 
   840  0092                     	;# 
   841  0093                     	;# 
   842  0093                     	;# 
   843  0093                     	;# 
   844  0094                     	;# 
   845  0095                     	;# 
   846  0096                     	;# 
   847  0097                     	;# 
   848  0098                     	;# 
   849  0099                     	;# 
   850  009A                     	;# 
   851  009B                     	;# 
   852  009C                     	;# 
   853  009D                     	;# 
   854  009E                     	;# 
   855  009F                     	;# 
   856  0105                     	;# 
   857  0107                     	;# 
   858  0108                     	;# 
   859  0109                     	;# 
   860  010C                     	;# 
   861  010C                     	;# 
   862  010D                     	;# 
   863  010E                     	;# 
   864  010F                     	;# 
   865  0185                     	;# 
   866  0187                     	;# 
   867  0188                     	;# 
   868  0189                     	;# 
   869  018C                     	;# 
   870  018D                     	;# 
   871  0000                     	;# 
   872  0001                     	;# 
   873  0002                     	;# 
   874  0003                     	;# 
   875  0004                     	;# 
   876  0005                     	;# 
   877  0006                     	;# 
   878  0007                     	;# 
   879  0009                     	;# 
   880  000A                     	;# 
   881  000B                     	;# 
   882  000C                     	;# 
   883  000D                     	;# 
   884  000E                     	;# 
   885  000E                     	;# 
   886  000F                     	;# 
   887  0010                     	;# 
   888  0011                     	;# 
   889  0012                     	;# 
   890  0013                     	;# 
   891  0014                     	;# 
   892  0015                     	;# 
   893  0015                     	;# 
   894  0016                     	;# 
   895  0017                     	;# 
   896  0018                     	;# 
   897  0019                     	;# 
   898  001A                     	;# 
   899  001B                     	;# 
   900  001B                     	;# 
   901  001C                     	;# 
   902  001D                     	;# 
   903  001E                     	;# 
   904  001F                     	;# 
   905  0081                     	;# 
   906  0085                     	;# 
   907  0086                     	;# 
   908  0087                     	;# 
   909  0089                     	;# 
   910  008C                     	;# 
   911  008D                     	;# 
   912  008E                     	;# 
   913  008F                     	;# 
   914  0090                     	;# 
   915  0091                     	;# 
   916  0092                     	;# 
   917  0093                     	;# 
   918  0093                     	;# 
   919  0093                     	;# 
   920  0094                     	;# 
   921  0095                     	;# 
   922  0096                     	;# 
   923  0097                     	;# 
   924  0098                     	;# 
   925  0099                     	;# 
   926  009A                     	;# 
   927  009B                     	;# 
   928  009C                     	;# 
   929  009D                     	;# 
   930  009E                     	;# 
   931  009F                     	;# 
   932  0105                     	;# 
   933  0107                     	;# 
   934  0108                     	;# 
   935  0109                     	;# 
   936  010C                     	;# 
   937  010C                     	;# 
   938  010D                     	;# 
   939  010E                     	;# 
   940  010F                     	;# 
   941  0185                     	;# 
   942  0187                     	;# 
   943  0188                     	;# 
   944  0189                     	;# 
   945  018C                     	;# 
   946  018D                     	;# 
   947  0000                     	;# 
   948  0001                     	;# 
   949  0002                     	;# 
   950  0003                     	;# 
   951  0004                     	;# 
   952  0005                     	;# 
   953  0006                     	;# 
   954  0007                     	;# 
   955  0009                     	;# 
   956  000A                     	;# 
   957  000B                     	;# 
   958  000C                     	;# 
   959  000D                     	;# 
   960  000E                     	;# 
   961  000E                     	;# 
   962  000F                     	;# 
   963  0010                     	;# 
   964  0011                     	;# 
   965  0012                     	;# 
   966  0013                     	;# 
   967  0014                     	;# 
   968  0015                     	;# 
   969  0015                     	;# 
   970  0016                     	;# 
   971  0017                     	;# 
   972  0018                     	;# 
   973  0019                     	;# 
   974  001A                     	;# 
   975  001B                     	;# 
   976  001B                     	;# 
   977  001C                     	;# 
   978  001D                     	;# 
   979  001E                     	;# 
   980  001F                     	;# 
   981  0081                     	;# 
   982  0085                     	;# 
   983  0086                     	;# 
   984  0087                     	;# 
   985  0089                     	;# 
   986  008C                     	;# 
   987  008D                     	;# 
   988  008E                     	;# 
   989  008F                     	;# 
   990  0090                     	;# 
   991  0091                     	;# 
   992  0092                     	;# 
   993  0093                     	;# 
   994  0093                     	;# 
   995  0093                     	;# 
   996  0094                     	;# 
   997  0095                     	;# 
   998  0096                     	;# 
   999  0097                     	;# 
  1000  0098                     	;# 
  1001  0099                     	;# 
  1002  009A                     	;# 
  1003  009B                     	;# 
  1004  009C                     	;# 
  1005  009D                     	;# 
  1006  009E                     	;# 
  1007  009F                     	;# 
  1008  0105                     	;# 
  1009  0107                     	;# 
  1010  0108                     	;# 
  1011  0109                     	;# 
  1012  010C                     	;# 
  1013  010C                     	;# 
  1014  010D                     	;# 
  1015  010E                     	;# 
  1016  010F                     	;# 
  1017  0185                     	;# 
  1018  0187                     	;# 
  1019  0188                     	;# 
  1020  0189                     	;# 
  1021  018C                     	;# 
  1022  018D                     	;# 
  1023  0000                     	;# 
  1024  0001                     	;# 
  1025  0002                     	;# 
  1026  0003                     	;# 
  1027  0004                     	;# 
  1028  0005                     	;# 
  1029  0006                     	;# 
  1030  0007                     	;# 
  1031  0009                     	;# 
  1032  000A                     	;# 
  1033  000B                     	;# 
  1034  000C                     	;# 
  1035  000D                     	;# 
  1036  000E                     	;# 
  1037  000E                     	;# 
  1038  000F                     	;# 
  1039  0010                     	;# 
  1040  0011                     	;# 
  1041  0012                     	;# 
  1042  0013                     	;# 
  1043  0014                     	;# 
  1044  0015                     	;# 
  1045  0015                     	;# 
  1046  0016                     	;# 
  1047  0017                     	;# 
  1048  0018                     	;# 
  1049  0019                     	;# 
  1050  001A                     	;# 
  1051  001B                     	;# 
  1052  001B                     	;# 
  1053  001C                     	;# 
  1054  001D                     	;# 
  1055  001E                     	;# 
  1056  001F                     	;# 
  1057  0081                     	;# 
  1058  0085                     	;# 
  1059  0086                     	;# 
  1060  0087                     	;# 
  1061  0089                     	;# 
  1062  008C                     	;# 
  1063  008D                     	;# 
  1064  008E                     	;# 
  1065  008F                     	;# 
  1066  0090                     	;# 
  1067  0091                     	;# 
  1068  0092                     	;# 
  1069  0093                     	;# 
  1070  0093                     	;# 
  1071  0093                     	;# 
  1072  0094                     	;# 
  1073  0095                     	;# 
  1074  0096                     	;# 
  1075  0097                     	;# 
  1076  0098                     	;# 
  1077  0099                     	;# 
  1078  009A                     	;# 
  1079  009B                     	;# 
  1080  009C                     	;# 
  1081  009D                     	;# 
  1082  009E                     	;# 
  1083  009F                     	;# 
  1084  0105                     	;# 
  1085  0107                     	;# 
  1086  0108                     	;# 
  1087  0109                     	;# 
  1088  010C                     	;# 
  1089  010C                     	;# 
  1090  010D                     	;# 
  1091  010E                     	;# 
  1092  010F                     	;# 
  1093  0185                     	;# 
  1094  0187                     	;# 
  1095  0188                     	;# 
  1096  0189                     	;# 
  1097  018C                     	;# 
  1098  018D                     	;# 
  1099  0000                     	;# 
  1100  0001                     	;# 
  1101  0002                     	;# 
  1102  0003                     	;# 
  1103  0004                     	;# 
  1104  0005                     	;# 
  1105  0006                     	;# 
  1106  0007                     	;# 
  1107  0009                     	;# 
  1108  000A                     	;# 
  1109  000B                     	;# 
  1110  000C                     	;# 
  1111  000D                     	;# 
  1112  000E                     	;# 
  1113  000E                     	;# 
  1114  000F                     	;# 
  1115  0010                     	;# 
  1116  0011                     	;# 
  1117  0012                     	;# 
  1118  0013                     	;# 
  1119  0014                     	;# 
  1120  0015                     	;# 
  1121  0015                     	;# 
  1122  0016                     	;# 
  1123  0017                     	;# 
  1124  0018                     	;# 
  1125  0019                     	;# 
  1126  001A                     	;# 
  1127  001B                     	;# 
  1128  001B                     	;# 
  1129  001C                     	;# 
  1130  001D                     	;# 
  1131  001E                     	;# 
  1132  001F                     	;# 
  1133  0081                     	;# 
  1134  0085                     	;# 
  1135  0086                     	;# 
  1136  0087                     	;# 
  1137  0089                     	;# 
  1138  008C                     	;# 
  1139  008D                     	;# 
  1140  008E                     	;# 
  1141  008F                     	;# 
  1142  0090                     	;# 
  1143  0091                     	;# 
  1144  0092                     	;# 
  1145  0093                     	;# 
  1146  0093                     	;# 
  1147  0093                     	;# 
  1148  0094                     	;# 
  1149  0095                     	;# 
  1150  0096                     	;# 
  1151  0097                     	;# 
  1152  0098                     	;# 
  1153  0099                     	;# 
  1154  009A                     	;# 
  1155  009B                     	;# 
  1156  009C                     	;# 
  1157  009D                     	;# 
  1158  009E                     	;# 
  1159  009F                     	;# 
  1160  0105                     	;# 
  1161  0107                     	;# 
  1162  0108                     	;# 
  1163  0109                     	;# 
  1164  010C                     	;# 
  1165  010C                     	;# 
  1166  010D                     	;# 
  1167  010E                     	;# 
  1168  010F                     	;# 
  1169  0185                     	;# 
  1170  0187                     	;# 
  1171  0188                     	;# 
  1172  0189                     	;# 
  1173  018C                     	;# 
  1174  018D                     	;# 
  1175                           
  1176                           	psect	strings
  1177  1000                     __pstrings:
  1178  1000                     stringtab:
  1179  1000                     __stringtab:
  1180                           
  1181                           ;	String table - string pointers are 1 byte each
  1182  1000  1BFF               	btfsc	btemp+1,7
  1183  1001  280A               	ljmp	stringcode
  1184  1002  1383               	bcf	3,7
  1185  1003  187F               	btfsc	btemp+1,0
  1186  1004  1783               	bsf	3,7
  1187  1005  0800               	movf	0,w
  1188  1006  0A84               	incf	4,f
  1189  1007  1903               	skipnz
  1190  1008  0AFF               	incf	btemp+1,f
  1191  1009  0008               	return
  1192  100A                     stringcode:
  1193  100A                     stringdir:
  1194  100A  3010               	movlw	high stringdir
  1195  100B  008A               	movwf	10
  1196  100C  0804               	movf	4,w
  1197  100D  0A84               	incf	4,f
  1198  100E  0782               	addwf	2,f
  1199  100F                     __stringbase:
  1200  100F  3400               	retlw	0
  1201  1010                     __end_of__stringtab:
  1202  1010                     _PT100_TRANSLADA:
  1203  1010  3466               	retlw	102
  1204  1011  3466               	retlw	102
  1205  1012  34A6               	retlw	166
  1206  1013  34BF               	retlw	191
  1207  1014                     __end_of_PT100_TRANSLADA:
  1208  1014                     _PT100_CONSTANT:
  1209  1014  3414               	retlw	20
  1210  1015  34AE               	retlw	174
  1211  1016  342B               	retlw	43
  1212  1017  34C1               	retlw	193
  1213  1018                     __end_of_PT100_CONSTANT:
  1214  1018                     _RESISTOR_ROOM_TEMP:
  1215                           
  1216                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;;./ntc10k.h: 19: const double RESISTOR_ROOM_TEMP = 10000.0;
  1217  1018  3400               	retlw	0
  1218  1019  3440               	retlw	64
  1219  101A  341C               	retlw	28
  1220  101B  3446               	retlw	70
  1221  101C                     __end_of_RESISTOR_ROOM_TEMP:
  1222  101C                     _ROOM_TEMP:
  1223                           
  1224                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;
  1225  101C  3466               	retlw	102
  1226  101D  3486               	retlw	134
  1227  101E  3496               	retlw	150
  1228  101F  3443               	retlw	67
  1229  1020                     __end_of_ROOM_TEMP:
  1230  1020                     _MAX_ADC:
  1231                           
  1232                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;
  1233  1020  3400               	retlw	0
  1234  1021  34C0               	retlw	192
  1235  1022  347F               	retlw	127
  1236  1023  3444               	retlw	68
  1237  1024                     __end_of_MAX_ADC:
  1238  1024                     log@coeff:
  1239  1024  3400               	retlw	0
  1240  1025  3400               	retlw	0
  1241  1026  3400               	retlw	0
  1242  1027  3400               	retlw	0
  1243  1028  34C4               	retlw	196
  1244  1029  34FF               	retlw	255
  1245  102A  347F               	retlw	127
  1246  102B  343F               	retlw	63
  1247  102C  3480               	retlw	128
  1248  102D  34EF               	retlw	239
  1249  102E  34FF               	retlw	255
  1250  102F  34BE               	retlw	190
  1251  1030  3490               	retlw	144
  1252  1031  34E1               	retlw	225
  1253  1032  34A9               	retlw	169
  1254  1033  343E               	retlw	62
  1255  1034  34EC               	retlw	236
  1256  1035  3482               	retlw	130
  1257  1036  3476               	retlw	118
  1258  1037  34BE               	retlw	190
  1259  1038  3482               	retlw	130
  1260  1039  34AD               	retlw	173
  1261  103A  342B               	retlw	43
  1262  103B  343E               	retlw	62
  1263  103C  340E               	retlw	14
  1264  103D  343C               	retlw	60
  1265  103E  34C3               	retlw	195
  1266  103F  34BD               	retlw	189
  1267  1040  3487               	retlw	135
  1268  1041  34D1               	retlw	209
  1269  1042  3413               	retlw	19
  1270  1043  343D               	retlw	61
  1271  1044  3441               	retlw	65
  1272  1045  3478               	retlw	120
  1273  1046  34D3               	retlw	211
  1274  1047  34BB               	retlw	187
  1275  1048                     __end_oflog@coeff:
  1276  1048                     _BETA:
  1277                           
  1278                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1279  1048  3400               	retlw	0
  1280  1049  3460               	retlw	96
  1281  104A  3478               	retlw	120
  1282  104B  3445               	retlw	69
  1283  104C                     __end_of_BETA:
  1284  104C                     _BALANCE_RESISTOR:
  1285                           
  1286                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1287  104C  3400               	retlw	0
  1288  104D  3440               	retlw	64
  1289  104E  341C               	retlw	28
  1290  104F  3446               	retlw	70
  1291  1050                     __end_of_BALANCE_RESISTOR:
  1292  0019                     _TXREG	set	25
  1293  0018                     _RCSTAbits	set	24
  1294  001A                     _RCREG	set	26
  1295  000E                     _TMR1L	set	14
  1296  000F                     _TMR1H	set	15
  1297  000C                     _PIR1bits	set	12
  1298  001E                     _ADRESH	set	30
  1299  001F                     _ADCON0bits	set	31
  1300  0005                     _PORTAbits	set	5
  1301  0007                     _PORTCbits	set	7
  1302  0010                     _T1CON	set	16
  1303  0006                     _PORTBbits	set	6
  1304  0009                     _PORTE	set	9
  1305  0007                     _PORTC	set	7
  1306  0005                     _PORTA	set	5
  1307  0013                     _SSPBUF	set	19
  1308  000B                     _INTCONbits	set	11
  1309  0014                     _SSPCON	set	20
  1310  0006                     _PORTB	set	6
  1311  00C4                     _CREN	set	196
  1312  0081                     _TMR1CS	set	129
  1313  0085                     _T1CKPS1	set	133
  1314  0084                     _T1CKPS0	set	132
  1315  008C                     _PIE1bits	set	140
  1316  0099                     _SPBRG	set	153
  1317  0098                     _TXSTAbits	set	152
  1318  009E                     _ADRESL	set	158
  1319  009F                     _ADCON1	set	159
  1320  009F                     _ADCON1bits	set	159
  1321  0095                     _WPUB	set	149
  1322  0081                     _OPTION_REGbits	set	129
  1323  0089                     _TRISE	set	137
  1324  0087                     _TRISC	set	135
  1325  0086                     _TRISB	set	134
  1326  0085                     _TRISA	set	133
  1327  008F                     _OSCCONbits	set	143
  1328  0091                     _SSPCON2bits	set	145
  1329  0094                     _SSPSTAT	set	148
  1330  0093                     _SSPADD	set	147
  1331  0091                     _SSPCON2	set	145
  1332  043F                     _TRISC7	set	1087
  1333  043E                     _TRISC6	set	1086
  1334  0460                     _TMR1IE	set	1120
  1335  043C                     _TRISC4	set	1084
  1336  043B                     _TRISC3	set	1083
  1337  010C                     _EEDATA	set	268
  1338  010D                     _EEADR	set	269
  1339  0187                     _BAUDCTLbits	set	391
  1340  018D                     _EECON2	set	397
  1341  018C                     _EECON1bits	set	396
  1342  0189                     _ANSELH	set	393
  1343  0188                     _ANSEL	set	392
  1344  1050                     STR_1:
  1345  1050  3431               	retlw	49	;'1'
  1346  1051  342E               	retlw	46	;'.'
  1347  1052  3430               	retlw	48	;'0'
  1348  1053  342E               	retlw	46	;'.'
  1349  1054  3432               	retlw	50	;'2'
  1350  1055  3438               	retlw	56	;'8'
  1351  1056  345F               	retlw	95	;'_'
  1352  1057  3462               	retlw	98	;'b'
  1353  1058  3465               	retlw	101	;'e'
  1354  1059  3474               	retlw	116	;'t'
  1355  105A  3461               	retlw	97	;'a'
  1356  105B  345F               	retlw	95	;'_'
  1357  105C  3476               	retlw	118	;'v'
  1358  105D  3461               	retlw	97	;'a'
  1359  105E  3463               	retlw	99	;'c'
  1360  105F  3463               	retlw	99	;'c'
  1361  1060  3475               	retlw	117	;'u'
  1362  1061  346D               	retlw	109	;'m'
  1363  1062  3400               	retlw	0
  1364  1063                     STR_2:
  1365  1063  344F               	retlw	79	;'O'
  1366  1064  344B               	retlw	75	;'K'
  1367  1065  3400               	retlw	0
  1368                           
  1369                           	psect	cinit
  1370  0015                     start_initialization:	
  1371                           ; #config settings
  1372                           
  1373  0015                     __initialization:
  1374                           
  1375                           ; Clear objects allocated to COMMON
  1376  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  1377  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1378  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1379  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1380  0019  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1381  001A  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  1382                           
  1383                           ; Clear objects allocated to BANK1
  1384  001B  1383               	bcf	3,7	;select IRP bank0
  1385  001C  30C9               	movlw	low __pbssBANK1
  1386  001D  0084               	movwf	4
  1387  001E  30E5               	movlw	low (__pbssBANK1+28)
  1388  001F  160A  158A  2101  120A  118A  	fcall	clear_ram0
  1389                           
  1390                           ; Clear objects allocated to BANK3
  1391  0024  1783               	bsf	3,7	;select IRP bank2
  1392  0025  3090               	movlw	low __pbssBANK3
  1393  0026  0084               	movwf	4
  1394  0027  30EB               	movlw	low (__pbssBANK3+91)
  1395  0028  160A  158A  2101  120A  118A  	fcall	clear_ram0
  1396                           
  1397                           ; Clear objects allocated to BANK2
  1398  002D  3010               	movlw	low __pbssBANK2
  1399  002E  0084               	movwf	4
  1400  002F  3044               	movlw	low (__pbssBANK2+52)
  1401  0030  160A  158A  2101   	fcall	clear_ram0
  1402  0033                     end_of_initialization:	
  1403                           ;End of C runtime variable initialization code
  1404                           
  1405  0033                     __end_of__initialization:
  1406  0033  0183               	clrf	3
  1407  0034  120A  158A  286D   	ljmp	_main	;jump to C main() function
  1408                           
  1409                           	psect	bssCOMMON
  1410  0078                     __pbssCOMMON:
  1411  0078                     _Delay_Led_Tmr0:
  1412  0078                     	ds	2
  1413  007A                     _minuto:
  1414  007A                     	ds	1
  1415  007B                     _statuspower_memo:
  1416  007B                     	ds	1
  1417  007C                     _hora:
  1418  007C                     	ds	1
  1419  007D                     _segundo:
  1420  007D                     	ds	1
  1421                           
  1422                           	psect	bssBANK1
  1423  00C9                     __pbssBANK1:
  1424  00C9                     _Tensao1:
  1425  00C9                     	ds	4
  1426  00CD                     _Vaccum0:
  1427  00CD                     	ds	4
  1428  00D1                     _errno:
  1429  00D1                     	ds	2
  1430  00D3                     _tempodecorrido:
  1431  00D3                     	ds	2
  1432  00D5                     _count:
  1433  00D5                     	ds	2
  1434  00D7                     _header:
  1435  00D7                     	ds	2
  1436  00D9                     _milisegundo:
  1437  00D9                     	ds	2
  1438  00DB                     _Delay_Led_Usart:
  1439  00DB                     	ds	2
  1440  00DD                     _Delay_Led_Memory:
  1441  00DD                     	ds	2
  1442  00DF                     _pointer:
  1443  00DF                     	ds	1
  1444  00E0                     _destino:
  1445  00E0                     	ds	1
  1446  00E1                     _Board_Number:
  1447  00E1                     	ds	1
  1448  00E2                     _canal:
  1449  00E2                     	ds	1
  1450  00E3                     _statuspower:
  1451  00E3                     	ds	1
  1452  00E4                     _generic_status:
  1453  00E4                     	ds	1
  1454                           
  1455                           	psect	bssBANK3
  1456  0190                     __pbssBANK3:
  1457  0190                     _usart_protocol:
  1458  0190                     	ds	58
  1459  01CA                     _buffer:
  1460  01CA                     	ds	33
  1461                           
  1462                           	psect	bssBANK2
  1463  0110                     __pbssBANK2:
  1464  0110                     _usart_buffer:
  1465  0110                     	ds	52
  1466                           
  1467                           	psect	clrtext
  1468  1901                     clear_ram0:	
  1469                           ;	Called with FSR containing the base address, and
  1470                           ;	W with the last address+1
  1471                           
  1472  1901  0064               	clrwdt	;clear the watchdog before getting into this loop
  1473  1902                     clrloop0:
  1474  1902  0180               	clrf	0	;clear RAM location pointed to by FSR
  1475  1903  0A84               	incf	4,f	;increment pointer
  1476  1904  0604               	xorwf	4,w	;XOR with final address
  1477  1905  1903               	btfsc	3,2	;have we reached the end yet?
  1478  1906  3400               	retlw	0	;all done for this memory range, return
  1479  1907  0604               	xorwf	4,w	;XOR again to restore value
  1480  1908  2902               	goto	clrloop0	;do the next byte
  1481                           
  1482                           	psect	cstackBANK1
  1483  00A0                     __pcstackBANK1:
  1484  00A0                     ?_USART_put_int:
  1485  00A0                     ?_EEPROM_24C1025_Write_Int:	
  1486                           ; 1 bytes @ 0x0
  1487                           
  1488  00A0                     USART_put_int@value:	
  1489                           ; 1 bytes @ 0x0
  1490                           
  1491  00A0                     EEPROM_24C1025_Write_Int@mem_add:	
  1492                           ; 2 bytes @ 0x0
  1493                           
  1494  00A0                     _MediaPlacaVaccum$2372:	
  1495                           ; 4 bytes @ 0x0
  1496                           
  1497                           
  1498                           ; 4 bytes @ 0x0
  1499  00A0                     	ds	2
  1500  00A2                     ??_USART_put_int:
  1501                           
  1502                           ; 1 bytes @ 0x2
  1503  00A2                     	ds	1
  1504  00A3                     USART_put_int@dado:
  1505                           
  1506                           ; 1 bytes @ 0x3
  1507  00A3                     	ds	1
  1508  00A4                     ?_PROCULUS_Control_Register_Write:
  1509  00A4                     ?_PROCULUS_VP_Write:	
  1510                           ; 1 bytes @ 0x4
  1511                           
  1512  00A4                     MediaPlacaVaccum@canal:	
  1513                           ; 1 bytes @ 0x4
  1514                           
  1515  00A4                     PROCULUS_Control_Register_Write@size:	
  1516                           ; 1 bytes @ 0x4
  1517                           
  1518  00A4                     EEPROM_24C1025_Write_Int@data:	
  1519                           ; 1 bytes @ 0x4
  1520                           
  1521  00A4                     PROCULUS_VP_Write@vp:	
  1522                           ; 2 bytes @ 0x4
  1523                           
  1524                           
  1525                           ; 2 bytes @ 0x4
  1526  00A4                     	ds	1
  1527  00A5                     ??_PROCULUS_Control_Register_Write:
  1528  00A5                     MediaPlacaVaccum@i:	
  1529                           ; 1 bytes @ 0x5
  1530                           
  1531                           
  1532                           ; 2 bytes @ 0x5
  1533  00A5                     	ds	1
  1534  00A6                     ??_EEPROM_24C1025_Write_Int:
  1535  00A6                     PROCULUS_Control_Register_Write@vetor:	
  1536                           ; 1 bytes @ 0x6
  1537                           
  1538  00A6                     PROCULUS_VP_Write@vetor:	
  1539                           ; 1 bytes @ 0x6
  1540                           
  1541                           
  1542                           ; 2 bytes @ 0x6
  1543  00A6                     	ds	1
  1544  00A7                     EEPROM_24C1025_Write_Int@chip_add:
  1545  00A7                     PROCULUS_Control_Register_Write@i:	
  1546                           ; 1 bytes @ 0x7
  1547                           
  1548  00A7                     MediaPlacaVaccum@Temp:	
  1549                           ; 1 bytes @ 0x7
  1550                           
  1551                           
  1552                           ; 4 bytes @ 0x7
  1553  00A7                     	ds	1
  1554  00A8                     ?_PROCULUS_Show_Screen:
  1555  00A8                     ?_PROCULUS_Buzzer:	
  1556                           ; 1 bytes @ 0x8
  1557                           
  1558  00A8                     PROCULUS_VP_Write@size:	
  1559                           ; 1 bytes @ 0x8
  1560                           
  1561  00A8                     EEPROM_24C1025_Write_Int@local:	
  1562                           ; 1 bytes @ 0x8
  1563                           
  1564  00A8                     PROCULUS_Buzzer@time_ms_x_10:	
  1565                           ; 2 bytes @ 0x8
  1566                           
  1567  00A8                     PROCULUS_Show_Screen@screen:	
  1568                           ; 2 bytes @ 0x8
  1569                           
  1570                           
  1571                           ; 2 bytes @ 0x8
  1572  00A8                     	ds	1
  1573  00A9                     ??_PROCULUS_VP_Write:
  1574                           
  1575                           ; 1 bytes @ 0x9
  1576  00A9                     	ds	1
  1577  00AA                     ?_Save_Log:
  1578  00AA                     ??_PROCULUS_Show_Screen:	
  1579                           ; 1 bytes @ 0xA
  1580                           
  1581  00AA                     ??_PROCULUS_Buzzer:	
  1582                           ; 1 bytes @ 0xA
  1583                           
  1584  00AA                     ?_EEPROM_24C1025_Fill_All:	
  1585                           ; 1 bytes @ 0xA
  1586                           
  1587  00AA                     EEPROM_24C1025_Fill_All@value:	
  1588                           ; 1 bytes @ 0xA
  1589                           
  1590  00AA                     Save_Log@add_datalog:	
  1591                           ; 2 bytes @ 0xA
  1592                           
  1593                           
  1594                           ; 4 bytes @ 0xA
  1595  00AA                     	ds	1
  1596  00AB                     PROCULUS_VP_Write@i:
  1597  00AB                     PROCULUS_Buzzer@vetor:	
  1598                           ; 1 bytes @ 0xB
  1599                           
  1600  00AB                     PROCULUS_Show_Screen@vetor:	
  1601                           ; 2 bytes @ 0xB
  1602                           
  1603                           
  1604                           ; 3 bytes @ 0xB
  1605  00AB                     	ds	1
  1606  00AC                     ?_PROCULUS_VP_Write_String:
  1607  00AC                     EEPROM_24C1025_Fill_All@chip_add:	
  1608                           ; 1 bytes @ 0xC
  1609                           
  1610  00AC                     PROCULUS_VP_Write_String@vp:	
  1611                           ; 1 bytes @ 0xC
  1612                           
  1613                           
  1614                           ; 2 bytes @ 0xC
  1615  00AC                     	ds	1
  1616  00AD                     EEPROM_24C1025_Fill_All@mem_add:
  1617                           
  1618                           ; 4 bytes @ 0xD
  1619  00AD                     	ds	1
  1620  00AE                     PROCULUS_VP_Write_String@text:
  1621                           
  1622                           ; 1 bytes @ 0xE
  1623  00AE                     	ds	1
  1624  00AF                     ??_PROCULUS_VP_Write_String:
  1625                           
  1626                           ; 1 bytes @ 0xF
  1627  00AF                     	ds	2
  1628  00B1                     ??_Decodify_Command:
  1629                           
  1630                           ; 1 bytes @ 0x11
  1631  00B1                     	ds	4
  1632  00B5                     Decodify_Command@dados:
  1633                           
  1634                           ; 2 bytes @ 0x15
  1635  00B5                     	ds	2
  1636  00B7                     Decodify_Command@add:
  1637                           
  1638                           ; 1 bytes @ 0x17
  1639  00B7                     	ds	1
  1640  00B8                     Decodify_Command@sizedata:
  1641                           
  1642                           ; 1 bytes @ 0x18
  1643  00B8                     	ds	1
  1644  00B9                     Decodify_Command@tempint:
  1645                           
  1646                           ; 2 bytes @ 0x19
  1647  00B9                     	ds	2
  1648  00BB                     Decodify_Command@OutPut:
  1649                           
  1650                           ; 4 bytes @ 0x1B
  1651  00BB                     	ds	4
  1652  00BF                     Decodify_Command@tempchar:
  1653                           
  1654                           ; 1 bytes @ 0x1F
  1655  00BF                     	ds	1
  1656  00C0                     Decodify_Command@add_24LCxxxx:
  1657                           
  1658                           ; 4 bytes @ 0x20
  1659  00C0                     	ds	4
  1660  00C4                     ??_main:
  1661                           
  1662                           ; 1 bytes @ 0x24
  1663  00C4                     	ds	3
  1664  00C7                     main@reset:
  1665                           
  1666                           ; 2 bytes @ 0x27
  1667  00C7                     	ds	2
  1668                           
  1669                           	psect	cstackCOMMON
  1670  0070                     __pcstackCOMMON:
  1671  0070                     ?_I2C_Master_Start:
  1672  0070                     ?_I2C_Master_Stop:	
  1673                           ; 1 bytes @ 0x0
  1674                           
  1675  0070                     ?_I2C_Master_RepeatedStart:	
  1676                           ; 1 bytes @ 0x0
  1677                           
  1678  0070                     ?_USART_putc:	
  1679                           ; 1 bytes @ 0x0
  1680                           
  1681  0070                     ?_ADC_init:	
  1682                           ; 1 bytes @ 0x0
  1683                           
  1684  0070                     ?_MediaPlacaVaccum:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687  0070                     ?_Decodify_Command:	
  1688                           ; 1 bytes @ 0x0
  1689                           
  1690  0070                     ?_USART_to_Protocol:	
  1691                           ; 1 bytes @ 0x0
  1692                           
  1693  0070                     ?_Send_To_MB:	
  1694                           ; 1 bytes @ 0x0
  1695                           
  1696  0070                     ?_Send_Reply_OK:	
  1697                           ; 1 bytes @ 0x0
  1698                           
  1699  0070                     ?_EEPROM_Read_Byte:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702  0070                     ?_Package_Usart_is_for_me:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705  0070                     ?_I2C_Master_Wait:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708  0070                     ?_main:	
  1709                           ; 1 bytes @ 0x0
  1710                           
  1711  0070                     ?_isr:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714  0070                     ??_isr:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717                           
  1718                           ; 1 bytes @ 0x0
  1719  0070                     	ds	6
  1720  0076                     isr@tempo:
  1721                           
  1722                           ; 2 bytes @ 0x6
  1723  0076                     	ds	2
  1724                           
  1725                           	psect	cstackBANK0
  1726  0020                     __pcstackBANK0:
  1727  0020                     ?___flge:
  1728  0020                     ?_my_delay_ms_WDT:	
  1729                           ; 1 bit 
  1730                           
  1731  0020                     ??_USART_putc:	
  1732                           ; 1 bytes @ 0x0
  1733                           
  1734  0020                     ??_ADC_init:	
  1735                           ; 1 bytes @ 0x0
  1736                           
  1737  0020                     ?_USART_init:	
  1738                           ; 1 bytes @ 0x0
  1739                           
  1740  0020                     ??_USART_to_Protocol:	
  1741                           ; 1 bytes @ 0x0
  1742                           
  1743  0020                     ?_strcpy:	
  1744                           ; 1 bytes @ 0x0
  1745                           
  1746  0020                     ?_EEPROM_Write_Byte:	
  1747                           ; 1 bytes @ 0x0
  1748                           
  1749  0020                     ??_EEPROM_Read_Byte:	
  1750                           ; 1 bytes @ 0x0
  1751                           
  1752  0020                     ?_my_delay_ms:	
  1753                           ; 1 bytes @ 0x0
  1754                           
  1755  0020                     ??_Package_Usart_is_for_me:	
  1756                           ; 1 bytes @ 0x0
  1757                           
  1758  0020                     ?_PROCULUS_Delay:	
  1759                           ; 1 bytes @ 0x0
  1760                           
  1761  0020                     ??_I2C_Master_Wait:	
  1762                           ; 1 bytes @ 0x0
  1763                           
  1764  0020                     ?_strlen:	
  1765                           ; 1 bytes @ 0x0
  1766                           
  1767  0020                     ?_captura:	
  1768                           ; 2 bytes @ 0x0
  1769                           
  1770  0020                     ?__Umul8_16:	
  1771                           ; 2 bytes @ 0x0
  1772                           
  1773  0020                     ?___lwdiv:	
  1774                           ; 2 bytes @ 0x0
  1775                           
  1776  0020                     ?___lldiv:	
  1777                           ; 2 bytes @ 0x0
  1778                           
  1779  0020                     ?___xxtofl:	
  1780                           ; 4 bytes @ 0x0
  1781                           
  1782  0020                     EEPROM_Write_Byte@dado:	
  1783                           ; 4 bytes @ 0x0
  1784                           
  1785  0020                     Package_Usart_is_for_me@retorno:	
  1786                           ; 1 bytes @ 0x0
  1787                           
  1788  0020                     USART_putc@value:	
  1789                           ; 1 bytes @ 0x0
  1790                           
  1791  0020                     __Umul8_16@multiplicand:	
  1792                           ; 1 bytes @ 0x0
  1793                           
  1794  0020                     strcpy@from:	
  1795                           ; 1 bytes @ 0x0
  1796                           
  1797  0020                     PROCULUS_Delay@tempo_ms:	
  1798                           ; 1 bytes @ 0x0
  1799                           
  1800  0020                     ___lwdiv@divisor:	
  1801                           ; 2 bytes @ 0x0
  1802                           
  1803  0020                     my_delay_ms@time:	
  1804                           ; 2 bytes @ 0x0
  1805                           
  1806  0020                     my_delay_ms_WDT@time:	
  1807                           ; 4 bytes @ 0x0
  1808                           
  1809  0020                     USART_init@baudrate:	
  1810                           ; 4 bytes @ 0x0
  1811                           
  1812  0020                     ___lldiv@divisor:	
  1813                           ; 4 bytes @ 0x0
  1814                           
  1815  0020                     ___flge@ff1:	
  1816                           ; 4 bytes @ 0x0
  1817                           
  1818  0020                     ___xxtofl@val:	
  1819                           ; 4 bytes @ 0x0
  1820                           
  1821                           
  1822                           ; 4 bytes @ 0x0
  1823  0020                     	ds	1
  1824  0021                     ??_strcpy:
  1825  0021                     ??_Send_To_MB:	
  1826                           ; 1 bytes @ 0x1
  1827                           
  1828  0021                     ?_USART_put_string:	
  1829                           ; 1 bytes @ 0x1
  1830                           
  1831  0021                     ??_EEPROM_Write_Byte:	
  1832                           ; 1 bytes @ 0x1
  1833                           
  1834  0021                     Send_To_MB@size:	
  1835                           ; 1 bytes @ 0x1
  1836                           
  1837  0021                     USART_put_string@vetor:	
  1838                           ; 1 bytes @ 0x1
  1839                           
  1840                           
  1841                           ; 2 bytes @ 0x1
  1842  0021                     	ds	1
  1843  0022                     ??_strlen:
  1844  0022                     ??_captura:	
  1845                           ; 1 bytes @ 0x2
  1846                           
  1847  0022                     ??_PROCULUS_Delay:	
  1848                           ; 1 bytes @ 0x2
  1849                           
  1850  0022                     ??__Umul8_16:	
  1851                           ; 1 bytes @ 0x2
  1852                           
  1853  0022                     I2C_Master_Wait@tempo:	
  1854                           ; 1 bytes @ 0x2
  1855                           
  1856  0022                     EEPROM_Read_Byte@addr:	
  1857                           ; 1 bytes @ 0x2
  1858                           
  1859  0022                     strcpy@to:	
  1860                           ; 1 bytes @ 0x2
  1861                           
  1862  0022                     USART_to_Protocol@i:	
  1863                           ; 1 bytes @ 0x2
  1864                           
  1865  0022                     ___lwdiv@dividend:	
  1866                           ; 2 bytes @ 0x2
  1867                           
  1868                           
  1869                           ; 2 bytes @ 0x2
  1870  0022                     	ds	1
  1871  0023                     ??_I2C_Master_Start:
  1872  0023                     ?_I2C_Master_Write:	
  1873                           ; 1 bytes @ 0x3
  1874                           
  1875  0023                     ??_I2C_Master_Stop:	
  1876                           ; 1 bytes @ 0x3
  1877                           
  1878  0023                     ??_I2C_Master_RepeatedStart:	
  1879                           ; 1 bytes @ 0x3
  1880                           
  1881  0023                     ??_USART_put_string:	
  1882                           ; 1 bytes @ 0x3
  1883                           
  1884  0023                     ?_EEPROM_Read_String:	
  1885                           ; 1 bytes @ 0x3
  1886                           
  1887  0023                     ?_I2C_Master_Read:	
  1888                           ; 1 bytes @ 0x3
  1889                           
  1890  0023                     ?_EEPROM_Read_Integer:	
  1891                           ; 2 bytes @ 0x3
  1892                           
  1893  0023                     EEPROM_Write_Byte@addr:	
  1894                           ; 2 bytes @ 0x3
  1895                           
  1896  0023                     EEPROM_Read_String@dado:	
  1897                           ; 1 bytes @ 0x3
  1898                           
  1899  0023                     strcpy@cp:	
  1900                           ; 1 bytes @ 0x3
  1901                           
  1902  0023                     strlen@cp:	
  1903                           ; 1 bytes @ 0x3
  1904                           
  1905  0023                     I2C_Master_Write@d:	
  1906                           ; 1 bytes @ 0x3
  1907                           
  1908  0023                     I2C_Master_Read@a:	
  1909                           ; 2 bytes @ 0x3
  1910                           
  1911  0023                     USART_put_string@ptr:	
  1912                           ; 2 bytes @ 0x3
  1913                           
  1914                           
  1915                           ; 2 bytes @ 0x3
  1916  0023                     	ds	1
  1917  0024                     ??_my_delay_ms_WDT:
  1918  0024                     ??_USART_init:	
  1919                           ; 1 bytes @ 0x4
  1920                           
  1921  0024                     ??_EEPROM_Read_String:	
  1922                           ; 1 bytes @ 0x4
  1923                           
  1924  0024                     ??_my_delay_ms:	
  1925                           ; 1 bytes @ 0x4
  1926                           
  1927  0024                     ??___lwdiv:	
  1928                           ; 1 bytes @ 0x4
  1929                           
  1930  0024                     ??___xxtofl:	
  1931                           ; 1 bytes @ 0x4
  1932                           
  1933  0024                     EEPROM_Write_Byte@last_GIE:	
  1934                           ; 1 bytes @ 0x4
  1935                           
  1936  0024                     USART_to_Protocol@usart_protocol:	
  1937                           ; 1 bytes @ 0x4
  1938                           
  1939  0024                     strlen@s:	
  1940                           ; 1 bytes @ 0x4
  1941                           
  1942  0024                     PROCULUS_Delay@i:	
  1943                           ; 1 bytes @ 0x4
  1944                           
  1945  0024                     __Umul8_16@product:	
  1946                           ; 2 bytes @ 0x4
  1947                           
  1948  0024                     ___lldiv@dividend:	
  1949                           ; 2 bytes @ 0x4
  1950                           
  1951  0024                     ___flge@ff2:	
  1952                           ; 4 bytes @ 0x4
  1953                           
  1954                           
  1955                           ; 4 bytes @ 0x4
  1956  0024                     	ds	1
  1957  0025                     ??_I2C_Master_Write:
  1958  0025                     ??_I2C_Master_Read:	
  1959                           ; 1 bytes @ 0x5
  1960                           
  1961  0025                     ??_EEPROM_Read_Integer:	
  1962                           ; 1 bytes @ 0x5
  1963                           
  1964  0025                     ?_EEPROM_Write_Integer:	
  1965                           ; 1 bytes @ 0x5
  1966                           
  1967  0025                     ??_Send_Reply_OK:	
  1968                           ; 1 bytes @ 0x5
  1969                           
  1970  0025                     ?_EEPROM_Write_String:	
  1971                           ; 1 bytes @ 0x5
  1972                           
  1973  0025                     EEPROM_Write_String@dado:	
  1974                           ; 1 bytes @ 0x5
  1975                           
  1976  0025                     EEPROM_Read_String@addr:	
  1977                           ; 1 bytes @ 0x5
  1978                           
  1979  0025                     USART_init@i:	
  1980                           ; 1 bytes @ 0x5
  1981                           
  1982  0025                     EEPROM_Write_Integer@dado:	
  1983                           ; 1 bytes @ 0x5
  1984                           
  1985  0025                     ___lwdiv@quotient:	
  1986                           ; 2 bytes @ 0x5
  1987                           
  1988                           
  1989                           ; 2 bytes @ 0x5
  1990  0025                     	ds	1
  1991  0026                     ??_EEPROM_Write_String:
  1992  0026                     EEPROM_Read_Integer@addr:	
  1993                           ; 1 bytes @ 0x6
  1994                           
  1995  0026                     EEPROM_Read_String@c:	
  1996                           ; 1 bytes @ 0x6
  1997                           
  1998  0026                     __Umul8_16@word_mpld:	
  1999                           ; 1 bytes @ 0x6
  2000                           
  2001  0026                     my_delay_ms@i:	
  2002                           ; 2 bytes @ 0x6
  2003                           
  2004  0026                     my_delay_ms_WDT@i:	
  2005                           ; 4 bytes @ 0x6
  2006                           
  2007                           
  2008                           ; 4 bytes @ 0x6
  2009  0026                     	ds	1
  2010  0027                     ??_EEPROM_Write_Integer:
  2011  0027                     EEPROM_Read_Integer@ptr:	
  2012                           ; 1 bytes @ 0x7
  2013                           
  2014  0027                     EEPROM_Write_String@addr:	
  2015                           ; 1 bytes @ 0x7
  2016                           
  2017  0027                     ___lwdiv@counter:	
  2018                           ; 1 bytes @ 0x7
  2019                           
  2020  0027                     I2C_Master_Read@temp:	
  2021                           ; 1 bytes @ 0x7
  2022                           
  2023                           
  2024                           ; 2 bytes @ 0x7
  2025  0027                     	ds	1
  2026  0028                     ??___lldiv:
  2027  0028                     ??___flge:	
  2028                           ; 1 bytes @ 0x8
  2029                           
  2030  0028                     __Umul8_16@multiplier:	
  2031                           ; 1 bytes @ 0x8
  2032                           
  2033  0028                     ___xxtofl@sign:	
  2034                           ; 1 bytes @ 0x8
  2035                           
  2036  0028                     EEPROM_Read_Integer@result:	
  2037                           ; 1 bytes @ 0x8
  2038                           
  2039                           
  2040                           ; 2 bytes @ 0x8
  2041  0028                     	ds	1
  2042  0029                     ?_EEPROM_24C1025_Read_Buffer_USART:
  2043  0029                     ?_EEPROM_24C1025_Read_Str:	
  2044                           ; 1 bytes @ 0x9
  2045                           
  2046  0029                     EEPROM_Write_Integer@ptr:	
  2047                           ; 1 bytes @ 0x9
  2048                           
  2049  0029                     ___xxtofl@exp:	
  2050                           ; 1 bytes @ 0x9
  2051                           
  2052  0029                     EEPROM_24C1025_Read_Buffer_USART@mem_add:	
  2053                           ; 1 bytes @ 0x9
  2054                           
  2055  0029                     EEPROM_24C1025_Read_Str@mem_add:	
  2056                           ; 4 bytes @ 0x9
  2057                           
  2058  0029                     ___lldiv@quotient:	
  2059                           ; 4 bytes @ 0x9
  2060                           
  2061                           
  2062                           ; 4 bytes @ 0x9
  2063  0029                     	ds	1
  2064  002A                     ?_EEPROM_24C1025_Write_Buffer:
  2065  002A                     ?_EEPROM_24C1025_Read_Buffer:	
  2066                           ; 1 bytes @ 0xA
  2067                           
  2068  002A                     ?_EEPROM_24C1025_Write_Str:	
  2069                           ; 1 bytes @ 0xA
  2070                           
  2071  002A                     EEPROM_Write_Integer@addr:	
  2072                           ; 1 bytes @ 0xA
  2073                           
  2074  002A                     EEPROM_Read_Integer@i:	
  2075                           ; 1 bytes @ 0xA
  2076                           
  2077  002A                     EEPROM_24C1025_Write_Buffer@mem_add:	
  2078                           ; 1 bytes @ 0xA
  2079                           
  2080  002A                     EEPROM_24C1025_Read_Buffer@mem_add:	
  2081                           ; 4 bytes @ 0xA
  2082                           
  2083  002A                     EEPROM_24C1025_Write_Str@mem_add:	
  2084                           ; 4 bytes @ 0xA
  2085                           
  2086  002A                     ___xxtofl@arg:	
  2087                           ; 4 bytes @ 0xA
  2088                           
  2089                           
  2090                           ; 4 bytes @ 0xA
  2091  002A                     	ds	1
  2092  002B                     EEPROM_Write_Integer@i:
  2093                           
  2094                           ; 1 bytes @ 0xB
  2095  002B                     	ds	2
  2096  002D                     EEPROM_24C1025_Read_Buffer_USART@sizedata:
  2097  002D                     EEPROM_24C1025_Read_Str@buffer:	
  2098                           ; 1 bytes @ 0xD
  2099                           
  2100  002D                     ___lldiv@counter:	
  2101                           ; 1 bytes @ 0xD
  2102                           
  2103                           
  2104                           ; 1 bytes @ 0xD
  2105  002D                     	ds	1
  2106  002E                     ??_EEPROM_24C1025_Read_Str:
  2107  002E                     ?_I2C_Master_Init:	
  2108                           ; 1 bytes @ 0xE
  2109                           
  2110  002E                     ?_ADC_Media_10bits:	
  2111                           ; 1 bytes @ 0xE
  2112                           
  2113  002E                     ?___fldiv:	
  2114                           ; 4 bytes @ 0xE
  2115                           
  2116  002E                     EEPROM_24C1025_Write_Buffer@sizedata:	
  2117                           ; 4 bytes @ 0xE
  2118                           
  2119  002E                     EEPROM_24C1025_Read_Buffer@sizedata:	
  2120                           ; 1 bytes @ 0xE
  2121                           
  2122  002E                     EEPROM_24C1025_Read_Buffer_USART@data:	
  2123                           ; 1 bytes @ 0xE
  2124                           
  2125  002E                     EEPROM_24C1025_Write_Str@data:	
  2126                           ; 1 bytes @ 0xE
  2127                           
  2128  002E                     I2C_Master_Init@c:	
  2129                           ; 1 bytes @ 0xE
  2130                           
  2131  002E                     ___fldiv@a:	
  2132                           ; 4 bytes @ 0xE
  2133                           
  2134                           
  2135                           ; 4 bytes @ 0xE
  2136  002E                     	ds	1
  2137  002F                     ??_EEPROM_24C1025_Read_Buffer_USART:
  2138  002F                     ??_EEPROM_24C1025_Write_Str:	
  2139                           ; 1 bytes @ 0xF
  2140                           
  2141  002F                     EEPROM_24C1025_Read_Buffer@data:	
  2142                           ; 1 bytes @ 0xF
  2143                           
  2144  002F                     EEPROM_24C1025_Write_Buffer@data:	
  2145                           ; 1 bytes @ 0xF
  2146                           
  2147                           
  2148                           ; 2 bytes @ 0xF
  2149  002F                     	ds	1
  2150  0030                     ??_EEPROM_24C1025_Read_Buffer:
  2151  0030                     EEPROM_24C1025_Read_Str@cnt:	
  2152                           ; 1 bytes @ 0x10
  2153                           
  2154                           
  2155                           ; 1 bytes @ 0x10
  2156  0030                     	ds	1
  2157  0031                     ??_EEPROM_24C1025_Write_Buffer:
  2158  0031                     EEPROM_24C1025_Read_Buffer_USART@cnt_117:	
  2159                           ; 1 bytes @ 0x11
  2160                           
  2161  0031                     EEPROM_24C1025_Write_Str@chip_add:	
  2162                           ; 1 bytes @ 0x11
  2163                           
  2164  0031                     EEPROM_24C1025_Read_Str@chip_add:	
  2165                           ; 1 bytes @ 0x11
  2166                           
  2167                           
  2168                           ; 1 bytes @ 0x11
  2169  0031                     	ds	1
  2170  0032                     ??_ADC_Media_10bits:
  2171  0032                     ??_I2C_Master_Init:	
  2172                           ; 1 bytes @ 0x12
  2173                           
  2174  0032                     EEPROM_24C1025_Read_Buffer@cnt_108:	
  2175                           ; 1 bytes @ 0x12
  2176                           
  2177  0032                     EEPROM_24C1025_Read_Buffer_USART@chip_add:	
  2178                           ; 1 bytes @ 0x12
  2179                           
  2180  0032                     EEPROM_24C1025_Write_Str@range:	
  2181                           ; 1 bytes @ 0x12
  2182                           
  2183  0032                     EEPROM_24C1025_Read_Str@range:	
  2184                           ; 1 bytes @ 0x12
  2185                           
  2186  0032                     ___fldiv@b:	
  2187                           ; 1 bytes @ 0x12
  2188                           
  2189                           
  2190                           ; 4 bytes @ 0x12
  2191  0032                     	ds	1
  2192  0033                     EEPROM_24C1025_Write_Buffer@count:
  2193  0033                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2194                           ; 1 bytes @ 0x13
  2195                           
  2196  0033                     EEPROM_24C1025_Read_Buffer_USART@range:	
  2197                           ; 1 bytes @ 0x13
  2198                           
  2199  0033                     EEPROM_24C1025_Write_Str@ctrl:	
  2200                           ; 1 bytes @ 0x13
  2201                           
  2202  0033                     EEPROM_24C1025_Read_Str@ctrl:	
  2203                           ; 1 bytes @ 0x13
  2204                           
  2205  0033                     ADC_Media_10bits@canal:	
  2206                           ; 1 bytes @ 0x13
  2207                           
  2208                           
  2209                           ; 1 bytes @ 0x13
  2210  0033                     	ds	1
  2211  0034                     EEPROM_24C1025_Write_Buffer@chip_add:
  2212  0034                     EEPROM_24C1025_Read_Buffer@range:	
  2213                           ; 1 bytes @ 0x14
  2214                           
  2215  0034                     EEPROM_24C1025_Read_Buffer_USART@ctrl:	
  2216                           ; 1 bytes @ 0x14
  2217                           
  2218  0034                     ADC_Media_10bits@value:	
  2219                           ; 1 bytes @ 0x14
  2220                           
  2221                           
  2222                           ; 2 bytes @ 0x14
  2223  0034                     	ds	1
  2224  0035                     EEPROM_24C1025_Write_Buffer@range:
  2225  0035                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2226                           ; 1 bytes @ 0x15
  2227                           
  2228                           
  2229                           ; 1 bytes @ 0x15
  2230  0035                     	ds	1
  2231  0036                     ?_EEPROM_24C1025_Read_Byte:
  2232  0036                     ??___fldiv:	
  2233                           ; 1 bytes @ 0x16
  2234                           
  2235  0036                     ?_EEPROM_24C1025_Read_Int:	
  2236                           ; 1 bytes @ 0x16
  2237                           
  2238  0036                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2239                           ; 2 bytes @ 0x16
  2240                           
  2241  0036                     ADC_Media_10bits@i:	
  2242                           ; 1 bytes @ 0x16
  2243                           
  2244  0036                     EEPROM_24C1025_Read_Byte@mem_add:	
  2245                           ; 1 bytes @ 0x16
  2246                           
  2247  0036                     EEPROM_24C1025_Read_Int@mem_add:	
  2248                           ; 4 bytes @ 0x16
  2249                           
  2250                           
  2251                           ; 4 bytes @ 0x16
  2252  0036                     	ds	1
  2253  0037                     ?_EEPROM_24C1025_Write_Byte:
  2254  0037                     ?___fladd:	
  2255                           ; 1 bytes @ 0x17
  2256                           
  2257  0037                     EEPROM_24C1025_Write_Byte@mem_add:	
  2258                           ; 4 bytes @ 0x17
  2259                           
  2260  0037                     ___fladd@b:	
  2261                           ; 4 bytes @ 0x17
  2262                           
  2263                           
  2264                           ; 4 bytes @ 0x17
  2265  0037                     	ds	3
  2266  003A                     ??_EEPROM_24C1025_Read_Byte:
  2267  003A                     ??_EEPROM_24C1025_Read_Int:	
  2268                           ; 1 bytes @ 0x1A
  2269                           
  2270                           
  2271                           ; 1 bytes @ 0x1A
  2272  003A                     	ds	1
  2273  003B                     EEPROM_24C1025_Write_Byte@data:
  2274  003B                     EEPROM_24C1025_Read_Byte@chip_add:	
  2275                           ; 1 bytes @ 0x1B
  2276                           
  2277  003B                     ___fladd@a:	
  2278                           ; 1 bytes @ 0x1B
  2279                           
  2280  003B                     ___fldiv@rem:	
  2281                           ; 4 bytes @ 0x1B
  2282                           
  2283                           
  2284                           ; 4 bytes @ 0x1B
  2285  003B                     	ds	1
  2286  003C                     ??_EEPROM_24C1025_Write_Byte:
  2287  003C                     EEPROM_24C1025_Write_Byte@chip_add:	
  2288                           ; 1 bytes @ 0x1C
  2289                           
  2290  003C                     EEPROM_24C1025_Read_Byte@data:	
  2291                           ; 1 bytes @ 0x1C
  2292                           
  2293  003C                     EEPROM_24C1025_Read_Int@chip_add:	
  2294                           ; 1 bytes @ 0x1C
  2295                           
  2296                           
  2297                           ; 1 bytes @ 0x1C
  2298  003C                     	ds	1
  2299  003D                     EEPROM_24C1025_Read_Int@data:
  2300                           
  2301                           ; 2 bytes @ 0x1D
  2302  003D                     	ds	2
  2303  003F                     ??___fladd:
  2304  003F                     ___fldiv@sign:	
  2305                           ; 1 bytes @ 0x1F
  2306                           
  2307                           
  2308                           ; 1 bytes @ 0x1F
  2309  003F                     	ds	1
  2310  0040                     ___fldiv@new_exp:
  2311                           
  2312                           ; 2 bytes @ 0x20
  2313  0040                     	ds	2
  2314  0042                     ___fldiv@grs:
  2315                           
  2316                           ; 4 bytes @ 0x22
  2317  0042                     	ds	4
  2318  0046                     ___fldiv@bexp:
  2319                           
  2320                           ; 1 bytes @ 0x26
  2321  0046                     	ds	1
  2322  0047                     ___fladd@signs:
  2323  0047                     ___fldiv@aexp:	
  2324                           ; 1 bytes @ 0x27
  2325                           
  2326                           
  2327                           ; 1 bytes @ 0x27
  2328  0047                     	ds	1
  2329  0048                     ___fladd@aexp:
  2330                           
  2331                           ; 1 bytes @ 0x28
  2332  0048                     	ds	1
  2333  0049                     ___fladd@bexp:
  2334                           
  2335                           ; 1 bytes @ 0x29
  2336  0049                     	ds	1
  2337  004A                     ___fladd@grs:
  2338                           
  2339                           ; 1 bytes @ 0x2A
  2340  004A                     	ds	1
  2341  004B                     ?___flsub:
  2342  004B                     ?___flmul:	
  2343                           ; 4 bytes @ 0x2B
  2344                           
  2345  004B                     ___flsub@a:	
  2346                           ; 4 bytes @ 0x2B
  2347                           
  2348  004B                     ___flmul@b:	
  2349                           ; 4 bytes @ 0x2B
  2350                           
  2351                           
  2352                           ; 4 bytes @ 0x2B
  2353  004B                     	ds	4
  2354  004F                     ___flsub@b:
  2355  004F                     ___flmul@a:	
  2356                           ; 4 bytes @ 0x2F
  2357                           
  2358                           
  2359                           ; 4 bytes @ 0x2F
  2360  004F                     	ds	4
  2361  0053                     ??___flsub:
  2362  0053                     ??___flmul:	
  2363                           ; 1 bytes @ 0x33
  2364                           
  2365                           
  2366                           ; 1 bytes @ 0x33
  2367  0053                     	ds	5
  2368  0058                     ___flmul@sign:
  2369                           
  2370                           ; 1 bytes @ 0x38
  2371  0058                     	ds	1
  2372  0059                     ___flmul@aexp:
  2373                           
  2374                           ; 1 bytes @ 0x39
  2375  0059                     	ds	1
  2376  005A                     ___flmul@grs:
  2377                           
  2378                           ; 4 bytes @ 0x3A
  2379  005A                     	ds	4
  2380  005E                     ___flmul@bexp:
  2381                           
  2382                           ; 1 bytes @ 0x3E
  2383  005E                     	ds	1
  2384  005F                     ___flmul@prod:
  2385                           
  2386                           ; 4 bytes @ 0x3F
  2387  005F                     	ds	4
  2388  0063                     ___flmul@temp:
  2389                           
  2390                           ; 2 bytes @ 0x43
  2391  0063                     	ds	2
  2392  0065                     ??_MediaPlacaVaccum:
  2393  0065                     ?___fltol:	
  2394                           ; 1 bytes @ 0x45
  2395                           
  2396  0065                     ___fltol@f1:	
  2397                           ; 4 bytes @ 0x45
  2398                           
  2399                           
  2400                           ; 4 bytes @ 0x45
  2401  0065                     	ds	4
  2402  0069                     ??___fltol:
  2403                           
  2404                           ; 1 bytes @ 0x49
  2405  0069                     	ds	5
  2406  006E                     ___fltol@sign1:
  2407                           
  2408                           ; 1 bytes @ 0x4E
  2409  006E                     	ds	1
  2410  006F                     ___fltol@exp1:
  2411                           
  2412                           ; 1 bytes @ 0x4F
  2413  006F                     	ds	1
  2414  0070                     ??_Save_Log:
  2415  0070                     ??_EEPROM_24C1025_Fill_All:	
  2416                           ; 1 bytes @ 0x50
  2417                           
  2418                           
  2419                           	psect	maintext
  2420  086D                     __pmaintext:	
  2421                           ; 1 bytes @ 0x50
  2422 ;;
  2423 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2424 ;;
  2425 ;; *************** function _main *****************
  2426 ;; Defined at:
  2427 ;;		line 149 in file "SlaveLiofilizadorVer1.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;		None
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  reset           2   39[BANK1 ] unsigned int 
  2432 ;; Return value:  Size  Location     Type
  2433 ;;                  1    wreg      void 
  2434 ;; Registers used:
  2435 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2436 ;; Tracked objects:
  2437 ;;		On entry : B00/0
  2438 ;;		On exit  : 300/100
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2441 ;;      Params:         0       0       0       0       0
  2442 ;;      Locals:         0       0       2       0       0
  2443 ;;      Temps:          0       0       3       0       0
  2444 ;;      Totals:         0       0       5       0       0
  2445 ;;Total ram usage:        5 bytes
  2446 ;; Hardware stack levels required when called: 7
  2447 ;; This function calls:
  2448 ;;		_ADC_init
  2449 ;;		_Decodify_Command
  2450 ;;		_EEPROM_Read_Integer
  2451 ;;		_EEPROM_Write_Integer
  2452 ;;		_I2C_Master_Init
  2453 ;;		_MediaPlacaVaccum
  2454 ;;		_USART_init
  2455 ;;		_my_delay_ms_WDT
  2456 ;; This function is called by:
  2457 ;;		Startup code after reset
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           
  2461                           
  2462                           ;psect for function _main
  2463  086D                     _main:
  2464                           
  2465                           ;SlaveLiofilizadorVer1.c: 150:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2466                           
  2467                           ;incstack = 0
  2468                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2469  086D  3002               	movlw	2
  2470  086E  1683               	bsf	3,5	;RP0=1, select bank1
  2471  086F  1303               	bcf	3,6	;RP1=0, select bank1
  2472  0870  00C6               	movwf	(??_main^(0+128)+2)
  2473  0871  3004               	movlw	4
  2474  0872  00C5               	movwf	(??_main^(0+128)+1)
  2475  0873  30B9               	movlw	185
  2476  0874  00C4               	movwf	??_main^(0+128)
  2477  0875                     u5517:
  2478  0875  0BC4               	decfsz	??_main^(0+128),f
  2479  0876  2875               	goto	u5517
  2480  0877  0BC5               	decfsz	(??_main^(0+128)+1),f
  2481  0878  2875               	goto	u5517
  2482  0879  0BC6               	decfsz	(??_main^(0+128)+2),f
  2483  087A  2875               	goto	u5517
  2484  087B  287C               	nop2
  2485                           
  2486                           ;SlaveLiofilizadorVer1.c: 151:      OSCCONbits.IRCF0=1;
  2487  087C  1683               	bsf	3,5	;RP0=1, select bank1
  2488  087D  1303               	bcf	3,6	;RP1=0, select bank1
  2489  087E  160F               	bsf	15,4	;volatile
  2490                           
  2491                           ;SlaveLiofilizadorVer1.c: 152:      OSCCONbits.IRCF1=1;
  2492  087F  168F               	bsf	15,5	;volatile
  2493                           
  2494                           ;SlaveLiofilizadorVer1.c: 153:      OSCCONbits.IRCF2=1;
  2495  0880  170F               	bsf	15,6	;volatile
  2496                           
  2497                           ;SlaveLiofilizadorVer1.c: 155:      PORTA=0;
  2498  0881  1283               	bcf	3,5	;RP0=0, select bank0
  2499  0882  0185               	clrf	5	;volatile
  2500                           
  2501                           ;SlaveLiofilizadorVer1.c: 156:      PORTB=0;
  2502  0883  0186               	clrf	6	;volatile
  2503                           
  2504                           ;SlaveLiofilizadorVer1.c: 157:      PORTC=0;
  2505  0884  0187               	clrf	7	;volatile
  2506                           
  2507                           ;SlaveLiofilizadorVer1.c: 158:      PORTE=0;
  2508  0885  0189               	clrf	9	;volatile
  2509                           
  2510                           ;SlaveLiofilizadorVer1.c: 159:      TRISA=0b11101111;
  2511  0886  30EF               	movlw	239
  2512  0887  1683               	bsf	3,5	;RP0=1, select bank1
  2513  0888  0085               	movwf	5	;volatile
  2514                           
  2515                           ;SlaveLiofilizadorVer1.c: 160:      TRISB=0b00001111;
  2516  0889  300F               	movlw	15
  2517  088A  0086               	movwf	6	;volatile
  2518                           
  2519                           ;SlaveLiofilizadorVer1.c: 161:      TRISC=0xF0;
  2520  088B  30F0               	movlw	240
  2521  088C  0087               	movwf	7	;volatile
  2522                           
  2523                           ;SlaveLiofilizadorVer1.c: 162:      TRISE=0xFF;
  2524  088D  30FF               	movlw	255
  2525  088E  0089               	movwf	9	;volatile
  2526                           
  2527                           ;SlaveLiofilizadorVer1.c: 164:      ANSEL=0x00000011;
  2528  088F  3011               	movlw	17
  2529  0890  1703               	bsf	3,6	;RP1=1, select bank3
  2530  0891  0088               	movwf	8	;volatile
  2531                           
  2532                           ;SlaveLiofilizadorVer1.c: 165:      ANSELH=0x00000000;
  2533  0892  0189               	clrf	9	;volatile
  2534                           
  2535                           ;SlaveLiofilizadorVer1.c: 167:      OPTION_REGbits.nRBPU=0;
  2536  0893  1303               	bcf	3,6	;RP1=0, select bank1
  2537  0894  1381               	bcf	1,7	;volatile
  2538                           
  2539                           ;SlaveLiofilizadorVer1.c: 168:      WPUB=0b00001111;
  2540  0895  300F               	movlw	15
  2541  0896  0095               	movwf	21	;volatile
  2542                           
  2543                           ;SlaveLiofilizadorVer1.c: 171:      PORTBbits.RB7 =1;
  2544  0897  1283               	bcf	3,5	;RP0=0, select bank0
  2545  0898  1786               	bsf	6,7	;volatile
  2546                           
  2547                           ;SlaveLiofilizadorVer1.c: 172:      PORTBbits.RB6 =1;
  2548  0899  1706               	bsf	6,6	;volatile
  2549                           
  2550                           ;SlaveLiofilizadorVer1.c: 173:      PORTBbits.RB5=1;
  2551  089A  1686               	bsf	6,5	;volatile
  2552                           
  2553                           ;SlaveLiofilizadorVer1.c: 174:      generic_status.flag_usart_error=0;
  2554  089B  1683               	bsf	3,5	;RP0=1, select bank1
  2555  089C  10E4               	bcf	_generic_status^(0+128),1
  2556                           
  2557                           ;SlaveLiofilizadorVer1.c: 175:      my_delay_ms_WDT(1000);
  2558  089D  3000               	movlw	0
  2559  089E  1283               	bcf	3,5	;RP0=0, select bank0
  2560  089F  00A3               	movwf	my_delay_ms_WDT@time+3
  2561  08A0  3000               	movlw	0
  2562  08A1  00A2               	movwf	my_delay_ms_WDT@time+2
  2563  08A2  3003               	movlw	3
  2564  08A3  00A1               	movwf	my_delay_ms_WDT@time+1
  2565  08A4  30E8               	movlw	232
  2566  08A5  00A0               	movwf	my_delay_ms_WDT@time
  2567  08A6  160A  158A  2504  120A  158A  	fcall	_my_delay_ms_WDT
  2568                           
  2569                           ;SlaveLiofilizadorVer1.c: 177:      OPTION_REGbits.T0CS=0;
  2570  08AB  1683               	bsf	3,5	;RP0=1, select bank1
  2571  08AC  1281               	bcf	1,5	;volatile
  2572                           
  2573                           ;SlaveLiofilizadorVer1.c: 178:      OPTION_REGbits.PSA =1;
  2574  08AD  1581               	bsf	1,3	;volatile
  2575                           
  2576                           ;SlaveLiofilizadorVer1.c: 179:      OPTION_REGbits.PS0 =1;
  2577  08AE  1401               	bsf	1,0	;volatile
  2578                           
  2579                           ;SlaveLiofilizadorVer1.c: 180:      OPTION_REGbits.PS1 =1;
  2580  08AF  1481               	bsf	1,1	;volatile
  2581                           
  2582                           ;SlaveLiofilizadorVer1.c: 181:      OPTION_REGbits.PS2 =1;
  2583  08B0  1501               	bsf	1,2	;volatile
  2584                           
  2585                           ;SlaveLiofilizadorVer1.c: 182:      INTCONbits.T0IE =0;
  2586  08B1  128B               	bcf	11,5	;volatile
  2587                           
  2588                           ;SlaveLiofilizadorVer1.c: 183:      INTCONbits.INTE =0;
  2589  08B2  120B               	bcf	11,4	;volatile
  2590                           
  2591                           ;SlaveLiofilizadorVer1.c: 184:      INTCONbits.GIE =1;
  2592  08B3  178B               	bsf	11,7	;volatile
  2593                           
  2594                           ;SlaveLiofilizadorVer1.c: 187:      INTCONbits.PEIE = 1;
  2595  08B4  170B               	bsf	11,6	;volatile
  2596                           
  2597                           ;SlaveLiofilizadorVer1.c: 188:      T1CKPS0=1;
  2598  08B5  1283               	bcf	3,5	;RP0=0, select bank0
  2599  08B6  1610               	bsf	16,4	;volatile
  2600                           
  2601                           ;SlaveLiofilizadorVer1.c: 189:      T1CKPS1=1;
  2602  08B7  1690               	bsf	16,5	;volatile
  2603                           
  2604                           ;SlaveLiofilizadorVer1.c: 190:      TMR1CS=0;
  2605  08B8  1090               	bcf	16,1	;volatile
  2606                           
  2607                           ;SlaveLiofilizadorVer1.c: 191:      TMR1IE=1;
  2608  08B9  1683               	bsf	3,5	;RP0=1, select bank1
  2609  08BA  140C               	bsf	12,0	;volatile
  2610                           
  2611                           ;SlaveLiofilizadorVer1.c: 192:      T1CON=1;
  2612  08BB  3001               	movlw	1
  2613  08BC  1283               	bcf	3,5	;RP0=0, select bank0
  2614  08BD  0090               	movwf	16	;volatile
  2615  08BE  0064               	clrwdt	;# 
  2616                           
  2617                           ;SlaveLiofilizadorVer1.c: 199:      ADC_init();
  2618  08BF  160A  158A  211B  120A  158A  	fcall	_ADC_init
  2619                           
  2620                           ;SlaveLiofilizadorVer1.c: 200:      I2C_Master_Init(100000);
  2621  08C4  3000               	movlw	0
  2622  08C5  00B1               	movwf	I2C_Master_Init@c+3
  2623  08C6  3001               	movlw	1
  2624  08C7  00B0               	movwf	I2C_Master_Init@c+2
  2625  08C8  3086               	movlw	134
  2626  08C9  00AF               	movwf	I2C_Master_Init@c+1
  2627  08CA  30A0               	movlw	160
  2628  08CB  00AE               	movwf	I2C_Master_Init@c
  2629  08CC  160A  158A  23CC  120A  158A  	fcall	_I2C_Master_Init
  2630                           
  2631                           ;SlaveLiofilizadorVer1.c: 201:      USART_init(115200);
  2632  08D1  3000               	movlw	0
  2633  08D2  1283               	bcf	3,5	;RP0=0, select bank0
  2634  08D3  00A3               	movwf	USART_init@baudrate+3
  2635  08D4  3001               	movlw	1
  2636  08D5  00A2               	movwf	USART_init@baudrate+2
  2637  08D6  30C2               	movlw	194
  2638  08D7  00A1               	movwf	USART_init@baudrate+1
  2639  08D8  3000               	movlw	0
  2640  08D9  00A0               	movwf	USART_init@baudrate
  2641  08DA  160A  158A  25F4  120A  158A  	fcall	_USART_init
  2642                           
  2643                           ;SlaveLiofilizadorVer1.c: 207:      {;SlaveLiofilizadorVer1.c: 208:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 209:      reset=EEPROM_Read_Integer(0x10);
  2644  08DF  3010               	movlw	16
  2645  08E0  160A  158A  234D  120A  158A  	fcall	_EEPROM_Read_Integer
  2646  08E5  0824               	movf	?_EEPROM_Read_Integer+1,w
  2647  08E6  1683               	bsf	3,5	;RP0=1, select bank1
  2648  08E7  00C8               	movwf	(main@reset+1)^(0+128)
  2649  08E8  1283               	bcf	3,5	;RP0=0, select bank0
  2650  08E9  0823               	movf	?_EEPROM_Read_Integer,w
  2651  08EA  1683               	bsf	3,5	;RP0=1, select bank1
  2652  08EB  00C7               	movwf	main@reset^(0+128)
  2653                           
  2654                           ;SlaveLiofilizadorVer1.c: 210:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2655  08EC  0A47               	incf	main@reset^(0+128),w
  2656  08ED  1D03               	skipz
  2657  08EE  28FC               	goto	l5927
  2658  08EF  0A48               	incf	(main@reset+1)^(0+128),w
  2659  08F0  1D03               	btfss	3,2
  2660  08F1  28FC               	goto	l5927
  2661  08F2  3000               	movlw	0
  2662  08F3  1283               	bcf	3,5	;RP0=0, select bank0
  2663  08F4  00A5               	movwf	EEPROM_Write_Integer@dado
  2664  08F5  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2665  08F6  3010               	movlw	16
  2666  08F7  160A  158A  23FD  120A  158A  	fcall	_EEPROM_Write_Integer
  2667  08FC                     l5927:
  2668                           
  2669                           ;SlaveLiofilizadorVer1.c: 211:      reset++;
  2670  08FC  3001               	movlw	1
  2671  08FD  1683               	bsf	3,5	;RP0=1, select bank1
  2672  08FE  1303               	bcf	3,6	;RP1=0, select bank1
  2673  08FF  07C7               	addwf	main@reset^(0+128),f
  2674  0900  1803               	skipnc
  2675  0901  0AC8               	incf	(main@reset+1)^(0+128),f
  2676  0902  3000               	movlw	0
  2677  0903  07C8               	addwf	(main@reset+1)^(0+128),f
  2678                           
  2679                           ;SlaveLiofilizadorVer1.c: 212:      EEPROM_Write_Integer(0x10,reset);
  2680  0904  0848               	movf	(main@reset+1)^(0+128),w
  2681  0905  1283               	bcf	3,5	;RP0=0, select bank0
  2682  0906  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2683  0907  1683               	bsf	3,5	;RP0=1, select bank1
  2684  0908  0847               	movf	main@reset^(0+128),w
  2685  0909  1283               	bcf	3,5	;RP0=0, select bank0
  2686  090A  00A5               	movwf	EEPROM_Write_Integer@dado
  2687  090B  3010               	movlw	16
  2688  090C  160A  158A  23FD  120A  158A  	fcall	_EEPROM_Write_Integer
  2689                           
  2690                           ;SlaveLiofilizadorVer1.c: 213:      };SlaveLiofilizadorVer1.c: 217:      Delay_Led_Tmr0 
      +                          = 0;
  2691  0911  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  2692  0912  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  2693                           
  2694                           ;SlaveLiofilizadorVer1.c: 218:      Delay_Led_Usart = 0;
  2695  0913  1683               	bsf	3,5	;RP0=1, select bank1
  2696  0914  1303               	bcf	3,6	;RP1=0, select bank1
  2697  0915  01DB               	clrf	_Delay_Led_Usart^(0+128)	;volatile
  2698  0916  01DC               	clrf	(_Delay_Led_Usart+1)^(0+128)	;volatile
  2699                           
  2700                           ;SlaveLiofilizadorVer1.c: 219:      Delay_Led_Memory = 0;
  2701  0917  01DD               	clrf	_Delay_Led_Memory^(0+128)	;volatile
  2702  0918  01DE               	clrf	(_Delay_Led_Memory+1)^(0+128)	;volatile
  2703                           
  2704                           ;SlaveLiofilizadorVer1.c: 221:      segundo=0;
  2705  0919  01FD               	clrf	_segundo	;volatile
  2706                           
  2707                           ;SlaveLiofilizadorVer1.c: 222:      hora=0;
  2708  091A  01FC               	clrf	_hora	;volatile
  2709                           
  2710                           ;SlaveLiofilizadorVer1.c: 223:      PORTCbits.RC0=0;
  2711  091B  1283               	bcf	3,5	;RP0=0, select bank0
  2712  091C  1007               	bcf	7,0	;volatile
  2713                           
  2714                           ;SlaveLiofilizadorVer1.c: 224:      PORTCbits.RC1=0;
  2715  091D  1087               	bcf	7,1	;volatile
  2716                           
  2717                           ;SlaveLiofilizadorVer1.c: 225:      PORTAbits.RA2=0;
  2718  091E  1105               	bcf	5,2	;volatile
  2719                           
  2720                           ;SlaveLiofilizadorVer1.c: 226:      PORTAbits.RA3=0;
  2721  091F  1185               	bcf	5,3	;volatile
  2722                           
  2723                           ;SlaveLiofilizadorVer1.c: 229:      Board_Number=(((0x0F)&(~PORTB)));
  2724  0920  0906               	comf	6,w	;volatile
  2725  0921  390F               	andlw	15
  2726  0922  1683               	bsf	3,5	;RP0=1, select bank1
  2727  0923  00C4               	movwf	??_main^(0+128)
  2728  0924  0844               	movf	??_main^(0+128),w
  2729  0925  00E1               	movwf	_Board_Number^(0+128)
  2730                           
  2731                           ;SlaveLiofilizadorVer1.c: 230:      canal=1;
  2732  0926  01E2               	clrf	_canal^(0+128)
  2733  0927  0AE2               	incf	_canal^(0+128),f
  2734                           
  2735                           ;SlaveLiofilizadorVer1.c: 238:      statuspower.flag_global_vacuo=0;
  2736  0928  1163               	bcf	_statuspower^(0+128),2
  2737  0929                     l5953:
  2738                           
  2739                           ;SlaveLiofilizadorVer1.c: 252:           {;SlaveLiofilizadorVer1.c: 254:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2740  0929  17E4               	bsf	_generic_status^(0+128),7
  2741                           
  2742                           ;SlaveLiofilizadorVer1.c: 283:          if(++canal==2) canal=0;
  2743  092A  3001               	movlw	1
  2744  092B  00C4               	movwf	??_main^(0+128)
  2745  092C  0844               	movf	??_main^(0+128),w
  2746  092D  07E2               	addwf	_canal^(0+128),f
  2747  092E  3002               	movlw	2
  2748  092F  0662               	xorwf	_canal^(0+128),w
  2749  0930  1903               	btfsc	3,2
  2750  0931  01E2               	clrf	_canal^(0+128)
  2751                           
  2752                           ;SlaveLiofilizadorVer1.c: 284:          MediaPlacaVaccum(canal);
  2753  0932  0862               	movf	_canal^(0+128),w
  2754  0933  120A  158A  2537  120A  158A  	fcall	_MediaPlacaVaccum
  2755                           
  2756                           ;SlaveLiofilizadorVer1.c: 292:          if(generic_status.flag_usart_rx==1)
  2757  0938  1683               	bsf	3,5	;RP0=1, select bank1
  2758  0939  1C64               	btfss	_generic_status^(0+128),0
  2759  093A  2929               	goto	l5953
  2760                           
  2761                           ;SlaveLiofilizadorVer1.c: 293:             {;SlaveLiofilizadorVer1.c: 294:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2762  093B  1283               	bcf	3,5	;RP0=0, select bank2
  2763  093C  1703               	bsf	3,6	;RP1=1, select bank2
  2764  093D  0810               	movf	_usart_buffer^(0+256),w	;volatile
  2765  093E  1683               	bsf	3,5	;RP0=1, select bank1
  2766  093F  1303               	bcf	3,6	;RP1=0, select bank1
  2767  0940  00D8               	movwf	(_header+1)^(0+128)
  2768  0941  1283               	bcf	3,5	;RP0=0, select bank2
  2769  0942  1703               	bsf	3,6	;RP1=1, select bank2
  2770  0943  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  2771  0944  1683               	bsf	3,5	;RP0=1, select bank1
  2772  0945  1303               	bcf	3,6	;RP1=0, select bank1
  2773  0946  00D7               	movwf	_header^(0+128)
  2774                           
  2775                           ;SlaveLiofilizadorVer1.c: 295:             if(header==0xAABB)
  2776  0947  30BB               	movlw	187
  2777  0948  0657               	xorwf	_header^(0+128),w
  2778  0949  30AA               	movlw	170
  2779  094A  1903               	skipnz
  2780  094B  0658               	xorwf	(_header+1)^(0+128),w
  2781  094C  1D03               	btfss	3,2
  2782  094D  2929               	goto	l5953
  2783                           
  2784                           ;SlaveLiofilizadorVer1.c: 296:                {;SlaveLiofilizadorVer1.c: 297:           
      +                               destino =usart_buffer[3];
  2785  094E  1283               	bcf	3,5	;RP0=0, select bank2
  2786  094F  1703               	bsf	3,6	;RP1=1, select bank2
  2787  0950  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  2788  0951  1683               	bsf	3,5	;RP0=1, select bank1
  2789  0952  1303               	bcf	3,6	;RP1=0, select bank1
  2790  0953  00C4               	movwf	??_main^(0+128)
  2791  0954  0844               	movf	??_main^(0+128),w
  2792  0955  00E0               	movwf	_destino^(0+128)
  2793                           
  2794                           ;SlaveLiofilizadorVer1.c: 298:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2795  0956  0860               	movf	_destino^(0+128),w
  2796  0957  0661               	xorwf	_Board_Number^(0+128),w
  2797  0958  1D03               	btfss	3,2
  2798  0959  0A60               	incf	_destino^(0+128),w
  2799  095A  1D03               	btfss	3,2
  2800  095B  2929               	goto	l5953
  2801                           
  2802                           ;SlaveLiofilizadorVer1.c: 299:                       {;SlaveLiofilizadorVer1.c: 300:    
      +                                             Delay_Led_Usart=20;
  2803  095C  3014               	movlw	20
  2804  095D  00DB               	movwf	_Delay_Led_Usart^(0+128)	;volatile
  2805  095E  3000               	movlw	0
  2806  095F  00DC               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
  2807                           
  2808                           ;SlaveLiofilizadorVer1.c: 301:                       Decodify_Command();
  2809  0960  120A  118A  2037  120A  158A  	fcall	_Decodify_Command
  2810                           
  2811                           ;SlaveLiofilizadorVer1.c: 302:                       generic_status.flag_usart_rx=0;
  2812  0965  1683               	bsf	3,5	;RP0=1, select bank1
  2813  0966  1303               	bcf	3,6	;RP1=0, select bank1
  2814  0967  1064               	bcf	_generic_status^(0+128),0
  2815                           
  2816                           ;SlaveLiofilizadorVer1.c: 305:             }
  2817  0968  2929               	goto	l5953
  2818  0969                     __end_of_main:
  2819                           
  2820                           	psect	text1
  2821  1DF4                     __ptext1:	
  2822 ;; *************** function _USART_init *****************
  2823 ;; Defined at:
  2824 ;;		line 18 in file "usart.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;  baudrate        4    0[BANK0 ] unsigned long 
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;  i               1    5[BANK0 ] unsigned char 
  2829 ;;  erro            1    0        unsigned char 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      void 
  2832 ;; Registers used:
  2833 ;;		wreg, status,2, status,0
  2834 ;; Tracked objects:
  2835 ;;		On entry : 300/0
  2836 ;;		On exit  : 300/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2839 ;;      Params:         0       4       0       0       0
  2840 ;;      Locals:         0       1       0       0       0
  2841 ;;      Temps:          0       1       0       0       0
  2842 ;;      Totals:         0       6       0       0       0
  2843 ;;Total ram usage:        6 bytes
  2844 ;; Hardware stack levels used: 1
  2845 ;; Hardware stack levels required when called: 1
  2846 ;; This function calls:
  2847 ;;		Nothing
  2848 ;; This function is called by:
  2849 ;;		_main
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           
  2854                           ;psect for function _USART_init
  2855  1DF4                     _USART_init:
  2856                           
  2857                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  2858                           
  2859                           ;incstack = 0
  2860                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  2861  1DF4  304B               	movlw	75
  2862  1DF5  0621               	xorwf	USART_init@baudrate+1,w
  2863  1DF6  0420               	iorwf	USART_init@baudrate,w
  2864  1DF7  0422               	iorwf	USART_init@baudrate+2,w
  2865  1DF8  0423               	iorwf	USART_init@baudrate+3,w
  2866  1DF9  1D03               	btfss	3,2
  2867  1DFA  2E07               	goto	l5027
  2868                           
  2869                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  2870  1DFB  1283               	bcf	3,5	;RP0=0, select bank0
  2871  1DFC  1303               	bcf	3,6	;RP1=0, select bank0
  2872  1DFD  1798               	bsf	24,7	;volatile
  2873                           
  2874                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  2875  1DFE  1618               	bsf	24,4	;volatile
  2876                           
  2877                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  2878  1DFF  1683               	bsf	3,5	;RP0=1, select bank1
  2879  1E00  1518               	bsf	24,2	;volatile
  2880                           
  2881                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  2882  1E01  1218               	bcf	24,4	;volatile
  2883                           
  2884                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  2885  1E02  1318               	bcf	24,6	;volatile
  2886                           
  2887                           ;usart.c: 32:           SPBRG =12;
  2888  1E03  300C               	movlw	12
  2889  1E04  0099               	movwf	25	;volatile
  2890                           
  2891                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  2892  1E05  170B               	bsf	11,6	;volatile
  2893  1E06  2E23               	goto	L1
  2894  1E07                     l5027:	
  2895                           ;usart.c: 35:           }
  2896                           
  2897                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  2898                           
  2899  1E07  30C2               	movlw	194
  2900  1E08  1283               	bcf	3,5	;RP0=0, select bank0
  2901  1E09  1303               	bcf	3,6	;RP1=0, select bank0
  2902  1E0A  0621               	xorwf	USART_init@baudrate+1,w
  2903  1E0B  1D03               	skipz
  2904  1E0C  2E24               	goto	l5047
  2905  1E0D  0322               	decf	USART_init@baudrate+2,w
  2906  1E0E  0420               	iorwf	USART_init@baudrate,w
  2907  1E0F  0423               	iorwf	USART_init@baudrate+3,w
  2908  1E10  1D03               	btfss	3,2
  2909  1E11  2E24               	goto	l5047
  2910                           
  2911                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  2912  1E12  3010               	movlw	16
  2913  1E13  1683               	bsf	3,5	;RP0=1, select bank1
  2914  1E14  1303               	bcf	3,6	;RP1=0, select bank1
  2915  1E15  0099               	movwf	25	;volatile
  2916                           
  2917                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  2918  1E16  1703               	bsf	3,6	;RP1=1, select bank3
  2919  1E17  1587               	bsf	7,3	;volatile
  2920                           
  2921                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  2922  1E18  1303               	bcf	3,6	;RP1=0, select bank1
  2923  1E19  1518               	bsf	24,2	;volatile
  2924                           
  2925                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  2926  1E1A  1283               	bcf	3,5	;RP0=0, select bank0
  2927  1E1B  1798               	bsf	24,7	;volatile
  2928                           
  2929                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  2930  1E1C  1683               	bsf	3,5	;RP0=1, select bank1
  2931  1E1D  1218               	bcf	24,4	;volatile
  2932                           
  2933                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  2934  1E1E  1318               	bcf	24,6	;volatile
  2935                           
  2936                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  2937  1E1F  1283               	bcf	3,5	;RP0=0, select bank0
  2938  1E20  1618               	bsf	24,4	;volatile
  2939                           
  2940                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  2941  1E21  170B               	bsf	11,6	;volatile
  2942                           
  2943                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  2944  1E22  1683               	bsf	3,5	;RP0=1, select bank1
  2945  1E23                     L1:
  2946  1E23  168C               	bsf	12,5	;volatile
  2947  1E24                     l5047:
  2948                           
  2949                           ;usart.c: 68:      TRISC6= 1;
  2950  1E24  1683               	bsf	3,5	;RP0=1, select bank1
  2951  1E25  1303               	bcf	3,6	;RP1=0, select bank1
  2952  1E26  1707               	bsf	7,6	;volatile
  2953                           
  2954                           ;usart.c: 69:      TRISC7= 1;
  2955  1E27  1787               	bsf	7,7	;volatile
  2956                           
  2957                           ;usart.c: 71:      CREN=0;
  2958  1E28  1283               	bcf	3,5	;RP0=0, select bank0
  2959  1E29  1218               	bcf	24,4	;volatile
  2960                           
  2961                           ;usart.c: 72:      CREN=1;
  2962  1E2A  1618               	bsf	24,4	;volatile
  2963                           
  2964                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  2965  1E2B  01A5               	clrf	USART_init@i
  2966  1E2C                     l5061:
  2967  1E2C  081A               	movf	26,w	;volatile
  2968  1E2D  3001               	movlw	1
  2969  1E2E  00A4               	movwf	??_USART_init
  2970  1E2F  0824               	movf	??_USART_init,w
  2971  1E30  07A5               	addwf	USART_init@i,f
  2972  1E31  300F               	movlw	15
  2973  1E32  0225               	subwf	USART_init@i,w
  2974  1E33  1803               	btfsc	3,0
  2975  1E34  0008               	return
  2976  1E35  2E2C               	goto	l5061
  2977  1E36                     __end_of_USART_init:
  2978                           
  2979                           	psect	text2
  2980  0D37                     __ptext2:	
  2981 ;; *************** function _MediaPlacaVaccum *****************
  2982 ;; Defined at:
  2983 ;;		line 752 in file "SlaveLiofilizadorVer1.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  canal           1    wreg     unsigned char 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  canal           1    4[BANK1 ] unsigned char 
  2988 ;;  Temp            4    7[BANK1 ] float 
  2989 ;;  Valor           4    0        float 
  2990 ;;  i               2    5[BANK1 ] unsigned int 
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  1    wreg      void 
  2993 ;; Registers used:
  2994 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2995 ;; Tracked objects:
  2996 ;;		On entry : 300/100
  2997 ;;		On exit  : 200/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3000 ;;      Params:         0       0       0       0       0
  3001 ;;      Locals:         0       0      11       0       0
  3002 ;;      Temps:          0       1       0       0       0
  3003 ;;      Totals:         0       1      11       0       0
  3004 ;;Total ram usage:       12 bytes
  3005 ;; Hardware stack levels used: 1
  3006 ;; Hardware stack levels required when called: 3
  3007 ;; This function calls:
  3008 ;;		_ADC_Media_10bits
  3009 ;;		_Package_Usart_is_for_me
  3010 ;;		___fladd
  3011 ;;		___fldiv
  3012 ;;		___flge
  3013 ;;		___flmul
  3014 ;;		___flsub
  3015 ;;		___xxtofl
  3016 ;;		_my_delay_ms
  3017 ;; This function is called by:
  3018 ;;		_main
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           
  3023                           ;psect for function _MediaPlacaVaccum
  3024  0D37                     _MediaPlacaVaccum:
  3025                           
  3026                           ;incstack = 0
  3027                           ; Regs used in _MediaPlacaVaccum: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3028                           ;MediaPlacaVaccum@canal stored from wreg
  3029  0D37  00A4               	movwf	MediaPlacaVaccum@canal^(0+128)
  3030                           
  3031                           ;SlaveLiofilizadorVer1.c: 753:      float Temp,Valor;;SlaveLiofilizadorVer1.c: 754:     
      +                           unsigned int i;;SlaveLiofilizadorVer1.c: 758:      if(canal==0)
  3032  0D38  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3033  0D39  1D03               	btfss	3,2
  3034  0D3A  2EEB               	goto	l439
  3035                           
  3036                           ;SlaveLiofilizadorVer1.c: 759:        {;SlaveLiofilizadorVer1.c: 760:        ADCON1bits.
      +                          VCFG0=1;
  3037  0D3B  161F               	bsf	31,4	;volatile
  3038                           
  3039                           ;SlaveLiofilizadorVer1.c: 761:        ADCON1bits.VCFG1=1;
  3040  0D3C  169F               	bsf	31,5	;volatile
  3041                           
  3042                           ;SlaveLiofilizadorVer1.c: 762:        ADCON0bits.CHS=canal;
  3043  0D3D  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3044  0D3E  1283               	bcf	3,5	;RP0=0, select bank0
  3045  0D3F  00E5               	movwf	??_MediaPlacaVaccum
  3046  0D40  0DE5               	rlf	??_MediaPlacaVaccum,f
  3047  0D41  0DE5               	rlf	??_MediaPlacaVaccum,f
  3048  0D42  081F               	movf	31,w	;volatile
  3049  0D43  0665               	xorwf	??_MediaPlacaVaccum,w
  3050  0D44  39C3               	andlw	-61
  3051  0D45  0665               	xorwf	??_MediaPlacaVaccum,w
  3052  0D46  009F               	movwf	31	;volatile
  3053                           
  3054                           ;SlaveLiofilizadorVer1.c: 763:        my_delay_ms(1);
  3055  0D47  3000               	movlw	0
  3056  0D48  00A3               	movwf	my_delay_ms@time+3
  3057  0D49  3000               	movlw	0
  3058  0D4A  00A2               	movwf	my_delay_ms@time+2
  3059  0D4B  3000               	movlw	0
  3060  0D4C  00A1               	movwf	my_delay_ms@time+1
  3061  0D4D  3001               	movlw	1
  3062  0D4E  00A0               	movwf	my_delay_ms@time
  3063  0D4F  160A  158A  24CD  120A  158A  	fcall	_my_delay_ms
  3064                           
  3065                           ;SlaveLiofilizadorVer1.c: 764:        Temp=0;
  3066  0D54  3000               	movlw	0
  3067  0D55  1683               	bsf	3,5	;RP0=1, select bank1
  3068  0D56  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3069  0D57  3000               	movlw	0
  3070  0D58  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3071  0D59  3000               	movlw	0
  3072  0D5A  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3073  0D5B  3000               	movlw	0
  3074  0D5C  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3075                           
  3076                           ;SlaveLiofilizadorVer1.c: 766:        for(i=1;i<15;i++)
  3077  0D5D  3001               	movlw	1
  3078  0D5E  00A5               	movwf	MediaPlacaVaccum@i^(0+128)
  3079  0D5F  3000               	movlw	0
  3080  0D60  00A6               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3081  0D61                     l5083:
  3082                           
  3083                           ;SlaveLiofilizadorVer1.c: 767:            {;SlaveLiofilizadorVer1.c: 768:            Tem
      +                          p+=ADC_Media_10bits(canal);
  3084  0D61  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3085  0D62  160A  158A  26CF  120A  158A  	fcall	_ADC_Media_10bits
  3086  0D67  0831               	movf	?_ADC_Media_10bits+3,w
  3087  0D68  00BA               	movwf	___fladd@b+3
  3088  0D69  0830               	movf	?_ADC_Media_10bits+2,w
  3089  0D6A  00B9               	movwf	___fladd@b+2
  3090  0D6B  082F               	movf	?_ADC_Media_10bits+1,w
  3091  0D6C  00B8               	movwf	___fladd@b+1
  3092  0D6D  082E               	movf	?_ADC_Media_10bits,w
  3093  0D6E  00B7               	movwf	___fladd@b
  3094  0D6F  1683               	bsf	3,5	;RP0=1, select bank1
  3095  0D70  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3096  0D71  1283               	bcf	3,5	;RP0=0, select bank0
  3097  0D72  00BE               	movwf	___fladd@a+3
  3098  0D73  1683               	bsf	3,5	;RP0=1, select bank1
  3099  0D74  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3100  0D75  1283               	bcf	3,5	;RP0=0, select bank0
  3101  0D76  00BD               	movwf	___fladd@a+2
  3102  0D77  1683               	bsf	3,5	;RP0=1, select bank1
  3103  0D78  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3104  0D79  1283               	bcf	3,5	;RP0=0, select bank0
  3105  0D7A  00BC               	movwf	___fladd@a+1
  3106  0D7B  1683               	bsf	3,5	;RP0=1, select bank1
  3107  0D7C  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3108  0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  3109  0D7E  00BB               	movwf	___fladd@a
  3110  0D7F  120A  158A  230A  120A  158A  	fcall	___fladd
  3111  0D84  083A               	movf	?___fladd+3,w
  3112  0D85  1683               	bsf	3,5	;RP0=1, select bank1
  3113  0D86  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3114  0D87  1283               	bcf	3,5	;RP0=0, select bank0
  3115  0D88  0839               	movf	?___fladd+2,w
  3116  0D89  1683               	bsf	3,5	;RP0=1, select bank1
  3117  0D8A  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3118  0D8B  1283               	bcf	3,5	;RP0=0, select bank0
  3119  0D8C  0838               	movf	?___fladd+1,w
  3120  0D8D  1683               	bsf	3,5	;RP0=1, select bank1
  3121  0D8E  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3122  0D8F  1283               	bcf	3,5	;RP0=0, select bank0
  3123  0D90  0837               	movf	?___fladd,w
  3124  0D91  1683               	bsf	3,5	;RP0=1, select bank1
  3125  0D92  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3126                           
  3127                           ;SlaveLiofilizadorVer1.c: 769:            if(Package_Usart_is_for_me()==1) break;
  3128  0D93  160A  158A  21DC  120A  158A  	fcall	_Package_Usart_is_for_me
  3129  0D98  3A01               	xorlw	1
  3130  0D99  1903               	btfsc	3,2
  3131  0D9A  2DA9               	goto	l5091
  3132                           
  3133                           ;SlaveLiofilizadorVer1.c: 770:            }
  3134  0D9B  3001               	movlw	1
  3135  0D9C  1683               	bsf	3,5	;RP0=1, select bank1
  3136  0D9D  07A5               	addwf	MediaPlacaVaccum@i^(0+128),f
  3137  0D9E  1803               	skipnc
  3138  0D9F  0AA6               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3139  0DA0  3000               	movlw	0
  3140  0DA1  07A6               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3141  0DA2  3000               	movlw	0
  3142  0DA3  0226               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3143  0DA4  300F               	movlw	15
  3144  0DA5  1903               	skipnz
  3145  0DA6  0225               	subwf	MediaPlacaVaccum@i^(0+128),w
  3146  0DA7  1C03               	skipc
  3147  0DA8  2D61               	goto	l5083
  3148  0DA9                     l5091:
  3149                           
  3150                           ;SlaveLiofilizadorVer1.c: 771:        if(i<10)
  3151  0DA9  3000               	movlw	0
  3152  0DAA  1683               	bsf	3,5	;RP0=1, select bank1
  3153  0DAB  0226               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3154  0DAC  300A               	movlw	10
  3155  0DAD  1903               	skipnz
  3156  0DAE  0225               	subwf	MediaPlacaVaccum@i^(0+128),w
  3157  0DAF  1C03               	btfss	3,0
  3158  0DB0  0008               	return
  3159                           
  3160                           ;SlaveLiofilizadorVer1.c: 777:        if(i==15)
  3161  0DB1  300F               	movlw	15
  3162  0DB2  0625               	xorwf	MediaPlacaVaccum@i^(0+128),w
  3163  0DB3  0426               	iorwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3164  0DB4  1D03               	btfss	3,2
  3165  0DB5  2DC0               	goto	l5099
  3166                           
  3167                           ;SlaveLiofilizadorVer1.c: 778:          Temp/=(i-1);
  3168  0DB6  0825               	movf	MediaPlacaVaccum@i^(0+128),w
  3169  0DB7  3EFF               	addlw	255
  3170  0DB8  1283               	bcf	3,5	;RP0=0, select bank0
  3171  0DB9  00A0               	movwf	___xxtofl@val
  3172  0DBA  1683               	bsf	3,5	;RP0=1, select bank1
  3173  0DBB  0826               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3174  0DBC  1803               	skipnc
  3175  0DBD  3E01               	addlw	1
  3176  0DBE  3EFF               	addlw	255
  3177  0DBF  2DC5               	goto	L2
  3178  0DC0                     l5099:
  3179                           
  3180                           ;SlaveLiofilizadorVer1.c: 780:          Temp/=(i);
  3181  0DC0  0825               	movf	MediaPlacaVaccum@i^(0+128),w
  3182  0DC1  1283               	bcf	3,5	;RP0=0, select bank0
  3183  0DC2  00A0               	movwf	___xxtofl@val
  3184  0DC3  1683               	bsf	3,5	;RP0=1, select bank1
  3185  0DC4  0826               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3186  0DC5                     L2:
  3187  0DC5  1283               	bcf	3,5	;RP0=0, select bank0
  3188  0DC6  00A1               	movwf	___xxtofl@val+1
  3189  0DC7  01A2               	clrf	___xxtofl@val+2
  3190  0DC8  01A3               	clrf	___xxtofl@val+3
  3191  0DC9  3000               	movlw	0
  3192  0DCA  160A  118A  2106  120A  158A  	fcall	___xxtofl
  3193  0DCF  0823               	movf	?___xxtofl+3,w
  3194  0DD0  00B1               	movwf	___fldiv@a+3
  3195  0DD1  0822               	movf	?___xxtofl+2,w
  3196  0DD2  00B0               	movwf	___fldiv@a+2
  3197  0DD3  0821               	movf	?___xxtofl+1,w
  3198  0DD4  00AF               	movwf	___fldiv@a+1
  3199  0DD5  0820               	movf	?___xxtofl,w
  3200  0DD6  00AE               	movwf	___fldiv@a
  3201  0DD7  1683               	bsf	3,5	;RP0=1, select bank1
  3202  0DD8  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3203  0DD9  1283               	bcf	3,5	;RP0=0, select bank0
  3204  0DDA  00B5               	movwf	___fldiv@b+3
  3205  0DDB  1683               	bsf	3,5	;RP0=1, select bank1
  3206  0DDC  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3207  0DDD  1283               	bcf	3,5	;RP0=0, select bank0
  3208  0DDE  00B4               	movwf	___fldiv@b+2
  3209  0DDF  1683               	bsf	3,5	;RP0=1, select bank1
  3210  0DE0  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3211  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  3212  0DE2  00B3               	movwf	___fldiv@b+1
  3213  0DE3  1683               	bsf	3,5	;RP0=1, select bank1
  3214  0DE4  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3215  0DE5  1283               	bcf	3,5	;RP0=0, select bank0
  3216  0DE6  00B2               	movwf	___fldiv@b
  3217  0DE7  120A  158A  2169  120A  158A  	fcall	___fldiv
  3218  0DEC  0831               	movf	?___fldiv+3,w
  3219  0DED  1683               	bsf	3,5	;RP0=1, select bank1
  3220  0DEE  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3221  0DEF  1283               	bcf	3,5	;RP0=0, select bank0
  3222  0DF0  0830               	movf	?___fldiv+2,w
  3223  0DF1  1683               	bsf	3,5	;RP0=1, select bank1
  3224  0DF2  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3225  0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  3226  0DF4  082F               	movf	?___fldiv+1,w
  3227  0DF5  1683               	bsf	3,5	;RP0=1, select bank1
  3228  0DF6  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3229  0DF7  1283               	bcf	3,5	;RP0=0, select bank0
  3230  0DF8  082E               	movf	?___fldiv,w
  3231  0DF9  1683               	bsf	3,5	;RP0=1, select bank1
  3232  0DFA  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3233                           
  3234                           ;SlaveLiofilizadorVer1.c: 782:        Temp=(1023.0-Temp);
  3235  0DFB  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3236  0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  3237  0DFD  00CE               	movwf	___flsub@a+3
  3238  0DFE  1683               	bsf	3,5	;RP0=1, select bank1
  3239  0DFF  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3240  0E00  1283               	bcf	3,5	;RP0=0, select bank0
  3241  0E01  00CD               	movwf	___flsub@a+2
  3242  0E02  1683               	bsf	3,5	;RP0=1, select bank1
  3243  0E03  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3244  0E04  1283               	bcf	3,5	;RP0=0, select bank0
  3245  0E05  00CC               	movwf	___flsub@a+1
  3246  0E06  1683               	bsf	3,5	;RP0=1, select bank1
  3247  0E07  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3248  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  3249  0E09  00CB               	movwf	___flsub@a
  3250  0E0A  3044               	movlw	68
  3251  0E0B  00D2               	movwf	___flsub@b+3
  3252  0E0C  307F               	movlw	127
  3253  0E0D  00D1               	movwf	___flsub@b+2
  3254  0E0E  30C0               	movlw	192
  3255  0E0F  00D0               	movwf	___flsub@b+1
  3256  0E10  3000               	movlw	0
  3257  0E11  00CF               	movwf	___flsub@b
  3258  0E12  160A  158A  2230  120A  158A  	fcall	___flsub
  3259  0E17  084E               	movf	?___flsub+3,w
  3260  0E18  1683               	bsf	3,5	;RP0=1, select bank1
  3261  0E19  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3262  0E1A  1283               	bcf	3,5	;RP0=0, select bank0
  3263  0E1B  084D               	movf	?___flsub+2,w
  3264  0E1C  1683               	bsf	3,5	;RP0=1, select bank1
  3265  0E1D  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3266  0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  3267  0E1F  084C               	movf	?___flsub+1,w
  3268  0E20  1683               	bsf	3,5	;RP0=1, select bank1
  3269  0E21  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3270  0E22  1283               	bcf	3,5	;RP0=0, select bank0
  3271  0E23  084B               	movf	?___flsub,w
  3272  0E24  1683               	bsf	3,5	;RP0=1, select bank1
  3273  0E25  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3274                           
  3275                           ;SlaveLiofilizadorVer1.c: 804:        if(Temp<700)
  3276  0E26  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3277  0E27  1283               	bcf	3,5	;RP0=0, select bank0
  3278  0E28  00A3               	movwf	___flge@ff1+3
  3279  0E29  1683               	bsf	3,5	;RP0=1, select bank1
  3280  0E2A  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3281  0E2B  1283               	bcf	3,5	;RP0=0, select bank0
  3282  0E2C  00A2               	movwf	___flge@ff1+2
  3283  0E2D  1683               	bsf	3,5	;RP0=1, select bank1
  3284  0E2E  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3285  0E2F  1283               	bcf	3,5	;RP0=0, select bank0
  3286  0E30  00A1               	movwf	___flge@ff1+1
  3287  0E31  1683               	bsf	3,5	;RP0=1, select bank1
  3288  0E32  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3289  0E33  1283               	bcf	3,5	;RP0=0, select bank0
  3290  0E34  00A0               	movwf	___flge@ff1
  3291  0E35  3044               	movlw	68
  3292  0E36  00A7               	movwf	___flge@ff2+3
  3293  0E37  302F               	movlw	47
  3294  0E38  00A6               	movwf	___flge@ff2+2
  3295  0E39  3000               	movlw	0
  3296  0E3A  00A5               	movwf	___flge@ff2+1
  3297  0E3B  3000               	movlw	0
  3298  0E3C  00A4               	movwf	___flge@ff2
  3299  0E3D  160A  118A  2073  120A  158A  	fcall	___flge
  3300  0E42  1803               	btfsc	3,0
  3301  0E43  2E4D               	goto	l5105
  3302                           
  3303                           ;SlaveLiofilizadorVer1.c: 805:          {;SlaveLiofilizadorVer1.c: 806:          Vaccum0
      +                          =Temp;
  3304  0E44  1683               	bsf	3,5	;RP0=1, select bank1
  3305  0E45  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3306  0E46  00D0               	movwf	(_Vaccum0+3)^(0+128)
  3307  0E47  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3308  0E48  00CF               	movwf	(_Vaccum0+2)^(0+128)
  3309  0E49  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3310  0E4A  00CE               	movwf	(_Vaccum0+1)^(0+128)
  3311  0E4B  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3312  0E4C  2EC0               	goto	L3
  3313  0E4D                     l5105:	
  3314                           ;SlaveLiofilizadorVer1.c: 807:          }
  3315                           
  3316                           
  3317                           ;SlaveLiofilizadorVer1.c: 809:          {;SlaveLiofilizadorVer1.c: 810:          Vaccum0
      +                          =Temp+((Temp-700)*3.05);
  3318  0E4D  3040               	movlw	64
  3319  0E4E  00CE               	movwf	___flmul@b+3
  3320  0E4F  3043               	movlw	67
  3321  0E50  00CD               	movwf	___flmul@b+2
  3322  0E51  3033               	movlw	51
  3323  0E52  00CC               	movwf	___flmul@b+1
  3324  0E53  3033               	movlw	51
  3325  0E54  00CB               	movwf	___flmul@b
  3326  0E55  30C4               	movlw	196
  3327  0E56  00BA               	movwf	___fladd@b+3
  3328  0E57  302F               	movlw	47
  3329  0E58  00B9               	movwf	___fladd@b+2
  3330  0E59  3000               	movlw	0
  3331  0E5A  00B8               	movwf	___fladd@b+1
  3332  0E5B  3000               	movlw	0
  3333  0E5C  00B7               	movwf	___fladd@b
  3334  0E5D  1683               	bsf	3,5	;RP0=1, select bank1
  3335  0E5E  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3336  0E5F  1283               	bcf	3,5	;RP0=0, select bank0
  3337  0E60  00BE               	movwf	___fladd@a+3
  3338  0E61  1683               	bsf	3,5	;RP0=1, select bank1
  3339  0E62  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3340  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  3341  0E64  00BD               	movwf	___fladd@a+2
  3342  0E65  1683               	bsf	3,5	;RP0=1, select bank1
  3343  0E66  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3344  0E67  1283               	bcf	3,5	;RP0=0, select bank0
  3345  0E68  00BC               	movwf	___fladd@a+1
  3346  0E69  1683               	bsf	3,5	;RP0=1, select bank1
  3347  0E6A  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3348  0E6B  1283               	bcf	3,5	;RP0=0, select bank0
  3349  0E6C  00BB               	movwf	___fladd@a
  3350  0E6D  120A  158A  230A  120A  158A  	fcall	___fladd
  3351  0E72  083A               	movf	?___fladd+3,w
  3352  0E73  00D2               	movwf	___flmul@a+3
  3353  0E74  0839               	movf	?___fladd+2,w
  3354  0E75  00D1               	movwf	___flmul@a+2
  3355  0E76  0838               	movf	?___fladd+1,w
  3356  0E77  00D0               	movwf	___flmul@a+1
  3357  0E78  0837               	movf	?___fladd,w
  3358  0E79  00CF               	movwf	___flmul@a
  3359  0E7A  120A  118A  2383  120A  158A  	fcall	___flmul
  3360  0E7F  084E               	movf	?___flmul+3,w
  3361  0E80  1683               	bsf	3,5	;RP0=1, select bank1
  3362  0E81  00A3               	movwf	(_MediaPlacaVaccum$2372+3)^(0+128)
  3363  0E82  1283               	bcf	3,5	;RP0=0, select bank0
  3364  0E83  084D               	movf	?___flmul+2,w
  3365  0E84  1683               	bsf	3,5	;RP0=1, select bank1
  3366  0E85  00A2               	movwf	(_MediaPlacaVaccum$2372+2)^(0+128)
  3367  0E86  1283               	bcf	3,5	;RP0=0, select bank0
  3368  0E87  084C               	movf	?___flmul+1,w
  3369  0E88  1683               	bsf	3,5	;RP0=1, select bank1
  3370  0E89  00A1               	movwf	(_MediaPlacaVaccum$2372+1)^(0+128)
  3371  0E8A  1283               	bcf	3,5	;RP0=0, select bank0
  3372  0E8B  084B               	movf	?___flmul,w
  3373  0E8C  1683               	bsf	3,5	;RP0=1, select bank1
  3374  0E8D  00A0               	movwf	_MediaPlacaVaccum$2372^(0+128)
  3375                           
  3376                           ;SlaveLiofilizadorVer1.c: 809:          {;SlaveLiofilizadorVer1.c: 810:          Vaccum0
      +                          =Temp+((Temp-700)*3.05);
  3377  0E8E  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3378  0E8F  1283               	bcf	3,5	;RP0=0, select bank0
  3379  0E90  00BA               	movwf	___fladd@b+3
  3380  0E91  1683               	bsf	3,5	;RP0=1, select bank1
  3381  0E92  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3382  0E93  1283               	bcf	3,5	;RP0=0, select bank0
  3383  0E94  00B9               	movwf	___fladd@b+2
  3384  0E95  1683               	bsf	3,5	;RP0=1, select bank1
  3385  0E96  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3386  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  3387  0E98  00B8               	movwf	___fladd@b+1
  3388  0E99  1683               	bsf	3,5	;RP0=1, select bank1
  3389  0E9A  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3390  0E9B  1283               	bcf	3,5	;RP0=0, select bank0
  3391  0E9C  00B7               	movwf	___fladd@b
  3392  0E9D  1683               	bsf	3,5	;RP0=1, select bank1
  3393  0E9E  0823               	movf	(_MediaPlacaVaccum$2372+3)^(0+128),w
  3394  0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  3395  0EA0  00BE               	movwf	___fladd@a+3
  3396  0EA1  1683               	bsf	3,5	;RP0=1, select bank1
  3397  0EA2  0822               	movf	(_MediaPlacaVaccum$2372+2)^(0+128),w
  3398  0EA3  1283               	bcf	3,5	;RP0=0, select bank0
  3399  0EA4  00BD               	movwf	___fladd@a+2
  3400  0EA5  1683               	bsf	3,5	;RP0=1, select bank1
  3401  0EA6  0821               	movf	(_MediaPlacaVaccum$2372+1)^(0+128),w
  3402  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  3403  0EA8  00BC               	movwf	___fladd@a+1
  3404  0EA9  1683               	bsf	3,5	;RP0=1, select bank1
  3405  0EAA  0820               	movf	_MediaPlacaVaccum$2372^(0+128),w
  3406  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  3407  0EAC  00BB               	movwf	___fladd@a
  3408  0EAD  120A  158A  230A  120A  158A  	fcall	___fladd
  3409  0EB2  083A               	movf	?___fladd+3,w
  3410  0EB3  1683               	bsf	3,5	;RP0=1, select bank1
  3411  0EB4  00D0               	movwf	(_Vaccum0+3)^(0+128)
  3412  0EB5  1283               	bcf	3,5	;RP0=0, select bank0
  3413  0EB6  0839               	movf	?___fladd+2,w
  3414  0EB7  1683               	bsf	3,5	;RP0=1, select bank1
  3415  0EB8  00CF               	movwf	(_Vaccum0+2)^(0+128)
  3416  0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  3417  0EBA  0838               	movf	?___fladd+1,w
  3418  0EBB  1683               	bsf	3,5	;RP0=1, select bank1
  3419  0EBC  00CE               	movwf	(_Vaccum0+1)^(0+128)
  3420  0EBD  1283               	bcf	3,5	;RP0=0, select bank0
  3421  0EBE  0837               	movf	?___fladd,w
  3422  0EBF  1683               	bsf	3,5	;RP0=1, select bank1
  3423  0EC0                     L3:
  3424  0EC0  00CD               	movwf	_Vaccum0^(0+128)
  3425                           
  3426                           ;SlaveLiofilizadorVer1.c: 813:        if(Vaccum0>2000) Vaccum0=2000;
  3427  0EC1  3044               	movlw	68
  3428  0EC2  1283               	bcf	3,5	;RP0=0, select bank0
  3429  0EC3  00A3               	movwf	___flge@ff1+3
  3430  0EC4  30FA               	movlw	250
  3431  0EC5  00A2               	movwf	___flge@ff1+2
  3432  0EC6  3000               	movlw	0
  3433  0EC7  00A1               	movwf	___flge@ff1+1
  3434  0EC8  3000               	movlw	0
  3435  0EC9  00A0               	movwf	___flge@ff1
  3436  0ECA  1683               	bsf	3,5	;RP0=1, select bank1
  3437  0ECB  0850               	movf	(_Vaccum0+3)^(0+128),w
  3438  0ECC  1283               	bcf	3,5	;RP0=0, select bank0
  3439  0ECD  00A7               	movwf	___flge@ff2+3
  3440  0ECE  1683               	bsf	3,5	;RP0=1, select bank1
  3441  0ECF  084F               	movf	(_Vaccum0+2)^(0+128),w
  3442  0ED0  1283               	bcf	3,5	;RP0=0, select bank0
  3443  0ED1  00A6               	movwf	___flge@ff2+2
  3444  0ED2  1683               	bsf	3,5	;RP0=1, select bank1
  3445  0ED3  084E               	movf	(_Vaccum0+1)^(0+128),w
  3446  0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  3447  0ED5  00A5               	movwf	___flge@ff2+1
  3448  0ED6  1683               	bsf	3,5	;RP0=1, select bank1
  3449  0ED7  084D               	movf	_Vaccum0^(0+128),w
  3450  0ED8  1283               	bcf	3,5	;RP0=0, select bank0
  3451  0ED9  00A4               	movwf	___flge@ff2
  3452  0EDA  160A  118A  2073  120A  158A  	fcall	___flge
  3453  0EDF  1803               	btfsc	3,0
  3454  0EE0  0008               	return
  3455  0EE1  3044               	movlw	68
  3456  0EE2  1683               	bsf	3,5	;RP0=1, select bank1
  3457  0EE3  00D0               	movwf	(_Vaccum0+3)^(0+128)
  3458  0EE4  30FA               	movlw	250
  3459  0EE5  00CF               	movwf	(_Vaccum0+2)^(0+128)
  3460  0EE6  3000               	movlw	0
  3461  0EE7  00CE               	movwf	(_Vaccum0+1)^(0+128)
  3462  0EE8  3000               	movlw	0
  3463  0EE9  00CD               	movwf	_Vaccum0^(0+128)
  3464  0EEA  0008               	return
  3465  0EEB                     l439:	
  3466                           ;SlaveLiofilizadorVer1.c: 819:      else
  3467                           
  3468                           
  3469                           ;SlaveLiofilizadorVer1.c: 820:        {;SlaveLiofilizadorVer1.c: 821:        ADCON1bits.
      +                          VCFG0=0;
  3470  0EEB  121F               	bcf	31,4	;volatile
  3471                           
  3472                           ;SlaveLiofilizadorVer1.c: 822:        ADCON1bits.VCFG1=0;
  3473  0EEC  129F               	bcf	31,5	;volatile
  3474                           
  3475                           ;SlaveLiofilizadorVer1.c: 823:        ADCON0bits.CHS=canal;
  3476  0EED  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3477  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  3478  0EEF  00E5               	movwf	??_MediaPlacaVaccum
  3479  0EF0  0DE5               	rlf	??_MediaPlacaVaccum,f
  3480  0EF1  0DE5               	rlf	??_MediaPlacaVaccum,f
  3481  0EF2  081F               	movf	31,w	;volatile
  3482  0EF3  0665               	xorwf	??_MediaPlacaVaccum,w
  3483  0EF4  39C3               	andlw	-61
  3484  0EF5  0665               	xorwf	??_MediaPlacaVaccum,w
  3485  0EF6  009F               	movwf	31	;volatile
  3486                           
  3487                           ;SlaveLiofilizadorVer1.c: 824:        my_delay_ms(1);
  3488  0EF7  3000               	movlw	0
  3489  0EF8  00A3               	movwf	my_delay_ms@time+3
  3490  0EF9  3000               	movlw	0
  3491  0EFA  00A2               	movwf	my_delay_ms@time+2
  3492  0EFB  3000               	movlw	0
  3493  0EFC  00A1               	movwf	my_delay_ms@time+1
  3494  0EFD  3001               	movlw	1
  3495  0EFE  00A0               	movwf	my_delay_ms@time
  3496  0EFF  160A  158A  24CD  120A  158A  	fcall	_my_delay_ms
  3497                           
  3498                           ;SlaveLiofilizadorVer1.c: 825:        Temp=0;
  3499  0F04  3000               	movlw	0
  3500  0F05  1683               	bsf	3,5	;RP0=1, select bank1
  3501  0F06  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3502  0F07  3000               	movlw	0
  3503  0F08  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3504  0F09  3000               	movlw	0
  3505  0F0A  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3506  0F0B  3000               	movlw	0
  3507  0F0C  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3508                           
  3509                           ;SlaveLiofilizadorVer1.c: 827:        for(i=1;i<15;i++)
  3510  0F0D  3001               	movlw	1
  3511  0F0E  00A5               	movwf	MediaPlacaVaccum@i^(0+128)
  3512  0F0F  3000               	movlw	0
  3513  0F10  00A6               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3514  0F11                     l5123:
  3515                           
  3516                           ;SlaveLiofilizadorVer1.c: 828:            {;SlaveLiofilizadorVer1.c: 831:            Tem
      +                          p+=ADC_Media_10bits(canal);
  3517  0F11  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3518  0F12  160A  158A  26CF  120A  158A  	fcall	_ADC_Media_10bits
  3519  0F17  0831               	movf	?_ADC_Media_10bits+3,w
  3520  0F18  00BA               	movwf	___fladd@b+3
  3521  0F19  0830               	movf	?_ADC_Media_10bits+2,w
  3522  0F1A  00B9               	movwf	___fladd@b+2
  3523  0F1B  082F               	movf	?_ADC_Media_10bits+1,w
  3524  0F1C  00B8               	movwf	___fladd@b+1
  3525  0F1D  082E               	movf	?_ADC_Media_10bits,w
  3526  0F1E  00B7               	movwf	___fladd@b
  3527  0F1F  1683               	bsf	3,5	;RP0=1, select bank1
  3528  0F20  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3529  0F21  1283               	bcf	3,5	;RP0=0, select bank0
  3530  0F22  00BE               	movwf	___fladd@a+3
  3531  0F23  1683               	bsf	3,5	;RP0=1, select bank1
  3532  0F24  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3533  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  3534  0F26  00BD               	movwf	___fladd@a+2
  3535  0F27  1683               	bsf	3,5	;RP0=1, select bank1
  3536  0F28  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3537  0F29  1283               	bcf	3,5	;RP0=0, select bank0
  3538  0F2A  00BC               	movwf	___fladd@a+1
  3539  0F2B  1683               	bsf	3,5	;RP0=1, select bank1
  3540  0F2C  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3541  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  3542  0F2E  00BB               	movwf	___fladd@a
  3543  0F2F  120A  158A  230A  120A  158A  	fcall	___fladd
  3544  0F34  083A               	movf	?___fladd+3,w
  3545  0F35  1683               	bsf	3,5	;RP0=1, select bank1
  3546  0F36  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3547  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  3548  0F38  0839               	movf	?___fladd+2,w
  3549  0F39  1683               	bsf	3,5	;RP0=1, select bank1
  3550  0F3A  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3551  0F3B  1283               	bcf	3,5	;RP0=0, select bank0
  3552  0F3C  0838               	movf	?___fladd+1,w
  3553  0F3D  1683               	bsf	3,5	;RP0=1, select bank1
  3554  0F3E  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3555  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  3556  0F40  0837               	movf	?___fladd,w
  3557  0F41  1683               	bsf	3,5	;RP0=1, select bank1
  3558  0F42  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3559                           
  3560                           ;SlaveLiofilizadorVer1.c: 832:            if(Package_Usart_is_for_me()==1) break;
  3561  0F43  160A  158A  21DC  120A  158A  	fcall	_Package_Usart_is_for_me
  3562  0F48  3A01               	xorlw	1
  3563  0F49  1903               	btfsc	3,2
  3564  0F4A  2F59               	goto	l5131
  3565                           
  3566                           ;SlaveLiofilizadorVer1.c: 833:            }
  3567  0F4B  3001               	movlw	1
  3568  0F4C  1683               	bsf	3,5	;RP0=1, select bank1
  3569  0F4D  07A5               	addwf	MediaPlacaVaccum@i^(0+128),f
  3570  0F4E  1803               	skipnc
  3571  0F4F  0AA6               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3572  0F50  3000               	movlw	0
  3573  0F51  07A6               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3574  0F52  3000               	movlw	0
  3575  0F53  0226               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3576  0F54  300F               	movlw	15
  3577  0F55  1903               	skipnz
  3578  0F56  0225               	subwf	MediaPlacaVaccum@i^(0+128),w
  3579  0F57  1C03               	skipc
  3580  0F58  2F11               	goto	l5123
  3581  0F59                     l5131:
  3582                           
  3583                           ;SlaveLiofilizadorVer1.c: 834:         if(i<10)
  3584  0F59  3000               	movlw	0
  3585  0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  3586  0F5B  0226               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3587  0F5C  300A               	movlw	10
  3588  0F5D  1903               	skipnz
  3589  0F5E  0225               	subwf	MediaPlacaVaccum@i^(0+128),w
  3590  0F5F  1C03               	btfss	3,0
  3591  0F60  0008               	return
  3592                           
  3593                           ;SlaveLiofilizadorVer1.c: 840:        if(i==15)
  3594  0F61  300F               	movlw	15
  3595  0F62  0625               	xorwf	MediaPlacaVaccum@i^(0+128),w
  3596  0F63  0426               	iorwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3597  0F64  1D03               	btfss	3,2
  3598  0F65  2F70               	goto	l5139
  3599                           
  3600                           ;SlaveLiofilizadorVer1.c: 841:          Temp/=(i-1);
  3601  0F66  0825               	movf	MediaPlacaVaccum@i^(0+128),w
  3602  0F67  3EFF               	addlw	255
  3603  0F68  1283               	bcf	3,5	;RP0=0, select bank0
  3604  0F69  00A0               	movwf	___xxtofl@val
  3605  0F6A  1683               	bsf	3,5	;RP0=1, select bank1
  3606  0F6B  0826               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3607  0F6C  1803               	skipnc
  3608  0F6D  3E01               	addlw	1
  3609  0F6E  3EFF               	addlw	255
  3610  0F6F  2F75               	goto	L4
  3611  0F70                     l5139:
  3612                           
  3613                           ;SlaveLiofilizadorVer1.c: 843:          Temp/=(i);
  3614  0F70  0825               	movf	MediaPlacaVaccum@i^(0+128),w
  3615  0F71  1283               	bcf	3,5	;RP0=0, select bank0
  3616  0F72  00A0               	movwf	___xxtofl@val
  3617  0F73  1683               	bsf	3,5	;RP0=1, select bank1
  3618  0F74  0826               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3619  0F75                     L4:
  3620  0F75  1283               	bcf	3,5	;RP0=0, select bank0
  3621  0F76  00A1               	movwf	___xxtofl@val+1
  3622  0F77  01A2               	clrf	___xxtofl@val+2
  3623  0F78  01A3               	clrf	___xxtofl@val+3
  3624  0F79  3000               	movlw	0
  3625  0F7A  160A  118A  2106  120A  158A  	fcall	___xxtofl
  3626  0F7F  0823               	movf	?___xxtofl+3,w
  3627  0F80  00B1               	movwf	___fldiv@a+3
  3628  0F81  0822               	movf	?___xxtofl+2,w
  3629  0F82  00B0               	movwf	___fldiv@a+2
  3630  0F83  0821               	movf	?___xxtofl+1,w
  3631  0F84  00AF               	movwf	___fldiv@a+1
  3632  0F85  0820               	movf	?___xxtofl,w
  3633  0F86  00AE               	movwf	___fldiv@a
  3634  0F87  1683               	bsf	3,5	;RP0=1, select bank1
  3635  0F88  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3636  0F89  1283               	bcf	3,5	;RP0=0, select bank0
  3637  0F8A  00B5               	movwf	___fldiv@b+3
  3638  0F8B  1683               	bsf	3,5	;RP0=1, select bank1
  3639  0F8C  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3640  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  3641  0F8E  00B4               	movwf	___fldiv@b+2
  3642  0F8F  1683               	bsf	3,5	;RP0=1, select bank1
  3643  0F90  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3644  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  3645  0F92  00B3               	movwf	___fldiv@b+1
  3646  0F93  1683               	bsf	3,5	;RP0=1, select bank1
  3647  0F94  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3648  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3649  0F96  00B2               	movwf	___fldiv@b
  3650  0F97  120A  158A  2169  120A  158A  	fcall	___fldiv
  3651  0F9C  0831               	movf	?___fldiv+3,w
  3652  0F9D  1683               	bsf	3,5	;RP0=1, select bank1
  3653  0F9E  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3654  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  3655  0FA0  0830               	movf	?___fldiv+2,w
  3656  0FA1  1683               	bsf	3,5	;RP0=1, select bank1
  3657  0FA2  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3658  0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  3659  0FA4  082F               	movf	?___fldiv+1,w
  3660  0FA5  1683               	bsf	3,5	;RP0=1, select bank1
  3661  0FA6  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3662  0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  3663  0FA8  082E               	movf	?___fldiv,w
  3664  0FA9  1683               	bsf	3,5	;RP0=1, select bank1
  3665  0FAA  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3666                           
  3667                           ;SlaveLiofilizadorVer1.c: 845:         Tensao1 =Temp*0.558296;
  3668  0FAB  303F               	movlw	63
  3669  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  3670  0FAD  00CE               	movwf	___flmul@b+3
  3671  0FAE  300E               	movlw	14
  3672  0FAF  00CD               	movwf	___flmul@b+2
  3673  0FB0  30EC               	movlw	236
  3674  0FB1  00CC               	movwf	___flmul@b+1
  3675  0FB2  307D               	movlw	125
  3676  0FB3  00CB               	movwf	___flmul@b
  3677  0FB4  1683               	bsf	3,5	;RP0=1, select bank1
  3678  0FB5  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3679  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  3680  0FB7  00D2               	movwf	___flmul@a+3
  3681  0FB8  1683               	bsf	3,5	;RP0=1, select bank1
  3682  0FB9  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3683  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  3684  0FBB  00D1               	movwf	___flmul@a+2
  3685  0FBC  1683               	bsf	3,5	;RP0=1, select bank1
  3686  0FBD  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3687  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  3688  0FBF  00D0               	movwf	___flmul@a+1
  3689  0FC0  1683               	bsf	3,5	;RP0=1, select bank1
  3690  0FC1  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3691  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  3692  0FC3  00CF               	movwf	___flmul@a
  3693  0FC4  120A  118A  2383  120A  158A  	fcall	___flmul
  3694  0FC9  084E               	movf	?___flmul+3,w
  3695  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  3696  0FCB  00CC               	movwf	(_Tensao1+3)^(0+128)
  3697  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  3698  0FCD  084D               	movf	?___flmul+2,w
  3699  0FCE  1683               	bsf	3,5	;RP0=1, select bank1
  3700  0FCF  00CB               	movwf	(_Tensao1+2)^(0+128)
  3701  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  3702  0FD1  084C               	movf	?___flmul+1,w
  3703  0FD2  1683               	bsf	3,5	;RP0=1, select bank1
  3704  0FD3  00CA               	movwf	(_Tensao1+1)^(0+128)
  3705  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  3706  0FD5  084B               	movf	?___flmul,w
  3707  0FD6  1683               	bsf	3,5	;RP0=1, select bank1
  3708  0FD7  00C9               	movwf	_Tensao1^(0+128)
  3709                           
  3710                           ;SlaveLiofilizadorVer1.c: 846:         if(Tensao1<15) Tensao1=0;
  3711  0FD8  084C               	movf	(_Tensao1+3)^(0+128),w
  3712  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  3713  0FDA  00A3               	movwf	___flge@ff1+3
  3714  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  3715  0FDC  084B               	movf	(_Tensao1+2)^(0+128),w
  3716  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  3717  0FDE  00A2               	movwf	___flge@ff1+2
  3718  0FDF  1683               	bsf	3,5	;RP0=1, select bank1
  3719  0FE0  084A               	movf	(_Tensao1+1)^(0+128),w
  3720  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  3721  0FE2  00A1               	movwf	___flge@ff1+1
  3722  0FE3  1683               	bsf	3,5	;RP0=1, select bank1
  3723  0FE4  0849               	movf	_Tensao1^(0+128),w
  3724  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  3725  0FE6  00A0               	movwf	___flge@ff1
  3726  0FE7  3041               	movlw	65
  3727  0FE8  00A7               	movwf	___flge@ff2+3
  3728  0FE9  3070               	movlw	112
  3729  0FEA  00A6               	movwf	___flge@ff2+2
  3730  0FEB  3000               	movlw	0
  3731  0FEC  00A5               	movwf	___flge@ff2+1
  3732  0FED  3000               	movlw	0
  3733  0FEE  00A4               	movwf	___flge@ff2
  3734  0FEF  160A  118A  2073  120A  158A  	fcall	___flge
  3735  0FF4  1803               	btfsc	3,0
  3736  0FF5  0008               	return
  3737  0FF6  3000               	movlw	0
  3738  0FF7  1683               	bsf	3,5	;RP0=1, select bank1
  3739  0FF8  00CC               	movwf	(_Tensao1+3)^(0+128)
  3740  0FF9  3000               	movlw	0
  3741  0FFA  00CB               	movwf	(_Tensao1+2)^(0+128)
  3742  0FFB  3000               	movlw	0
  3743  0FFC  00CA               	movwf	(_Tensao1+1)^(0+128)
  3744  0FFD  3000               	movlw	0
  3745  0FFE  00C9               	movwf	_Tensao1^(0+128)
  3746  0FFF  0008               	return
  3747  1000                     __end_of_MediaPlacaVaccum:
  3748                           
  3749                           	psect	text3
  3750  1A30                     __ptext3:	
  3751 ;; *************** function ___flsub *****************
  3752 ;; Defined at:
  3753 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;  a               4   43[BANK0 ] void 
  3756 ;;  b               4   47[BANK0 ] void 
  3757 ;; Auto vars:     Size  Location     Type
  3758 ;;		None
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  4   43[BANK0 ] void 
  3761 ;; Registers used:
  3762 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3763 ;; Tracked objects:
  3764 ;;		On entry : 300/0
  3765 ;;		On exit  : 300/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3768 ;;      Params:         0       8       0       0       0
  3769 ;;      Locals:         0       0       0       0       0
  3770 ;;      Temps:          0       0       0       0       0
  3771 ;;      Totals:         0       8       0       0       0
  3772 ;;Total ram usage:        8 bytes
  3773 ;; Hardware stack levels used: 1
  3774 ;; Hardware stack levels required when called: 2
  3775 ;; This function calls:
  3776 ;;		___fladd
  3777 ;; This function is called by:
  3778 ;;		_MediaPlacaVaccum
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           
  3783                           ;psect for function ___flsub
  3784  1A30                     ___flsub:
  3785                           
  3786                           ;incstack = 0
  3787                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3788  1A30  3080               	movlw	128
  3789  1A31  06CE               	xorwf	___flsub@a+3,f
  3790  1A32  0852               	movf	___flsub@b+3,w
  3791  1A33  00BA               	movwf	___fladd@b+3
  3792  1A34  0851               	movf	___flsub@b+2,w
  3793  1A35  00B9               	movwf	___fladd@b+2
  3794  1A36  0850               	movf	___flsub@b+1,w
  3795  1A37  00B8               	movwf	___fladd@b+1
  3796  1A38  084F               	movf	___flsub@b,w
  3797  1A39  00B7               	movwf	___fladd@b
  3798  1A3A  084E               	movf	___flsub@a+3,w
  3799  1A3B  00BE               	movwf	___fladd@a+3
  3800  1A3C  084D               	movf	___flsub@a+2,w
  3801  1A3D  00BD               	movwf	___fladd@a+2
  3802  1A3E  084C               	movf	___flsub@a+1,w
  3803  1A3F  00BC               	movwf	___fladd@a+1
  3804  1A40  084B               	movf	___flsub@a,w
  3805  1A41  00BB               	movwf	___fladd@a
  3806  1A42  120A  158A  230A   	fcall	___fladd
  3807  1A45  083A               	movf	?___fladd+3,w
  3808  1A46  00CE               	movwf	?___flsub+3
  3809  1A47  0839               	movf	?___fladd+2,w
  3810  1A48  00CD               	movwf	?___flsub+2
  3811  1A49  0838               	movf	?___fladd+1,w
  3812  1A4A  00CC               	movwf	?___flsub+1
  3813  1A4B  0837               	movf	?___fladd,w
  3814  1A4C  00CB               	movwf	?___flsub
  3815  1A4D  0008               	return
  3816  1A4E                     __end_of___flsub:
  3817                           
  3818                           	psect	text4
  3819  0B0A                     __ptext4:	
  3820 ;; *************** function ___fladd *****************
  3821 ;; Defined at:
  3822 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;  b               4   23[BANK0 ] void 
  3825 ;;  a               4   27[BANK0 ] void 
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;  grs             1   42[BANK0 ] unsigned char 
  3828 ;;  bexp            1   41[BANK0 ] unsigned char 
  3829 ;;  aexp            1   40[BANK0 ] unsigned char 
  3830 ;;  signs           1   39[BANK0 ] unsigned char 
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  4   23[BANK0 ] unsigned char 
  3833 ;; Registers used:
  3834 ;;		wreg, status,2, status,0, btemp+1
  3835 ;; Tracked objects:
  3836 ;;		On entry : 300/0
  3837 ;;		On exit  : 300/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3840 ;;      Params:         0       8       0       0       0
  3841 ;;      Locals:         0       4       0       0       0
  3842 ;;      Temps:          0       8       0       0       0
  3843 ;;      Totals:         0      20       0       0       0
  3844 ;;Total ram usage:       20 bytes
  3845 ;; Hardware stack levels used: 1
  3846 ;; Hardware stack levels required when called: 1
  3847 ;; This function calls:
  3848 ;;		Nothing
  3849 ;; This function is called by:
  3850 ;;		_MediaPlacaVaccum
  3851 ;;		___flsub
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855                           
  3856                           ;psect for function ___fladd
  3857  0B0A                     ___fladd:
  3858                           
  3859                           ;incstack = 0
  3860                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3861  0B0A  083A               	movf	___fladd@b+3,w
  3862  0B0B  3980               	andlw	128
  3863  0B0C  00BF               	movwf	??___fladd
  3864  0B0D  083F               	movf	??___fladd,w
  3865  0B0E  00C7               	movwf	___fladd@signs
  3866  0B0F  083A               	movf	___fladd@b+3,w
  3867  0B10  00BF               	movwf	??___fladd
  3868  0B11  073F               	addwf	??___fladd,w
  3869  0B12  00C0               	movwf	??___fladd+1
  3870  0B13  0840               	movf	??___fladd+1,w
  3871  0B14  00C9               	movwf	___fladd@bexp
  3872  0B15  1BB9               	btfsc	___fladd@b+2,7
  3873  0B16  1449               	bsf	___fladd@bexp,0
  3874  0B17  0849               	movf	___fladd@bexp,w
  3875  0B18  1903               	btfsc	3,2
  3876  0B19  2B28               	goto	l4009
  3877  0B1A  0A49               	incf	___fladd@bexp,w
  3878  0B1B  1D03               	btfss	3,2
  3879  0B1C  2B25               	goto	l4005
  3880  0B1D  3000               	movlw	0
  3881  0B1E  00BA               	movwf	___fladd@b+3
  3882  0B1F  3000               	movlw	0
  3883  0B20  00B9               	movwf	___fladd@b+2
  3884  0B21  3000               	movlw	0
  3885  0B22  00B8               	movwf	___fladd@b+1
  3886  0B23  3000               	movlw	0
  3887  0B24  00B7               	movwf	___fladd@b
  3888  0B25                     l4005:
  3889  0B25  17B9               	bsf	___fladd@b+2,7
  3890  0B26  01BA               	clrf	___fladd@b+3
  3891  0B27  2B30               	goto	l4011
  3892  0B28                     l4009:
  3893  0B28  3000               	movlw	0
  3894  0B29  00BA               	movwf	___fladd@b+3
  3895  0B2A  3000               	movlw	0
  3896  0B2B  00B9               	movwf	___fladd@b+2
  3897  0B2C  3000               	movlw	0
  3898  0B2D  00B8               	movwf	___fladd@b+1
  3899  0B2E  3000               	movlw	0
  3900  0B2F  00B7               	movwf	___fladd@b
  3901  0B30                     l4011:
  3902  0B30  083E               	movf	___fladd@a+3,w
  3903  0B31  3980               	andlw	128
  3904  0B32  00BF               	movwf	??___fladd
  3905  0B33  083F               	movf	??___fladd,w
  3906  0B34  00C8               	movwf	___fladd@aexp
  3907  0B35  0848               	movf	___fladd@aexp,w
  3908  0B36  0647               	xorwf	___fladd@signs,w
  3909  0B37  1D03               	btfss	3,2
  3910  0B38  1747               	bsf	___fladd@signs,6
  3911  0B39  083E               	movf	___fladd@a+3,w
  3912  0B3A  00BF               	movwf	??___fladd
  3913  0B3B  073F               	addwf	??___fladd,w
  3914  0B3C  00C0               	movwf	??___fladd+1
  3915  0B3D  0840               	movf	??___fladd+1,w
  3916  0B3E  00C8               	movwf	___fladd@aexp
  3917  0B3F  1BBD               	btfsc	___fladd@a+2,7
  3918  0B40  1448               	bsf	___fladd@aexp,0
  3919  0B41  0848               	movf	___fladd@aexp,w
  3920  0B42  1903               	btfsc	3,2
  3921  0B43  2B52               	goto	l4033
  3922  0B44  0A48               	incf	___fladd@aexp,w
  3923  0B45  1D03               	btfss	3,2
  3924  0B46  2B4F               	goto	l4029
  3925  0B47  3000               	movlw	0
  3926  0B48  00BE               	movwf	___fladd@a+3
  3927  0B49  3000               	movlw	0
  3928  0B4A  00BD               	movwf	___fladd@a+2
  3929  0B4B  3000               	movlw	0
  3930  0B4C  00BC               	movwf	___fladd@a+1
  3931  0B4D  3000               	movlw	0
  3932  0B4E  00BB               	movwf	___fladd@a
  3933  0B4F                     l4029:
  3934  0B4F  17BD               	bsf	___fladd@a+2,7
  3935  0B50  01BE               	clrf	___fladd@a+3
  3936  0B51  2B5A               	goto	l1290
  3937  0B52                     l4033:
  3938  0B52  3000               	movlw	0
  3939  0B53  00BE               	movwf	___fladd@a+3
  3940  0B54  3000               	movlw	0
  3941  0B55  00BD               	movwf	___fladd@a+2
  3942  0B56  3000               	movlw	0
  3943  0B57  00BC               	movwf	___fladd@a+1
  3944  0B58  3000               	movlw	0
  3945  0B59  00BB               	movwf	___fladd@a
  3946  0B5A                     l1290:
  3947  0B5A  0849               	movf	___fladd@bexp,w
  3948  0B5B  0248               	subwf	___fladd@aexp,w
  3949  0B5C  1803               	skipnc
  3950  0B5D  2BA0               	goto	l4069
  3951  0B5E  1F47               	btfss	___fladd@signs,6
  3952  0B5F  2B64               	goto	l4039
  3953  0B60  3080               	movlw	128
  3954  0B61  00BF               	movwf	??___fladd
  3955  0B62  083F               	movf	??___fladd,w
  3956  0B63  06C7               	xorwf	___fladd@signs,f
  3957  0B64                     l4039:
  3958  0B64  0849               	movf	___fladd@bexp,w
  3959  0B65  00BF               	movwf	??___fladd
  3960  0B66  083F               	movf	??___fladd,w
  3961  0B67  00CA               	movwf	___fladd@grs
  3962  0B68  0848               	movf	___fladd@aexp,w
  3963  0B69  00BF               	movwf	??___fladd
  3964  0B6A  083F               	movf	??___fladd,w
  3965  0B6B  00C9               	movwf	___fladd@bexp
  3966  0B6C  084A               	movf	___fladd@grs,w
  3967  0B6D  00BF               	movwf	??___fladd
  3968  0B6E  083F               	movf	??___fladd,w
  3969  0B6F  00C8               	movwf	___fladd@aexp
  3970  0B70  0837               	movf	___fladd@b,w
  3971  0B71  00BF               	movwf	??___fladd
  3972  0B72  083F               	movf	??___fladd,w
  3973  0B73  00CA               	movwf	___fladd@grs
  3974  0B74  083B               	movf	___fladd@a,w
  3975  0B75  00BF               	movwf	??___fladd
  3976  0B76  083F               	movf	??___fladd,w
  3977  0B77  00B7               	movwf	___fladd@b
  3978  0B78  084A               	movf	___fladd@grs,w
  3979  0B79  00BF               	movwf	??___fladd
  3980  0B7A  083F               	movf	??___fladd,w
  3981  0B7B  00BB               	movwf	___fladd@a
  3982  0B7C  0838               	movf	___fladd@b+1,w
  3983  0B7D  00BF               	movwf	??___fladd
  3984  0B7E  083F               	movf	??___fladd,w
  3985  0B7F  00CA               	movwf	___fladd@grs
  3986  0B80  083C               	movf	___fladd@a+1,w
  3987  0B81  00BF               	movwf	??___fladd
  3988  0B82  083F               	movf	??___fladd,w
  3989  0B83  00B8               	movwf	___fladd@b+1
  3990  0B84  084A               	movf	___fladd@grs,w
  3991  0B85  00BF               	movwf	??___fladd
  3992  0B86  083F               	movf	??___fladd,w
  3993  0B87  00BC               	movwf	___fladd@a+1
  3994  0B88  0839               	movf	___fladd@b+2,w
  3995  0B89  00BF               	movwf	??___fladd
  3996  0B8A  083F               	movf	??___fladd,w
  3997  0B8B  00CA               	movwf	___fladd@grs
  3998  0B8C  083D               	movf	___fladd@a+2,w
  3999  0B8D  00BF               	movwf	??___fladd
  4000  0B8E  083F               	movf	??___fladd,w
  4001  0B8F  00B9               	movwf	___fladd@b+2
  4002  0B90  084A               	movf	___fladd@grs,w
  4003  0B91  00BF               	movwf	??___fladd
  4004  0B92  083F               	movf	??___fladd,w
  4005  0B93  00BD               	movwf	___fladd@a+2
  4006  0B94  083A               	movf	___fladd@b+3,w
  4007  0B95  00BF               	movwf	??___fladd
  4008  0B96  083F               	movf	??___fladd,w
  4009  0B97  00CA               	movwf	___fladd@grs
  4010  0B98  083E               	movf	___fladd@a+3,w
  4011  0B99  00BF               	movwf	??___fladd
  4012  0B9A  083F               	movf	??___fladd,w
  4013  0B9B  00BA               	movwf	___fladd@b+3
  4014  0B9C  084A               	movf	___fladd@grs,w
  4015  0B9D  00BF               	movwf	??___fladd
  4016  0B9E  083F               	movf	??___fladd,w
  4017  0B9F  00BE               	movwf	___fladd@a+3
  4018  0BA0                     l4069:
  4019  0BA0  01CA               	clrf	___fladd@grs
  4020  0BA1  0848               	movf	___fladd@aexp,w
  4021  0BA2  00BF               	movwf	??___fladd
  4022  0BA3  01C0               	clrf	??___fladd+1
  4023  0BA4  0840               	movf	??___fladd+1,w
  4024  0BA5  00C2               	movwf	??___fladd+3
  4025  0BA6  0849               	movf	___fladd@bexp,w
  4026  0BA7  023F               	subwf	??___fladd,w
  4027  0BA8  00C1               	movwf	??___fladd+2
  4028  0BA9  1C03               	skipc
  4029  0BAA  03C2               	decf	??___fladd+3,f
  4030  0BAB  0842               	movf	??___fladd+3,w
  4031  0BAC  3A80               	xorlw	128
  4032  0BAD  00FF               	movwf	127
  4033  0BAE  3080               	movlw	128
  4034  0BAF  027F               	subwf	127,w
  4035  0BB0  1D03               	skipz
  4036  0BB1  2BB4               	goto	u3295
  4037  0BB2  301A               	movlw	26
  4038  0BB3  0241               	subwf	??___fladd+2,w
  4039  0BB4                     u3295:
  4040  0BB4  1C03               	skipc
  4041  0BB5  2BED               	goto	l4087
  4042  0BB6  1283               	bcf	3,5	;RP0=0, select bank0
  4043  0BB7  1303               	bcf	3,6	;RP1=0, select bank0
  4044  0BB8  083A               	movf	___fladd@b+3,w
  4045  0BB9  0439               	iorwf	___fladd@b+2,w
  4046  0BBA  0438               	iorwf	___fladd@b+1,w
  4047  0BBB  0437               	iorwf	___fladd@b,w
  4048  0BBC  1903               	btfsc	3,2
  4049  0BBD  2BC0               	goto	u3300
  4050  0BBE  3001               	movlw	1
  4051  0BBF  2BC1               	goto	u3310
  4052  0BC0                     u3300:
  4053  0BC0  3000               	movlw	0
  4054  0BC1                     u3310:
  4055  0BC1  00BF               	movwf	??___fladd
  4056  0BC2  083F               	movf	??___fladd,w
  4057  0BC3  00CA               	movwf	___fladd@grs
  4058  0BC4  3000               	movlw	0
  4059  0BC5  00BA               	movwf	___fladd@b+3
  4060  0BC6  3000               	movlw	0
  4061  0BC7  00B9               	movwf	___fladd@b+2
  4062  0BC8  3000               	movlw	0
  4063  0BC9  00B8               	movwf	___fladd@b+1
  4064  0BCA  3000               	movlw	0
  4065  0BCB  00B7               	movwf	___fladd@b
  4066  0BCC  0848               	movf	___fladd@aexp,w
  4067  0BCD  00BF               	movwf	??___fladd
  4068  0BCE  083F               	movf	??___fladd,w
  4069  0BCF  00C9               	movwf	___fladd@bexp
  4070  0BD0  2BF3               	goto	l1294
  4071  0BD1                     l1296:
  4072  0BD1  1C4A               	btfss	___fladd@grs,0
  4073  0BD2  2BDC               	goto	l4077
  4074  0BD3  084A               	movf	___fladd@grs,w
  4075  0BD4  00BF               	movwf	??___fladd
  4076  0BD5  1003               	clrc
  4077  0BD6  0C3F               	rrf	??___fladd,w
  4078  0BD7  3801               	iorlw	1
  4079  0BD8  00C0               	movwf	??___fladd+1
  4080  0BD9  0840               	movf	??___fladd+1,w
  4081  0BDA  00CA               	movwf	___fladd@grs
  4082  0BDB  2BDE               	goto	l4079
  4083  0BDC                     l4077:
  4084  0BDC  1003               	clrc
  4085  0BDD  0CCA               	rrf	___fladd@grs,f
  4086  0BDE                     l4079:
  4087  0BDE  1837               	btfsc	___fladd@b,0
  4088  0BDF  17CA               	bsf	___fladd@grs,7
  4089  0BE0  3001               	movlw	1
  4090  0BE1  00BF               	movwf	??___fladd
  4091  0BE2                     u3345:
  4092  0BE2  0D3A               	rlf	___fladd@b+3,w
  4093  0BE3  0CBA               	rrf	___fladd@b+3,f
  4094  0BE4  0CB9               	rrf	___fladd@b+2,f
  4095  0BE5  0CB8               	rrf	___fladd@b+1,f
  4096  0BE6  0CB7               	rrf	___fladd@b,f
  4097  0BE7  0BBF               	decfsz	??___fladd& (0+127),f
  4098  0BE8  2BE2               	goto	u3345
  4099  0BE9  3001               	movlw	1
  4100  0BEA  00BF               	movwf	??___fladd
  4101  0BEB  083F               	movf	??___fladd,w
  4102  0BEC  07C9               	addwf	___fladd@bexp,f
  4103  0BED                     l4087:
  4104  0BED  1283               	bcf	3,5	;RP0=0, select bank0
  4105  0BEE  1303               	bcf	3,6	;RP1=0, select bank0
  4106  0BEF  0848               	movf	___fladd@aexp,w
  4107  0BF0  0249               	subwf	___fladd@bexp,w
  4108  0BF1  1C03               	skipc
  4109  0BF2  2BD1               	goto	l1296
  4110  0BF3                     l1294:
  4111  0BF3  1B47               	btfsc	___fladd@signs,6
  4112  0BF4  2C34               	goto	l4113
  4113  0BF5  0849               	movf	___fladd@bexp,w
  4114  0BF6  1D03               	btfss	3,2
  4115  0BF7  2C01               	goto	l4095
  4116  0BF8  3000               	movlw	0
  4117  0BF9  00BA               	movwf	?___fladd+3
  4118  0BFA  3000               	movlw	0
  4119  0BFB  00B9               	movwf	?___fladd+2
  4120  0BFC  3000               	movlw	0
  4121  0BFD  00B8               	movwf	?___fladd+1
  4122  0BFE  3000               	movlw	0
  4123  0BFF  00B7               	movwf	?___fladd
  4124  0C00  0008               	return
  4125  0C01                     l4095:
  4126  0C01  083B               	movf	___fladd@a,w
  4127  0C02  07B7               	addwf	___fladd@b,f
  4128  0C03  083C               	movf	___fladd@a+1,w
  4129  0C04  1103               	clrz
  4130  0C05  1803               	skipnc
  4131  0C06  3E01               	addlw	1
  4132  0C07  1D03               	btfss	3,2
  4133  0C08  07B8               	addwf	___fladd@b+1,f
  4134  0C09  083D               	movf	___fladd@a+2,w
  4135  0C0A  1103               	clrz
  4136  0C0B  1803               	skipnc
  4137  0C0C  3E01               	addlw	1
  4138  0C0D  1D03               	btfss	3,2
  4139  0C0E  07B9               	addwf	___fladd@b+2,f
  4140  0C0F  083E               	movf	___fladd@a+3,w
  4141  0C10  1103               	clrz
  4142  0C11  1803               	skipnc
  4143  0C12  3E01               	addlw	1
  4144  0C13  1D03               	btfss	3,2
  4145  0C14  07BA               	addwf	___fladd@b+3,f
  4146  0C15  1C3A               	btfss	___fladd@b+3,0
  4147  0C16  2CD6               	goto	l4147
  4148  0C17  1C4A               	btfss	___fladd@grs,0
  4149  0C18  2C22               	goto	l4103
  4150  0C19  084A               	movf	___fladd@grs,w
  4151  0C1A  00BF               	movwf	??___fladd
  4152  0C1B  1003               	clrc
  4153  0C1C  0C3F               	rrf	??___fladd,w
  4154  0C1D  3801               	iorlw	1
  4155  0C1E  00C0               	movwf	??___fladd+1
  4156  0C1F  0840               	movf	??___fladd+1,w
  4157  0C20  00CA               	movwf	___fladd@grs
  4158  0C21  2C24               	goto	l4105
  4159  0C22                     l4103:
  4160  0C22  1003               	clrc
  4161  0C23  0CCA               	rrf	___fladd@grs,f
  4162  0C24                     l4105:
  4163  0C24  1837               	btfsc	___fladd@b,0
  4164  0C25  17CA               	bsf	___fladd@grs,7
  4165  0C26  3001               	movlw	1
  4166  0C27  00BF               	movwf	??___fladd
  4167  0C28                     u3425:
  4168  0C28  0D3A               	rlf	___fladd@b+3,w
  4169  0C29  0CBA               	rrf	___fladd@b+3,f
  4170  0C2A  0CB9               	rrf	___fladd@b+2,f
  4171  0C2B  0CB8               	rrf	___fladd@b+1,f
  4172  0C2C  0CB7               	rrf	___fladd@b,f
  4173  0C2D  0BBF               	decfsz	??___fladd& (0+127),f
  4174  0C2E  2C28               	goto	u3425
  4175  0C2F  3001               	movlw	1
  4176  0C30  00BF               	movwf	??___fladd
  4177  0C31  083F               	movf	??___fladd,w
  4178  0C32  07C9               	addwf	___fladd@bexp,f
  4179  0C33  2CD6               	goto	l4147
  4180  0C34                     l4113:
  4181  0C34  083A               	movf	___fladd@b+3,w
  4182  0C35  3A80               	xorlw	128
  4183  0C36  00FF               	movwf	127
  4184  0C37  083E               	movf	___fladd@a+3,w
  4185  0C38  3A80               	xorlw	128
  4186  0C39  027F               	subwf	127,w
  4187  0C3A  1D03               	skipz
  4188  0C3B  2C46               	goto	u3433
  4189  0C3C  083D               	movf	___fladd@a+2,w
  4190  0C3D  0239               	subwf	___fladd@b+2,w
  4191  0C3E  1D03               	skipz
  4192  0C3F  2C46               	goto	u3433
  4193  0C40  083C               	movf	___fladd@a+1,w
  4194  0C41  0238               	subwf	___fladd@b+1,w
  4195  0C42  1D03               	skipz
  4196  0C43  2C46               	goto	u3433
  4197  0C44  083B               	movf	___fladd@a,w
  4198  0C45  0237               	subwf	___fladd@b,w
  4199  0C46                     u3433:
  4200  0C46  1803               	skipnc
  4201  0C47  2C9E               	goto	l4123
  4202  0C48  30FF               	movlw	255
  4203  0C49  00BF               	movwf	??___fladd
  4204  0C4A  30FF               	movlw	255
  4205  0C4B  00C0               	movwf	??___fladd+1
  4206  0C4C  30FF               	movlw	255
  4207  0C4D  00C1               	movwf	??___fladd+2
  4208  0C4E  30FF               	movlw	255
  4209  0C4F  00C2               	movwf	??___fladd+3
  4210  0C50  083B               	movf	___fladd@a,w
  4211  0C51  00C3               	movwf	??___fladd+4
  4212  0C52  083C               	movf	___fladd@a+1,w
  4213  0C53  00C4               	movwf	??___fladd+5
  4214  0C54  083D               	movf	___fladd@a+2,w
  4215  0C55  00C5               	movwf	??___fladd+6
  4216  0C56  083E               	movf	___fladd@a+3,w
  4217  0C57  00C6               	movwf	??___fladd+7
  4218  0C58  0837               	movf	___fladd@b,w
  4219  0C59  02C3               	subwf	??___fladd+4,f
  4220  0C5A  0838               	movf	___fladd@b+1,w
  4221  0C5B  1C03               	skipc
  4222  0C5C  0F38               	incfsz	___fladd@b+1,w
  4223  0C5D  2C5F               	goto	u3441
  4224  0C5E  2C60               	goto	u3442
  4225  0C5F                     u3441:
  4226  0C5F  02C4               	subwf	??___fladd+5,f
  4227  0C60                     u3442:
  4228  0C60  0839               	movf	___fladd@b+2,w
  4229  0C61  1C03               	skipc
  4230  0C62  0F39               	incfsz	___fladd@b+2,w
  4231  0C63  2C65               	goto	u3443
  4232  0C64  2C66               	goto	u3444
  4233  0C65                     u3443:
  4234  0C65  02C5               	subwf	??___fladd+6,f
  4235  0C66                     u3444:
  4236  0C66  083A               	movf	___fladd@b+3,w
  4237  0C67  1C03               	skipc
  4238  0C68  0F3A               	incfsz	___fladd@b+3,w
  4239  0C69  2C6B               	goto	u3445
  4240  0C6A  2C6C               	goto	u3446
  4241  0C6B                     u3445:
  4242  0C6B  02C6               	subwf	??___fladd+7,f
  4243  0C6C                     u3446:
  4244  0C6C  0843               	movf	??___fladd+4,w
  4245  0C6D  07BF               	addwf	??___fladd,f
  4246  0C6E  0844               	movf	??___fladd+5,w
  4247  0C6F  1803               	skipnc
  4248  0C70  0F44               	incfsz	??___fladd+5,w
  4249  0C71  2C73               	goto	u3450
  4250  0C72  2C74               	goto	u3451
  4251  0C73                     u3450:
  4252  0C73  07C0               	addwf	??___fladd+1,f
  4253  0C74                     u3451:
  4254  0C74  0845               	movf	??___fladd+6,w
  4255  0C75  1803               	skipnc
  4256  0C76  0F45               	incfsz	??___fladd+6,w
  4257  0C77  2C79               	goto	u3452
  4258  0C78  2C7A               	goto	u3453
  4259  0C79                     u3452:
  4260  0C79  07C1               	addwf	??___fladd+2,f
  4261  0C7A                     u3453:
  4262  0C7A  0846               	movf	??___fladd+7,w
  4263  0C7B  1803               	skipnc
  4264  0C7C  0A46               	incf	??___fladd+7,w
  4265  0C7D  07C2               	addwf	??___fladd+3,f
  4266  0C7E  0842               	movf	??___fladd+3,w
  4267  0C7F  00BA               	movwf	___fladd@b+3
  4268  0C80  0841               	movf	??___fladd+2,w
  4269  0C81  00B9               	movwf	___fladd@b+2
  4270  0C82  0840               	movf	??___fladd+1,w
  4271  0C83  00B8               	movwf	___fladd@b+1
  4272  0C84  083F               	movf	??___fladd,w
  4273  0C85  00B7               	movwf	___fladd@b
  4274  0C86  3080               	movlw	128
  4275  0C87  00BF               	movwf	??___fladd
  4276  0C88  083F               	movf	??___fladd,w
  4277  0C89  06C7               	xorwf	___fladd@signs,f
  4278  0C8A  09CA               	comf	___fladd@grs,f
  4279  0C8B  0ACA               	incf	___fladd@grs,f
  4280  0C8C  084A               	movf	___fladd@grs,w
  4281  0C8D  1D03               	btfss	3,2
  4282  0C8E  2CAC               	goto	l1311
  4283  0C8F  3001               	movlw	1
  4284  0C90  07B7               	addwf	___fladd@b,f
  4285  0C91  3000               	movlw	0
  4286  0C92  1803               	skipnc
  4287  0C93  3001               	movlw	1
  4288  0C94  07B8               	addwf	___fladd@b+1,f
  4289  0C95  3000               	movlw	0
  4290  0C96  1803               	skipnc
  4291  0C97  3001               	movlw	1
  4292  0C98  07B9               	addwf	___fladd@b+2,f
  4293  0C99  3000               	movlw	0
  4294  0C9A  1803               	skipnc
  4295  0C9B  3001               	movlw	1
  4296  0C9C  07BA               	addwf	___fladd@b+3,f
  4297  0C9D  2CAC               	goto	l1311
  4298  0C9E                     l4123:
  4299  0C9E  083B               	movf	___fladd@a,w
  4300  0C9F  02B7               	subwf	___fladd@b,f
  4301  0CA0  083C               	movf	___fladd@a+1,w
  4302  0CA1  1C03               	skipc
  4303  0CA2  0F3C               	incfsz	___fladd@a+1,w
  4304  0CA3  02B8               	subwf	___fladd@b+1,f
  4305  0CA4  083D               	movf	___fladd@a+2,w
  4306  0CA5  1C03               	skipc
  4307  0CA6  0F3D               	incfsz	___fladd@a+2,w
  4308  0CA7  02B9               	subwf	___fladd@b+2,f
  4309  0CA8  083E               	movf	___fladd@a+3,w
  4310  0CA9  1C03               	skipc
  4311  0CAA  0F3E               	incfsz	___fladd@a+3,w
  4312  0CAB  02BA               	subwf	___fladd@b+3,f
  4313  0CAC                     l1311:
  4314  0CAC  083A               	movf	___fladd@b+3,w
  4315  0CAD  0439               	iorwf	___fladd@b+2,w
  4316  0CAE  0438               	iorwf	___fladd@b+1,w
  4317  0CAF  0437               	iorwf	___fladd@b,w
  4318  0CB0  1D03               	skipz
  4319  0CB1  2CD4               	goto	l4145
  4320  0CB2  084A               	movf	___fladd@grs,w
  4321  0CB3  1D03               	btfss	3,2
  4322  0CB4  2CD4               	goto	l4145
  4323  0CB5  3000               	movlw	0
  4324  0CB6  00BA               	movwf	?___fladd+3
  4325  0CB7  3000               	movlw	0
  4326  0CB8  00B9               	movwf	?___fladd+2
  4327  0CB9  3000               	movlw	0
  4328  0CBA  00B8               	movwf	?___fladd+1
  4329  0CBB  3000               	movlw	0
  4330  0CBC  00B7               	movwf	?___fladd
  4331  0CBD  0008               	return
  4332  0CBE                     l4131:
  4333  0CBE  3001               	movlw	1
  4334  0CBF  00BF               	movwf	??___fladd
  4335  0CC0                     u3495:
  4336  0CC0  1003               	clrc
  4337  0CC1  0DB7               	rlf	___fladd@b,f
  4338  0CC2  0DB8               	rlf	___fladd@b+1,f
  4339  0CC3  0DB9               	rlf	___fladd@b+2,f
  4340  0CC4  0DBA               	rlf	___fladd@b+3,f
  4341  0CC5  0BBF               	decfsz	??___fladd,f
  4342  0CC6  2CC0               	goto	u3495
  4343  0CC7  1BCA               	btfsc	___fladd@grs,7
  4344  0CC8  1437               	bsf	___fladd@b,0
  4345  0CC9  1C4A               	btfss	___fladd@grs,0
  4346  0CCA  2CCD               	goto	l4139
  4347  0CCB  1403               	setc
  4348  0CCC  2CCE               	goto	L5
  4349  0CCD                     l4139:
  4350  0CCD  1003               	clrc
  4351  0CCE                     L5:
  4352  0CCE  0DCA               	rlf	___fladd@grs,f
  4353  0CCF  0849               	movf	___fladd@bexp,w
  4354  0CD0  1903               	btfsc	3,2
  4355  0CD1  2CD4               	goto	l4145
  4356  0CD2  3001               	movlw	1
  4357  0CD3  02C9               	subwf	___fladd@bexp,f
  4358  0CD4                     l4145:
  4359  0CD4  1FB9               	btfss	___fladd@b+2,7
  4360  0CD5  2CBE               	goto	l4131
  4361  0CD6                     l4147:
  4362  0CD6  01C8               	clrf	___fladd@aexp
  4363  0CD7  1FCA               	btfss	___fladd@grs,7
  4364  0CD8  2CE1               	goto	l4157
  4365  0CD9  084A               	movf	___fladd@grs,w
  4366  0CDA  397F               	andlw	127
  4367  0CDB  1903               	btfsc	3,2
  4368  0CDC  1837               	btfsc	___fladd@b,0
  4369  0CDD  2CDF               	goto	l4153
  4370  0CDE  2CE1               	goto	l4157
  4371  0CDF                     l4153:
  4372  0CDF  01C8               	clrf	___fladd@aexp
  4373  0CE0  0AC8               	incf	___fladd@aexp,f
  4374  0CE1                     l4157:
  4375  0CE1  0848               	movf	___fladd@aexp,w
  4376  0CE2  1903               	btfsc	3,2
  4377  0CE3  2D14               	goto	l1324
  4378  0CE4  3001               	movlw	1
  4379  0CE5  07B7               	addwf	___fladd@b,f
  4380  0CE6  3000               	movlw	0
  4381  0CE7  1803               	skipnc
  4382  0CE8  3001               	movlw	1
  4383  0CE9  07B8               	addwf	___fladd@b+1,f
  4384  0CEA  3000               	movlw	0
  4385  0CEB  1803               	skipnc
  4386  0CEC  3001               	movlw	1
  4387  0CED  07B9               	addwf	___fladd@b+2,f
  4388  0CEE  3000               	movlw	0
  4389  0CEF  1803               	skipnc
  4390  0CF0  3001               	movlw	1
  4391  0CF1  07BA               	addwf	___fladd@b+3,f
  4392  0CF2  1C3A               	btfss	___fladd@b+3,0
  4393  0CF3  2D14               	goto	l1324
  4394  0CF4  0837               	movf	___fladd@b,w
  4395  0CF5  00BF               	movwf	??___fladd
  4396  0CF6  0838               	movf	___fladd@b+1,w
  4397  0CF7  00C0               	movwf	??___fladd+1
  4398  0CF8  0839               	movf	___fladd@b+2,w
  4399  0CF9  00C1               	movwf	??___fladd+2
  4400  0CFA  083A               	movf	___fladd@b+3,w
  4401  0CFB  00C2               	movwf	??___fladd+3
  4402  0CFC  3001               	movlw	1
  4403  0CFD  00C3               	movwf	??___fladd+4
  4404  0CFE                     u3595:
  4405  0CFE  0D42               	rlf	??___fladd+3,w
  4406  0CFF  0CC2               	rrf	??___fladd+3,f
  4407  0D00  0CC1               	rrf	??___fladd+2,f
  4408  0D01  0CC0               	rrf	??___fladd+1,f
  4409  0D02  0CBF               	rrf	??___fladd,f
  4410  0D03  0BC3               	decfsz	??___fladd+4,f
  4411  0D04  2CFE               	goto	u3595
  4412  0D05  0842               	movf	??___fladd+3,w
  4413  0D06  00BA               	movwf	___fladd@b+3
  4414  0D07  0841               	movf	??___fladd+2,w
  4415  0D08  00B9               	movwf	___fladd@b+2
  4416  0D09  0840               	movf	??___fladd+1,w
  4417  0D0A  00B8               	movwf	___fladd@b+1
  4418  0D0B  083F               	movf	??___fladd,w
  4419  0D0C  00B7               	movwf	___fladd@b
  4420  0D0D  0A49               	incf	___fladd@bexp,w
  4421  0D0E  1903               	btfsc	3,2
  4422  0D0F  2D14               	goto	l1324
  4423  0D10  3001               	movlw	1
  4424  0D11  00BF               	movwf	??___fladd
  4425  0D12  083F               	movf	??___fladd,w
  4426  0D13  07C9               	addwf	___fladd@bexp,f
  4427  0D14                     l1324:
  4428  0D14  0A49               	incf	___fladd@bexp,w
  4429  0D15  1D03               	btfss	3,2
  4430  0D16  0849               	movf	___fladd@bexp,w
  4431  0D17  1D03               	btfss	3,2
  4432  0D18  2D24               	goto	l4175
  4433  0D19  3000               	movlw	0
  4434  0D1A  00BA               	movwf	___fladd@b+3
  4435  0D1B  3000               	movlw	0
  4436  0D1C  00B9               	movwf	___fladd@b+2
  4437  0D1D  3000               	movlw	0
  4438  0D1E  00B8               	movwf	___fladd@b+1
  4439  0D1F  3000               	movlw	0
  4440  0D20  00B7               	movwf	___fladd@b
  4441  0D21  0849               	movf	___fladd@bexp,w
  4442  0D22  1903               	btfsc	3,2
  4443  0D23  01C7               	clrf	___fladd@signs
  4444  0D24                     l4175:
  4445  0D24  1C49               	btfss	___fladd@bexp,0
  4446  0D25  2D28               	goto	l4179
  4447  0D26  17B9               	bsf	___fladd@b+2,7
  4448  0D27  2D2C               	goto	l1332
  4449  0D28                     l4179:
  4450  0D28  307F               	movlw	127
  4451  0D29  00BF               	movwf	??___fladd
  4452  0D2A  083F               	movf	??___fladd,w
  4453  0D2B  05B9               	andwf	___fladd@b+2,f
  4454  0D2C                     l1332:
  4455  0D2C  0849               	movf	___fladd@bexp,w
  4456  0D2D  00BF               	movwf	??___fladd
  4457  0D2E  1003               	clrc
  4458  0D2F  0C3F               	rrf	??___fladd,w
  4459  0D30  00C0               	movwf	??___fladd+1
  4460  0D31  0840               	movf	??___fladd+1,w
  4461  0D32  00BA               	movwf	___fladd@b+3
  4462  0D33  1FC7               	btfss	___fladd@signs,7
  4463  0D34  0008               	return
  4464  0D35  17BA               	bsf	___fladd@b+3,7
  4465  0D36  0008               	return
  4466  0D37                     __end_of___fladd:
  4467                           
  4468                           	psect	text5
  4469  1073                     __ptext5:	
  4470 ;; *************** function ___flge *****************
  4471 ;; Defined at:
  4472 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;  ff1             4    0[BANK0 ] unsigned char 
  4475 ;;  ff2             4    4[BANK0 ] unsigned char 
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;		None
  4478 ;; Return value:  Size  Location     Type
  4479 ;;		None               void
  4480 ;; Registers used:
  4481 ;;		wreg, status,2, status,0
  4482 ;; Tracked objects:
  4483 ;;		On entry : 300/0
  4484 ;;		On exit  : 300/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4487 ;;      Params:         0       8       0       0       0
  4488 ;;      Locals:         0       0       0       0       0
  4489 ;;      Temps:          0       4       0       0       0
  4490 ;;      Totals:         0      12       0       0       0
  4491 ;;Total ram usage:       12 bytes
  4492 ;; Hardware stack levels used: 1
  4493 ;; Hardware stack levels required when called: 1
  4494 ;; This function calls:
  4495 ;;		Nothing
  4496 ;; This function is called by:
  4497 ;;		_MediaPlacaVaccum
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           
  4502                           ;psect for function ___flge
  4503  1073                     ___flge:
  4504                           
  4505                           ;incstack = 0
  4506                           ; Regs used in ___flge: [wreg+status,2+status,0]
  4507  1073  3000               	movlw	0
  4508  1074  0520               	andwf	___flge@ff1,w
  4509  1075  00A8               	movwf	??___flge
  4510  1076  3000               	movlw	0
  4511  1077  0521               	andwf	___flge@ff1+1,w
  4512  1078  00A9               	movwf	??___flge+1
  4513  1079  3080               	movlw	128
  4514  107A  0522               	andwf	___flge@ff1+2,w
  4515  107B  00AA               	movwf	??___flge+2
  4516  107C  307F               	movlw	127
  4517  107D  0523               	andwf	___flge@ff1+3,w
  4518  107E  00AB               	movwf	??___flge+3
  4519  107F  082B               	movf	??___flge+3,w
  4520  1080  042A               	iorwf	??___flge+2,w
  4521  1081  0429               	iorwf	??___flge+1,w
  4522  1082  0428               	iorwf	??___flge,w
  4523  1083  1D03               	skipz
  4524  1084  288D               	goto	l1171
  4525  1085  3000               	movlw	0
  4526  1086  00A3               	movwf	___flge@ff1+3
  4527  1087  3000               	movlw	0
  4528  1088  00A2               	movwf	___flge@ff1+2
  4529  1089  3000               	movlw	0
  4530  108A  00A1               	movwf	___flge@ff1+1
  4531  108B  3000               	movlw	0
  4532  108C  00A0               	movwf	___flge@ff1
  4533  108D                     l1171:
  4534  108D  3000               	movlw	0
  4535  108E  0524               	andwf	___flge@ff2,w
  4536  108F  00A8               	movwf	??___flge
  4537  1090  3000               	movlw	0
  4538  1091  0525               	andwf	___flge@ff2+1,w
  4539  1092  00A9               	movwf	??___flge+1
  4540  1093  3080               	movlw	128
  4541  1094  0526               	andwf	___flge@ff2+2,w
  4542  1095  00AA               	movwf	??___flge+2
  4543  1096  307F               	movlw	127
  4544  1097  0527               	andwf	___flge@ff2+3,w
  4545  1098  00AB               	movwf	??___flge+3
  4546  1099  082B               	movf	??___flge+3,w
  4547  109A  042A               	iorwf	??___flge+2,w
  4548  109B  0429               	iorwf	??___flge+1,w
  4549  109C  0428               	iorwf	??___flge,w
  4550  109D  1D03               	skipz
  4551  109E  28A7               	goto	l4835
  4552  109F  3000               	movlw	0
  4553  10A0  00A7               	movwf	___flge@ff2+3
  4554  10A1  3000               	movlw	0
  4555  10A2  00A6               	movwf	___flge@ff2+2
  4556  10A3  3000               	movlw	0
  4557  10A4  00A5               	movwf	___flge@ff2+1
  4558  10A5  3000               	movlw	0
  4559  10A6  00A4               	movwf	___flge@ff2
  4560  10A7                     l4835:
  4561  10A7  1FA3               	btfss	___flge@ff1+3,7
  4562  10A8  28CD               	goto	l4839
  4563  10A9  3000               	movlw	0
  4564  10AA  00A8               	movwf	??___flge
  4565  10AB  3000               	movlw	0
  4566  10AC  00A9               	movwf	??___flge+1
  4567  10AD  3000               	movlw	0
  4568  10AE  00AA               	movwf	??___flge+2
  4569  10AF  3080               	movlw	128
  4570  10B0  00AB               	movwf	??___flge+3
  4571  10B1  0820               	movf	___flge@ff1,w
  4572  10B2  02A8               	subwf	??___flge,f
  4573  10B3  0821               	movf	___flge@ff1+1,w
  4574  10B4  1C03               	skipc
  4575  10B5  0F21               	incfsz	___flge@ff1+1,w
  4576  10B6  28B8               	goto	u4561
  4577  10B7  28B9               	goto	u4562
  4578  10B8                     u4561:
  4579  10B8  02A9               	subwf	??___flge+1,f
  4580  10B9                     u4562:
  4581  10B9  0822               	movf	___flge@ff1+2,w
  4582  10BA  1C03               	skipc
  4583  10BB  0F22               	incfsz	___flge@ff1+2,w
  4584  10BC  28BE               	goto	u4563
  4585  10BD  28BF               	goto	u4564
  4586  10BE                     u4563:
  4587  10BE  02AA               	subwf	??___flge+2,f
  4588  10BF                     u4564:
  4589  10BF  0823               	movf	___flge@ff1+3,w
  4590  10C0  1C03               	skipc
  4591  10C1  0F23               	incfsz	___flge@ff1+3,w
  4592  10C2  28C4               	goto	u4565
  4593  10C3  28C5               	goto	u4566
  4594  10C4                     u4565:
  4595  10C4  02AB               	subwf	??___flge+3,f
  4596  10C5                     u4566:
  4597  10C5  082B               	movf	??___flge+3,w
  4598  10C6  00A3               	movwf	___flge@ff1+3
  4599  10C7  082A               	movf	??___flge+2,w
  4600  10C8  00A2               	movwf	___flge@ff1+2
  4601  10C9  0829               	movf	??___flge+1,w
  4602  10CA  00A1               	movwf	___flge@ff1+1
  4603  10CB  0828               	movf	??___flge,w
  4604  10CC  00A0               	movwf	___flge@ff1
  4605  10CD                     l4839:
  4606  10CD  1FA7               	btfss	___flge@ff2+3,7
  4607  10CE  28F3               	goto	l1174
  4608  10CF  3000               	movlw	0
  4609  10D0  00A8               	movwf	??___flge
  4610  10D1  3000               	movlw	0
  4611  10D2  00A9               	movwf	??___flge+1
  4612  10D3  3000               	movlw	0
  4613  10D4  00AA               	movwf	??___flge+2
  4614  10D5  3080               	movlw	128
  4615  10D6  00AB               	movwf	??___flge+3
  4616  10D7  0824               	movf	___flge@ff2,w
  4617  10D8  02A8               	subwf	??___flge,f
  4618  10D9  0825               	movf	___flge@ff2+1,w
  4619  10DA  1C03               	skipc
  4620  10DB  0F25               	incfsz	___flge@ff2+1,w
  4621  10DC  28DE               	goto	u4581
  4622  10DD  28DF               	goto	u4582
  4623  10DE                     u4581:
  4624  10DE  02A9               	subwf	??___flge+1,f
  4625  10DF                     u4582:
  4626  10DF  0826               	movf	___flge@ff2+2,w
  4627  10E0  1C03               	skipc
  4628  10E1  0F26               	incfsz	___flge@ff2+2,w
  4629  10E2  28E4               	goto	u4583
  4630  10E3  28E5               	goto	u4584
  4631  10E4                     u4583:
  4632  10E4  02AA               	subwf	??___flge+2,f
  4633  10E5                     u4584:
  4634  10E5  0827               	movf	___flge@ff2+3,w
  4635  10E6  1C03               	skipc
  4636  10E7  0F27               	incfsz	___flge@ff2+3,w
  4637  10E8  28EA               	goto	u4585
  4638  10E9  28EB               	goto	u4586
  4639  10EA                     u4585:
  4640  10EA  02AB               	subwf	??___flge+3,f
  4641  10EB                     u4586:
  4642  10EB  082B               	movf	??___flge+3,w
  4643  10EC  00A7               	movwf	___flge@ff2+3
  4644  10ED  082A               	movf	??___flge+2,w
  4645  10EE  00A6               	movwf	___flge@ff2+2
  4646  10EF  0829               	movf	??___flge+1,w
  4647  10F0  00A5               	movwf	___flge@ff2+1
  4648  10F1  0828               	movf	??___flge,w
  4649  10F2  00A4               	movwf	___flge@ff2
  4650  10F3                     l1174:
  4651  10F3  3080               	movlw	128
  4652  10F4  06A3               	xorwf	___flge@ff1+3,f
  4653  10F5  3080               	movlw	128
  4654  10F6  06A7               	xorwf	___flge@ff2+3,f
  4655  10F7  0827               	movf	___flge@ff2+3,w
  4656  10F8  0223               	subwf	___flge@ff1+3,w
  4657  10F9  1D03               	skipz
  4658  10FA  0008               	return
  4659  10FB  0826               	movf	___flge@ff2+2,w
  4660  10FC  0222               	subwf	___flge@ff1+2,w
  4661  10FD  1D03               	skipz
  4662  10FE  0008               	return
  4663  10FF  0825               	movf	___flge@ff2+1,w
  4664  1100  0221               	subwf	___flge@ff1+1,w
  4665  1101  1D03               	skipz
  4666  1102  0008               	return
  4667  1103  0824               	movf	___flge@ff2,w
  4668  1104  0220               	subwf	___flge@ff1,w
  4669  1105  0008               	return
  4670  1106                     __end_of___flge:
  4671                           
  4672                           	psect	text6
  4673  0969                     __ptext6:	
  4674 ;; *************** function ___fldiv *****************
  4675 ;; Defined at:
  4676 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  4677 ;; Parameters:    Size  Location     Type
  4678 ;;  a               4   14[BANK0 ] unsigned char 
  4679 ;;  b               4   18[BANK0 ] unsigned char 
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;  grs             4   34[BANK0 ] unsigned long 
  4682 ;;  rem             4   27[BANK0 ] unsigned long 
  4683 ;;  new_exp         2   32[BANK0 ] int 
  4684 ;;  aexp            1   39[BANK0 ] unsigned char 
  4685 ;;  bexp            1   38[BANK0 ] unsigned char 
  4686 ;;  sign            1   31[BANK0 ] unsigned char 
  4687 ;; Return value:  Size  Location     Type
  4688 ;;                  4   14[BANK0 ] unsigned char 
  4689 ;; Registers used:
  4690 ;;		wreg, status,2, status,0, btemp+1
  4691 ;; Tracked objects:
  4692 ;;		On entry : 300/0
  4693 ;;		On exit  : 300/0
  4694 ;;		Unchanged: 0/0
  4695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4696 ;;      Params:         0       8       0       0       0
  4697 ;;      Locals:         0      13       0       0       0
  4698 ;;      Temps:          0       5       0       0       0
  4699 ;;      Totals:         0      26       0       0       0
  4700 ;;Total ram usage:       26 bytes
  4701 ;; Hardware stack levels used: 1
  4702 ;; Hardware stack levels required when called: 1
  4703 ;; This function calls:
  4704 ;;		Nothing
  4705 ;; This function is called by:
  4706 ;;		_MediaPlacaVaccum
  4707 ;; This function uses a non-reentrant model
  4708 ;;
  4709                           
  4710                           
  4711                           ;psect for function ___fldiv
  4712  0969                     ___fldiv:
  4713                           
  4714                           ;incstack = 0
  4715                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4716  0969  0835               	movf	___fldiv@b+3,w
  4717  096A  3980               	andlw	128
  4718  096B  00B6               	movwf	??___fldiv
  4719  096C  0836               	movf	??___fldiv,w
  4720  096D  00BF               	movwf	___fldiv@sign
  4721  096E  0835               	movf	___fldiv@b+3,w
  4722  096F  00B6               	movwf	??___fldiv
  4723  0970  0736               	addwf	??___fldiv,w
  4724  0971  00B7               	movwf	??___fldiv+1
  4725  0972  0837               	movf	??___fldiv+1,w
  4726  0973  00C6               	movwf	___fldiv@bexp
  4727  0974  1BB4               	btfsc	___fldiv@b+2,7
  4728  0975  1446               	bsf	___fldiv@bexp,0
  4729  0976  0846               	movf	___fldiv@bexp,w
  4730  0977  1903               	btfsc	3,2
  4731  0978  2987               	goto	l4873
  4732  0979  0A46               	incf	___fldiv@bexp,w
  4733  097A  1D03               	btfss	3,2
  4734  097B  2984               	goto	l4869
  4735  097C  3000               	movlw	0
  4736  097D  00B5               	movwf	___fldiv@b+3
  4737  097E  3000               	movlw	0
  4738  097F  00B4               	movwf	___fldiv@b+2
  4739  0980  3000               	movlw	0
  4740  0981  00B3               	movwf	___fldiv@b+1
  4741  0982  3000               	movlw	0
  4742  0983  00B2               	movwf	___fldiv@b
  4743  0984                     l4869:
  4744  0984  17B4               	bsf	___fldiv@b+2,7
  4745  0985  01B5               	clrf	___fldiv@b+3
  4746  0986  298F               	goto	l4875
  4747  0987                     l4873:
  4748  0987  3000               	movlw	0
  4749  0988  00B5               	movwf	___fldiv@b+3
  4750  0989  3000               	movlw	0
  4751  098A  00B4               	movwf	___fldiv@b+2
  4752  098B  3000               	movlw	0
  4753  098C  00B3               	movwf	___fldiv@b+1
  4754  098D  3000               	movlw	0
  4755  098E  00B2               	movwf	___fldiv@b
  4756  098F                     l4875:
  4757  098F  0831               	movf	___fldiv@a+3,w
  4758  0990  3980               	andlw	128
  4759  0991  00B6               	movwf	??___fldiv
  4760  0992  0836               	movf	??___fldiv,w
  4761  0993  06BF               	xorwf	___fldiv@sign,f
  4762  0994  0831               	movf	___fldiv@a+3,w
  4763  0995  00B6               	movwf	??___fldiv
  4764  0996  0736               	addwf	??___fldiv,w
  4765  0997  00B7               	movwf	??___fldiv+1
  4766  0998  0837               	movf	??___fldiv+1,w
  4767  0999  00C7               	movwf	___fldiv@aexp
  4768  099A  1BB0               	btfsc	___fldiv@a+2,7
  4769  099B  1447               	bsf	___fldiv@aexp,0
  4770  099C  0847               	movf	___fldiv@aexp,w
  4771  099D  1903               	btfsc	3,2
  4772  099E  29AD               	goto	l4893
  4773  099F  0A47               	incf	___fldiv@aexp,w
  4774  09A0  1D03               	btfss	3,2
  4775  09A1  29AA               	goto	l4889
  4776  09A2  3000               	movlw	0
  4777  09A3  00B1               	movwf	___fldiv@a+3
  4778  09A4  3000               	movlw	0
  4779  09A5  00B0               	movwf	___fldiv@a+2
  4780  09A6  3000               	movlw	0
  4781  09A7  00AF               	movwf	___fldiv@a+1
  4782  09A8  3000               	movlw	0
  4783  09A9  00AE               	movwf	___fldiv@a
  4784  09AA                     l4889:
  4785  09AA  17B0               	bsf	___fldiv@a+2,7
  4786  09AB  01B1               	clrf	___fldiv@a+3
  4787  09AC  29B5               	goto	l1346
  4788  09AD                     l4893:
  4789  09AD  3000               	movlw	0
  4790  09AE  00B1               	movwf	___fldiv@a+3
  4791  09AF  3000               	movlw	0
  4792  09B0  00B0               	movwf	___fldiv@a+2
  4793  09B1  3000               	movlw	0
  4794  09B2  00AF               	movwf	___fldiv@a+1
  4795  09B3  3000               	movlw	0
  4796  09B4  00AE               	movwf	___fldiv@a
  4797  09B5                     l1346:
  4798  09B5  0831               	movf	___fldiv@a+3,w
  4799  09B6  0430               	iorwf	___fldiv@a+2,w
  4800  09B7  042F               	iorwf	___fldiv@a+1,w
  4801  09B8  042E               	iorwf	___fldiv@a,w
  4802  09B9  1D03               	skipz
  4803  09BA  29D4               	goto	l4903
  4804  09BB  3000               	movlw	0
  4805  09BC  00B5               	movwf	___fldiv@b+3
  4806  09BD  3000               	movlw	0
  4807  09BE  00B4               	movwf	___fldiv@b+2
  4808  09BF  3000               	movlw	0
  4809  09C0  00B3               	movwf	___fldiv@b+1
  4810  09C1  3000               	movlw	0
  4811  09C2  00B2               	movwf	___fldiv@b
  4812  09C3  3080               	movlw	128
  4813  09C4  04B4               	iorwf	___fldiv@b+2,f
  4814  09C5  307F               	movlw	127
  4815  09C6  04B5               	iorwf	___fldiv@b+3,f
  4816  09C7                     L7:
  4817  09C7  083F               	movf	___fldiv@sign,w
  4818  09C8  00B6               	movwf	??___fldiv
  4819  09C9  0836               	movf	??___fldiv,w
  4820  09CA  04B5               	iorwf	___fldiv@b+3,f
  4821  09CB  0835               	movf	___fldiv@b+3,w
  4822  09CC  00B1               	movwf	?___fldiv+3
  4823  09CD  0834               	movf	___fldiv@b+2,w
  4824  09CE  00B0               	movwf	?___fldiv+2
  4825  09CF  0833               	movf	___fldiv@b+1,w
  4826  09D0  00AF               	movwf	?___fldiv+1
  4827  09D1  0832               	movf	___fldiv@b,w
  4828  09D2  00AE               	movwf	?___fldiv
  4829  09D3  0008               	return
  4830  09D4                     l4903:
  4831  09D4  0846               	movf	___fldiv@bexp,w
  4832  09D5  1D03               	btfss	3,2
  4833  09D6  29E0               	goto	l4909
  4834  09D7  3000               	movlw	0
  4835  09D8  00B1               	movwf	?___fldiv+3
  4836  09D9  3000               	movlw	0
  4837  09DA  00B0               	movwf	?___fldiv+2
  4838  09DB  3000               	movlw	0
  4839  09DC  00AF               	movwf	?___fldiv+1
  4840  09DD  3000               	movlw	0
  4841  09DE  00AE               	movwf	?___fldiv
  4842  09DF  0008               	return
  4843  09E0                     l4909:
  4844  09E0  0846               	movf	___fldiv@bexp,w
  4845  09E1  00B6               	movwf	??___fldiv
  4846  09E2  01B7               	clrf	??___fldiv+1
  4847  09E3  0837               	movf	??___fldiv+1,w
  4848  09E4  00B9               	movwf	??___fldiv+3
  4849  09E5  0847               	movf	___fldiv@aexp,w
  4850  09E6  0236               	subwf	??___fldiv,w
  4851  09E7  00B8               	movwf	??___fldiv+2
  4852  09E8  1C03               	skipc
  4853  09E9  03B9               	decf	??___fldiv+3,f
  4854  09EA  0838               	movf	??___fldiv+2,w
  4855  09EB  3E7F               	addlw	127
  4856  09EC  00C0               	movwf	___fldiv@new_exp
  4857  09ED  0839               	movf	??___fldiv+3,w
  4858  09EE  1803               	skipnc
  4859  09EF  3E01               	addlw	1
  4860  09F0  3E00               	addlw	0
  4861  09F1  00C1               	movwf	___fldiv@new_exp+1
  4862  09F2  0835               	movf	___fldiv@b+3,w
  4863  09F3  00BE               	movwf	___fldiv@rem+3
  4864  09F4  0834               	movf	___fldiv@b+2,w
  4865  09F5  00BD               	movwf	___fldiv@rem+2
  4866  09F6  0833               	movf	___fldiv@b+1,w
  4867  09F7  00BC               	movwf	___fldiv@rem+1
  4868  09F8  0832               	movf	___fldiv@b,w
  4869  09F9  00BB               	movwf	___fldiv@rem
  4870  09FA  3000               	movlw	0
  4871  09FB  00B5               	movwf	___fldiv@b+3
  4872  09FC  3000               	movlw	0
  4873  09FD  00B4               	movwf	___fldiv@b+2
  4874  09FE  3000               	movlw	0
  4875  09FF  00B3               	movwf	___fldiv@b+1
  4876  0A00  3000               	movlw	0
  4877  0A01  00B2               	movwf	___fldiv@b
  4878  0A02  3000               	movlw	0
  4879  0A03  00C5               	movwf	___fldiv@grs+3
  4880  0A04  3000               	movlw	0
  4881  0A05  00C4               	movwf	___fldiv@grs+2
  4882  0A06  3000               	movlw	0
  4883  0A07  00C3               	movwf	___fldiv@grs+1
  4884  0A08  3000               	movlw	0
  4885  0A09  00C2               	movwf	___fldiv@grs
  4886  0A0A  01C7               	clrf	___fldiv@aexp
  4887  0A0B                     l4937:
  4888  0A0B  301A               	movlw	26
  4889  0A0C  0247               	subwf	___fldiv@aexp,w
  4890  0A0D  1803               	btfsc	3,0
  4891  0A0E  2A53               	goto	l4939
  4892  0A0F  0847               	movf	___fldiv@aexp,w
  4893  0A10  1903               	btfsc	3,2
  4894  0A11  2A2F               	goto	l4929
  4895  0A12  3001               	movlw	1
  4896  0A13  00B6               	movwf	??___fldiv
  4897  0A14                     u4695:
  4898  0A14  1003               	clrc
  4899  0A15  0DBB               	rlf	___fldiv@rem,f
  4900  0A16  0DBC               	rlf	___fldiv@rem+1,f
  4901  0A17  0DBD               	rlf	___fldiv@rem+2,f
  4902  0A18  0DBE               	rlf	___fldiv@rem+3,f
  4903  0A19  0BB6               	decfsz	??___fldiv,f
  4904  0A1A  2A14               	goto	u4695
  4905  0A1B  3001               	movlw	1
  4906  0A1C  00B6               	movwf	??___fldiv
  4907  0A1D                     u4705:
  4908  0A1D  1003               	clrc
  4909  0A1E  0DB2               	rlf	___fldiv@b,f
  4910  0A1F  0DB3               	rlf	___fldiv@b+1,f
  4911  0A20  0DB4               	rlf	___fldiv@b+2,f
  4912  0A21  0DB5               	rlf	___fldiv@b+3,f
  4913  0A22  0BB6               	decfsz	??___fldiv,f
  4914  0A23  2A1D               	goto	u4705
  4915  0A24  1BC5               	btfsc	___fldiv@grs+3,7
  4916  0A25  1432               	bsf	___fldiv@b,0
  4917  0A26  3001               	movlw	1
  4918  0A27  00B6               	movwf	??___fldiv
  4919  0A28                     u4725:
  4920  0A28  1003               	clrc
  4921  0A29  0DC2               	rlf	___fldiv@grs,f
  4922  0A2A  0DC3               	rlf	___fldiv@grs+1,f
  4923  0A2B  0DC4               	rlf	___fldiv@grs+2,f
  4924  0A2C  0DC5               	rlf	___fldiv@grs+3,f
  4925  0A2D  0BB6               	decfsz	??___fldiv,f
  4926  0A2E  2A28               	goto	u4725
  4927  0A2F                     l4929:
  4928  0A2F  0831               	movf	___fldiv@a+3,w
  4929  0A30  023E               	subwf	___fldiv@rem+3,w
  4930  0A31  1D03               	skipz
  4931  0A32  2A3D               	goto	u4735
  4932  0A33  0830               	movf	___fldiv@a+2,w
  4933  0A34  023D               	subwf	___fldiv@rem+2,w
  4934  0A35  1D03               	skipz
  4935  0A36  2A3D               	goto	u4735
  4936  0A37  082F               	movf	___fldiv@a+1,w
  4937  0A38  023C               	subwf	___fldiv@rem+1,w
  4938  0A39  1D03               	skipz
  4939  0A3A  2A3D               	goto	u4735
  4940  0A3B  082E               	movf	___fldiv@a,w
  4941  0A3C  023B               	subwf	___fldiv@rem,w
  4942  0A3D                     u4735:
  4943  0A3D  1C03               	skipc
  4944  0A3E  2A4E               	goto	l4935
  4945  0A3F  1745               	bsf	___fldiv@grs+3,6
  4946  0A40  082E               	movf	___fldiv@a,w
  4947  0A41  02BB               	subwf	___fldiv@rem,f
  4948  0A42  082F               	movf	___fldiv@a+1,w
  4949  0A43  1C03               	skipc
  4950  0A44  0F2F               	incfsz	___fldiv@a+1,w
  4951  0A45  02BC               	subwf	___fldiv@rem+1,f
  4952  0A46  0830               	movf	___fldiv@a+2,w
  4953  0A47  1C03               	skipc
  4954  0A48  0F30               	incfsz	___fldiv@a+2,w
  4955  0A49  02BD               	subwf	___fldiv@rem+2,f
  4956  0A4A  0831               	movf	___fldiv@a+3,w
  4957  0A4B  1C03               	skipc
  4958  0A4C  0F31               	incfsz	___fldiv@a+3,w
  4959  0A4D  02BE               	subwf	___fldiv@rem+3,f
  4960  0A4E                     l4935:
  4961  0A4E  3001               	movlw	1
  4962  0A4F  00B6               	movwf	??___fldiv
  4963  0A50  0836               	movf	??___fldiv,w
  4964  0A51  07C7               	addwf	___fldiv@aexp,f
  4965  0A52  2A0B               	goto	l4937
  4966  0A53                     l4939:
  4967  0A53  083E               	movf	___fldiv@rem+3,w
  4968  0A54  043D               	iorwf	___fldiv@rem+2,w
  4969  0A55  043C               	iorwf	___fldiv@rem+1,w
  4970  0A56  043B               	iorwf	___fldiv@rem,w
  4971  0A57  1D03               	btfss	3,2
  4972  0A58  1442               	bsf	___fldiv@grs,0
  4973  0A59                     l4953:
  4974  0A59  1BB4               	btfsc	___fldiv@b+2,7
  4975  0A5A  2A76               	goto	l4955
  4976  0A5B  3001               	movlw	1
  4977  0A5C  00B6               	movwf	??___fldiv
  4978  0A5D                     u4765:
  4979  0A5D  1003               	clrc
  4980  0A5E  0DB2               	rlf	___fldiv@b,f
  4981  0A5F  0DB3               	rlf	___fldiv@b+1,f
  4982  0A60  0DB4               	rlf	___fldiv@b+2,f
  4983  0A61  0DB5               	rlf	___fldiv@b+3,f
  4984  0A62  0BB6               	decfsz	??___fldiv,f
  4985  0A63  2A5D               	goto	u4765
  4986  0A64  1BC5               	btfsc	___fldiv@grs+3,7
  4987  0A65  1432               	bsf	___fldiv@b,0
  4988  0A66  3001               	movlw	1
  4989  0A67  00B6               	movwf	??___fldiv
  4990  0A68                     u4785:
  4991  0A68  1003               	clrc
  4992  0A69  0DC2               	rlf	___fldiv@grs,f
  4993  0A6A  0DC3               	rlf	___fldiv@grs+1,f
  4994  0A6B  0DC4               	rlf	___fldiv@grs+2,f
  4995  0A6C  0DC5               	rlf	___fldiv@grs+3,f
  4996  0A6D  0BB6               	decfsz	??___fldiv,f
  4997  0A6E  2A68               	goto	u4785
  4998  0A6F  30FF               	movlw	255
  4999  0A70  07C0               	addwf	___fldiv@new_exp,f
  5000  0A71  1803               	skipnc
  5001  0A72  0AC1               	incf	___fldiv@new_exp+1,f
  5002  0A73  30FF               	movlw	255
  5003  0A74  07C1               	addwf	___fldiv@new_exp+1,f
  5004  0A75  2A59               	goto	l4953
  5005  0A76                     l4955:
  5006  0A76  01C7               	clrf	___fldiv@aexp
  5007  0A77  1FC5               	btfss	___fldiv@grs+3,7
  5008  0A78  2A8F               	goto	l4965
  5009  0A79  30FF               	movlw	255
  5010  0A7A  0542               	andwf	___fldiv@grs,w
  5011  0A7B  00B6               	movwf	??___fldiv
  5012  0A7C  30FF               	movlw	255
  5013  0A7D  0543               	andwf	___fldiv@grs+1,w
  5014  0A7E  00B7               	movwf	??___fldiv+1
  5015  0A7F  30FF               	movlw	255
  5016  0A80  0544               	andwf	___fldiv@grs+2,w
  5017  0A81  00B8               	movwf	??___fldiv+2
  5018  0A82  307F               	movlw	127
  5019  0A83  0545               	andwf	___fldiv@grs+3,w
  5020  0A84  00B9               	movwf	??___fldiv+3
  5021  0A85  0839               	movf	??___fldiv+3,w
  5022  0A86  0438               	iorwf	??___fldiv+2,w
  5023  0A87  0437               	iorwf	??___fldiv+1,w
  5024  0A88  0436               	iorwf	??___fldiv,w
  5025  0A89  1903               	skipnz
  5026  0A8A  1832               	btfsc	___fldiv@b,0
  5027  0A8B  2A8D               	goto	l4961
  5028  0A8C  2A8F               	goto	l4965
  5029  0A8D                     l4961:
  5030  0A8D  01C7               	clrf	___fldiv@aexp
  5031  0A8E  0AC7               	incf	___fldiv@aexp,f
  5032  0A8F                     l4965:
  5033  0A8F  0847               	movf	___fldiv@aexp,w
  5034  0A90  1903               	btfsc	3,2
  5035  0A91  2AC1               	goto	l4975
  5036  0A92  3001               	movlw	1
  5037  0A93  07B2               	addwf	___fldiv@b,f
  5038  0A94  3000               	movlw	0
  5039  0A95  1803               	skipnc
  5040  0A96  3001               	movlw	1
  5041  0A97  07B3               	addwf	___fldiv@b+1,f
  5042  0A98  3000               	movlw	0
  5043  0A99  1803               	skipnc
  5044  0A9A  3001               	movlw	1
  5045  0A9B  07B4               	addwf	___fldiv@b+2,f
  5046  0A9C  3000               	movlw	0
  5047  0A9D  1803               	skipnc
  5048  0A9E  3001               	movlw	1
  5049  0A9F  07B5               	addwf	___fldiv@b+3,f
  5050  0AA0  1C35               	btfss	___fldiv@b+3,0
  5051  0AA1  2AC1               	goto	l4975
  5052  0AA2  0832               	movf	___fldiv@b,w
  5053  0AA3  00B6               	movwf	??___fldiv
  5054  0AA4  0833               	movf	___fldiv@b+1,w
  5055  0AA5  00B7               	movwf	??___fldiv+1
  5056  0AA6  0834               	movf	___fldiv@b+2,w
  5057  0AA7  00B8               	movwf	??___fldiv+2
  5058  0AA8  0835               	movf	___fldiv@b+3,w
  5059  0AA9  00B9               	movwf	??___fldiv+3
  5060  0AAA  3001               	movlw	1
  5061  0AAB  00BA               	movwf	??___fldiv+4
  5062  0AAC                     u4855:
  5063  0AAC  0D39               	rlf	??___fldiv+3,w
  5064  0AAD  0CB9               	rrf	??___fldiv+3,f
  5065  0AAE  0CB8               	rrf	??___fldiv+2,f
  5066  0AAF  0CB7               	rrf	??___fldiv+1,f
  5067  0AB0  0CB6               	rrf	??___fldiv,f
  5068  0AB1  0BBA               	decfsz	??___fldiv+4,f
  5069  0AB2  2AAC               	goto	u4855
  5070  0AB3  0839               	movf	??___fldiv+3,w
  5071  0AB4  00B5               	movwf	___fldiv@b+3
  5072  0AB5  0838               	movf	??___fldiv+2,w
  5073  0AB6  00B4               	movwf	___fldiv@b+2
  5074  0AB7  0837               	movf	??___fldiv+1,w
  5075  0AB8  00B3               	movwf	___fldiv@b+1
  5076  0AB9  0836               	movf	??___fldiv,w
  5077  0ABA  00B2               	movwf	___fldiv@b
  5078  0ABB  3001               	movlw	1
  5079  0ABC  07C0               	addwf	___fldiv@new_exp,f
  5080  0ABD  1803               	skipnc
  5081  0ABE  0AC1               	incf	___fldiv@new_exp+1,f
  5082  0ABF  3000               	movlw	0
  5083  0AC0  07C1               	addwf	___fldiv@new_exp+1,f
  5084  0AC1                     l4975:
  5085  0AC1  0841               	movf	___fldiv@new_exp+1,w
  5086  0AC2  3A80               	xorlw	128
  5087  0AC3  00FF               	movwf	127
  5088  0AC4  3080               	movlw	128
  5089  0AC5  027F               	subwf	127,w
  5090  0AC6  1D03               	skipz
  5091  0AC7  2ACA               	goto	u4865
  5092  0AC8  30FF               	movlw	255
  5093  0AC9  0240               	subwf	___fldiv@new_exp,w
  5094  0ACA                     u4865:
  5095  0ACA  1C03               	skipc
  5096  0ACB  2ADA               	goto	l4979
  5097  0ACC  30FF               	movlw	255
  5098  0ACD  1283               	bcf	3,5	;RP0=0, select bank0
  5099  0ACE  1303               	bcf	3,6	;RP1=0, select bank0
  5100  0ACF  00C0               	movwf	___fldiv@new_exp
  5101  0AD0  3000               	movlw	0
  5102  0AD1  00C1               	movwf	___fldiv@new_exp+1
  5103  0AD2  3000               	movlw	0
  5104  0AD3  00B5               	movwf	___fldiv@b+3
  5105  0AD4  3000               	movlw	0
  5106  0AD5  00B4               	movwf	___fldiv@b+2
  5107  0AD6  3000               	movlw	0
  5108  0AD7  00B3               	movwf	___fldiv@b+1
  5109  0AD8  3000               	movlw	0
  5110  0AD9  00B2               	movwf	___fldiv@b
  5111  0ADA                     l4979:
  5112  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  5113  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  5114  0ADC  0841               	movf	___fldiv@new_exp+1,w
  5115  0ADD  3A80               	xorlw	128
  5116  0ADE  00FF               	movwf	127
  5117  0ADF  3080               	movlw	128
  5118  0AE0  027F               	subwf	127,w
  5119  0AE1  1D03               	skipz
  5120  0AE2  2AE5               	goto	u4875
  5121  0AE3  3001               	movlw	1
  5122  0AE4  0240               	subwf	___fldiv@new_exp,w
  5123  0AE5                     u4875:
  5124  0AE5  1803               	skipnc
  5125  0AE6  2AF4               	goto	l1368
  5126  0AE7  1283               	bcf	3,5	;RP0=0, select bank0
  5127  0AE8  1303               	bcf	3,6	;RP1=0, select bank0
  5128  0AE9  01C0               	clrf	___fldiv@new_exp
  5129  0AEA  01C1               	clrf	___fldiv@new_exp+1
  5130  0AEB  3000               	movlw	0
  5131  0AEC  00B5               	movwf	___fldiv@b+3
  5132  0AED  3000               	movlw	0
  5133  0AEE  00B4               	movwf	___fldiv@b+2
  5134  0AEF  3000               	movlw	0
  5135  0AF0  00B3               	movwf	___fldiv@b+1
  5136  0AF1  3000               	movlw	0
  5137  0AF2  00B2               	movwf	___fldiv@b
  5138  0AF3  01BF               	clrf	___fldiv@sign
  5139  0AF4                     l1368:
  5140  0AF4  1283               	bcf	3,5	;RP0=0, select bank0
  5141  0AF5  1303               	bcf	3,6	;RP1=0, select bank0
  5142  0AF6  0840               	movf	___fldiv@new_exp,w
  5143  0AF7  00B6               	movwf	??___fldiv
  5144  0AF8  0836               	movf	??___fldiv,w
  5145  0AF9  00C6               	movwf	___fldiv@bexp
  5146  0AFA  1C46               	btfss	___fldiv@bexp,0
  5147  0AFB  2AFE               	goto	l4991
  5148  0AFC  17B4               	bsf	___fldiv@b+2,7
  5149  0AFD  2B02               	goto	l1370
  5150  0AFE                     l4991:
  5151  0AFE  307F               	movlw	127
  5152  0AFF  00B6               	movwf	??___fldiv
  5153  0B00  0836               	movf	??___fldiv,w
  5154  0B01  05B4               	andwf	___fldiv@b+2,f
  5155  0B02                     l1370:
  5156  0B02  0846               	movf	___fldiv@bexp,w
  5157  0B03  00B6               	movwf	??___fldiv
  5158  0B04  1003               	clrc
  5159  0B05  0C36               	rrf	??___fldiv,w
  5160  0B06  00B7               	movwf	??___fldiv+1
  5161  0B07  0837               	movf	??___fldiv+1,w
  5162  0B08  00B5               	movwf	___fldiv@b+3
  5163  0B09  29C7               	goto	L7
  5164  0B0A                     __end_of___fldiv:
  5165                           
  5166                           	psect	text7
  5167  19DC                     __ptext7:	
  5168 ;; *************** function _Package_Usart_is_for_me *****************
  5169 ;; Defined at:
  5170 ;;		line 8 in file "protocolo.c"
  5171 ;; Parameters:    Size  Location     Type
  5172 ;;		None
  5173 ;; Auto vars:     Size  Location     Type
  5174 ;;  retorno         1    0[BANK0 ] unsigned char 
  5175 ;; Return value:  Size  Location     Type
  5176 ;;                  1    wreg      unsigned char 
  5177 ;; Registers used:
  5178 ;;		wreg, status,2, status,0
  5179 ;; Tracked objects:
  5180 ;;		On entry : 300/100
  5181 ;;		On exit  : 300/0
  5182 ;;		Unchanged: 0/0
  5183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5184 ;;      Params:         0       0       0       0       0
  5185 ;;      Locals:         0       1       0       0       0
  5186 ;;      Temps:          0       0       0       0       0
  5187 ;;      Totals:         0       1       0       0       0
  5188 ;;Total ram usage:        1 bytes
  5189 ;; Hardware stack levels used: 1
  5190 ;; Hardware stack levels required when called: 1
  5191 ;; This function calls:
  5192 ;;		Nothing
  5193 ;; This function is called by:
  5194 ;;		_MediaPlacaVaccum
  5195 ;; This function uses a non-reentrant model
  5196 ;;
  5197                           
  5198                           
  5199                           ;psect for function _Package_Usart_is_for_me
  5200  19DC                     _Package_Usart_is_for_me:
  5201                           
  5202                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  5203                           
  5204                           ;incstack = 0
  5205                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  5206  19DC  1C64               	btfss	_generic_status^(0+128),0
  5207  19DD  29F0               	goto	l4797
  5208                           
  5209                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  5210  19DE  1283               	bcf	3,5	;RP0=0, select bank2
  5211  19DF  1703               	bsf	3,6	;RP1=1, select bank2
  5212  19E0  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  5213  19E1  1683               	bsf	3,5	;RP0=1, select bank1
  5214  19E2  1303               	bcf	3,6	;RP1=0, select bank1
  5215  19E3  0661               	xorwf	_Board_Number^(0+128),w
  5216  19E4  1903               	skipnz
  5217  19E5  29EB               	goto	l817
  5218  19E6  1283               	bcf	3,5	;RP0=0, select bank2
  5219  19E7  1703               	bsf	3,6	;RP1=1, select bank2
  5220  19E8  0A13               	incf	(_usart_buffer^(0+256)+3),w	;volatile
  5221  19E9  1D03               	btfss	3,2
  5222  19EA  29F0               	goto	l4797
  5223  19EB                     l817:
  5224                           
  5225                           ;protocolo.c: 13:             retorno=1;
  5226  19EB  1283               	bcf	3,5	;RP0=0, select bank0
  5227  19EC  1303               	bcf	3,6	;RP1=0, select bank0
  5228  19ED  01A0               	clrf	Package_Usart_is_for_me@retorno
  5229  19EE  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  5230  19EF  29F3               	goto	l4801
  5231  19F0                     l4797:
  5232                           
  5233                           ;protocolo.c: 15:             retorno=0;
  5234  19F0  1283               	bcf	3,5	;RP0=0, select bank0
  5235  19F1  1303               	bcf	3,6	;RP1=0, select bank0
  5236  19F2  01A0               	clrf	Package_Usart_is_for_me@retorno
  5237  19F3                     l4801:
  5238                           
  5239                           ;protocolo.c: 21:      return retorno;
  5240  19F3  0820               	movf	Package_Usart_is_for_me@retorno,w
  5241  19F4  0008               	return
  5242  19F5                     __end_of_Package_Usart_is_for_me:
  5243                           
  5244                           	psect	text8
  5245  1ECF                     __ptext8:	
  5246 ;; *************** function _ADC_Media_10bits *****************
  5247 ;; Defined at:
  5248 ;;		line 20 in file "adc.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;  canal           1    wreg     unsigned char 
  5251 ;; Auto vars:     Size  Location     Type
  5252 ;;  canal           1   19[BANK0 ] unsigned char 
  5253 ;;  value           2   20[BANK0 ] unsigned int 
  5254 ;;  i               1   22[BANK0 ] unsigned char 
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  4   14[BANK0 ] float 
  5257 ;; Registers used:
  5258 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5259 ;; Tracked objects:
  5260 ;;		On entry : 300/100
  5261 ;;		On exit  : 300/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5264 ;;      Params:         0       4       0       0       0
  5265 ;;      Locals:         0       4       0       0       0
  5266 ;;      Temps:          0       1       0       0       0
  5267 ;;      Totals:         0       9       0       0       0
  5268 ;;Total ram usage:        9 bytes
  5269 ;; Hardware stack levels used: 1
  5270 ;; Hardware stack levels required when called: 2
  5271 ;; This function calls:
  5272 ;;		___lwdiv
  5273 ;;		___xxtofl
  5274 ;;		_captura
  5275 ;;		_my_delay_ms
  5276 ;; This function is called by:
  5277 ;;		_MediaPlacaVaccum
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           
  5282                           ;psect for function _ADC_Media_10bits
  5283  1ECF                     _ADC_Media_10bits:
  5284                           
  5285                           ;incstack = 0
  5286                           ; Regs used in _ADC_Media_10bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5287                           ;ADC_Media_10bits@canal stored from wreg
  5288  1ECF  1283               	bcf	3,5	;RP0=0, select bank0
  5289  1ED0  00B3               	movwf	ADC_Media_10bits@canal
  5290                           
  5291                           ;adc.c: 21:       unsigned int value;;adc.c: 22:       unsigned char i;;adc.c: 23:      
      +                           ADCON0bits.CHS=canal;
  5292  1ED1  0833               	movf	ADC_Media_10bits@canal,w
  5293  1ED2  00B2               	movwf	??_ADC_Media_10bits
  5294  1ED3  0DB2               	rlf	??_ADC_Media_10bits,f
  5295  1ED4  0DB2               	rlf	??_ADC_Media_10bits,f
  5296  1ED5  081F               	movf	31,w	;volatile
  5297  1ED6  0632               	xorwf	??_ADC_Media_10bits,w
  5298  1ED7  39C3               	andlw	-61
  5299  1ED8  0632               	xorwf	??_ADC_Media_10bits,w
  5300  1ED9  009F               	movwf	31	;volatile
  5301                           
  5302                           ;adc.c: 24:       my_delay_ms(1);
  5303  1EDA  3000               	movlw	0
  5304  1EDB  00A3               	movwf	my_delay_ms@time+3
  5305  1EDC  3000               	movlw	0
  5306  1EDD  00A2               	movwf	my_delay_ms@time+2
  5307  1EDE  3000               	movlw	0
  5308  1EDF  00A1               	movwf	my_delay_ms@time+1
  5309  1EE0  3001               	movlw	1
  5310  1EE1  00A0               	movwf	my_delay_ms@time
  5311  1EE2  160A  158A  24CD  160A  158A  	fcall	_my_delay_ms
  5312                           
  5313                           ;adc.c: 26:       value=0;
  5314  1EE7  01B4               	clrf	ADC_Media_10bits@value
  5315  1EE8  01B5               	clrf	ADC_Media_10bits@value+1
  5316                           
  5317                           ;adc.c: 27:       for(i=1;i<=50;i++)
  5318  1EE9  01B6               	clrf	ADC_Media_10bits@i
  5319  1EEA  0AB6               	incf	ADC_Media_10bits@i,f
  5320  1EEB                     l4779:
  5321                           
  5322                           ;adc.c: 28:           value+=captura();
  5323  1EEB  120A  118A  27F6  160A  158A  	fcall	_captura
  5324  1EF0  0820               	movf	?_captura,w
  5325  1EF1  07B4               	addwf	ADC_Media_10bits@value,f
  5326  1EF2  1803               	skipnc
  5327  1EF3  0AB5               	incf	ADC_Media_10bits@value+1,f
  5328  1EF4  0821               	movf	?_captura+1,w
  5329  1EF5  07B5               	addwf	ADC_Media_10bits@value+1,f
  5330  1EF6  3001               	movlw	1
  5331  1EF7  00B2               	movwf	??_ADC_Media_10bits
  5332  1EF8  0832               	movf	??_ADC_Media_10bits,w
  5333  1EF9  07B6               	addwf	ADC_Media_10bits@i,f
  5334  1EFA  3033               	movlw	51
  5335  1EFB  0236               	subwf	ADC_Media_10bits@i,w
  5336  1EFC  1C03               	skipc
  5337  1EFD  2EEB               	goto	l4779
  5338                           
  5339                           ;adc.c: 29:       value/=(i-1);
  5340  1EFE  0836               	movf	ADC_Media_10bits@i,w
  5341  1EFF  3EFF               	addlw	255
  5342  1F00  00A0               	movwf	___lwdiv@divisor
  5343  1F01  30FF               	movlw	255
  5344  1F02  1803               	skipnc
  5345  1F03  3000               	movlw	0
  5346  1F04  00A1               	movwf	___lwdiv@divisor+1
  5347  1F05  0835               	movf	ADC_Media_10bits@value+1,w
  5348  1F06  00A3               	movwf	___lwdiv@dividend+1
  5349  1F07  0834               	movf	ADC_Media_10bits@value,w
  5350  1F08  00A2               	movwf	___lwdiv@dividend
  5351  1F09  160A  158A  2578  160A  158A  	fcall	___lwdiv
  5352  1F0E  0821               	movf	?___lwdiv+1,w
  5353  1F0F  00B5               	movwf	ADC_Media_10bits@value+1
  5354  1F10  0820               	movf	?___lwdiv,w
  5355  1F11  00B4               	movwf	ADC_Media_10bits@value
  5356                           
  5357                           ;adc.c: 30:       return value;
  5358  1F12  0834               	movf	ADC_Media_10bits@value,w
  5359  1F13  00A0               	movwf	___xxtofl@val
  5360  1F14  0835               	movf	ADC_Media_10bits@value+1,w
  5361  1F15  00A1               	movwf	___xxtofl@val+1
  5362  1F16  01A2               	clrf	___xxtofl@val+2
  5363  1F17  01A3               	clrf	___xxtofl@val+3
  5364  1F18  3000               	movlw	0
  5365  1F19  160A  118A  2106   	fcall	___xxtofl
  5366  1F1C  0823               	movf	?___xxtofl+3,w
  5367  1F1D  00B1               	movwf	?_ADC_Media_10bits+3
  5368  1F1E  0822               	movf	?___xxtofl+2,w
  5369  1F1F  00B0               	movwf	?_ADC_Media_10bits+2
  5370  1F20  0821               	movf	?___xxtofl+1,w
  5371  1F21  00AF               	movwf	?_ADC_Media_10bits+1
  5372  1F22  0820               	movf	?___xxtofl,w
  5373  1F23  00AE               	movwf	?_ADC_Media_10bits
  5374  1F24  0008               	return
  5375  1F25                     __end_of_ADC_Media_10bits:
  5376                           
  5377                           	psect	text9
  5378  1CCD                     __ptext9:	
  5379 ;; *************** function _my_delay_ms *****************
  5380 ;; Defined at:
  5381 ;;		line 5 in file "my_delay.c"
  5382 ;; Parameters:    Size  Location     Type
  5383 ;;  time            4    0[BANK0 ] long 
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;  i               4    6[BANK0 ] long 
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  1    wreg      void 
  5388 ;; Registers used:
  5389 ;;		wreg, btemp+1
  5390 ;; Tracked objects:
  5391 ;;		On entry : 300/0
  5392 ;;		On exit  : 300/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5395 ;;      Params:         0       4       0       0       0
  5396 ;;      Locals:         0       4       0       0       0
  5397 ;;      Temps:          0       2       0       0       0
  5398 ;;      Totals:         0      10       0       0       0
  5399 ;;Total ram usage:       10 bytes
  5400 ;; Hardware stack levels used: 1
  5401 ;; Hardware stack levels required when called: 1
  5402 ;; This function calls:
  5403 ;;		Nothing
  5404 ;; This function is called by:
  5405 ;;		_MediaPlacaVaccum
  5406 ;;		_ADC_Media_10bits
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           
  5410                           
  5411                           ;psect for function _my_delay_ms
  5412  1CCD                     _my_delay_ms:
  5413                           
  5414                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  5415                           
  5416                           ;incstack = 0
  5417                           ; Regs used in _my_delay_ms: [wreg+btemp+1]
  5418  1CCD  3000               	movlw	0
  5419  1CCE  00A9               	movwf	my_delay_ms@i+3
  5420  1CCF  3000               	movlw	0
  5421  1CD0  00A8               	movwf	my_delay_ms@i+2
  5422  1CD1  3000               	movlw	0
  5423  1CD2  00A7               	movwf	my_delay_ms@i+1
  5424  1CD3  3000               	movlw	0
  5425  1CD4  00A6               	movwf	my_delay_ms@i
  5426  1CD5                     l3889:
  5427  1CD5  0829               	movf	my_delay_ms@i+3,w
  5428  1CD6  3A80               	xorlw	128
  5429  1CD7  00FF               	movwf	127
  5430  1CD8  0823               	movf	my_delay_ms@time+3,w
  5431  1CD9  3A80               	xorlw	128
  5432  1CDA  027F               	subwf	127,w
  5433  1CDB  1D03               	skipz
  5434  1CDC  2CE7               	goto	u2993
  5435  1CDD  0822               	movf	my_delay_ms@time+2,w
  5436  1CDE  0228               	subwf	my_delay_ms@i+2,w
  5437  1CDF  1D03               	skipz
  5438  1CE0  2CE7               	goto	u2993
  5439  1CE1  0821               	movf	my_delay_ms@time+1,w
  5440  1CE2  0227               	subwf	my_delay_ms@i+1,w
  5441  1CE3  1D03               	skipz
  5442  1CE4  2CE7               	goto	u2993
  5443  1CE5  0820               	movf	my_delay_ms@time,w
  5444  1CE6  0226               	subwf	my_delay_ms@i,w
  5445  1CE7                     u2993:
  5446  1CE7  1803               	btfsc	3,0
  5447  1CE8  0008               	return
  5448                           
  5449                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  5450  1CE9  3003               	movlw	3
  5451  1CEA  1283               	bcf	3,5	;RP0=0, select bank0
  5452  1CEB  1303               	bcf	3,6	;RP1=0, select bank0
  5453  1CEC  00A5               	movwf	??_my_delay_ms+1
  5454  1CED  3097               	movlw	151
  5455  1CEE  00A4               	movwf	??_my_delay_ms
  5456  1CEF                     u5527:
  5457  1CEF  0BA4               	decfsz	??_my_delay_ms,f
  5458  1CF0  2CEF               	goto	u5527
  5459  1CF1  0BA5               	decfsz	??_my_delay_ms+1,f
  5460  1CF2  2CEF               	goto	u5527
  5461                           
  5462                           ;my_delay.c: 10:             }
  5463  1CF3  3001               	movlw	1
  5464  1CF4  1283               	bcf	3,5	;RP0=0, select bank0
  5465  1CF5  1303               	bcf	3,6	;RP1=0, select bank0
  5466  1CF6  07A6               	addwf	my_delay_ms@i,f
  5467  1CF7  3000               	movlw	0
  5468  1CF8  1803               	skipnc
  5469  1CF9  3001               	movlw	1
  5470  1CFA  07A7               	addwf	my_delay_ms@i+1,f
  5471  1CFB  3000               	movlw	0
  5472  1CFC  1803               	skipnc
  5473  1CFD  3001               	movlw	1
  5474  1CFE  07A8               	addwf	my_delay_ms@i+2,f
  5475  1CFF  3000               	movlw	0
  5476  1D00  1803               	skipnc
  5477  1D01  3001               	movlw	1
  5478  1D02  07A9               	addwf	my_delay_ms@i+3,f
  5479  1D03  2CD5               	goto	l3889
  5480  1D04                     __end_of_my_delay_ms:
  5481                           
  5482                           	psect	text10
  5483  07F6                     __ptext10:	
  5484 ;; *************** function _captura *****************
  5485 ;; Defined at:
  5486 ;;		line 140 in file "adc.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;		None
  5489 ;; Auto vars:     Size  Location     Type
  5490 ;;		None
  5491 ;; Return value:  Size  Location     Type
  5492 ;;                  2    0[BANK0 ] unsigned int 
  5493 ;; Registers used:
  5494 ;;		wreg
  5495 ;; Tracked objects:
  5496 ;;		On entry : 300/0
  5497 ;;		On exit  : 300/0
  5498 ;;		Unchanged: 0/0
  5499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5500 ;;      Params:         0       2       0       0       0
  5501 ;;      Locals:         0       0       0       0       0
  5502 ;;      Temps:          0       0       0       0       0
  5503 ;;      Totals:         0       2       0       0       0
  5504 ;;Total ram usage:        2 bytes
  5505 ;; Hardware stack levels used: 1
  5506 ;; Hardware stack levels required when called: 1
  5507 ;; This function calls:
  5508 ;;		Nothing
  5509 ;; This function is called by:
  5510 ;;		_ADC_Media_10bits
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           
  5515                           ;psect for function _captura
  5516  07F6                     _captura:
  5517                           
  5518                           ;adc.c: 141:     ADCON0bits.GO=1;
  5519                           
  5520                           ;incstack = 0
  5521                           ; Regs used in _captura: [wreg]
  5522  07F6  149F               	bsf	31,1	;volatile
  5523  07F7                     l495:	
  5524                           ;adc.c: 145:           }
  5525                           
  5526                           
  5527                           ;adc.c: 142:     while(ADCON0bits.GO)
  5528  07F7  189F               	btfsc	31,1	;volatile
  5529  07F8  2FF7               	goto	l495
  5530                           
  5531                           ;adc.c: 146:     return ((ADRESH<<8)+ADRESL);
  5532  07F9  081E               	movf	30,w	;volatile
  5533  07FA  00A1               	movwf	?_captura+1
  5534  07FB  1683               	bsf	3,5	;RP0=1, select bank1
  5535  07FC  081E               	movf	30,w	;volatile
  5536  07FD  1283               	bcf	3,5	;RP0=0, select bank0
  5537  07FE  00A0               	movwf	?_captura
  5538  07FF  0008               	return
  5539  0800                     __end_of_captura:
  5540                           
  5541                           	psect	text11
  5542  1106                     __ptext11:	
  5543 ;; *************** function ___xxtofl *****************
  5544 ;; Defined at:
  5545 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  5546 ;; Parameters:    Size  Location     Type
  5547 ;;  sign            1    wreg     unsigned char 
  5548 ;;  val             4    0[BANK0 ] long 
  5549 ;; Auto vars:     Size  Location     Type
  5550 ;;  sign            1    8[BANK0 ] unsigned char 
  5551 ;;  arg             4   10[BANK0 ] unsigned long 
  5552 ;;  exp             1    9[BANK0 ] unsigned char 
  5553 ;; Return value:  Size  Location     Type
  5554 ;;                  4    0[BANK0 ] unsigned char 
  5555 ;; Registers used:
  5556 ;;		wreg, status,2, status,0
  5557 ;; Tracked objects:
  5558 ;;		On entry : 300/0
  5559 ;;		On exit  : 300/0
  5560 ;;		Unchanged: 0/0
  5561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5562 ;;      Params:         0       4       0       0       0
  5563 ;;      Locals:         0       6       0       0       0
  5564 ;;      Temps:          0       4       0       0       0
  5565 ;;      Totals:         0      14       0       0       0
  5566 ;;Total ram usage:       14 bytes
  5567 ;; Hardware stack levels used: 1
  5568 ;; Hardware stack levels required when called: 1
  5569 ;; This function calls:
  5570 ;;		Nothing
  5571 ;; This function is called by:
  5572 ;;		_MediaPlacaVaccum
  5573 ;;		_ADC_Media_10bits
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577                           
  5578                           ;psect for function ___xxtofl
  5579  1106                     ___xxtofl:
  5580                           
  5581                           ;incstack = 0
  5582                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5583                           ;___xxtofl@sign stored from wreg
  5584  1106  00A8               	movwf	___xxtofl@sign
  5585  1107  0828               	movf	___xxtofl@sign,w
  5586  1108  1D03               	btfss	3,2
  5587  1109  1FA3               	btfss	___xxtofl@val+3,7
  5588  110A  291B               	goto	l4331
  5589  110B  0920               	comf	___xxtofl@val,w
  5590  110C  00AA               	movwf	___xxtofl@arg
  5591  110D  0921               	comf	___xxtofl@val+1,w
  5592  110E  00AB               	movwf	___xxtofl@arg+1
  5593  110F  0922               	comf	___xxtofl@val+2,w
  5594  1110  00AC               	movwf	___xxtofl@arg+2
  5595  1111  0923               	comf	___xxtofl@val+3,w
  5596  1112  00AD               	movwf	___xxtofl@arg+3
  5597  1113  0AAA               	incf	___xxtofl@arg,f
  5598  1114  1903               	skipnz
  5599  1115  0AAB               	incf	___xxtofl@arg+1,f
  5600  1116  1903               	skipnz
  5601  1117  0AAC               	incf	___xxtofl@arg+2,f
  5602  1118  1903               	skipnz
  5603  1119  0AAD               	incf	___xxtofl@arg+3,f
  5604  111A  2923               	goto	l1430
  5605  111B                     l4331:
  5606  111B  0823               	movf	___xxtofl@val+3,w
  5607  111C  00AD               	movwf	___xxtofl@arg+3
  5608  111D  0822               	movf	___xxtofl@val+2,w
  5609  111E  00AC               	movwf	___xxtofl@arg+2
  5610  111F  0821               	movf	___xxtofl@val+1,w
  5611  1120  00AB               	movwf	___xxtofl@arg+1
  5612  1121  0820               	movf	___xxtofl@val,w
  5613  1122  00AA               	movwf	___xxtofl@arg
  5614  1123                     l1430:
  5615  1123  0823               	movf	___xxtofl@val+3,w
  5616  1124  0422               	iorwf	___xxtofl@val+2,w
  5617  1125  0421               	iorwf	___xxtofl@val+1,w
  5618  1126  0420               	iorwf	___xxtofl@val,w
  5619  1127  1D03               	skipz
  5620  1128  2932               	goto	l4337
  5621  1129  3000               	movlw	0
  5622  112A  00A3               	movwf	?___xxtofl+3
  5623  112B  3000               	movlw	0
  5624  112C  00A2               	movwf	?___xxtofl+2
  5625  112D  3000               	movlw	0
  5626  112E  00A1               	movwf	?___xxtofl+1
  5627  112F  3000               	movlw	0
  5628  1130  00A0               	movwf	?___xxtofl
  5629  1131  0008               	return
  5630  1132                     l4337:
  5631  1132  3096               	movlw	150
  5632  1133  00A4               	movwf	??___xxtofl
  5633  1134  0824               	movf	??___xxtofl,w
  5634  1135  00A9               	movwf	___xxtofl@exp
  5635  1136                     l4341:
  5636  1136  30FE               	movlw	254
  5637  1137  052D               	andwf	___xxtofl@arg+3,w
  5638  1138  1903               	btfsc	3,2
  5639  1139  2963               	goto	l1436
  5640  113A  3001               	movlw	1
  5641  113B  00A4               	movwf	??___xxtofl
  5642  113C  0824               	movf	??___xxtofl,w
  5643  113D  07A9               	addwf	___xxtofl@exp,f
  5644  113E  3001               	movlw	1
  5645  113F                     u4055:
  5646  113F  1003               	clrc
  5647  1140  0CAD               	rrf	___xxtofl@arg+3,f
  5648  1141  0CAC               	rrf	___xxtofl@arg+2,f
  5649  1142  0CAB               	rrf	___xxtofl@arg+1,f
  5650  1143  0CAA               	rrf	___xxtofl@arg,f
  5651  1144  3EFF               	addlw	-1
  5652  1145  1D03               	skipz
  5653  1146  293F               	goto	u4055
  5654  1147  2936               	goto	l4341
  5655  1148                     l4343:
  5656  1148  3001               	movlw	1
  5657  1149  00A4               	movwf	??___xxtofl
  5658  114A  0824               	movf	??___xxtofl,w
  5659  114B  07A9               	addwf	___xxtofl@exp,f
  5660  114C  3001               	movlw	1
  5661  114D  07AA               	addwf	___xxtofl@arg,f
  5662  114E  3000               	movlw	0
  5663  114F  1803               	skipnc
  5664  1150  3001               	movlw	1
  5665  1151  07AB               	addwf	___xxtofl@arg+1,f
  5666  1152  3000               	movlw	0
  5667  1153  1803               	skipnc
  5668  1154  3001               	movlw	1
  5669  1155  07AC               	addwf	___xxtofl@arg+2,f
  5670  1156  3000               	movlw	0
  5671  1157  1803               	skipnc
  5672  1158  3001               	movlw	1
  5673  1159  07AD               	addwf	___xxtofl@arg+3,f
  5674  115A  3001               	movlw	1
  5675  115B                     u4075:
  5676  115B  1003               	clrc
  5677  115C  0CAD               	rrf	___xxtofl@arg+3,f
  5678  115D  0CAC               	rrf	___xxtofl@arg+2,f
  5679  115E  0CAB               	rrf	___xxtofl@arg+1,f
  5680  115F  0CAA               	rrf	___xxtofl@arg,f
  5681  1160  3EFF               	addlw	-1
  5682  1161  1D03               	skipz
  5683  1162  295B               	goto	u4075
  5684  1163                     l1436:
  5685  1163  30FF               	movlw	255
  5686  1164  052D               	andwf	___xxtofl@arg+3,w
  5687  1165  1903               	btfsc	3,2
  5688  1166  2977               	goto	l4351
  5689  1167  2948               	goto	l4343
  5690  1168                     l4353:
  5691  1168  3002               	movlw	2
  5692  1169  0229               	subwf	___xxtofl@exp,w
  5693  116A  1C03               	btfss	3,0
  5694  116B  2979               	goto	l1443
  5695  116C  3001               	movlw	1
  5696  116D  02A9               	subwf	___xxtofl@exp,f
  5697  116E  3001               	movlw	1
  5698  116F  00A4               	movwf	??___xxtofl
  5699  1170                     u4095:
  5700  1170  1003               	clrc
  5701  1171  0DAA               	rlf	___xxtofl@arg,f
  5702  1172  0DAB               	rlf	___xxtofl@arg+1,f
  5703  1173  0DAC               	rlf	___xxtofl@arg+2,f
  5704  1174  0DAD               	rlf	___xxtofl@arg+3,f
  5705  1175  0BA4               	decfsz	??___xxtofl,f
  5706  1176  2970               	goto	u4095
  5707  1177                     l4351:
  5708  1177  1FAC               	btfss	___xxtofl@arg+2,7
  5709  1178  2968               	goto	l4353
  5710  1179                     l1443:
  5711  1179  1829               	btfsc	___xxtofl@exp,0
  5712  117A  2983               	goto	l1444
  5713  117B  30FF               	movlw	255
  5714  117C  05AA               	andwf	___xxtofl@arg,f
  5715  117D  30FF               	movlw	255
  5716  117E  05AB               	andwf	___xxtofl@arg+1,f
  5717  117F  307F               	movlw	127
  5718  1180  05AC               	andwf	___xxtofl@arg+2,f
  5719  1181  30FF               	movlw	255
  5720  1182  05AD               	andwf	___xxtofl@arg+3,f
  5721  1183                     l1444:
  5722  1183  1003               	clrc
  5723  1184  0CA9               	rrf	___xxtofl@exp,f
  5724  1185  0829               	movf	___xxtofl@exp,w
  5725  1186  00A4               	movwf	??___xxtofl
  5726  1187  01A5               	clrf	??___xxtofl+1
  5727  1188  01A6               	clrf	??___xxtofl+2
  5728  1189  01A7               	clrf	??___xxtofl+3
  5729  118A  3018               	movlw	24
  5730  118B                     u4135:
  5731  118B  1003               	clrc
  5732  118C  0DA4               	rlf	??___xxtofl,f
  5733  118D  0DA5               	rlf	??___xxtofl+1,f
  5734  118E  0DA6               	rlf	??___xxtofl+2,f
  5735  118F  0DA7               	rlf	??___xxtofl+3,f
  5736  1190  3EFF               	addlw	-1
  5737  1191  1D03               	skipz
  5738  1192  298B               	goto	u4135
  5739  1193  0824               	movf	??___xxtofl,w
  5740  1194  04AA               	iorwf	___xxtofl@arg,f
  5741  1195  0825               	movf	??___xxtofl+1,w
  5742  1196  04AB               	iorwf	___xxtofl@arg+1,f
  5743  1197  0826               	movf	??___xxtofl+2,w
  5744  1198  04AC               	iorwf	___xxtofl@arg+2,f
  5745  1199  0827               	movf	??___xxtofl+3,w
  5746  119A  04AD               	iorwf	___xxtofl@arg+3,f
  5747  119B  0828               	movf	___xxtofl@sign,w
  5748  119C  1D03               	btfss	3,2
  5749  119D  1FA3               	btfss	___xxtofl@val+3,7
  5750  119E  29A0               	goto	l4365
  5751  119F  17AD               	bsf	___xxtofl@arg+3,7
  5752  11A0                     l4365:
  5753  11A0  082D               	movf	___xxtofl@arg+3,w
  5754  11A1  00A3               	movwf	?___xxtofl+3
  5755  11A2  082C               	movf	___xxtofl@arg+2,w
  5756  11A3  00A2               	movwf	?___xxtofl+2
  5757  11A4  082B               	movf	___xxtofl@arg+1,w
  5758  11A5  00A1               	movwf	?___xxtofl+1
  5759  11A6  082A               	movf	___xxtofl@arg,w
  5760  11A7  00A0               	movwf	?___xxtofl
  5761  11A8  0008               	return
  5762  11A9                     __end_of___xxtofl:
  5763                           
  5764                           	psect	text12
  5765  1BCC                     __ptext12:	
  5766 ;; *************** function _I2C_Master_Init *****************
  5767 ;; Defined at:
  5768 ;;		line 7 in file "I2C.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;  c               4   14[BANK0 ] const unsigned long 
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;		None
  5773 ;; Return value:  Size  Location     Type
  5774 ;;                  1    wreg      void 
  5775 ;; Registers used:
  5776 ;;		wreg, status,2, status,0, pclath, cstack
  5777 ;; Tracked objects:
  5778 ;;		On entry : 300/0
  5779 ;;		On exit  : 300/100
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5782 ;;      Params:         0       4       0       0       0
  5783 ;;      Locals:         0       0       0       0       0
  5784 ;;      Temps:          0       4       0       0       0
  5785 ;;      Totals:         0       8       0       0       0
  5786 ;;Total ram usage:        8 bytes
  5787 ;; Hardware stack levels used: 1
  5788 ;; Hardware stack levels required when called: 2
  5789 ;; This function calls:
  5790 ;;		___lldiv
  5791 ;; This function is called by:
  5792 ;;		_main
  5793 ;; This function uses a non-reentrant model
  5794 ;;
  5795                           
  5796                           
  5797                           ;psect for function _I2C_Master_Init
  5798  1BCC                     _I2C_Master_Init:
  5799                           
  5800                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  5801                           
  5802                           ;incstack = 0
  5803                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  5804  1BCC  3028               	movlw	40
  5805  1BCD  0094               	movwf	20	;volatile
  5806                           
  5807                           ;I2C.c: 11:   SSPCON2 = 0;
  5808  1BCE  1683               	bsf	3,5	;RP0=1, select bank1
  5809  1BCF  0191               	clrf	17	;volatile
  5810                           
  5811                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  5812  1BD0  1283               	bcf	3,5	;RP0=0, select bank0
  5813  1BD1  082E               	movf	I2C_Master_Init@c,w
  5814  1BD2  00B2               	movwf	??_I2C_Master_Init
  5815  1BD3  082F               	movf	I2C_Master_Init@c+1,w
  5816  1BD4  00B3               	movwf	??_I2C_Master_Init+1
  5817  1BD5  0830               	movf	I2C_Master_Init@c+2,w
  5818  1BD6  00B4               	movwf	??_I2C_Master_Init+2
  5819  1BD7  0831               	movf	I2C_Master_Init@c+3,w
  5820  1BD8  00B5               	movwf	??_I2C_Master_Init+3
  5821  1BD9  3002               	movlw	2
  5822  1BDA                     u4895:
  5823  1BDA  1003               	clrc
  5824  1BDB  0DB2               	rlf	??_I2C_Master_Init,f
  5825  1BDC  0DB3               	rlf	??_I2C_Master_Init+1,f
  5826  1BDD  0DB4               	rlf	??_I2C_Master_Init+2,f
  5827  1BDE  0DB5               	rlf	??_I2C_Master_Init+3,f
  5828  1BDF  3EFF               	addlw	-1
  5829  1BE0  1D03               	skipz
  5830  1BE1  2BDA               	goto	u4895
  5831  1BE2  0835               	movf	??_I2C_Master_Init+3,w
  5832  1BE3  00A3               	movwf	___lldiv@divisor+3
  5833  1BE4  0834               	movf	??_I2C_Master_Init+2,w
  5834  1BE5  00A2               	movwf	___lldiv@divisor+2
  5835  1BE6  0833               	movf	??_I2C_Master_Init+1,w
  5836  1BE7  00A1               	movwf	___lldiv@divisor+1
  5837  1BE8  0832               	movf	??_I2C_Master_Init,w
  5838  1BE9  00A0               	movwf	___lldiv@divisor
  5839  1BEA  3000               	movlw	0
  5840  1BEB  00A7               	movwf	___lldiv@dividend+3
  5841  1BEC  307A               	movlw	122
  5842  1BED  00A6               	movwf	___lldiv@dividend+2
  5843  1BEE  3012               	movlw	18
  5844  1BEF  00A5               	movwf	___lldiv@dividend+1
  5845  1BF0  3000               	movlw	0
  5846  1BF1  00A4               	movwf	___lldiv@dividend
  5847  1BF2  160A  158A  2725   	fcall	___lldiv
  5848  1BF5  0820               	movf	?___lldiv,w
  5849  1BF6  3EFF               	addlw	255
  5850  1BF7  1683               	bsf	3,5	;RP0=1, select bank1
  5851  1BF8  0093               	movwf	19	;volatile
  5852                           
  5853                           ;I2C.c: 13:   SSPSTAT = 0;
  5854  1BF9  0194               	clrf	20	;volatile
  5855                           
  5856                           ;I2C.c: 14:   TRISC3 = 1;
  5857  1BFA  1587               	bsf	7,3	;volatile
  5858                           
  5859                           ;I2C.c: 15:   TRISC4 = 1;
  5860  1BFB  1607               	bsf	7,4	;volatile
  5861  1BFC  0008               	return
  5862  1BFD                     __end_of_I2C_Master_Init:
  5863                           
  5864                           	psect	text13
  5865  1F25                     __ptext13:	
  5866 ;; *************** function ___lldiv *****************
  5867 ;; Defined at:
  5868 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  5869 ;; Parameters:    Size  Location     Type
  5870 ;;  divisor         4    0[BANK0 ] unsigned long 
  5871 ;;  dividend        4    4[BANK0 ] unsigned long 
  5872 ;; Auto vars:     Size  Location     Type
  5873 ;;  quotient        4    9[BANK0 ] unsigned long 
  5874 ;;  counter         1   13[BANK0 ] unsigned char 
  5875 ;; Return value:  Size  Location     Type
  5876 ;;                  4    0[BANK0 ] unsigned long 
  5877 ;; Registers used:
  5878 ;;		wreg, status,2, status,0
  5879 ;; Tracked objects:
  5880 ;;		On entry : 300/0
  5881 ;;		On exit  : 300/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5884 ;;      Params:         0       8       0       0       0
  5885 ;;      Locals:         0       5       0       0       0
  5886 ;;      Temps:          0       1       0       0       0
  5887 ;;      Totals:         0      14       0       0       0
  5888 ;;Total ram usage:       14 bytes
  5889 ;; Hardware stack levels used: 1
  5890 ;; Hardware stack levels required when called: 1
  5891 ;; This function calls:
  5892 ;;		Nothing
  5893 ;; This function is called by:
  5894 ;;		_I2C_Master_Init
  5895 ;; This function uses a non-reentrant model
  5896 ;;
  5897                           
  5898                           
  5899                           ;psect for function ___lldiv
  5900  1F25                     ___lldiv:
  5901                           
  5902                           ;incstack = 0
  5903                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5904  1F25  3000               	movlw	0
  5905  1F26  00AC               	movwf	___lldiv@quotient+3
  5906  1F27  3000               	movlw	0
  5907  1F28  00AB               	movwf	___lldiv@quotient+2
  5908  1F29  3000               	movlw	0
  5909  1F2A  00AA               	movwf	___lldiv@quotient+1
  5910  1F2B  3000               	movlw	0
  5911  1F2C  00A9               	movwf	___lldiv@quotient
  5912  1F2D  0823               	movf	___lldiv@divisor+3,w
  5913  1F2E  0422               	iorwf	___lldiv@divisor+2,w
  5914  1F2F  0421               	iorwf	___lldiv@divisor+1,w
  5915  1F30  0420               	iorwf	___lldiv@divisor,w
  5916  1F31  1903               	skipnz
  5917  1F32  2F7A               	goto	l4825
  5918  1F33  01AD               	clrf	___lldiv@counter
  5919  1F34  0AAD               	incf	___lldiv@counter,f
  5920  1F35                     l4811:
  5921  1F35  1BA3               	btfsc	___lldiv@divisor+3,7
  5922  1F36  2F45               	goto	l4813
  5923  1F37  3001               	movlw	1
  5924  1F38  00A8               	movwf	??___lldiv
  5925  1F39                     u4475:
  5926  1F39  1003               	clrc
  5927  1F3A  0DA0               	rlf	___lldiv@divisor,f
  5928  1F3B  0DA1               	rlf	___lldiv@divisor+1,f
  5929  1F3C  0DA2               	rlf	___lldiv@divisor+2,f
  5930  1F3D  0DA3               	rlf	___lldiv@divisor+3,f
  5931  1F3E  0BA8               	decfsz	??___lldiv,f
  5932  1F3F  2F39               	goto	u4475
  5933  1F40  3001               	movlw	1
  5934  1F41  00A8               	movwf	??___lldiv
  5935  1F42  0828               	movf	??___lldiv,w
  5936  1F43  07AD               	addwf	___lldiv@counter,f
  5937  1F44  2F35               	goto	l4811
  5938  1F45                     l4813:
  5939  1F45  3001               	movlw	1
  5940  1F46  00A8               	movwf	??___lldiv
  5941  1F47                     u4495:
  5942  1F47  1003               	clrc
  5943  1F48  0DA9               	rlf	___lldiv@quotient,f
  5944  1F49  0DAA               	rlf	___lldiv@quotient+1,f
  5945  1F4A  0DAB               	rlf	___lldiv@quotient+2,f
  5946  1F4B  0DAC               	rlf	___lldiv@quotient+3,f
  5947  1F4C  0BA8               	decfsz	??___lldiv,f
  5948  1F4D  2F47               	goto	u4495
  5949  1F4E  0823               	movf	___lldiv@divisor+3,w
  5950  1F4F  0227               	subwf	___lldiv@dividend+3,w
  5951  1F50  1D03               	skipz
  5952  1F51  2F5C               	goto	u4505
  5953  1F52  0822               	movf	___lldiv@divisor+2,w
  5954  1F53  0226               	subwf	___lldiv@dividend+2,w
  5955  1F54  1D03               	skipz
  5956  1F55  2F5C               	goto	u4505
  5957  1F56  0821               	movf	___lldiv@divisor+1,w
  5958  1F57  0225               	subwf	___lldiv@dividend+1,w
  5959  1F58  1D03               	skipz
  5960  1F59  2F5C               	goto	u4505
  5961  1F5A  0820               	movf	___lldiv@divisor,w
  5962  1F5B  0224               	subwf	___lldiv@dividend,w
  5963  1F5C                     u4505:
  5964  1F5C  1C03               	skipc
  5965  1F5D  2F6D               	goto	l4821
  5966  1F5E  0820               	movf	___lldiv@divisor,w
  5967  1F5F  02A4               	subwf	___lldiv@dividend,f
  5968  1F60  0821               	movf	___lldiv@divisor+1,w
  5969  1F61  1C03               	skipc
  5970  1F62  0F21               	incfsz	___lldiv@divisor+1,w
  5971  1F63  02A5               	subwf	___lldiv@dividend+1,f
  5972  1F64  0822               	movf	___lldiv@divisor+2,w
  5973  1F65  1C03               	skipc
  5974  1F66  0F22               	incfsz	___lldiv@divisor+2,w
  5975  1F67  02A6               	subwf	___lldiv@dividend+2,f
  5976  1F68  0823               	movf	___lldiv@divisor+3,w
  5977  1F69  1C03               	skipc
  5978  1F6A  0F23               	incfsz	___lldiv@divisor+3,w
  5979  1F6B  02A7               	subwf	___lldiv@dividend+3,f
  5980  1F6C  1429               	bsf	___lldiv@quotient,0
  5981  1F6D                     l4821:
  5982  1F6D  3001               	movlw	1
  5983  1F6E                     u4515:
  5984  1F6E  1003               	clrc
  5985  1F6F  0CA3               	rrf	___lldiv@divisor+3,f
  5986  1F70  0CA2               	rrf	___lldiv@divisor+2,f
  5987  1F71  0CA1               	rrf	___lldiv@divisor+1,f
  5988  1F72  0CA0               	rrf	___lldiv@divisor,f
  5989  1F73  3EFF               	addlw	-1
  5990  1F74  1D03               	skipz
  5991  1F75  2F6E               	goto	u4515
  5992  1F76  3001               	movlw	1
  5993  1F77  02AD               	subwf	___lldiv@counter,f
  5994  1F78  1D03               	btfss	3,2
  5995  1F79  2F45               	goto	l4813
  5996  1F7A                     l4825:
  5997  1F7A  082C               	movf	___lldiv@quotient+3,w
  5998  1F7B  00A3               	movwf	?___lldiv+3
  5999  1F7C  082B               	movf	___lldiv@quotient+2,w
  6000  1F7D  00A2               	movwf	?___lldiv+2
  6001  1F7E  082A               	movf	___lldiv@quotient+1,w
  6002  1F7F  00A1               	movwf	?___lldiv+1
  6003  1F80  0829               	movf	___lldiv@quotient,w
  6004  1F81  00A0               	movwf	?___lldiv
  6005  1F82  0008               	return
  6006  1F83                     __end_of___lldiv:
  6007                           
  6008                           	psect	text14
  6009  0037                     __ptext14:	
  6010 ;; *************** function _Decodify_Command *****************
  6011 ;; Defined at:
  6012 ;;		line 313 in file "SlaveLiofilizadorVer1.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;		None
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;  sizedata        1   24[BANK1 ] unsigned char 
  6017 ;;  add             1   23[BANK1 ] unsigned char 
  6018 ;;  add_24LCxxxx    4   32[BANK1 ] unsigned long 
  6019 ;;  OutPut          4   27[BANK1 ] float 
  6020 ;;  tempint         2   25[BANK1 ] int 
  6021 ;;  dados           2   21[BANK1 ] int 
  6022 ;;  tempchar        1   31[BANK1 ] unsigned char 
  6023 ;; Return value:  Size  Location     Type
  6024 ;;                  1    wreg      void 
  6025 ;; Registers used:
  6026 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6027 ;; Tracked objects:
  6028 ;;		On entry : 300/100
  6029 ;;		On exit  : 0/0
  6030 ;;		Unchanged: 0/0
  6031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6032 ;;      Params:         0       0       0       0       0
  6033 ;;      Locals:         0       0      15       0       0
  6034 ;;      Temps:          0       0       4       0       0
  6035 ;;      Totals:         0       0      19       0       0
  6036 ;;Total ram usage:       19 bytes
  6037 ;; Hardware stack levels used: 1
  6038 ;; Hardware stack levels required when called: 6
  6039 ;; This function calls:
  6040 ;;		_EEPROM_24C1025_Fill_All
  6041 ;;		_EEPROM_24C1025_Read_Buffer_USART
  6042 ;;		_EEPROM_24C1025_Read_Byte
  6043 ;;		_EEPROM_24C1025_Read_Int
  6044 ;;		_EEPROM_24C1025_Read_Str
  6045 ;;		_EEPROM_24C1025_Write_Buffer
  6046 ;;		_EEPROM_24C1025_Write_Byte
  6047 ;;		_EEPROM_24C1025_Write_Int
  6048 ;;		_EEPROM_24C1025_Write_Str
  6049 ;;		_EEPROM_Read_Byte
  6050 ;;		_EEPROM_Read_Integer
  6051 ;;		_EEPROM_Read_String
  6052 ;;		_EEPROM_Write_Byte
  6053 ;;		_EEPROM_Write_Integer
  6054 ;;		_EEPROM_Write_String
  6055 ;;		_PROCULUS_Buzzer
  6056 ;;		_PROCULUS_Show_Screen
  6057 ;;		_PROCULUS_VP_Write_String
  6058 ;;		_Save_Log
  6059 ;;		_Send_Reply_OK
  6060 ;;		_Send_To_MB
  6061 ;;		_USART_put_int
  6062 ;;		_USART_put_string
  6063 ;;		_USART_putc
  6064 ;;		_USART_to_Protocol
  6065 ;;		___flmul
  6066 ;;		___fltol
  6067 ;;		_strcpy
  6068 ;;		_strlen
  6069 ;; This function is called by:
  6070 ;;		_main
  6071 ;; This function uses a non-reentrant model
  6072 ;;
  6073                           
  6074                           
  6075                           ;psect for function _Decodify_Command
  6076  0037                     _Decodify_Command:
  6077                           
  6078                           ;SlaveLiofilizadorVer1.c: 315:     int dados;;SlaveLiofilizadorVer1.c: 316:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 317:     int tempint;;SlaveLiofilizadorVer1.c: 318:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 319:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 331:     USART_to_Protocol(&usart_protocol);
  6079                           
  6080                           ;incstack = 0
  6081                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6082  0037  3090               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  6083  0038  160A  158A  267A  120A  118A  	fcall	_USART_to_Protocol
  6084                           
  6085                           ;SlaveLiofilizadorVer1.c: 333:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  6086  003D  1683               	bsf	3,5	;RP0=1, select bank3
  6087  003E  1703               	bsf	3,6	;RP1=1, select bank3
  6088  003F  0817               	movf	(_usart_protocol^(0+384)+7),w
  6089  0040  1303               	bcf	3,6	;RP1=0, select bank1
  6090  0041  00B1               	movwf	??_Decodify_Command^(0+128)
  6091  0042  0831               	movf	??_Decodify_Command^(0+128),w
  6092  0043  00C3               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6093                           
  6094                           ;SlaveLiofilizadorVer1.c: 334:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  6095  0044  1703               	bsf	3,6	;RP1=1, select bank3
  6096  0045  0818               	movf	(_usart_protocol^(0+384)+8),w
  6097  0046  1303               	bcf	3,6	;RP1=0, select bank1
  6098  0047  00B1               	movwf	??_Decodify_Command^(0+128)
  6099  0048  0831               	movf	??_Decodify_Command^(0+128),w
  6100  0049  00C2               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6101                           
  6102                           ;SlaveLiofilizadorVer1.c: 335:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  6103  004A  1703               	bsf	3,6	;RP1=1, select bank3
  6104  004B  0819               	movf	(_usart_protocol^(0+384)+9),w
  6105  004C  1303               	bcf	3,6	;RP1=0, select bank1
  6106  004D  00B1               	movwf	??_Decodify_Command^(0+128)
  6107  004E  0831               	movf	??_Decodify_Command^(0+128),w
  6108  004F  00C1               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6109                           
  6110                           ;SlaveLiofilizadorVer1.c: 336:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  6111  0050  1703               	bsf	3,6	;RP1=1, select bank3
  6112  0051  081A               	movf	(_usart_protocol^(0+384)+10),w
  6113  0052  1303               	bcf	3,6	;RP1=0, select bank1
  6114  0053  00B1               	movwf	??_Decodify_Command^(0+128)
  6115  0054  0831               	movf	??_Decodify_Command^(0+128),w
  6116  0055  00C0               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6117                           
  6118                           ;SlaveLiofilizadorVer1.c: 343:     switch(usart_protocol.command){
  6119  0056  2B31               	goto	l5849
  6120  0057                     l5689:
  6121                           
  6122                           ;SlaveLiofilizadorVer1.c: 352:              strcpy(buffer,"1.0.28_beta_vaccum");
  6123  0057  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  6124  0058  00B1               	movwf	??_Decodify_Command^(0+128)
  6125  0059  0831               	movf	??_Decodify_Command^(0+128),w
  6126  005A  1283               	bcf	3,5	;RP0=0, select bank0
  6127  005B  00A0               	movwf	strcpy@from
  6128  005C  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6129  005D  160A  158A  2212  120A  118A  	fcall	_strcpy
  6130                           
  6131                           ;SlaveLiofilizadorVer1.c: 353:              Send_To_MB(11);
  6132  0062  300B               	movlw	11
  6133  0063                     L10:
  6134  0063  160A  158A  22FC  120A  118A  	fcall	_Send_To_MB
  6135                           
  6136                           ;SlaveLiofilizadorVer1.c: 354:              USART_put_string(buffer);
  6137  0068  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6138  0069  1283               	bcf	3,5	;RP0=0, select bank0
  6139  006A  00A1               	movwf	USART_put_string@vetor
  6140  006B  3001               	movlw	1
  6141  006C  00A2               	movwf	USART_put_string@vetor+1
  6142  006D  160A  158A  242F   	fcall	_USART_put_string
  6143                           
  6144                           ;SlaveLiofilizadorVer1.c: 355:              break;
  6145  0070  0008               	return
  6146  0071                     l5695:
  6147                           
  6148                           ;SlaveLiofilizadorVer1.c: 373:              if(usart_protocol.value[0]==0)
  6149  0071  1703               	bsf	3,6	;RP1=1, select bank3
  6150  0072  0816               	movf	(_usart_protocol^(0+384)+6),w
  6151  0073  1D03               	btfss	3,2
  6152  0074  287E               	goto	l5699
  6153                           
  6154                           ;SlaveLiofilizadorVer1.c: 374:                 OutPut=Tensao1;
  6155  0075  1303               	bcf	3,6	;RP1=0, select bank1
  6156  0076  084C               	movf	(_Tensao1+3)^(0+128),w
  6157  0077  00BE               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6158  0078  084B               	movf	(_Tensao1+2)^(0+128),w
  6159  0079  00BD               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6160  007A  084A               	movf	(_Tensao1+1)^(0+128),w
  6161  007B  00BC               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6162  007C  0849               	movf	_Tensao1^(0+128),w
  6163  007D  2886               	goto	L8
  6164  007E                     l5699:
  6165                           
  6166                           ;SlaveLiofilizadorVer1.c: 376:                 OutPut=Vaccum0;
  6167  007E  1303               	bcf	3,6	;RP1=0, select bank1
  6168  007F  0850               	movf	(_Vaccum0+3)^(0+128),w
  6169  0080  00BE               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6170  0081  084F               	movf	(_Vaccum0+2)^(0+128),w
  6171  0082  00BD               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6172  0083  084E               	movf	(_Vaccum0+1)^(0+128),w
  6173  0084  00BC               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6174  0085  084D               	movf	_Vaccum0^(0+128),w
  6175  0086                     L8:
  6176  0086  00BB               	movwf	Decodify_Command@OutPut^(0+128)
  6177                           
  6178                           ;SlaveLiofilizadorVer1.c: 379:              OutPut*=10.0;
  6179  0087  3041               	movlw	65
  6180  0088  1283               	bcf	3,5	;RP0=0, select bank0
  6181  0089  00CE               	movwf	___flmul@b+3
  6182  008A  3020               	movlw	32
  6183  008B  00CD               	movwf	___flmul@b+2
  6184  008C  3000               	movlw	0
  6185  008D  00CC               	movwf	___flmul@b+1
  6186  008E  3000               	movlw	0
  6187  008F  00CB               	movwf	___flmul@b
  6188  0090  1683               	bsf	3,5	;RP0=1, select bank1
  6189  0091  083E               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6190  0092  1283               	bcf	3,5	;RP0=0, select bank0
  6191  0093  00D2               	movwf	___flmul@a+3
  6192  0094  1683               	bsf	3,5	;RP0=1, select bank1
  6193  0095  083D               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6194  0096  1283               	bcf	3,5	;RP0=0, select bank0
  6195  0097  00D1               	movwf	___flmul@a+2
  6196  0098  1683               	bsf	3,5	;RP0=1, select bank1
  6197  0099  083C               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6198  009A  1283               	bcf	3,5	;RP0=0, select bank0
  6199  009B  00D0               	movwf	___flmul@a+1
  6200  009C  1683               	bsf	3,5	;RP0=1, select bank1
  6201  009D  083B               	movf	Decodify_Command@OutPut^(0+128),w
  6202  009E  1283               	bcf	3,5	;RP0=0, select bank0
  6203  009F  00CF               	movwf	___flmul@a
  6204  00A0  120A  118A  2383  120A  118A  	fcall	___flmul
  6205  00A5  084E               	movf	?___flmul+3,w
  6206  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  6207  00A7  00BE               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6208  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  6209  00A9  084D               	movf	?___flmul+2,w
  6210  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  6211  00AB  00BD               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6212  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  6213  00AD  084C               	movf	?___flmul+1,w
  6214  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  6215  00AF  00BC               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6216  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  6217  00B1  084B               	movf	?___flmul,w
  6218  00B2  1683               	bsf	3,5	;RP0=1, select bank1
  6219  00B3  00BB               	movwf	Decodify_Command@OutPut^(0+128)
  6220                           
  6221                           ;SlaveLiofilizadorVer1.c: 381:              INTCONbits.GIE=0;
  6222  00B4  138B               	bcf	11,7	;volatile
  6223                           
  6224                           ;SlaveLiofilizadorVer1.c: 382:              Send_To_MB(2);
  6225  00B5  3002               	movlw	2
  6226  00B6  160A  158A  22FC  120A  118A  	fcall	_Send_To_MB
  6227                           
  6228                           ;SlaveLiofilizadorVer1.c: 383:              USART_put_int(OutPut);
  6229  00BB  083E               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6230  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  6231  00BD  00E8               	movwf	___fltol@f1+3
  6232  00BE  1683               	bsf	3,5	;RP0=1, select bank1
  6233  00BF  083D               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6234  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  6235  00C1  00E7               	movwf	___fltol@f1+2
  6236  00C2  1683               	bsf	3,5	;RP0=1, select bank1
  6237  00C3  083C               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6238  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  6239  00C5  00E6               	movwf	___fltol@f1+1
  6240  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  6241  00C7  083B               	movf	Decodify_Command@OutPut^(0+128),w
  6242  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  6243  00C9  00E5               	movwf	___fltol@f1
  6244  00CA  120A  158A  2002  120A  118A  	fcall	___fltol
  6245  00CF  0866               	movf	?___fltol+1,w
  6246  00D0  1683               	bsf	3,5	;RP0=1, select bank1
  6247  00D1  00A1               	movwf	(USART_put_int@value+1)^(0+128)
  6248  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  6249  00D3  0865               	movf	?___fltol,w
  6250  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  6251  00D5  00A0               	movwf	USART_put_int@value^(0+128)
  6252  00D6  160A  158A  2152   	fcall	_USART_put_int
  6253                           
  6254                           ;SlaveLiofilizadorVer1.c: 384:              INTCONbits.GIE=1;
  6255  00D9  178B               	bsf	11,7	;volatile
  6256                           
  6257                           ;SlaveLiofilizadorVer1.c: 385:              break;
  6258  00DA  0008               	return
  6259  00DB                     l5711:
  6260                           
  6261                           ;SlaveLiofilizadorVer1.c: 390:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  6262  00DB  1703               	bsf	3,6	;RP1=1, select bank3
  6263  00DC  0816               	movf	(_usart_protocol^(0+384)+6),w
  6264  00DD  1303               	bcf	3,6	;RP1=0, select bank1
  6265  00DE  00B1               	movwf	??_Decodify_Command^(0+128)
  6266  00DF  0831               	movf	??_Decodify_Command^(0+128),w
  6267  00E0  00C3               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6268                           
  6269                           ;SlaveLiofilizadorVer1.c: 391:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  6270  00E1  1703               	bsf	3,6	;RP1=1, select bank3
  6271  00E2  0817               	movf	(_usart_protocol^(0+384)+7),w
  6272  00E3  1303               	bcf	3,6	;RP1=0, select bank1
  6273  00E4  00B1               	movwf	??_Decodify_Command^(0+128)
  6274  00E5  0831               	movf	??_Decodify_Command^(0+128),w
  6275  00E6  00C2               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6276                           
  6277                           ;SlaveLiofilizadorVer1.c: 392:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  6278  00E7  1703               	bsf	3,6	;RP1=1, select bank3
  6279  00E8  0818               	movf	(_usart_protocol^(0+384)+8),w
  6280  00E9  1303               	bcf	3,6	;RP1=0, select bank1
  6281  00EA  00B1               	movwf	??_Decodify_Command^(0+128)
  6282  00EB  0831               	movf	??_Decodify_Command^(0+128),w
  6283  00EC  00C1               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6284                           
  6285                           ;SlaveLiofilizadorVer1.c: 393:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  6286  00ED  1703               	bsf	3,6	;RP1=1, select bank3
  6287  00EE  0819               	movf	(_usart_protocol^(0+384)+9),w
  6288  00EF  1303               	bcf	3,6	;RP1=0, select bank1
  6289  00F0  00B1               	movwf	??_Decodify_Command^(0+128)
  6290  00F1  0831               	movf	??_Decodify_Command^(0+128),w
  6291  00F2  00C0               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6292                           
  6293                           ;SlaveLiofilizadorVer1.c: 394:              Save_Log(add_24LCxxxx);
  6294  00F3  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6295  00F4  00AD               	movwf	(Save_Log@add_datalog+3)^(0+128)
  6296  00F5  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6297  00F6  00AC               	movwf	(Save_Log@add_datalog+2)^(0+128)
  6298  00F7  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6299  00F8  00AB               	movwf	(Save_Log@add_datalog+1)^(0+128)
  6300  00F9  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6301  00FA  00AA               	movwf	Save_Log@add_datalog^(0+128)
  6302  00FB  160A  158A  2783   	fcall	_Save_Log
  6303                           
  6304                           ;SlaveLiofilizadorVer1.c: 395:              Delay_Led_Tmr0=0;
  6305  00FE  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  6306  00FF  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  6307                           
  6308                           ;SlaveLiofilizadorVer1.c: 396:              milisegundo=0;
  6309  0100  1683               	bsf	3,5	;RP0=1, select bank1
  6310  0101  1303               	bcf	3,6	;RP1=0, select bank1
  6311  0102  01D9               	clrf	_milisegundo^(0+128)	;volatile
  6312  0103  01DA               	clrf	(_milisegundo+1)^(0+128)	;volatile
  6313                           
  6314                           ;SlaveLiofilizadorVer1.c: 397:              break;
  6315  0104  0008               	return
  6316  0105                     l5719:
  6317                           
  6318                           ;SlaveLiofilizadorVer1.c: 409:              Send_To_MB(2);
  6319  0105  3002               	movlw	2
  6320  0106  160A  158A  22FC  120A  118A  	fcall	_Send_To_MB
  6321                           
  6322                           ;SlaveLiofilizadorVer1.c: 411:              USART_put_int(1);
  6323  010B  3001               	movlw	1
  6324  010C  00A0               	movwf	USART_put_int@value^(0+128)
  6325  010D  3000               	movlw	0
  6326  010E  00A1               	movwf	(USART_put_int@value^(0+128)+1)
  6327  010F  160A  158A  2152   	fcall	_USART_put_int
  6328                           
  6329                           ;SlaveLiofilizadorVer1.c: 421:              break;
  6330  0112  0008               	return
  6331  0113                     l5723:
  6332                           
  6333                           ;SlaveLiofilizadorVer1.c: 438:              EEPROM_Write_Byte(usart_protocol.value[0],
  6334  0113  1703               	bsf	3,6	;RP1=1, select bank3
  6335  0114  0817               	movf	(_usart_protocol^(0+384)+7),w
  6336  0115  1303               	bcf	3,6	;RP1=0, select bank1
  6337  0116  00B1               	movwf	??_Decodify_Command^(0+128)
  6338  0117  0831               	movf	??_Decodify_Command^(0+128),w
  6339  0118  1283               	bcf	3,5	;RP0=0, select bank0
  6340  0119  00A0               	movwf	EEPROM_Write_Byte@dado
  6341  011A  1683               	bsf	3,5	;RP0=1, select bank3
  6342  011B  1703               	bsf	3,6	;RP1=1, select bank3
  6343  011C  0816               	movf	(_usart_protocol^(0+384)+6),w
  6344  011D  160A  158A  253C  120A  118A  	fcall	_EEPROM_Write_Byte
  6345  0122                     L9:
  6346                           
  6347                           ;SlaveLiofilizadorVer1.c: 440:              Send_To_MB(3);
  6348  0122  3003               	movlw	3
  6349  0123  160A  158A  22FC  120A  118A  	fcall	_Send_To_MB
  6350                           
  6351                           ;SlaveLiofilizadorVer1.c: 441:              Send_Reply_OK();
  6352  0128  160A  158A  2112   	fcall	_Send_Reply_OK
  6353                           
  6354                           ;SlaveLiofilizadorVer1.c: 442:              break;
  6355  012B  0008               	return
  6356  012C                     l5727:
  6357                           
  6358                           ;SlaveLiofilizadorVer1.c: 444:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  6359  012C  1703               	bsf	3,6	;RP1=1, select bank3
  6360  012D  0816               	movf	(_usart_protocol^(0+384)+6),w
  6361  012E  160A  158A  228F  120A  118A  	fcall	_EEPROM_Read_Byte
  6362  0133  1683               	bsf	3,5	;RP0=1, select bank1
  6363  0134  1303               	bcf	3,6	;RP1=0, select bank1
  6364  0135  00B1               	movwf	??_Decodify_Command^(0+128)
  6365  0136  0831               	movf	??_Decodify_Command^(0+128),w
  6366  0137  00BF               	movwf	Decodify_Command@tempchar^(0+128)
  6367                           
  6368                           ;SlaveLiofilizadorVer1.c: 445:              Send_To_MB(1);;
  6369  0138  3001               	movlw	1
  6370  0139  160A  158A  22FC  120A  118A  	fcall	_Send_To_MB
  6371                           
  6372                           ;SlaveLiofilizadorVer1.c: 446:              USART_putc(tempchar);
  6373  013E  083F               	movf	Decodify_Command@tempchar^(0+128),w
  6374  013F  160A  158A  2131   	fcall	_USART_putc
  6375                           
  6376                           ;SlaveLiofilizadorVer1.c: 447:              break;
  6377  0142  0008               	return
  6378  0143                     l5733:
  6379                           
  6380                           ;SlaveLiofilizadorVer1.c: 449:              {;SlaveLiofilizadorVer1.c: 450:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 451:              add=usart_protocol.value[
      +                          0];
  6381  0143  1703               	bsf	3,6	;RP1=1, select bank3
  6382  0144  0816               	movf	(_usart_protocol^(0+384)+6),w
  6383  0145  1303               	bcf	3,6	;RP1=0, select bank1
  6384  0146  00B1               	movwf	??_Decodify_Command^(0+128)
  6385  0147  0831               	movf	??_Decodify_Command^(0+128),w
  6386  0148  00B7               	movwf	Decodify_Command@add^(0+128)
  6387                           
  6388                           ;SlaveLiofilizadorVer1.c: 452:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  6389  0149  1703               	bsf	3,6	;RP1=1, select bank3
  6390  014A  0818               	movf	(_usart_protocol^(0+384)+8),w
  6391  014B  1303               	bcf	3,6	;RP1=0, select bank1
  6392  014C  00B1               	movwf	??_Decodify_Command^(0+128)
  6393  014D  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  6394  014E  1703               	bsf	3,6	;RP1=1, select bank3
  6395  014F  0817               	movf	(_usart_protocol^(0+384)+7),w
  6396  0150  1303               	bcf	3,6	;RP1=0, select bank1
  6397  0151  00B3               	movwf	(??_Decodify_Command+2)^(0+128)
  6398  0152  01B4               	clrf	((??_Decodify_Command+2)^(0+128)+1)
  6399  0153  0833               	movf	(??_Decodify_Command+2)^(0+128),w
  6400  0154  00B4               	movwf	((??_Decodify_Command+2)^(0+128)+1)
  6401  0155  01B3               	clrf	(??_Decodify_Command+2)^(0+128)
  6402  0156  0831               	movf	??_Decodify_Command^(0+128),w
  6403  0157  0433               	iorwf	(??_Decodify_Command+2)^(0+128),w
  6404  0158  00B5               	movwf	Decodify_Command@dados^(0+128)
  6405  0159  0832               	movf	(??_Decodify_Command+1)^(0+128),w
  6406  015A  0434               	iorwf	(??_Decodify_Command+3)^(0+128),w
  6407  015B  00B6               	movwf	(Decodify_Command@dados+1)^(0+128)
  6408                           
  6409                           ;SlaveLiofilizadorVer1.c: 453:              EEPROM_Write_Integer(add,dados);
  6410  015C  0836               	movf	(Decodify_Command@dados+1)^(0+128),w
  6411  015D  1283               	bcf	3,5	;RP0=0, select bank0
  6412  015E  00A6               	movwf	EEPROM_Write_Integer@dado+1
  6413  015F  1683               	bsf	3,5	;RP0=1, select bank1
  6414  0160  0835               	movf	Decodify_Command@dados^(0+128),w
  6415  0161  1283               	bcf	3,5	;RP0=0, select bank0
  6416  0162  00A5               	movwf	EEPROM_Write_Integer@dado
  6417  0163  1683               	bsf	3,5	;RP0=1, select bank1
  6418  0164  0837               	movf	Decodify_Command@add^(0+128),w
  6419  0165  160A  158A  23FD  120A  118A  	fcall	_EEPROM_Write_Integer
  6420  016A  2922               	goto	L9
  6421  016B                     l5743:	
  6422                           ;SlaveLiofilizadorVer1.c: 454:              Send_To_MB(3);
  6423                           
  6424                           
  6425                           ;SlaveLiofilizadorVer1.c: 459:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  6426  016B  1703               	bsf	3,6	;RP1=1, select bank3
  6427  016C  0816               	movf	(_usart_protocol^(0+384)+6),w
  6428  016D  160A  158A  234D  120A  118A  	fcall	_EEPROM_Read_Integer
  6429  0172  0824               	movf	?_EEPROM_Read_Integer+1,w
  6430  0173  1683               	bsf	3,5	;RP0=1, select bank1
  6431  0174  00BA               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6432  0175  1283               	bcf	3,5	;RP0=0, select bank0
  6433  0176  0823               	movf	?_EEPROM_Read_Integer,w
  6434  0177                     L11:
  6435  0177  1683               	bsf	3,5	;RP0=1, select bank1
  6436  0178  00B9               	movwf	Decodify_Command@tempint^(0+128)
  6437                           
  6438                           ;SlaveLiofilizadorVer1.c: 460:              Send_To_MB(2);
  6439  0179  3002               	movlw	2
  6440  017A  160A  158A  22FC  120A  118A  	fcall	_Send_To_MB
  6441                           
  6442                           ;SlaveLiofilizadorVer1.c: 461:              USART_put_int(tempint);
  6443  017F  083A               	movf	(Decodify_Command@tempint+1)^(0+128),w
  6444  0180  00A1               	movwf	(USART_put_int@value+1)^(0+128)
  6445  0181  0839               	movf	Decodify_Command@tempint^(0+128),w
  6446  0182  00A0               	movwf	USART_put_int@value^(0+128)
  6447  0183  160A  158A  2152   	fcall	_USART_put_int
  6448                           
  6449                           ;SlaveLiofilizadorVer1.c: 462:              break;
  6450  0186  0008               	return
  6451  0187                     l5749:
  6452                           
  6453                           ;SlaveLiofilizadorVer1.c: 465:              EEPROM_Write_String(usart_protocol.value[0],
  6454  0187  3097               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  6455  0188  00B1               	movwf	??_Decodify_Command^(0+128)
  6456  0189  0831               	movf	??_Decodify_Command^(0+128),w
  6457  018A  1283               	bcf	3,5	;RP0=0, select bank0
  6458  018B  00A5               	movwf	EEPROM_Write_String@dado
  6459  018C  1683               	bsf	3,5	;RP0=1, select bank3
  6460  018D  1703               	bsf	3,6	;RP1=1, select bank3
  6461  018E  0816               	movf	(_usart_protocol^(0+384)+6),w
  6462  018F  160A  158A  23A1  120A  118A  	fcall	_EEPROM_Write_String
  6463  0194  2922               	goto	L9
  6464  0195                     l5755:	
  6465                           ;SlaveLiofilizadorVer1.c: 467:              Send_To_MB(3);
  6466                           
  6467                           
  6468                           ;SlaveLiofilizadorVer1.c: 471:              {;SlaveLiofilizadorVer1.c: 472:             
      +                           EEPROM_Read_String(usart_protocol.value[0],buffer);
  6469  0195  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6470  0196  00B1               	movwf	??_Decodify_Command^(0+128)
  6471  0197  0831               	movf	??_Decodify_Command^(0+128),w
  6472  0198  1283               	bcf	3,5	;RP0=0, select bank0
  6473  0199  00A3               	movwf	EEPROM_Read_String@dado
  6474  019A  1683               	bsf	3,5	;RP0=1, select bank3
  6475  019B  1703               	bsf	3,6	;RP1=1, select bank3
  6476  019C  0816               	movf	(_usart_protocol^(0+384)+6),w
  6477  019D  160A  158A  224E  120A  118A  	fcall	_EEPROM_Read_String
  6478                           
  6479                           ;SlaveLiofilizadorVer1.c: 473:              Send_To_MB(sizeof(buffer));
  6480  01A2  3021               	movlw	33
  6481  01A3  2863               	goto	L10
  6482  01A4                     l5761:
  6483                           
  6484                           ;SlaveLiofilizadorVer1.c: 480:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  6485  01A4  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6486  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  6487  01A6  00BA               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  6488  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  6489  01A8  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6490  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  6491  01AA  00B9               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  6492  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  6493  01AC  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6494  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  6495  01AE  00B8               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  6496  01AF  1683               	bsf	3,5	;RP0=1, select bank1
  6497  01B0  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6498  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  6499  01B2  00B7               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  6500  01B3  1683               	bsf	3,5	;RP0=1, select bank3
  6501  01B4  1703               	bsf	3,6	;RP1=1, select bank3
  6502  01B5  081B               	movf	(_usart_protocol^(0+384)+11),w
  6503  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  6504  01B7  00B1               	movwf	??_Decodify_Command^(0+128)
  6505  01B8  0831               	movf	??_Decodify_Command^(0+128),w
  6506  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  6507  01BA  00BB               	movwf	EEPROM_24C1025_Write_Byte@data
  6508  01BB  1683               	bsf	3,5	;RP0=1, select bank3
  6509  01BC  1703               	bsf	3,6	;RP1=1, select bank3
  6510  01BD  0816               	movf	(_usart_protocol^(0+384)+6),w
  6511  01BE  160A  158A  217C  120A  118A  	fcall	_EEPROM_24C1025_Write_Byte
  6512  01C3  2922               	goto	L9
  6513  01C4                     l5767:	
  6514                           ;SlaveLiofilizadorVer1.c: 483:              Send_To_MB(3);
  6515                           
  6516                           
  6517                           ;SlaveLiofilizadorVer1.c: 487:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  6518  01C4  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6519  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  6520  01C6  00B9               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  6521  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  6522  01C8  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6523  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  6524  01CA  00B8               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  6525  01CB  1683               	bsf	3,5	;RP0=1, select bank1
  6526  01CC  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6527  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  6528  01CE  00B7               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  6529  01CF  1683               	bsf	3,5	;RP0=1, select bank1
  6530  01D0  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6531  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  6532  01D2  00B6               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  6533  01D3  1683               	bsf	3,5	;RP0=1, select bank3
  6534  01D4  1703               	bsf	3,6	;RP1=1, select bank3
  6535  01D5  0816               	movf	(_usart_protocol^(0+384)+6),w
  6536  01D6  160A  158A  21AA  120A  118A  	fcall	_EEPROM_24C1025_Read_Byte
  6537  01DB  1683               	bsf	3,5	;RP0=1, select bank1
  6538  01DC  00B1               	movwf	??_Decodify_Command^(0+128)
  6539  01DD  0831               	movf	??_Decodify_Command^(0+128),w
  6540  01DE  00BF               	movwf	Decodify_Command@tempchar^(0+128)
  6541                           
  6542                           ;SlaveLiofilizadorVer1.c: 491:              Send_To_MB(1);
  6543  01DF  3001               	movlw	1
  6544  01E0  160A  158A  22FC  120A  118A  	fcall	_Send_To_MB
  6545                           
  6546                           ;SlaveLiofilizadorVer1.c: 492:              USART_putc(tempchar);
  6547  01E5  083F               	movf	Decodify_Command@tempchar^(0+128),w
  6548  01E6  160A  158A  2131   	fcall	_USART_putc
  6549                           
  6550                           ;SlaveLiofilizadorVer1.c: 493:              break;
  6551  01E9  0008               	return
  6552  01EA                     l5773:
  6553                           
  6554                           ;SlaveLiofilizadorVer1.c: 495:              {;SlaveLiofilizadorVer1.c: 496:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  6555  01EA  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6556  01EB  00A3               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
  6557  01EC  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6558  01ED  00A2               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
  6559  01EE  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6560  01EF  00A1               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
  6561  01F0  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6562  01F1  00A0               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
  6563  01F2  1703               	bsf	3,6	;RP1=1, select bank3
  6564  01F3  081C               	movf	(_usart_protocol^(0+384)+12),w
  6565  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  6566  01F5  00B1               	movwf	??_Decodify_Command^(0+128)
  6567  01F6  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  6568  01F7  1703               	bsf	3,6	;RP1=1, select bank3
  6569  01F8  081B               	movf	(_usart_protocol^(0+384)+11),w
  6570  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  6571  01FA  00B3               	movwf	(??_Decodify_Command+2)^(0+128)
  6572  01FB  01B4               	clrf	((??_Decodify_Command+2)^(0+128)+1)
  6573  01FC  0833               	movf	(??_Decodify_Command+2)^(0+128),w
  6574  01FD  00B4               	movwf	((??_Decodify_Command+2)^(0+128)+1)
  6575  01FE  01B3               	clrf	(??_Decodify_Command+2)^(0+128)
  6576  01FF  0831               	movf	??_Decodify_Command^(0+128),w
  6577  0200  0433               	iorwf	(??_Decodify_Command+2)^(0+128),w
  6578  0201  00A4               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  6579  0202  0832               	movf	(??_Decodify_Command+1)^(0+128),w
  6580  0203  0434               	iorwf	(??_Decodify_Command+3)^(0+128),w
  6581  0204  00A5               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  6582  0205  1703               	bsf	3,6	;RP1=1, select bank3
  6583  0206  0816               	movf	(_usart_protocol^(0+384)+6),w
  6584  0207  160A  158A  2324  120A  118A  	fcall	_EEPROM_24C1025_Write_Int
  6585  020C  2922               	goto	L9
  6586  020D                     l5779:	
  6587                           ;SlaveLiofilizadorVer1.c: 501:              Send_To_MB(3);
  6588                           
  6589                           
  6590                           ;SlaveLiofilizadorVer1.c: 506:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  6591  020D  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6592  020E  1283               	bcf	3,5	;RP0=0, select bank0
  6593  020F  00B9               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  6594  0210  1683               	bsf	3,5	;RP0=1, select bank1
  6595  0211  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6596  0212  1283               	bcf	3,5	;RP0=0, select bank0
  6597  0213  00B8               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  6598  0214  1683               	bsf	3,5	;RP0=1, select bank1
  6599  0215  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6600  0216  1283               	bcf	3,5	;RP0=0, select bank0
  6601  0217  00B7               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  6602  0218  1683               	bsf	3,5	;RP0=1, select bank1
  6603  0219  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6604  021A  1283               	bcf	3,5	;RP0=0, select bank0
  6605  021B  00B6               	movwf	EEPROM_24C1025_Read_Int@mem_add
  6606  021C  1683               	bsf	3,5	;RP0=1, select bank3
  6607  021D  1703               	bsf	3,6	;RP1=1, select bank3
  6608  021E  0816               	movf	(_usart_protocol^(0+384)+6),w
  6609  021F  160A  158A  22D4  120A  118A  	fcall	_EEPROM_24C1025_Read_Int
  6610  0224  0837               	movf	?_EEPROM_24C1025_Read_Int+1,w
  6611  0225  1683               	bsf	3,5	;RP0=1, select bank1
  6612  0226  00BA               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6613  0227  1283               	bcf	3,5	;RP0=0, select bank0
  6614  0228  0836               	movf	?_EEPROM_24C1025_Read_Int,w
  6615  0229  2977               	goto	L11
  6616  022A                     l5785:	
  6617                           ;SlaveLiofilizadorVer1.c: 508:              Send_To_MB(2);
  6618                           
  6619                           
  6620                           ;SlaveLiofilizadorVer1.c: 514:              {;SlaveLiofilizadorVer1.c: 515:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 516:              sizedata=usart_protocol.value
      +                          [5];
  6621  022A  1703               	bsf	3,6	;RP1=1, select bank3
  6622  022B  081B               	movf	(_usart_protocol^(0+384)+11),w
  6623  022C  1303               	bcf	3,6	;RP1=0, select bank1
  6624  022D  00B1               	movwf	??_Decodify_Command^(0+128)
  6625  022E  0831               	movf	??_Decodify_Command^(0+128),w
  6626  022F  00B8               	movwf	Decodify_Command@sizedata^(0+128)
  6627                           
  6628                           ;SlaveLiofilizadorVer1.c: 517:              Send_To_MB(sizedata);
  6629  0230  0838               	movf	Decodify_Command@sizedata^(0+128),w
  6630  0231  160A  158A  22FC  120A  118A  	fcall	_Send_To_MB
  6631                           
  6632                           ;SlaveLiofilizadorVer1.c: 518:              EEPROM_24C1025_Read_Buffer_USART(usart_proto
      +                          col.value[0],
  6633  0236  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6634  0237  1283               	bcf	3,5	;RP0=0, select bank0
  6635  0238  00AC               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3
  6636  0239  1683               	bsf	3,5	;RP0=1, select bank1
  6637  023A  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6638  023B  1283               	bcf	3,5	;RP0=0, select bank0
  6639  023C  00AB               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2
  6640  023D  1683               	bsf	3,5	;RP0=1, select bank1
  6641  023E  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6642  023F  1283               	bcf	3,5	;RP0=0, select bank0
  6643  0240  00AA               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1
  6644  0241  1683               	bsf	3,5	;RP0=1, select bank1
  6645  0242  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6646  0243  1283               	bcf	3,5	;RP0=0, select bank0
  6647  0244  00A9               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add
  6648  0245  1683               	bsf	3,5	;RP0=1, select bank1
  6649  0246  0838               	movf	Decodify_Command@sizedata^(0+128),w
  6650  0247  00B1               	movwf	??_Decodify_Command^(0+128)
  6651  0248  0831               	movf	??_Decodify_Command^(0+128),w
  6652  0249  1283               	bcf	3,5	;RP0=0, select bank0
  6653  024A  00AD               	movwf	EEPROM_24C1025_Read_Buffer_USART@sizedata
  6654  024B  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6655  024C  1683               	bsf	3,5	;RP0=1, select bank1
  6656  024D  00B2               	movwf	(??_Decodify_Command+1)^(0+128)
  6657  024E  0832               	movf	(??_Decodify_Command+1)^(0+128),w
  6658  024F  1283               	bcf	3,5	;RP0=0, select bank0
  6659  0250  00AE               	movwf	EEPROM_24C1025_Read_Buffer_USART@data
  6660  0251  1683               	bsf	3,5	;RP0=1, select bank3
  6661  0252  1703               	bsf	3,6	;RP1=1, select bank3
  6662  0253  0816               	movf	(_usart_protocol^(0+384)+6),w
  6663  0254  160A  118A  2682   	fcall	_EEPROM_24C1025_Read_Buffer_USART
  6664                           
  6665                           ;SlaveLiofilizadorVer1.c: 523:              };SlaveLiofilizadorVer1.c: 524:             
      +                           break;
  6666  0257  0008               	return
  6667  0258                     l5791:
  6668                           
  6669                           ;SlaveLiofilizadorVer1.c: 527:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  6670  0258  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6671  0259  1283               	bcf	3,5	;RP0=0, select bank0
  6672  025A  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  6673  025B  1683               	bsf	3,5	;RP0=1, select bank1
  6674  025C  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6675  025D  1283               	bcf	3,5	;RP0=0, select bank0
  6676  025E  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  6677  025F  1683               	bsf	3,5	;RP0=1, select bank1
  6678  0260  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6679  0261  1283               	bcf	3,5	;RP0=0, select bank0
  6680  0262  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  6681  0263  1683               	bsf	3,5	;RP0=1, select bank1
  6682  0264  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6683  0265  1283               	bcf	3,5	;RP0=0, select bank0
  6684  0266  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  6685  0267  1683               	bsf	3,5	;RP0=1, select bank3
  6686  0268  1703               	bsf	3,6	;RP1=1, select bank3
  6687  0269  081B               	movf	(_usart_protocol^(0+384)+11),w
  6688  026A  1303               	bcf	3,6	;RP1=0, select bank1
  6689  026B  00B1               	movwf	??_Decodify_Command^(0+128)
  6690  026C  0831               	movf	??_Decodify_Command^(0+128),w
  6691  026D  1283               	bcf	3,5	;RP0=0, select bank0
  6692  026E  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  6693  026F  309C               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  6694  0270  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  6695  0271  3001               	movlw	1
  6696  0272  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  6697  0273  1683               	bsf	3,5	;RP0=1, select bank3
  6698  0274  1703               	bsf	3,6	;RP1=1, select bank3
  6699  0275  0816               	movf	(_usart_protocol^(0+384)+6),w
  6700  0276  160A  118A  2392  120A  118A  	fcall	_EEPROM_24C1025_Write_Buffer
  6701  027B  2922               	goto	L9
  6702  027C                     l5797:	
  6703                           ;SlaveLiofilizadorVer1.c: 532:              Send_To_MB(3);
  6704                           
  6705                           
  6706                           ;SlaveLiofilizadorVer1.c: 537:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  6707  027C  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6708  027D  1283               	bcf	3,5	;RP0=0, select bank0
  6709  027E  00AD               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  6710  027F  1683               	bsf	3,5	;RP0=1, select bank1
  6711  0280  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6712  0281  1283               	bcf	3,5	;RP0=0, select bank0
  6713  0282  00AC               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  6714  0283  1683               	bsf	3,5	;RP0=1, select bank1
  6715  0284  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6716  0285  1283               	bcf	3,5	;RP0=0, select bank0
  6717  0286  00AB               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  6718  0287  1683               	bsf	3,5	;RP0=1, select bank1
  6719  0288  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6720  0289  1283               	bcf	3,5	;RP0=0, select bank0
  6721  028A  00AA               	movwf	EEPROM_24C1025_Write_Str@mem_add
  6722  028B  309B               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  6723  028C  1683               	bsf	3,5	;RP0=1, select bank1
  6724  028D  00B1               	movwf	??_Decodify_Command^(0+128)
  6725  028E  0831               	movf	??_Decodify_Command^(0+128),w
  6726  028F  1283               	bcf	3,5	;RP0=0, select bank0
  6727  0290  00AE               	movwf	EEPROM_24C1025_Write_Str@data
  6728  0291  1683               	bsf	3,5	;RP0=1, select bank3
  6729  0292  1703               	bsf	3,6	;RP1=1, select bank3
  6730  0293  0816               	movf	(_usart_protocol^(0+384)+6),w
  6731  0294  160A  118A  2297  120A  118A  	fcall	_EEPROM_24C1025_Write_Str
  6732  0299  2922               	goto	L9
  6733  029A                     l5803:	
  6734                           ;SlaveLiofilizadorVer1.c: 540:              Send_To_MB(3);
  6735                           
  6736                           
  6737                           ;SlaveLiofilizadorVer1.c: 544:              {;SlaveLiofilizadorVer1.c: 545:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  6738  029A  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6739  029B  1283               	bcf	3,5	;RP0=0, select bank0
  6740  029C  00AC               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  6741  029D  1683               	bsf	3,5	;RP0=1, select bank1
  6742  029E  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6743  029F  1283               	bcf	3,5	;RP0=0, select bank0
  6744  02A0  00AB               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  6745  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  6746  02A2  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6747  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  6748  02A4  00AA               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  6749  02A5  1683               	bsf	3,5	;RP0=1, select bank1
  6750  02A6  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6751  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  6752  02A8  00A9               	movwf	EEPROM_24C1025_Read_Str@mem_add
  6753  02A9  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6754  02AA  1683               	bsf	3,5	;RP0=1, select bank1
  6755  02AB  00B1               	movwf	??_Decodify_Command^(0+128)
  6756  02AC  0831               	movf	??_Decodify_Command^(0+128),w
  6757  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  6758  02AE  00AD               	movwf	EEPROM_24C1025_Read_Str@buffer
  6759  02AF  1683               	bsf	3,5	;RP0=1, select bank3
  6760  02B0  1703               	bsf	3,6	;RP1=1, select bank3
  6761  02B1  0816               	movf	(_usart_protocol^(0+384)+6),w
  6762  02B2  160A  118A  2508  120A  118A  	fcall	_EEPROM_24C1025_Read_Str
  6763                           
  6764                           ;SlaveLiofilizadorVer1.c: 549:              Send_To_MB(strlen(buffer)+1);
  6765  02B7  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6766  02B8  160A  158A  21C3  120A  118A  	fcall	_strlen
  6767  02BD  0820               	movf	?_strlen,w
  6768  02BE  3E01               	addlw	1
  6769  02BF  2863               	goto	L10
  6770  02C0                     l5807:
  6771                           
  6772                           ;SlaveLiofilizadorVer1.c: 555:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  6773  02C0  1703               	bsf	3,6	;RP1=1, select bank3
  6774  02C1  0817               	movf	(_usart_protocol^(0+384)+7),w
  6775  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  6776  02C3  00B1               	movwf	??_Decodify_Command^(0+128)
  6777  02C4  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  6778  02C5  0831               	movf	??_Decodify_Command^(0+128),w
  6779  02C6  00AA               	movwf	EEPROM_24C1025_Fill_All@value^(0+128)
  6780  02C7  0832               	movf	(??_Decodify_Command+1)^(0+128),w
  6781  02C8  00AB               	movwf	(EEPROM_24C1025_Fill_All@value+1)^(0+128)
  6782  02C9  1703               	bsf	3,6	;RP1=1, select bank3
  6783  02CA  0816               	movf	(_usart_protocol^(0+384)+6),w
  6784  02CB  160A  158A  25B4  120A  118A  	fcall	_EEPROM_24C1025_Fill_All
  6785  02D0  2922               	goto	L9
  6786  02D1                     l5813:	
  6787                           ;SlaveLiofilizadorVer1.c: 557:              Send_To_MB(3);
  6788                           
  6789                           
  6790                           ;SlaveLiofilizadorVer1.c: 562:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  6791  02D1  1703               	bsf	3,6	;RP1=1, select bank3
  6792  02D2  0816               	movf	(_usart_protocol^(0+384)+6),w
  6793  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  6794  02D4  00B1               	movwf	??_Decodify_Command^(0+128)
  6795  02D5  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  6796  02D6  0831               	movf	??_Decodify_Command^(0+128),w
  6797  02D7  00A8               	movwf	PROCULUS_Show_Screen@screen^(0+128)
  6798  02D8  0832               	movf	(??_Decodify_Command+1)^(0+128),w
  6799  02D9  00A9               	movwf	(PROCULUS_Show_Screen@screen+1)^(0+128)
  6800  02DA  160A  158A  2167  120A  118A  	fcall	_PROCULUS_Show_Screen
  6801  02DF  2922               	goto	L9
  6802  02E0                     l5819:	
  6803                           ;SlaveLiofilizadorVer1.c: 563:              Send_To_MB(3);
  6804                           
  6805                           
  6806                           ;SlaveLiofilizadorVer1.c: 568:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  6807  02E0  1703               	bsf	3,6	;RP1=1, select bank3
  6808  02E1  0816               	movf	(_usart_protocol^(0+384)+6),w
  6809  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  6810  02E3  00B1               	movwf	??_Decodify_Command^(0+128)
  6811  02E4  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  6812  02E5  0831               	movf	??_Decodify_Command^(0+128),w
  6813  02E6  00B2               	movwf	(??_Decodify_Command^(0+128)+1)
  6814  02E7  01B1               	clrf	??_Decodify_Command^(0+128)
  6815  02E8  1703               	bsf	3,6	;RP1=1, select bank3
  6816  02E9  0817               	movf	(_usart_protocol^(0+384)+7),w
  6817  02EA  1303               	bcf	3,6	;RP1=0, select bank1
  6818  02EB  0731               	addwf	??_Decodify_Command^(0+128),w
  6819  02EC  00A8               	movwf	PROCULUS_Buzzer@time_ms_x_10^(0+128)
  6820  02ED  3000               	movlw	0
  6821  02EE  1803               	skipnc
  6822  02EF  3001               	movlw	1
  6823  02F0  0732               	addwf	(??_Decodify_Command+1)^(0+128),w
  6824  02F1  00A9               	movwf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128)
  6825  02F2  160A  158A  2377  120A  118A  	fcall	_PROCULUS_Buzzer
  6826  02F7  2922               	goto	L9
  6827  02F8                     l5825:	
  6828                           ;SlaveLiofilizadorVer1.c: 570:              Send_To_MB(3);
  6829                           
  6830                           
  6831                           ;SlaveLiofilizadorVer1.c: 574:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  6832  02F8  1703               	bsf	3,6	;RP1=1, select bank3
  6833  02F9  0816               	movf	(_usart_protocol^(0+384)+6),w
  6834  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  6835  02FB  00B1               	movwf	??_Decodify_Command^(0+128)
  6836  02FC  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  6837  02FD  0831               	movf	??_Decodify_Command^(0+128),w
  6838  02FE  00B2               	movwf	(??_Decodify_Command^(0+128)+1)
  6839  02FF  01B1               	clrf	??_Decodify_Command^(0+128)
  6840  0300  1703               	bsf	3,6	;RP1=1, select bank3
  6841  0301  0817               	movf	(_usart_protocol^(0+384)+7),w
  6842  0302  1303               	bcf	3,6	;RP1=0, select bank1
  6843  0303  0731               	addwf	??_Decodify_Command^(0+128),w
  6844  0304  00AC               	movwf	PROCULUS_VP_Write_String@vp^(0+128)
  6845  0305  3000               	movlw	0
  6846  0306  1803               	skipnc
  6847  0307  3001               	movlw	1
  6848  0308  0732               	addwf	(??_Decodify_Command+1)^(0+128),w
  6849  0309  00AD               	movwf	(PROCULUS_VP_Write_String@vp+1)^(0+128)
  6850  030A  3098               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  6851  030B  00B3               	movwf	(??_Decodify_Command+2)^(0+128)
  6852  030C  0833               	movf	(??_Decodify_Command+2)^(0+128),w
  6853  030D  00AE               	movwf	PROCULUS_VP_Write_String@text^(0+128)
  6854  030E  160A  158A  2192  120A  118A  	fcall	_PROCULUS_VP_Write_String
  6855  0313  2922               	goto	L9
  6856  0314                     l5831:	
  6857                           ;SlaveLiofilizadorVer1.c: 577:              Send_To_MB(3);
  6858                           
  6859                           
  6860                           ;SlaveLiofilizadorVer1.c: 583:              if(usart_protocol.value[0]==0)
  6861  0314  1703               	bsf	3,6	;RP1=1, select bank3
  6862  0315  0816               	movf	(_usart_protocol^(0+384)+6),w
  6863  0316  1D03               	btfss	3,2
  6864  0317  2B23               	goto	l5837
  6865                           
  6866                           ;SlaveLiofilizadorVer1.c: 584:                 {;SlaveLiofilizadorVer1.c: 586:          
      +                                 if(!usart_protocol.value[1])
  6867  0318  0817               	movf	(_usart_protocol^(0+384)+7),w
  6868  0319  1D03               	btfss	3,2
  6869  031A  2B1F               	goto	l424
  6870                           
  6871                           ;SlaveLiofilizadorVer1.c: 587:                    PORTCbits.RC0=0;
  6872  031B  1283               	bcf	3,5	;RP0=0, select bank0
  6873  031C  1303               	bcf	3,6	;RP1=0, select bank0
  6874  031D  1007               	bcf	7,0	;volatile
  6875  031E  2922               	goto	L9
  6876  031F                     l424:	
  6877                           ;SlaveLiofilizadorVer1.c: 588:                 else
  6878                           
  6879                           
  6880                           ;SlaveLiofilizadorVer1.c: 589:                    PORTCbits.RC0=1;
  6881  031F  1283               	bcf	3,5	;RP0=0, select bank0
  6882  0320  1303               	bcf	3,6	;RP1=0, select bank0
  6883  0321  1407               	bsf	7,0	;volatile
  6884  0322  2922               	goto	L9
  6885  0323                     l5837:
  6886  0323  0316               	decf	(_usart_protocol^(0+384)+6),w
  6887  0324  1D03               	btfss	3,2
  6888  0325  2922               	goto	L9
  6889                           
  6890                           ;SlaveLiofilizadorVer1.c: 592:                      {;SlaveLiofilizadorVer1.c: 594:     
      +                                            if(!usart_protocol.value[1])
  6891  0326  0817               	movf	(_usart_protocol^(0+384)+7),w
  6892  0327  1D03               	btfss	3,2
  6893  0328  2B2D               	goto	l428
  6894                           
  6895                           ;SlaveLiofilizadorVer1.c: 595:                          PORTCbits.RC1=0;
  6896  0329  1283               	bcf	3,5	;RP0=0, select bank0
  6897  032A  1303               	bcf	3,6	;RP1=0, select bank0
  6898  032B  1087               	bcf	7,1	;volatile
  6899  032C  2922               	goto	L9
  6900  032D                     l428:	
  6901                           ;SlaveLiofilizadorVer1.c: 596:                       else
  6902                           
  6903                           
  6904                           ;SlaveLiofilizadorVer1.c: 597:                          PORTCbits.RC1=1;
  6905  032D  1283               	bcf	3,5	;RP0=0, select bank0
  6906  032E  1303               	bcf	3,6	;RP1=0, select bank0
  6907  032F  1487               	bsf	7,1	;volatile
  6908  0330  2922               	goto	L9
  6909  0331                     l5849:	
  6910                           ;SlaveLiofilizadorVer1.c: 599:              Send_To_MB(3);
  6911                           
  6912  0331  1703               	bsf	3,6	;RP1=1, select bank3
  6913  0332  0814               	movf	(_usart_protocol^(0+384)+4),w
  6914  0333  1303               	bcf	3,6	;RP1=0, select bank1
  6915  0334  00B1               	movwf	??_Decodify_Command^(0+128)
  6916  0335  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  6917                           
  6918                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6919                           ; Switch size 1, requested type "simple"
  6920                           ; Number of cases is 1, Range of values is 0 to 0
  6921                           ; switch strategies available:
  6922                           ; Name         Instructions Cycles
  6923                           ; simple_byte            4     3 (average)
  6924                           ; direct_byte           11     8 (fixed)
  6925                           ; jumptable            260     6 (fixed)
  6926                           ;	Chosen strategy is simple_byte
  6927  0336  0832               	movf	(??_Decodify_Command+1)^(0+128),w
  6928  0337  3A00               	xorlw	0	; case 0
  6929  0338  1903               	skipnz
  6930  0339  2B3B               	goto	l5997
  6931  033A  2B82               	goto	l430
  6932  033B                     l5997:
  6933                           
  6934                           ; Switch size 1, requested type "simple"
  6935                           ; Number of cases is 23, Range of values is 2 to 65
  6936                           ; switch strategies available:
  6937                           ; Name         Instructions Cycles
  6938                           ; simple_byte           70    36 (average)
  6939                           ; direct_byte          203    11 (fixed)
  6940                           ; jumptable            263     9 (fixed)
  6941                           ;	Chosen strategy is simple_byte
  6942  033B  0831               	movf	??_Decodify_Command^(0+128),w
  6943  033C  3A02               	xorlw	2	; case 2
  6944  033D  1903               	skipnz
  6945  033E  28DB               	goto	l5711
  6946  033F  3A01               	xorlw	1	; case 3
  6947  0340  1903               	skipnz
  6948  0341  2905               	goto	l5719
  6949  0342  3A0B               	xorlw	11	; case 8
  6950  0343  1903               	skipnz
  6951  0344  2913               	goto	l5723
  6952  0345  3A01               	xorlw	1	; case 9
  6953  0346  1903               	skipnz
  6954  0347  292C               	goto	l5727
  6955  0348  3A03               	xorlw	3	; case 10
  6956  0349  1903               	skipnz
  6957  034A  2943               	goto	l5733
  6958  034B  3A01               	xorlw	1	; case 11
  6959  034C  1903               	skipnz
  6960  034D  296B               	goto	l5743
  6961  034E  3A07               	xorlw	7	; case 12
  6962  034F  1903               	skipnz
  6963  0350  2987               	goto	l5749
  6964  0351  3A01               	xorlw	1	; case 13
  6965  0352  1903               	skipnz
  6966  0353  2995               	goto	l5755
  6967  0354  3A1C               	xorlw	28	; case 17
  6968  0355  1903               	skipnz
  6969  0356  29A4               	goto	l5761
  6970  0357  3A03               	xorlw	3	; case 18
  6971  0358  1903               	skipnz
  6972  0359  29C4               	goto	l5767
  6973  035A  3A01               	xorlw	1	; case 19
  6974  035B  1903               	skipnz
  6975  035C  29EA               	goto	l5773
  6976  035D  3A07               	xorlw	7	; case 20
  6977  035E  1903               	skipnz
  6978  035F  2A0D               	goto	l5779
  6979  0360  3A01               	xorlw	1	; case 21
  6980  0361  1903               	skipnz
  6981  0362  2A7C               	goto	l5797
  6982  0363  3A03               	xorlw	3	; case 22
  6983  0364  1903               	skipnz
  6984  0365  2A9A               	goto	l5803
  6985  0366  3A01               	xorlw	1	; case 23
  6986  0367  1903               	skipnz
  6987  0368  2A58               	goto	l5791
  6988  0369  3A0F               	xorlw	15	; case 24
  6989  036A  1903               	skipnz
  6990  036B  2A2A               	goto	l5785
  6991  036C  3A01               	xorlw	1	; case 25
  6992  036D  1903               	skipnz
  6993  036E  2AC0               	goto	l5807
  6994  036F  3A03               	xorlw	3	; case 26
  6995  0370  1903               	skipnz
  6996  0371  2871               	goto	l5695
  6997  0372  3A38               	xorlw	56	; case 34
  6998  0373  1903               	skipnz
  6999  0374  2AF8               	goto	l5825
  7000  0375  3A06               	xorlw	6	; case 36
  7001  0376  1903               	skipnz
  7002  0377  2AE0               	goto	l5819
  7003  0378  3A01               	xorlw	1	; case 37
  7004  0379  1903               	skipnz
  7005  037A  2AD1               	goto	l5813
  7006  037B  3A15               	xorlw	21	; case 48
  7007  037C  1903               	skipnz
  7008  037D  2B14               	goto	l5831
  7009  037E  3A71               	xorlw	113	; case 65
  7010  037F  1903               	skipnz
  7011  0380  2857               	goto	l5689
  7012  0381  2B82               	goto	l430
  7013  0382                     l430:
  7014  0382  0008               	return
  7015  0383                     __end_of_Decodify_Command:
  7016                           
  7017                           	psect	text15
  7018  1A12                     __ptext15:	
  7019 ;; *************** function _strcpy *****************
  7020 ;; Defined at:
  7021 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strcpy.c"
  7022 ;; Parameters:    Size  Location     Type
  7023 ;;  to              1    wreg     PTR unsigned char 
  7024 ;;		 -> buffer(33), 
  7025 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  7026 ;;		 -> STR_1(19), 
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;  to              1    2[BANK0 ] PTR unsigned char 
  7029 ;;		 -> buffer(33), 
  7030 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  7031 ;;		 -> buffer(33), 
  7032 ;; Return value:  Size  Location     Type
  7033 ;;                  1    wreg      PTR unsigned char 
  7034 ;; Registers used:
  7035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7036 ;; Tracked objects:
  7037 ;;		On entry : 300/0
  7038 ;;		On exit  : B00/800
  7039 ;;		Unchanged: 0/0
  7040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7041 ;;      Params:         0       1       0       0       0
  7042 ;;      Locals:         0       2       0       0       0
  7043 ;;      Temps:          0       1       0       0       0
  7044 ;;      Totals:         0       4       0       0       0
  7045 ;;Total ram usage:        4 bytes
  7046 ;; Hardware stack levels used: 2
  7047 ;; Hardware stack levels required when called: 1
  7048 ;; This function calls:
  7049 ;;		Nothing
  7050 ;; This function is called by:
  7051 ;;		_Decodify_Command
  7052 ;; This function uses a non-reentrant model
  7053 ;;
  7054                           
  7055                           
  7056                           ;psect for function _strcpy
  7057  1A12                     _strcpy:
  7058                           
  7059                           ;incstack = 0
  7060                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  7061                           ;strcpy@to stored from wreg
  7062  1A12  00A2               	movwf	strcpy@to
  7063  1A13  0822               	movf	strcpy@to,w
  7064  1A14  00A1               	movwf	??_strcpy
  7065  1A15  0821               	movf	??_strcpy,w
  7066  1A16  00A3               	movwf	strcpy@cp
  7067  1A17                     l4723:
  7068  1A17  0820               	movf	strcpy@from,w
  7069  1A18  0084               	movwf	4
  7070  1A19  160A  118A  200A  160A  158A  	fcall	stringdir
  7071  1A1E  00A1               	movwf	??_strcpy
  7072  1A1F  0823               	movf	strcpy@cp,w
  7073  1A20  0084               	movwf	4
  7074  1A21  0821               	movf	??_strcpy,w
  7075  1A22  1783               	bsf	3,7	;select IRP bank2
  7076  1A23  0080               	movwf	0
  7077  1A24  0800               	movf	0,w
  7078  1A25  1903               	btfsc	3,2
  7079  1A26  0008               	return
  7080  1A27  3001               	movlw	1
  7081  1A28  00A1               	movwf	??_strcpy
  7082  1A29  0821               	movf	??_strcpy,w
  7083  1A2A  07A3               	addwf	strcpy@cp,f
  7084  1A2B  3001               	movlw	1
  7085  1A2C  00A1               	movwf	??_strcpy
  7086  1A2D  0821               	movf	??_strcpy,w
  7087  1A2E  07A0               	addwf	strcpy@from,f
  7088  1A2F  2A17               	goto	l4723
  7089  1A30                     __end_of_strcpy:
  7090                           
  7091                           	psect	text16
  7092  1E7A                     __ptext16:	
  7093 ;; *************** function _USART_to_Protocol *****************
  7094 ;; Defined at:
  7095 ;;		line 77 in file "usart.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;  usart_protoc    1    wreg     PTR struct .
  7098 ;;		 -> usart_protocol(58), 
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  7101 ;;		 -> usart_protocol(58), 
  7102 ;;  i               2    2[BANK0 ] int 
  7103 ;; Return value:  Size  Location     Type
  7104 ;;                  1    wreg      void 
  7105 ;; Registers used:
  7106 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7107 ;; Tracked objects:
  7108 ;;		On entry : 300/100
  7109 ;;		On exit  : 0/0
  7110 ;;		Unchanged: 0/0
  7111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7112 ;;      Params:         0       0       0       0       0
  7113 ;;      Locals:         0       3       0       0       0
  7114 ;;      Temps:          0       2       0       0       0
  7115 ;;      Totals:         0       5       0       0       0
  7116 ;;Total ram usage:        5 bytes
  7117 ;; Hardware stack levels used: 1
  7118 ;; Hardware stack levels required when called: 1
  7119 ;; This function calls:
  7120 ;;		Nothing
  7121 ;; This function is called by:
  7122 ;;		_Decodify_Command
  7123 ;; This function uses a non-reentrant model
  7124 ;;
  7125                           
  7126                           
  7127                           ;psect for function _USART_to_Protocol
  7128  1E7A                     _USART_to_Protocol:
  7129                           
  7130                           ;incstack = 0
  7131                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  7132                           ;USART_to_Protocol@usart_protocol stored from wreg
  7133  1E7A  1283               	bcf	3,5	;RP0=0, select bank0
  7134  1E7B  00A4               	movwf	USART_to_Protocol@usart_protocol
  7135                           
  7136                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  7137  1E7C  0824               	movf	USART_to_Protocol@usart_protocol,w
  7138  1E7D  0084               	movwf	4
  7139  1E7E  1703               	bsf	3,6	;RP1=1, select bank2
  7140  1E7F  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  7141  1E80  1783               	bsf	3,7	;select IRP bank2
  7142  1E81  0080               	movwf	0
  7143  1E82  0A84               	incf	4,f
  7144  1E83  0810               	movf	_usart_buffer^(0+256),w	;volatile
  7145  1E84  0080               	movwf	0
  7146                           
  7147                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  7148  1E85  0812               	movf	(_usart_buffer^(0+256)+2),w	;volatile
  7149  1E86  1303               	bcf	3,6	;RP1=0, select bank0
  7150  1E87  00A0               	movwf	??_USART_to_Protocol
  7151  1E88  0824               	movf	USART_to_Protocol@usart_protocol,w
  7152  1E89  3E02               	addlw	2
  7153  1E8A  0084               	movwf	4
  7154  1E8B  0820               	movf	??_USART_to_Protocol,w
  7155  1E8C  0080               	movwf	0
  7156                           
  7157                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  7158  1E8D  1703               	bsf	3,6	;RP1=1, select bank2
  7159  1E8E  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  7160  1E8F  1303               	bcf	3,6	;RP1=0, select bank0
  7161  1E90  00A0               	movwf	??_USART_to_Protocol
  7162  1E91  0824               	movf	USART_to_Protocol@usart_protocol,w
  7163  1E92  3E03               	addlw	3
  7164  1E93  0084               	movwf	4
  7165  1E94  0820               	movf	??_USART_to_Protocol,w
  7166  1E95  0080               	movwf	0
  7167                           
  7168                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  7169  1E96  1703               	bsf	3,6	;RP1=1, select bank2
  7170  1E97  0814               	movf	(_usart_buffer^(0+256)+4),w	;volatile
  7171  1E98  1303               	bcf	3,6	;RP1=0, select bank0
  7172  1E99  00A0               	movwf	??_USART_to_Protocol
  7173  1E9A  0824               	movf	USART_to_Protocol@usart_protocol,w
  7174  1E9B  3E04               	addlw	4
  7175  1E9C  0084               	movwf	4
  7176  1E9D  0820               	movf	??_USART_to_Protocol,w
  7177  1E9E  0080               	movwf	0
  7178                           
  7179                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  7180  1E9F  1703               	bsf	3,6	;RP1=1, select bank2
  7181  1EA0  0815               	movf	(_usart_buffer^(0+256)+5),w	;volatile
  7182  1EA1  1303               	bcf	3,6	;RP1=0, select bank0
  7183  1EA2  00A0               	movwf	??_USART_to_Protocol
  7184  1EA3  0824               	movf	USART_to_Protocol@usart_protocol,w
  7185  1EA4  3E05               	addlw	5
  7186  1EA5  0084               	movwf	4
  7187  1EA6  0820               	movf	??_USART_to_Protocol,w
  7188  1EA7  0080               	movwf	0
  7189                           
  7190                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  7191  1EA8  01A2               	clrf	USART_to_Protocol@i
  7192  1EA9  01A3               	clrf	USART_to_Protocol@i+1
  7193  1EAA                     l4717:
  7194  1EAA  0824               	movf	USART_to_Protocol@usart_protocol,w
  7195  1EAB  3E05               	addlw	5
  7196  1EAC  0084               	movwf	4
  7197  1EAD  0823               	movf	USART_to_Protocol@i+1,w
  7198  1EAE  3A80               	xorlw	128
  7199  1EAF  00A0               	movwf	??_USART_to_Protocol
  7200  1EB0  3080               	movlw	128
  7201  1EB1  0220               	subwf	??_USART_to_Protocol,w
  7202  1EB2  1D03               	skipz
  7203  1EB3  2EB6               	goto	u4385
  7204  1EB4  0800               	movf	0,w
  7205  1EB5  0222               	subwf	USART_to_Protocol@i,w
  7206  1EB6                     u4385:
  7207  1EB6  1803               	btfsc	3,0
  7208  1EB7  0008               	return
  7209                           
  7210                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  7211  1EB8  1283               	bcf	3,5	;RP0=0, select bank0
  7212  1EB9  1303               	bcf	3,6	;RP1=0, select bank0
  7213  1EBA  0822               	movf	USART_to_Protocol@i,w
  7214  1EBB  3E16               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  7215  1EBC  0084               	movwf	4
  7216  1EBD  1783               	bsf	3,7	;select IRP bank2
  7217  1EBE  0800               	movf	0,w
  7218  1EBF  00A0               	movwf	??_USART_to_Protocol
  7219  1EC0  0822               	movf	USART_to_Protocol@i,w
  7220  1EC1  0724               	addwf	USART_to_Protocol@usart_protocol,w
  7221  1EC2  00A1               	movwf	??_USART_to_Protocol+1
  7222  1EC3  0821               	movf	??_USART_to_Protocol+1,w
  7223  1EC4  3E06               	addlw	6
  7224  1EC5  0084               	movwf	4
  7225  1EC6  0820               	movf	??_USART_to_Protocol,w
  7226  1EC7  0080               	movwf	0
  7227  1EC8  3001               	movlw	1
  7228  1EC9  07A2               	addwf	USART_to_Protocol@i,f
  7229  1ECA  1803               	skipnc
  7230  1ECB  0AA3               	incf	USART_to_Protocol@i+1,f
  7231  1ECC  3000               	movlw	0
  7232  1ECD  07A3               	addwf	USART_to_Protocol@i+1,f
  7233  1ECE  2EAA               	goto	l4717
  7234  1ECF                     __end_of_USART_to_Protocol:
  7235                           
  7236                           	psect	text17
  7237  1AFC                     __ptext17:	
  7238 ;; *************** function _Send_To_MB *****************
  7239 ;; Defined at:
  7240 ;;		line 608 in file "SlaveLiofilizadorVer1.c"
  7241 ;; Parameters:    Size  Location     Type
  7242 ;;  size            1    wreg     unsigned char 
  7243 ;; Auto vars:     Size  Location     Type
  7244 ;;  size            1    1[BANK0 ] unsigned char 
  7245 ;; Return value:  Size  Location     Type
  7246 ;;                  1    wreg      void 
  7247 ;; Registers used:
  7248 ;;		wreg, status,2, status,0, pclath, cstack
  7249 ;; Tracked objects:
  7250 ;;		On entry : 0/800
  7251 ;;		On exit  : 300/100
  7252 ;;		Unchanged: 0/0
  7253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7254 ;;      Params:         0       0       0       0       0
  7255 ;;      Locals:         0       1       0       0       0
  7256 ;;      Temps:          0       0       0       0       0
  7257 ;;      Totals:         0       1       0       0       0
  7258 ;;Total ram usage:        1 bytes
  7259 ;; Hardware stack levels used: 1
  7260 ;; Hardware stack levels required when called: 2
  7261 ;; This function calls:
  7262 ;;		_USART_putc
  7263 ;; This function is called by:
  7264 ;;		_Decodify_Command
  7265 ;; This function uses a non-reentrant model
  7266 ;;
  7267                           
  7268                           
  7269                           ;psect for function _Send_To_MB
  7270  1AFC                     _Send_To_MB:
  7271                           
  7272                           ;incstack = 0
  7273                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  7274                           ;Send_To_MB@size stored from wreg
  7275  1AFC  1283               	bcf	3,5	;RP0=0, select bank0
  7276  1AFD  1303               	bcf	3,6	;RP1=0, select bank0
  7277  1AFE  00A1               	movwf	Send_To_MB@size
  7278                           
  7279                           ;SlaveLiofilizadorVer1.c: 610:      USART_putc(0xAA);
  7280  1AFF  30AA               	movlw	170
  7281  1B00  160A  158A  2131  160A  158A  	fcall	_USART_putc
  7282                           
  7283                           ;SlaveLiofilizadorVer1.c: 611:      USART_putc(0xBB);
  7284  1B05  30BB               	movlw	187
  7285  1B06  160A  158A  2131  160A  158A  	fcall	_USART_putc
  7286                           
  7287                           ;SlaveLiofilizadorVer1.c: 612:      USART_putc(Board_Number);
  7288  1B0B  0861               	movf	_Board_Number^(0+128),w
  7289  1B0C  160A  158A  2131  160A  158A  	fcall	_USART_putc
  7290                           
  7291                           ;SlaveLiofilizadorVer1.c: 613:      USART_putc(0x00);
  7292  1B11  3000               	movlw	0
  7293  1B12  160A  158A  2131  160A  158A  	fcall	_USART_putc
  7294                           
  7295                           ;SlaveLiofilizadorVer1.c: 614:      USART_putc(usart_protocol.command);
  7296  1B17  1703               	bsf	3,6	;RP1=1, select bank3
  7297  1B18  0814               	movf	(_usart_protocol^(0+384)+4),w
  7298  1B19  160A  158A  2131  160A  158A  	fcall	_USART_putc
  7299                           
  7300                           ;SlaveLiofilizadorVer1.c: 615:      USART_putc(size);
  7301  1B1E  1283               	bcf	3,5	;RP0=0, select bank0
  7302  1B1F  0821               	movf	Send_To_MB@size,w
  7303  1B20  160A  158A  2131   	fcall	_USART_putc
  7304  1B23  0008               	return
  7305  1B24                     __end_of_Send_To_MB:
  7306                           
  7307                           	psect	text18
  7308  1912                     __ptext18:	
  7309 ;; *************** function _Send_Reply_OK *****************
  7310 ;; Defined at:
  7311 ;;		line 619 in file "SlaveLiofilizadorVer1.c"
  7312 ;; Parameters:    Size  Location     Type
  7313 ;;		None
  7314 ;; Auto vars:     Size  Location     Type
  7315 ;;		None
  7316 ;; Return value:  Size  Location     Type
  7317 ;;                  1    wreg      void 
  7318 ;; Registers used:
  7319 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7320 ;; Tracked objects:
  7321 ;;		On entry : 300/100
  7322 ;;		On exit  : 300/100
  7323 ;;		Unchanged: 0/0
  7324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7325 ;;      Params:         0       0       0       0       0
  7326 ;;      Locals:         0       0       0       0       0
  7327 ;;      Temps:          0       0       0       0       0
  7328 ;;      Totals:         0       0       0       0       0
  7329 ;;Total ram usage:        0 bytes
  7330 ;; Hardware stack levels used: 1
  7331 ;; Hardware stack levels required when called: 3
  7332 ;; This function calls:
  7333 ;;		_USART_put_string
  7334 ;; This function is called by:
  7335 ;;		_Decodify_Command
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339                           
  7340                           ;psect for function _Send_Reply_OK
  7341  1912                     _Send_Reply_OK:
  7342                           
  7343                           ;SlaveLiofilizadorVer1.c: 620:      USART_put_string("OK");
  7344                           
  7345                           ;incstack = 0
  7346                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7347  1912  3054               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  7348  1913  1283               	bcf	3,5	;RP0=0, select bank0
  7349  1914  00A1               	movwf	USART_put_string@vetor
  7350  1915  3080               	movlw	128
  7351  1916  00A2               	movwf	USART_put_string@vetor+1
  7352  1917  160A  158A  242F   	fcall	_USART_put_string
  7353  191A  0008               	return
  7354  191B                     __end_of_Send_Reply_OK:
  7355                           
  7356                           	psect	text19
  7357  1C2F                     __ptext19:	
  7358 ;; *************** function _USART_put_string *****************
  7359 ;; Defined at:
  7360 ;;		line 167 in file "usart.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  7363 ;;		 -> STR_2(3), buffer(33), 
  7364 ;; Auto vars:     Size  Location     Type
  7365 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  7366 ;;		 -> STR_2(3), buffer(33), 
  7367 ;; Return value:  Size  Location     Type
  7368 ;;                  1    wreg      void 
  7369 ;; Registers used:
  7370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7371 ;; Tracked objects:
  7372 ;;		On entry : 300/800
  7373 ;;		On exit  : 300/100
  7374 ;;		Unchanged: 0/0
  7375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7376 ;;      Params:         0       2       0       0       0
  7377 ;;      Locals:         0       2       0       0       0
  7378 ;;      Temps:          0       0       0       0       0
  7379 ;;      Totals:         0       4       0       0       0
  7380 ;;Total ram usage:        4 bytes
  7381 ;; Hardware stack levels used: 1
  7382 ;; Hardware stack levels required when called: 2
  7383 ;; This function calls:
  7384 ;;		_USART_putc
  7385 ;; This function is called by:
  7386 ;;		_Decodify_Command
  7387 ;;		_Send_Reply_OK
  7388 ;; This function uses a non-reentrant model
  7389 ;;
  7390                           
  7391                           
  7392                           ;psect for function _USART_put_string
  7393  1C2F                     _USART_put_string:
  7394                           
  7395                           ;usart.c: 167: void USART_put_string(char *vetor);usart.c: 168: {;usart.c: 169:     char
      +                           *ptr;;usart.c: 170:     ptr=vetor;
  7396                           
  7397                           ;incstack = 0
  7398                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7399  1C2F  0821               	movf	USART_put_string@vetor,w
  7400  1C30  00A3               	movwf	USART_put_string@ptr
  7401  1C31  0822               	movf	USART_put_string@vetor+1,w
  7402  1C32  00A4               	movwf	USART_put_string@ptr+1
  7403  1C33                     l3833:	
  7404                           ;usart.c: 171:     while(*ptr){
  7405                           
  7406                           
  7407                           ;usart.c: 171:     while(*ptr){
  7408  1C33  0824               	movf	USART_put_string@ptr+1,w
  7409  1C34  00FF               	movwf	127
  7410  1C35  0823               	movf	USART_put_string@ptr,w
  7411  1C36  0084               	movwf	4
  7412  1C37  160A  118A  2000  160A  158A  	fcall	stringtab
  7413  1C3C  3A00               	xorlw	0
  7414  1C3D  1903               	btfsc	3,2
  7415  1C3E  2C55               	goto	l3835
  7416                           
  7417                           ;usart.c: 172:         USART_putc(*ptr);
  7418  1C3F  0824               	movf	USART_put_string@ptr+1,w
  7419  1C40  00FF               	movwf	127
  7420  1C41  0823               	movf	USART_put_string@ptr,w
  7421  1C42  0084               	movwf	4
  7422  1C43  160A  118A  2000  160A  158A  	fcall	stringtab
  7423  1C48  160A  158A  2131  160A  158A  	fcall	_USART_putc
  7424                           
  7425                           ;usart.c: 173:         ptr++;
  7426  1C4D  3001               	movlw	1
  7427  1C4E  1283               	bcf	3,5	;RP0=0, select bank0
  7428  1C4F  07A3               	addwf	USART_put_string@ptr,f
  7429  1C50  1803               	skipnc
  7430  1C51  0AA4               	incf	USART_put_string@ptr+1,f
  7431  1C52  3000               	movlw	0
  7432  1C53  07A4               	addwf	USART_put_string@ptr+1,f
  7433  1C54  2C33               	goto	l3833
  7434  1C55                     l3835:
  7435                           
  7436                           ;usart.c: 175:     USART_putc(*ptr);
  7437  1C55  0824               	movf	USART_put_string@ptr+1,w
  7438  1C56  00FF               	movwf	127
  7439  1C57  0823               	movf	USART_put_string@ptr,w
  7440  1C58  0084               	movwf	4
  7441  1C59  160A  118A  2000  160A  158A  	fcall	stringtab
  7442  1C5E  160A  158A  2131   	fcall	_USART_putc
  7443  1C61  0008               	return
  7444  1C62                     __end_of_USART_put_string:
  7445                           
  7446                           	psect	text20
  7447  1F83                     __ptext20:	
  7448 ;; *************** function _Save_Log *****************
  7449 ;; Defined at:
  7450 ;;		line 1028 in file "SlaveLiofilizadorVer1.c"
  7451 ;; Parameters:    Size  Location     Type
  7452 ;;  add_datalog     4   10[BANK1 ] unsigned long 
  7453 ;; Auto vars:     Size  Location     Type
  7454 ;;		None
  7455 ;; Return value:  Size  Location     Type
  7456 ;;                  1    wreg      void 
  7457 ;; Registers used:
  7458 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7459 ;; Tracked objects:
  7460 ;;		On entry : 300/100
  7461 ;;		On exit  : 0/0
  7462 ;;		Unchanged: 0/0
  7463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7464 ;;      Params:         0       0       4       0       0
  7465 ;;      Locals:         0       0       0       0       0
  7466 ;;      Temps:          0       0       0       0       0
  7467 ;;      Totals:         0       0       4       0       0
  7468 ;;Total ram usage:        4 bytes
  7469 ;; Hardware stack levels used: 1
  7470 ;; Hardware stack levels required when called: 5
  7471 ;; This function calls:
  7472 ;;		_EEPROM_24C1025_Write_Int
  7473 ;;		___flmul
  7474 ;;		___fltol
  7475 ;; This function is called by:
  7476 ;;		_Decodify_Command
  7477 ;; This function uses a non-reentrant model
  7478 ;;
  7479                           
  7480                           
  7481                           ;psect for function _Save_Log
  7482  1F83                     _Save_Log:
  7483                           
  7484                           ;SlaveLiofilizadorVer1.c: 1029:      EEPROM_24C1025_Write_Int(0x00, add_datalog, (Tensao
      +                          1*10.0));
  7485                           
  7486                           ;incstack = 0
  7487                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7488  1F83  082D               	movf	(Save_Log@add_datalog+3)^(0+128),w
  7489  1F84  00A3               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
  7490  1F85  082C               	movf	(Save_Log@add_datalog+2)^(0+128),w
  7491  1F86  00A2               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
  7492  1F87  082B               	movf	(Save_Log@add_datalog+1)^(0+128),w
  7493  1F88  00A1               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
  7494  1F89  082A               	movf	Save_Log@add_datalog^(0+128),w
  7495  1F8A  00A0               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
  7496  1F8B  084C               	movf	(_Tensao1+3)^(0+128),w
  7497  1F8C  1283               	bcf	3,5	;RP0=0, select bank0
  7498  1F8D  00D2               	movwf	___flmul@a+3
  7499  1F8E  1683               	bsf	3,5	;RP0=1, select bank1
  7500  1F8F  084B               	movf	(_Tensao1+2)^(0+128),w
  7501  1F90  1283               	bcf	3,5	;RP0=0, select bank0
  7502  1F91  00D1               	movwf	___flmul@a+2
  7503  1F92  1683               	bsf	3,5	;RP0=1, select bank1
  7504  1F93  084A               	movf	(_Tensao1+1)^(0+128),w
  7505  1F94  1283               	bcf	3,5	;RP0=0, select bank0
  7506  1F95  00D0               	movwf	___flmul@a+1
  7507  1F96  1683               	bsf	3,5	;RP0=1, select bank1
  7508  1F97  0849               	movf	_Tensao1^(0+128),w
  7509  1F98  1283               	bcf	3,5	;RP0=0, select bank0
  7510  1F99  00CF               	movwf	___flmul@a
  7511  1F9A  3041               	movlw	65
  7512  1F9B  00CE               	movwf	___flmul@b+3
  7513  1F9C  3020               	movlw	32
  7514  1F9D  00CD               	movwf	___flmul@b+2
  7515  1F9E  3000               	movlw	0
  7516  1F9F  00CC               	movwf	___flmul@b+1
  7517  1FA0  3000               	movlw	0
  7518  1FA1  00CB               	movwf	___flmul@b
  7519  1FA2  120A  118A  2383  160A  158A  	fcall	___flmul
  7520  1FA7  084E               	movf	?___flmul+3,w
  7521  1FA8  00E8               	movwf	___fltol@f1+3
  7522  1FA9  084D               	movf	?___flmul+2,w
  7523  1FAA  00E7               	movwf	___fltol@f1+2
  7524  1FAB  084C               	movf	?___flmul+1,w
  7525  1FAC  00E6               	movwf	___fltol@f1+1
  7526  1FAD  084B               	movf	?___flmul,w
  7527  1FAE  00E5               	movwf	___fltol@f1
  7528  1FAF  120A  158A  2002  160A  158A  	fcall	___fltol
  7529  1FB4  0866               	movf	?___fltol+1,w
  7530  1FB5  1683               	bsf	3,5	;RP0=1, select bank1
  7531  1FB6  00A5               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  7532  1FB7  1283               	bcf	3,5	;RP0=0, select bank0
  7533  1FB8  0865               	movf	?___fltol,w
  7534  1FB9  1683               	bsf	3,5	;RP0=1, select bank1
  7535  1FBA  00A4               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  7536  1FBB  3000               	movlw	0
  7537  1FBC  160A  158A  2324  160A  158A  	fcall	_EEPROM_24C1025_Write_Int
  7538                           
  7539                           ;SlaveLiofilizadorVer1.c: 1030:      EEPROM_24C1025_Write_Int(0x01, add_datalog, (Vaccum
      +                          0*10.0));
  7540  1FC1  1683               	bsf	3,5	;RP0=1, select bank1
  7541  1FC2  1303               	bcf	3,6	;RP1=0, select bank1
  7542  1FC3  082D               	movf	(Save_Log@add_datalog+3)^(0+128),w
  7543  1FC4  00A3               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
  7544  1FC5  082C               	movf	(Save_Log@add_datalog+2)^(0+128),w
  7545  1FC6  00A2               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
  7546  1FC7  082B               	movf	(Save_Log@add_datalog+1)^(0+128),w
  7547  1FC8  00A1               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
  7548  1FC9  082A               	movf	Save_Log@add_datalog^(0+128),w
  7549  1FCA  00A0               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
  7550  1FCB  0850               	movf	(_Vaccum0+3)^(0+128),w
  7551  1FCC  1283               	bcf	3,5	;RP0=0, select bank0
  7552  1FCD  00D2               	movwf	___flmul@a+3
  7553  1FCE  1683               	bsf	3,5	;RP0=1, select bank1
  7554  1FCF  084F               	movf	(_Vaccum0+2)^(0+128),w
  7555  1FD0  1283               	bcf	3,5	;RP0=0, select bank0
  7556  1FD1  00D1               	movwf	___flmul@a+2
  7557  1FD2  1683               	bsf	3,5	;RP0=1, select bank1
  7558  1FD3  084E               	movf	(_Vaccum0+1)^(0+128),w
  7559  1FD4  1283               	bcf	3,5	;RP0=0, select bank0
  7560  1FD5  00D0               	movwf	___flmul@a+1
  7561  1FD6  1683               	bsf	3,5	;RP0=1, select bank1
  7562  1FD7  084D               	movf	_Vaccum0^(0+128),w
  7563  1FD8  1283               	bcf	3,5	;RP0=0, select bank0
  7564  1FD9  00CF               	movwf	___flmul@a
  7565  1FDA  3041               	movlw	65
  7566  1FDB  00CE               	movwf	___flmul@b+3
  7567  1FDC  3020               	movlw	32
  7568  1FDD  00CD               	movwf	___flmul@b+2
  7569  1FDE  3000               	movlw	0
  7570  1FDF  00CC               	movwf	___flmul@b+1
  7571  1FE0  3000               	movlw	0
  7572  1FE1  00CB               	movwf	___flmul@b
  7573  1FE2  120A  118A  2383  160A  158A  	fcall	___flmul
  7574  1FE7  084E               	movf	?___flmul+3,w
  7575  1FE8  00E8               	movwf	___fltol@f1+3
  7576  1FE9  084D               	movf	?___flmul+2,w
  7577  1FEA  00E7               	movwf	___fltol@f1+2
  7578  1FEB  084C               	movf	?___flmul+1,w
  7579  1FEC  00E6               	movwf	___fltol@f1+1
  7580  1FED  084B               	movf	?___flmul,w
  7581  1FEE  00E5               	movwf	___fltol@f1
  7582  1FEF  120A  158A  2002  160A  158A  	fcall	___fltol
  7583  1FF4  0866               	movf	?___fltol+1,w
  7584  1FF5  1683               	bsf	3,5	;RP0=1, select bank1
  7585  1FF6  00A5               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  7586  1FF7  1283               	bcf	3,5	;RP0=0, select bank0
  7587  1FF8  0865               	movf	?___fltol,w
  7588  1FF9  1683               	bsf	3,5	;RP0=1, select bank1
  7589  1FFA  00A4               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  7590  1FFB  3001               	movlw	1
  7591  1FFC  160A  158A  2324   	fcall	_EEPROM_24C1025_Write_Int
  7592  1FFF  0008               	return
  7593  2000                     __end_of_Save_Log:
  7594                           
  7595                           	psect	text21
  7596  0802                     __ptext21:	
  7597 ;; *************** function ___fltol *****************
  7598 ;; Defined at:
  7599 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  7600 ;; Parameters:    Size  Location     Type
  7601 ;;  f1              4   69[BANK0 ] void 
  7602 ;; Auto vars:     Size  Location     Type
  7603 ;;  exp1            1   79[BANK0 ] unsigned char 
  7604 ;;  sign1           1   78[BANK0 ] unsigned char 
  7605 ;; Return value:  Size  Location     Type
  7606 ;;                  4   69[BANK0 ] long 
  7607 ;; Registers used:
  7608 ;;		wreg, status,2, status,0
  7609 ;; Tracked objects:
  7610 ;;		On entry : 300/0
  7611 ;;		On exit  : 300/0
  7612 ;;		Unchanged: 0/0
  7613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7614 ;;      Params:         0       4       0       0       0
  7615 ;;      Locals:         0       2       0       0       0
  7616 ;;      Temps:          0       5       0       0       0
  7617 ;;      Totals:         0      11       0       0       0
  7618 ;;Total ram usage:       11 bytes
  7619 ;; Hardware stack levels used: 1
  7620 ;; Hardware stack levels required when called: 1
  7621 ;; This function calls:
  7622 ;;		Nothing
  7623 ;; This function is called by:
  7624 ;;		_Decodify_Command
  7625 ;;		_Save_Log
  7626 ;; This function uses a non-reentrant model
  7627 ;;
  7628                           
  7629                           
  7630                           ;psect for function ___fltol
  7631  0802                     ___fltol:
  7632                           
  7633                           ;incstack = 0
  7634                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7635  0802  1003               	clrc
  7636  0803  0D67               	rlf	___fltol@f1+2,w
  7637  0804  0D68               	rlf	___fltol@f1+3,w
  7638  0805  00E9               	movwf	??___fltol
  7639  0806  0869               	movf	??___fltol,w
  7640  0807  00EF               	movwf	___fltol@exp1
  7641  0808  086F               	movf	___fltol@exp1,w
  7642  0809  1D03               	btfss	3,2
  7643  080A  2814               	goto	l3935
  7644  080B                     l3931:
  7645  080B  3000               	movlw	0
  7646  080C  00E8               	movwf	?___fltol+3
  7647  080D  3000               	movlw	0
  7648  080E  00E7               	movwf	?___fltol+2
  7649  080F  3000               	movlw	0
  7650  0810  00E6               	movwf	?___fltol+1
  7651  0811  3000               	movlw	0
  7652  0812  00E5               	movwf	?___fltol
  7653  0813  0008               	return
  7654  0814                     l3935:
  7655  0814  0865               	movf	___fltol@f1,w
  7656  0815  00E9               	movwf	??___fltol
  7657  0816  0866               	movf	___fltol@f1+1,w
  7658  0817  00EA               	movwf	??___fltol+1
  7659  0818  0867               	movf	___fltol@f1+2,w
  7660  0819  00EB               	movwf	??___fltol+2
  7661  081A  0868               	movf	___fltol@f1+3,w
  7662  081B  00EC               	movwf	??___fltol+3
  7663  081C  301F               	movlw	31
  7664  081D                     u3045:
  7665  081D  1003               	clrc
  7666  081E  0CEC               	rrf	??___fltol+3,f
  7667  081F  0CEB               	rrf	??___fltol+2,f
  7668  0820  0CEA               	rrf	??___fltol+1,f
  7669  0821  0CE9               	rrf	??___fltol,f
  7670  0822  3EFF               	addlw	-1
  7671  0823  1D03               	skipz
  7672  0824  281D               	goto	u3045
  7673  0825  0869               	movf	??___fltol,w
  7674  0826  00ED               	movwf	??___fltol+4
  7675  0827  086D               	movf	??___fltol+4,w
  7676  0828  00EE               	movwf	___fltol@sign1
  7677  0829  17E7               	bsf	___fltol@f1+2,7
  7678  082A  30FF               	movlw	255
  7679  082B  05E5               	andwf	___fltol@f1,f
  7680  082C  30FF               	movlw	255
  7681  082D  05E6               	andwf	___fltol@f1+1,f
  7682  082E  30FF               	movlw	255
  7683  082F  05E7               	andwf	___fltol@f1+2,f
  7684  0830  3000               	movlw	0
  7685  0831  05E8               	andwf	___fltol@f1+3,f
  7686  0832  3096               	movlw	150
  7687  0833  02EF               	subwf	___fltol@exp1,f
  7688  0834  1FEF               	btfss	___fltol@exp1,7
  7689  0835  284B               	goto	l3953
  7690  0836  086F               	movf	___fltol@exp1,w
  7691  0837  3A80               	xorlw	128
  7692  0838  3E97               	addlw	151
  7693  0839  1C03               	btfss	3,0
  7694  083A  280B               	goto	l3931
  7695  083B                     l3951:
  7696  083B  3001               	movlw	1
  7697  083C                     u3075:
  7698  083C  1003               	clrc
  7699  083D  0CE8               	rrf	___fltol@f1+3,f
  7700  083E  0CE7               	rrf	___fltol@f1+2,f
  7701  083F  0CE6               	rrf	___fltol@f1+1,f
  7702  0840  0CE5               	rrf	___fltol@f1,f
  7703  0841  3EFF               	addlw	-1
  7704  0842  1D03               	skipz
  7705  0843  283C               	goto	u3075
  7706  0844  3001               	movlw	1
  7707  0845  00E9               	movwf	??___fltol
  7708  0846  0869               	movf	??___fltol,w
  7709  0847  07EF               	addwf	___fltol@exp1,f
  7710  0848  1903               	btfsc	3,2
  7711  0849  285E               	goto	l3961
  7712  084A  283B               	goto	l3951
  7713  084B                     l3953:
  7714  084B  3020               	movlw	32
  7715  084C  026F               	subwf	___fltol@exp1,w
  7716  084D  1803               	btfsc	3,0
  7717  084E  280B               	goto	l3931
  7718  084F                     l1190:
  7719  084F  086F               	movf	___fltol@exp1,w
  7720  0850  1903               	btfsc	3,2
  7721  0851  285E               	goto	l3961
  7722  0852  3001               	movlw	1
  7723  0853  00E9               	movwf	??___fltol
  7724  0854                     u3105:
  7725  0854  1003               	clrc
  7726  0855  0DE5               	rlf	___fltol@f1,f
  7727  0856  0DE6               	rlf	___fltol@f1+1,f
  7728  0857  0DE7               	rlf	___fltol@f1+2,f
  7729  0858  0DE8               	rlf	___fltol@f1+3,f
  7730  0859  0BE9               	decfsz	??___fltol,f
  7731  085A  2854               	goto	u3105
  7732  085B  3001               	movlw	1
  7733  085C  02EF               	subwf	___fltol@exp1,f
  7734  085D  284F               	goto	l1190
  7735  085E                     l3961:
  7736  085E  086E               	movf	___fltol@sign1,w
  7737  085F  1903               	btfsc	3,2
  7738  0860  0008               	return
  7739  0861  09E5               	comf	___fltol@f1,f
  7740  0862  09E6               	comf	___fltol@f1+1,f
  7741  0863  09E7               	comf	___fltol@f1+2,f
  7742  0864  09E8               	comf	___fltol@f1+3,f
  7743  0865  0AE5               	incf	___fltol@f1,f
  7744  0866  1903               	skipnz
  7745  0867  0AE6               	incf	___fltol@f1+1,f
  7746  0868  1903               	skipnz
  7747  0869  0AE7               	incf	___fltol@f1+2,f
  7748  086A  1903               	skipnz
  7749  086B  0AE8               	incf	___fltol@f1+3,f
  7750  086C  0008               	return
  7751  086D                     __end_of___fltol:
  7752                           
  7753                           	psect	text22
  7754  0383                     __ptext22:	
  7755 ;; *************** function ___flmul *****************
  7756 ;; Defined at:
  7757 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  7758 ;; Parameters:    Size  Location     Type
  7759 ;;  b               4   43[BANK0 ] long 
  7760 ;;  a               4   47[BANK0 ] long 
  7761 ;; Auto vars:     Size  Location     Type
  7762 ;;  prod            4   63[BANK0 ] struct .
  7763 ;;  grs             4   58[BANK0 ] unsigned long 
  7764 ;;  temp            2   67[BANK0 ] struct .
  7765 ;;  bexp            1   62[BANK0 ] unsigned char 
  7766 ;;  aexp            1   57[BANK0 ] unsigned char 
  7767 ;;  sign            1   56[BANK0 ] unsigned char 
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  4   43[BANK0 ] unsigned char 
  7770 ;; Registers used:
  7771 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7772 ;; Tracked objects:
  7773 ;;		On entry : 300/0
  7774 ;;		On exit  : 300/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7777 ;;      Params:         0       8       0       0       0
  7778 ;;      Locals:         0      13       0       0       0
  7779 ;;      Temps:          0       5       0       0       0
  7780 ;;      Totals:         0      26       0       0       0
  7781 ;;Total ram usage:       26 bytes
  7782 ;; Hardware stack levels used: 1
  7783 ;; Hardware stack levels required when called: 2
  7784 ;; This function calls:
  7785 ;;		__Umul8_16
  7786 ;; This function is called by:
  7787 ;;		_Decodify_Command
  7788 ;;		_MediaPlacaVaccum
  7789 ;;		_Save_Log
  7790 ;; This function uses a non-reentrant model
  7791 ;;
  7792                           
  7793                           
  7794                           ;psect for function ___flmul
  7795  0383                     ___flmul:
  7796                           
  7797                           ;incstack = 0
  7798                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7799  0383  084E               	movf	___flmul@b+3,w
  7800  0384  3980               	andlw	128
  7801  0385  00D3               	movwf	??___flmul
  7802  0386  0853               	movf	??___flmul,w
  7803  0387  00D8               	movwf	___flmul@sign
  7804  0388  084E               	movf	___flmul@b+3,w
  7805  0389  00D3               	movwf	??___flmul
  7806  038A  0753               	addwf	??___flmul,w
  7807  038B  00D4               	movwf	??___flmul+1
  7808  038C  0854               	movf	??___flmul+1,w
  7809  038D  00DE               	movwf	___flmul@bexp
  7810  038E  1BCD               	btfsc	___flmul@b+2,7
  7811  038F  145E               	bsf	___flmul@bexp,0
  7812  0390  085E               	movf	___flmul@bexp,w
  7813  0391  1903               	btfsc	3,2
  7814  0392  2BA0               	goto	l4201
  7815  0393  0A5E               	incf	___flmul@bexp,w
  7816  0394  1D03               	btfss	3,2
  7817  0395  2B9E               	goto	l4199
  7818  0396  3000               	movlw	0
  7819  0397  00CE               	movwf	___flmul@b+3
  7820  0398  3000               	movlw	0
  7821  0399  00CD               	movwf	___flmul@b+2
  7822  039A  3000               	movlw	0
  7823  039B  00CC               	movwf	___flmul@b+1
  7824  039C  3000               	movlw	0
  7825  039D  00CB               	movwf	___flmul@b
  7826  039E                     l4199:
  7827  039E  17CD               	bsf	___flmul@b+2,7
  7828  039F  2BA8               	goto	l4203
  7829  03A0                     l4201:
  7830  03A0  3000               	movlw	0
  7831  03A1  00CE               	movwf	___flmul@b+3
  7832  03A2  3000               	movlw	0
  7833  03A3  00CD               	movwf	___flmul@b+2
  7834  03A4  3000               	movlw	0
  7835  03A5  00CC               	movwf	___flmul@b+1
  7836  03A6  3000               	movlw	0
  7837  03A7  00CB               	movwf	___flmul@b
  7838  03A8                     l4203:
  7839  03A8  0852               	movf	___flmul@a+3,w
  7840  03A9  3980               	andlw	128
  7841  03AA  00D3               	movwf	??___flmul
  7842  03AB  0853               	movf	??___flmul,w
  7843  03AC  06D8               	xorwf	___flmul@sign,f
  7844  03AD  0852               	movf	___flmul@a+3,w
  7845  03AE  00D3               	movwf	??___flmul
  7846  03AF  0753               	addwf	??___flmul,w
  7847  03B0  00D4               	movwf	??___flmul+1
  7848  03B1  0854               	movf	??___flmul+1,w
  7849  03B2  00D9               	movwf	___flmul@aexp
  7850  03B3  1BD1               	btfsc	___flmul@a+2,7
  7851  03B4  1459               	bsf	___flmul@aexp,0
  7852  03B5  0859               	movf	___flmul@aexp,w
  7853  03B6  1903               	btfsc	3,2
  7854  03B7  2BC5               	goto	l4219
  7855  03B8  0A59               	incf	___flmul@aexp,w
  7856  03B9  1D03               	btfss	3,2
  7857  03BA  2BC3               	goto	l4217
  7858  03BB  3000               	movlw	0
  7859  03BC  00D2               	movwf	___flmul@a+3
  7860  03BD  3000               	movlw	0
  7861  03BE  00D1               	movwf	___flmul@a+2
  7862  03BF  3000               	movlw	0
  7863  03C0  00D0               	movwf	___flmul@a+1
  7864  03C1  3000               	movlw	0
  7865  03C2  00CF               	movwf	___flmul@a
  7866  03C3                     l4217:
  7867  03C3  17D1               	bsf	___flmul@a+2,7
  7868  03C4  2BCD               	goto	l4221
  7869  03C5                     l4219:
  7870  03C5  3000               	movlw	0
  7871  03C6  00D2               	movwf	___flmul@a+3
  7872  03C7  3000               	movlw	0
  7873  03C8  00D1               	movwf	___flmul@a+2
  7874  03C9  3000               	movlw	0
  7875  03CA  00D0               	movwf	___flmul@a+1
  7876  03CB  3000               	movlw	0
  7877  03CC  00CF               	movwf	___flmul@a
  7878  03CD                     l4221:
  7879  03CD  0859               	movf	___flmul@aexp,w
  7880  03CE  1D03               	btfss	3,2
  7881  03CF  085E               	movf	___flmul@bexp,w
  7882  03D0  1D03               	btfss	3,2
  7883  03D1  2BDB               	goto	l4229
  7884  03D2  3000               	movlw	0
  7885  03D3  00CE               	movwf	?___flmul+3
  7886  03D4  3000               	movlw	0
  7887  03D5  00CD               	movwf	?___flmul+2
  7888  03D6  3000               	movlw	0
  7889  03D7  00CC               	movwf	?___flmul+1
  7890  03D8  3000               	movlw	0
  7891  03D9  00CB               	movwf	?___flmul
  7892  03DA  0008               	return
  7893  03DB                     l4229:
  7894  03DB  084B               	movf	___flmul@b,w
  7895  03DC  00D3               	movwf	??___flmul
  7896  03DD  0853               	movf	??___flmul,w
  7897  03DE  00A0               	movwf	__Umul8_16@multiplicand
  7898  03DF  0851               	movf	___flmul@a+2,w
  7899  03E0  160A  158A  22B1  120A  118A  	fcall	__Umul8_16
  7900  03E5  0821               	movf	?__Umul8_16+1,w
  7901  03E6  00E4               	movwf	___flmul@temp+1
  7902  03E7  0820               	movf	?__Umul8_16,w
  7903  03E8  00E3               	movwf	___flmul@temp
  7904  03E9  0863               	movf	___flmul@temp,w
  7905  03EA  00D3               	movwf	??___flmul
  7906  03EB  01D4               	clrf	??___flmul+1
  7907  03EC  01D5               	clrf	??___flmul+2
  7908  03ED  01D6               	clrf	??___flmul+3
  7909  03EE  0856               	movf	??___flmul+3,w
  7910  03EF  00DD               	movwf	___flmul@grs+3
  7911  03F0  0855               	movf	??___flmul+2,w
  7912  03F1  00DC               	movwf	___flmul@grs+2
  7913  03F2  0854               	movf	??___flmul+1,w
  7914  03F3  00DB               	movwf	___flmul@grs+1
  7915  03F4  0853               	movf	??___flmul,w
  7916  03F5  00DA               	movwf	___flmul@grs
  7917  03F6  0864               	movf	___flmul@temp+1,w
  7918  03F7  00D3               	movwf	??___flmul
  7919  03F8  01D4               	clrf	??___flmul+1
  7920  03F9  01D5               	clrf	??___flmul+2
  7921  03FA  01D6               	clrf	??___flmul+3
  7922  03FB  0856               	movf	??___flmul+3,w
  7923  03FC  00E2               	movwf	___flmul@prod+3
  7924  03FD  0855               	movf	??___flmul+2,w
  7925  03FE  00E1               	movwf	___flmul@prod+2
  7926  03FF  0854               	movf	??___flmul+1,w
  7927  0400  00E0               	movwf	___flmul@prod+1
  7928  0401  0853               	movf	??___flmul,w
  7929  0402  00DF               	movwf	___flmul@prod
  7930  0403  084C               	movf	___flmul@b+1,w
  7931  0404  00D3               	movwf	??___flmul
  7932  0405  0853               	movf	??___flmul,w
  7933  0406  00A0               	movwf	__Umul8_16@multiplicand
  7934  0407  0850               	movf	___flmul@a+1,w
  7935  0408  160A  158A  22B1  120A  118A  	fcall	__Umul8_16
  7936  040D  0821               	movf	?__Umul8_16+1,w
  7937  040E  00E4               	movwf	___flmul@temp+1
  7938  040F  0820               	movf	?__Umul8_16,w
  7939  0410  00E3               	movwf	___flmul@temp
  7940  0411  0863               	movf	___flmul@temp,w
  7941  0412  00D3               	movwf	??___flmul
  7942  0413  01D4               	clrf	??___flmul+1
  7943  0414  01D5               	clrf	??___flmul+2
  7944  0415  01D6               	clrf	??___flmul+3
  7945  0416  0853               	movf	??___flmul,w
  7946  0417  07DA               	addwf	___flmul@grs,f
  7947  0418  0854               	movf	??___flmul+1,w
  7948  0419  1103               	clrz
  7949  041A  1803               	skipnc
  7950  041B  3E01               	addlw	1
  7951  041C  1D03               	btfss	3,2
  7952  041D  07DB               	addwf	___flmul@grs+1,f
  7953  041E  0855               	movf	??___flmul+2,w
  7954  041F  1103               	clrz
  7955  0420  1803               	skipnc
  7956  0421  3E01               	addlw	1
  7957  0422  1D03               	btfss	3,2
  7958  0423  07DC               	addwf	___flmul@grs+2,f
  7959  0424  0856               	movf	??___flmul+3,w
  7960  0425  1103               	clrz
  7961  0426  1803               	skipnc
  7962  0427  3E01               	addlw	1
  7963  0428  1D03               	btfss	3,2
  7964  0429  07DD               	addwf	___flmul@grs+3,f
  7965  042A  0864               	movf	___flmul@temp+1,w
  7966  042B  00D3               	movwf	??___flmul
  7967  042C  01D4               	clrf	??___flmul+1
  7968  042D  01D5               	clrf	??___flmul+2
  7969  042E  01D6               	clrf	??___flmul+3
  7970  042F  0853               	movf	??___flmul,w
  7971  0430  07DF               	addwf	___flmul@prod,f
  7972  0431  0854               	movf	??___flmul+1,w
  7973  0432  1103               	clrz
  7974  0433  1803               	skipnc
  7975  0434  3E01               	addlw	1
  7976  0435  1D03               	btfss	3,2
  7977  0436  07E0               	addwf	___flmul@prod+1,f
  7978  0437  0855               	movf	??___flmul+2,w
  7979  0438  1103               	clrz
  7980  0439  1803               	skipnc
  7981  043A  3E01               	addlw	1
  7982  043B  1D03               	btfss	3,2
  7983  043C  07E1               	addwf	___flmul@prod+2,f
  7984  043D  0856               	movf	??___flmul+3,w
  7985  043E  1103               	clrz
  7986  043F  1803               	skipnc
  7987  0440  3E01               	addlw	1
  7988  0441  1D03               	btfss	3,2
  7989  0442  07E2               	addwf	___flmul@prod+3,f
  7990  0443  084D               	movf	___flmul@b+2,w
  7991  0444  00D3               	movwf	??___flmul
  7992  0445  0853               	movf	??___flmul,w
  7993  0446  00A0               	movwf	__Umul8_16@multiplicand
  7994  0447  084F               	movf	___flmul@a,w
  7995  0448  160A  158A  22B1  120A  118A  	fcall	__Umul8_16
  7996  044D  0821               	movf	?__Umul8_16+1,w
  7997  044E  00E4               	movwf	___flmul@temp+1
  7998  044F  0820               	movf	?__Umul8_16,w
  7999  0450  00E3               	movwf	___flmul@temp
  8000  0451  0863               	movf	___flmul@temp,w
  8001  0452  00D3               	movwf	??___flmul
  8002  0453  01D4               	clrf	??___flmul+1
  8003  0454  01D5               	clrf	??___flmul+2
  8004  0455  01D6               	clrf	??___flmul+3
  8005  0456  0853               	movf	??___flmul,w
  8006  0457  07DA               	addwf	___flmul@grs,f
  8007  0458  0854               	movf	??___flmul+1,w
  8008  0459  1103               	clrz
  8009  045A  1803               	skipnc
  8010  045B  3E01               	addlw	1
  8011  045C  1D03               	btfss	3,2
  8012  045D  07DB               	addwf	___flmul@grs+1,f
  8013  045E  0855               	movf	??___flmul+2,w
  8014  045F  1103               	clrz
  8015  0460  1803               	skipnc
  8016  0461  3E01               	addlw	1
  8017  0462  1D03               	btfss	3,2
  8018  0463  07DC               	addwf	___flmul@grs+2,f
  8019  0464  0856               	movf	??___flmul+3,w
  8020  0465  1103               	clrz
  8021  0466  1803               	skipnc
  8022  0467  3E01               	addlw	1
  8023  0468  1D03               	btfss	3,2
  8024  0469  07DD               	addwf	___flmul@grs+3,f
  8025  046A  0864               	movf	___flmul@temp+1,w
  8026  046B  00D3               	movwf	??___flmul
  8027  046C  01D4               	clrf	??___flmul+1
  8028  046D  01D5               	clrf	??___flmul+2
  8029  046E  01D6               	clrf	??___flmul+3
  8030  046F  0853               	movf	??___flmul,w
  8031  0470  07DF               	addwf	___flmul@prod,f
  8032  0471  0854               	movf	??___flmul+1,w
  8033  0472  1103               	clrz
  8034  0473  1803               	skipnc
  8035  0474  3E01               	addlw	1
  8036  0475  1D03               	btfss	3,2
  8037  0476  07E0               	addwf	___flmul@prod+1,f
  8038  0477  0855               	movf	??___flmul+2,w
  8039  0478  1103               	clrz
  8040  0479  1803               	skipnc
  8041  047A  3E01               	addlw	1
  8042  047B  1D03               	btfss	3,2
  8043  047C  07E1               	addwf	___flmul@prod+2,f
  8044  047D  0856               	movf	??___flmul+3,w
  8045  047E  1103               	clrz
  8046  047F  1803               	skipnc
  8047  0480  3E01               	addlw	1
  8048  0481  1D03               	btfss	3,2
  8049  0482  07E2               	addwf	___flmul@prod+3,f
  8050  0483  3008               	movlw	8
  8051  0484  00D3               	movwf	??___flmul
  8052  0485                     u3785:
  8053  0485  1003               	clrc
  8054  0486  0DDA               	rlf	___flmul@grs,f
  8055  0487  0DDB               	rlf	___flmul@grs+1,f
  8056  0488  0DDC               	rlf	___flmul@grs+2,f
  8057  0489  0DDD               	rlf	___flmul@grs+3,f
  8058  048A  0BD3               	decfsz	??___flmul,f
  8059  048B  2C85               	goto	u3785
  8060  048C  084C               	movf	___flmul@b+1,w
  8061  048D  00D3               	movwf	??___flmul
  8062  048E  0853               	movf	??___flmul,w
  8063  048F  00A0               	movwf	__Umul8_16@multiplicand
  8064  0490  084F               	movf	___flmul@a,w
  8065  0491  160A  158A  22B1  120A  118A  	fcall	__Umul8_16
  8066  0496  0821               	movf	?__Umul8_16+1,w
  8067  0497  00E4               	movwf	___flmul@temp+1
  8068  0498  0820               	movf	?__Umul8_16,w
  8069  0499  00E3               	movwf	___flmul@temp
  8070  049A  0863               	movf	___flmul@temp,w
  8071  049B  00D3               	movwf	??___flmul
  8072  049C  0864               	movf	___flmul@temp+1,w
  8073  049D  00D4               	movwf	??___flmul+1
  8074  049E  01D5               	clrf	??___flmul+2
  8075  049F  01D6               	clrf	??___flmul+3
  8076  04A0  0853               	movf	??___flmul,w
  8077  04A1  07DA               	addwf	___flmul@grs,f
  8078  04A2  0854               	movf	??___flmul+1,w
  8079  04A3  1103               	clrz
  8080  04A4  1803               	skipnc
  8081  04A5  3E01               	addlw	1
  8082  04A6  1D03               	btfss	3,2
  8083  04A7  07DB               	addwf	___flmul@grs+1,f
  8084  04A8  0855               	movf	??___flmul+2,w
  8085  04A9  1103               	clrz
  8086  04AA  1803               	skipnc
  8087  04AB  3E01               	addlw	1
  8088  04AC  1D03               	btfss	3,2
  8089  04AD  07DC               	addwf	___flmul@grs+2,f
  8090  04AE  0856               	movf	??___flmul+3,w
  8091  04AF  1103               	clrz
  8092  04B0  1803               	skipnc
  8093  04B1  3E01               	addlw	1
  8094  04B2  1D03               	btfss	3,2
  8095  04B3  07DD               	addwf	___flmul@grs+3,f
  8096  04B4  084B               	movf	___flmul@b,w
  8097  04B5  00D3               	movwf	??___flmul
  8098  04B6  0853               	movf	??___flmul,w
  8099  04B7  00A0               	movwf	__Umul8_16@multiplicand
  8100  04B8  0850               	movf	___flmul@a+1,w
  8101  04B9  160A  158A  22B1  120A  118A  	fcall	__Umul8_16
  8102  04BE  0821               	movf	?__Umul8_16+1,w
  8103  04BF  00E4               	movwf	___flmul@temp+1
  8104  04C0  0820               	movf	?__Umul8_16,w
  8105  04C1  00E3               	movwf	___flmul@temp
  8106  04C2  0863               	movf	___flmul@temp,w
  8107  04C3  00D3               	movwf	??___flmul
  8108  04C4  0864               	movf	___flmul@temp+1,w
  8109  04C5  00D4               	movwf	??___flmul+1
  8110  04C6  01D5               	clrf	??___flmul+2
  8111  04C7  01D6               	clrf	??___flmul+3
  8112  04C8  0853               	movf	??___flmul,w
  8113  04C9  07DA               	addwf	___flmul@grs,f
  8114  04CA  0854               	movf	??___flmul+1,w
  8115  04CB  1103               	clrz
  8116  04CC  1803               	skipnc
  8117  04CD  3E01               	addlw	1
  8118  04CE  1D03               	btfss	3,2
  8119  04CF  07DB               	addwf	___flmul@grs+1,f
  8120  04D0  0855               	movf	??___flmul+2,w
  8121  04D1  1103               	clrz
  8122  04D2  1803               	skipnc
  8123  04D3  3E01               	addlw	1
  8124  04D4  1D03               	btfss	3,2
  8125  04D5  07DC               	addwf	___flmul@grs+2,f
  8126  04D6  0856               	movf	??___flmul+3,w
  8127  04D7  1103               	clrz
  8128  04D8  1803               	skipnc
  8129  04D9  3E01               	addlw	1
  8130  04DA  1D03               	btfss	3,2
  8131  04DB  07DD               	addwf	___flmul@grs+3,f
  8132  04DC  3008               	movlw	8
  8133  04DD  00D3               	movwf	??___flmul
  8134  04DE                     u3815:
  8135  04DE  1003               	clrc
  8136  04DF  0DDA               	rlf	___flmul@grs,f
  8137  04E0  0DDB               	rlf	___flmul@grs+1,f
  8138  04E1  0DDC               	rlf	___flmul@grs+2,f
  8139  04E2  0DDD               	rlf	___flmul@grs+3,f
  8140  04E3  0BD3               	decfsz	??___flmul,f
  8141  04E4  2CDE               	goto	u3815
  8142  04E5  084B               	movf	___flmul@b,w
  8143  04E6  00D3               	movwf	??___flmul
  8144  04E7  0853               	movf	??___flmul,w
  8145  04E8  00A0               	movwf	__Umul8_16@multiplicand
  8146  04E9  084F               	movf	___flmul@a,w
  8147  04EA  160A  158A  22B1  120A  118A  	fcall	__Umul8_16
  8148  04EF  0821               	movf	?__Umul8_16+1,w
  8149  04F0  00E4               	movwf	___flmul@temp+1
  8150  04F1  0820               	movf	?__Umul8_16,w
  8151  04F2  00E3               	movwf	___flmul@temp
  8152  04F3  0863               	movf	___flmul@temp,w
  8153  04F4  00D3               	movwf	??___flmul
  8154  04F5  0864               	movf	___flmul@temp+1,w
  8155  04F6  00D4               	movwf	??___flmul+1
  8156  04F7  01D5               	clrf	??___flmul+2
  8157  04F8  01D6               	clrf	??___flmul+3
  8158  04F9  0853               	movf	??___flmul,w
  8159  04FA  07DA               	addwf	___flmul@grs,f
  8160  04FB  0854               	movf	??___flmul+1,w
  8161  04FC  1103               	clrz
  8162  04FD  1803               	skipnc
  8163  04FE  3E01               	addlw	1
  8164  04FF  1D03               	btfss	3,2
  8165  0500  07DB               	addwf	___flmul@grs+1,f
  8166  0501  0855               	movf	??___flmul+2,w
  8167  0502  1103               	clrz
  8168  0503  1803               	skipnc
  8169  0504  3E01               	addlw	1
  8170  0505  1D03               	btfss	3,2
  8171  0506  07DC               	addwf	___flmul@grs+2,f
  8172  0507  0856               	movf	??___flmul+3,w
  8173  0508  1103               	clrz
  8174  0509  1803               	skipnc
  8175  050A  3E01               	addlw	1
  8176  050B  1D03               	btfss	3,2
  8177  050C  07DD               	addwf	___flmul@grs+3,f
  8178  050D  084C               	movf	___flmul@b+1,w
  8179  050E  00D3               	movwf	??___flmul
  8180  050F  0853               	movf	??___flmul,w
  8181  0510  00A0               	movwf	__Umul8_16@multiplicand
  8182  0511  0851               	movf	___flmul@a+2,w
  8183  0512  160A  158A  22B1  120A  118A  	fcall	__Umul8_16
  8184  0517  0821               	movf	?__Umul8_16+1,w
  8185  0518  00E4               	movwf	___flmul@temp+1
  8186  0519  0820               	movf	?__Umul8_16,w
  8187  051A  00E3               	movwf	___flmul@temp
  8188  051B  0863               	movf	___flmul@temp,w
  8189  051C  00D3               	movwf	??___flmul
  8190  051D  0864               	movf	___flmul@temp+1,w
  8191  051E  00D4               	movwf	??___flmul+1
  8192  051F  01D5               	clrf	??___flmul+2
  8193  0520  01D6               	clrf	??___flmul+3
  8194  0521  0853               	movf	??___flmul,w
  8195  0522  07DF               	addwf	___flmul@prod,f
  8196  0523  0854               	movf	??___flmul+1,w
  8197  0524  1103               	clrz
  8198  0525  1803               	skipnc
  8199  0526  3E01               	addlw	1
  8200  0527  1D03               	btfss	3,2
  8201  0528  07E0               	addwf	___flmul@prod+1,f
  8202  0529  0855               	movf	??___flmul+2,w
  8203  052A  1103               	clrz
  8204  052B  1803               	skipnc
  8205  052C  3E01               	addlw	1
  8206  052D  1D03               	btfss	3,2
  8207  052E  07E1               	addwf	___flmul@prod+2,f
  8208  052F  0856               	movf	??___flmul+3,w
  8209  0530  1103               	clrz
  8210  0531  1803               	skipnc
  8211  0532  3E01               	addlw	1
  8212  0533  1D03               	btfss	3,2
  8213  0534  07E2               	addwf	___flmul@prod+3,f
  8214  0535  084D               	movf	___flmul@b+2,w
  8215  0536  00D3               	movwf	??___flmul
  8216  0537  0853               	movf	??___flmul,w
  8217  0538  00A0               	movwf	__Umul8_16@multiplicand
  8218  0539  0850               	movf	___flmul@a+1,w
  8219  053A  160A  158A  22B1  120A  118A  	fcall	__Umul8_16
  8220  053F  0821               	movf	?__Umul8_16+1,w
  8221  0540  00E4               	movwf	___flmul@temp+1
  8222  0541  0820               	movf	?__Umul8_16,w
  8223  0542  00E3               	movwf	___flmul@temp
  8224  0543  0863               	movf	___flmul@temp,w
  8225  0544  00D3               	movwf	??___flmul
  8226  0545  0864               	movf	___flmul@temp+1,w
  8227  0546  00D4               	movwf	??___flmul+1
  8228  0547  01D5               	clrf	??___flmul+2
  8229  0548  01D6               	clrf	??___flmul+3
  8230  0549  0853               	movf	??___flmul,w
  8231  054A  07DF               	addwf	___flmul@prod,f
  8232  054B  0854               	movf	??___flmul+1,w
  8233  054C  1103               	clrz
  8234  054D  1803               	skipnc
  8235  054E  3E01               	addlw	1
  8236  054F  1D03               	btfss	3,2
  8237  0550  07E0               	addwf	___flmul@prod+1,f
  8238  0551  0855               	movf	??___flmul+2,w
  8239  0552  1103               	clrz
  8240  0553  1803               	skipnc
  8241  0554  3E01               	addlw	1
  8242  0555  1D03               	btfss	3,2
  8243  0556  07E1               	addwf	___flmul@prod+2,f
  8244  0557  0856               	movf	??___flmul+3,w
  8245  0558  1103               	clrz
  8246  0559  1803               	skipnc
  8247  055A  3E01               	addlw	1
  8248  055B  1D03               	btfss	3,2
  8249  055C  07E2               	addwf	___flmul@prod+3,f
  8250  055D  084D               	movf	___flmul@b+2,w
  8251  055E  00D3               	movwf	??___flmul
  8252  055F  0853               	movf	??___flmul,w
  8253  0560  00A0               	movwf	__Umul8_16@multiplicand
  8254  0561  0851               	movf	___flmul@a+2,w
  8255  0562  160A  158A  22B1  120A  118A  	fcall	__Umul8_16
  8256  0567  0821               	movf	?__Umul8_16+1,w
  8257  0568  00E4               	movwf	___flmul@temp+1
  8258  0569  0820               	movf	?__Umul8_16,w
  8259  056A  00E3               	movwf	___flmul@temp
  8260  056B  0863               	movf	___flmul@temp,w
  8261  056C  00D3               	movwf	??___flmul
  8262  056D  0864               	movf	___flmul@temp+1,w
  8263  056E  00D4               	movwf	??___flmul+1
  8264  056F  01D5               	clrf	??___flmul+2
  8265  0570  01D6               	clrf	??___flmul+3
  8266  0571  3008               	movlw	8
  8267  0572                     u3855:
  8268  0572  1003               	clrc
  8269  0573  0DD3               	rlf	??___flmul,f
  8270  0574  0DD4               	rlf	??___flmul+1,f
  8271  0575  0DD5               	rlf	??___flmul+2,f
  8272  0576  0DD6               	rlf	??___flmul+3,f
  8273  0577  3EFF               	addlw	-1
  8274  0578  1D03               	skipz
  8275  0579  2D72               	goto	u3855
  8276  057A  0853               	movf	??___flmul,w
  8277  057B  07DF               	addwf	___flmul@prod,f
  8278  057C  0854               	movf	??___flmul+1,w
  8279  057D  1103               	clrz
  8280  057E  1803               	skipnc
  8281  057F  3E01               	addlw	1
  8282  0580  1D03               	btfss	3,2
  8283  0581  07E0               	addwf	___flmul@prod+1,f
  8284  0582  0855               	movf	??___flmul+2,w
  8285  0583  1103               	clrz
  8286  0584  1803               	skipnc
  8287  0585  3E01               	addlw	1
  8288  0586  1D03               	btfss	3,2
  8289  0587  07E1               	addwf	___flmul@prod+2,f
  8290  0588  0856               	movf	??___flmul+3,w
  8291  0589  1103               	clrz
  8292  058A  1803               	skipnc
  8293  058B  3E01               	addlw	1
  8294  058C  1D03               	btfss	3,2
  8295  058D  07E2               	addwf	___flmul@prod+3,f
  8296  058E  085D               	movf	___flmul@grs+3,w
  8297  058F  00D3               	movwf	??___flmul
  8298  0590  01D4               	clrf	??___flmul+1
  8299  0591  01D5               	clrf	??___flmul+2
  8300  0592  01D6               	clrf	??___flmul+3
  8301  0593  0853               	movf	??___flmul,w
  8302  0594  07DF               	addwf	___flmul@prod,f
  8303  0595  0854               	movf	??___flmul+1,w
  8304  0596  1103               	clrz
  8305  0597  1803               	skipnc
  8306  0598  3E01               	addlw	1
  8307  0599  1D03               	btfss	3,2
  8308  059A  07E0               	addwf	___flmul@prod+1,f
  8309  059B  0855               	movf	??___flmul+2,w
  8310  059C  1103               	clrz
  8311  059D  1803               	skipnc
  8312  059E  3E01               	addlw	1
  8313  059F  1D03               	btfss	3,2
  8314  05A0  07E1               	addwf	___flmul@prod+2,f
  8315  05A1  0856               	movf	??___flmul+3,w
  8316  05A2  1103               	clrz
  8317  05A3  1803               	skipnc
  8318  05A4  3E01               	addlw	1
  8319  05A5  1D03               	btfss	3,2
  8320  05A6  07E2               	addwf	___flmul@prod+3,f
  8321  05A7  3008               	movlw	8
  8322  05A8  00D3               	movwf	??___flmul
  8323  05A9                     u3885:
  8324  05A9  1003               	clrc
  8325  05AA  0DDA               	rlf	___flmul@grs,f
  8326  05AB  0DDB               	rlf	___flmul@grs+1,f
  8327  05AC  0DDC               	rlf	___flmul@grs+2,f
  8328  05AD  0DDD               	rlf	___flmul@grs+3,f
  8329  05AE  0BD3               	decfsz	??___flmul,f
  8330  05AF  2DA9               	goto	u3885
  8331  05B0  085E               	movf	___flmul@bexp,w
  8332  05B1  0759               	addwf	___flmul@aexp,w
  8333  05B2  00D3               	movwf	??___flmul
  8334  05B3  01D4               	clrf	??___flmul+1
  8335  05B4  0DD4               	rlf	??___flmul+1,f
  8336  05B5  0853               	movf	??___flmul,w
  8337  05B6  3E82               	addlw	130
  8338  05B7  00E3               	movwf	___flmul@temp
  8339  05B8  0854               	movf	??___flmul+1,w
  8340  05B9  1803               	skipnc
  8341  05BA  3E01               	addlw	1
  8342  05BB  3EFF               	addlw	255
  8343  05BC  00E4               	movwf	___flmul@temp+1
  8344  05BD                     l4281:
  8345  05BD  1BE1               	btfsc	___flmul@prod+2,7
  8346  05BE  2DDA               	goto	l4283
  8347  05BF  3001               	movlw	1
  8348  05C0  00D3               	movwf	??___flmul
  8349  05C1                     u3895:
  8350  05C1  1003               	clrc
  8351  05C2  0DDF               	rlf	___flmul@prod,f
  8352  05C3  0DE0               	rlf	___flmul@prod+1,f
  8353  05C4  0DE1               	rlf	___flmul@prod+2,f
  8354  05C5  0DE2               	rlf	___flmul@prod+3,f
  8355  05C6  0BD3               	decfsz	??___flmul,f
  8356  05C7  2DC1               	goto	u3895
  8357  05C8  1BDD               	btfsc	___flmul@grs+3,7
  8358  05C9  145F               	bsf	___flmul@prod,0
  8359  05CA  3001               	movlw	1
  8360  05CB  00D3               	movwf	??___flmul
  8361  05CC                     u3915:
  8362  05CC  1003               	clrc
  8363  05CD  0DDA               	rlf	___flmul@grs,f
  8364  05CE  0DDB               	rlf	___flmul@grs+1,f
  8365  05CF  0DDC               	rlf	___flmul@grs+2,f
  8366  05D0  0DDD               	rlf	___flmul@grs+3,f
  8367  05D1  0BD3               	decfsz	??___flmul,f
  8368  05D2  2DCC               	goto	u3915
  8369  05D3  30FF               	movlw	255
  8370  05D4  07E3               	addwf	___flmul@temp,f
  8371  05D5  1803               	skipnc
  8372  05D6  0AE4               	incf	___flmul@temp+1,f
  8373  05D7  30FF               	movlw	255
  8374  05D8  07E4               	addwf	___flmul@temp+1,f
  8375  05D9  2DBD               	goto	l4281
  8376  05DA                     l4283:
  8377  05DA  01D9               	clrf	___flmul@aexp
  8378  05DB  1FDD               	btfss	___flmul@grs+3,7
  8379  05DC  2DF3               	goto	l4293
  8380  05DD  30FF               	movlw	255
  8381  05DE  055A               	andwf	___flmul@grs,w
  8382  05DF  00D3               	movwf	??___flmul
  8383  05E0  30FF               	movlw	255
  8384  05E1  055B               	andwf	___flmul@grs+1,w
  8385  05E2  00D4               	movwf	??___flmul+1
  8386  05E3  30FF               	movlw	255
  8387  05E4  055C               	andwf	___flmul@grs+2,w
  8388  05E5  00D5               	movwf	??___flmul+2
  8389  05E6  307F               	movlw	127
  8390  05E7  055D               	andwf	___flmul@grs+3,w
  8391  05E8  00D6               	movwf	??___flmul+3
  8392  05E9  0856               	movf	??___flmul+3,w
  8393  05EA  0455               	iorwf	??___flmul+2,w
  8394  05EB  0454               	iorwf	??___flmul+1,w
  8395  05EC  0453               	iorwf	??___flmul,w
  8396  05ED  1903               	skipnz
  8397  05EE  185F               	btfsc	___flmul@prod,0
  8398  05EF  2DF1               	goto	l4289
  8399  05F0  2DF3               	goto	l4293
  8400  05F1                     l4289:
  8401  05F1  01D9               	clrf	___flmul@aexp
  8402  05F2  0AD9               	incf	___flmul@aexp,f
  8403  05F3                     l4293:
  8404  05F3  0859               	movf	___flmul@aexp,w
  8405  05F4  1903               	btfsc	3,2
  8406  05F5  2E25               	goto	l4303
  8407  05F6  3001               	movlw	1
  8408  05F7  07DF               	addwf	___flmul@prod,f
  8409  05F8  3000               	movlw	0
  8410  05F9  1803               	skipnc
  8411  05FA  3001               	movlw	1
  8412  05FB  07E0               	addwf	___flmul@prod+1,f
  8413  05FC  3000               	movlw	0
  8414  05FD  1803               	skipnc
  8415  05FE  3001               	movlw	1
  8416  05FF  07E1               	addwf	___flmul@prod+2,f
  8417  0600  3000               	movlw	0
  8418  0601  1803               	skipnc
  8419  0602  3001               	movlw	1
  8420  0603  07E2               	addwf	___flmul@prod+3,f
  8421  0604  1C62               	btfss	___flmul@prod+3,0
  8422  0605  2E25               	goto	l4303
  8423  0606  085F               	movf	___flmul@prod,w
  8424  0607  00D3               	movwf	??___flmul
  8425  0608  0860               	movf	___flmul@prod+1,w
  8426  0609  00D4               	movwf	??___flmul+1
  8427  060A  0861               	movf	___flmul@prod+2,w
  8428  060B  00D5               	movwf	??___flmul+2
  8429  060C  0862               	movf	___flmul@prod+3,w
  8430  060D  00D6               	movwf	??___flmul+3
  8431  060E  3001               	movlw	1
  8432  060F  00D7               	movwf	??___flmul+4
  8433  0610                     u3985:
  8434  0610  0D56               	rlf	??___flmul+3,w
  8435  0611  0CD6               	rrf	??___flmul+3,f
  8436  0612  0CD5               	rrf	??___flmul+2,f
  8437  0613  0CD4               	rrf	??___flmul+1,f
  8438  0614  0CD3               	rrf	??___flmul,f
  8439  0615  0BD7               	decfsz	??___flmul+4,f
  8440  0616  2E10               	goto	u3985
  8441  0617  0856               	movf	??___flmul+3,w
  8442  0618  00E2               	movwf	___flmul@prod+3
  8443  0619  0855               	movf	??___flmul+2,w
  8444  061A  00E1               	movwf	___flmul@prod+2
  8445  061B  0854               	movf	??___flmul+1,w
  8446  061C  00E0               	movwf	___flmul@prod+1
  8447  061D  0853               	movf	??___flmul,w
  8448  061E  00DF               	movwf	___flmul@prod
  8449  061F  3001               	movlw	1
  8450  0620  07E3               	addwf	___flmul@temp,f
  8451  0621  1803               	skipnc
  8452  0622  0AE4               	incf	___flmul@temp+1,f
  8453  0623  3000               	movlw	0
  8454  0624  07E4               	addwf	___flmul@temp+1,f
  8455  0625                     l4303:
  8456  0625  0864               	movf	___flmul@temp+1,w
  8457  0626  3A80               	xorlw	128
  8458  0627  00FF               	movwf	127
  8459  0628  3080               	movlw	128
  8460  0629  027F               	subwf	127,w
  8461  062A  1D03               	skipz
  8462  062B  2E2E               	goto	u3995
  8463  062C  30FF               	movlw	255
  8464  062D  0263               	subwf	___flmul@temp,w
  8465  062E                     u3995:
  8466  062E  1C03               	skipc
  8467  062F  2E3B               	goto	l4307
  8468  0630  307F               	movlw	127
  8469  0631  1283               	bcf	3,5	;RP0=0, select bank0
  8470  0632  1303               	bcf	3,6	;RP1=0, select bank0
  8471  0633  00E2               	movwf	___flmul@prod+3
  8472  0634  3080               	movlw	128
  8473  0635  00E1               	movwf	___flmul@prod+2
  8474  0636  3000               	movlw	0
  8475  0637  00E0               	movwf	___flmul@prod+1
  8476  0638  3000               	movlw	0
  8477  0639  00DF               	movwf	___flmul@prod
  8478  063A  2E6B               	goto	l1398
  8479  063B                     l4307:
  8480  063B  1283               	bcf	3,5	;RP0=0, select bank0
  8481  063C  1303               	bcf	3,6	;RP1=0, select bank0
  8482  063D  0864               	movf	___flmul@temp+1,w
  8483  063E  3A80               	xorlw	128
  8484  063F  00FF               	movwf	127
  8485  0640  3080               	movlw	128
  8486  0641  027F               	subwf	127,w
  8487  0642  1D03               	skipz
  8488  0643  2E46               	goto	u4005
  8489  0644  3001               	movlw	1
  8490  0645  0263               	subwf	___flmul@temp,w
  8491  0646                     u4005:
  8492  0646  1803               	skipnc
  8493  0647  2E54               	goto	l4313
  8494  0648  3000               	movlw	0
  8495  0649  1283               	bcf	3,5	;RP0=0, select bank0
  8496  064A  1303               	bcf	3,6	;RP1=0, select bank0
  8497  064B  00E2               	movwf	___flmul@prod+3
  8498  064C  3000               	movlw	0
  8499  064D  00E1               	movwf	___flmul@prod+2
  8500  064E  3000               	movlw	0
  8501  064F  00E0               	movwf	___flmul@prod+1
  8502  0650  3000               	movlw	0
  8503  0651  00DF               	movwf	___flmul@prod
  8504  0652  01D8               	clrf	___flmul@sign
  8505  0653  2E6B               	goto	l1398
  8506  0654                     l4313:
  8507  0654  1283               	bcf	3,5	;RP0=0, select bank0
  8508  0655  1303               	bcf	3,6	;RP1=0, select bank0
  8509  0656  0863               	movf	___flmul@temp,w
  8510  0657  00D3               	movwf	??___flmul
  8511  0658  0853               	movf	??___flmul,w
  8512  0659  00DE               	movwf	___flmul@bexp
  8513  065A  30FF               	movlw	255
  8514  065B  05DF               	andwf	___flmul@prod,f
  8515  065C  30FF               	movlw	255
  8516  065D  05E0               	andwf	___flmul@prod+1,f
  8517  065E  307F               	movlw	127
  8518  065F  05E1               	andwf	___flmul@prod+2,f
  8519  0660  3000               	movlw	0
  8520  0661  05E2               	andwf	___flmul@prod+3,f
  8521  0662  185E               	btfsc	___flmul@bexp,0
  8522  0663  17E1               	bsf	___flmul@prod+2,7
  8523  0664  085E               	movf	___flmul@bexp,w
  8524  0665  00D3               	movwf	??___flmul
  8525  0666  1003               	clrc
  8526  0667  0C53               	rrf	??___flmul,w
  8527  0668  00D4               	movwf	??___flmul+1
  8528  0669  0854               	movf	??___flmul+1,w
  8529  066A  00E2               	movwf	___flmul@prod+3
  8530  066B                     l1398:
  8531  066B  0858               	movf	___flmul@sign,w
  8532  066C  00D3               	movwf	??___flmul
  8533  066D  0853               	movf	??___flmul,w
  8534  066E  04E2               	iorwf	___flmul@prod+3,f
  8535  066F  0862               	movf	___flmul@prod+3,w
  8536  0670  00CE               	movwf	?___flmul+3
  8537  0671  0861               	movf	___flmul@prod+2,w
  8538  0672  00CD               	movwf	?___flmul+2
  8539  0673  0860               	movf	___flmul@prod+1,w
  8540  0674  00CC               	movwf	?___flmul+1
  8541  0675  085F               	movf	___flmul@prod,w
  8542  0676  00CB               	movwf	?___flmul
  8543  0677  0008               	return
  8544  0678                     __end_of___flmul:
  8545                           
  8546                           	psect	text23
  8547  1AB1                     __ptext23:	
  8548 ;; *************** function __Umul8_16 *****************
  8549 ;; Defined at:
  8550 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  8551 ;; Parameters:    Size  Location     Type
  8552 ;;  multiplier      1    wreg     unsigned char 
  8553 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8554 ;; Auto vars:     Size  Location     Type
  8555 ;;  multiplier      1    8[BANK0 ] unsigned char 
  8556 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  8557 ;;  product         2    4[BANK0 ] unsigned int 
  8558 ;; Return value:  Size  Location     Type
  8559 ;;                  2    0[BANK0 ] unsigned int 
  8560 ;; Registers used:
  8561 ;;		wreg, status,2, status,0
  8562 ;; Tracked objects:
  8563 ;;		On entry : 300/0
  8564 ;;		On exit  : 300/0
  8565 ;;		Unchanged: 0/0
  8566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8567 ;;      Params:         0       2       0       0       0
  8568 ;;      Locals:         0       5       0       0       0
  8569 ;;      Temps:          0       2       0       0       0
  8570 ;;      Totals:         0       9       0       0       0
  8571 ;;Total ram usage:        9 bytes
  8572 ;; Hardware stack levels used: 1
  8573 ;; Hardware stack levels required when called: 1
  8574 ;; This function calls:
  8575 ;;		Nothing
  8576 ;; This function is called by:
  8577 ;;		___flmul
  8578 ;; This function uses a non-reentrant model
  8579 ;;
  8580                           
  8581                           
  8582                           ;psect for function __Umul8_16
  8583  1AB1                     __Umul8_16:
  8584                           
  8585                           ;incstack = 0
  8586                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8587                           ;__Umul8_16@multiplier stored from wreg
  8588  1AB1  00A8               	movwf	__Umul8_16@multiplier
  8589  1AB2  01A4               	clrf	__Umul8_16@product
  8590  1AB3  01A5               	clrf	__Umul8_16@product+1
  8591  1AB4  0820               	movf	__Umul8_16@multiplicand,w
  8592  1AB5  00A2               	movwf	??__Umul8_16
  8593  1AB6  01A3               	clrf	??__Umul8_16+1
  8594  1AB7  0822               	movf	??__Umul8_16,w
  8595  1AB8  00A6               	movwf	__Umul8_16@word_mpld
  8596  1AB9  0823               	movf	??__Umul8_16+1,w
  8597  1ABA  00A7               	movwf	__Umul8_16@word_mpld+1
  8598  1ABB                     l3719:
  8599  1ABB  1C28               	btfss	__Umul8_16@multiplier,0
  8600  1ABC  2AC3               	goto	l1405
  8601  1ABD  0826               	movf	__Umul8_16@word_mpld,w
  8602  1ABE  07A4               	addwf	__Umul8_16@product,f
  8603  1ABF  1803               	skipnc
  8604  1AC0  0AA5               	incf	__Umul8_16@product+1,f
  8605  1AC1  0827               	movf	__Umul8_16@word_mpld+1,w
  8606  1AC2  07A5               	addwf	__Umul8_16@product+1,f
  8607  1AC3                     l1405:
  8608  1AC3  3001               	movlw	1
  8609  1AC4                     u2855:
  8610  1AC4  1003               	clrc
  8611  1AC5  0DA6               	rlf	__Umul8_16@word_mpld,f
  8612  1AC6  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  8613  1AC7  3EFF               	addlw	-1
  8614  1AC8  1D03               	skipz
  8615  1AC9  2AC4               	goto	u2855
  8616  1ACA  1003               	clrc
  8617  1ACB  0CA8               	rrf	__Umul8_16@multiplier,f
  8618  1ACC  0828               	movf	__Umul8_16@multiplier,w
  8619  1ACD  1D03               	btfss	3,2
  8620  1ACE  2ABB               	goto	l3719
  8621  1ACF  0825               	movf	__Umul8_16@product+1,w
  8622  1AD0  00A1               	movwf	?__Umul8_16+1
  8623  1AD1  0824               	movf	__Umul8_16@product,w
  8624  1AD2  00A0               	movwf	?__Umul8_16
  8625  1AD3  0008               	return
  8626  1AD4                     __end_of__Umul8_16:
  8627                           
  8628                           	psect	text24
  8629  1992                     __ptext24:	
  8630 ;; *************** function _PROCULUS_VP_Write_String *****************
  8631 ;; Defined at:
  8632 ;;		line 205 in file "proculus.c"
  8633 ;; Parameters:    Size  Location     Type
  8634 ;;  vp              2   12[BANK1 ] unsigned int 
  8635 ;;  text            1   14[BANK1 ] PTR unsigned char 
  8636 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  8637 ;; Auto vars:     Size  Location     Type
  8638 ;;		None
  8639 ;; Return value:  Size  Location     Type
  8640 ;;                  1    wreg      void 
  8641 ;; Registers used:
  8642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8643 ;; Tracked objects:
  8644 ;;		On entry : 300/100
  8645 ;;		On exit  : 300/0
  8646 ;;		Unchanged: 0/0
  8647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8648 ;;      Params:         0       0       3       0       0
  8649 ;;      Locals:         0       0       0       0       0
  8650 ;;      Temps:          0       0       1       0       0
  8651 ;;      Totals:         0       0       4       0       0
  8652 ;;Total ram usage:        4 bytes
  8653 ;; Hardware stack levels used: 1
  8654 ;; Hardware stack levels required when called: 4
  8655 ;; This function calls:
  8656 ;;		_PROCULUS_VP_Write
  8657 ;;		_strlen
  8658 ;; This function is called by:
  8659 ;;		_Decodify_Command
  8660 ;; This function uses a non-reentrant model
  8661 ;;
  8662                           
  8663                           
  8664                           ;psect for function _PROCULUS_VP_Write_String
  8665  1992                     _PROCULUS_VP_Write_String:
  8666                           
  8667                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  8668                           
  8669                           ;incstack = 0
  8670                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8671  1992  082D               	movf	(PROCULUS_VP_Write_String@vp+1)^(0+128),w
  8672  1993  00A5               	movwf	(PROCULUS_VP_Write@vp+1)^(0+128)
  8673  1994  082C               	movf	PROCULUS_VP_Write_String@vp^(0+128),w
  8674  1995  00A4               	movwf	PROCULUS_VP_Write@vp^(0+128)
  8675  1996  082E               	movf	PROCULUS_VP_Write_String@text^(0+128),w
  8676  1997  00A6               	movwf	PROCULUS_VP_Write@vetor^(0+128)
  8677  1998  3001               	movlw	1
  8678  1999  00A7               	movwf	(PROCULUS_VP_Write@vetor+1)^(0+128)
  8679  199A  082E               	movf	PROCULUS_VP_Write_String@text^(0+128),w
  8680  199B  160A  158A  21C3  160A  158A  	fcall	_strlen
  8681  19A0  0820               	movf	?_strlen,w
  8682  19A1  3E01               	addlw	1
  8683  19A2  1683               	bsf	3,5	;RP0=1, select bank1
  8684  19A3  00AF               	movwf	??_PROCULUS_VP_Write_String^(0+128)
  8685  19A4  082F               	movf	??_PROCULUS_VP_Write_String^(0+128),w
  8686  19A5  00A8               	movwf	PROCULUS_VP_Write@size^(0+128)
  8687  19A6  160A  158A  2636   	fcall	_PROCULUS_VP_Write
  8688  19A9  0008               	return
  8689  19AA                     __end_of_PROCULUS_VP_Write_String:
  8690                           
  8691                           	psect	text25
  8692  19C3                     __ptext25:	
  8693 ;; *************** function _strlen *****************
  8694 ;; Defined at:
  8695 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
  8696 ;; Parameters:    Size  Location     Type
  8697 ;;  s               1    wreg     PTR const unsigned char 
  8698 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8699 ;; Auto vars:     Size  Location     Type
  8700 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  8701 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8702 ;;  cp              1    3[BANK0 ] PTR const unsigned char 
  8703 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8704 ;; Return value:  Size  Location     Type
  8705 ;;                  2    0[BANK0 ] unsigned int 
  8706 ;; Registers used:
  8707 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8708 ;; Tracked objects:
  8709 ;;		On entry : 0/300
  8710 ;;		On exit  : B00/800
  8711 ;;		Unchanged: 0/0
  8712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8713 ;;      Params:         0       2       0       0       0
  8714 ;;      Locals:         0       2       0       0       0
  8715 ;;      Temps:          0       1       0       0       0
  8716 ;;      Totals:         0       5       0       0       0
  8717 ;;Total ram usage:        5 bytes
  8718 ;; Hardware stack levels used: 1
  8719 ;; Hardware stack levels required when called: 1
  8720 ;; This function calls:
  8721 ;;		Nothing
  8722 ;; This function is called by:
  8723 ;;		_Decodify_Command
  8724 ;;		_PROCULUS_VP_Write_String
  8725 ;; This function uses a non-reentrant model
  8726 ;;
  8727                           
  8728                           
  8729                           ;psect for function _strlen
  8730  19C3                     _strlen:
  8731                           
  8732                           ;incstack = 0
  8733                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  8734                           ;strlen@s stored from wreg
  8735  19C3  1283               	bcf	3,5	;RP0=0, select bank0
  8736  19C4  1303               	bcf	3,6	;RP1=0, select bank0
  8737  19C5  00A4               	movwf	strlen@s
  8738  19C6  0824               	movf	strlen@s,w
  8739  19C7  00A2               	movwf	??_strlen
  8740  19C8  0822               	movf	??_strlen,w
  8741  19C9  00A3               	movwf	strlen@cp
  8742  19CA                     l3879:
  8743  19CA  0823               	movf	strlen@cp,w
  8744  19CB  0084               	movwf	4
  8745  19CC  1783               	bsf	3,7	;select IRP bank2
  8746  19CD  0800               	movf	0,w
  8747  19CE  1903               	btfsc	3,2
  8748  19CF  29D5               	goto	l3881
  8749  19D0  3001               	movlw	1
  8750  19D1  00A2               	movwf	??_strlen
  8751  19D2  0822               	movf	??_strlen,w
  8752  19D3  07A3               	addwf	strlen@cp,f
  8753  19D4  29CA               	goto	l3879
  8754  19D5                     l3881:
  8755  19D5  0824               	movf	strlen@s,w
  8756  19D6  0223               	subwf	strlen@cp,w
  8757  19D7  00A0               	movwf	?_strlen
  8758  19D8  01A1               	clrf	?_strlen+1
  8759  19D9  1BA0               	btfsc	?_strlen,7
  8760  19DA  03A1               	decf	?_strlen+1,f
  8761  19DB  0008               	return
  8762  19DC                     __end_of_strlen:
  8763                           
  8764                           	psect	text26
  8765  1E36                     __ptext26:	
  8766 ;; *************** function _PROCULUS_VP_Write *****************
  8767 ;; Defined at:
  8768 ;;		line 40 in file "proculus.c"
  8769 ;; Parameters:    Size  Location     Type
  8770 ;;  vp              2    4[BANK1 ] unsigned int 
  8771 ;;  vetor           2    6[BANK1 ] PTR unsigned char 
  8772 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  8773 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(52), usart_protocol(58), 
  8774 ;;  size            1    8[BANK1 ] unsigned char 
  8775 ;; Auto vars:     Size  Location     Type
  8776 ;;  i               1   11[BANK1 ] unsigned char 
  8777 ;; Return value:  Size  Location     Type
  8778 ;;                  1    wreg      void 
  8779 ;; Registers used:
  8780 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8781 ;; Tracked objects:
  8782 ;;		On entry : B00/900
  8783 ;;		On exit  : 300/0
  8784 ;;		Unchanged: 0/0
  8785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8786 ;;      Params:         0       0       5       0       0
  8787 ;;      Locals:         0       0       1       0       0
  8788 ;;      Temps:          0       0       2       0       0
  8789 ;;      Totals:         0       0       8       0       0
  8790 ;;Total ram usage:        8 bytes
  8791 ;; Hardware stack levels used: 1
  8792 ;; Hardware stack levels required when called: 3
  8793 ;; This function calls:
  8794 ;;		_PROCULUS_Delay
  8795 ;;		_USART_put_int
  8796 ;;		_USART_putc
  8797 ;; This function is called by:
  8798 ;;		_PROCULUS_VP_Write_String
  8799 ;; This function uses a non-reentrant model
  8800 ;;
  8801                           
  8802                           
  8803                           ;psect for function _PROCULUS_VP_Write
  8804  1E36                     _PROCULUS_VP_Write:
  8805                           
  8806                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  8807                           
  8808                           ;incstack = 0
  8809                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8810  1E36  30A5               	movlw	165
  8811  1E37  00A0               	movwf	USART_put_int@value^(0+128)
  8812  1E38  305A               	movlw	90
  8813  1E39  00A1               	movwf	(USART_put_int@value^(0+128)+1)
  8814  1E3A  160A  158A  2152  160A  158A  	fcall	_USART_put_int
  8815                           
  8816                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  8817  1E3F  0828               	movf	PROCULUS_VP_Write@size^(0+128),w
  8818  1E40  3E03               	addlw	3
  8819  1E41  160A  158A  2131  160A  158A  	fcall	_USART_putc
  8820                           
  8821                           ;proculus.c: 43:      USART_putc(0x82);
  8822  1E46  3082               	movlw	130
  8823  1E47  160A  158A  2131  160A  158A  	fcall	_USART_putc
  8824                           
  8825                           ;proculus.c: 44:      USART_put_int(vp);
  8826  1E4C  0825               	movf	(PROCULUS_VP_Write@vp+1)^(0+128),w
  8827  1E4D  00A1               	movwf	(USART_put_int@value+1)^(0+128)
  8828  1E4E  0824               	movf	PROCULUS_VP_Write@vp^(0+128),w
  8829  1E4F  00A0               	movwf	USART_put_int@value^(0+128)
  8830  1E50  160A  158A  2152  160A  158A  	fcall	_USART_put_int
  8831                           
  8832                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  8833  1E55  01AB               	clrf	PROCULUS_VP_Write@i^(0+128)
  8834  1E56                     l5657:
  8835  1E56  0828               	movf	PROCULUS_VP_Write@size^(0+128),w
  8836  1E57  022B               	subwf	PROCULUS_VP_Write@i^(0+128),w
  8837  1E58  1803               	btfsc	3,0
  8838  1E59  2E71               	goto	l5659
  8839                           
  8840                           ;proculus.c: 46:          USART_putc(vetor[i]);
  8841  1E5A  082B               	movf	PROCULUS_VP_Write@i^(0+128),w
  8842  1E5B  0726               	addwf	PROCULUS_VP_Write@vetor^(0+128),w
  8843  1E5C  00A9               	movwf	??_PROCULUS_VP_Write^(0+128)
  8844  1E5D  0827               	movf	(PROCULUS_VP_Write@vetor+1)^(0+128),w
  8845  1E5E  1803               	skipnc
  8846  1E5F  3E01               	addlw	1
  8847  1E60  00AA               	movwf	(??_PROCULUS_VP_Write^(0+128)+1)
  8848  1E61  0829               	movf	??_PROCULUS_VP_Write^(0+128),w
  8849  1E62  0084               	movwf	4
  8850  1E63  1783               	bsf	3,7
  8851  1E64  1C2A               	btfss	(??_PROCULUS_VP_Write+1)^(0+128),0
  8852  1E65  1383               	bcf	3,7
  8853  1E66  0800               	movf	0,w
  8854  1E67  160A  158A  2131  160A  158A  	fcall	_USART_putc
  8855  1E6C  3001               	movlw	1
  8856  1E6D  00A9               	movwf	??_PROCULUS_VP_Write^(0+128)
  8857  1E6E  0829               	movf	??_PROCULUS_VP_Write^(0+128),w
  8858  1E6F  07AB               	addwf	PROCULUS_VP_Write@i^(0+128),f
  8859  1E70  2E56               	goto	l5657
  8860  1E71                     l5659:
  8861                           
  8862                           ;proculus.c: 48:      PROCULUS_Delay(1);
  8863  1E71  3001               	movlw	1
  8864  1E72  1283               	bcf	3,5	;RP0=0, select bank0
  8865  1E73  00A0               	movwf	PROCULUS_Delay@tempo_ms
  8866  1E74  3000               	movlw	0
  8867  1E75  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  8868  1E76  160A  158A  21F5   	fcall	_PROCULUS_Delay
  8869  1E79  0008               	return
  8870  1E7A                     __end_of_PROCULUS_VP_Write:
  8871                           
  8872                           	psect	text27
  8873  1967                     __ptext27:	
  8874 ;; *************** function _PROCULUS_Show_Screen *****************
  8875 ;; Defined at:
  8876 ;;		line 243 in file "proculus.c"
  8877 ;; Parameters:    Size  Location     Type
  8878 ;;  screen          2    8[BANK1 ] unsigned int 
  8879 ;; Auto vars:     Size  Location     Type
  8880 ;;  vetor           3   11[BANK1 ] unsigned char [3]
  8881 ;; Return value:  Size  Location     Type
  8882 ;;                  1    wreg      void 
  8883 ;; Registers used:
  8884 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8885 ;; Tracked objects:
  8886 ;;		On entry : 300/100
  8887 ;;		On exit  : 300/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8890 ;;      Params:         0       0       2       0       0
  8891 ;;      Locals:         0       0       3       0       0
  8892 ;;      Temps:          0       0       1       0       0
  8893 ;;      Totals:         0       0       6       0       0
  8894 ;;Total ram usage:        6 bytes
  8895 ;; Hardware stack levels used: 1
  8896 ;; Hardware stack levels required when called: 4
  8897 ;; This function calls:
  8898 ;;		_PROCULUS_Control_Register_Write
  8899 ;; This function is called by:
  8900 ;;		_Decodify_Command
  8901 ;; This function uses a non-reentrant model
  8902 ;;
  8903                           
  8904                           
  8905                           ;psect for function _PROCULUS_Show_Screen
  8906  1967                     _PROCULUS_Show_Screen:
  8907                           
  8908                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  8909                           
  8910                           ;incstack = 0
  8911                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8912  1967  3003               	movlw	3
  8913  1968  00AA               	movwf	??_PROCULUS_Show_Screen^(0+128)
  8914  1969  082A               	movf	??_PROCULUS_Show_Screen^(0+128),w
  8915  196A  00AB               	movwf	PROCULUS_Show_Screen@vetor^(0+128)
  8916                           
  8917                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  8918  196B  0829               	movf	(PROCULUS_Show_Screen@screen^(0+128)+1),w
  8919  196C  00AA               	movwf	??_PROCULUS_Show_Screen^(0+128)
  8920  196D  082A               	movf	??_PROCULUS_Show_Screen^(0+128),w
  8921  196E  00AC               	movwf	(PROCULUS_Show_Screen@vetor^(0+128)+1)
  8922                           
  8923                           ;proculus.c: 247:      vetor[2] = (char) screen;
  8924  196F  0828               	movf	PROCULUS_Show_Screen@screen^(0+128),w
  8925  1970  00AA               	movwf	??_PROCULUS_Show_Screen^(0+128)
  8926  1971  082A               	movf	??_PROCULUS_Show_Screen^(0+128),w
  8927  1972  00AD               	movwf	(PROCULUS_Show_Screen@vetor^(0+128)+2)
  8928                           
  8929                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  8930  1973  3003               	movlw	3
  8931  1974  00AA               	movwf	??_PROCULUS_Show_Screen^(0+128)
  8932  1975  082A               	movf	??_PROCULUS_Show_Screen^(0+128),w
  8933  1976  00A4               	movwf	PROCULUS_Control_Register_Write@size^(0+128)
  8934  1977  30AB               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  8935  1978  160A  158A  2497   	fcall	_PROCULUS_Control_Register_Write
  8936  197B  0008               	return
  8937  197C                     __end_of_PROCULUS_Show_Screen:
  8938                           
  8939                           	psect	text28
  8940  1B77                     __ptext28:	
  8941 ;; *************** function _PROCULUS_Buzzer *****************
  8942 ;; Defined at:
  8943 ;;		line 223 in file "proculus.c"
  8944 ;; Parameters:    Size  Location     Type
  8945 ;;  time_ms_x_10    2    8[BANK1 ] unsigned int 
  8946 ;; Auto vars:     Size  Location     Type
  8947 ;;  vetor           2   11[BANK1 ] unsigned char [2]
  8948 ;; Return value:  Size  Location     Type
  8949 ;;                  1    wreg      void 
  8950 ;; Registers used:
  8951 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8952 ;; Tracked objects:
  8953 ;;		On entry : 300/100
  8954 ;;		On exit  : 300/0
  8955 ;;		Unchanged: 0/0
  8956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8957 ;;      Params:         0       0       2       0       0
  8958 ;;      Locals:         0       0       2       0       0
  8959 ;;      Temps:          0       0       1       0       0
  8960 ;;      Totals:         0       0       5       0       0
  8961 ;;Total ram usage:        5 bytes
  8962 ;; Hardware stack levels used: 1
  8963 ;; Hardware stack levels required when called: 4
  8964 ;; This function calls:
  8965 ;;		_PROCULUS_Control_Register_Write
  8966 ;;		___lwdiv
  8967 ;; This function is called by:
  8968 ;;		_Decodify_Command
  8969 ;; This function uses a non-reentrant model
  8970 ;;
  8971                           
  8972                           
  8973                           ;psect for function _PROCULUS_Buzzer
  8974  1B77                     _PROCULUS_Buzzer:
  8975                           
  8976                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
  8977                           
  8978                           ;incstack = 0
  8979                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8980  1B77  300A               	movlw	10
  8981  1B78  1283               	bcf	3,5	;RP0=0, select bank0
  8982  1B79  00A0               	movwf	___lwdiv@divisor
  8983  1B7A  3000               	movlw	0
  8984  1B7B  00A1               	movwf	___lwdiv@divisor+1
  8985  1B7C  1683               	bsf	3,5	;RP0=1, select bank1
  8986  1B7D  0829               	movf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128),w
  8987  1B7E  1283               	bcf	3,5	;RP0=0, select bank0
  8988  1B7F  00A3               	movwf	___lwdiv@dividend+1
  8989  1B80  1683               	bsf	3,5	;RP0=1, select bank1
  8990  1B81  0828               	movf	PROCULUS_Buzzer@time_ms_x_10^(0+128),w
  8991  1B82  1283               	bcf	3,5	;RP0=0, select bank0
  8992  1B83  00A2               	movwf	___lwdiv@dividend
  8993  1B84  160A  158A  2578  160A  158A  	fcall	___lwdiv
  8994  1B89  0821               	movf	?___lwdiv+1,w
  8995  1B8A  1683               	bsf	3,5	;RP0=1, select bank1
  8996  1B8B  00A9               	movwf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128)
  8997  1B8C  1283               	bcf	3,5	;RP0=0, select bank0
  8998  1B8D  0820               	movf	?___lwdiv,w
  8999  1B8E  1683               	bsf	3,5	;RP0=1, select bank1
  9000  1B8F  00A8               	movwf	PROCULUS_Buzzer@time_ms_x_10^(0+128)
  9001                           
  9002                           ;proculus.c: 226:      vetor[0]=0x02;
  9003  1B90  3002               	movlw	2
  9004  1B91  00AA               	movwf	??_PROCULUS_Buzzer^(0+128)
  9005  1B92  082A               	movf	??_PROCULUS_Buzzer^(0+128),w
  9006  1B93  00AB               	movwf	PROCULUS_Buzzer@vetor^(0+128)
  9007                           
  9008                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
  9009  1B94  0828               	movf	PROCULUS_Buzzer@time_ms_x_10^(0+128),w
  9010  1B95  00AA               	movwf	??_PROCULUS_Buzzer^(0+128)
  9011  1B96  082A               	movf	??_PROCULUS_Buzzer^(0+128),w
  9012  1B97  00AC               	movwf	(PROCULUS_Buzzer@vetor^(0+128)+1)
  9013                           
  9014                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
  9015  1B98  3002               	movlw	2
  9016  1B99  00AA               	movwf	??_PROCULUS_Buzzer^(0+128)
  9017  1B9A  082A               	movf	??_PROCULUS_Buzzer^(0+128),w
  9018  1B9B  00A4               	movwf	PROCULUS_Control_Register_Write@size^(0+128)
  9019  1B9C  30AB               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
  9020  1B9D  160A  158A  2497   	fcall	_PROCULUS_Control_Register_Write
  9021  1BA0  0008               	return
  9022  1BA1                     __end_of_PROCULUS_Buzzer:
  9023                           
  9024                           	psect	text29
  9025  1D78                     __ptext29:	
  9026 ;; *************** function ___lwdiv *****************
  9027 ;; Defined at:
  9028 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  9029 ;; Parameters:    Size  Location     Type
  9030 ;;  divisor         2    0[BANK0 ] unsigned int 
  9031 ;;  dividend        2    2[BANK0 ] unsigned int 
  9032 ;; Auto vars:     Size  Location     Type
  9033 ;;  quotient        2    5[BANK0 ] unsigned int 
  9034 ;;  counter         1    7[BANK0 ] unsigned char 
  9035 ;; Return value:  Size  Location     Type
  9036 ;;                  2    0[BANK0 ] unsigned int 
  9037 ;; Registers used:
  9038 ;;		wreg, status,2, status,0
  9039 ;; Tracked objects:
  9040 ;;		On entry : 300/0
  9041 ;;		On exit  : 300/0
  9042 ;;		Unchanged: 0/0
  9043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9044 ;;      Params:         0       4       0       0       0
  9045 ;;      Locals:         0       3       0       0       0
  9046 ;;      Temps:          0       1       0       0       0
  9047 ;;      Totals:         0       8       0       0       0
  9048 ;;Total ram usage:        8 bytes
  9049 ;; Hardware stack levels used: 1
  9050 ;; Hardware stack levels required when called: 1
  9051 ;; This function calls:
  9052 ;;		Nothing
  9053 ;; This function is called by:
  9054 ;;		_ADC_Media_10bits
  9055 ;;		_PROCULUS_Buzzer
  9056 ;; This function uses a non-reentrant model
  9057 ;;
  9058                           
  9059                           
  9060                           ;psect for function ___lwdiv
  9061  1D78                     ___lwdiv:
  9062                           
  9063                           ;incstack = 0
  9064                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9065  1D78  01A5               	clrf	___lwdiv@quotient
  9066  1D79  01A6               	clrf	___lwdiv@quotient+1
  9067  1D7A  0820               	movf	___lwdiv@divisor,w
  9068  1D7B  0421               	iorwf	___lwdiv@divisor+1,w
  9069  1D7C  1903               	btfsc	3,2
  9070  1D7D  2DAF               	goto	l3987
  9071  1D7E  01A7               	clrf	___lwdiv@counter
  9072  1D7F  0AA7               	incf	___lwdiv@counter,f
  9073  1D80                     l3975:
  9074  1D80  1BA1               	btfsc	___lwdiv@divisor+1,7
  9075  1D81  2D8E               	goto	l3977
  9076  1D82  3001               	movlw	1
  9077  1D83                     u3145:
  9078  1D83  1003               	clrc
  9079  1D84  0DA0               	rlf	___lwdiv@divisor,f
  9080  1D85  0DA1               	rlf	___lwdiv@divisor+1,f
  9081  1D86  3EFF               	addlw	-1
  9082  1D87  1D03               	skipz
  9083  1D88  2D83               	goto	u3145
  9084  1D89  3001               	movlw	1
  9085  1D8A  00A4               	movwf	??___lwdiv
  9086  1D8B  0824               	movf	??___lwdiv,w
  9087  1D8C  07A7               	addwf	___lwdiv@counter,f
  9088  1D8D  2D80               	goto	l3975
  9089  1D8E                     l3977:
  9090  1D8E  3001               	movlw	1
  9091  1D8F                     u3165:
  9092  1D8F  1003               	clrc
  9093  1D90  0DA5               	rlf	___lwdiv@quotient,f
  9094  1D91  0DA6               	rlf	___lwdiv@quotient+1,f
  9095  1D92  3EFF               	addlw	-1
  9096  1D93  1D03               	skipz
  9097  1D94  2D8F               	goto	u3165
  9098  1D95  0821               	movf	___lwdiv@divisor+1,w
  9099  1D96  0223               	subwf	___lwdiv@dividend+1,w
  9100  1D97  1D03               	skipz
  9101  1D98  2D9B               	goto	u3175
  9102  1D99  0820               	movf	___lwdiv@divisor,w
  9103  1D9A  0222               	subwf	___lwdiv@dividend,w
  9104  1D9B                     u3175:
  9105  1D9B  1C03               	skipc
  9106  1D9C  2DA4               	goto	l3983
  9107  1D9D  0820               	movf	___lwdiv@divisor,w
  9108  1D9E  02A2               	subwf	___lwdiv@dividend,f
  9109  1D9F  0821               	movf	___lwdiv@divisor+1,w
  9110  1DA0  1C03               	skipc
  9111  1DA1  03A3               	decf	___lwdiv@dividend+1,f
  9112  1DA2  02A3               	subwf	___lwdiv@dividend+1,f
  9113  1DA3  1425               	bsf	___lwdiv@quotient,0
  9114  1DA4                     l3983:
  9115  1DA4  3001               	movlw	1
  9116  1DA5                     u3185:
  9117  1DA5  1003               	clrc
  9118  1DA6  0CA1               	rrf	___lwdiv@divisor+1,f
  9119  1DA7  0CA0               	rrf	___lwdiv@divisor,f
  9120  1DA8  3EFF               	addlw	-1
  9121  1DA9  1D03               	skipz
  9122  1DAA  2DA5               	goto	u3185
  9123  1DAB  3001               	movlw	1
  9124  1DAC  02A7               	subwf	___lwdiv@counter,f
  9125  1DAD  1D03               	btfss	3,2
  9126  1DAE  2D8E               	goto	l3977
  9127  1DAF                     l3987:
  9128  1DAF  0826               	movf	___lwdiv@quotient+1,w
  9129  1DB0  00A1               	movwf	?___lwdiv+1
  9130  1DB1  0825               	movf	___lwdiv@quotient,w
  9131  1DB2  00A0               	movwf	?___lwdiv
  9132  1DB3  0008               	return
  9133  1DB4                     __end_of___lwdiv:
  9134                           
  9135                           	psect	text30
  9136  1C97                     __ptext30:	
  9137 ;; *************** function _PROCULUS_Control_Register_Write *****************
  9138 ;; Defined at:
  9139 ;;		line 13 in file "proculus.c"
  9140 ;; Parameters:    Size  Location     Type
  9141 ;;  vetor           1    wreg     PTR unsigned char 
  9142 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9143 ;;  size            1    4[BANK1 ] unsigned char 
  9144 ;; Auto vars:     Size  Location     Type
  9145 ;;  vetor           1    6[BANK1 ] PTR unsigned char 
  9146 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9147 ;;  i               1    7[BANK1 ] unsigned char 
  9148 ;; Return value:  Size  Location     Type
  9149 ;;                  1    wreg      void 
  9150 ;; Registers used:
  9151 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9152 ;; Tracked objects:
  9153 ;;		On entry : 300/100
  9154 ;;		On exit  : 300/0
  9155 ;;		Unchanged: 0/0
  9156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9157 ;;      Params:         0       0       1       0       0
  9158 ;;      Locals:         0       0       2       0       0
  9159 ;;      Temps:          0       0       1       0       0
  9160 ;;      Totals:         0       0       4       0       0
  9161 ;;Total ram usage:        4 bytes
  9162 ;; Hardware stack levels used: 1
  9163 ;; Hardware stack levels required when called: 3
  9164 ;; This function calls:
  9165 ;;		_PROCULUS_Delay
  9166 ;;		_USART_put_int
  9167 ;;		_USART_putc
  9168 ;; This function is called by:
  9169 ;;		_PROCULUS_Buzzer
  9170 ;;		_PROCULUS_Show_Screen
  9171 ;; This function uses a non-reentrant model
  9172 ;;
  9173                           
  9174                           
  9175                           ;psect for function _PROCULUS_Control_Register_Write
  9176  1C97                     _PROCULUS_Control_Register_Write:
  9177                           
  9178                           ;incstack = 0
  9179                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
  9180                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
  9181  1C97  00A6               	movwf	PROCULUS_Control_Register_Write@vetor^(0+128)
  9182                           
  9183                           ;proculus.c: 14:      USART_put_int(0x5AA5);
  9184  1C98  30A5               	movlw	165
  9185  1C99  00A0               	movwf	USART_put_int@value^(0+128)
  9186  1C9A  305A               	movlw	90
  9187  1C9B  00A1               	movwf	(USART_put_int@value^(0+128)+1)
  9188  1C9C  160A  158A  2152  160A  158A  	fcall	_USART_put_int
  9189                           
  9190                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
  9191  1CA1  0824               	movf	PROCULUS_Control_Register_Write@size^(0+128),w
  9192  1CA2  3E01               	addlw	1
  9193  1CA3  160A  158A  2131  160A  158A  	fcall	_USART_putc
  9194                           
  9195                           ;proculus.c: 16:      USART_putc(0x80);
  9196  1CA8  3080               	movlw	128
  9197  1CA9  160A  158A  2131  160A  158A  	fcall	_USART_putc
  9198                           
  9199                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
  9200  1CAE  01A7               	clrf	PROCULUS_Control_Register_Write@i^(0+128)
  9201  1CAF                     l3909:
  9202  1CAF  0824               	movf	PROCULUS_Control_Register_Write@size^(0+128),w
  9203  1CB0  0227               	subwf	PROCULUS_Control_Register_Write@i^(0+128),w
  9204  1CB1  1803               	btfsc	3,0
  9205  1CB2  2CC4               	goto	l3911
  9206                           
  9207                           ;proculus.c: 18:          USART_putc(vetor[i]);
  9208  1CB3  0827               	movf	PROCULUS_Control_Register_Write@i^(0+128),w
  9209  1CB4  0726               	addwf	PROCULUS_Control_Register_Write@vetor^(0+128),w
  9210  1CB5  00A5               	movwf	??_PROCULUS_Control_Register_Write^(0+128)
  9211  1CB6  0825               	movf	??_PROCULUS_Control_Register_Write^(0+128),w
  9212  1CB7  0084               	movwf	4
  9213  1CB8  1383               	bcf	3,7	;select IRP bank0
  9214  1CB9  0800               	movf	0,w
  9215  1CBA  160A  158A  2131  160A  158A  	fcall	_USART_putc
  9216  1CBF  3001               	movlw	1
  9217  1CC0  00A5               	movwf	??_PROCULUS_Control_Register_Write^(0+128)
  9218  1CC1  0825               	movf	??_PROCULUS_Control_Register_Write^(0+128),w
  9219  1CC2  07A7               	addwf	PROCULUS_Control_Register_Write@i^(0+128),f
  9220  1CC3  2CAF               	goto	l3909
  9221  1CC4                     l3911:
  9222                           
  9223                           ;proculus.c: 19:      PROCULUS_Delay(1);
  9224  1CC4  3001               	movlw	1
  9225  1CC5  1283               	bcf	3,5	;RP0=0, select bank0
  9226  1CC6  00A0               	movwf	PROCULUS_Delay@tempo_ms
  9227  1CC7  3000               	movlw	0
  9228  1CC8  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  9229  1CC9  160A  158A  21F5   	fcall	_PROCULUS_Delay
  9230  1CCC  0008               	return
  9231  1CCD                     __end_of_PROCULUS_Control_Register_Write:
  9232                           
  9233                           	psect	text31
  9234  1952                     __ptext31:	
  9235 ;; *************** function _USART_put_int *****************
  9236 ;; Defined at:
  9237 ;;		line 137 in file "usart.c"
  9238 ;; Parameters:    Size  Location     Type
  9239 ;;  value           2    0[BANK1 ] int 
  9240 ;; Auto vars:     Size  Location     Type
  9241 ;;  dado            1    3[BANK1 ] PTR unsigned char 
  9242 ;;		 -> USART_put_int@value(2), 
  9243 ;; Return value:  Size  Location     Type
  9244 ;;                  1    wreg      void 
  9245 ;; Registers used:
  9246 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9247 ;; Tracked objects:
  9248 ;;		On entry : 300/100
  9249 ;;		On exit  : 300/100
  9250 ;;		Unchanged: 0/0
  9251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9252 ;;      Params:         0       0       2       0       0
  9253 ;;      Locals:         0       0       1       0       0
  9254 ;;      Temps:          0       0       1       0       0
  9255 ;;      Totals:         0       0       4       0       0
  9256 ;;Total ram usage:        4 bytes
  9257 ;; Hardware stack levels used: 1
  9258 ;; Hardware stack levels required when called: 2
  9259 ;; This function calls:
  9260 ;;		_USART_putc
  9261 ;; This function is called by:
  9262 ;;		_Decodify_Command
  9263 ;;		_PROCULUS_Control_Register_Write
  9264 ;;		_PROCULUS_VP_Write
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           
  9269                           ;psect for function _USART_put_int
  9270  1952                     _USART_put_int:
  9271                           
  9272                           ;usart.c: 138:      char *dado;;usart.c: 139:      dado=(char*)&value;
  9273                           
  9274                           ;incstack = 0
  9275                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9276  1952  30A0               	movlw	(low (USART_put_int@value| 0))& (0+255)
  9277  1953  00A2               	movwf	??_USART_put_int^(0+128)
  9278  1954  0822               	movf	??_USART_put_int^(0+128),w
  9279  1955  00A3               	movwf	USART_put_int@dado^(0+128)
  9280                           
  9281                           ;usart.c: 140:      USART_putc(*(dado+1));
  9282  1956  0A23               	incf	USART_put_int@dado^(0+128),w
  9283  1957  0084               	movwf	4
  9284  1958  1383               	bcf	3,7	;select IRP bank0
  9285  1959  0800               	movf	0,w
  9286  195A  160A  158A  2131  160A  158A  	fcall	_USART_putc
  9287                           
  9288                           ;usart.c: 141:      USART_putc(*dado);
  9289  195F  0823               	movf	USART_put_int@dado^(0+128),w
  9290  1960  0084               	movwf	4
  9291  1961  1383               	bcf	3,7	;select IRP bank0
  9292  1962  0800               	movf	0,w
  9293  1963  160A  158A  2131   	fcall	_USART_putc
  9294  1966  0008               	return
  9295  1967                     __end_of_USART_put_int:
  9296                           
  9297                           	psect	text32
  9298  19F5                     __ptext32:	
  9299 ;; *************** function _PROCULUS_Delay *****************
  9300 ;; Defined at:
  9301 ;;		line 267 in file "proculus.c"
  9302 ;; Parameters:    Size  Location     Type
  9303 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
  9304 ;; Auto vars:     Size  Location     Type
  9305 ;;  i               2    4[BANK0 ] unsigned int 
  9306 ;; Return value:  Size  Location     Type
  9307 ;;                  1    wreg      void 
  9308 ;; Registers used:
  9309 ;;		wreg, status,2
  9310 ;; Tracked objects:
  9311 ;;		On entry : 300/800
  9312 ;;		On exit  : 300/0
  9313 ;;		Unchanged: 0/0
  9314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9315 ;;      Params:         0       2       0       0       0
  9316 ;;      Locals:         0       2       0       0       0
  9317 ;;      Temps:          0       2       0       0       0
  9318 ;;      Totals:         0       6       0       0       0
  9319 ;;Total ram usage:        6 bytes
  9320 ;; Hardware stack levels used: 1
  9321 ;; Hardware stack levels required when called: 1
  9322 ;; This function calls:
  9323 ;;		Nothing
  9324 ;; This function is called by:
  9325 ;;		_PROCULUS_Control_Register_Write
  9326 ;;		_PROCULUS_VP_Write
  9327 ;; This function uses a non-reentrant model
  9328 ;;
  9329                           
  9330                           
  9331                           ;psect for function _PROCULUS_Delay
  9332  19F5                     _PROCULUS_Delay:
  9333                           
  9334                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
  9335                           
  9336                           ;incstack = 0
  9337                           ; Regs used in _PROCULUS_Delay: [wreg+status,2]
  9338  19F5  01A4               	clrf	PROCULUS_Delay@i
  9339  19F6  01A5               	clrf	PROCULUS_Delay@i+1
  9340  19F7                     l800:
  9341  19F7  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
  9342  19F8  0225               	subwf	PROCULUS_Delay@i+1,w
  9343  19F9  1D03               	skipz
  9344  19FA  29FD               	goto	u2835
  9345  19FB  0820               	movf	PROCULUS_Delay@tempo_ms,w
  9346  19FC  0224               	subwf	PROCULUS_Delay@i,w
  9347  19FD                     u2835:
  9348  19FD  1803               	btfsc	3,0
  9349  19FE  0008               	return
  9350                           
  9351                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
  9352  19FF  3003               	movlw	3
  9353  1A00  1283               	bcf	3,5	;RP0=0, select bank0
  9354  1A01  1303               	bcf	3,6	;RP1=0, select bank0
  9355  1A02  00A3               	movwf	??_PROCULUS_Delay+1
  9356  1A03  3097               	movlw	151
  9357  1A04  00A2               	movwf	??_PROCULUS_Delay
  9358  1A05                     u5537:
  9359  1A05  0BA2               	decfsz	??_PROCULUS_Delay,f
  9360  1A06  2A05               	goto	u5537
  9361  1A07  0BA3               	decfsz	??_PROCULUS_Delay+1,f
  9362  1A08  2A05               	goto	u5537
  9363                           
  9364                           ;proculus.c: 270:     }
  9365  1A09  3001               	movlw	1
  9366  1A0A  1283               	bcf	3,5	;RP0=0, select bank0
  9367  1A0B  1303               	bcf	3,6	;RP1=0, select bank0
  9368  1A0C  07A4               	addwf	PROCULUS_Delay@i,f
  9369  1A0D  1803               	skipnc
  9370  1A0E  0AA5               	incf	PROCULUS_Delay@i+1,f
  9371  1A0F  3000               	movlw	0
  9372  1A10  07A5               	addwf	PROCULUS_Delay@i+1,f
  9373  1A11  29F7               	goto	l800
  9374  1A12                     __end_of_PROCULUS_Delay:
  9375                           
  9376                           	psect	text33
  9377  1BA1                     __ptext33:	
  9378 ;; *************** function _EEPROM_Write_String *****************
  9379 ;; Defined at:
  9380 ;;		line 97 in file "eeprom.c"
  9381 ;; Parameters:    Size  Location     Type
  9382 ;;  addr            1    wreg     unsigned char 
  9383 ;;  dado            1    5[BANK0 ] PTR unsigned char 
  9384 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  9385 ;; Auto vars:     Size  Location     Type
  9386 ;;  addr            1    7[BANK0 ] unsigned char 
  9387 ;; Return value:  Size  Location     Type
  9388 ;;                  1    wreg      void 
  9389 ;; Registers used:
  9390 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9391 ;; Tracked objects:
  9392 ;;		On entry : 300/300
  9393 ;;		On exit  : 0/0
  9394 ;;		Unchanged: 0/0
  9395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9396 ;;      Params:         0       1       0       0       0
  9397 ;;      Locals:         0       1       0       0       0
  9398 ;;      Temps:          0       1       0       0       0
  9399 ;;      Totals:         0       3       0       0       0
  9400 ;;Total ram usage:        3 bytes
  9401 ;; Hardware stack levels used: 1
  9402 ;; Hardware stack levels required when called: 2
  9403 ;; This function calls:
  9404 ;;		_EEPROM_Write_Byte
  9405 ;; This function is called by:
  9406 ;;		_Decodify_Command
  9407 ;; This function uses a non-reentrant model
  9408 ;;
  9409                           
  9410                           
  9411                           ;psect for function _EEPROM_Write_String
  9412  1BA1                     _EEPROM_Write_String:
  9413                           
  9414                           ;incstack = 0
  9415                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9416                           ;EEPROM_Write_String@addr stored from wreg
  9417  1BA1  1283               	bcf	3,5	;RP0=0, select bank0
  9418  1BA2  1303               	bcf	3,6	;RP1=0, select bank0
  9419  1BA3  00A7               	movwf	EEPROM_Write_String@addr
  9420  1BA4                     l4739:	
  9421                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
  9422                           
  9423                           
  9424                           ;eeprom.c: 99:     while(*dado)
  9425  1BA4  0825               	movf	EEPROM_Write_String@dado,w
  9426  1BA5  0084               	movwf	4
  9427  1BA6  1783               	bsf	3,7	;select IRP bank2
  9428  1BA7  0800               	movf	0,w
  9429  1BA8  1903               	btfsc	3,2
  9430  1BA9  2BC1               	goto	l4741
  9431                           
  9432                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
  9433  1BAA  0825               	movf	EEPROM_Write_String@dado,w
  9434  1BAB  0084               	movwf	4
  9435  1BAC  0800               	movf	0,w
  9436  1BAD  00A6               	movwf	??_EEPROM_Write_String
  9437  1BAE  0826               	movf	??_EEPROM_Write_String,w
  9438  1BAF  00A0               	movwf	EEPROM_Write_Byte@dado
  9439  1BB0  0827               	movf	EEPROM_Write_String@addr,w
  9440  1BB1  160A  158A  253C  160A  158A  	fcall	_EEPROM_Write_Byte
  9441                           
  9442                           ;eeprom.c: 102:      addr++;
  9443  1BB6  3001               	movlw	1
  9444  1BB7  1283               	bcf	3,5	;RP0=0, select bank0
  9445  1BB8  1303               	bcf	3,6	;RP1=0, select bank0
  9446  1BB9  00A6               	movwf	??_EEPROM_Write_String
  9447  1BBA  0826               	movf	??_EEPROM_Write_String,w
  9448  1BBB  07A7               	addwf	EEPROM_Write_String@addr,f
  9449                           
  9450                           ;eeprom.c: 103:      dado++;
  9451  1BBC  3001               	movlw	1
  9452  1BBD  00A6               	movwf	??_EEPROM_Write_String
  9453  1BBE  0826               	movf	??_EEPROM_Write_String,w
  9454  1BBF  07A5               	addwf	EEPROM_Write_String@dado,f
  9455  1BC0  2BA4               	goto	l4739
  9456  1BC1                     l4741:
  9457                           
  9458                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
  9459  1BC1  0825               	movf	EEPROM_Write_String@dado,w
  9460  1BC2  0084               	movwf	4
  9461  1BC3  0800               	movf	0,w
  9462  1BC4  00A6               	movwf	??_EEPROM_Write_String
  9463  1BC5  0826               	movf	??_EEPROM_Write_String,w
  9464  1BC6  00A0               	movwf	EEPROM_Write_Byte@dado
  9465  1BC7  0827               	movf	EEPROM_Write_String@addr,w
  9466  1BC8  160A  158A  253C   	fcall	_EEPROM_Write_Byte
  9467  1BCB  0008               	return
  9468  1BCC                     __end_of_EEPROM_Write_String:
  9469                           
  9470                           	psect	text34
  9471  1BFD                     __ptext34:	
  9472 ;; *************** function _EEPROM_Write_Integer *****************
  9473 ;; Defined at:
  9474 ;;		line 68 in file "eeprom.c"
  9475 ;; Parameters:    Size  Location     Type
  9476 ;;  addr            1    wreg     unsigned char 
  9477 ;;  dado            2    5[BANK0 ] unsigned int 
  9478 ;; Auto vars:     Size  Location     Type
  9479 ;;  addr            1   10[BANK0 ] unsigned char 
  9480 ;;  i               1   11[BANK0 ] unsigned char 
  9481 ;;  ptr             1    9[BANK0 ] PTR unsigned char 
  9482 ;;		 -> EEPROM_Write_Integer@dado(2), 
  9483 ;;  addr_memo       1    0        unsigned char 
  9484 ;; Return value:  Size  Location     Type
  9485 ;;                  1    wreg      void 
  9486 ;; Registers used:
  9487 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9488 ;; Tracked objects:
  9489 ;;		On entry : 200/0
  9490 ;;		On exit  : 0/0
  9491 ;;		Unchanged: 0/0
  9492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9493 ;;      Params:         0       2       0       0       0
  9494 ;;      Locals:         0       3       0       0       0
  9495 ;;      Temps:          0       2       0       0       0
  9496 ;;      Totals:         0       7       0       0       0
  9497 ;;Total ram usage:        7 bytes
  9498 ;; Hardware stack levels used: 1
  9499 ;; Hardware stack levels required when called: 2
  9500 ;; This function calls:
  9501 ;;		_EEPROM_Write_Byte
  9502 ;; This function is called by:
  9503 ;;		_main
  9504 ;;		_Decodify_Command
  9505 ;; This function uses a non-reentrant model
  9506 ;;
  9507                           
  9508                           
  9509                           ;psect for function _EEPROM_Write_Integer
  9510  1BFD                     _EEPROM_Write_Integer:
  9511                           
  9512                           ;incstack = 0
  9513                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9514                           ;EEPROM_Write_Integer@addr stored from wreg
  9515  1BFD  1283               	bcf	3,5	;RP0=0, select bank0
  9516  1BFE  00AA               	movwf	EEPROM_Write_Integer@addr
  9517                           
  9518                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
  9519  1BFF  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
  9520  1C00  00A7               	movwf	??_EEPROM_Write_Integer
  9521  1C01  0827               	movf	??_EEPROM_Write_Integer,w
  9522  1C02  00A9               	movwf	EEPROM_Write_Integer@ptr
  9523                           
  9524                           ;eeprom.c: 75:       for (i=0;i<2;i++)
  9525  1C03  01AB               	clrf	EEPROM_Write_Integer@i
  9526  1C04                     l4689:
  9527                           
  9528                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
  9529  1C04  0829               	movf	EEPROM_Write_Integer@ptr,w
  9530  1C05  0084               	movwf	4
  9531  1C06  1383               	bcf	3,7	;select IRP bank0
  9532  1C07  0800               	movf	0,w
  9533  1C08  00A7               	movwf	??_EEPROM_Write_Integer
  9534  1C09  0827               	movf	??_EEPROM_Write_Integer,w
  9535  1C0A  00A0               	movwf	EEPROM_Write_Byte@dado
  9536  1C0B  082A               	movf	EEPROM_Write_Integer@addr,w
  9537  1C0C  160A  158A  253C  160A  158A  	fcall	_EEPROM_Write_Byte
  9538  1C11  3001               	movlw	1
  9539  1C12  1283               	bcf	3,5	;RP0=0, select bank0
  9540  1C13  1303               	bcf	3,6	;RP1=0, select bank0
  9541  1C14  00A7               	movwf	??_EEPROM_Write_Integer
  9542  1C15  0827               	movf	??_EEPROM_Write_Integer,w
  9543  1C16  07A9               	addwf	EEPROM_Write_Integer@ptr,f
  9544  1C17  3001               	movlw	1
  9545  1C18  00A7               	movwf	??_EEPROM_Write_Integer
  9546  1C19  0827               	movf	??_EEPROM_Write_Integer,w
  9547  1C1A  07AA               	addwf	EEPROM_Write_Integer@addr,f
  9548  1C1B  3001               	movlw	1
  9549  1C1C  00A7               	movwf	??_EEPROM_Write_Integer
  9550  1C1D  0827               	movf	??_EEPROM_Write_Integer,w
  9551  1C1E  07AB               	addwf	EEPROM_Write_Integer@i,f
  9552  1C1F  3002               	movlw	2
  9553  1C20  022B               	subwf	EEPROM_Write_Integer@i,w
  9554  1C21  1C03               	skipc
  9555  1C22  2C04               	goto	l4689
  9556                           
  9557                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
  9558  1C23  304E               	movlw	78
  9559  1C24  1283               	bcf	3,5	;RP0=0, select bank0
  9560  1C25  1303               	bcf	3,6	;RP1=0, select bank0
  9561  1C26  00A8               	movwf	??_EEPROM_Write_Integer+1
  9562  1C27  30EA               	movlw	234
  9563  1C28  00A7               	movwf	??_EEPROM_Write_Integer
  9564  1C29                     u5547:
  9565  1C29  0BA7               	decfsz	??_EEPROM_Write_Integer,f
  9566  1C2A  2C29               	goto	u5547
  9567  1C2B  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
  9568  1C2C  2C29               	goto	u5547
  9569  1C2D  0000               	nop
  9570  1C2E  0008               	return
  9571  1C2F                     __end_of_EEPROM_Write_Integer:
  9572                           
  9573                           	psect	text35
  9574  1D3C                     __ptext35:	
  9575 ;; *************** function _EEPROM_Write_Byte *****************
  9576 ;; Defined at:
  9577 ;;		line 21 in file "eeprom.c"
  9578 ;; Parameters:    Size  Location     Type
  9579 ;;  addr            1    wreg     unsigned char 
  9580 ;;  dado            1    0[BANK0 ] unsigned char 
  9581 ;; Auto vars:     Size  Location     Type
  9582 ;;  addr            1    3[BANK0 ] unsigned char 
  9583 ;;  last_GIE        1    4[BANK0 ] unsigned char 
  9584 ;; Return value:  Size  Location     Type
  9585 ;;                  1    wreg      void 
  9586 ;; Registers used:
  9587 ;;		wreg, status,2, status,0
  9588 ;; Tracked objects:
  9589 ;;		On entry : 0/300
  9590 ;;		On exit  : 0/0
  9591 ;;		Unchanged: 0/0
  9592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9593 ;;      Params:         0       1       0       0       0
  9594 ;;      Locals:         0       2       0       0       0
  9595 ;;      Temps:          0       2       0       0       0
  9596 ;;      Totals:         0       5       0       0       0
  9597 ;;Total ram usage:        5 bytes
  9598 ;; Hardware stack levels used: 1
  9599 ;; Hardware stack levels required when called: 1
  9600 ;; This function calls:
  9601 ;;		Nothing
  9602 ;; This function is called by:
  9603 ;;		_Decodify_Command
  9604 ;;		_EEPROM_Write_Integer
  9605 ;;		_EEPROM_Write_String
  9606 ;; This function uses a non-reentrant model
  9607 ;;
  9608                           
  9609                           
  9610                           ;psect for function _EEPROM_Write_Byte
  9611  1D3C                     _EEPROM_Write_Byte:
  9612                           
  9613                           ;incstack = 0
  9614                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
  9615                           ;EEPROM_Write_Byte@addr stored from wreg
  9616  1D3C  1283               	bcf	3,5	;RP0=0, select bank0
  9617  1D3D  1303               	bcf	3,6	;RP1=0, select bank0
  9618  1D3E  00A3               	movwf	EEPROM_Write_Byte@addr
  9619                           
  9620                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
  9621  1D3F  3014               	movlw	20
  9622  1D40  1683               	bsf	3,5	;RP0=1, select bank1
  9623  1D41  00DD               	movwf	_Delay_Led_Memory^(0+128)	;volatile
  9624  1D42  3000               	movlw	0
  9625  1D43  00DE               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
  9626  1D44                     l519:	
  9627                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
  9628                           
  9629  1D44  1703               	bsf	3,6	;RP1=1, select bank3
  9630  1D45  188C               	btfsc	12,1	;volsfr
  9631  1D46  2D44               	goto	l519
  9632                           
  9633                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
  9634  1D47  1F8B               	btfss	11,7	;volatile
  9635  1D48  2D4E               	goto	l3841
  9636                           
  9637                           ;eeprom.c: 28:           last_GIE=1;
  9638  1D49  1283               	bcf	3,5	;RP0=0, select bank0
  9639  1D4A  1303               	bcf	3,6	;RP1=0, select bank0
  9640  1D4B  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9641  1D4C  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
  9642  1D4D  2D51               	goto	l3843
  9643  1D4E                     l3841:
  9644                           
  9645                           ;eeprom.c: 30:           last_GIE=0;
  9646  1D4E  1283               	bcf	3,5	;RP0=0, select bank0
  9647  1D4F  1303               	bcf	3,6	;RP1=0, select bank0
  9648  1D50  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9649  1D51                     l3843:
  9650                           
  9651                           ;eeprom.c: 32:        EEADR=addr;
  9652  1D51  0823               	movf	EEPROM_Write_Byte@addr,w
  9653  1D52  1703               	bsf	3,6	;RP1=1, select bank2
  9654  1D53  008D               	movwf	13	;volatile
  9655                           
  9656                           ;eeprom.c: 33:        EEDATA=dado;
  9657  1D54  1303               	bcf	3,6	;RP1=0, select bank0
  9658  1D55  0820               	movf	EEPROM_Write_Byte@dado,w
  9659  1D56  1703               	bsf	3,6	;RP1=1, select bank2
  9660  1D57  008C               	movwf	12	;volatile
  9661                           
  9662                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
  9663  1D58  1683               	bsf	3,5	;RP0=1, select bank3
  9664  1D59  138C               	bcf	12,7	;volsfr
  9665                           
  9666                           ;eeprom.c: 35:        EECON1bits.WREN=1;
  9667  1D5A  150C               	bsf	12,2	;volsfr
  9668                           
  9669                           ;eeprom.c: 36:        INTCONbits.GIE=0;
  9670  1D5B  138B               	bcf	11,7	;volatile
  9671                           
  9672                           ;eeprom.c: 37:        EECON2=0x55;
  9673  1D5C  3055               	movlw	85
  9674  1D5D  008D               	movwf	13	;volsfr
  9675                           
  9676                           ;eeprom.c: 38:        EECON2=0xAA;
  9677  1D5E  30AA               	movlw	170
  9678  1D5F  008D               	movwf	13	;volsfr
  9679                           
  9680                           ;eeprom.c: 39:        EECON1bits.WR=1;
  9681  1D60  148C               	bsf	12,1	;volsfr
  9682                           
  9683                           ;eeprom.c: 41:        if(last_GIE==1)
  9684  1D61  1283               	bcf	3,5	;RP0=0, select bank0
  9685  1D62  1303               	bcf	3,6	;RP1=0, select bank0
  9686  1D63  0324               	decf	EEPROM_Write_Byte@last_GIE,w
  9687  1D64  1D03               	btfss	3,2
  9688  1D65  2D68               	goto	l524
  9689                           
  9690                           ;eeprom.c: 42:           INTCONbits.GIE=1;
  9691  1D66  178B               	bsf	11,7	;volatile
  9692  1D67  2D69               	goto	l525
  9693  1D68                     l524:	
  9694                           ;eeprom.c: 43:        else
  9695                           
  9696                           
  9697                           ;eeprom.c: 44:           INTCONbits.GIE=0;
  9698  1D68  138B               	bcf	11,7	;volatile
  9699  1D69                     l525:
  9700                           
  9701                           ;eeprom.c: 46:        EECON1bits.WREN=0;
  9702  1D69  1683               	bsf	3,5	;RP0=1, select bank3
  9703  1D6A  1703               	bsf	3,6	;RP1=1, select bank3
  9704  1D6B  110C               	bcf	12,2	;volsfr
  9705                           
  9706                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
  9707  1D6C  304E               	movlw	78
  9708  1D6D  1283               	bcf	3,5	;RP0=0, select bank0
  9709  1D6E  1303               	bcf	3,6	;RP1=0, select bank0
  9710  1D6F  00A2               	movwf	??_EEPROM_Write_Byte+1
  9711  1D70  30EA               	movlw	234
  9712  1D71  00A1               	movwf	??_EEPROM_Write_Byte
  9713  1D72                     u5557:
  9714  1D72  0BA1               	decfsz	??_EEPROM_Write_Byte,f
  9715  1D73  2D72               	goto	u5557
  9716  1D74  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
  9717  1D75  2D72               	goto	u5557
  9718  1D76  0000               	nop
  9719  1D77  0008               	return
  9720  1D78                     __end_of_EEPROM_Write_Byte:
  9721                           
  9722                           	psect	text36
  9723  1A4E                     __ptext36:	
  9724 ;; *************** function _EEPROM_Read_String *****************
  9725 ;; Defined at:
  9726 ;;		line 109 in file "eeprom.c"
  9727 ;; Parameters:    Size  Location     Type
  9728 ;;  addr            1    wreg     unsigned char 
  9729 ;;  dado            1    3[BANK0 ] PTR unsigned char 
  9730 ;;		 -> buffer(33), 
  9731 ;; Auto vars:     Size  Location     Type
  9732 ;;  addr            1    5[BANK0 ] unsigned char 
  9733 ;;  c               1    6[BANK0 ] unsigned char 
  9734 ;; Return value:  Size  Location     Type
  9735 ;;                  1    wreg      void 
  9736 ;; Registers used:
  9737 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9738 ;; Tracked objects:
  9739 ;;		On entry : 300/300
  9740 ;;		On exit  : B00/800
  9741 ;;		Unchanged: 0/0
  9742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9743 ;;      Params:         0       1       0       0       0
  9744 ;;      Locals:         0       2       0       0       0
  9745 ;;      Temps:          0       1       0       0       0
  9746 ;;      Totals:         0       4       0       0       0
  9747 ;;Total ram usage:        4 bytes
  9748 ;; Hardware stack levels used: 1
  9749 ;; Hardware stack levels required when called: 2
  9750 ;; This function calls:
  9751 ;;		_EEPROM_Read_Byte
  9752 ;; This function is called by:
  9753 ;;		_Decodify_Command
  9754 ;; This function uses a non-reentrant model
  9755 ;;
  9756                           
  9757                           
  9758                           ;psect for function _EEPROM_Read_String
  9759  1A4E                     _EEPROM_Read_String:
  9760                           
  9761                           ;incstack = 0
  9762                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9763                           ;EEPROM_Read_String@addr stored from wreg
  9764  1A4E  1283               	bcf	3,5	;RP0=0, select bank0
  9765  1A4F  1303               	bcf	3,6	;RP1=0, select bank0
  9766  1A50  00A5               	movwf	EEPROM_Read_String@addr
  9767  1A51                     l551:	
  9768                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
  9769                           
  9770                           
  9771                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
  9772  1A51  0825               	movf	EEPROM_Read_String@addr,w
  9773  1A52  160A  158A  228F  160A  158A  	fcall	_EEPROM_Read_Byte
  9774  1A57  1303               	bcf	3,6	;RP1=0, select bank0
  9775  1A58  00A4               	movwf	??_EEPROM_Read_String
  9776  1A59  0824               	movf	??_EEPROM_Read_String,w
  9777  1A5A  00A6               	movwf	EEPROM_Read_String@c
  9778  1A5B  3001               	movlw	1
  9779  1A5C  00A4               	movwf	??_EEPROM_Read_String
  9780  1A5D  0824               	movf	??_EEPROM_Read_String,w
  9781  1A5E  07A5               	addwf	EEPROM_Read_String@addr,f
  9782                           
  9783                           ;eeprom.c: 114:         *(dado++)=c;
  9784  1A5F  0826               	movf	EEPROM_Read_String@c,w
  9785  1A60  00A4               	movwf	??_EEPROM_Read_String
  9786  1A61  0823               	movf	EEPROM_Read_String@dado,w
  9787  1A62  0084               	movwf	4
  9788  1A63  0824               	movf	??_EEPROM_Read_String,w
  9789  1A64  1783               	bsf	3,7	;select IRP bank2
  9790  1A65  0080               	movwf	0
  9791  1A66  3001               	movlw	1
  9792  1A67  00A4               	movwf	??_EEPROM_Read_String
  9793  1A68  0824               	movf	??_EEPROM_Read_String,w
  9794  1A69  07A3               	addwf	EEPROM_Read_String@dado,f
  9795                           
  9796                           ;eeprom.c: 116:       }while(c);
  9797  1A6A  0826               	movf	EEPROM_Read_String@c,w
  9798  1A6B  1903               	btfsc	3,2
  9799  1A6C  0008               	return
  9800  1A6D  2A51               	goto	l551
  9801  1A6E                     __end_of_EEPROM_Read_String:
  9802                           
  9803                           	psect	text37
  9804  1B4D                     __ptext37:	
  9805 ;; *************** function _EEPROM_Read_Integer *****************
  9806 ;; Defined at:
  9807 ;;		line 81 in file "eeprom.c"
  9808 ;; Parameters:    Size  Location     Type
  9809 ;;  addr            1    wreg     unsigned char 
  9810 ;; Auto vars:     Size  Location     Type
  9811 ;;  addr            1    6[BANK0 ] unsigned char 
  9812 ;;  result          2    8[BANK0 ] unsigned int 
  9813 ;;  i               1   10[BANK0 ] unsigned char 
  9814 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
  9815 ;;		 -> EEPROM_Read_Integer@result(2), 
  9816 ;; Return value:  Size  Location     Type
  9817 ;;                  2    3[BANK0 ] unsigned int 
  9818 ;; Registers used:
  9819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9820 ;; Tracked objects:
  9821 ;;		On entry : 0/0
  9822 ;;		On exit  : B00/0
  9823 ;;		Unchanged: 0/0
  9824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9825 ;;      Params:         0       2       0       0       0
  9826 ;;      Locals:         0       5       0       0       0
  9827 ;;      Temps:          0       1       0       0       0
  9828 ;;      Totals:         0       8       0       0       0
  9829 ;;Total ram usage:        8 bytes
  9830 ;; Hardware stack levels used: 1
  9831 ;; Hardware stack levels required when called: 2
  9832 ;; This function calls:
  9833 ;;		_EEPROM_Read_Byte
  9834 ;; This function is called by:
  9835 ;;		_main
  9836 ;;		_Decodify_Command
  9837 ;; This function uses a non-reentrant model
  9838 ;;
  9839                           
  9840                           
  9841                           ;psect for function _EEPROM_Read_Integer
  9842  1B4D                     _EEPROM_Read_Integer:
  9843                           
  9844                           ;incstack = 0
  9845                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9846                           ;EEPROM_Read_Integer@addr stored from wreg
  9847  1B4D  1283               	bcf	3,5	;RP0=0, select bank0
  9848  1B4E  1303               	bcf	3,6	;RP1=0, select bank0
  9849  1B4F  00A6               	movwf	EEPROM_Read_Integer@addr
  9850                           
  9851                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
  9852  1B50  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
  9853  1B51  00A5               	movwf	??_EEPROM_Read_Integer
  9854  1B52  0825               	movf	??_EEPROM_Read_Integer,w
  9855  1B53  00A7               	movwf	EEPROM_Read_Integer@ptr
  9856                           
  9857                           ;eeprom.c: 87:       for (i=0;i<2;i++)
  9858  1B54  01AA               	clrf	EEPROM_Read_Integer@i
  9859  1B55                     l4665:
  9860                           
  9861                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
  9862  1B55  0826               	movf	EEPROM_Read_Integer@addr,w
  9863  1B56  160A  158A  228F  160A  158A  	fcall	_EEPROM_Read_Byte
  9864  1B5B  1303               	bcf	3,6	;RP1=0, select bank0
  9865  1B5C  00A5               	movwf	??_EEPROM_Read_Integer
  9866  1B5D  0827               	movf	EEPROM_Read_Integer@ptr,w
  9867  1B5E  0084               	movwf	4
  9868  1B5F  0825               	movf	??_EEPROM_Read_Integer,w
  9869  1B60  1383               	bcf	3,7	;select IRP bank0
  9870  1B61  0080               	movwf	0
  9871  1B62  3001               	movlw	1
  9872  1B63  00A5               	movwf	??_EEPROM_Read_Integer
  9873  1B64  0825               	movf	??_EEPROM_Read_Integer,w
  9874  1B65  07A6               	addwf	EEPROM_Read_Integer@addr,f
  9875  1B66  3001               	movlw	1
  9876  1B67  00A5               	movwf	??_EEPROM_Read_Integer
  9877  1B68  0825               	movf	??_EEPROM_Read_Integer,w
  9878  1B69  07A7               	addwf	EEPROM_Read_Integer@ptr,f
  9879  1B6A  3001               	movlw	1
  9880  1B6B  00A5               	movwf	??_EEPROM_Read_Integer
  9881  1B6C  0825               	movf	??_EEPROM_Read_Integer,w
  9882  1B6D  07AA               	addwf	EEPROM_Read_Integer@i,f
  9883  1B6E  3002               	movlw	2
  9884  1B6F  022A               	subwf	EEPROM_Read_Integer@i,w
  9885  1B70  1C03               	skipc
  9886  1B71  2B55               	goto	l4665
  9887                           
  9888                           ;eeprom.c: 89:       return result;
  9889  1B72  0829               	movf	EEPROM_Read_Integer@result+1,w
  9890  1B73  00A4               	movwf	?_EEPROM_Read_Integer+1
  9891  1B74  0828               	movf	EEPROM_Read_Integer@result,w
  9892  1B75  00A3               	movwf	?_EEPROM_Read_Integer
  9893  1B76  0008               	return
  9894  1B77                     __end_of_EEPROM_Read_Integer:
  9895                           
  9896                           	psect	text38
  9897  1A8F                     __ptext38:	
  9898 ;; *************** function _EEPROM_Read_Byte *****************
  9899 ;; Defined at:
  9900 ;;		line 52 in file "eeprom.c"
  9901 ;; Parameters:    Size  Location     Type
  9902 ;;  addr            1    wreg     unsigned char 
  9903 ;; Auto vars:     Size  Location     Type
  9904 ;;  addr            1    2[BANK0 ] unsigned char 
  9905 ;; Return value:  Size  Location     Type
  9906 ;;                  1    wreg      unsigned char 
  9907 ;; Registers used:
  9908 ;;		wreg
  9909 ;; Tracked objects:
  9910 ;;		On entry : 0/300
  9911 ;;		On exit  : 300/200
  9912 ;;		Unchanged: 0/0
  9913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9914 ;;      Params:         0       0       0       0       0
  9915 ;;      Locals:         0       1       0       0       0
  9916 ;;      Temps:          0       2       0       0       0
  9917 ;;      Totals:         0       3       0       0       0
  9918 ;;Total ram usage:        3 bytes
  9919 ;; Hardware stack levels used: 1
  9920 ;; Hardware stack levels required when called: 1
  9921 ;; This function calls:
  9922 ;;		Nothing
  9923 ;; This function is called by:
  9924 ;;		_Decodify_Command
  9925 ;;		_EEPROM_Read_Integer
  9926 ;;		_EEPROM_Read_String
  9927 ;; This function uses a non-reentrant model
  9928 ;;
  9929                           
  9930                           
  9931                           ;psect for function _EEPROM_Read_Byte
  9932  1A8F                     _EEPROM_Read_Byte:
  9933                           
  9934                           ;incstack = 0
  9935                           ; Regs used in _EEPROM_Read_Byte: [wreg]
  9936                           ;EEPROM_Read_Byte@addr stored from wreg
  9937  1A8F  1283               	bcf	3,5	;RP0=0, select bank0
  9938  1A90  1303               	bcf	3,6	;RP1=0, select bank0
  9939  1A91  00A2               	movwf	EEPROM_Read_Byte@addr
  9940                           
  9941                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
  9942  1A92  3014               	movlw	20
  9943  1A93  1683               	bsf	3,5	;RP0=1, select bank1
  9944  1A94  00DD               	movwf	_Delay_Led_Memory^(0+128)	;volatile
  9945  1A95  3000               	movlw	0
  9946  1A96  00DE               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
  9947  1A97                     l529:	
  9948                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
  9949                           
  9950  1A97  1703               	bsf	3,6	;RP1=1, select bank3
  9951  1A98  188C               	btfsc	12,1	;volsfr
  9952  1A99  2A97               	goto	l529
  9953                           
  9954                           ;eeprom.c: 57:    EEADR=addr;
  9955  1A9A  1283               	bcf	3,5	;RP0=0, select bank0
  9956  1A9B  1303               	bcf	3,6	;RP1=0, select bank0
  9957  1A9C  0822               	movf	EEPROM_Read_Byte@addr,w
  9958  1A9D  1703               	bsf	3,6	;RP1=1, select bank2
  9959  1A9E  008D               	movwf	13	;volatile
  9960                           
  9961                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
  9962  1A9F  1683               	bsf	3,5	;RP0=1, select bank3
  9963  1AA0  138C               	bcf	12,7	;volsfr
  9964                           
  9965                           ;eeprom.c: 59:    EECON1bits.RD=1;
  9966  1AA1  140C               	bsf	12,0	;volsfr
  9967                           
  9968                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
  9969  1AA2  304E               	movlw	78
  9970  1AA3  1283               	bcf	3,5	;RP0=0, select bank0
  9971  1AA4  1303               	bcf	3,6	;RP1=0, select bank0
  9972  1AA5  00A1               	movwf	??_EEPROM_Read_Byte+1
  9973  1AA6  30EA               	movlw	234
  9974  1AA7  00A0               	movwf	??_EEPROM_Read_Byte
  9975  1AA8                     u5567:
  9976  1AA8  0BA0               	decfsz	??_EEPROM_Read_Byte,f
  9977  1AA9  2AA8               	goto	u5567
  9978  1AAA  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
  9979  1AAB  2AA8               	goto	u5567
  9980  1AAC  0000               	nop
  9981                           
  9982                           ;eeprom.c: 61:    return EEDATA;
  9983  1AAD  1283               	bcf	3,5	;RP0=0, select bank2
  9984  1AAE  1703               	bsf	3,6	;RP1=1, select bank2
  9985  1AAF  080C               	movf	12,w	;volatile
  9986  1AB0  0008               	return
  9987  1AB1                     __end_of_EEPROM_Read_Byte:
  9988                           
  9989                           	psect	text39
  9990  1297                     __ptext39:	
  9991 ;; *************** function _EEPROM_24C1025_Write_Str *****************
  9992 ;; Defined at:
  9993 ;;		line 220 in file "EEPROM_24C1025.c"
  9994 ;; Parameters:    Size  Location     Type
  9995 ;;  chip_add        1    wreg     unsigned char 
  9996 ;;  mem_add         4   10[BANK0 ] unsigned long 
  9997 ;;  data            1   14[BANK0 ] PTR unsigned char 
  9998 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  9999 ;; Auto vars:     Size  Location     Type
 10000 ;;  chip_add        1   17[BANK0 ] unsigned char 
 10001 ;;  ctrl            1   19[BANK0 ] unsigned char 
 10002 ;;  range           1   18[BANK0 ] unsigned char 
 10003 ;; Return value:  Size  Location     Type
 10004 ;;                  1    wreg      void 
 10005 ;; Registers used:
 10006 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10007 ;; Tracked objects:
 10008 ;;		On entry : 300/300
 10009 ;;		On exit  : 0/0
 10010 ;;		Unchanged: 0/0
 10011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10012 ;;      Params:         0       5       0       0       0
 10013 ;;      Locals:         0       3       0       0       0
 10014 ;;      Temps:          0       2       0       0       0
 10015 ;;      Totals:         0      10       0       0       0
 10016 ;;Total ram usage:       10 bytes
 10017 ;; Hardware stack levels used: 1
 10018 ;; Hardware stack levels required when called: 3
 10019 ;; This function calls:
 10020 ;;		_I2C_Master_Start
 10021 ;;		_I2C_Master_Stop
 10022 ;;		_I2C_Master_Write
 10023 ;;		_my_delay_ms_WDT
 10024 ;; This function is called by:
 10025 ;;		_Decodify_Command
 10026 ;; This function uses a non-reentrant model
 10027 ;;
 10028                           
 10029                           
 10030                           ;psect for function _EEPROM_24C1025_Write_Str
 10031  1297                     _EEPROM_24C1025_Write_Str:
 10032                           
 10033                           ;incstack = 0
 10034                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 10035                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
 10036  1297  1283               	bcf	3,5	;RP0=0, select bank0
 10037  1298  1303               	bcf	3,6	;RP1=0, select bank0
 10038  1299  00B1               	movwf	EEPROM_24C1025_Write_Str@chip_add
 10039                           
 10040                           ;EEPROM_24C1025.c: 222:      unsigned char ctrl;;EEPROM_24C1025.c: 224:      if(mem_add>
      +                          0x1FFFF) return;
 10041  129A  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10042  129B  1D03               	btfss	3,2
 10043  129C  0008               	return
 10044  129D  3002               	movlw	2
 10045  129E  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10046  129F  1D03               	skipz
 10047  12A0  2AA9               	goto	u4223
 10048  12A1  3000               	movlw	0
 10049  12A2  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10050  12A3  1D03               	skipz
 10051  12A4  2AA9               	goto	u4223
 10052  12A5  3000               	movlw	0
 10053  12A6  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10054  12A7  1D03               	skipz
 10055  12A8  2AA9               	goto	u4223
 10056  12A9                     u4223:
 10057  12A9  1803               	btfsc	3,0
 10058  12AA  0008               	return
 10059                           
 10060                           ;EEPROM_24C1025.c: 226:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10061  12AB  1283               	bcf	3,5	;RP0=0, select bank0
 10062  12AC  1303               	bcf	3,6	;RP1=0, select bank0
 10063  12AD                     L12:
 10064  12AD  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10065  12AE  1D03               	btfss	3,2
 10066  12AF  2ABE               	goto	l4467
 10067  12B0  3001               	movlw	1
 10068  12B1  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10069  12B2  1D03               	skipz
 10070  12B3  2ABC               	goto	u4233
 10071  12B4  3000               	movlw	0
 10072  12B5  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10073  12B6  1D03               	skipz
 10074  12B7  2ABC               	goto	u4233
 10075  12B8  3000               	movlw	0
 10076  12B9  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10077  12BA  1D03               	skipz
 10078  12BB  2ABC               	goto	u4233
 10079  12BC                     u4233:
 10080  12BC  1C03               	btfss	3,0
 10081  12BD  2AC5               	goto	l4469
 10082  12BE                     l4467:
 10083  12BE  3008               	movlw	8
 10084  12BF  1283               	bcf	3,5	;RP0=0, select bank0
 10085  12C0  1303               	bcf	3,6	;RP1=0, select bank0
 10086  12C1  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10087  12C2  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10088  12C3  00B2               	movwf	EEPROM_24C1025_Write_Str@range
 10089  12C4  2AC8               	goto	l4471
 10090  12C5                     l4469:
 10091  12C5  1283               	bcf	3,5	;RP0=0, select bank0
 10092  12C6  1303               	bcf	3,6	;RP1=0, select bank0
 10093  12C7  01B2               	clrf	EEPROM_24C1025_Write_Str@range
 10094  12C8                     l4471:
 10095                           
 10096                           ;EEPROM_24C1025.c: 227:      ctrl=chip_add;
 10097  12C8  0831               	movf	EEPROM_24C1025_Write_Str@chip_add,w
 10098  12C9  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10099  12CA  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10100  12CB  00B3               	movwf	EEPROM_24C1025_Write_Str@ctrl
 10101                           
 10102                           ;EEPROM_24C1025.c: 228:      ctrl<<=1;
 10103  12CC  1003               	clrc
 10104  12CD  0DB3               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
 10105                           
 10106                           ;EEPROM_24C1025.c: 229:      ctrl |= 0xA0;
 10107  12CE  30A0               	movlw	160
 10108  12CF  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10109  12D0  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10110  12D1  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10111                           
 10112                           ;EEPROM_24C1025.c: 230:      ctrl |= range;
 10113  12D2  0832               	movf	EEPROM_24C1025_Write_Str@range,w
 10114  12D3  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10115  12D4  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10116  12D5  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10117                           
 10118                           ;EEPROM_24C1025.c: 232:      I2C_Master_Start();
 10119  12D6  160A  158A  2141  160A  118A  	fcall	_I2C_Master_Start
 10120                           
 10121                           ;EEPROM_24C1025.c: 233:      I2C_Master_Write(ctrl);
 10122  12DB  1283               	bcf	3,5	;RP0=0, select bank0
 10123  12DC  0833               	movf	EEPROM_24C1025_Write_Str@ctrl,w
 10124  12DD  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10125  12DE  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10126  12DF  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10127  12E0  00A3               	movwf	I2C_Master_Write@d
 10128  12E1  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10129  12E2  00A4               	movwf	I2C_Master_Write@d+1
 10130  12E3  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 10131                           
 10132                           ;EEPROM_24C1025.c: 234:      I2C_Master_Write(((char *)&mem_add)[1]);
 10133  12E8  082B               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10134  12E9  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10135  12EA  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10136  12EB  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10137  12EC  00A3               	movwf	I2C_Master_Write@d
 10138  12ED  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10139  12EE  00A4               	movwf	I2C_Master_Write@d+1
 10140  12EF  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 10141                           
 10142                           ;EEPROM_24C1025.c: 235:      I2C_Master_Write(((char *)&mem_add)[0]);
 10143  12F4  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10144  12F5  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10145  12F6  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10146  12F7  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10147  12F8  00A3               	movwf	I2C_Master_Write@d
 10148  12F9  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10149  12FA  00A4               	movwf	I2C_Master_Write@d+1
 10150  12FB  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 10151  1300                     l4531:	
 10152                           ;EEPROM_24C1025.c: 236:      while(*data)
 10153                           
 10154                           
 10155                           ;EEPROM_24C1025.c: 236:      while(*data)
 10156  1300  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10157  1301  0084               	movwf	4
 10158  1302  1783               	bsf	3,7	;select IRP bank2
 10159  1303  0800               	movf	0,w
 10160  1304  1903               	btfsc	3,2
 10161  1305  2B78               	goto	l4533
 10162  1306  0064               	clrwdt	;# 
 10163                           
 10164                           ;EEPROM_24C1025.c: 239:           if(mem_add>0x1FFFF) return;
 10165  1307  1283               	bcf	3,5	;RP0=0, select bank0
 10166  1308  1303               	bcf	3,6	;RP1=0, select bank0
 10167  1309  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10168  130A  1D03               	btfss	3,2
 10169  130B  0008               	return
 10170  130C  3002               	movlw	2
 10171  130D  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10172  130E  1D03               	skipz
 10173  130F  2B18               	goto	u4243
 10174  1310  3000               	movlw	0
 10175  1311  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10176  1312  1D03               	skipz
 10177  1313  2B18               	goto	u4243
 10178  1314  3000               	movlw	0
 10179  1315  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10180  1316  1D03               	skipz
 10181  1317  2B18               	goto	u4243
 10182  1318                     u4243:
 10183  1318  1803               	btfsc	3,0
 10184  1319  0008               	return
 10185                           
 10186                           ;EEPROM_24C1025.c: 240:           if((mem_add+1)%128==0)
 10187  131A  1283               	bcf	3,5	;RP0=0, select bank0
 10188  131B  1303               	bcf	3,6	;RP1=0, select bank0
 10189  131C  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10190  131D  3E01               	addlw	1
 10191  131E  397F               	andlw	127
 10192  131F  1D03               	btfss	3,2
 10193  1320  2B56               	goto	l4525
 10194                           
 10195                           ;EEPROM_24C1025.c: 241:             {;EEPROM_24C1025.c: 242:             I2C_Master_Writ
      +                          e(*data);
 10196  1321  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10197  1322  0084               	movwf	4
 10198  1323  1783               	bsf	3,7	;select IRP bank2
 10199  1324  0800               	movf	0,w
 10200  1325  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10201  1326  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10202  1327  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10203  1328  00A3               	movwf	I2C_Master_Write@d
 10204  1329  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10205  132A  00A4               	movwf	I2C_Master_Write@d+1
 10206  132B  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 10207                           
 10208                           ;EEPROM_24C1025.c: 243:             I2C_Master_Stop();
 10209  1330  160A  158A  2109  160A  118A  	fcall	_I2C_Master_Stop
 10210                           
 10211                           ;EEPROM_24C1025.c: 245:             my_delay_ms_WDT(5);
 10212  1335  3000               	movlw	0
 10213  1336  1283               	bcf	3,5	;RP0=0, select bank0
 10214  1337  00A3               	movwf	my_delay_ms_WDT@time+3
 10215  1338  3000               	movlw	0
 10216  1339  00A2               	movwf	my_delay_ms_WDT@time+2
 10217  133A  3000               	movlw	0
 10218  133B  00A1               	movwf	my_delay_ms_WDT@time+1
 10219  133C  3005               	movlw	5
 10220  133D  00A0               	movwf	my_delay_ms_WDT@time
 10221  133E  160A  158A  2504  160A  118A  	fcall	_my_delay_ms_WDT
 10222                           
 10223                           ;EEPROM_24C1025.c: 246:             mem_add++;
 10224  1343  3001               	movlw	1
 10225  1344  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 10226  1345  3000               	movlw	0
 10227  1346  1803               	skipnc
 10228  1347  3001               	movlw	1
 10229  1348  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10230  1349  3000               	movlw	0
 10231  134A  1803               	skipnc
 10232  134B  3001               	movlw	1
 10233  134C  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10234  134D  3000               	movlw	0
 10235  134E  1803               	skipnc
 10236  134F  3001               	movlw	1
 10237  1350  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10238                           
 10239                           ;EEPROM_24C1025.c: 247:             data++;
 10240  1351  3001               	movlw	1
 10241  1352  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10242  1353  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10243  1354  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 10244  1355  2AAD               	goto	L12
 10245  1356                     l4525:	
 10246                           ;EEPROM_24C1025.c: 248:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10247                           
 10248                           
 10249                           ;EEPROM_24C1025.c: 260:             {;EEPROM_24C1025.c: 261:             I2C_Master_Writ
      +                          e(*data);
 10250  1356  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10251  1357  0084               	movwf	4
 10252  1358  1783               	bsf	3,7	;select IRP bank2
 10253  1359  0800               	movf	0,w
 10254  135A  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10255  135B  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10256  135C  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10257  135D  00A3               	movwf	I2C_Master_Write@d
 10258  135E  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10259  135F  00A4               	movwf	I2C_Master_Write@d+1
 10260  1360  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 10261                           
 10262                           ;EEPROM_24C1025.c: 262:             data++;
 10263  1365  3001               	movlw	1
 10264  1366  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10265  1367  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10266  1368  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 10267                           
 10268                           ;EEPROM_24C1025.c: 263:             mem_add++;
 10269  1369  3001               	movlw	1
 10270  136A  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 10271  136B  3000               	movlw	0
 10272  136C  1803               	skipnc
 10273  136D  3001               	movlw	1
 10274  136E  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10275  136F  3000               	movlw	0
 10276  1370  1803               	skipnc
 10277  1371  3001               	movlw	1
 10278  1372  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10279  1373  3000               	movlw	0
 10280  1374  1803               	skipnc
 10281  1375  3001               	movlw	1
 10282  1376  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10283  1377  2B00               	goto	l4531
 10284  1378                     l4533:
 10285                           
 10286                           ;EEPROM_24C1025.c: 266:      I2C_Master_Write(0);
 10287  1378  3000               	movlw	0
 10288  1379  00A3               	movwf	I2C_Master_Write@d
 10289  137A  00A4               	movwf	I2C_Master_Write@d+1
 10290  137B  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 10291                           
 10292                           ;EEPROM_24C1025.c: 267:      I2C_Master_Stop();
 10293  1380  160A  158A  2109  160A  118A  	fcall	_I2C_Master_Stop
 10294                           
 10295                           ;EEPROM_24C1025.c: 268:      my_delay_ms_WDT(5);
 10296  1385  3000               	movlw	0
 10297  1386  1283               	bcf	3,5	;RP0=0, select bank0
 10298  1387  00A3               	movwf	my_delay_ms_WDT@time+3
 10299  1388  3000               	movlw	0
 10300  1389  00A2               	movwf	my_delay_ms_WDT@time+2
 10301  138A  3000               	movlw	0
 10302  138B  00A1               	movwf	my_delay_ms_WDT@time+1
 10303  138C  3005               	movlw	5
 10304  138D  00A0               	movwf	my_delay_ms_WDT@time
 10305  138E  160A  158A  2504   	fcall	_my_delay_ms_WDT
 10306  1391  0008               	return
 10307  1392                     __end_of_EEPROM_24C1025_Write_Str:
 10308                           
 10309                           	psect	text40
 10310  197C                     __ptext40:	
 10311 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
 10312 ;; Defined at:
 10313 ;;		line 341 in file "EEPROM_24C1025.c"
 10314 ;; Parameters:    Size  Location     Type
 10315 ;;  chip_add        1    wreg     unsigned char 
 10316 ;;  mem_add         4   23[BANK0 ] unsigned long 
 10317 ;;  data            1   27[BANK0 ] unsigned char 
 10318 ;; Auto vars:     Size  Location     Type
 10319 ;;  chip_add        1   28[BANK0 ] unsigned char 
 10320 ;; Return value:  Size  Location     Type
 10321 ;;                  1    wreg      void 
 10322 ;; Registers used:
 10323 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10324 ;; Tracked objects:
 10325 ;;		On entry : 300/300
 10326 ;;		On exit  : 0/0
 10327 ;;		Unchanged: 0/0
 10328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10329 ;;      Params:         0       5       0       0       0
 10330 ;;      Locals:         0       1       0       0       0
 10331 ;;      Temps:          0       0       0       0       0
 10332 ;;      Totals:         0       6       0       0       0
 10333 ;;Total ram usage:        6 bytes
 10334 ;; Hardware stack levels used: 1
 10335 ;; Hardware stack levels required when called: 4
 10336 ;; This function calls:
 10337 ;;		_EEPROM_24C1025_Write_Buffer
 10338 ;; This function is called by:
 10339 ;;		_Decodify_Command
 10340 ;; This function uses a non-reentrant model
 10341 ;;
 10342                           
 10343                           
 10344                           ;psect for function _EEPROM_24C1025_Write_Byte
 10345  197C                     _EEPROM_24C1025_Write_Byte:
 10346                           
 10347                           ;incstack = 0
 10348                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
 10349                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
 10350  197C  1283               	bcf	3,5	;RP0=0, select bank0
 10351  197D  1303               	bcf	3,6	;RP1=0, select bank0
 10352  197E  00BC               	movwf	EEPROM_24C1025_Write_Byte@chip_add
 10353                           
 10354                           ;EEPROM_24C1025.c: 342:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
 10355  197F  083A               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
 10356  1980  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 10357  1981  0839               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
 10358  1982  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 10359  1983  0838               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
 10360  1984  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 10361  1985  0837               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
 10362  1986  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 10363  1987  01AE               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
 10364  1988  0AAE               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
 10365  1989  303B               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
 10366  198A  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 10367  198B  3000               	movlw	0
 10368  198C  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 10369  198D  083C               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
 10370  198E  160A  118A  2392   	fcall	_EEPROM_24C1025_Write_Buffer
 10371  1991  0008               	return
 10372  1992                     __end_of_EEPROM_24C1025_Write_Byte:
 10373                           
 10374                           	psect	text41
 10375  1508                     __ptext41:	
 10376 ;; *************** function _EEPROM_24C1025_Read_Str *****************
 10377 ;; Defined at:
 10378 ;;		line 275 in file "EEPROM_24C1025.c"
 10379 ;; Parameters:    Size  Location     Type
 10380 ;;  chip_add        1    wreg     unsigned char 
 10381 ;;  mem_add         4    9[BANK0 ] unsigned long 
 10382 ;;  buffer          1   13[BANK0 ] PTR unsigned char 
 10383 ;;		 -> buffer(33), 
 10384 ;; Auto vars:     Size  Location     Type
 10385 ;;  chip_add        1   17[BANK0 ] unsigned char 
 10386 ;;  ctrl            1   19[BANK0 ] unsigned char 
 10387 ;;  range           1   18[BANK0 ] unsigned char 
 10388 ;;  cnt             1   16[BANK0 ] unsigned char 
 10389 ;; Return value:  Size  Location     Type
 10390 ;;                  1    wreg      void 
 10391 ;; Registers used:
 10392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10393 ;; Tracked objects:
 10394 ;;		On entry : 300/300
 10395 ;;		On exit  : 0/0
 10396 ;;		Unchanged: 0/0
 10397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10398 ;;      Params:         0       5       0       0       0
 10399 ;;      Locals:         0       4       0       0       0
 10400 ;;      Temps:          0       2       0       0       0
 10401 ;;      Totals:         0      11       0       0       0
 10402 ;;Total ram usage:       11 bytes
 10403 ;; Hardware stack levels used: 1
 10404 ;; Hardware stack levels required when called: 3
 10405 ;; This function calls:
 10406 ;;		_I2C_Master_Read
 10407 ;;		_I2C_Master_RepeatedStart
 10408 ;;		_I2C_Master_Start
 10409 ;;		_I2C_Master_Stop
 10410 ;;		_I2C_Master_Write
 10411 ;; This function is called by:
 10412 ;;		_Decodify_Command
 10413 ;; This function uses a non-reentrant model
 10414 ;;
 10415                           
 10416                           
 10417                           ;psect for function _EEPROM_24C1025_Read_Str
 10418  1508                     _EEPROM_24C1025_Read_Str:
 10419                           
 10420                           ;incstack = 0
 10421                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10422                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
 10423  1508  1283               	bcf	3,5	;RP0=0, select bank0
 10424  1509  1303               	bcf	3,6	;RP1=0, select bank0
 10425  150A  00B1               	movwf	EEPROM_24C1025_Read_Str@chip_add
 10426                           
 10427                           ;EEPROM_24C1025.c: 277:      unsigned char range=0;
 10428  150B  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10429                           
 10430                           ;EEPROM_24C1025.c: 278:      unsigned char ctrl;;EEPROM_24C1025.c: 280:      if(mem_add>
      +                          0x1FFFF) return;
 10431  150C  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10432  150D  1D03               	btfss	3,2
 10433  150E  0008               	return
 10434  150F  3002               	movlw	2
 10435  1510  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10436  1511  1D03               	skipz
 10437  1512  2D1B               	goto	u4283
 10438  1513  3000               	movlw	0
 10439  1514  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10440  1515  1D03               	skipz
 10441  1516  2D1B               	goto	u4283
 10442  1517  3000               	movlw	0
 10443  1518  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10444  1519  1D03               	skipz
 10445  151A  2D1B               	goto	u4283
 10446  151B                     u4283:
 10447  151B  1803               	btfsc	3,0
 10448  151C  0008               	return
 10449                           
 10450                           ;EEPROM_24C1025.c: 282:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10451  151D  1283               	bcf	3,5	;RP0=0, select bank0
 10452  151E  1303               	bcf	3,6	;RP1=0, select bank0
 10453  151F  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10454  1520  1D03               	btfss	3,2
 10455  1521  2D30               	goto	l4545
 10456  1522  3001               	movlw	1
 10457  1523  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10458  1524  1D03               	skipz
 10459  1525  2D2E               	goto	u4293
 10460  1526  3000               	movlw	0
 10461  1527  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10462  1528  1D03               	skipz
 10463  1529  2D2E               	goto	u4293
 10464  152A  3000               	movlw	0
 10465  152B  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10466  152C  1D03               	skipz
 10467  152D  2D2E               	goto	u4293
 10468  152E                     u4293:
 10469  152E  1C03               	btfss	3,0
 10470  152F  2D37               	goto	l4547
 10471  1530                     l4545:
 10472  1530  3008               	movlw	8
 10473  1531  1283               	bcf	3,5	;RP0=0, select bank0
 10474  1532  1303               	bcf	3,6	;RP1=0, select bank0
 10475  1533  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10476  1534  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10477  1535  00B2               	movwf	EEPROM_24C1025_Read_Str@range
 10478  1536  2D3A               	goto	l4549
 10479  1537                     l4547:
 10480  1537  1283               	bcf	3,5	;RP0=0, select bank0
 10481  1538  1303               	bcf	3,6	;RP1=0, select bank0
 10482  1539  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10483  153A                     l4549:
 10484                           
 10485                           ;EEPROM_24C1025.c: 283:      ctrl=chip_add;
 10486  153A  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10487  153B  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10488  153C  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10489  153D  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10490                           
 10491                           ;EEPROM_24C1025.c: 284:      ctrl<<=1;
 10492  153E  1003               	clrc
 10493  153F  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10494                           
 10495                           ;EEPROM_24C1025.c: 285:      ctrl |= 0xA0;
 10496  1540  30A0               	movlw	160
 10497  1541  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10498  1542  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10499  1543  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10500                           
 10501                           ;EEPROM_24C1025.c: 286:      ctrl |= 0b00000001;
 10502  1544  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10503                           
 10504                           ;EEPROM_24C1025.c: 287:      ctrl |= range;
 10505  1545  0832               	movf	EEPROM_24C1025_Read_Str@range,w
 10506  1546  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10507  1547  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10508  1548  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10509                           
 10510                           ;EEPROM_24C1025.c: 289:      I2C_Master_Start();
 10511  1549  160A  158A  2141  160A  118A  	fcall	_I2C_Master_Start
 10512                           
 10513                           ;EEPROM_24C1025.c: 290:      I2C_Master_Write(ctrl & 0xFE);
 10514  154E  1283               	bcf	3,5	;RP0=0, select bank0
 10515  154F  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10516  1550  39FE               	andlw	254
 10517  1551  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10518  1552  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10519  1553  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10520  1554  00A3               	movwf	I2C_Master_Write@d
 10521  1555  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10522  1556  00A4               	movwf	I2C_Master_Write@d+1
 10523  1557  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 10524                           
 10525                           ;EEPROM_24C1025.c: 291:      I2C_Master_Write(((char *)&mem_add)[1]);
 10526  155C  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10527  155D  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10528  155E  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10529  155F  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10530  1560  00A3               	movwf	I2C_Master_Write@d
 10531  1561  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10532  1562  00A4               	movwf	I2C_Master_Write@d+1
 10533  1563  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 10534                           
 10535                           ;EEPROM_24C1025.c: 292:      I2C_Master_Write(((char *)&mem_add)[0]);
 10536  1568  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10537  1569  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10538  156A  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10539  156B  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10540  156C  00A3               	movwf	I2C_Master_Write@d
 10541  156D  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10542  156E  00A4               	movwf	I2C_Master_Write@d+1
 10543  156F  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 10544                           
 10545                           ;EEPROM_24C1025.c: 293:      I2C_Master_RepeatedStart();
 10546  1574  160A  118A  2068  160A  118A  	fcall	_I2C_Master_RepeatedStart
 10547                           
 10548                           ;EEPROM_24C1025.c: 294:      I2C_Master_Write(ctrl);
 10549  1579  1283               	bcf	3,5	;RP0=0, select bank0
 10550  157A  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10551  157B  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10552  157C  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10553  157D  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10554  157E  00A3               	movwf	I2C_Master_Write@d
 10555  157F  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10556  1580  00A4               	movwf	I2C_Master_Write@d+1
 10557  1581  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 10558                           
 10559                           ;EEPROM_24C1025.c: 296:      cnt=0;
 10560  1586  01B0               	clrf	EEPROM_24C1025_Read_Str@cnt
 10561  1587                     l4571:
 10562                           
 10563                           ;EEPROM_24C1025.c: 298:            if(mem_add>0x1FFFF) break;
 10564  1587  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10565  1588  1D03               	btfss	3,2
 10566  1589  2E69               	goto	l4627
 10567  158A  3002               	movlw	2
 10568  158B  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10569  158C  1D03               	skipz
 10570  158D  2D96               	goto	u4303
 10571  158E  3000               	movlw	0
 10572  158F  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10573  1590  1D03               	skipz
 10574  1591  2D96               	goto	u4303
 10575  1592  3000               	movlw	0
 10576  1593  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10577  1594  1D03               	skipz
 10578  1595  2D96               	goto	u4303
 10579  1596                     u4303:
 10580  1596  1803               	btfsc	3,0
 10581  1597  2E69               	goto	l4627
 10582                           
 10583                           ;EEPROM_24C1025.c: 299:            if((mem_add+1)%128==0)
 10584  1598  1283               	bcf	3,5	;RP0=0, select bank0
 10585  1599  1303               	bcf	3,6	;RP1=0, select bank0
 10586  159A  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10587  159B  3E01               	addlw	1
 10588  159C  397F               	andlw	127
 10589  159D  1D03               	btfss	3,2
 10590  159E  2E39               	goto	l4615
 10591                           
 10592                           ;EEPROM_24C1025.c: 300:              {;EEPROM_24C1025.c: 301:              (*buffer)=I2C
      +                          _Master_Read(0);
 10593  159F  3000               	movlw	0
 10594  15A0  00A3               	movwf	I2C_Master_Read@a
 10595  15A1  00A4               	movwf	I2C_Master_Read@a+1
 10596  15A2  160A  158A  2462  160A  118A  	fcall	_I2C_Master_Read
 10597  15A7  0823               	movf	?_I2C_Master_Read,w
 10598  15A8  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10599  15A9  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10600  15AA  0084               	movwf	4
 10601  15AB  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10602  15AC  1783               	bsf	3,7	;select IRP bank2
 10603  15AD  0080               	movwf	0
 10604                           
 10605                           ;EEPROM_24C1025.c: 302:              I2C_Master_Stop();
 10606  15AE  160A  158A  2109  160A  118A  	fcall	_I2C_Master_Stop
 10607                           
 10608                           ;EEPROM_24C1025.c: 304:              _delay((unsigned long)((5)*(8000000/4000.0)));
 10609  15B3  300D               	movlw	13
 10610  15B4  1283               	bcf	3,5	;RP0=0, select bank0
 10611  15B5  1303               	bcf	3,6	;RP1=0, select bank0
 10612  15B6  00AF               	movwf	??_EEPROM_24C1025_Read_Str+1
 10613  15B7  30FB               	movlw	251
 10614  15B8  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10615  15B9                     u5577:
 10616  15B9  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10617  15BA  2DB9               	goto	u5577
 10618  15BB  0BAF               	decfsz	??_EEPROM_24C1025_Read_Str+1,f
 10619  15BC  2DB9               	goto	u5577
 10620                           
 10621                           ;EEPROM_24C1025.c: 305:              mem_add++;
 10622  15BD  3001               	movlw	1
 10623  15BE  1283               	bcf	3,5	;RP0=0, select bank0
 10624  15BF  1303               	bcf	3,6	;RP1=0, select bank0
 10625  15C0  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10626  15C1  3000               	movlw	0
 10627  15C2  1803               	skipnc
 10628  15C3  3001               	movlw	1
 10629  15C4  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10630  15C5  3000               	movlw	0
 10631  15C6  1803               	skipnc
 10632  15C7  3001               	movlw	1
 10633  15C8  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10634  15C9  3000               	movlw	0
 10635  15CA  1803               	skipnc
 10636  15CB  3001               	movlw	1
 10637  15CC  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10638                           
 10639                           ;EEPROM_24C1025.c: 306:              buffer++;
 10640  15CD  3001               	movlw	1
 10641  15CE  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10642  15CF  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10643  15D0  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 10644                           
 10645                           ;EEPROM_24C1025.c: 307:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10646  15D1  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10647  15D2  1D03               	btfss	3,2
 10648  15D3  2DE2               	goto	l4589
 10649  15D4  3001               	movlw	1
 10650  15D5  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10651  15D6  1D03               	skipz
 10652  15D7  2DE0               	goto	u4323
 10653  15D8  3000               	movlw	0
 10654  15D9  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10655  15DA  1D03               	skipz
 10656  15DB  2DE0               	goto	u4323
 10657  15DC  3000               	movlw	0
 10658  15DD  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10659  15DE  1D03               	skipz
 10660  15DF  2DE0               	goto	u4323
 10661  15E0                     u4323:
 10662  15E0  1C03               	btfss	3,0
 10663  15E1  2DE9               	goto	l4591
 10664  15E2                     l4589:
 10665  15E2  3008               	movlw	8
 10666  15E3  1283               	bcf	3,5	;RP0=0, select bank0
 10667  15E4  1303               	bcf	3,6	;RP1=0, select bank0
 10668  15E5  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10669  15E6  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10670  15E7  00B2               	movwf	EEPROM_24C1025_Read_Str@range
 10671  15E8  2DEC               	goto	l4593
 10672  15E9                     l4591:
 10673  15E9  1283               	bcf	3,5	;RP0=0, select bank0
 10674  15EA  1303               	bcf	3,6	;RP1=0, select bank0
 10675  15EB  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10676  15EC                     l4593:
 10677                           
 10678                           ;EEPROM_24C1025.c: 308:              ctrl=chip_add;
 10679  15EC  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10680  15ED  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10681  15EE  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10682  15EF  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10683                           
 10684                           ;EEPROM_24C1025.c: 309:              ctrl<<=1;
 10685  15F0  1003               	clrc
 10686  15F1  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10687                           
 10688                           ;EEPROM_24C1025.c: 310:              ctrl |= 0xA0;
 10689  15F2  30A0               	movlw	160
 10690  15F3  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10691  15F4  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10692  15F5  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10693                           
 10694                           ;EEPROM_24C1025.c: 311:              ctrl |= 0b00000001;
 10695  15F6  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10696                           
 10697                           ;EEPROM_24C1025.c: 312:              ctrl |= range;
 10698  15F7  0832               	movf	EEPROM_24C1025_Read_Str@range,w
 10699  15F8  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10700  15F9  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10701  15FA  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10702                           
 10703                           ;EEPROM_24C1025.c: 314:              I2C_Master_Start();
 10704  15FB  160A  158A  2141  160A  118A  	fcall	_I2C_Master_Start
 10705                           
 10706                           ;EEPROM_24C1025.c: 315:              I2C_Master_Write(ctrl & 0xFE);
 10707  1600  1283               	bcf	3,5	;RP0=0, select bank0
 10708  1601  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10709  1602  39FE               	andlw	254
 10710  1603  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10711  1604  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10712  1605  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10713  1606  00A3               	movwf	I2C_Master_Write@d
 10714  1607  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10715  1608  00A4               	movwf	I2C_Master_Write@d+1
 10716  1609  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 10717                           
 10718                           ;EEPROM_24C1025.c: 316:              I2C_Master_Write(((char *)&mem_add)[1]);
 10719  160E  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10720  160F  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10721  1610  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10722  1611  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10723  1612  00A3               	movwf	I2C_Master_Write@d
 10724  1613  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10725  1614  00A4               	movwf	I2C_Master_Write@d+1
 10726  1615  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 10727                           
 10728                           ;EEPROM_24C1025.c: 317:              I2C_Master_Write(((char *)&mem_add)[0]);
 10729  161A  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10730  161B  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10731  161C  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10732  161D  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10733  161E  00A3               	movwf	I2C_Master_Write@d
 10734  161F  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10735  1620  00A4               	movwf	I2C_Master_Write@d+1
 10736  1621  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 10737                           
 10738                           ;EEPROM_24C1025.c: 318:              I2C_Master_RepeatedStart();
 10739  1626  160A  118A  2068  160A  118A  	fcall	_I2C_Master_RepeatedStart
 10740                           
 10741                           ;EEPROM_24C1025.c: 319:              I2C_Master_Write(ctrl);
 10742  162B  1283               	bcf	3,5	;RP0=0, select bank0
 10743  162C  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10744  162D  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10745  162E  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10746  162F  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10747  1630  00A3               	movwf	I2C_Master_Write@d
 10748  1631  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10749  1632  00A4               	movwf	I2C_Master_Write@d+1
 10750  1633  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 10751                           
 10752                           ;EEPROM_24C1025.c: 320:              }
 10753  1638  2E60               	goto	l4625
 10754  1639                     l4615:
 10755                           
 10756                           ;EEPROM_24C1025.c: 322:              {;EEPROM_24C1025.c: 323:              (*buffer)=I2C
      +                          _Master_Read(1);
 10757  1639  3001               	movlw	1
 10758  163A  00A3               	movwf	I2C_Master_Read@a
 10759  163B  3000               	movlw	0
 10760  163C  00A4               	movwf	I2C_Master_Read@a+1
 10761  163D  160A  158A  2462  160A  118A  	fcall	_I2C_Master_Read
 10762  1642  0823               	movf	?_I2C_Master_Read,w
 10763  1643  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10764  1644  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10765  1645  0084               	movwf	4
 10766  1646  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10767  1647  1783               	bsf	3,7	;select IRP bank2
 10768  1648  0080               	movwf	0
 10769                           
 10770                           ;EEPROM_24C1025.c: 324:              if((*buffer)==0)break;
 10771  1649  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10772  164A  0084               	movwf	4
 10773  164B  0800               	movf	0,w
 10774  164C  1903               	btfsc	3,2
 10775  164D  2E69               	goto	l4627
 10776                           
 10777                           ;EEPROM_24C1025.c: 325:              buffer++;
 10778  164E  3001               	movlw	1
 10779  164F  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10780  1650  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10781  1651  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 10782                           
 10783                           ;EEPROM_24C1025.c: 326:              mem_add++;
 10784  1652  3001               	movlw	1
 10785  1653  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10786  1654  3000               	movlw	0
 10787  1655  1803               	skipnc
 10788  1656  3001               	movlw	1
 10789  1657  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10790  1658  3000               	movlw	0
 10791  1659  1803               	skipnc
 10792  165A  3001               	movlw	1
 10793  165B  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10794  165C  3000               	movlw	0
 10795  165D  1803               	skipnc
 10796  165E  3001               	movlw	1
 10797  165F  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10798  1660                     l4625:
 10799                           
 10800                           ;EEPROM_24C1025.c: 328:        }while((cnt++)<64);
 10801  1660  3001               	movlw	1
 10802  1661  07B0               	addwf	EEPROM_24C1025_Read_Str@cnt,f
 10803  1662  30FF               	movlw	-1
 10804  1663  0730               	addwf	EEPROM_24C1025_Read_Str@cnt,w
 10805  1664  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10806  1665  3040               	movlw	64
 10807  1666  022E               	subwf	??_EEPROM_24C1025_Read_Str,w
 10808  1667  1C03               	skipc
 10809  1668  2D87               	goto	l4571
 10810  1669                     l4627:
 10811                           
 10812                           ;EEPROM_24C1025.c: 330:      I2C_Master_Read(0);
 10813  1669  3000               	movlw	0
 10814  166A  1283               	bcf	3,5	;RP0=0, select bank0
 10815  166B  1303               	bcf	3,6	;RP1=0, select bank0
 10816  166C  00A3               	movwf	I2C_Master_Read@a
 10817  166D  00A4               	movwf	I2C_Master_Read@a+1
 10818  166E  160A  158A  2462  160A  118A  	fcall	_I2C_Master_Read
 10819                           
 10820                           ;EEPROM_24C1025.c: 331:      I2C_Master_Stop();
 10821  1673  160A  158A  2109  160A  118A  	fcall	_I2C_Master_Stop
 10822                           
 10823                           ;EEPROM_24C1025.c: 332:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 10824  1678  30B9               	movlw	185
 10825  1679  1283               	bcf	3,5	;RP0=0, select bank0
 10826  167A  1303               	bcf	3,6	;RP1=0, select bank0
 10827  167B  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10828  167C                     u5587:
 10829  167C  2E7D               	nop2
 10830  167D  2E7E               	nop2
 10831  167E  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10832  167F  2E7C               	goto	u5587
 10833  1680  2E81               	nop2
 10834  1681  0008               	return
 10835  1682                     __end_of_EEPROM_24C1025_Read_Str:
 10836                           
 10837                           	psect	text42
 10838  1AD4                     __ptext42:	
 10839 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 10840 ;; Defined at:
 10841 ;;		line 360 in file "EEPROM_24C1025.c"
 10842 ;; Parameters:    Size  Location     Type
 10843 ;;  chip_add        1    wreg     unsigned char 
 10844 ;;  mem_add         4   22[BANK0 ] unsigned long 
 10845 ;; Auto vars:     Size  Location     Type
 10846 ;;  chip_add        1   28[BANK0 ] unsigned char 
 10847 ;;  data            2   29[BANK0 ] unsigned char [2]
 10848 ;; Return value:  Size  Location     Type
 10849 ;;                  2   22[BANK0 ] unsigned int 
 10850 ;; Registers used:
 10851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10852 ;; Tracked objects:
 10853 ;;		On entry : 300/300
 10854 ;;		On exit  : 300/0
 10855 ;;		Unchanged: 0/0
 10856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10857 ;;      Params:         0       4       0       0       0
 10858 ;;      Locals:         0       3       0       0       0
 10859 ;;      Temps:          0       2       0       0       0
 10860 ;;      Totals:         0       9       0       0       0
 10861 ;;Total ram usage:        9 bytes
 10862 ;; Hardware stack levels used: 1
 10863 ;; Hardware stack levels required when called: 4
 10864 ;; This function calls:
 10865 ;;		_EEPROM_24C1025_Read_Buffer
 10866 ;; This function is called by:
 10867 ;;		_Decodify_Command
 10868 ;; This function uses a non-reentrant model
 10869 ;;
 10870                           
 10871                           
 10872                           ;psect for function _EEPROM_24C1025_Read_Int
 10873  1AD4                     _EEPROM_24C1025_Read_Int:
 10874                           
 10875                           ;incstack = 0
 10876                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 10877                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 10878  1AD4  1283               	bcf	3,5	;RP0=0, select bank0
 10879  1AD5  1303               	bcf	3,6	;RP1=0, select bank0
 10880  1AD6  00BC               	movwf	EEPROM_24C1025_Read_Int@chip_add
 10881                           
 10882                           ;EEPROM_24C1025.c: 361:     char data[2];;EEPROM_24C1025.c: 362:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 10883  1AD7  0839               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 10884  1AD8  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 10885  1AD9  0838               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 10886  1ADA  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 10887  1ADB  0837               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 10888  1ADC  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 10889  1ADD  0836               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 10890  1ADE  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 10891  1ADF  3002               	movlw	2
 10892  1AE0  00BA               	movwf	??_EEPROM_24C1025_Read_Int
 10893  1AE1  083A               	movf	??_EEPROM_24C1025_Read_Int,w
 10894  1AE2  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 10895  1AE3  303D               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 10896  1AE4  00BB               	movwf	??_EEPROM_24C1025_Read_Int+1
 10897  1AE5  083B               	movf	??_EEPROM_24C1025_Read_Int+1,w
 10898  1AE6  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 10899  1AE7  083C               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 10900  1AE8  120A  118A  2678   	fcall	_EEPROM_24C1025_Read_Buffer
 10901                           
 10902                           ;EEPROM_24C1025.c: 363:     return (data[0]<<8)+data[1];
 10903  1AEB  1283               	bcf	3,5	;RP0=0, select bank0
 10904  1AEC  1303               	bcf	3,6	;RP1=0, select bank0
 10905  1AED  083D               	movf	EEPROM_24C1025_Read_Int@data,w
 10906  1AEE  00BA               	movwf	??_EEPROM_24C1025_Read_Int
 10907  1AEF  01BB               	clrf	??_EEPROM_24C1025_Read_Int+1
 10908  1AF0  083A               	movf	??_EEPROM_24C1025_Read_Int,w
 10909  1AF1  00BB               	movwf	??_EEPROM_24C1025_Read_Int+1
 10910  1AF2  01BA               	clrf	??_EEPROM_24C1025_Read_Int
 10911  1AF3  083E               	movf	EEPROM_24C1025_Read_Int@data+1,w
 10912  1AF4  073A               	addwf	??_EEPROM_24C1025_Read_Int,w
 10913  1AF5  00B6               	movwf	?_EEPROM_24C1025_Read_Int
 10914  1AF6  3000               	movlw	0
 10915  1AF7  1803               	skipnc
 10916  1AF8  3001               	movlw	1
 10917  1AF9  073B               	addwf	??_EEPROM_24C1025_Read_Int+1,w
 10918  1AFA  00B7               	movwf	?_EEPROM_24C1025_Read_Int+1
 10919  1AFB  0008               	return
 10920  1AFC                     __end_of_EEPROM_24C1025_Read_Int:
 10921                           
 10922                           	psect	text43
 10923  19AA                     __ptext43:	
 10924 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 10925 ;; Defined at:
 10926 ;;		line 346 in file "EEPROM_24C1025.c"
 10927 ;; Parameters:    Size  Location     Type
 10928 ;;  chip_add        1    wreg     unsigned char 
 10929 ;;  mem_add         4   22[BANK0 ] unsigned long 
 10930 ;; Auto vars:     Size  Location     Type
 10931 ;;  chip_add        1   27[BANK0 ] unsigned char 
 10932 ;;  data            1   28[BANK0 ] unsigned char 
 10933 ;; Return value:  Size  Location     Type
 10934 ;;                  1    wreg      unsigned char 
 10935 ;; Registers used:
 10936 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10937 ;; Tracked objects:
 10938 ;;		On entry : 300/300
 10939 ;;		On exit  : 300/0
 10940 ;;		Unchanged: 0/0
 10941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10942 ;;      Params:         0       4       0       0       0
 10943 ;;      Locals:         0       2       0       0       0
 10944 ;;      Temps:          0       1       0       0       0
 10945 ;;      Totals:         0       7       0       0       0
 10946 ;;Total ram usage:        7 bytes
 10947 ;; Hardware stack levels used: 1
 10948 ;; Hardware stack levels required when called: 4
 10949 ;; This function calls:
 10950 ;;		_EEPROM_24C1025_Read_Buffer
 10951 ;; This function is called by:
 10952 ;;		_Decodify_Command
 10953 ;; This function uses a non-reentrant model
 10954 ;;
 10955                           
 10956                           
 10957                           ;psect for function _EEPROM_24C1025_Read_Byte
 10958  19AA                     _EEPROM_24C1025_Read_Byte:
 10959                           
 10960                           ;incstack = 0
 10961                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 10962                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 10963  19AA  1283               	bcf	3,5	;RP0=0, select bank0
 10964  19AB  1303               	bcf	3,6	;RP1=0, select bank0
 10965  19AC  00BB               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 10966                           
 10967                           ;EEPROM_24C1025.c: 347:     char data;;EEPROM_24C1025.c: 348:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 10968  19AD  0839               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 10969  19AE  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 10970  19AF  0838               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 10971  19B0  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 10972  19B1  0837               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 10973  19B2  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 10974  19B3  0836               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 10975  19B4  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 10976  19B5  01AE               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 10977  19B6  0AAE               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 10978  19B7  303C               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 10979  19B8  00BA               	movwf	??_EEPROM_24C1025_Read_Byte
 10980  19B9  083A               	movf	??_EEPROM_24C1025_Read_Byte,w
 10981  19BA  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 10982  19BB  083B               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 10983  19BC  120A  118A  2678   	fcall	_EEPROM_24C1025_Read_Buffer
 10984                           
 10985                           ;EEPROM_24C1025.c: 349:     return data;
 10986  19BF  1283               	bcf	3,5	;RP0=0, select bank0
 10987  19C0  1303               	bcf	3,6	;RP1=0, select bank0
 10988  19C1  083C               	movf	EEPROM_24C1025_Read_Byte@data,w
 10989  19C2  0008               	return
 10990  19C3                     __end_of_EEPROM_24C1025_Read_Byte:
 10991                           
 10992                           	psect	text44
 10993  0678                     __ptext44:	
 10994 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 10995 ;; Defined at:
 10996 ;;		line 77 in file "EEPROM_24C1025.c"
 10997 ;; Parameters:    Size  Location     Type
 10998 ;;  chip_add        1    wreg     unsigned char 
 10999 ;;  mem_add         4   10[BANK0 ] unsigned long 
 11000 ;;  sizedata        1   14[BANK0 ] unsigned char 
 11001 ;;  data            1   15[BANK0 ] PTR unsigned char 
 11002 ;;		 -> EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), 
 11003 ;; Auto vars:     Size  Location     Type
 11004 ;;  chip_add        1   19[BANK0 ] unsigned char 
 11005 ;;  cnt             1   18[BANK0 ] unsigned char 
 11006 ;;  ctrl            1   21[BANK0 ] unsigned char 
 11007 ;;  range           1   20[BANK0 ] unsigned char 
 11008 ;;  cnt             1    0        unsigned char 
 11009 ;; Return value:  Size  Location     Type
 11010 ;;                  1    wreg      void 
 11011 ;; Registers used:
 11012 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11013 ;; Tracked objects:
 11014 ;;		On entry : 300/0
 11015 ;;		On exit  : 0/0
 11016 ;;		Unchanged: 0/0
 11017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11018 ;;      Params:         0       6       0       0       0
 11019 ;;      Locals:         0       4       0       0       0
 11020 ;;      Temps:          0       2       0       0       0
 11021 ;;      Totals:         0      12       0       0       0
 11022 ;;Total ram usage:       12 bytes
 11023 ;; Hardware stack levels used: 1
 11024 ;; Hardware stack levels required when called: 3
 11025 ;; This function calls:
 11026 ;;		_I2C_Master_Read
 11027 ;;		_I2C_Master_RepeatedStart
 11028 ;;		_I2C_Master_Start
 11029 ;;		_I2C_Master_Stop
 11030 ;;		_I2C_Master_Write
 11031 ;;		_my_delay_ms_WDT
 11032 ;; This function is called by:
 11033 ;;		_EEPROM_24C1025_Read_Byte
 11034 ;;		_EEPROM_24C1025_Read_Int
 11035 ;; This function uses a non-reentrant model
 11036 ;;
 11037                           
 11038                           
 11039                           ;psect for function _EEPROM_24C1025_Read_Buffer
 11040  0678                     _EEPROM_24C1025_Read_Buffer:
 11041                           
 11042                           ;incstack = 0
 11043                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
 11044                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 11045  0678  00B3               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 11046                           
 11047                           ;EEPROM_24C1025.c: 83:      unsigned char range=0;
 11048  0679  01B4               	clrf	EEPROM_24C1025_Read_Buffer@range
 11049                           
 11050                           ;EEPROM_24C1025.c: 84:      unsigned char ctrl;;EEPROM_24C1025.c: 86:      Delay_Led_Mem
      +                          ory=20;
 11051  067A  3014               	movlw	20
 11052  067B  1683               	bsf	3,5	;RP0=1, select bank1
 11053  067C  00DD               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 11054  067D  3000               	movlw	0
 11055  067E  00DE               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 11056                           
 11057                           ;EEPROM_24C1025.c: 88:      if(mem_add>0x1FFFF) return;
 11058  067F  1283               	bcf	3,5	;RP0=0, select bank0
 11059  0680  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11060  0681  1D03               	btfss	3,2
 11061  0682  0008               	return
 11062  0683  3002               	movlw	2
 11063  0684  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11064  0685  1D03               	skipz
 11065  0686  2E8F               	goto	u2873
 11066  0687  3000               	movlw	0
 11067  0688  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11068  0689  1D03               	skipz
 11069  068A  2E8F               	goto	u2873
 11070  068B  3000               	movlw	0
 11071  068C  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11072  068D  1D03               	skipz
 11073  068E  2E8F               	goto	u2873
 11074  068F                     u2873:
 11075  068F  1803               	btfsc	3,0
 11076  0690  0008               	return
 11077                           
 11078                           ;EEPROM_24C1025.c: 90:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11079  0691  1283               	bcf	3,5	;RP0=0, select bank0
 11080  0692  1303               	bcf	3,6	;RP1=0, select bank0
 11081  0693  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11082  0694  1D03               	btfss	3,2
 11083  0695  2EA4               	goto	l3739
 11084  0696  3001               	movlw	1
 11085  0697  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11086  0698  1D03               	skipz
 11087  0699  2EA2               	goto	u2883
 11088  069A  3000               	movlw	0
 11089  069B  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11090  069C  1D03               	skipz
 11091  069D  2EA2               	goto	u2883
 11092  069E  3000               	movlw	0
 11093  069F  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11094  06A0  1D03               	skipz
 11095  06A1  2EA2               	goto	u2883
 11096  06A2                     u2883:
 11097  06A2  1C03               	btfss	3,0
 11098  06A3  2EAB               	goto	l3741
 11099  06A4                     l3739:
 11100  06A4  3008               	movlw	8
 11101  06A5  1283               	bcf	3,5	;RP0=0, select bank0
 11102  06A6  1303               	bcf	3,6	;RP1=0, select bank0
 11103  06A7  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11104  06A8  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11105  06A9  00B4               	movwf	EEPROM_24C1025_Read_Buffer@range
 11106  06AA  2EAE               	goto	l3743
 11107  06AB                     l3741:
 11108  06AB  1283               	bcf	3,5	;RP0=0, select bank0
 11109  06AC  1303               	bcf	3,6	;RP1=0, select bank0
 11110  06AD  01B4               	clrf	EEPROM_24C1025_Read_Buffer@range
 11111  06AE                     l3743:
 11112                           
 11113                           ;EEPROM_24C1025.c: 91:      ctrl=chip_add;
 11114  06AE  0833               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11115  06AF  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11116  06B0  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11117  06B1  00B5               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11118                           
 11119                           ;EEPROM_24C1025.c: 92:      ctrl<<=1;
 11120  06B2  1003               	clrc
 11121  06B3  0DB5               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11122                           
 11123                           ;EEPROM_24C1025.c: 93:      ctrl |= 0xA0;
 11124  06B4  30A0               	movlw	160
 11125  06B5  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11126  06B6  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11127  06B7  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11128                           
 11129                           ;EEPROM_24C1025.c: 94:      ctrl |= 0b00000001;
 11130  06B8  1435               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11131                           
 11132                           ;EEPROM_24C1025.c: 95:      ctrl |= range;
 11133  06B9  0834               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11134  06BA  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11135  06BB  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11136  06BC  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11137                           
 11138                           ;EEPROM_24C1025.c: 97:      I2C_Master_Start();
 11139  06BD  160A  158A  2141  120A  118A  	fcall	_I2C_Master_Start
 11140                           
 11141                           ;EEPROM_24C1025.c: 98:      I2C_Master_Write(ctrl & 0xFE);
 11142  06C2  1283               	bcf	3,5	;RP0=0, select bank0
 11143  06C3  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11144  06C4  39FE               	andlw	254
 11145  06C5  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11146  06C6  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11147  06C7  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11148  06C8  00A3               	movwf	I2C_Master_Write@d
 11149  06C9  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11150  06CA  00A4               	movwf	I2C_Master_Write@d+1
 11151  06CB  160A  158A  2126  120A  118A  	fcall	_I2C_Master_Write
 11152                           
 11153                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(((char *)&mem_add)[1]);
 11154  06D0  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11155  06D1  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11156  06D2  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11157  06D3  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11158  06D4  00A3               	movwf	I2C_Master_Write@d
 11159  06D5  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11160  06D6  00A4               	movwf	I2C_Master_Write@d+1
 11161  06D7  160A  158A  2126  120A  118A  	fcall	_I2C_Master_Write
 11162                           
 11163                           ;EEPROM_24C1025.c: 100:      I2C_Master_Write(((char *)&mem_add)[0]);
 11164  06DC  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11165  06DD  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11166  06DE  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11167  06DF  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11168  06E0  00A3               	movwf	I2C_Master_Write@d
 11169  06E1  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11170  06E2  00A4               	movwf	I2C_Master_Write@d+1
 11171  06E3  160A  158A  2126  120A  118A  	fcall	_I2C_Master_Write
 11172                           
 11173                           ;EEPROM_24C1025.c: 101:      I2C_Master_RepeatedStart();
 11174  06E8  160A  118A  2068  120A  118A  	fcall	_I2C_Master_RepeatedStart
 11175                           
 11176                           ;EEPROM_24C1025.c: 102:      I2C_Master_Write(ctrl);
 11177  06ED  1283               	bcf	3,5	;RP0=0, select bank0
 11178  06EE  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11179  06EF  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11180  06F0  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11181  06F1  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11182  06F2  00A3               	movwf	I2C_Master_Write@d
 11183  06F3  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11184  06F4  00A4               	movwf	I2C_Master_Write@d+1
 11185  06F5  160A  158A  2126  120A  118A  	fcall	_I2C_Master_Write
 11186                           
 11187                           ;EEPROM_24C1025.c: 104:      for(char cnt=0;cnt<(sizedata);cnt++)
 11188  06FA  01B2               	clrf	EEPROM_24C1025_Read_Buffer@cnt_108
 11189  06FB                     l3817:
 11190  06FB  082E               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 11191  06FC  0232               	subwf	EEPROM_24C1025_Read_Buffer@cnt_108,w
 11192  06FD  1803               	btfsc	3,0
 11193  06FE  2FDD               	goto	l3819
 11194  06FF  0064               	clrwdt	;# 
 11195                           
 11196                           ;EEPROM_24C1025.c: 107:            if(mem_add>0x1FFFF) break;
 11197  0700  1283               	bcf	3,5	;RP0=0, select bank0
 11198  0701  1303               	bcf	3,6	;RP1=0, select bank0
 11199  0702  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11200  0703  1D03               	btfss	3,2
 11201  0704  2FDD               	goto	l3819
 11202  0705  3002               	movlw	2
 11203  0706  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11204  0707  1D03               	skipz
 11205  0708  2F11               	goto	u2893
 11206  0709  3000               	movlw	0
 11207  070A  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11208  070B  1D03               	skipz
 11209  070C  2F11               	goto	u2893
 11210  070D  3000               	movlw	0
 11211  070E  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11212  070F  1D03               	skipz
 11213  0710  2F11               	goto	u2893
 11214  0711                     u2893:
 11215  0711  1803               	btfsc	3,0
 11216  0712  2FDD               	goto	l3819
 11217                           
 11218                           ;EEPROM_24C1025.c: 108:            if((mem_add+1)%128==0)
 11219  0713  1283               	bcf	3,5	;RP0=0, select bank0
 11220  0714  1303               	bcf	3,6	;RP1=0, select bank0
 11221  0715  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11222  0716  3E01               	addlw	1
 11223  0717  397F               	andlw	127
 11224  0718  1D03               	btfss	3,2
 11225  0719  2FB6               	goto	l3809
 11226                           
 11227                           ;EEPROM_24C1025.c: 109:              {;EEPROM_24C1025.c: 110:              (*data)=I2C_M
      +                          aster_Read(0);
 11228  071A  3000               	movlw	0
 11229  071B  00A3               	movwf	I2C_Master_Read@a
 11230  071C  00A4               	movwf	I2C_Master_Read@a+1
 11231  071D  160A  158A  2462  120A  118A  	fcall	_I2C_Master_Read
 11232  0722  0823               	movf	?_I2C_Master_Read,w
 11233  0723  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11234  0724  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 11235  0725  0084               	movwf	4
 11236  0726  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11237  0727  1383               	bcf	3,7	;select IRP bank0
 11238  0728  0080               	movwf	0
 11239                           
 11240                           ;EEPROM_24C1025.c: 111:              I2C_Master_Stop();
 11241  0729  160A  158A  2109  120A  118A  	fcall	_I2C_Master_Stop
 11242                           
 11243                           ;EEPROM_24C1025.c: 113:              my_delay_ms_WDT(5);
 11244  072E  3000               	movlw	0
 11245  072F  1283               	bcf	3,5	;RP0=0, select bank0
 11246  0730  00A3               	movwf	my_delay_ms_WDT@time+3
 11247  0731  3000               	movlw	0
 11248  0732  00A2               	movwf	my_delay_ms_WDT@time+2
 11249  0733  3000               	movlw	0
 11250  0734  00A1               	movwf	my_delay_ms_WDT@time+1
 11251  0735  3005               	movlw	5
 11252  0736  00A0               	movwf	my_delay_ms_WDT@time
 11253  0737  160A  158A  2504  120A  118A  	fcall	_my_delay_ms_WDT
 11254                           
 11255                           ;EEPROM_24C1025.c: 114:              mem_add++;
 11256  073C  3001               	movlw	1
 11257  073D  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11258  073E  3000               	movlw	0
 11259  073F  1803               	skipnc
 11260  0740  3001               	movlw	1
 11261  0741  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11262  0742  3000               	movlw	0
 11263  0743  1803               	skipnc
 11264  0744  3001               	movlw	1
 11265  0745  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11266  0746  3000               	movlw	0
 11267  0747  1803               	skipnc
 11268  0748  3001               	movlw	1
 11269  0749  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11270                           
 11271                           ;EEPROM_24C1025.c: 115:              data++;
 11272  074A  3001               	movlw	1
 11273  074B  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11274  074C  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11275  074D  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 11276                           
 11277                           ;EEPROM_24C1025.c: 116:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11278  074E  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11279  074F  1D03               	btfss	3,2
 11280  0750  2F5F               	goto	l3783
 11281  0751  3001               	movlw	1
 11282  0752  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11283  0753  1D03               	skipz
 11284  0754  2F5D               	goto	u2913
 11285  0755  3000               	movlw	0
 11286  0756  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11287  0757  1D03               	skipz
 11288  0758  2F5D               	goto	u2913
 11289  0759  3000               	movlw	0
 11290  075A  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11291  075B  1D03               	skipz
 11292  075C  2F5D               	goto	u2913
 11293  075D                     u2913:
 11294  075D  1C03               	btfss	3,0
 11295  075E  2F66               	goto	l3785
 11296  075F                     l3783:
 11297  075F  3008               	movlw	8
 11298  0760  1283               	bcf	3,5	;RP0=0, select bank0
 11299  0761  1303               	bcf	3,6	;RP1=0, select bank0
 11300  0762  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11301  0763  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11302  0764  00B4               	movwf	EEPROM_24C1025_Read_Buffer@range
 11303  0765  2F69               	goto	l3787
 11304  0766                     l3785:
 11305  0766  1283               	bcf	3,5	;RP0=0, select bank0
 11306  0767  1303               	bcf	3,6	;RP1=0, select bank0
 11307  0768  01B4               	clrf	EEPROM_24C1025_Read_Buffer@range
 11308  0769                     l3787:
 11309                           
 11310                           ;EEPROM_24C1025.c: 117:              ctrl=chip_add;
 11311  0769  0833               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11312  076A  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11313  076B  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11314  076C  00B5               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11315                           
 11316                           ;EEPROM_24C1025.c: 118:              ctrl<<=1;
 11317  076D  1003               	clrc
 11318  076E  0DB5               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11319                           
 11320                           ;EEPROM_24C1025.c: 119:              ctrl |= 0xA0;
 11321  076F  30A0               	movlw	160
 11322  0770  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11323  0771  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11324  0772  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11325                           
 11326                           ;EEPROM_24C1025.c: 120:              ctrl |= 0b00000001;
 11327  0773  1435               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11328                           
 11329                           ;EEPROM_24C1025.c: 121:              ctrl |= range;
 11330  0774  0834               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11331  0775  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11332  0776  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11333  0777  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11334                           
 11335                           ;EEPROM_24C1025.c: 123:              I2C_Master_Start();
 11336  0778  160A  158A  2141  120A  118A  	fcall	_I2C_Master_Start
 11337                           
 11338                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl & 0xFE);
 11339  077D  1283               	bcf	3,5	;RP0=0, select bank0
 11340  077E  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11341  077F  39FE               	andlw	254
 11342  0780  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11343  0781  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11344  0782  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11345  0783  00A3               	movwf	I2C_Master_Write@d
 11346  0784  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11347  0785  00A4               	movwf	I2C_Master_Write@d+1
 11348  0786  160A  158A  2126  120A  118A  	fcall	_I2C_Master_Write
 11349                           
 11350                           ;EEPROM_24C1025.c: 125:              I2C_Master_Write(((char *)&mem_add)[1]);
 11351  078B  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11352  078C  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11353  078D  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11354  078E  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11355  078F  00A3               	movwf	I2C_Master_Write@d
 11356  0790  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11357  0791  00A4               	movwf	I2C_Master_Write@d+1
 11358  0792  160A  158A  2126  120A  118A  	fcall	_I2C_Master_Write
 11359                           
 11360                           ;EEPROM_24C1025.c: 126:              I2C_Master_Write(((char *)&mem_add)[0]);
 11361  0797  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11362  0798  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11363  0799  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11364  079A  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11365  079B  00A3               	movwf	I2C_Master_Write@d
 11366  079C  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11367  079D  00A4               	movwf	I2C_Master_Write@d+1
 11368  079E  160A  158A  2126  120A  118A  	fcall	_I2C_Master_Write
 11369                           
 11370                           ;EEPROM_24C1025.c: 127:              I2C_Master_RepeatedStart();
 11371  07A3  160A  118A  2068  120A  118A  	fcall	_I2C_Master_RepeatedStart
 11372                           
 11373                           ;EEPROM_24C1025.c: 128:              I2C_Master_Write(ctrl);
 11374  07A8  1283               	bcf	3,5	;RP0=0, select bank0
 11375  07A9  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11376  07AA  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11377  07AB  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11378  07AC  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11379  07AD  00A3               	movwf	I2C_Master_Write@d
 11380  07AE  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11381  07AF  00A4               	movwf	I2C_Master_Write@d+1
 11382  07B0  160A  158A  2126  120A  118A  	fcall	_I2C_Master_Write
 11383                           
 11384                           ;EEPROM_24C1025.c: 129:              }
 11385  07B5  2FD8               	goto	l3815
 11386  07B6                     l3809:
 11387                           
 11388                           ;EEPROM_24C1025.c: 131:              {;EEPROM_24C1025.c: 132:              (*data)=I2C_M
      +                          aster_Read(1);
 11389  07B6  3001               	movlw	1
 11390  07B7  00A3               	movwf	I2C_Master_Read@a
 11391  07B8  3000               	movlw	0
 11392  07B9  00A4               	movwf	I2C_Master_Read@a+1
 11393  07BA  160A  158A  2462  120A  118A  	fcall	_I2C_Master_Read
 11394  07BF  0823               	movf	?_I2C_Master_Read,w
 11395  07C0  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11396  07C1  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 11397  07C2  0084               	movwf	4
 11398  07C3  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11399  07C4  1383               	bcf	3,7	;select IRP bank0
 11400  07C5  0080               	movwf	0
 11401                           
 11402                           ;EEPROM_24C1025.c: 133:              data++;
 11403  07C6  3001               	movlw	1
 11404  07C7  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11405  07C8  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11406  07C9  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 11407                           
 11408                           ;EEPROM_24C1025.c: 134:              mem_add++;
 11409  07CA  3001               	movlw	1
 11410  07CB  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11411  07CC  3000               	movlw	0
 11412  07CD  1803               	skipnc
 11413  07CE  3001               	movlw	1
 11414  07CF  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11415  07D0  3000               	movlw	0
 11416  07D1  1803               	skipnc
 11417  07D2  3001               	movlw	1
 11418  07D3  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11419  07D4  3000               	movlw	0
 11420  07D5  1803               	skipnc
 11421  07D6  3001               	movlw	1
 11422  07D7  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11423  07D8                     l3815:
 11424                           
 11425                           ;EEPROM_24C1025.c: 136:         }
 11426  07D8  3001               	movlw	1
 11427  07D9  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11428  07DA  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11429  07DB  07B2               	addwf	EEPROM_24C1025_Read_Buffer@cnt_108,f
 11430  07DC  2EFB               	goto	l3817
 11431  07DD                     l3819:
 11432                           
 11433                           ;EEPROM_24C1025.c: 137:         I2C_Master_Read(0);
 11434  07DD  3000               	movlw	0
 11435  07DE  1283               	bcf	3,5	;RP0=0, select bank0
 11436  07DF  1303               	bcf	3,6	;RP1=0, select bank0
 11437  07E0  00A3               	movwf	I2C_Master_Read@a
 11438  07E1  00A4               	movwf	I2C_Master_Read@a+1
 11439  07E2  160A  158A  2462  120A  118A  	fcall	_I2C_Master_Read
 11440                           
 11441                           ;EEPROM_24C1025.c: 138:         I2C_Master_Stop();
 11442  07E7  160A  158A  2109  120A  118A  	fcall	_I2C_Master_Stop
 11443                           
 11444                           ;EEPROM_24C1025.c: 139:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 11445  07EC  30B9               	movlw	185
 11446  07ED  1283               	bcf	3,5	;RP0=0, select bank0
 11447  07EE  1303               	bcf	3,6	;RP1=0, select bank0
 11448  07EF  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11449  07F0                     u5597:
 11450  07F0  2FF1               	nop2
 11451  07F1  2FF2               	nop2
 11452  07F2  0BB0               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 11453  07F3  2FF0               	goto	u5597
 11454  07F4  2FF5               	nop2
 11455  07F5  0008               	return
 11456  07F6                     __end_of_EEPROM_24C1025_Read_Buffer:
 11457                           
 11458                           	psect	text45
 11459  1682                     __ptext45:	
 11460 ;; *************** function _EEPROM_24C1025_Read_Buffer_USART *****************
 11461 ;; Defined at:
 11462 ;;		line 148 in file "EEPROM_24C1025.c"
 11463 ;; Parameters:    Size  Location     Type
 11464 ;;  chip_add        1    wreg     unsigned char 
 11465 ;;  mem_add         4    9[BANK0 ] unsigned long 
 11466 ;;  sizedata        1   13[BANK0 ] unsigned char 
 11467 ;;  data            1   14[BANK0 ] PTR unsigned char 
 11468 ;;		 -> buffer(33), 
 11469 ;; Auto vars:     Size  Location     Type
 11470 ;;  chip_add        1   18[BANK0 ] unsigned char 
 11471 ;;  cnt             1   17[BANK0 ] unsigned char 
 11472 ;;  ctrl            1   20[BANK0 ] unsigned char 
 11473 ;;  range           1   19[BANK0 ] unsigned char 
 11474 ;;  cnt             1    0        unsigned char 
 11475 ;; Return value:  Size  Location     Type
 11476 ;;                  1    wreg      void 
 11477 ;; Registers used:
 11478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11479 ;; Tracked objects:
 11480 ;;		On entry : 300/300
 11481 ;;		On exit  : 0/0
 11482 ;;		Unchanged: 0/0
 11483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11484 ;;      Params:         0       6       0       0       0
 11485 ;;      Locals:         0       4       0       0       0
 11486 ;;      Temps:          0       2       0       0       0
 11487 ;;      Totals:         0      12       0       0       0
 11488 ;;Total ram usage:       12 bytes
 11489 ;; Hardware stack levels used: 1
 11490 ;; Hardware stack levels required when called: 3
 11491 ;; This function calls:
 11492 ;;		_I2C_Master_Read
 11493 ;;		_I2C_Master_RepeatedStart
 11494 ;;		_I2C_Master_Start
 11495 ;;		_I2C_Master_Stop
 11496 ;;		_I2C_Master_Write
 11497 ;;		_USART_putc
 11498 ;; This function is called by:
 11499 ;;		_Decodify_Command
 11500 ;; This function uses a non-reentrant model
 11501 ;;
 11502                           
 11503                           
 11504                           ;psect for function _EEPROM_24C1025_Read_Buffer_USART
 11505  1682                     _EEPROM_24C1025_Read_Buffer_USART:
 11506                           
 11507                           ;incstack = 0
 11508                           ; Regs used in _EEPROM_24C1025_Read_Buffer_USART: [wreg-fsr0h+status,2+status,0+pclath+c
      +                          stack]
 11509                           ;EEPROM_24C1025_Read_Buffer_USART@chip_add stored from wreg
 11510  1682  1283               	bcf	3,5	;RP0=0, select bank0
 11511  1683  1303               	bcf	3,6	;RP1=0, select bank0
 11512  1684  00B2               	movwf	EEPROM_24C1025_Read_Buffer_USART@chip_add
 11513                           
 11514                           ;EEPROM_24C1025.c: 154:      unsigned char range=0;
 11515  1685  01B3               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11516                           
 11517                           ;EEPROM_24C1025.c: 155:      unsigned char ctrl;;EEPROM_24C1025.c: 157:      Delay_Led_M
      +                          emory=20;
 11518  1686  3014               	movlw	20
 11519  1687  1683               	bsf	3,5	;RP0=1, select bank1
 11520  1688  00DD               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 11521  1689  3000               	movlw	0
 11522  168A  00DE               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 11523                           
 11524                           ;EEPROM_24C1025.c: 159:      if(mem_add>0x1FFFF) return;
 11525  168B  1283               	bcf	3,5	;RP0=0, select bank0
 11526  168C  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11527  168D  1D03               	btfss	3,2
 11528  168E  0008               	return
 11529  168F  3002               	movlw	2
 11530  1690  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11531  1691  1D03               	skipz
 11532  1692  2E9B               	goto	u4163
 11533  1693  3000               	movlw	0
 11534  1694  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11535  1695  1D03               	skipz
 11536  1696  2E9B               	goto	u4163
 11537  1697  3000               	movlw	0
 11538  1698  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11539  1699  1D03               	skipz
 11540  169A  2E9B               	goto	u4163
 11541  169B                     u4163:
 11542  169B  1803               	btfsc	3,0
 11543  169C  0008               	return
 11544                           
 11545                           ;EEPROM_24C1025.c: 161:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11546  169D  1283               	bcf	3,5	;RP0=0, select bank0
 11547  169E  1303               	bcf	3,6	;RP1=0, select bank0
 11548  169F  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11549  16A0  1D03               	btfss	3,2
 11550  16A1  2EB0               	goto	l4379
 11551  16A2  3001               	movlw	1
 11552  16A3  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11553  16A4  1D03               	skipz
 11554  16A5  2EAE               	goto	u4173
 11555  16A6  3000               	movlw	0
 11556  16A7  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11557  16A8  1D03               	skipz
 11558  16A9  2EAE               	goto	u4173
 11559  16AA  3000               	movlw	0
 11560  16AB  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11561  16AC  1D03               	skipz
 11562  16AD  2EAE               	goto	u4173
 11563  16AE                     u4173:
 11564  16AE  1C03               	btfss	3,0
 11565  16AF  2EB7               	goto	l4381
 11566  16B0                     l4379:
 11567  16B0  3008               	movlw	8
 11568  16B1  1283               	bcf	3,5	;RP0=0, select bank0
 11569  16B2  1303               	bcf	3,6	;RP1=0, select bank0
 11570  16B3  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11571  16B4  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11572  16B5  00B3               	movwf	EEPROM_24C1025_Read_Buffer_USART@range
 11573  16B6  2EBA               	goto	l4383
 11574  16B7                     l4381:
 11575  16B7  1283               	bcf	3,5	;RP0=0, select bank0
 11576  16B8  1303               	bcf	3,6	;RP1=0, select bank0
 11577  16B9  01B3               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11578  16BA                     l4383:
 11579                           
 11580                           ;EEPROM_24C1025.c: 162:      ctrl=chip_add;
 11581  16BA  0832               	movf	EEPROM_24C1025_Read_Buffer_USART@chip_add,w
 11582  16BB  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11583  16BC  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11584  16BD  00B4               	movwf	EEPROM_24C1025_Read_Buffer_USART@ctrl
 11585                           
 11586                           ;EEPROM_24C1025.c: 163:      ctrl<<=1;
 11587  16BE  1003               	clrc
 11588  16BF  0DB4               	rlf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11589                           
 11590                           ;EEPROM_24C1025.c: 164:      ctrl |= 0xA0;
 11591  16C0  30A0               	movlw	160
 11592  16C1  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11593  16C2  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11594  16C3  04B4               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11595                           
 11596                           ;EEPROM_24C1025.c: 165:      ctrl |= 0b00000001;
 11597  16C4  1434               	bsf	EEPROM_24C1025_Read_Buffer_USART@ctrl,0
 11598                           
 11599                           ;EEPROM_24C1025.c: 166:      ctrl |= range;
 11600  16C5  0833               	movf	EEPROM_24C1025_Read_Buffer_USART@range,w
 11601  16C6  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11602  16C7  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11603  16C8  04B4               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11604                           
 11605                           ;EEPROM_24C1025.c: 168:      I2C_Master_Start();
 11606  16C9  160A  158A  2141  160A  118A  	fcall	_I2C_Master_Start
 11607                           
 11608                           ;EEPROM_24C1025.c: 169:      I2C_Master_Write(ctrl & 0xFE);
 11609  16CE  1283               	bcf	3,5	;RP0=0, select bank0
 11610  16CF  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11611  16D0  39FE               	andlw	254
 11612  16D1  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11613  16D2  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11614  16D3  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11615  16D4  00A3               	movwf	I2C_Master_Write@d
 11616  16D5  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11617  16D6  00A4               	movwf	I2C_Master_Write@d+1
 11618  16D7  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 11619                           
 11620                           ;EEPROM_24C1025.c: 170:      I2C_Master_Write(((char *)&mem_add)[1]);
 11621  16DC  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11622  16DD  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11623  16DE  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11624  16DF  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11625  16E0  00A3               	movwf	I2C_Master_Write@d
 11626  16E1  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11627  16E2  00A4               	movwf	I2C_Master_Write@d+1
 11628  16E3  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 11629                           
 11630                           ;EEPROM_24C1025.c: 171:      I2C_Master_Write(((char *)&mem_add)[0]);
 11631  16E8  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11632  16E9  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11633  16EA  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11634  16EB  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11635  16EC  00A3               	movwf	I2C_Master_Write@d
 11636  16ED  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11637  16EE  00A4               	movwf	I2C_Master_Write@d+1
 11638  16EF  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 11639                           
 11640                           ;EEPROM_24C1025.c: 172:      I2C_Master_RepeatedStart();
 11641  16F4  160A  118A  2068  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11642                           
 11643                           ;EEPROM_24C1025.c: 173:      I2C_Master_Write(ctrl);
 11644  16F9  1283               	bcf	3,5	;RP0=0, select bank0
 11645  16FA  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11646  16FB  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11647  16FC  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11648  16FD  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11649  16FE  00A3               	movwf	I2C_Master_Write@d
 11650  16FF  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11651  1700  00A4               	movwf	I2C_Master_Write@d+1
 11652  1701  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 11653                           
 11654                           ;EEPROM_24C1025.c: 175:      for(char cnt=0;cnt<(sizedata);cnt++)
 11655  1706  01B1               	clrf	EEPROM_24C1025_Read_Buffer_USART@cnt_117
 11656  1707                     l4453:
 11657  1707  082D               	movf	EEPROM_24C1025_Read_Buffer_USART@sizedata,w
 11658  1708  0231               	subwf	EEPROM_24C1025_Read_Buffer_USART@cnt_117,w
 11659  1709  1803               	btfsc	3,0
 11660  170A  2FE7               	goto	l4455
 11661  170B  0064               	clrwdt	;# 
 11662                           
 11663                           ;EEPROM_24C1025.c: 178:            if(mem_add>0x1FFFF) break;
 11664  170C  1283               	bcf	3,5	;RP0=0, select bank0
 11665  170D  1303               	bcf	3,6	;RP1=0, select bank0
 11666  170E  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11667  170F  1D03               	btfss	3,2
 11668  1710  2FE7               	goto	l4455
 11669  1711  3002               	movlw	2
 11670  1712  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11671  1713  1D03               	skipz
 11672  1714  2F1D               	goto	u4183
 11673  1715  3000               	movlw	0
 11674  1716  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11675  1717  1D03               	skipz
 11676  1718  2F1D               	goto	u4183
 11677  1719  3000               	movlw	0
 11678  171A  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11679  171B  1D03               	skipz
 11680  171C  2F1D               	goto	u4183
 11681  171D                     u4183:
 11682  171D  1803               	btfsc	3,0
 11683  171E  2FE7               	goto	l4455
 11684                           
 11685                           ;EEPROM_24C1025.c: 179:            if((mem_add+1)%128==0)
 11686  171F  1283               	bcf	3,5	;RP0=0, select bank0
 11687  1720  1303               	bcf	3,6	;RP1=0, select bank0
 11688  1721  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11689  1722  3E01               	addlw	1
 11690  1723  397F               	andlw	127
 11691  1724  1D03               	btfss	3,2
 11692  1725  2FBB               	goto	l4447
 11693                           
 11694                           ;EEPROM_24C1025.c: 180:              {;EEPROM_24C1025.c: 181:              (*data)=I2C_M
      +                          aster_Read(0);
 11695  1726  3000               	movlw	0
 11696  1727  00A3               	movwf	I2C_Master_Read@a
 11697  1728  00A4               	movwf	I2C_Master_Read@a+1
 11698  1729  160A  158A  2462  160A  118A  	fcall	_I2C_Master_Read
 11699  172E  0823               	movf	?_I2C_Master_Read,w
 11700  172F  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11701  1730  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11702  1731  0084               	movwf	4
 11703  1732  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11704  1733  1783               	bsf	3,7	;select IRP bank2
 11705  1734  0080               	movwf	0
 11706                           
 11707                           ;EEPROM_24C1025.c: 182:              I2C_Master_Stop();
 11708  1735  160A  158A  2109  160A  118A  	fcall	_I2C_Master_Stop
 11709                           
 11710                           ;EEPROM_24C1025.c: 183:              USART_putc(*data);
 11711  173A  1283               	bcf	3,5	;RP0=0, select bank0
 11712  173B  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11713  173C  0084               	movwf	4
 11714  173D  1783               	bsf	3,7	;select IRP bank2
 11715  173E  0800               	movf	0,w
 11716  173F  160A  158A  2131  160A  118A  	fcall	_USART_putc
 11717                           
 11718                           ;EEPROM_24C1025.c: 186:              mem_add++;
 11719  1744  3001               	movlw	1
 11720  1745  1283               	bcf	3,5	;RP0=0, select bank0
 11721  1746  07A9               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,f
 11722  1747  3000               	movlw	0
 11723  1748  1803               	skipnc
 11724  1749  3001               	movlw	1
 11725  174A  07AA               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,f
 11726  174B  3000               	movlw	0
 11727  174C  1803               	skipnc
 11728  174D  3001               	movlw	1
 11729  174E  07AB               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,f
 11730  174F  3000               	movlw	0
 11731  1750  1803               	skipnc
 11732  1751  3001               	movlw	1
 11733  1752  07AC               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,f
 11734                           
 11735                           ;EEPROM_24C1025.c: 188:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11736  1753  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11737  1754  1D03               	btfss	3,2
 11738  1755  2F64               	goto	l4421
 11739  1756  3001               	movlw	1
 11740  1757  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11741  1758  1D03               	skipz
 11742  1759  2F62               	goto	u4203
 11743  175A  3000               	movlw	0
 11744  175B  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11745  175C  1D03               	skipz
 11746  175D  2F62               	goto	u4203
 11747  175E  3000               	movlw	0
 11748  175F  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11749  1760  1D03               	skipz
 11750  1761  2F62               	goto	u4203
 11751  1762                     u4203:
 11752  1762  1C03               	btfss	3,0
 11753  1763  2F6B               	goto	l4423
 11754  1764                     l4421:
 11755  1764  3008               	movlw	8
 11756  1765  1283               	bcf	3,5	;RP0=0, select bank0
 11757  1766  1303               	bcf	3,6	;RP1=0, select bank0
 11758  1767  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11759  1768  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11760  1769  00B3               	movwf	EEPROM_24C1025_Read_Buffer_USART@range
 11761  176A  2F6E               	goto	l4425
 11762  176B                     l4423:
 11763  176B  1283               	bcf	3,5	;RP0=0, select bank0
 11764  176C  1303               	bcf	3,6	;RP1=0, select bank0
 11765  176D  01B3               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11766  176E                     l4425:
 11767                           
 11768                           ;EEPROM_24C1025.c: 189:              ctrl=chip_add;
 11769  176E  0832               	movf	EEPROM_24C1025_Read_Buffer_USART@chip_add,w
 11770  176F  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11771  1770  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11772  1771  00B4               	movwf	EEPROM_24C1025_Read_Buffer_USART@ctrl
 11773                           
 11774                           ;EEPROM_24C1025.c: 190:              ctrl<<=1;
 11775  1772  1003               	clrc
 11776  1773  0DB4               	rlf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11777                           
 11778                           ;EEPROM_24C1025.c: 191:              ctrl |= 0xA0;
 11779  1774  30A0               	movlw	160
 11780  1775  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11781  1776  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11782  1777  04B4               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11783                           
 11784                           ;EEPROM_24C1025.c: 192:              ctrl |= 0b00000001;
 11785  1778  1434               	bsf	EEPROM_24C1025_Read_Buffer_USART@ctrl,0
 11786                           
 11787                           ;EEPROM_24C1025.c: 193:              ctrl |= range;
 11788  1779  0833               	movf	EEPROM_24C1025_Read_Buffer_USART@range,w
 11789  177A  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11790  177B  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11791  177C  04B4               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11792                           
 11793                           ;EEPROM_24C1025.c: 195:              I2C_Master_Start();
 11794  177D  160A  158A  2141  160A  118A  	fcall	_I2C_Master_Start
 11795                           
 11796                           ;EEPROM_24C1025.c: 196:              I2C_Master_Write(ctrl & 0xFE);
 11797  1782  1283               	bcf	3,5	;RP0=0, select bank0
 11798  1783  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11799  1784  39FE               	andlw	254
 11800  1785  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11801  1786  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11802  1787  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11803  1788  00A3               	movwf	I2C_Master_Write@d
 11804  1789  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11805  178A  00A4               	movwf	I2C_Master_Write@d+1
 11806  178B  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 11807                           
 11808                           ;EEPROM_24C1025.c: 197:              I2C_Master_Write(((char *)&mem_add)[1]);
 11809  1790  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11810  1791  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11811  1792  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11812  1793  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11813  1794  00A3               	movwf	I2C_Master_Write@d
 11814  1795  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11815  1796  00A4               	movwf	I2C_Master_Write@d+1
 11816  1797  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 11817                           
 11818                           ;EEPROM_24C1025.c: 198:              I2C_Master_Write(((char *)&mem_add)[0]);
 11819  179C  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11820  179D  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11821  179E  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11822  179F  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11823  17A0  00A3               	movwf	I2C_Master_Write@d
 11824  17A1  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11825  17A2  00A4               	movwf	I2C_Master_Write@d+1
 11826  17A3  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 11827                           
 11828                           ;EEPROM_24C1025.c: 199:              I2C_Master_RepeatedStart();
 11829  17A8  160A  118A  2068  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11830                           
 11831                           ;EEPROM_24C1025.c: 200:              I2C_Master_Write(ctrl);
 11832  17AD  1283               	bcf	3,5	;RP0=0, select bank0
 11833  17AE  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11834  17AF  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11835  17B0  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11836  17B1  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11837  17B2  00A3               	movwf	I2C_Master_Write@d
 11838  17B3  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11839  17B4  00A4               	movwf	I2C_Master_Write@d+1
 11840  17B5  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 11841                           
 11842                           ;EEPROM_24C1025.c: 201:              }
 11843  17BA  2FE2               	goto	l4451
 11844  17BB                     l4447:
 11845                           
 11846                           ;EEPROM_24C1025.c: 203:              {;EEPROM_24C1025.c: 204:              (*data)=I2C_M
      +                          aster_Read(1);
 11847  17BB  3001               	movlw	1
 11848  17BC  00A3               	movwf	I2C_Master_Read@a
 11849  17BD  3000               	movlw	0
 11850  17BE  00A4               	movwf	I2C_Master_Read@a+1
 11851  17BF  160A  158A  2462  160A  118A  	fcall	_I2C_Master_Read
 11852  17C4  0823               	movf	?_I2C_Master_Read,w
 11853  17C5  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11854  17C6  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11855  17C7  0084               	movwf	4
 11856  17C8  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11857  17C9  1783               	bsf	3,7	;select IRP bank2
 11858  17CA  0080               	movwf	0
 11859                           
 11860                           ;EEPROM_24C1025.c: 205:              USART_putc(*data);
 11861  17CB  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11862  17CC  0084               	movwf	4
 11863  17CD  0800               	movf	0,w
 11864  17CE  160A  158A  2131  160A  118A  	fcall	_USART_putc
 11865                           
 11866                           ;EEPROM_24C1025.c: 207:              mem_add++;
 11867  17D3  3001               	movlw	1
 11868  17D4  1283               	bcf	3,5	;RP0=0, select bank0
 11869  17D5  07A9               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,f
 11870  17D6  3000               	movlw	0
 11871  17D7  1803               	skipnc
 11872  17D8  3001               	movlw	1
 11873  17D9  07AA               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,f
 11874  17DA  3000               	movlw	0
 11875  17DB  1803               	skipnc
 11876  17DC  3001               	movlw	1
 11877  17DD  07AB               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,f
 11878  17DE  3000               	movlw	0
 11879  17DF  1803               	skipnc
 11880  17E0  3001               	movlw	1
 11881  17E1  07AC               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,f
 11882  17E2                     l4451:
 11883                           
 11884                           ;EEPROM_24C1025.c: 209:         }
 11885  17E2  3001               	movlw	1
 11886  17E3  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11887  17E4  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11888  17E5  07B1               	addwf	EEPROM_24C1025_Read_Buffer_USART@cnt_117,f
 11889  17E6  2F07               	goto	l4453
 11890  17E7                     l4455:
 11891                           
 11892                           ;EEPROM_24C1025.c: 210:         I2C_Master_Read(0);
 11893  17E7  3000               	movlw	0
 11894  17E8  1283               	bcf	3,5	;RP0=0, select bank0
 11895  17E9  1303               	bcf	3,6	;RP1=0, select bank0
 11896  17EA  00A3               	movwf	I2C_Master_Read@a
 11897  17EB  00A4               	movwf	I2C_Master_Read@a+1
 11898  17EC  160A  158A  2462  160A  118A  	fcall	_I2C_Master_Read
 11899                           
 11900                           ;EEPROM_24C1025.c: 211:         I2C_Master_Stop();
 11901  17F1  160A  158A  2109  160A  118A  	fcall	_I2C_Master_Stop
 11902                           
 11903                           ;EEPROM_24C1025.c: 212:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 11904  17F6  30B9               	movlw	185
 11905  17F7  1283               	bcf	3,5	;RP0=0, select bank0
 11906  17F8  1303               	bcf	3,6	;RP1=0, select bank0
 11907  17F9  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11908  17FA                     u5607:
 11909  17FA  2FFB               	nop2
 11910  17FB  2FFC               	nop2
 11911  17FC  0BAF               	decfsz	??_EEPROM_24C1025_Read_Buffer_USART,f
 11912  17FD  2FFA               	goto	u5607
 11913  17FE  2FFF               	nop2
 11914  17FF  0008               	return
 11915  1800                     __end_of_EEPROM_24C1025_Read_Buffer_USART:
 11916                           
 11917                           	psect	text46
 11918  1931                     __ptext46:	
 11919 ;; *************** function _USART_putc *****************
 11920 ;; Defined at:
 11921 ;;		line 89 in file "usart.c"
 11922 ;; Parameters:    Size  Location     Type
 11923 ;;  value           1    wreg     unsigned char 
 11924 ;; Auto vars:     Size  Location     Type
 11925 ;;  value           1    0[BANK0 ] unsigned char 
 11926 ;; Return value:  Size  Location     Type
 11927 ;;                  1    wreg      void 
 11928 ;; Registers used:
 11929 ;;		wreg
 11930 ;; Tracked objects:
 11931 ;;		On entry : 0/100
 11932 ;;		On exit  : 300/100
 11933 ;;		Unchanged: 0/0
 11934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11935 ;;      Params:         0       0       0       0       0
 11936 ;;      Locals:         0       1       0       0       0
 11937 ;;      Temps:          0       0       0       0       0
 11938 ;;      Totals:         0       1       0       0       0
 11939 ;;Total ram usage:        1 bytes
 11940 ;; Hardware stack levels used: 1
 11941 ;; Hardware stack levels required when called: 1
 11942 ;; This function calls:
 11943 ;;		Nothing
 11944 ;; This function is called by:
 11945 ;;		_EEPROM_24C1025_Read_Buffer_USART
 11946 ;;		_Decodify_Command
 11947 ;;		_Send_To_MB
 11948 ;;		_PROCULUS_Control_Register_Write
 11949 ;;		_PROCULUS_VP_Write
 11950 ;;		_USART_put_int
 11951 ;;		_USART_put_string
 11952 ;; This function uses a non-reentrant model
 11953 ;;
 11954                           
 11955                           
 11956                           ;psect for function _USART_putc
 11957  1931                     _USART_putc:
 11958                           
 11959                           ;incstack = 0
 11960                           ; Regs used in _USART_putc: [wreg]
 11961                           ;USART_putc@value stored from wreg
 11962  1931  1283               	bcf	3,5	;RP0=0, select bank0
 11963  1932  1303               	bcf	3,6	;RP1=0, select bank0
 11964  1933  00A0               	movwf	USART_putc@value
 11965                           
 11966                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
 11967  1934  3014               	movlw	20
 11968  1935  1683               	bsf	3,5	;RP0=1, select bank1
 11969  1936  00DB               	movwf	_Delay_Led_Usart^(0+128)	;volatile
 11970  1937  3000               	movlw	0
 11971  1938  00DC               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
 11972  1939                     l880:	
 11973                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
 11974                           
 11975  1939  1C98               	btfss	24,1	;volatile
 11976  193A  2939               	goto	l880
 11977                           
 11978                           ;usart.c: 93:     TXREG=value;
 11979  193B  1283               	bcf	3,5	;RP0=0, select bank0
 11980  193C  0820               	movf	USART_putc@value,w
 11981  193D  0099               	movwf	25	;volatile
 11982                           
 11983                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
 11984  193E  1683               	bsf	3,5	;RP0=1, select bank1
 11985  193F  1698               	bsf	24,5	;volatile
 11986  1940  0008               	return
 11987  1941                     __end_of_USART_putc:
 11988                           
 11989                           	psect	text47
 11990  1068                     __ptext47:	
 11991 ;; *************** function _I2C_Master_RepeatedStart *****************
 11992 ;; Defined at:
 11993 ;;		line 62 in file "I2C.c"
 11994 ;; Parameters:    Size  Location     Type
 11995 ;;		None
 11996 ;; Auto vars:     Size  Location     Type
 11997 ;;		None
 11998 ;; Return value:  Size  Location     Type
 11999 ;;                  1    wreg      void 
 12000 ;; Registers used:
 12001 ;;		wreg, status,2, status,0, pclath, cstack
 12002 ;; Tracked objects:
 12003 ;;		On entry : 300/0
 12004 ;;		On exit  : 200/0
 12005 ;;		Unchanged: 0/0
 12006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12007 ;;      Params:         0       0       0       0       0
 12008 ;;      Locals:         0       0       0       0       0
 12009 ;;      Temps:          0       0       0       0       0
 12010 ;;      Totals:         0       0       0       0       0
 12011 ;;Total ram usage:        0 bytes
 12012 ;; Hardware stack levels used: 1
 12013 ;; Hardware stack levels required when called: 2
 12014 ;; This function calls:
 12015 ;;		_I2C_Master_Wait
 12016 ;; This function is called by:
 12017 ;;		_EEPROM_24C1025_Read_Buffer
 12018 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12019 ;;		_EEPROM_24C1025_Read_Str
 12020 ;; This function uses a non-reentrant model
 12021 ;;
 12022                           
 12023                           
 12024                           ;psect for function _I2C_Master_RepeatedStart
 12025  1068                     _I2C_Master_RepeatedStart:
 12026                           
 12027                           ;I2C.c: 64:   if(I2C_Master_Wait())
 12028                           
 12029                           ;incstack = 0
 12030                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 12031  1068  160A  158A  226E  160A  118A  	fcall	_I2C_Master_Wait
 12032  106D  3A00               	xorlw	0
 12033  106E  1903               	skipnz
 12034  106F  0008               	return
 12035                           
 12036                           ;I2C.c: 65:     {;I2C.c: 66:     SSPCON2bits.RSEN = 1;
 12037  1070  1683               	bsf	3,5	;RP0=1, select bank1
 12038  1071  1491               	bsf	17,1	;volatile
 12039  1072  0008               	return
 12040  1073                     __end_of_I2C_Master_RepeatedStart:
 12041                           
 12042                           	psect	text48
 12043  1C62                     __ptext48:	
 12044 ;; *************** function _I2C_Master_Read *****************
 12045 ;; Defined at:
 12046 ;;		line 87 in file "I2C.c"
 12047 ;; Parameters:    Size  Location     Type
 12048 ;;  a               2    3[BANK0 ] unsigned short 
 12049 ;; Auto vars:     Size  Location     Type
 12050 ;;  temp            2    7[BANK0 ] unsigned short 
 12051 ;; Return value:  Size  Location     Type
 12052 ;;                  2    3[BANK0 ] unsigned short 
 12053 ;; Registers used:
 12054 ;;		wreg, status,2, status,0, pclath, cstack
 12055 ;; Tracked objects:
 12056 ;;		On entry : 300/0
 12057 ;;		On exit  : 300/0
 12058 ;;		Unchanged: 0/0
 12059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12060 ;;      Params:         0       2       0       0       0
 12061 ;;      Locals:         0       2       0       0       0
 12062 ;;      Temps:          0       2       0       0       0
 12063 ;;      Totals:         0       6       0       0       0
 12064 ;;Total ram usage:        6 bytes
 12065 ;; Hardware stack levels used: 1
 12066 ;; Hardware stack levels required when called: 2
 12067 ;; This function calls:
 12068 ;;		_I2C_Master_Wait
 12069 ;; This function is called by:
 12070 ;;		_EEPROM_24C1025_Read_Buffer
 12071 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12072 ;;		_EEPROM_24C1025_Read_Str
 12073 ;; This function uses a non-reentrant model
 12074 ;;
 12075                           
 12076                           
 12077                           ;psect for function _I2C_Master_Read
 12078  1C62                     _I2C_Master_Read:
 12079                           
 12080                           ;I2C.c: 87: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 88: {;I2C.c: 89:   u
      +                          nsigned short temp;;I2C.c: 90:   if(I2C_Master_Wait())SSPCON2bits.RCEN = 1;
 12081                           
 12082                           ;incstack = 0
 12083                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 12084  1C62  160A  158A  226E  160A  158A  	fcall	_I2C_Master_Wait
 12085  1C67  3A00               	xorlw	0
 12086  1C68  1683               	bsf	3,5	;RP0=1, select bank1
 12087  1C69  1D03               	btfss	3,2
 12088  1C6A  1591               	bsf	17,3	;volatile
 12089                           
 12090                           ;I2C.c: 91:   if(I2C_Master_Wait())temp = SSPBUF;
 12091  1C6B  160A  158A  226E  160A  158A  	fcall	_I2C_Master_Wait
 12092  1C70  3A00               	xorlw	0
 12093  1C71  1903               	skipnz
 12094  1C72  2C7A               	goto	l3689
 12095  1C73  0813               	movf	19,w	;volatile
 12096  1C74  00A5               	movwf	??_I2C_Master_Read
 12097  1C75  01A6               	clrf	??_I2C_Master_Read+1
 12098  1C76  0825               	movf	??_I2C_Master_Read,w
 12099  1C77  00A7               	movwf	I2C_Master_Read@temp
 12100  1C78  0826               	movf	??_I2C_Master_Read+1,w
 12101  1C79  00A8               	movwf	I2C_Master_Read@temp+1
 12102  1C7A                     l3689:
 12103                           
 12104                           ;I2C.c: 92:   if(I2C_Master_Wait())
 12105  1C7A  160A  158A  226E  160A  158A  	fcall	_I2C_Master_Wait
 12106  1C7F  3A00               	xorlw	0
 12107  1C80  1903               	skipnz
 12108  1C81  2C94               	goto	l3701
 12109                           
 12110                           ;I2C.c: 93:     {;I2C.c: 94:     SSPCON2bits.ACKDT = (a)?0:1;
 12111  1C82  0823               	movf	I2C_Master_Read@a,w
 12112  1C83  0424               	iorwf	I2C_Master_Read@a+1,w
 12113  1C84  1D03               	btfss	3,2
 12114  1C85  2C8A               	goto	u2810
 12115  1C86  1683               	bsf	3,5	;RP0=1, select bank1
 12116  1C87  1303               	bcf	3,6	;RP1=0, select bank1
 12117  1C88  1691               	bsf	17,5	;volatile
 12118  1C89  2C8D               	goto	l3693
 12119  1C8A                     u2810:
 12120  1C8A  1683               	bsf	3,5	;RP0=1, select bank1
 12121  1C8B  1303               	bcf	3,6	;RP1=0, select bank1
 12122  1C8C  1291               	bcf	17,5	;volatile
 12123  1C8D                     l3693:
 12124                           
 12125                           ;I2C.c: 95:     SSPCON2bits.ACKEN = 1;
 12126  1C8D  1611               	bsf	17,4	;volatile
 12127                           
 12128                           ;I2C.c: 96:     return temp;
 12129  1C8E  1283               	bcf	3,5	;RP0=0, select bank0
 12130  1C8F  0828               	movf	I2C_Master_Read@temp+1,w
 12131  1C90  00A4               	movwf	?_I2C_Master_Read+1
 12132  1C91  0827               	movf	I2C_Master_Read@temp,w
 12133  1C92  00A3               	movwf	?_I2C_Master_Read
 12134  1C93  0008               	return
 12135  1C94                     l3701:
 12136                           
 12137                           ;I2C.c: 99:     {;I2C.c: 100:     return 0x00;
 12138  1C94  01A3               	clrf	?_I2C_Master_Read
 12139  1C95  01A4               	clrf	?_I2C_Master_Read+1
 12140  1C96  0008               	return
 12141  1C97                     __end_of_I2C_Master_Read:
 12142                           
 12143                           	psect	text49
 12144  1DB4                     __ptext49:	
 12145 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 12146 ;; Defined at:
 12147 ;;		line 367 in file "EEPROM_24C1025.c"
 12148 ;; Parameters:    Size  Location     Type
 12149 ;;  chip_add        1    wreg     unsigned char 
 12150 ;;  value           2   10[BANK1 ] unsigned int 
 12151 ;; Auto vars:     Size  Location     Type
 12152 ;;  chip_add        1   12[BANK1 ] unsigned char 
 12153 ;;  mem_add         4   13[BANK1 ] unsigned long 
 12154 ;; Return value:  Size  Location     Type
 12155 ;;                  1    wreg      void 
 12156 ;; Registers used:
 12157 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12158 ;; Tracked objects:
 12159 ;;		On entry : 300/300
 12160 ;;		On exit  : 0/0
 12161 ;;		Unchanged: 0/0
 12162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12163 ;;      Params:         0       0       2       0       0
 12164 ;;      Locals:         0       0       5       0       0
 12165 ;;      Temps:          0       0       0       0       0
 12166 ;;      Totals:         0       0       7       0       0
 12167 ;;Total ram usage:        7 bytes
 12168 ;; Hardware stack levels used: 1
 12169 ;; Hardware stack levels required when called: 5
 12170 ;; This function calls:
 12171 ;;		_EEPROM_24C1025_Write_Int
 12172 ;; This function is called by:
 12173 ;;		_Decodify_Command
 12174 ;; This function uses a non-reentrant model
 12175 ;;
 12176                           
 12177                           
 12178                           ;psect for function _EEPROM_24C1025_Fill_All
 12179  1DB4                     _EEPROM_24C1025_Fill_All:
 12180                           
 12181                           ;incstack = 0
 12182                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 12183                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 12184  1DB4  1303               	bcf	3,6	;RP1=0, select bank1
 12185  1DB5  00AC               	movwf	EEPROM_24C1025_Fill_All@chip_add^(0+128)
 12186                           
 12187                           ;EEPROM_24C1025.c: 368:      unsigned long mem_add;;EEPROM_24C1025.c: 369:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 12188  1DB6  3000               	movlw	0
 12189  1DB7  00B0               	movwf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128)
 12190  1DB8  3000               	movlw	0
 12191  1DB9  00AF               	movwf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128)
 12192  1DBA  3000               	movlw	0
 12193  1DBB  00AE               	movwf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128)
 12194  1DBC  3000               	movlw	0
 12195  1DBD  00AD               	movwf	EEPROM_24C1025_Fill_All@mem_add^(0+128)
 12196  1DBE                     l5669:
 12197                           
 12198                           ;EEPROM_24C1025.c: 370:         {;EEPROM_24C1025.c: 371:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 12199  1DBE  1683               	bsf	3,5	;RP0=1, select bank1
 12200  1DBF  1303               	bcf	3,6	;RP1=0, select bank1
 12201  1DC0  0830               	movf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),w
 12202  1DC1  00A3               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
 12203  1DC2  082F               	movf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),w
 12204  1DC3  00A2               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
 12205  1DC4  082E               	movf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),w
 12206  1DC5  00A1               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
 12207  1DC6  082D               	movf	EEPROM_24C1025_Fill_All@mem_add^(0+128),w
 12208  1DC7  00A0               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
 12209  1DC8  082B               	movf	(EEPROM_24C1025_Fill_All@value+1)^(0+128),w
 12210  1DC9  00A5               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
 12211  1DCA  082A               	movf	EEPROM_24C1025_Fill_All@value^(0+128),w
 12212  1DCB  00A4               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
 12213  1DCC  082C               	movf	EEPROM_24C1025_Fill_All@chip_add^(0+128),w
 12214  1DCD  160A  158A  2324  160A  158A  	fcall	_EEPROM_24C1025_Write_Int
 12215  1DD2  0064               	clrwdt	;# 
 12216                           
 12217                           ;EEPROM_24C1025.c: 373:         }
 12218  1DD3  3002               	movlw	2
 12219  1DD4  1683               	bsf	3,5	;RP0=1, select bank1
 12220  1DD5  1303               	bcf	3,6	;RP1=0, select bank1
 12221  1DD6  07AD               	addwf	EEPROM_24C1025_Fill_All@mem_add^(0+128),f
 12222  1DD7  3000               	movlw	0
 12223  1DD8  1803               	skipnc
 12224  1DD9  3001               	movlw	1
 12225  1DDA  07AE               	addwf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),f
 12226  1DDB  3000               	movlw	0
 12227  1DDC  1803               	skipnc
 12228  1DDD  3001               	movlw	1
 12229  1DDE  07AF               	addwf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),f
 12230  1DDF  3000               	movlw	0
 12231  1DE0  1803               	skipnc
 12232  1DE1  3001               	movlw	1
 12233  1DE2  07B0               	addwf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),f
 12234  1DE3  0830               	movf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),w
 12235  1DE4  1D03               	btfss	3,2
 12236  1DE5  0008               	return
 12237  1DE6  082F               	movf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),w
 12238  1DE7  1D03               	btfss	3,2
 12239  1DE8  0008               	return
 12240  1DE9  3004               	movlw	4
 12241  1DEA  022E               	subwf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),w
 12242  1DEB  1D03               	skipz
 12243  1DEC  2DF1               	goto	u5393
 12244  1DED  3000               	movlw	0
 12245  1DEE  022D               	subwf	EEPROM_24C1025_Fill_All@mem_add^(0+128),w
 12246  1DEF  1D03               	skipz
 12247  1DF0  2DF1               	goto	u5393
 12248  1DF1                     u5393:
 12249  1DF1  1803               	btfsc	3,0
 12250  1DF2  0008               	return
 12251  1DF3  2DBE               	goto	l5669
 12252  1DF4                     __end_of_EEPROM_24C1025_Fill_All:
 12253                           
 12254                           	psect	text50
 12255  1B24                     __ptext50:	
 12256 ;; *************** function _EEPROM_24C1025_Write_Int *****************
 12257 ;; Defined at:
 12258 ;;		line 352 in file "EEPROM_24C1025.c"
 12259 ;; Parameters:    Size  Location     Type
 12260 ;;  chip_add        1    wreg     unsigned char 
 12261 ;;  mem_add         4    0[BANK1 ] unsigned long 
 12262 ;;  data            2    4[BANK1 ] int 
 12263 ;; Auto vars:     Size  Location     Type
 12264 ;;  chip_add        1    7[BANK1 ] unsigned char 
 12265 ;;  local           2    8[BANK1 ] unsigned char [2]
 12266 ;; Return value:  Size  Location     Type
 12267 ;;                  1    wreg      void 
 12268 ;; Registers used:
 12269 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12270 ;; Tracked objects:
 12271 ;;		On entry : 100/300
 12272 ;;		On exit  : 0/0
 12273 ;;		Unchanged: 0/0
 12274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12275 ;;      Params:         0       0       6       0       0
 12276 ;;      Locals:         0       0       3       0       0
 12277 ;;      Temps:          0       0       1       0       0
 12278 ;;      Totals:         0       0      10       0       0
 12279 ;;Total ram usage:       10 bytes
 12280 ;; Hardware stack levels used: 1
 12281 ;; Hardware stack levels required when called: 4
 12282 ;; This function calls:
 12283 ;;		_EEPROM_24C1025_Write_Buffer
 12284 ;; This function is called by:
 12285 ;;		_EEPROM_24C1025_Fill_All
 12286 ;;		_Decodify_Command
 12287 ;;		_Save_Log
 12288 ;; This function uses a non-reentrant model
 12289 ;;
 12290                           
 12291                           
 12292                           ;psect for function _EEPROM_24C1025_Write_Int
 12293  1B24                     _EEPROM_24C1025_Write_Int:
 12294                           
 12295                           ;incstack = 0
 12296                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 12297                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
 12298  1B24  1303               	bcf	3,6	;RP1=0, select bank1
 12299  1B25  00A7               	movwf	EEPROM_24C1025_Write_Int@chip_add^(0+128)
 12300                           
 12301                           ;EEPROM_24C1025.c: 353:      char local[2];;EEPROM_24C1025.c: 354:      local[0]=((char 
      +                          *)&data)[1];
 12302  1B26  0825               	movf	(EEPROM_24C1025_Write_Int@data^(0+128)+1),w
 12303  1B27  00A6               	movwf	??_EEPROM_24C1025_Write_Int^(0+128)
 12304  1B28  0826               	movf	??_EEPROM_24C1025_Write_Int^(0+128),w
 12305  1B29  00A8               	movwf	EEPROM_24C1025_Write_Int@local^(0+128)
 12306                           
 12307                           ;EEPROM_24C1025.c: 355:      local[1]=((char *)&data)[0];
 12308  1B2A  0824               	movf	EEPROM_24C1025_Write_Int@data^(0+128),w
 12309  1B2B  00A6               	movwf	??_EEPROM_24C1025_Write_Int^(0+128)
 12310  1B2C  0826               	movf	??_EEPROM_24C1025_Write_Int^(0+128),w
 12311  1B2D  00A9               	movwf	(EEPROM_24C1025_Write_Int@local^(0+128)+1)
 12312                           
 12313                           ;EEPROM_24C1025.c: 356:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
 12314  1B2E  0823               	movf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128),w
 12315  1B2F  1283               	bcf	3,5	;RP0=0, select bank0
 12316  1B30  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 12317  1B31  1683               	bsf	3,5	;RP0=1, select bank1
 12318  1B32  0822               	movf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128),w
 12319  1B33  1283               	bcf	3,5	;RP0=0, select bank0
 12320  1B34  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 12321  1B35  1683               	bsf	3,5	;RP0=1, select bank1
 12322  1B36  0821               	movf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128),w
 12323  1B37  1283               	bcf	3,5	;RP0=0, select bank0
 12324  1B38  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 12325  1B39  1683               	bsf	3,5	;RP0=1, select bank1
 12326  1B3A  0820               	movf	EEPROM_24C1025_Write_Int@mem_add^(0+128),w
 12327  1B3B  1283               	bcf	3,5	;RP0=0, select bank0
 12328  1B3C  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 12329  1B3D  3002               	movlw	2
 12330  1B3E  1683               	bsf	3,5	;RP0=1, select bank1
 12331  1B3F  00A6               	movwf	??_EEPROM_24C1025_Write_Int^(0+128)
 12332  1B40  0826               	movf	??_EEPROM_24C1025_Write_Int^(0+128),w
 12333  1B41  1283               	bcf	3,5	;RP0=0, select bank0
 12334  1B42  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 12335  1B43  30A8               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
 12336  1B44  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 12337  1B45  3000               	movlw	0
 12338  1B46  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 12339  1B47  1683               	bsf	3,5	;RP0=1, select bank1
 12340  1B48  0827               	movf	EEPROM_24C1025_Write_Int@chip_add^(0+128),w
 12341  1B49  160A  118A  2392   	fcall	_EEPROM_24C1025_Write_Buffer
 12342  1B4C  0008               	return
 12343  1B4D                     __end_of_EEPROM_24C1025_Write_Int:
 12344                           
 12345                           	psect	text51
 12346  1392                     __ptext51:	
 12347 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 12348 ;; Defined at:
 12349 ;;		line 15 in file "EEPROM_24C1025.c"
 12350 ;; Parameters:    Size  Location     Type
 12351 ;;  chip_add        1    wreg     unsigned char 
 12352 ;;  mem_add         4   10[BANK0 ] unsigned long 
 12353 ;;  sizedata        1   14[BANK0 ] unsigned char 
 12354 ;;  data            2   15[BANK0 ] PTR unsigned char 
 12355 ;;		 -> usart_protocol.value(52), usart_protocol(58), EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(
      +1), 
 12356 ;; Auto vars:     Size  Location     Type
 12357 ;;  chip_add        1   20[BANK0 ] unsigned char 
 12358 ;;  ctrl            1   22[BANK0 ] unsigned char 
 12359 ;;  range           1   21[BANK0 ] unsigned char 
 12360 ;;  count           1   19[BANK0 ] unsigned char 
 12361 ;; Return value:  Size  Location     Type
 12362 ;;                  1    wreg      void 
 12363 ;; Registers used:
 12364 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12365 ;; Tracked objects:
 12366 ;;		On entry : 0/300
 12367 ;;		On exit  : 0/0
 12368 ;;		Unchanged: 0/0
 12369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12370 ;;      Params:         0       7       0       0       0
 12371 ;;      Locals:         0       4       0       0       0
 12372 ;;      Temps:          0       2       0       0       0
 12373 ;;      Totals:         0      13       0       0       0
 12374 ;;Total ram usage:       13 bytes
 12375 ;; Hardware stack levels used: 1
 12376 ;; Hardware stack levels required when called: 3
 12377 ;; This function calls:
 12378 ;;		_I2C_Master_Start
 12379 ;;		_I2C_Master_Stop
 12380 ;;		_I2C_Master_Write
 12381 ;;		_my_delay_ms_WDT
 12382 ;; This function is called by:
 12383 ;;		_EEPROM_24C1025_Write_Byte
 12384 ;;		_EEPROM_24C1025_Write_Int
 12385 ;;		_Decodify_Command
 12386 ;; This function uses a non-reentrant model
 12387 ;;
 12388                           
 12389                           
 12390                           ;psect for function _EEPROM_24C1025_Write_Buffer
 12391  1392                     _EEPROM_24C1025_Write_Buffer:
 12392                           
 12393                           ;incstack = 0
 12394                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
 12395                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 12396  1392  1283               	bcf	3,5	;RP0=0, select bank0
 12397  1393  1303               	bcf	3,6	;RP1=0, select bank0
 12398  1394  00B4               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 12399                           
 12400                           ;EEPROM_24C1025.c: 21:      unsigned char ctrl;;EEPROM_24C1025.c: 22:      unsigned char
      +                           count;;EEPROM_24C1025.c: 24:      Delay_Led_Memory=20;
 12401  1395  3014               	movlw	20
 12402  1396  1683               	bsf	3,5	;RP0=1, select bank1
 12403  1397  00DD               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 12404  1398  3000               	movlw	0
 12405  1399  00DE               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 12406                           
 12407                           ;EEPROM_24C1025.c: 26:      if(mem_add>0x1FFFF) return;
 12408  139A  1283               	bcf	3,5	;RP0=0, select bank0
 12409  139B  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12410  139C  1D03               	btfss	3,2
 12411  139D  0008               	return
 12412  139E  3002               	movlw	2
 12413  139F  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12414  13A0  1D03               	skipz
 12415  13A1  2BAA               	goto	u5323
 12416  13A2  3000               	movlw	0
 12417  13A3  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12418  13A4  1D03               	skipz
 12419  13A5  2BAA               	goto	u5323
 12420  13A6  3000               	movlw	0
 12421  13A7  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12422  13A8  1D03               	skipz
 12423  13A9  2BAA               	goto	u5323
 12424  13AA                     u5323:
 12425  13AA  1803               	btfsc	3,0
 12426  13AB  0008               	return
 12427                           
 12428                           ;EEPROM_24C1025.c: 28:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12429  13AC  1283               	bcf	3,5	;RP0=0, select bank0
 12430  13AD  1303               	bcf	3,6	;RP1=0, select bank0
 12431  13AE  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12432  13AF  1D03               	btfss	3,2
 12433  13B0  2BBF               	goto	l5567
 12434  13B1  3001               	movlw	1
 12435  13B2  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12436  13B3  1D03               	skipz
 12437  13B4  2BBD               	goto	u5333
 12438  13B5  3000               	movlw	0
 12439  13B6  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12440  13B7  1D03               	skipz
 12441  13B8  2BBD               	goto	u5333
 12442  13B9  3000               	movlw	0
 12443  13BA  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12444  13BB  1D03               	skipz
 12445  13BC  2BBD               	goto	u5333
 12446  13BD                     u5333:
 12447  13BD  1C03               	btfss	3,0
 12448  13BE  2BC6               	goto	l5569
 12449  13BF                     l5567:
 12450  13BF  3008               	movlw	8
 12451  13C0  1283               	bcf	3,5	;RP0=0, select bank0
 12452  13C1  1303               	bcf	3,6	;RP1=0, select bank0
 12453  13C2  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12454  13C3  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12455  13C4  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 12456  13C5  2BC9               	goto	l5571
 12457  13C6                     l5569:
 12458  13C6  1283               	bcf	3,5	;RP0=0, select bank0
 12459  13C7  1303               	bcf	3,6	;RP1=0, select bank0
 12460  13C8  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 12461  13C9                     l5571:
 12462                           
 12463                           ;EEPROM_24C1025.c: 29:      ctrl=chip_add;
 12464  13C9  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12465  13CA  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12466  13CB  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12467  13CC  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12468                           
 12469                           ;EEPROM_24C1025.c: 30:      ctrl<<=1;
 12470  13CD  1003               	clrc
 12471  13CE  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12472                           
 12473                           ;EEPROM_24C1025.c: 31:      ctrl |= 0xA0;
 12474  13CF  30A0               	movlw	160
 12475  13D0  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12476  13D1  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12477  13D2  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12478                           
 12479                           ;EEPROM_24C1025.c: 32:      ctrl |= range;
 12480  13D3  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12481  13D4  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12482  13D5  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12483  13D6  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12484                           
 12485                           ;EEPROM_24C1025.c: 34:      I2C_Master_Start();
 12486  13D7  160A  158A  2141  160A  118A  	fcall	_I2C_Master_Start
 12487                           
 12488                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(ctrl);
 12489  13DC  1283               	bcf	3,5	;RP0=0, select bank0
 12490  13DD  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12491  13DE  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12492  13DF  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12493  13E0  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12494  13E1  00A3               	movwf	I2C_Master_Write@d
 12495  13E2  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12496  13E3  00A4               	movwf	I2C_Master_Write@d+1
 12497  13E4  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 12498                           
 12499                           ;EEPROM_24C1025.c: 36:      I2C_Master_Write(((char *)&mem_add)[1]);
 12500  13E9  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12501  13EA  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12502  13EB  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12503  13EC  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12504  13ED  00A3               	movwf	I2C_Master_Write@d
 12505  13EE  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12506  13EF  00A4               	movwf	I2C_Master_Write@d+1
 12507  13F0  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 12508                           
 12509                           ;EEPROM_24C1025.c: 37:      I2C_Master_Write(((char *)&mem_add)[0]);
 12510  13F5  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12511  13F6  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12512  13F7  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12513  13F8  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12514  13F9  00A3               	movwf	I2C_Master_Write@d
 12515  13FA  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12516  13FB  00A4               	movwf	I2C_Master_Write@d+1
 12517  13FC  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 12518                           
 12519                           ;EEPROM_24C1025.c: 38:      for(count=0;count<(sizedata-1);count++)
 12520  1401  01B3               	clrf	EEPROM_24C1025_Write_Buffer@count
 12521  1402                     l5633:
 12522  1402  082E               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 12523  1403  3EFF               	addlw	255
 12524  1404  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12525  1405  30FF               	movlw	255
 12526  1406  1803               	skipnc
 12527  1407  3000               	movlw	0
 12528  1408  00B2               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 12529  1409  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12530  140A  3A80               	xorlw	128
 12531  140B  3C80               	sublw	128
 12532  140C  1D03               	skipz
 12533  140D  2C10               	goto	u5375
 12534  140E  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12535  140F  0233               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 12536  1410                     u5375:
 12537  1410  1803               	btfsc	3,0
 12538  1411  2CE3               	goto	l5635
 12539  1412  0064               	clrwdt	;# 
 12540                           
 12541                           ;EEPROM_24C1025.c: 41:           if(mem_add>0x1FFFF) return;
 12542  1413  1283               	bcf	3,5	;RP0=0, select bank0
 12543  1414  1303               	bcf	3,6	;RP1=0, select bank0
 12544  1415  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12545  1416  1D03               	btfss	3,2
 12546  1417  0008               	return
 12547  1418  3002               	movlw	2
 12548  1419  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12549  141A  1D03               	skipz
 12550  141B  2C24               	goto	u5343
 12551  141C  3000               	movlw	0
 12552  141D  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12553  141E  1D03               	skipz
 12554  141F  2C24               	goto	u5343
 12555  1420  3000               	movlw	0
 12556  1421  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12557  1422  1D03               	skipz
 12558  1423  2C24               	goto	u5343
 12559  1424                     u5343:
 12560  1424  1803               	btfsc	3,0
 12561  1425  0008               	return
 12562                           
 12563                           ;EEPROM_24C1025.c: 42:           if((mem_add+1)%128==0)
 12564  1426  1283               	bcf	3,5	;RP0=0, select bank0
 12565  1427  1303               	bcf	3,6	;RP1=0, select bank0
 12566  1428  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12567  1429  3E01               	addlw	1
 12568  142A  397F               	andlw	127
 12569  142B  1D03               	btfss	3,2
 12570  142C  2CB9               	goto	l5625
 12571                           
 12572                           ;EEPROM_24C1025.c: 43:             {;EEPROM_24C1025.c: 44:             I2C_Master_Write(
      +                          *data);
 12573  142D  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12574  142E  0084               	movwf	4
 12575  142F  1783               	bsf	3,7
 12576  1430  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12577  1431  1383               	bcf	3,7
 12578  1432  0800               	movf	0,w
 12579  1433  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12580  1434  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12581  1435  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12582  1436  00A3               	movwf	I2C_Master_Write@d
 12583  1437  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12584  1438  00A4               	movwf	I2C_Master_Write@d+1
 12585  1439  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 12586                           
 12587                           ;EEPROM_24C1025.c: 45:             I2C_Master_Stop();
 12588  143E  160A  158A  2109  160A  118A  	fcall	_I2C_Master_Stop
 12589                           
 12590                           ;EEPROM_24C1025.c: 47:             my_delay_ms_WDT(5);
 12591  1443  3000               	movlw	0
 12592  1444  1283               	bcf	3,5	;RP0=0, select bank0
 12593  1445  00A3               	movwf	my_delay_ms_WDT@time+3
 12594  1446  3000               	movlw	0
 12595  1447  00A2               	movwf	my_delay_ms_WDT@time+2
 12596  1448  3000               	movlw	0
 12597  1449  00A1               	movwf	my_delay_ms_WDT@time+1
 12598  144A  3005               	movlw	5
 12599  144B  00A0               	movwf	my_delay_ms_WDT@time
 12600  144C  160A  158A  2504  160A  118A  	fcall	_my_delay_ms_WDT
 12601                           
 12602                           ;EEPROM_24C1025.c: 48:             mem_add++;
 12603  1451  3001               	movlw	1
 12604  1452  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12605  1453  3000               	movlw	0
 12606  1454  1803               	skipnc
 12607  1455  3001               	movlw	1
 12608  1456  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12609  1457  3000               	movlw	0
 12610  1458  1803               	skipnc
 12611  1459  3001               	movlw	1
 12612  145A  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12613  145B  3000               	movlw	0
 12614  145C  1803               	skipnc
 12615  145D  3001               	movlw	1
 12616  145E  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12617                           
 12618                           ;EEPROM_24C1025.c: 49:             data++;
 12619  145F  3001               	movlw	1
 12620  1460  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12621  1461  1803               	skipnc
 12622  1462  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 12623  1463  3000               	movlw	0
 12624  1464  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 12625                           
 12626                           ;EEPROM_24C1025.c: 50:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12627  1465  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12628  1466  1D03               	btfss	3,2
 12629  1467  2C76               	goto	l5605
 12630  1468  3001               	movlw	1
 12631  1469  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12632  146A  1D03               	skipz
 12633  146B  2C74               	goto	u5363
 12634  146C  3000               	movlw	0
 12635  146D  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12636  146E  1D03               	skipz
 12637  146F  2C74               	goto	u5363
 12638  1470  3000               	movlw	0
 12639  1471  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12640  1472  1D03               	skipz
 12641  1473  2C74               	goto	u5363
 12642  1474                     u5363:
 12643  1474  1C03               	btfss	3,0
 12644  1475  2C7D               	goto	l5607
 12645  1476                     l5605:
 12646  1476  3008               	movlw	8
 12647  1477  1283               	bcf	3,5	;RP0=0, select bank0
 12648  1478  1303               	bcf	3,6	;RP1=0, select bank0
 12649  1479  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12650  147A  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12651  147B  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 12652  147C  2C80               	goto	l5609
 12653  147D                     l5607:
 12654  147D  1283               	bcf	3,5	;RP0=0, select bank0
 12655  147E  1303               	bcf	3,6	;RP1=0, select bank0
 12656  147F  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 12657  1480                     l5609:
 12658                           
 12659                           ;EEPROM_24C1025.c: 51:             ctrl=chip_add;
 12660  1480  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12661  1481  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12662  1482  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12663  1483  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12664                           
 12665                           ;EEPROM_24C1025.c: 52:             ctrl<<=1;
 12666  1484  1003               	clrc
 12667  1485  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12668                           
 12669                           ;EEPROM_24C1025.c: 53:             ctrl |= 0xA0;
 12670  1486  30A0               	movlw	160
 12671  1487  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12672  1488  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12673  1489  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12674                           
 12675                           ;EEPROM_24C1025.c: 54:             ctrl |= range;
 12676  148A  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12677  148B  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12678  148C  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12679  148D  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12680                           
 12681                           ;EEPROM_24C1025.c: 56:             I2C_Master_Start();
 12682  148E  160A  158A  2141  160A  118A  	fcall	_I2C_Master_Start
 12683                           
 12684                           ;EEPROM_24C1025.c: 57:             I2C_Master_Write(ctrl);
 12685  1493  1283               	bcf	3,5	;RP0=0, select bank0
 12686  1494  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12687  1495  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12688  1496  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12689  1497  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12690  1498  00A3               	movwf	I2C_Master_Write@d
 12691  1499  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12692  149A  00A4               	movwf	I2C_Master_Write@d+1
 12693  149B  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 12694                           
 12695                           ;EEPROM_24C1025.c: 58:             I2C_Master_Write(((char *)&mem_add)[1]);
 12696  14A0  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12697  14A1  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12698  14A2  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12699  14A3  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12700  14A4  00A3               	movwf	I2C_Master_Write@d
 12701  14A5  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12702  14A6  00A4               	movwf	I2C_Master_Write@d+1
 12703  14A7  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 12704                           
 12705                           ;EEPROM_24C1025.c: 59:             I2C_Master_Write(((char *)&mem_add)[0]);
 12706  14AC  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12707  14AD  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12708  14AE  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12709  14AF  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12710  14B0  00A3               	movwf	I2C_Master_Write@d
 12711  14B1  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12712  14B2  00A4               	movwf	I2C_Master_Write@d+1
 12713  14B3  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 12714                           
 12715                           ;EEPROM_24C1025.c: 60:             }
 12716  14B8  2CDE               	goto	l5631
 12717  14B9                     l5625:
 12718                           
 12719                           ;EEPROM_24C1025.c: 62:             {;EEPROM_24C1025.c: 63:             I2C_Master_Write(
      +                          *data);
 12720  14B9  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12721  14BA  0084               	movwf	4
 12722  14BB  1783               	bsf	3,7
 12723  14BC  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12724  14BD  1383               	bcf	3,7
 12725  14BE  0800               	movf	0,w
 12726  14BF  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12727  14C0  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12728  14C1  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12729  14C2  00A3               	movwf	I2C_Master_Write@d
 12730  14C3  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12731  14C4  00A4               	movwf	I2C_Master_Write@d+1
 12732  14C5  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 12733                           
 12734                           ;EEPROM_24C1025.c: 64:             data++;
 12735  14CA  3001               	movlw	1
 12736  14CB  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12737  14CC  1803               	skipnc
 12738  14CD  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 12739  14CE  3000               	movlw	0
 12740  14CF  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 12741                           
 12742                           ;EEPROM_24C1025.c: 65:             mem_add++;
 12743  14D0  3001               	movlw	1
 12744  14D1  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12745  14D2  3000               	movlw	0
 12746  14D3  1803               	skipnc
 12747  14D4  3001               	movlw	1
 12748  14D5  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12749  14D6  3000               	movlw	0
 12750  14D7  1803               	skipnc
 12751  14D8  3001               	movlw	1
 12752  14D9  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12753  14DA  3000               	movlw	0
 12754  14DB  1803               	skipnc
 12755  14DC  3001               	movlw	1
 12756  14DD  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12757  14DE                     l5631:
 12758                           
 12759                           ;EEPROM_24C1025.c: 67:      }
 12760  14DE  3001               	movlw	1
 12761  14DF  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12762  14E0  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12763  14E1  07B3               	addwf	EEPROM_24C1025_Write_Buffer@count,f
 12764  14E2  2C02               	goto	l5633
 12765  14E3                     l5635:
 12766                           
 12767                           ;EEPROM_24C1025.c: 68:      I2C_Master_Write(*data);
 12768  14E3  1283               	bcf	3,5	;RP0=0, select bank0
 12769  14E4  1303               	bcf	3,6	;RP1=0, select bank0
 12770  14E5  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12771  14E6  0084               	movwf	4
 12772  14E7  1783               	bsf	3,7
 12773  14E8  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12774  14E9  1383               	bcf	3,7
 12775  14EA  0800               	movf	0,w
 12776  14EB  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12777  14EC  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12778  14ED  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12779  14EE  00A3               	movwf	I2C_Master_Write@d
 12780  14EF  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12781  14F0  00A4               	movwf	I2C_Master_Write@d+1
 12782  14F1  160A  158A  2126  160A  118A  	fcall	_I2C_Master_Write
 12783                           
 12784                           ;EEPROM_24C1025.c: 69:      I2C_Master_Stop();
 12785  14F6  160A  158A  2109  160A  118A  	fcall	_I2C_Master_Stop
 12786                           
 12787                           ;EEPROM_24C1025.c: 71:      my_delay_ms_WDT(5);
 12788  14FB  3000               	movlw	0
 12789  14FC  1283               	bcf	3,5	;RP0=0, select bank0
 12790  14FD  00A3               	movwf	my_delay_ms_WDT@time+3
 12791  14FE  3000               	movlw	0
 12792  14FF  00A2               	movwf	my_delay_ms_WDT@time+2
 12793  1500  3000               	movlw	0
 12794  1501  00A1               	movwf	my_delay_ms_WDT@time+1
 12795  1502  3005               	movlw	5
 12796  1503  00A0               	movwf	my_delay_ms_WDT@time
 12797  1504  160A  158A  2504   	fcall	_my_delay_ms_WDT
 12798  1507  0008               	return
 12799  1508                     __end_of_EEPROM_24C1025_Write_Buffer:
 12800                           
 12801                           	psect	text52
 12802  1D04                     __ptext52:	
 12803 ;; *************** function _my_delay_ms_WDT *****************
 12804 ;; Defined at:
 12805 ;;		line 13 in file "my_delay.c"
 12806 ;; Parameters:    Size  Location     Type
 12807 ;;  time            4    0[BANK0 ] long 
 12808 ;; Auto vars:     Size  Location     Type
 12809 ;;  i               4    6[BANK0 ] long 
 12810 ;; Return value:  Size  Location     Type
 12811 ;;                  1    wreg      void 
 12812 ;; Registers used:
 12813 ;;		wreg, btemp+1
 12814 ;; Tracked objects:
 12815 ;;		On entry : 300/0
 12816 ;;		On exit  : 300/0
 12817 ;;		Unchanged: 0/0
 12818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12819 ;;      Params:         0       4       0       0       0
 12820 ;;      Locals:         0       4       0       0       0
 12821 ;;      Temps:          0       2       0       0       0
 12822 ;;      Totals:         0      10       0       0       0
 12823 ;;Total ram usage:       10 bytes
 12824 ;; Hardware stack levels used: 1
 12825 ;; Hardware stack levels required when called: 1
 12826 ;; This function calls:
 12827 ;;		Nothing
 12828 ;; This function is called by:
 12829 ;;		_EEPROM_24C1025_Write_Buffer
 12830 ;;		_EEPROM_24C1025_Read_Buffer
 12831 ;;		_EEPROM_24C1025_Write_Str
 12832 ;;		_main
 12833 ;; This function uses a non-reentrant model
 12834 ;;
 12835                           
 12836                           
 12837                           ;psect for function _my_delay_ms_WDT
 12838  1D04                     _my_delay_ms_WDT:
 12839                           
 12840                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
 12841                           
 12842                           ;incstack = 0
 12843                           ; Regs used in _my_delay_ms_WDT: [wreg+btemp+1]
 12844  1D04  3000               	movlw	0
 12845  1D05  00A9               	movwf	my_delay_ms_WDT@i+3
 12846  1D06  3000               	movlw	0
 12847  1D07  00A8               	movwf	my_delay_ms_WDT@i+2
 12848  1D08  3000               	movlw	0
 12849  1D09  00A7               	movwf	my_delay_ms_WDT@i+1
 12850  1D0A  3000               	movlw	0
 12851  1D0B  00A6               	movwf	my_delay_ms_WDT@i
 12852  1D0C                     l3585:
 12853  1D0C  0829               	movf	my_delay_ms_WDT@i+3,w
 12854  1D0D  3A80               	xorlw	128
 12855  1D0E  00FF               	movwf	127
 12856  1D0F  0823               	movf	my_delay_ms_WDT@time+3,w
 12857  1D10  3A80               	xorlw	128
 12858  1D11  027F               	subwf	127,w
 12859  1D12  1D03               	skipz
 12860  1D13  2D1E               	goto	u2693
 12861  1D14  0822               	movf	my_delay_ms_WDT@time+2,w
 12862  1D15  0228               	subwf	my_delay_ms_WDT@i+2,w
 12863  1D16  1D03               	skipz
 12864  1D17  2D1E               	goto	u2693
 12865  1D18  0821               	movf	my_delay_ms_WDT@time+1,w
 12866  1D19  0227               	subwf	my_delay_ms_WDT@i+1,w
 12867  1D1A  1D03               	skipz
 12868  1D1B  2D1E               	goto	u2693
 12869  1D1C  0820               	movf	my_delay_ms_WDT@time,w
 12870  1D1D  0226               	subwf	my_delay_ms_WDT@i,w
 12871  1D1E                     u2693:
 12872  1D1E  1803               	btfsc	3,0
 12873  1D1F  0008               	return
 12874  1D20  0064               	clrwdt	;# 
 12875                           
 12876                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
 12877  1D21  3003               	movlw	3
 12878  1D22  1283               	bcf	3,5	;RP0=0, select bank0
 12879  1D23  1303               	bcf	3,6	;RP1=0, select bank0
 12880  1D24  00A5               	movwf	??_my_delay_ms_WDT+1
 12881  1D25  3097               	movlw	151
 12882  1D26  00A4               	movwf	??_my_delay_ms_WDT
 12883  1D27                     u5617:
 12884  1D27  0BA4               	decfsz	??_my_delay_ms_WDT,f
 12885  1D28  2D27               	goto	u5617
 12886  1D29  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
 12887  1D2A  2D27               	goto	u5617
 12888                           
 12889                           ;my_delay.c: 19:             }
 12890  1D2B  3001               	movlw	1
 12891  1D2C  1283               	bcf	3,5	;RP0=0, select bank0
 12892  1D2D  1303               	bcf	3,6	;RP1=0, select bank0
 12893  1D2E  07A6               	addwf	my_delay_ms_WDT@i,f
 12894  1D2F  3000               	movlw	0
 12895  1D30  1803               	skipnc
 12896  1D31  3001               	movlw	1
 12897  1D32  07A7               	addwf	my_delay_ms_WDT@i+1,f
 12898  1D33  3000               	movlw	0
 12899  1D34  1803               	skipnc
 12900  1D35  3001               	movlw	1
 12901  1D36  07A8               	addwf	my_delay_ms_WDT@i+2,f
 12902  1D37  3000               	movlw	0
 12903  1D38  1803               	skipnc
 12904  1D39  3001               	movlw	1
 12905  1D3A  07A9               	addwf	my_delay_ms_WDT@i+3,f
 12906  1D3B  2D0C               	goto	l3585
 12907  1D3C                     __end_of_my_delay_ms_WDT:
 12908                           
 12909                           	psect	text53
 12910  1926                     __ptext53:	
 12911 ;; *************** function _I2C_Master_Write *****************
 12912 ;; Defined at:
 12913 ;;		line 79 in file "I2C.c"
 12914 ;; Parameters:    Size  Location     Type
 12915 ;;  d               2    3[BANK0 ] unsigned int 
 12916 ;; Auto vars:     Size  Location     Type
 12917 ;;		None
 12918 ;; Return value:  Size  Location     Type
 12919 ;;                  1    wreg      void 
 12920 ;; Registers used:
 12921 ;;		wreg, status,2, status,0, pclath, cstack
 12922 ;; Tracked objects:
 12923 ;;		On entry : 300/0
 12924 ;;		On exit  : 300/0
 12925 ;;		Unchanged: 0/0
 12926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12927 ;;      Params:         0       2       0       0       0
 12928 ;;      Locals:         0       0       0       0       0
 12929 ;;      Temps:          0       0       0       0       0
 12930 ;;      Totals:         0       2       0       0       0
 12931 ;;Total ram usage:        2 bytes
 12932 ;; Hardware stack levels used: 1
 12933 ;; Hardware stack levels required when called: 2
 12934 ;; This function calls:
 12935 ;;		_I2C_Master_Wait
 12936 ;; This function is called by:
 12937 ;;		_EEPROM_24C1025_Write_Buffer
 12938 ;;		_EEPROM_24C1025_Read_Buffer
 12939 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12940 ;;		_EEPROM_24C1025_Write_Str
 12941 ;;		_EEPROM_24C1025_Read_Str
 12942 ;; This function uses a non-reentrant model
 12943 ;;
 12944                           
 12945                           
 12946                           ;psect for function _I2C_Master_Write
 12947  1926                     _I2C_Master_Write:
 12948                           
 12949                           ;I2C.c: 79: void I2C_Master_Write(unsigned d);I2C.c: 80: {;I2C.c: 81:   if(I2C_Master_Wa
      +                          it())
 12950                           
 12951                           ;incstack = 0
 12952                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 12953  1926  160A  158A  226E  160A  158A  	fcall	_I2C_Master_Wait
 12954  192B  3A00               	xorlw	0
 12955  192C  1903               	skipnz
 12956  192D  0008               	return
 12957                           
 12958                           ;I2C.c: 82:     {;I2C.c: 83:     SSPBUF = d;
 12959  192E  0823               	movf	I2C_Master_Write@d,w
 12960  192F  0093               	movwf	19	;volatile
 12961  1930  0008               	return
 12962  1931                     __end_of_I2C_Master_Write:
 12963                           
 12964                           	psect	text54
 12965  1909                     __ptext54:	
 12966 ;; *************** function _I2C_Master_Stop *****************
 12967 ;; Defined at:
 12968 ;;		line 70 in file "I2C.c"
 12969 ;; Parameters:    Size  Location     Type
 12970 ;;		None
 12971 ;; Auto vars:     Size  Location     Type
 12972 ;;		None
 12973 ;; Return value:  Size  Location     Type
 12974 ;;                  1    wreg      void 
 12975 ;; Registers used:
 12976 ;;		wreg, status,2, status,0, pclath, cstack
 12977 ;; Tracked objects:
 12978 ;;		On entry : 300/800
 12979 ;;		On exit  : 200/0
 12980 ;;		Unchanged: 0/0
 12981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12982 ;;      Params:         0       0       0       0       0
 12983 ;;      Locals:         0       0       0       0       0
 12984 ;;      Temps:          0       0       0       0       0
 12985 ;;      Totals:         0       0       0       0       0
 12986 ;;Total ram usage:        0 bytes
 12987 ;; Hardware stack levels used: 1
 12988 ;; Hardware stack levels required when called: 2
 12989 ;; This function calls:
 12990 ;;		_I2C_Master_Wait
 12991 ;; This function is called by:
 12992 ;;		_EEPROM_24C1025_Write_Buffer
 12993 ;;		_EEPROM_24C1025_Read_Buffer
 12994 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12995 ;;		_EEPROM_24C1025_Write_Str
 12996 ;;		_EEPROM_24C1025_Read_Str
 12997 ;; This function uses a non-reentrant model
 12998 ;;
 12999                           
 13000                           
 13001                           ;psect for function _I2C_Master_Stop
 13002  1909                     _I2C_Master_Stop:
 13003                           
 13004                           ;I2C.c: 72:   if(I2C_Master_Wait())
 13005                           
 13006                           ;incstack = 0
 13007                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 13008  1909  160A  158A  226E   	fcall	_I2C_Master_Wait
 13009  190C  3A00               	xorlw	0
 13010                           
 13011                           ;I2C.c: 73:     {;I2C.c: 74:     SSPCON2bits.PEN = 1;
 13012  190D  1683               	bsf	3,5	;RP0=1, select bank1
 13013  190E  1D03               	btfss	3,2
 13014  190F  1511               	bsf	17,2	;volatile
 13015                           
 13016                           ;I2C.c: 76:   INTCONbits.GIE=1;
 13017                           
 13018                           ;I2C.c: 75:     }
 13019  1910  178B               	bsf	11,7	;volatile
 13020  1911  0008               	return
 13021  1912                     __end_of_I2C_Master_Stop:
 13022                           
 13023                           	psect	text55
 13024  1941                     __ptext55:	
 13025 ;; *************** function _I2C_Master_Start *****************
 13026 ;; Defined at:
 13027 ;;		line 52 in file "I2C.c"
 13028 ;; Parameters:    Size  Location     Type
 13029 ;;		None
 13030 ;; Auto vars:     Size  Location     Type
 13031 ;;		None
 13032 ;; Return value:  Size  Location     Type
 13033 ;;                  1    wreg      void 
 13034 ;; Registers used:
 13035 ;;		wreg, status,2, status,0, pclath, cstack
 13036 ;; Tracked objects:
 13037 ;;		On entry : 300/0
 13038 ;;		On exit  : 200/0
 13039 ;;		Unchanged: 0/0
 13040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13041 ;;      Params:         0       0       0       0       0
 13042 ;;      Locals:         0       0       0       0       0
 13043 ;;      Temps:          0       0       0       0       0
 13044 ;;      Totals:         0       0       0       0       0
 13045 ;;Total ram usage:        0 bytes
 13046 ;; Hardware stack levels used: 1
 13047 ;; Hardware stack levels required when called: 2
 13048 ;; This function calls:
 13049 ;;		_I2C_Master_Wait
 13050 ;; This function is called by:
 13051 ;;		_EEPROM_24C1025_Write_Buffer
 13052 ;;		_EEPROM_24C1025_Read_Buffer
 13053 ;;		_EEPROM_24C1025_Read_Buffer_USART
 13054 ;;		_EEPROM_24C1025_Write_Str
 13055 ;;		_EEPROM_24C1025_Read_Str
 13056 ;; This function uses a non-reentrant model
 13057 ;;
 13058                           
 13059                           
 13060                           ;psect for function _I2C_Master_Start
 13061  1941                     _I2C_Master_Start:
 13062                           
 13063                           ;I2C.c: 54:   INTCONbits.GIE=0;
 13064                           
 13065                           ;incstack = 0
 13066                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 13067  1941  138B               	bcf	11,7	;volatile
 13068                           
 13069                           ;I2C.c: 55:   Delay_Led_Memory=20;
 13070  1942  3014               	movlw	20
 13071  1943  1683               	bsf	3,5	;RP0=1, select bank1
 13072  1944  00DD               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 13073  1945  3000               	movlw	0
 13074  1946  00DE               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 13075                           
 13076                           ;I2C.c: 56:   if(I2C_Master_Wait())
 13077  1947  160A  158A  226E  160A  158A  	fcall	_I2C_Master_Wait
 13078  194C  3A00               	xorlw	0
 13079  194D  1903               	skipnz
 13080  194E  0008               	return
 13081                           
 13082                           ;I2C.c: 57:     {;I2C.c: 58:     SSPCON2bits.SEN = 1;
 13083  194F  1683               	bsf	3,5	;RP0=1, select bank1
 13084  1950  1411               	bsf	17,0	;volatile
 13085  1951  0008               	return
 13086  1952                     __end_of_I2C_Master_Start:
 13087                           
 13088                           	psect	text56
 13089  1A6E                     __ptext56:	
 13090 ;; *************** function _I2C_Master_Wait *****************
 13091 ;; Defined at:
 13092 ;;		line 37 in file "I2C.c"
 13093 ;; Parameters:    Size  Location     Type
 13094 ;;		None
 13095 ;; Auto vars:     Size  Location     Type
 13096 ;;  tempo           1    2[BANK0 ] unsigned char 
 13097 ;; Return value:  Size  Location     Type
 13098 ;;                  1    wreg      unsigned char 
 13099 ;; Registers used:
 13100 ;;		wreg, status,2, status,0
 13101 ;; Tracked objects:
 13102 ;;		On entry : 200/0
 13103 ;;		On exit  : 300/0
 13104 ;;		Unchanged: 0/0
 13105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13106 ;;      Params:         0       0       0       0       0
 13107 ;;      Locals:         0       1       0       0       0
 13108 ;;      Temps:          0       2       0       0       0
 13109 ;;      Totals:         0       3       0       0       0
 13110 ;;Total ram usage:        3 bytes
 13111 ;; Hardware stack levels used: 1
 13112 ;; Hardware stack levels required when called: 1
 13113 ;; This function calls:
 13114 ;;		Nothing
 13115 ;; This function is called by:
 13116 ;;		_I2C_Master_Start
 13117 ;;		_I2C_Master_RepeatedStart
 13118 ;;		_I2C_Master_Stop
 13119 ;;		_I2C_Master_Write
 13120 ;;		_I2C_Master_Read
 13121 ;; This function uses a non-reentrant model
 13122 ;;
 13123                           
 13124                           
 13125                           ;psect for function _I2C_Master_Wait
 13126  1A6E                     _I2C_Master_Wait:
 13127                           
 13128                           ;I2C.c: 39:   char tempo;;I2C.c: 40:   tempo=200;
 13129                           
 13130                           ;incstack = 0
 13131                           ; Regs used in _I2C_Master_Wait: [wreg+status,2+status,0]
 13132  1A6E  30C8               	movlw	200
 13133  1A6F  1283               	bcf	3,5	;RP0=0, select bank0
 13134  1A70  00A0               	movwf	??_I2C_Master_Wait
 13135  1A71  0820               	movf	??_I2C_Master_Wait,w
 13136  1A72  00A2               	movwf	I2C_Master_Wait@tempo
 13137                           
 13138                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 13139  1A73  2A80               	goto	l3557
 13140  1A74                     l3553:
 13141                           
 13142                           ;I2C.c: 44:          tempo--;
 13143  1A74  3001               	movlw	1
 13144  1A75  02A2               	subwf	I2C_Master_Wait@tempo,f
 13145                           
 13146                           ;I2C.c: 47:       _delay((unsigned long)((1)*(8000000/4000.0)));
 13147  1A76  3003               	movlw	3
 13148  1A77  1283               	bcf	3,5	;RP0=0, select bank0
 13149  1A78  1303               	bcf	3,6	;RP1=0, select bank0
 13150  1A79  00A1               	movwf	??_I2C_Master_Wait+1
 13151  1A7A  3097               	movlw	151
 13152  1A7B  00A0               	movwf	??_I2C_Master_Wait
 13153  1A7C                     u5627:
 13154  1A7C  0BA0               	decfsz	??_I2C_Master_Wait,f
 13155  1A7D  2A7C               	goto	u5627
 13156  1A7E  0BA1               	decfsz	??_I2C_Master_Wait+1,f
 13157  1A7F  2A7C               	goto	u5627
 13158  1A80                     l3557:
 13159                           
 13160                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 13161  1A80  1683               	bsf	3,5	;RP0=1, select bank1
 13162  1A81  1303               	bcf	3,6	;RP1=0, select bank1
 13163  1A82  1914               	btfsc	20,2	;volatile
 13164  1A83  2A88               	goto	l3551
 13165  1A84  0811               	movf	17,w	;volatile
 13166  1A85  391F               	andlw	31
 13167  1A86  1903               	btfsc	3,2
 13168  1A87  2A8C               	goto	l3561
 13169  1A88                     l3551:
 13170                           
 13171                           ;I2C.c: 42:       {;I2C.c: 43:       if(tempo)
 13172  1A88  1283               	bcf	3,5	;RP0=0, select bank0
 13173  1A89  0822               	movf	I2C_Master_Wait@tempo,w
 13174  1A8A  1D03               	btfss	3,2
 13175  1A8B  2A74               	goto	l3553
 13176  1A8C                     l3561:
 13177                           
 13178                           ;I2C.c: 49:   return tempo ;
 13179  1A8C  1283               	bcf	3,5	;RP0=0, select bank0
 13180  1A8D  0822               	movf	I2C_Master_Wait@tempo,w
 13181  1A8E  0008               	return
 13182  1A8F                     __end_of_I2C_Master_Wait:
 13183                           
 13184                           	psect	text57
 13185  191B                     __ptext57:	
 13186 ;; *************** function _ADC_init *****************
 13187 ;; Defined at:
 13188 ;;		line 10 in file "adc.c"
 13189 ;; Parameters:    Size  Location     Type
 13190 ;;		None
 13191 ;; Auto vars:     Size  Location     Type
 13192 ;;		None
 13193 ;; Return value:  Size  Location     Type
 13194 ;;                  1    wreg      void 
 13195 ;; Registers used:
 13196 ;;		wreg, status,2, status,0
 13197 ;; Tracked objects:
 13198 ;;		On entry : 0/100
 13199 ;;		On exit  : 300/0
 13200 ;;		Unchanged: 0/0
 13201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13202 ;;      Params:         0       0       0       0       0
 13203 ;;      Locals:         0       0       0       0       0
 13204 ;;      Temps:          0       0       0       0       0
 13205 ;;      Totals:         0       0       0       0       0
 13206 ;;Total ram usage:        0 bytes
 13207 ;; Hardware stack levels used: 1
 13208 ;; Hardware stack levels required when called: 1
 13209 ;; This function calls:
 13210 ;;		Nothing
 13211 ;; This function is called by:
 13212 ;;		_main
 13213 ;; This function uses a non-reentrant model
 13214 ;;
 13215                           
 13216                           
 13217                           ;psect for function _ADC_init
 13218  191B                     _ADC_init:
 13219                           
 13220                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 13221                           
 13222                           ;incstack = 0
 13223                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 13224  191B  30C0               	movlw	192
 13225  191C  1283               	bcf	3,5	;RP0=0, select bank0
 13226  191D  1303               	bcf	3,6	;RP1=0, select bank0
 13227  191E  049F               	iorwf	31,f	;volatile
 13228                           
 13229                           ;adc.c: 12:      ADCON1=0b10000000;
 13230  191F  3080               	movlw	128
 13231  1920  1683               	bsf	3,5	;RP0=1, select bank1
 13232  1921  009F               	movwf	31	;volatile
 13233                           
 13234                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 13235  1922  179F               	bsf	31,7	;volatile
 13236                           
 13237                           ;adc.c: 14:      ADCON0bits.ADON=1;
 13238  1923  1283               	bcf	3,5	;RP0=0, select bank0
 13239  1924  141F               	bsf	31,0	;volatile
 13240  1925  0008               	return
 13241  1926                     __end_of_ADC_init:
 13242                           
 13243                           	psect	text58
 13244  11A9                     __ptext58:	
 13245 ;; *************** function _isr *****************
 13246 ;; Defined at:
 13247 ;;		line 29 in file "isr.c"
 13248 ;; Parameters:    Size  Location     Type
 13249 ;;		None
 13250 ;; Auto vars:     Size  Location     Type
 13251 ;;  tempo           2    6[COMMON] unsigned int 
 13252 ;; Return value:  Size  Location     Type
 13253 ;;                  1    wreg      void 
 13254 ;; Registers used:
 13255 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 13256 ;; Tracked objects:
 13257 ;;		On entry : 0/0
 13258 ;;		On exit  : 300/0
 13259 ;;		Unchanged: 0/0
 13260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13261 ;;      Params:         0       0       0       0       0
 13262 ;;      Locals:         2       0       0       0       0
 13263 ;;      Temps:          6       0       0       0       0
 13264 ;;      Totals:         8       0       0       0       0
 13265 ;;Total ram usage:        8 bytes
 13266 ;; Hardware stack levels used: 1
 13267 ;; This function calls:
 13268 ;;		Nothing
 13269 ;; This function is called by:
 13270 ;;		Interrupt level 1
 13271 ;; This function uses a non-reentrant model
 13272 ;;
 13273                           
 13274                           
 13275                           ;psect for function _isr
 13276  11A9                     _isr:
 13277                           
 13278                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 13279  11A9  188B               	btfsc	11,1	;volatile
 13280                           
 13281                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 13282  11AA  108B               	bcf	11,1	;volatile
 13283                           
 13284                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 13285                           
 13286                           ;isr.c: 37:       }
 13287  11AB  1C0C               	btfss	12,0	;volatile
 13288  11AC  2A24               	goto	i1l5501
 13289                           
 13290                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 13291  11AD  30B1               	movlw	177
 13292  11AE  008F               	movwf	15	;volatile
 13293                           
 13294                           ;isr.c: 42:                 TMR1L=0xF3;
 13295  11AF  30F3               	movlw	243
 13296  11B0  008E               	movwf	14	;volatile
 13297                           
 13298                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 13299  11B1  100C               	bcf	12,0	;volatile
 13300                           
 13301                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 13302  11B2  1683               	bsf	3,5	;RP0=1, select bank1
 13303  11B3  1FE4               	btfss	_generic_status^(0+128),7
 13304  11B4  29B7               	goto	i1l5457
 13305                           
 13306                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 13307  11B5  13E4               	bcf	_generic_status^(0+128),7
 13308  11B6  0064               	clrwdt	;# 
 13309  11B7                     i1l5457:
 13310                           
 13311                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 13312  11B7  300A               	movlw	10
 13313  11B8  07F8               	addwf	_Delay_Led_Tmr0,f	;volatile
 13314  11B9  1803               	skipnc
 13315  11BA  0AF9               	incf	_Delay_Led_Tmr0+1,f	;volatile
 13316  11BB  3000               	movlw	0
 13317  11BC  07F9               	addwf	_Delay_Led_Tmr0+1,f	;volatile
 13318                           
 13319                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 13320  11BD  3003               	movlw	3
 13321  11BE  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13322  11BF  30E8               	movlw	232
 13323  11C0  1903               	skipnz
 13324  11C1  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13325  11C2  1C03               	skipc
 13326  11C3  29C6               	goto	i1l5461
 13327                           
 13328                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 13329  11C4  01F8               	clrf	_Delay_Led_Tmr0	;volatile
 13330  11C5  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
 13331  11C6                     i1l5461:
 13332                           
 13333                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 13334  11C6  3001               	movlw	1
 13335  11C7  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13336  11C8  30F4               	movlw	244
 13337  11C9  1903               	skipnz
 13338  11CA  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13339  11CB  1803               	skipnc
 13340  11CC  29D1               	goto	i1l644
 13341                           
 13342                           ;isr.c: 55:                    PORTBbits.RB7=1;
 13343  11CD  1283               	bcf	3,5	;RP0=0, select bank0
 13344  11CE  1303               	bcf	3,6	;RP1=0, select bank0
 13345  11CF  1786               	bsf	6,7	;volatile
 13346  11D0  29D4               	goto	i1l5465
 13347  11D1                     i1l644:	
 13348                           ;isr.c: 56:                 else
 13349                           
 13350                           
 13351                           ;isr.c: 57:                    PORTBbits.RB7=0;
 13352  11D1  1283               	bcf	3,5	;RP0=0, select bank0
 13353  11D2  1303               	bcf	3,6	;RP1=0, select bank0
 13354  11D3  1386               	bcf	6,7	;volatile
 13355  11D4                     i1l5465:
 13356                           
 13357                           ;isr.c: 60:                 if(Delay_Led_Usart){
 13358  11D4  1683               	bsf	3,5	;RP0=1, select bank1
 13359  11D5  085B               	movf	_Delay_Led_Usart^(0+128),w	;volatile
 13360  11D6  045C               	iorwf	(_Delay_Led_Usart+1)^(0+128),w	;volatile
 13361  11D7  1903               	btfsc	3,2
 13362  11D8  29E2               	goto	i1l646
 13363                           
 13364                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 13365  11D9  300A               	movlw	10
 13366  11DA  02DB               	subwf	_Delay_Led_Usart^(0+128),f	;volatile
 13367  11DB  3000               	movlw	0
 13368  11DC  1C03               	skipc
 13369  11DD  03DC               	decf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13370  11DE  02DC               	subwf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13371                           
 13372                           ;isr.c: 62:                    PORTBbits.RB6=1;
 13373  11DF  1283               	bcf	3,5	;RP0=0, select bank0
 13374  11E0  1706               	bsf	6,6	;volatile
 13375                           
 13376                           ;isr.c: 63:                    }
 13377  11E1  29E4               	goto	i1l5471
 13378  11E2                     i1l646:	
 13379                           ;isr.c: 64:                 else{
 13380                           
 13381                           
 13382                           ;isr.c: 65:                    PORTBbits.RB6=0;
 13383  11E2  1283               	bcf	3,5	;RP0=0, select bank0
 13384  11E3  1306               	bcf	6,6	;volatile
 13385  11E4                     i1l5471:
 13386                           
 13387                           ;isr.c: 68:                 if(Delay_Led_Memory){
 13388  11E4  1683               	bsf	3,5	;RP0=1, select bank1
 13389  11E5  085D               	movf	_Delay_Led_Memory^(0+128),w	;volatile
 13390  11E6  045E               	iorwf	(_Delay_Led_Memory+1)^(0+128),w	;volatile
 13391  11E7  1903               	btfsc	3,2
 13392  11E8  29F2               	goto	i1l648
 13393                           
 13394                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 13395  11E9  300A               	movlw	10
 13396  11EA  02DD               	subwf	_Delay_Led_Memory^(0+128),f	;volatile
 13397  11EB  3000               	movlw	0
 13398  11EC  1C03               	skipc
 13399  11ED  03DE               	decf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 13400  11EE  02DE               	subwf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 13401                           
 13402                           ;isr.c: 70:                    PORTBbits.RB5=1;
 13403  11EF  1283               	bcf	3,5	;RP0=0, select bank0
 13404  11F0  1686               	bsf	6,5	;volatile
 13405                           
 13406                           ;isr.c: 71:                    }
 13407  11F1  29F4               	goto	i1l5477
 13408  11F2                     i1l648:	
 13409                           ;isr.c: 72:                 else{
 13410                           
 13411                           
 13412                           ;isr.c: 73:                    PORTBbits.RB5=0;
 13413  11F2  1283               	bcf	3,5	;RP0=0, select bank0
 13414  11F3  1286               	bcf	6,5	;volatile
 13415  11F4                     i1l5477:
 13416                           
 13417                           ;isr.c: 77:                 tempodecorrido+=10;
 13418  11F4  300A               	movlw	10
 13419  11F5  1683               	bsf	3,5	;RP0=1, select bank1
 13420  11F6  07D3               	addwf	_tempodecorrido^(0+128),f	;volatile
 13421  11F7  1803               	skipnc
 13422  11F8  0AD4               	incf	(_tempodecorrido+1)^(0+128),f	;volatile
 13423  11F9  3000               	movlw	0
 13424  11FA  07D4               	addwf	(_tempodecorrido+1)^(0+128),f	;volatile
 13425                           
 13426                           ;isr.c: 78:                 milisegundo+=10;
 13427  11FB  300A               	movlw	10
 13428  11FC  07D9               	addwf	_milisegundo^(0+128),f	;volatile
 13429  11FD  1803               	skipnc
 13430  11FE  0ADA               	incf	(_milisegundo+1)^(0+128),f	;volatile
 13431  11FF  3000               	movlw	0
 13432  1200  07DA               	addwf	(_milisegundo+1)^(0+128),f	;volatile
 13433                           
 13434                           ;isr.c: 79:                 if(milisegundo==1000){
 13435  1201  30E8               	movlw	232
 13436  1202  0659               	xorwf	_milisegundo^(0+128),w	;volatile
 13437  1203  3003               	movlw	3
 13438  1204  1903               	skipnz
 13439  1205  065A               	xorwf	(_milisegundo+1)^(0+128),w	;volatile
 13440  1206  1D03               	btfss	3,2
 13441  1207  2A24               	goto	i1l5501
 13442                           
 13443                           ;isr.c: 80:                    milisegundo=0;
 13444  1208  01D9               	clrf	_milisegundo^(0+128)	;volatile
 13445  1209  01DA               	clrf	(_milisegundo+1)^(0+128)	;volatile
 13446                           
 13447                           ;isr.c: 81:                    segundo++;
 13448  120A  3001               	movlw	1
 13449  120B  00F0               	movwf	??_isr
 13450  120C  0870               	movf	??_isr,w
 13451  120D  07FD               	addwf	_segundo,f	;volatile
 13452                           
 13453                           ;isr.c: 88:                    if(segundo==60){
 13454  120E  303C               	movlw	60
 13455  120F  067D               	xorwf	_segundo,w	;volatile
 13456  1210  1D03               	btfss	3,2
 13457  1211  2A24               	goto	i1l5501
 13458                           
 13459                           ;isr.c: 89:                       segundo=0;
 13460  1212  01FD               	clrf	_segundo	;volatile
 13461                           
 13462                           ;isr.c: 90:                       minuto++;
 13463  1213  3001               	movlw	1
 13464  1214  00F0               	movwf	??_isr
 13465  1215  0870               	movf	??_isr,w
 13466  1216  07FA               	addwf	_minuto,f	;volatile
 13467                           
 13468                           ;isr.c: 91:                       if(minuto==60){
 13469  1217  303C               	movlw	60
 13470  1218  067A               	xorwf	_minuto,w	;volatile
 13471  1219  1D03               	btfss	3,2
 13472  121A  2A24               	goto	i1l5501
 13473                           
 13474                           ;isr.c: 92:                          minuto=0;
 13475  121B  01FA               	clrf	_minuto	;volatile
 13476                           
 13477                           ;isr.c: 93:                          hora++;
 13478  121C  3001               	movlw	1
 13479  121D  00F0               	movwf	??_isr
 13480  121E  0870               	movf	??_isr,w
 13481  121F  07FC               	addwf	_hora,f	;volatile
 13482                           
 13483                           ;isr.c: 94:                          if(hora==24){
 13484  1220  3018               	movlw	24
 13485  1221  067C               	xorwf	_hora,w	;volatile
 13486  1222  1903               	btfsc	3,2
 13487                           
 13488                           ;isr.c: 95:                             hora=0;
 13489  1223  01FC               	clrf	_hora	;volatile
 13490  1224                     i1l5501:	
 13491                           ;isr.c: 99:                 }
 13492                           
 13493                           
 13494                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13495  1224  1283               	bcf	3,5	;RP0=0, select bank0
 13496  1225  1E8C               	btfss	12,5	;volatile
 13497  1226  2A8B               	goto	i1l662
 13498                           
 13499                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13500  1227  1683               	bsf	3,5	;RP0=1, select bank1
 13501  1228  1464               	bsf	_generic_status^(0+128),0
 13502                           
 13503                           ;isr.c: 109:         tempo=30;
 13504  1229  301E               	movlw	30
 13505  122A  00F6               	movwf	isr@tempo
 13506  122B  3000               	movlw	0
 13507  122C  00F7               	movwf	isr@tempo+1
 13508                           
 13509                           ;isr.c: 110:         count=0;
 13510  122D  01D5               	clrf	_count^(0+128)	;volatile
 13511  122E  01D6               	clrf	(_count+1)^(0+128)	;volatile
 13512                           
 13513                           ;isr.c: 111:         pointer=usart_buffer;
 13514  122F  3010               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13515  1230  00F0               	movwf	??_isr
 13516  1231  0870               	movf	??_isr,w
 13517  1232  00DF               	movwf	_pointer^(0+128)
 13518  1233                     i1l5523:	
 13519                           ;isr.c: 112:         while(tempo)
 13520                           
 13521                           
 13522                           ;isr.c: 112:         while(tempo)
 13523  1233  0876               	movf	isr@tempo,w
 13524  1234  0477               	iorwf	isr@tempo+1,w
 13525  1235  1903               	btfsc	3,2
 13526  1236  2A66               	goto	i1l5525
 13527                           
 13528                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13529  1237  1283               	bcf	3,5	;RP0=0, select bank0
 13530  1238  1303               	bcf	3,6	;RP1=0, select bank0
 13531  1239  1E8C               	btfss	12,5	;volatile
 13532  123A  2A5F               	goto	i1l5521
 13533                           
 13534                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13535  123B  081A               	movf	26,w	;volatile
 13536  123C  00F0               	movwf	??_isr
 13537  123D  1683               	bsf	3,5	;RP0=1, select bank1
 13538  123E  085F               	movf	_pointer^(0+128),w
 13539  123F  0084               	movwf	4
 13540  1240  0870               	movf	??_isr,w
 13541  1241  1783               	bsf	3,7	;select IRP bank2
 13542  1242  0080               	movwf	0
 13543                           
 13544                           ;isr.c: 118:                 if(count<32+20 -1)
 13545  1243  0856               	movf	(_count+1)^(0+128),w	;volatile
 13546  1244  3A80               	xorlw	128
 13547  1245  00FF               	movwf	127
 13548  1246  3080               	movlw	128
 13549  1247  027F               	subwf	127,w
 13550  1248  1D03               	skipz
 13551  1249  2A4C               	goto	u529_25
 13552  124A  3033               	movlw	51
 13553  124B  0255               	subwf	_count^(0+128),w	;volatile
 13554  124C                     u529_25:
 13555  124C  1803               	skipnc
 13556  124D  2A5A               	goto	i1l5519
 13557                           
 13558                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13559  124E  3001               	movlw	1
 13560  124F  1683               	bsf	3,5	;RP0=1, select bank1
 13561  1250  1303               	bcf	3,6	;RP1=0, select bank1
 13562  1251  07D5               	addwf	_count^(0+128),f	;volatile
 13563  1252  1803               	skipnc
 13564  1253  0AD6               	incf	(_count+1)^(0+128),f	;volatile
 13565  1254  3000               	movlw	0
 13566  1255  07D6               	addwf	(_count+1)^(0+128),f	;volatile
 13567                           
 13568                           ;isr.c: 121:                    pointer++;
 13569  1256  3001               	movlw	1
 13570  1257  00F0               	movwf	??_isr
 13571  1258  0870               	movf	??_isr,w
 13572  1259  07DF               	addwf	_pointer^(0+128),f
 13573  125A                     i1l5519:
 13574                           
 13575                           ;isr.c: 123:                 tempo=30;
 13576  125A  301E               	movlw	30
 13577  125B  00F6               	movwf	isr@tempo
 13578  125C  3000               	movlw	0
 13579  125D  00F7               	movwf	isr@tempo+1
 13580                           
 13581                           ;isr.c: 124:             }
 13582  125E  2A33               	goto	i1l5523
 13583  125F                     i1l5521:
 13584                           
 13585                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13586  125F  3001               	movlw	1
 13587  1260  02F6               	subwf	isr@tempo,f
 13588  1261  3000               	movlw	0
 13589  1262  1C03               	skipc
 13590  1263  03F7               	decf	isr@tempo+1,f
 13591  1264  02F7               	subwf	isr@tempo+1,f
 13592  1265  2A33               	goto	i1l5523
 13593  1266                     i1l5525:
 13594                           
 13595                           ;isr.c: 131:         (*pointer)=0;
 13596  1266  1683               	bsf	3,5	;RP0=1, select bank1
 13597  1267  1303               	bcf	3,6	;RP1=0, select bank1
 13598  1268  085F               	movf	_pointer^(0+128),w
 13599  1269  0084               	movwf	4
 13600  126A  1783               	bsf	3,7	;select IRP bank2
 13601  126B  0180               	clrf	0
 13602                           
 13603                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13604  126C  1283               	bcf	3,5	;RP0=0, select bank0
 13605  126D  1C98               	btfss	24,1	;volatile
 13606  126E  2A8B               	goto	i1l662
 13607                           
 13608                           ;isr.c: 134:            CREN=0;
 13609  126F  1218               	bcf	24,4	;volatile
 13610                           
 13611                           ;isr.c: 135:            CREN=1;
 13612  1270  1618               	bsf	24,4	;volatile
 13613                           
 13614                           ;isr.c: 136:            tempo=RCREG;
 13615  1271  081A               	movf	26,w	;volatile
 13616  1272  00F0               	movwf	??_isr
 13617  1273  01F1               	clrf	??_isr+1
 13618  1274  0870               	movf	??_isr,w
 13619  1275  00F6               	movwf	isr@tempo
 13620  1276  0871               	movf	??_isr+1,w
 13621  1277  00F7               	movwf	isr@tempo+1
 13622                           
 13623                           ;isr.c: 137:            tempo=RCREG;
 13624  1278  081A               	movf	26,w	;volatile
 13625  1279  00F0               	movwf	??_isr
 13626  127A  01F1               	clrf	??_isr+1
 13627  127B  0870               	movf	??_isr,w
 13628  127C  00F6               	movwf	isr@tempo
 13629  127D  0871               	movf	??_isr+1,w
 13630  127E  00F7               	movwf	isr@tempo+1
 13631                           
 13632                           ;isr.c: 138:            tempo=RCREG;
 13633  127F  081A               	movf	26,w	;volatile
 13634  1280  00F0               	movwf	??_isr
 13635  1281  01F1               	clrf	??_isr+1
 13636  1282  0870               	movf	??_isr,w
 13637  1283  00F6               	movwf	isr@tempo
 13638  1284  0871               	movf	??_isr+1,w
 13639  1285  00F7               	movwf	isr@tempo+1
 13640                           
 13641                           ;isr.c: 139:            usart_buffer[0]=0;
 13642  1286  1703               	bsf	3,6	;RP1=1, select bank2
 13643  1287  0190               	clrf	_usart_buffer^(0+256)	;volatile
 13644                           
 13645                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 13646  1288  1683               	bsf	3,5	;RP0=1, select bank1
 13647  1289  1303               	bcf	3,6	;RP1=0, select bank1
 13648  128A  14E4               	bsf	_generic_status^(0+128),1
 13649  128B                     i1l662:
 13650  128B  0875               	movf	??_isr+5,w
 13651  128C  1283               	bcf	3,5	;RP0=0, select bank0
 13652  128D  00FF               	movwf	127
 13653  128E  0874               	movf	??_isr+4,w
 13654  128F  008A               	movwf	10
 13655  1290  0873               	movf	??_isr+3,w
 13656  1291  0084               	movwf	4
 13657  1292  0E72               	swapf	??_isr+2,w
 13658  1293  0083               	movwf	3
 13659  1294  0EFE               	swapf	126,f
 13660  1295  0E7E               	swapf	126,w
 13661  1296  0009               	retfie
 13662  1297                     __end_of_isr:
 13663  007E                     btemp	set	126	;btemp
 13664  007E                     wtemp0	set	126
 13665                           
 13666                           	psect	intentry
 13667  0004                     __pintentry:	
 13668                           ;incstack = 0
 13669                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 13670                           
 13671  0004                     interrupt_function:
 13672  007E                     saved_w	set	btemp
 13673  0004  00FE               	movwf	btemp
 13674  0005  0E03               	swapf	3,w
 13675  0006  00F2               	movwf	??_isr+2
 13676  0007  0804               	movf	4,w
 13677  0008  00F3               	movwf	??_isr+3
 13678  0009  080A               	movf	10,w
 13679  000A  00F4               	movwf	??_isr+4
 13680  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13681  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13682  000D  087F               	movf	btemp+1,w
 13683  000E  00F5               	movwf	??_isr+5
 13684  000F  160A  118A  29A9   	ljmp	_isr
 13685                           
 13686                           	psect	config
 13687                           
 13688                           ;Config register CONFIG1 @ 0x2007
 13689                           ;	Oscillator Selection bits
 13690                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 13691                           ;	Watchdog Timer Enable bit
 13692                           ;	WDTE = ON, WDT enabled
 13693                           ;	Power-up Timer Enable bit
 13694                           ;	PWRTE = ON, PWRT enabled
 13695                           ;	RE3/MCLR pin function select bit
 13696                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 13697                           ;	Code Protection bit
 13698                           ;	CP = ON, Program memory code protection is enabled
 13699                           ;	Data Code Protection bit
 13700                           ;	CPD = OFF, Data memory code protection is disabled
 13701                           ;	Brown Out Reset Selection bits
 13702                           ;	BOREN = ON, BOR enabled
 13703                           ;	Internal External Switchover bit
 13704                           ;	IESO = ON, Internal/External Switchover mode is enabled
 13705                           ;	Fail-Safe Clock Monitor Enabled bit
 13706                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 13707                           ;	Low Voltage Programming Enable bit
 13708                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 13709                           ;	In-Circuit Debugger Mode bit
 13710                           ;	DEBUG = 0x1, unprogrammed default
 13711  2007                     	org	8199
 13712  2007  2F8C               	dw	12172
 13713                           
 13714                           ;Config register CONFIG2 @ 0x2008
 13715                           ;	Brown-out Reset Selection bit
 13716                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 13717                           ;	Flash Program Memory Self Write Enable bits
 13718                           ;	WRT = OFF, Write protection off
 13719  2008                     	org	8200
 13720  2008  3FFF               	dw	16383

Data Sizes:
    Strings     22
    Constant    64
    Data        0
    BSS         177
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     80      80
    BANK1            80     41      69
    BANK3            96      0      91
    BANK2            96      0      52

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 58
		 -> buffer(BANK3[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 58
		 -> buffer(BANK3[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[19]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK3[33]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK3[33]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK1[2]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 58
		 -> usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 58
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK1[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK1[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 52
		 -> NULL(NULL[0]), usart_buffer(BANK2[52]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_24C1025_Read_Str@buffer	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_24C1025_Read_Buffer_USART@data	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), EEPROM_24C1025_Write_Int@local(BANK1[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _MediaPlacaVaccum->___flmul
    ___flsub->___fladd
    ___fladd->_ADC_Media_10bits
    ___fldiv->___xxtofl
    _ADC_Media_10bits->___xxtofl
    _I2C_Master_Init->___lldiv
    _Decodify_Command->___fltol
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->___fltol
    ___fltol->___flmul
    ___flmul->___fladd
    _USART_put_int->___fltol
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_I2C_Master_Read
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_my_delay_ms_WDT
    _EEPROM_24C1025_Read_Buffer_USART->_I2C_Master_Read
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _EEPROM_24C1025_Write_Int->___fltol
    _EEPROM_24C1025_Write_Buffer->_my_delay_ms_WDT
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command
    _Decodify_Command->_EEPROM_24C1025_Fill_All
    _Save_Log->_EEPROM_24C1025_Write_Int
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  117192
                                             36 BANK1      5     5      0
                           _ADC_init
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                   _MediaPlacaVaccum
                         _USART_init
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           7     3      4     167
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _MediaPlacaVaccum                                    16    16      0   18995
                                             69 BANK0      1     1      0
                                              0 BANK1     11    11      0
                   _ADC_Media_10bits
            _Package_Usart_is_for_me
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    4201
                                             43 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    4004
                                             23 BANK0     20    12      8
                   _ADC_Media_10bits (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1016
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    2107
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      26
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Media_10bits                                     9     5      4    1705
                                             14 BANK0      9     5      4
                            ___lwdiv
                           ___xxtofl
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     337
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     765
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    19    19      0   95896
                                             17 BANK1     19    19      0
            _EEPROM_24C1025_Fill_All
   _EEPROM_24C1025_Read_Buffer_USART
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     184
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     255
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      44
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     416
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     416
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4   12681
                                             10 BANK1      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             69 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    4160
                                             43 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             4     1      3    3099
                                             12 BANK1      4     1      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     156
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    8     3      5    2670
                                              4 BANK1      8     3      5
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 6     4      2    1777
                                              8 BANK1      6     4      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      5     3      2    2219
                                              8 BANK1      5     3      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1584
                                              4 BANK1      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        4     2      2     812
                                              0 BANK1      4     2      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     324
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  3     2      1     812
                                              5 BANK0      3     2      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2     991
                                              5 BANK0      7     5      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     624
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   4     3      1     189
                                              3 BANK0      4     3      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_Integer                                  8     6      2     161
                                              3 BANK0      8     6      2
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Byte                                     3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                            10     5      5    6059
                                             10 BANK0     10     5      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    7267
                                             23 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    6763
                                              9 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              9     5      4    7761
                                             22 BANK0      9     5      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             7     3      4    7738
                                             22 BANK0      7     3      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          13     7      6    7570
                                             10 BANK0     12     6      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Buffer_USART                    13     7      6    6904
                                              9 BANK0     12     6      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2    1090
                                              3 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    8163
                                             10 BANK1      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                            10     4      6    7912
                                              0 BANK1     10     4      6
        _EEPROM_24C1025_Write_Buffer
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    6985
                                             10 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     502
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    4898
                                              3 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  8     8      0      28
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             _ADC_Media_10bits (ARG)
               ___lwdiv
               ___xxtofl
               _captura
               _my_delay_ms
         ___fltol (ARG)
           ___flmul (ARG)
     _EEPROM_24C1025_Read_Buffer_USART
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
       _USART_putc
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
         _I2C_Master_RepeatedStart
         _I2C_Master_Start
         _I2C_Master_Stop
         _I2C_Master_Write
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
       _I2C_Master_RepeatedStart
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
     _EEPROM_24C1025_Write_Buffer
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
     _EEPROM_24C1025_Write_Int
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
       _my_delay_ms_WDT
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
       ___flmul
       ___fltol
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_int
     _USART_put_string
     _USART_putc
     _USART_to_Protocol
     ___flmul
     ___fltol
     _strcpy
     _strlen
   _EEPROM_Read_Integer
   _EEPROM_Write_Integer
   _I2C_Master_Init
     ___lldiv
   _MediaPlacaVaccum
     _ADC_Media_10bits
     _Package_Usart_is_for_me
     ___fladd
     ___fldiv
       ___xxtofl (ARG)
     ___flge
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _my_delay_ms
   _USART_init
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     132       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     29      45       7       86.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      5B       9       94.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      34      11       54.2%
DATA                 0      0     132      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Nov 12 13:39:31 2021

                               _USART_putc 1931                               ___fldiv@aexp 0047  
                             ___fldiv@bexp 0046                                          pc 0002  
                             ___fldiv@sign 003F                           _MediaPlacaVaccum 0D37  
          EEPROM_24C1025_Read_Buffer@range 0034           EEPROM_24C1025_Write_Str@chip_add 0031  
                                       fsr 0004   __end_of_EEPROM_24C1025_Read_Buffer_USART 1800  
__size_of_EEPROM_24C1025_Read_Buffer_USART 017E         ??_EEPROM_24C1025_Read_Buffer_USART 002F  
        ?_EEPROM_24C1025_Read_Buffer_USART 0029           _EEPROM_24C1025_Read_Buffer_USART 1682  
                            _USART_put_int 1952                   Decodify_Command@tempchar 00BF  
                      __Umul8_16@word_mpld 0026                 __end_of_RESISTOR_ROOM_TEMP 101C  
             PROCULUS_VP_Write_String@text 00AE                                        l430 0382  
                                      l424 031F                                        l524 1D68  
                                      l428 032D                                        l525 1D69  
                                      l551 1A51                                        l519 1D44  
                                      l439 0EEB                                        l800 19F7  
                                      l529 1A97                                        l495 07F7  
                                      l817 19EB                                        l880 1939  
       EEPROM_24C1025_Read_Buffer@chip_add 0033                   Decodify_Command@sizedata 00B8  
                                      _isr 11A9                                        fsr0 0004  
                                      indf 0000                  __end_of_EEPROM_Write_Byte 1D78  
                         _ADC_Media_10bits 1ECF                               ___flmul@aexp 0059  
                             ___flmul@bexp 005E                     PROCULUS_VP_Write@vetor 00A6  
             ?_EEPROM_24C1025_Write_Buffer 002A                               ___flmul@sign 0058  
                             ___flmul@temp 0063                               ___flmul@prod 005F  
  __end_of_PROCULUS_Control_Register_Write 1CCD   __size_of_PROCULUS_Control_Register_Write 0036  
        ??_PROCULUS_Control_Register_Write 00A5           ?_PROCULUS_Control_Register_Write 00A4  
          _PROCULUS_Control_Register_Write 1C97                               ___fltol@exp1 006F  
                          __end_of_MAX_ADC 1024                                       l1311 0CAC  
                                     l1171 108D                                       l1332 0D2C  
                                     l1324 0D14                                       l1405 1AC3  
                                     l1190 084F                                       l1430 1123  
                                     l1174 10F3                                       l1370 0B02  
                                     l1346 09B5                                       l1290 0B5A  
                                     l1443 1179                                       l4011 0B30  
                                     l1444 1183                                       l1436 1163  
                                     l4005 0B25                                       l1294 0BF3  
                                     l4103 0C22                                       l1368 0AF4  
                                     l1296 0BD1                                       l4201 03A0  
                                     l4105 0C24                                       l4113 0C34  
                                     l4033 0B52                                       l4009 0B28  
                                     l4203 03A8                                       l4131 0CBE  
                                     l4123 0C9E                                       l4221 03CD  
                                     l4029 0B4F                                       l1398 066B  
                                     l4303 0625                                       l4039 0B64  
                                     l4313 0654                                       l4217 03C3  
                                     l4153 0CDF                                       l4145 0CD4  
                                     l5105 0E4D                                       l4307 063B  
                                     l4219 03C5                                       l4331 111B  
                                     l4139 0CCD                                       l4147 0CD6  
                                     l5131 0F59                                       l5123 0F11  
                                     l5027 1E07                                       l3701 1C94  
                                     l4421 1764                                       l4229 03DB  
                                     l4341 1136                                       l4157 0CE1  
                                     l4077 0BDC                                       l4069 0BA0  
                                     l5061 1E2C                                       l3551 1A88  
                                     l4423 176B                                       l4351 1177  
                                     l4343 1148                                       l4175 0D24  
                                     l4095 0C01                                       l4079 0BDE  
                                     l4087 0BED                                       l5047 1E24  
                                     l3553 1A74                                       l3561 1A8C  
                                     l4425 176E                                       l4281 05BD  
                                     l4353 1168                                       l4337 1132  
                                     l4451 17E2                                       l4531 1300  
                                     l4283 05DA                                       l4179 0D28  
                                     l5139 0F70                                       l5091 0DA9  
                                     l5083 0D61                                       l3557 1A80  
                                     l4453 1707                                       l4381 16B7  
                                     l3741 06AB                                       l4533 1378  
                                     l4525 1356                                       l4293 05F3  
                                     l4365 11A0                                       l4447 17BB  
                                     l4455 17E7                                       l4383 16BA  
                                     l3815 07D8                                       l3743 06AE  
                                     l4615 1639                                       l4471 12C8  
                                     l3911 1CC4                                       l3719 1ABB  
                                     l4199 039E                                       l3585 1D0C  
                                     l3809 07B6                                       l3817 06FB  
                                     l4625 1660                                       l4545 1530  
                                     l3841 1D4E                                       l4289 05F1  
                                     l3833 1C33                                       l4801 19F3  
                                     l4379 16B0                                       l3819 07DD  
                                     l3739 06A4                                       l4627 1669  
                                     l4571 1587                                       l4547 1537  
                                     l4467 12BE                                       l3843 1D51  
                                     l3931 080B                                       l3835 1C55  
                                     l4723 1A17                                       l4811 1F35  
                                     l5099 0DC0                                       l5605 1476  
                                     l3693 1C8D                                       l4549 153A  
                                     l4469 12C5                                       l4741 1BC1  
                                     l3909 1CAF                                       l4717 1EAA  
                                     l4821 1F6D                                       l4813 1F45  
                                     l5631 14DE                                       l5607 147D  
                                     l3783 075F                                       l4591 15E9  
                                     l3951 083B                                       l3935 0814  
                                     l5711 00DB                                       l4903 09D4  
                                     l5609 1480                                       l5625 14B9  
                                     l5633 1402                                       l3689 1C7A  
                                     l3785 0766                                       l4593 15EC  
                                     l4665 1B55                                       l3881 19D5  
                                     l3961 085E                                       l3953 084B  
                                     l4825 1F7A                                       l5635 14E3  
                                     l5571 13C9                                       l3787 0769  
                                     l4739 1BA4                                       l5803 029A  
                                     l5723 0113                                       l4835 10A7  
                                     l4589 15E2                                       l5813 02D1  
                                     l5733 0143                                       l4909 09E0  
                                     l5567 13BF                                       l3983 1DA4  
                                     l3975 1D80                                       l3879 19CA  
                                     l5831 0314                                       l5807 02C0  
                                     l5743 016B                                       l5727 012C  
                                     l5719 0105                                       l4935 0A4E  
                                     l4839 10CD                                       l5569 13C6  
                                     l4689 1C04                                       l3977 1D8E  
                                     l5657 1E56                                       l5825 02F8  
                                     l5761 01A4                                       l3889 1CD5  
                                     l4961 0A8D                                       l4953 0A59  
                                     l4929 0A2F                                       l4937 0A0B  
                                     l4873 0987                                       l3987 1DAF  
                                     l5659 1E71                                       l5819 02E0  
                                     l5755 0195                                       l4779 1EEB  
                                     l4955 0A76                                       l4939 0A53  
                                     l4875 098F                                       ?_isr 0070  
                                     l5669 1DBE                                       l5837 0323  
                                     l5773 01EA                                       l5749 0187  
                                     l4797 19F0                                       l4965 0A8F  
                                     l4893 09AD                                       l4869 0984  
                                     l5791 0258                                       l5767 01C4  
                                     l5695 0071                                       l4991 0AFE  
                                     l4975 0AC1                                       l5927 08FC  
                                     l5785 022A                                       l5689 0057  
                                     l5849 0331                                       l4889 09AA  
                                     l5953 0929                                       l5779 020D  
                                     l5699 007E                                       l4979 0ADA  
                                     l5797 027C                                       l5997 033B  
                                     _BETA 1048                                       STR_1 1050  
                                     STR_2 1063                                _statuspower 00E3  
                                     _CREN 00C4                                       u3105 0854  
                                     u3300 0BC0                                       u4005 0646  
                                     u3045 081D                                       u3310 0BC1  
                                     u3145 1D83                                       u4203 1762  
                                     u3075 083C                                       u3165 1D8F  
                                     u4303 1596                                       u4223 12A9  
                                     u3175 1D9B                                       u4135 118B  
                                     u4055 113F                                       u4233 12BC  
                                     u3185 1DA5                                       u3441 0C5F  
                                     u3433 0C46                                       u3425 0C28  
                                     u3345 0BE2                                       u2810 1C8A  
                                     u3450 0C73                                       u3442 0C60  
                                     u4163 169B                                       u4323 15E0  
                                     u4243 1318                                       u4075 115B  
                                     u3451 0C74                                       u3443 0C65  
                                     u3452 0C79                                       u3444 0C66  
                                     u4173 16AE                                       u3453 0C7A  
                                     u3445 0C6B                                       u3446 0C6C  
                                     u4183 171D                                       u4095 1170  
                                     u3295 0BB4                                       u2913 075D  
                                     u4505 1F5C                                       u5323 13AA  
                                     u4283 151B                                       u2835 19FD  
                                     u4515 1F6E                                       u2693 1D1E  
                                     u5333 13BD                                       u4293 152E  
                                     u5343 1424                                       u2855 1AC4  
                                     u3815 04DE                                       u3495 0CC0  
                                     u2873 068F                                       u4385 1EB6  
                                     u4705 0A1D                                       u4561 10B8  
                                     u4562 10B9                                       u5363 1474  
                                     u2883 06A2                                       u3915 05CC  
                                     u4475 1F39                                       u4563 10BE  
                                     u3595 0CFE                                       u4564 10BF  
                                     u2893 0711                                       u4725 0A28  
                                     u4581 10DE                                       u4565 10C4  
                                     u5517 0875                                       u4582 10DF  
                                     u4566 10C5                                       u5375 1410  
                                     u5607 17FA                                       u3855 0572  
                                     u4495 1F47                                       u5527 1CEF  
                                     u4735 0A3D                                       u4583 10E4  
                                     u4584 10E5                                       u5617 1D27  
                                     u5393 1DF1                                       u5537 1A05  
                                     u3785 0485                                       u2993 1CE7  
                                     u4585 10EA                                       u4586 10EB  
                                     u5627 1A7C                                       u5547 1C29  
                                     u5557 1D72                                       u3885 05A9  
                                     u4765 0A5D                                       u5567 1AA8  
                                     u3895 05C1                                       u4855 0AAC  
                                     u4695 0A14                                       u5577 15B9  
                                     u3985 0610                                       u4865 0ACA  
                                     u4785 0A68                                       u5587 167C  
                                     u3995 062E                                       u4875 0AE5  
                                     u5597 07F0                                       u4895 1BDA  
                                     _WPUB 0095                       PROCULUS_Buzzer@vetor 00AB  
         __end_of_I2C_Master_RepeatedStart 1073                                       _main 086D  
                                     _hora 007C          __size_of_EEPROM_24C1025_Write_Int 0029  
                                     btemp 007E          __size_of_EEPROM_24C1025_Write_Str 00FB  
                ?_EEPROM_24C1025_Write_Int 00A0                  ?_EEPROM_24C1025_Write_Str 002A  
              __size_of_EEPROM_Read_String 0020                                       start 0012  
                         __end_of_ADC_init 1926                           _BALANCE_RESISTOR 104C  
                          ___fldiv@new_exp 0040         EEPROM_24C1025_Read_Buffer@sizedata 002E  
                                    ??_isr 0070                           ?_I2C_Master_Init 002E  
                         ?_I2C_Master_Read 0023                           ?_I2C_Master_Wait 0070  
                         ?_I2C_Master_Stop 0070                             ?_USART_put_int 00A0  
                            ___fltol@sign1 006E                            __end_of___fladd 0D37  
                                    ?_main 0070                            __end_of___fldiv 0B0A  
                                    _EEADR 010D                            __end_of___flmul 0678  
                          __end_of___flsub 1A4E                            __end_of___fltol 086D  
                                    _ANSEL 0188                            __end_of___lldiv 1F83  
                                    _T1CON 0010                            __end_of___lwdiv 1DB4  
                                    i1l644 11D1                                      i1l662 128B  
                                    i1l646 11E2                                      i1l648 11F2  
                                    _RCREG 001A                                      _TMR1H 000F  
                                    _TMR1L 000E                                      _SPBRG 0099  
                                    _PORTA 0005                                      _PORTB 0006  
                                    _PORTC 0007                                      _PORTE 0009  
                                    _TRISA 0085                                      _TRISB 0086  
                                    _TRISC 0087            EEPROM_24C1025_Read_Int@chip_add 003C  
                                    _TRISE 0089                                      _TXREG 0019  
                    ADC_Media_10bits@canal 0033                            __end_of_captura 0800  
                             _usart_buffer 0110                      ADC_Media_10bits@value 0034  
                EEPROM_Read_Integer@result 0028                                      _canal 00E2  
             __size_of_EEPROM_Read_Integer 002A                                      _count 00D5  
                                    _errno 00D1              ??_EEPROM_24C1025_Write_Buffer 0031  
       __size_of_EEPROM_24C1025_Write_Byte 0016                 ?_EEPROM_24C1025_Write_Byte 0037  
                                    pclath 000A                                      status 0003  
                                    wtemp0 007E            EEPROM_24C1025_Read_Byte@mem_add 0036  
                             __end_of_BETA 104C                    __size_of_PROCULUS_Delay 001D  
        __size_of_PROCULUS_VP_Write_String 0018                                ?_USART_init 0020  
                          __initialization 0015                  ?_PROCULUS_VP_Write_String 00AC  
                              ?_USART_putc 0070                               __end_of_main 0969  
                           Send_To_MB@size 0021                   __end_of_EEPROM_Read_Byte 1AB1  
                                   ??_main 00C4                           __end_of_Save_Log 2000  
                         _USART_put_string 1C2F                      EEPROM_Write_Byte@addr 0023  
                    EEPROM_Write_Byte@dado 0020                 __size_of_EEPROM_Write_Byte 003C  
                        ?_I2C_Master_Start 0070                  EEPROM_Write_Byte@last_GIE 0024  
                        ?_I2C_Master_Write 0023                         ??_I2C_Master_Start 0023  
                                   _ADCON1 009F                         ??_I2C_Master_Write 0025  
                PROCULUS_Show_Screen@vetor 00AB                                     _ADRESH 001E  
                                   _ADRESL 009E                                     _EEDATA 010C  
                                   _EECON2 018D                                 _Send_To_MB 1AFC  
                    EEPROM_Write_Integer@i 002B                                     _ANSELH 0189  
             __end_of_PROCULUS_Show_Screen 197C                                     i1l5501 1224  
                                   i1l5521 125F                                     i1l5523 1233  
                                   i1l5525 1266                                     i1l5461 11C6  
                                   i1l5519 125A                                     i1l5471 11E4  
                                   i1l5465 11D4                                     i1l5457 11B7  
                                   i1l5477 11F4          __end_of_EEPROM_24C1025_Write_Byte 1992  
                                   u529_25 124C                               ?_my_delay_ms 0020  
                                   _TMR1IE 0460                                     _TMR1CS 0081  
                 ?_EEPROM_24C1025_Fill_All 00AA                                     _SSPADD 0093  
                                   _TRISC3 043B                                     _TRISC4 043C  
                                   _TRISC6 043E                                     _TRISC7 043F  
                                   _SSPCON 0014                                     _SSPBUF 0013  
           EEPROM_24C1025_Fill_All@mem_add 00AD                           __end_of___xxtofl 11A9  
            EEPROM_24C1025_Read_Str@buffer 002D                         PROCULUS_VP_Write@i 00AB  
                 __end_of_Decodify_Command 0383                   ?_EEPROM_24C1025_Read_Int 0036  
                 ?_EEPROM_24C1025_Read_Str 0029                   _I2C_Master_RepeatedStart 1068  
     __size_of_EEPROM_24C1025_Write_Buffer 0176                                     ___flge 1073  
                                ??___fladd 003F                                  ??___fldiv 0036  
                                ??___flmul 0053                                  ??___flsub 0053  
                                ??___fltol 0069                            ??_USART_put_int 00A2  
                                ??___lldiv 0028                                     _header 00D7  
                        __end_of_ROOM_TEMP 1020                                  ??___lwdiv 0024  
                                   _buffer 01CA                          _USART_to_Protocol 1E7A  
                          USART_putc@value 0020                                     _minuto 007A  
        EEPROM_24C1025_Read_Buffer@cnt_108 0032                                  ??_captura 0022  
                       ?_USART_to_Protocol 0070               Decodify_Command@add_24LCxxxx 00C0  
                                   _strcpy 1A12                                     _strlen 19C3  
        EEPROM_24C1025_Read_Buffer@mem_add 002A           __end_of_EEPROM_24C1025_Read_Byte 19C3  
                       __size_of__Umul8_16 0023                                     saved_w 007E  
        EEPROM_24C1025_Write_Byte@chip_add 003C                                  ?_ADC_init 0070  
                      ??_USART_to_Protocol 0020                        __size_of_USART_init 0042  
                      __size_of_USART_putc 0010                   __end_of_MediaPlacaVaccum 1000  
                               ___flge@ff1 0020                                 ___flge@ff2 0024  
                             ___xxtofl@arg 002A                               ___xxtofl@exp 0029  
                             ___xxtofl@val 0020                           __end_oflog@coeff 1048  
                  __end_of__initialization 0033                      _MediaPlacaVaccum$2372 00A0  
      PROCULUS_Control_Register_Write@size 00A4                                 ___fltol@f1 0065  
                             _Board_Number 00E1                   __end_of_ADC_Media_10bits 1F25  
                           __pcstackCOMMON 0070                   __size_of_PROCULUS_Buzzer 002A  
                __end_of_USART_to_Protocol 1ECF                      USART_put_string@vetor 0021  
                      my_delay_ms_WDT@time 0020              __size_of_EEPROM_Write_Integer 0032  
                 __size_of_my_delay_ms_WDT 0038                             _OPTION_REGbits 0081  
                 __end_of_BALANCE_RESISTOR 1050           __end_of_EEPROM_24C1025_Write_Int 1B4D  
         __end_of_EEPROM_24C1025_Write_Str 1392                                 ??_ADC_init 0020  
              __end_of_EEPROM_Write_String 1BCC            __end_of_EEPROM_24C1025_Fill_All 1DF4  
                              ?_Send_To_MB 0070                     __size_of_Send_Reply_OK 0009  
                               __pbssBANK1 00C9                                 __pbssBANK2 0110  
                               __pbssBANK3 0190                         _RESISTOR_ROOM_TEMP 1018  
          __end_of_EEPROM_24C1025_Read_Int 1AFC            __end_of_EEPROM_24C1025_Read_Str 1682  
                 ?_Package_Usart_is_for_me 0070                                  ?_Save_Log 00AA  
                           _PROCULUS_Delay 19F5                          __end_of__Umul8_16 1AD4  
                               __pmaintext 086D                                    ?___flge 0020  
                      Save_Log@add_datalog 00AA                        _EEPROM_Read_Integer 1B4D  
               PROCULUS_Show_Screen@screen 00A8                                 __pintentry 0004  
                     _PROCULUS_Show_Screen 1967                                    _T1CKPS0 0084  
                                  _T1CKPS1 0085                                    ?_strcpy 0020  
                                  ?_strlen 0020                          MediaPlacaVaccum@i 00A5  
                                ?___xxtofl 0020                                    _MAX_ADC 1020  
                     ?_EEPROM_Read_Integer 0023                      Decodify_Command@dados 00B5  
              EEPROM_24C1025_Read_Int@data 003D                                    _SSPCON2 0091  
         __end_of_PROCULUS_VP_Write_String 19AA                    EEPROM_Read_Integer@addr 0026  
                                  _SSPSTAT 0094                   _EEPROM_24C1025_Read_Byte 19AA  
                               __stringtab 1000                        PROCULUS_VP_Write@vp 00A4  
              ??_EEPROM_24C1025_Write_Byte 003C                 __end_of_EEPROM_Read_String 1A6E  
                   __end_of_PROCULUS_Delay 1A12                   __end_of_USART_put_string 1C62  
                     __size_of_my_delay_ms 0037                                 ??_Save_Log 0070  
                          PROCULUS_Delay@i 0024                                    _Vaccum0 00CD  
                             ??_USART_init 0024                EEPROM_24C1025_Read_Str@ctrl 0033  
                                  _Tensao1 00C9                               ??_USART_putc 0020  
               __size_of_USART_to_Protocol 0055                PROCULUS_Buzzer@time_ms_x_10 00A8  
                          __size_of___flge 0093                                    ___fladd 0B0A  
                                  ___fldiv 0969                   EEPROM_Write_Integer@addr 002A  
                                  ___flmul 0383                   EEPROM_Write_Integer@dado 0025  
                                  ___flsub 1A30                                    ___fltol 0802  
                                  ___lldiv 1F25                                    ___lwdiv 1D78  
                            _Send_Reply_OK 1912                        __size_of_Send_To_MB 0028  
                    ?_PROCULUS_Show_Screen 00A8                                    _captura 07F6  
                         _statuspower_memo 007B                                    __ptext1 1DF4  
                                  __ptext2 0D37                                    __ptext3 1A30  
                                  __ptext4 0B0A                                    __ptext5 1073  
                                  __ptext6 0969                                    __ptext7 19DC  
                                  __ptext8 1ECF                                    __ptext9 1CCD  
                        ??_PROCULUS_Buzzer 00AA                                    _destino 00E0  
                        ?_EEPROM_Read_Byte 0070                            __size_of_strcpy 001E  
                          __size_of_strlen 0019                               __size_of_isr 00EE  
                               ??___xxtofl 0024                         ??_EEPROM_Read_Byte 0020  
                                  _segundo 007D                   __size_of_I2C_Master_Init 0031  
                 __size_of_I2C_Master_Read 0035                             _usart_protocol 0190  
                    ??_EEPROM_Read_Integer 0025                   __size_of_I2C_Master_Wait 0021  
                 __size_of_I2C_Master_Stop 0009              EEPROM_24C1025_Write_Int@local 00A8  
                                  _pointer 00DF              EEPROM_24C1025_Write_Byte@data 003B  
                                  clrloop0 1902                         __end_of_USART_init 1E36  
          __end_of_Package_Usart_is_for_me 19F5                         __end_of_USART_putc 1941  
                        ADC_Media_10bits@i 0036                       end_of_initialization 0033  
                 _EEPROM_24C1025_Write_Int 1B24                          ??_my_delay_ms_WDT 0024  
                 _EEPROM_24C1025_Write_Str 1297                 ??_I2C_Master_RepeatedStart 0023  
                          ?_PROCULUS_Delay 0020                            my_delay_ms@time 0020  
          EEPROM_24C1025_Write_Buffer@data 002F            EEPROM_24C1025_Write_Buffer@ctrl 0036  
                __size_of_I2C_Master_Start 0011                  __size_of_I2C_Master_Write 000B  
                        ?_Decodify_Command 0070                            ___lldiv@divisor 0020  
                          ___lldiv@counter 002D       EEPROM_24C1025_Read_Buffer_USART@data 002E  
     EEPROM_24C1025_Read_Buffer_USART@ctrl 0034                         ??_Decodify_Command 00B1  
                                _RCSTAbits 0018                           I2C_Master_Init@c 002E  
                         I2C_Master_Read@a 0023                             ?_Send_Reply_OK 0070  
                _EEPROM_24C1025_Write_Byte 197C           __size_of_EEPROM_24C1025_Fill_All 0040  
                                  strlen@s 0024                         USART_to_Protocol@i 0022  
                                _PORTAbits 0005                                  _PORTBbits 0006  
                                _PORTCbits 0007                           _Delay_Led_Memory 00DD  
             ??_EEPROM_24C1025_Read_Buffer 0030              EEPROM_24C1025_Write_Str@range 0032  
                                _ROOM_TEMP 101C                                ___fladd@grs 004A  
         __size_of_EEPROM_24C1025_Read_Int 0028    EEPROM_24C1025_Read_Buffer_USART@cnt_117 0031  
         __size_of_EEPROM_24C1025_Read_Str 017A                              ___xxtofl@sign 0028  
      __end_of_EEPROM_24C1025_Write_Buffer 1508                _EEPROM_24C1025_Write_Buffer 1392  
  EEPROM_24C1025_Read_Buffer_USART@mem_add 0029                                ___fldiv@grs 0042  
                              ___fldiv@rem 003B       PROCULUS_Control_Register_Write@vetor 00A6  
         EEPROM_24C1025_Write_Buffer@count 0033            EEPROM_24C1025_Write_Int@mem_add 00A0  
         EEPROM_24C1025_Write_Buffer@range 0035                          __size_of_ADC_init 000B  
                  Decodify_Command@tempint 00B9                          ?_MediaPlacaVaccum 0070  
                    PROCULUS_VP_Write@size 00A8            EEPROM_24C1025_Read_Str@chip_add 0031  
                              ___flmul@grs 005A                         ??_MediaPlacaVaccum 0065  
                 _PROCULUS_VP_Write_String 1992                                  _TXSTAbits 0098  
      __size_of_EEPROM_24C1025_Read_Buffer 017E                          ?_ADC_Media_10bits 002E  
                   PROCULUS_Delay@tempo_ms 0020                     ??_PROCULUS_Show_Screen 00AA  
                       ??_ADC_Media_10bits 0032                             __end_of___flge 1106  
                    __end_of_USART_put_int 1967                                _BAUDCTLbits 0187  
                           __end_of_strcpy 1A30                             __end_of_strlen 19DC  
                      start_initialization 0015                                __end_of_isr 1297  
                              USART_init@i 0025                               ??_Send_To_MB 0021  
 EEPROM_24C1025_Read_Buffer_USART@chip_add 0032                          ??_I2C_Master_Init 0032  
                        ??_I2C_Master_Read 0025                          ??_I2C_Master_Wait 0020  
                        ??_I2C_Master_Stop 0023               __end_of_EEPROM_Write_Integer 1C2F  
         EEPROM_24C1025_Write_Int@chip_add 00A7                        Decodify_Command@add 00B7  
                          ??_Send_Reply_OK 0025                                   ??___flge 0028  
                        __size_of_Save_Log 007D                       I2C_Master_Wait@tempo 0022  
                                __Umul8_16 1AB1                         __end_of_Send_To_MB 1B24  
         __size_of_Package_Usart_is_for_me 0019                                   ??_strcpy 0021  
                                 ??_strlen 0022   EEPROM_24C1025_Read_Buffer_USART@sizedata 002D  
               ??_EEPROM_24C1025_Read_Byte 003A         EEPROM_24C1025_Write_Buffer@mem_add 002A  
                                ___fladd@a 003B                                  ___fladd@b 0037  
         EEPROM_24C1025_Write_Byte@mem_add 0037                                  ___fldiv@a 002E  
                                ___fldiv@b 0032                                  ___flmul@a 004F  
                                ___flmul@b 004B                                __pbssCOMMON 0078  
                                ___flsub@a 004B                                  ___flsub@b 004F  
                                ___latbits 0002                              __pcstackBANK0 0020  
                            __pcstackBANK1 00A0                          _PROCULUS_VP_Write 1E36  
                        __size_of___xxtofl 00A3                         ?_PROCULUS_VP_Write 00A4  
             __size_of_EEPROM_Write_String 002B                           _I2C_Master_Start 1941  
                         _I2C_Master_Write 1926                        ??_PROCULUS_VP_Write 00A9  
                           _tempodecorrido 00D3                          ?_USART_put_string 0021  
                          _PROCULUS_Buzzer 1B77                           ___lwdiv@dividend 0022  
           Package_Usart_is_for_me@retorno 0020                         ??_USART_put_string 0023  
                                 ?___fladd 0037                                   ?___fldiv 002E  
                  _EEPROM_24C1025_Fill_All 1DB4                                   ?___flmul 004B  
                                 ?___flsub 004B                                   ?___fltol 0065  
                                 ?___lldiv 0020                                 ?__Umul8_16 0020  
                       _EEPROM_Read_String 1A4E                                   ?___lwdiv 0020  
       __end_of_EEPROM_24C1025_Read_Buffer 07F6                 _EEPROM_24C1025_Read_Buffer 0678  
                                 ?_captura 0020                                  __pstrings 1000  
                    MediaPlacaVaccum@canal 00A4                            _my_delay_ms_WDT 1D04  
                  _EEPROM_24C1025_Read_Int 1AD4                    _EEPROM_24C1025_Read_Str 1508  
                   EEPROM_Read_Integer@ptr 0027                 ??_EEPROM_24C1025_Write_Int 00A6  
               ??_EEPROM_24C1025_Write_Str 002F                        ?_EEPROM_Read_String 0023  
                __end_of_PROCULUS_VP_Write 1E7A                 EEPROM_24C1025_Read_Str@cnt 0030  
                                 _ADC_init 191B                           ___lwdiv@quotient 0025  
                  EEPROM_Write_Integer@ptr 0029                           ??_PROCULUS_Delay 0022  
           EEPROM_24C1025_Read_Buffer@data 002F             EEPROM_24C1025_Read_Buffer@ctrl 0035  
                            ??_my_delay_ms 0024                  __size_of_EEPROM_Read_Byte 0022  
                        interrupt_function 0004            EEPROM_24C1025_Write_Str@mem_add 002A  
                     ??_EEPROM_Read_String 0024                                  clear_ram0 1901  
                                 _PIE1bits 008C                                   _PIR1bits 000C  
         PROCULUS_Control_Register_Write@i 00A7                     Decodify_Command@OutPut 00BB  
                          _PT100_TRANSLADA 1010                            _Delay_Led_Usart 00DB  
             EEPROM_24C1025_Read_Byte@data 003C                __end_of_EEPROM_Read_Integer 1B77  
                               _ADCON0bits 001F                                __stringbase 100F  
                               _ADCON1bits 009F                  __size_of_Decodify_Command 034C  
                     _EEPROM_Write_Integer 1BFD             EEPROM_24C1025_Read_Int@mem_add 0036  
                                main@reset 00C7                 ??_PROCULUS_VP_Write_String 00AF  
                      I2C_Master_Read@temp 0027                    __end_of_PROCULUS_Buzzer 1BA1  
                           _generic_status 00E4                                 _EECON1bits 018C  
                                 _Save_Log 1F83                  ??_EEPROM_24C1025_Fill_All 0070  
                      __end_of_my_delay_ms 1D04               EEPROM_24C1025_Read_Str@range 0032  
                  __end_of_my_delay_ms_WDT 1D3C                               my_delay_ms@i 0026  
                              ??__Umul8_16 0022                  __size_of_MediaPlacaVaccum 02C9  
        __size_of_I2C_Master_RepeatedStart 000B                           __size_of___fladd 022D  
                ??_EEPROM_24C1025_Read_Int 003A                    _Package_Usart_is_for_me 19DC  
                         __size_of___fldiv 01A1                  ??_EEPROM_24C1025_Read_Str 002E  
                         __size_of___flmul 02F5                  ?_I2C_Master_RepeatedStart 0070  
                         __size_of___flsub 001E                           __size_of___fltol 006B  
                         __size_of___lldiv 005E                           __size_of___lwdiv 003C  
                       __end_of__stringtab 1010        EEPROM_24C1025_Write_Buffer@chip_add 0034  
                      USART_put_string@ptr 0023                           __size_of_captura 000A  
                    ?_EEPROM_Write_Integer 0025                            _I2C_Master_Init 1BCC  
                          _I2C_Master_Read 1C62                                   ___xxtofl 1106  
               __size_of_PROCULUS_VP_Write 0044                            _I2C_Master_Wait 1A6E  
         EEPROM_24C1025_Read_Byte@chip_add 003B                            _I2C_Master_Stop 1909  
                __size_of_ADC_Media_10bits 0056                            ___lwdiv@divisor 0020  
                          ___lwdiv@counter 0027                                   __ptext10 07F6  
                                 __ptext11 1106                                   __ptext20 1F83  
                                 __ptext12 1BCC                                   __ptext21 0802  
                                 __ptext13 1F25                                   __ptext30 1C97  
                                 __ptext22 0383                                   __ptext14 0037  
                                 __ptext31 1952                                   __ptext23 1AB1  
                                 __ptext15 1A12                                   __ptext40 197C  
                                 __ptext32 19F5                                   __ptext24 1992  
                                 __ptext16 1E7A                                   __ptext41 1508  
                                 __ptext33 1BA1                                   __ptext25 19C3  
                                 __ptext17 1AFC                                   __ptext50 1B24  
                                 __ptext42 1AD4                                   __ptext34 1BFD  
                                 __ptext26 1E36                                   __ptext18 1912  
                                 __ptext51 1392                                   __ptext43 19AA  
                                 __ptext35 1D3C                                   __ptext27 1967  
                                 __ptext19 1C2F                                   __ptext52 1D04  
                                 __ptext44 0678                                   __ptext36 1A4E  
                                 __ptext28 1B77                                   __ptext53 1926  
                                 __ptext45 1682                                   __ptext37 1B4D  
                                 __ptext29 1D78                                   __ptext54 1909  
                                 __ptext46 1931                                   __ptext38 1A8F  
                                 __ptext55 1941                                   __ptext47 1068  
                                 __ptext39 1297                                   __ptext56 1A6E  
                                 __ptext48 1C62                                   __ptext57 191B  
                                 __ptext49 1DB4                                   __ptext58 11A9  
                       USART_put_int@value 00A0                             _PT100_CONSTANT 1014  
                     MediaPlacaVaccum@Temp 00A7                                 strcpy@from 0020  
                            __size_of_main 00FC               EEPROM_24C1025_Fill_All@value 00AA  
               PROCULUS_VP_Write_String@vp 00AC                    __end_of_PT100_TRANSLADA 1014  
      EEPROM_24C1025_Write_Buffer@sizedata 002E                                _milisegundo 00D9  
                           _Delay_Led_Tmr0 0078              __size_of_PROCULUS_Show_Screen 0015  
                      _EEPROM_Write_String 1BA1                                   log@coeff 1024  
                 __end_of_I2C_Master_Start 1952                   __end_of_I2C_Master_Write 1931  
                               _INTCONbits 000B                     __end_of_PT100_CONSTANT 1018  
                                 isr@tempo 0076                       EEPROM_Read_Byte@addr 0022  
                   EEPROM_Read_String@addr 0025                     EEPROM_Read_String@dado 0023  
                         my_delay_ms_WDT@i 0026                                   intlevel1 0000  
                         ?_PROCULUS_Buzzer 00A8                          USART_put_int@dado 00A3  
                         _EEPROM_Read_Byte 1A8F                                _my_delay_ms 1CCD  
                     ?_EEPROM_Write_String 0025                           ___lldiv@dividend 0024  
                   __size_of_USART_put_int 0015               EEPROM_24C1025_Write_Int@data 00A4  
                     EEPROM_Read_Integer@i 002A                    EEPROM_Write_String@addr 0027  
                  EEPROM_Write_String@dado 0025                         USART_init@baudrate 0020  
                                stringcode 100A                                 _OSCCONbits 008F  
    EEPROM_24C1025_Read_Buffer_USART@range 0033                  ??_Package_Usart_is_for_me 0020  
                         ?_my_delay_ms_WDT 0020                      __end_of_Send_Reply_OK 191B  
                  __end_of_I2C_Master_Init 1BFD                    __end_of_I2C_Master_Read 1C97  
                  __end_of_I2C_Master_Wait 1A8F                    __end_of_I2C_Master_Stop 1912  
             EEPROM_24C1025_Write_Str@data 002E               EEPROM_24C1025_Write_Str@ctrl 0033  
              ?_EEPROM_24C1025_Read_Buffer 002A            EEPROM_24C1025_Fill_All@chip_add 00AC  
                   ??_EEPROM_Write_Integer 0027                     __Umul8_16@multiplicand 0020  
          USART_to_Protocol@usart_protocol 0024                           _Decodify_Command 0037  
                __size_of_USART_put_string 0033                           ___lldiv@quotient 0029  
                        I2C_Master_Write@d 0023                                   strcpy@cp 0023  
                                 strlen@cp 0023                                   strcpy@to 0022  
                                 stringdir 100A                                   stringtab 1000  
                              _SSPCON2bits 0091                          _EEPROM_Write_Byte 1D3C  
           EEPROM_24C1025_Read_Str@mem_add 0029                              ___fladd@signs 0047  
                       ?_EEPROM_Write_Byte 0020                      ??_EEPROM_Write_String 0026  
                             ___fladd@aexp 0048                               ___fladd@bexp 0049  
        __size_of_EEPROM_24C1025_Read_Byte 0019                  ?_EEPROM_24C1025_Read_Byte 0036  
                      EEPROM_Read_String@c 0026                       __Umul8_16@multiplier 0028  
                      ??_EEPROM_Write_Byte 0021                          __Umul8_16@product 0024  
                               _USART_init 1DF4  
