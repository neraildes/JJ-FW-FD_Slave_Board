

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Sep 27 11:34:23 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2
    56                           	psect	text41,local,class=CODE,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	text45,local,class=CODE,merge=1,delta=2
    61                           	psect	text46,local,class=CODE,merge=1,delta=2
    62                           	psect	text47,local,class=CODE,merge=1,delta=2
    63                           	psect	text48,local,class=CODE,merge=1,delta=2
    64                           	psect	text49,local,class=CODE,merge=1,delta=2
    65                           	psect	text50,local,class=CODE,merge=1,delta=2
    66                           	psect	text51,local,class=CODE,merge=1,delta=2
    67                           	psect	text52,local,class=CODE,merge=1,delta=2
    68                           	psect	text53,local,class=CODE,merge=1,delta=2
    69                           	psect	text54,local,class=CODE,merge=1,delta=2
    70                           	psect	text55,local,class=CODE,merge=1,delta=2
    71                           	psect	text56,local,class=CODE,merge=1,delta=2
    72                           	psect	intentry,global,class=CODE,delta=2
    73                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    74                           	dabs	1,0x7E,2
    75  0000                     
    76                           ; Version 2.20
    77                           ; Generated 12/02/2020 GMT
    78                           ; 
    79                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC16F886 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  008F                     	;# 
   153  0090                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0093                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0095                     	;# 
   161  0096                     	;# 
   162  0097                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009A                     	;# 
   166  009B                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  0105                     	;# 
   172  0107                     	;# 
   173  0108                     	;# 
   174  0109                     	;# 
   175  010C                     	;# 
   176  010C                     	;# 
   177  010D                     	;# 
   178  010E                     	;# 
   179  010F                     	;# 
   180  0185                     	;# 
   181  0187                     	;# 
   182  0188                     	;# 
   183  0189                     	;# 
   184  018C                     	;# 
   185  018D                     	;# 
   186  0000                     	;# 
   187  0001                     	;# 
   188  0002                     	;# 
   189  0003                     	;# 
   190  0004                     	;# 
   191  0005                     	;# 
   192  0006                     	;# 
   193  0007                     	;# 
   194  0009                     	;# 
   195  000A                     	;# 
   196  000B                     	;# 
   197  000C                     	;# 
   198  000D                     	;# 
   199  000E                     	;# 
   200  000E                     	;# 
   201  000F                     	;# 
   202  0010                     	;# 
   203  0011                     	;# 
   204  0012                     	;# 
   205  0013                     	;# 
   206  0014                     	;# 
   207  0015                     	;# 
   208  0015                     	;# 
   209  0016                     	;# 
   210  0017                     	;# 
   211  0018                     	;# 
   212  0019                     	;# 
   213  001A                     	;# 
   214  001B                     	;# 
   215  001B                     	;# 
   216  001C                     	;# 
   217  001D                     	;# 
   218  001E                     	;# 
   219  001F                     	;# 
   220  0081                     	;# 
   221  0085                     	;# 
   222  0086                     	;# 
   223  0087                     	;# 
   224  0089                     	;# 
   225  008C                     	;# 
   226  008D                     	;# 
   227  008E                     	;# 
   228  008F                     	;# 
   229  0090                     	;# 
   230  0091                     	;# 
   231  0092                     	;# 
   232  0093                     	;# 
   233  0093                     	;# 
   234  0093                     	;# 
   235  0094                     	;# 
   236  0095                     	;# 
   237  0096                     	;# 
   238  0097                     	;# 
   239  0098                     	;# 
   240  0099                     	;# 
   241  009A                     	;# 
   242  009B                     	;# 
   243  009C                     	;# 
   244  009D                     	;# 
   245  009E                     	;# 
   246  009F                     	;# 
   247  0105                     	;# 
   248  0107                     	;# 
   249  0108                     	;# 
   250  0109                     	;# 
   251  010C                     	;# 
   252  010C                     	;# 
   253  010D                     	;# 
   254  010E                     	;# 
   255  010F                     	;# 
   256  0185                     	;# 
   257  0187                     	;# 
   258  0188                     	;# 
   259  0189                     	;# 
   260  018C                     	;# 
   261  018D                     	;# 
   262  0000                     	;# 
   263  0001                     	;# 
   264  0002                     	;# 
   265  0003                     	;# 
   266  0004                     	;# 
   267  0005                     	;# 
   268  0006                     	;# 
   269  0007                     	;# 
   270  0009                     	;# 
   271  000A                     	;# 
   272  000B                     	;# 
   273  000C                     	;# 
   274  000D                     	;# 
   275  000E                     	;# 
   276  000E                     	;# 
   277  000F                     	;# 
   278  0010                     	;# 
   279  0011                     	;# 
   280  0012                     	;# 
   281  0013                     	;# 
   282  0014                     	;# 
   283  0015                     	;# 
   284  0015                     	;# 
   285  0016                     	;# 
   286  0017                     	;# 
   287  0018                     	;# 
   288  0019                     	;# 
   289  001A                     	;# 
   290  001B                     	;# 
   291  001B                     	;# 
   292  001C                     	;# 
   293  001D                     	;# 
   294  001E                     	;# 
   295  001F                     	;# 
   296  0081                     	;# 
   297  0085                     	;# 
   298  0086                     	;# 
   299  0087                     	;# 
   300  0089                     	;# 
   301  008C                     	;# 
   302  008D                     	;# 
   303  008E                     	;# 
   304  008F                     	;# 
   305  0090                     	;# 
   306  0091                     	;# 
   307  0092                     	;# 
   308  0093                     	;# 
   309  0093                     	;# 
   310  0093                     	;# 
   311  0094                     	;# 
   312  0095                     	;# 
   313  0096                     	;# 
   314  0097                     	;# 
   315  0098                     	;# 
   316  0099                     	;# 
   317  009A                     	;# 
   318  009B                     	;# 
   319  009C                     	;# 
   320  009D                     	;# 
   321  009E                     	;# 
   322  009F                     	;# 
   323  0105                     	;# 
   324  0107                     	;# 
   325  0108                     	;# 
   326  0109                     	;# 
   327  010C                     	;# 
   328  010C                     	;# 
   329  010D                     	;# 
   330  010E                     	;# 
   331  010F                     	;# 
   332  0185                     	;# 
   333  0187                     	;# 
   334  0188                     	;# 
   335  0189                     	;# 
   336  018C                     	;# 
   337  018D                     	;# 
   338  0000                     	;# 
   339  0001                     	;# 
   340  0002                     	;# 
   341  0003                     	;# 
   342  0004                     	;# 
   343  0005                     	;# 
   344  0006                     	;# 
   345  0007                     	;# 
   346  0009                     	;# 
   347  000A                     	;# 
   348  000B                     	;# 
   349  000C                     	;# 
   350  000D                     	;# 
   351  000E                     	;# 
   352  000E                     	;# 
   353  000F                     	;# 
   354  0010                     	;# 
   355  0011                     	;# 
   356  0012                     	;# 
   357  0013                     	;# 
   358  0014                     	;# 
   359  0015                     	;# 
   360  0015                     	;# 
   361  0016                     	;# 
   362  0017                     	;# 
   363  0018                     	;# 
   364  0019                     	;# 
   365  001A                     	;# 
   366  001B                     	;# 
   367  001B                     	;# 
   368  001C                     	;# 
   369  001D                     	;# 
   370  001E                     	;# 
   371  001F                     	;# 
   372  0081                     	;# 
   373  0085                     	;# 
   374  0086                     	;# 
   375  0087                     	;# 
   376  0089                     	;# 
   377  008C                     	;# 
   378  008D                     	;# 
   379  008E                     	;# 
   380  008F                     	;# 
   381  0090                     	;# 
   382  0091                     	;# 
   383  0092                     	;# 
   384  0093                     	;# 
   385  0093                     	;# 
   386  0093                     	;# 
   387  0094                     	;# 
   388  0095                     	;# 
   389  0096                     	;# 
   390  0097                     	;# 
   391  0098                     	;# 
   392  0099                     	;# 
   393  009A                     	;# 
   394  009B                     	;# 
   395  009C                     	;# 
   396  009D                     	;# 
   397  009E                     	;# 
   398  009F                     	;# 
   399  0105                     	;# 
   400  0107                     	;# 
   401  0108                     	;# 
   402  0109                     	;# 
   403  010C                     	;# 
   404  010C                     	;# 
   405  010D                     	;# 
   406  010E                     	;# 
   407  010F                     	;# 
   408  0185                     	;# 
   409  0187                     	;# 
   410  0188                     	;# 
   411  0189                     	;# 
   412  018C                     	;# 
   413  018D                     	;# 
   414  0000                     	;# 
   415  0001                     	;# 
   416  0002                     	;# 
   417  0003                     	;# 
   418  0004                     	;# 
   419  0005                     	;# 
   420  0006                     	;# 
   421  0007                     	;# 
   422  0009                     	;# 
   423  000A                     	;# 
   424  000B                     	;# 
   425  000C                     	;# 
   426  000D                     	;# 
   427  000E                     	;# 
   428  000E                     	;# 
   429  000F                     	;# 
   430  0010                     	;# 
   431  0011                     	;# 
   432  0012                     	;# 
   433  0013                     	;# 
   434  0014                     	;# 
   435  0015                     	;# 
   436  0015                     	;# 
   437  0016                     	;# 
   438  0017                     	;# 
   439  0018                     	;# 
   440  0019                     	;# 
   441  001A                     	;# 
   442  001B                     	;# 
   443  001B                     	;# 
   444  001C                     	;# 
   445  001D                     	;# 
   446  001E                     	;# 
   447  001F                     	;# 
   448  0081                     	;# 
   449  0085                     	;# 
   450  0086                     	;# 
   451  0087                     	;# 
   452  0089                     	;# 
   453  008C                     	;# 
   454  008D                     	;# 
   455  008E                     	;# 
   456  008F                     	;# 
   457  0090                     	;# 
   458  0091                     	;# 
   459  0092                     	;# 
   460  0093                     	;# 
   461  0093                     	;# 
   462  0093                     	;# 
   463  0094                     	;# 
   464  0095                     	;# 
   465  0096                     	;# 
   466  0097                     	;# 
   467  0098                     	;# 
   468  0099                     	;# 
   469  009A                     	;# 
   470  009B                     	;# 
   471  009C                     	;# 
   472  009D                     	;# 
   473  009E                     	;# 
   474  009F                     	;# 
   475  0105                     	;# 
   476  0107                     	;# 
   477  0108                     	;# 
   478  0109                     	;# 
   479  010C                     	;# 
   480  010C                     	;# 
   481  010D                     	;# 
   482  010E                     	;# 
   483  010F                     	;# 
   484  0185                     	;# 
   485  0187                     	;# 
   486  0188                     	;# 
   487  0189                     	;# 
   488  018C                     	;# 
   489  018D                     	;# 
   490  0000                     	;# 
   491  0001                     	;# 
   492  0002                     	;# 
   493  0003                     	;# 
   494  0004                     	;# 
   495  0005                     	;# 
   496  0006                     	;# 
   497  0007                     	;# 
   498  0009                     	;# 
   499  000A                     	;# 
   500  000B                     	;# 
   501  000C                     	;# 
   502  000D                     	;# 
   503  000E                     	;# 
   504  000E                     	;# 
   505  000F                     	;# 
   506  0010                     	;# 
   507  0011                     	;# 
   508  0012                     	;# 
   509  0013                     	;# 
   510  0014                     	;# 
   511  0015                     	;# 
   512  0015                     	;# 
   513  0016                     	;# 
   514  0017                     	;# 
   515  0018                     	;# 
   516  0019                     	;# 
   517  001A                     	;# 
   518  001B                     	;# 
   519  001B                     	;# 
   520  001C                     	;# 
   521  001D                     	;# 
   522  001E                     	;# 
   523  001F                     	;# 
   524  0081                     	;# 
   525  0085                     	;# 
   526  0086                     	;# 
   527  0087                     	;# 
   528  0089                     	;# 
   529  008C                     	;# 
   530  008D                     	;# 
   531  008E                     	;# 
   532  008F                     	;# 
   533  0090                     	;# 
   534  0091                     	;# 
   535  0092                     	;# 
   536  0093                     	;# 
   537  0093                     	;# 
   538  0093                     	;# 
   539  0094                     	;# 
   540  0095                     	;# 
   541  0096                     	;# 
   542  0097                     	;# 
   543  0098                     	;# 
   544  0099                     	;# 
   545  009A                     	;# 
   546  009B                     	;# 
   547  009C                     	;# 
   548  009D                     	;# 
   549  009E                     	;# 
   550  009F                     	;# 
   551  0105                     	;# 
   552  0107                     	;# 
   553  0108                     	;# 
   554  0109                     	;# 
   555  010C                     	;# 
   556  010C                     	;# 
   557  010D                     	;# 
   558  010E                     	;# 
   559  010F                     	;# 
   560  0185                     	;# 
   561  0187                     	;# 
   562  0188                     	;# 
   563  0189                     	;# 
   564  018C                     	;# 
   565  018D                     	;# 
   566  0000                     	;# 
   567  0001                     	;# 
   568  0002                     	;# 
   569  0003                     	;# 
   570  0004                     	;# 
   571  0005                     	;# 
   572  0006                     	;# 
   573  0007                     	;# 
   574  0009                     	;# 
   575  000A                     	;# 
   576  000B                     	;# 
   577  000C                     	;# 
   578  000D                     	;# 
   579  000E                     	;# 
   580  000E                     	;# 
   581  000F                     	;# 
   582  0010                     	;# 
   583  0011                     	;# 
   584  0012                     	;# 
   585  0013                     	;# 
   586  0014                     	;# 
   587  0015                     	;# 
   588  0015                     	;# 
   589  0016                     	;# 
   590  0017                     	;# 
   591  0018                     	;# 
   592  0019                     	;# 
   593  001A                     	;# 
   594  001B                     	;# 
   595  001B                     	;# 
   596  001C                     	;# 
   597  001D                     	;# 
   598  001E                     	;# 
   599  001F                     	;# 
   600  0081                     	;# 
   601  0085                     	;# 
   602  0086                     	;# 
   603  0087                     	;# 
   604  0089                     	;# 
   605  008C                     	;# 
   606  008D                     	;# 
   607  008E                     	;# 
   608  008F                     	;# 
   609  0090                     	;# 
   610  0091                     	;# 
   611  0092                     	;# 
   612  0093                     	;# 
   613  0093                     	;# 
   614  0093                     	;# 
   615  0094                     	;# 
   616  0095                     	;# 
   617  0096                     	;# 
   618  0097                     	;# 
   619  0098                     	;# 
   620  0099                     	;# 
   621  009A                     	;# 
   622  009B                     	;# 
   623  009C                     	;# 
   624  009D                     	;# 
   625  009E                     	;# 
   626  009F                     	;# 
   627  0105                     	;# 
   628  0107                     	;# 
   629  0108                     	;# 
   630  0109                     	;# 
   631  010C                     	;# 
   632  010C                     	;# 
   633  010D                     	;# 
   634  010E                     	;# 
   635  010F                     	;# 
   636  0185                     	;# 
   637  0187                     	;# 
   638  0188                     	;# 
   639  0189                     	;# 
   640  018C                     	;# 
   641  018D                     	;# 
   642  0000                     	;# 
   643  0001                     	;# 
   644  0002                     	;# 
   645  0003                     	;# 
   646  0004                     	;# 
   647  0005                     	;# 
   648  0006                     	;# 
   649  0007                     	;# 
   650  0009                     	;# 
   651  000A                     	;# 
   652  000B                     	;# 
   653  000C                     	;# 
   654  000D                     	;# 
   655  000E                     	;# 
   656  000E                     	;# 
   657  000F                     	;# 
   658  0010                     	;# 
   659  0011                     	;# 
   660  0012                     	;# 
   661  0013                     	;# 
   662  0014                     	;# 
   663  0015                     	;# 
   664  0015                     	;# 
   665  0016                     	;# 
   666  0017                     	;# 
   667  0018                     	;# 
   668  0019                     	;# 
   669  001A                     	;# 
   670  001B                     	;# 
   671  001B                     	;# 
   672  001C                     	;# 
   673  001D                     	;# 
   674  001E                     	;# 
   675  001F                     	;# 
   676  0081                     	;# 
   677  0085                     	;# 
   678  0086                     	;# 
   679  0087                     	;# 
   680  0089                     	;# 
   681  008C                     	;# 
   682  008D                     	;# 
   683  008E                     	;# 
   684  008F                     	;# 
   685  0090                     	;# 
   686  0091                     	;# 
   687  0092                     	;# 
   688  0093                     	;# 
   689  0093                     	;# 
   690  0093                     	;# 
   691  0094                     	;# 
   692  0095                     	;# 
   693  0096                     	;# 
   694  0097                     	;# 
   695  0098                     	;# 
   696  0099                     	;# 
   697  009A                     	;# 
   698  009B                     	;# 
   699  009C                     	;# 
   700  009D                     	;# 
   701  009E                     	;# 
   702  009F                     	;# 
   703  0105                     	;# 
   704  0107                     	;# 
   705  0108                     	;# 
   706  0109                     	;# 
   707  010C                     	;# 
   708  010C                     	;# 
   709  010D                     	;# 
   710  010E                     	;# 
   711  010F                     	;# 
   712  0185                     	;# 
   713  0187                     	;# 
   714  0188                     	;# 
   715  0189                     	;# 
   716  018C                     	;# 
   717  018D                     	;# 
   718  0000                     	;# 
   719  0001                     	;# 
   720  0002                     	;# 
   721  0003                     	;# 
   722  0004                     	;# 
   723  0005                     	;# 
   724  0006                     	;# 
   725  0007                     	;# 
   726  0009                     	;# 
   727  000A                     	;# 
   728  000B                     	;# 
   729  000C                     	;# 
   730  000D                     	;# 
   731  000E                     	;# 
   732  000E                     	;# 
   733  000F                     	;# 
   734  0010                     	;# 
   735  0011                     	;# 
   736  0012                     	;# 
   737  0013                     	;# 
   738  0014                     	;# 
   739  0015                     	;# 
   740  0015                     	;# 
   741  0016                     	;# 
   742  0017                     	;# 
   743  0018                     	;# 
   744  0019                     	;# 
   745  001A                     	;# 
   746  001B                     	;# 
   747  001B                     	;# 
   748  001C                     	;# 
   749  001D                     	;# 
   750  001E                     	;# 
   751  001F                     	;# 
   752  0081                     	;# 
   753  0085                     	;# 
   754  0086                     	;# 
   755  0087                     	;# 
   756  0089                     	;# 
   757  008C                     	;# 
   758  008D                     	;# 
   759  008E                     	;# 
   760  008F                     	;# 
   761  0090                     	;# 
   762  0091                     	;# 
   763  0092                     	;# 
   764  0093                     	;# 
   765  0093                     	;# 
   766  0093                     	;# 
   767  0094                     	;# 
   768  0095                     	;# 
   769  0096                     	;# 
   770  0097                     	;# 
   771  0098                     	;# 
   772  0099                     	;# 
   773  009A                     	;# 
   774  009B                     	;# 
   775  009C                     	;# 
   776  009D                     	;# 
   777  009E                     	;# 
   778  009F                     	;# 
   779  0105                     	;# 
   780  0107                     	;# 
   781  0108                     	;# 
   782  0109                     	;# 
   783  010C                     	;# 
   784  010C                     	;# 
   785  010D                     	;# 
   786  010E                     	;# 
   787  010F                     	;# 
   788  0185                     	;# 
   789  0187                     	;# 
   790  0188                     	;# 
   791  0189                     	;# 
   792  018C                     	;# 
   793  018D                     	;# 
   794  0000                     	;# 
   795  0001                     	;# 
   796  0002                     	;# 
   797  0003                     	;# 
   798  0004                     	;# 
   799  0005                     	;# 
   800  0006                     	;# 
   801  0007                     	;# 
   802  0009                     	;# 
   803  000A                     	;# 
   804  000B                     	;# 
   805  000C                     	;# 
   806  000D                     	;# 
   807  000E                     	;# 
   808  000E                     	;# 
   809  000F                     	;# 
   810  0010                     	;# 
   811  0011                     	;# 
   812  0012                     	;# 
   813  0013                     	;# 
   814  0014                     	;# 
   815  0015                     	;# 
   816  0015                     	;# 
   817  0016                     	;# 
   818  0017                     	;# 
   819  0018                     	;# 
   820  0019                     	;# 
   821  001A                     	;# 
   822  001B                     	;# 
   823  001B                     	;# 
   824  001C                     	;# 
   825  001D                     	;# 
   826  001E                     	;# 
   827  001F                     	;# 
   828  0081                     	;# 
   829  0085                     	;# 
   830  0086                     	;# 
   831  0087                     	;# 
   832  0089                     	;# 
   833  008C                     	;# 
   834  008D                     	;# 
   835  008E                     	;# 
   836  008F                     	;# 
   837  0090                     	;# 
   838  0091                     	;# 
   839  0092                     	;# 
   840  0093                     	;# 
   841  0093                     	;# 
   842  0093                     	;# 
   843  0094                     	;# 
   844  0095                     	;# 
   845  0096                     	;# 
   846  0097                     	;# 
   847  0098                     	;# 
   848  0099                     	;# 
   849  009A                     	;# 
   850  009B                     	;# 
   851  009C                     	;# 
   852  009D                     	;# 
   853  009E                     	;# 
   854  009F                     	;# 
   855  0105                     	;# 
   856  0107                     	;# 
   857  0108                     	;# 
   858  0109                     	;# 
   859  010C                     	;# 
   860  010C                     	;# 
   861  010D                     	;# 
   862  010E                     	;# 
   863  010F                     	;# 
   864  0185                     	;# 
   865  0187                     	;# 
   866  0188                     	;# 
   867  0189                     	;# 
   868  018C                     	;# 
   869  018D                     	;# 
   870  0000                     	;# 
   871  0001                     	;# 
   872  0002                     	;# 
   873  0003                     	;# 
   874  0004                     	;# 
   875  0005                     	;# 
   876  0006                     	;# 
   877  0007                     	;# 
   878  0009                     	;# 
   879  000A                     	;# 
   880  000B                     	;# 
   881  000C                     	;# 
   882  000D                     	;# 
   883  000E                     	;# 
   884  000E                     	;# 
   885  000F                     	;# 
   886  0010                     	;# 
   887  0011                     	;# 
   888  0012                     	;# 
   889  0013                     	;# 
   890  0014                     	;# 
   891  0015                     	;# 
   892  0015                     	;# 
   893  0016                     	;# 
   894  0017                     	;# 
   895  0018                     	;# 
   896  0019                     	;# 
   897  001A                     	;# 
   898  001B                     	;# 
   899  001B                     	;# 
   900  001C                     	;# 
   901  001D                     	;# 
   902  001E                     	;# 
   903  001F                     	;# 
   904  0081                     	;# 
   905  0085                     	;# 
   906  0086                     	;# 
   907  0087                     	;# 
   908  0089                     	;# 
   909  008C                     	;# 
   910  008D                     	;# 
   911  008E                     	;# 
   912  008F                     	;# 
   913  0090                     	;# 
   914  0091                     	;# 
   915  0092                     	;# 
   916  0093                     	;# 
   917  0093                     	;# 
   918  0093                     	;# 
   919  0094                     	;# 
   920  0095                     	;# 
   921  0096                     	;# 
   922  0097                     	;# 
   923  0098                     	;# 
   924  0099                     	;# 
   925  009A                     	;# 
   926  009B                     	;# 
   927  009C                     	;# 
   928  009D                     	;# 
   929  009E                     	;# 
   930  009F                     	;# 
   931  0105                     	;# 
   932  0107                     	;# 
   933  0108                     	;# 
   934  0109                     	;# 
   935  010C                     	;# 
   936  010C                     	;# 
   937  010D                     	;# 
   938  010E                     	;# 
   939  010F                     	;# 
   940  0185                     	;# 
   941  0187                     	;# 
   942  0188                     	;# 
   943  0189                     	;# 
   944  018C                     	;# 
   945  018D                     	;# 
   946  0000                     	;# 
   947  0001                     	;# 
   948  0002                     	;# 
   949  0003                     	;# 
   950  0004                     	;# 
   951  0005                     	;# 
   952  0006                     	;# 
   953  0007                     	;# 
   954  0009                     	;# 
   955  000A                     	;# 
   956  000B                     	;# 
   957  000C                     	;# 
   958  000D                     	;# 
   959  000E                     	;# 
   960  000E                     	;# 
   961  000F                     	;# 
   962  0010                     	;# 
   963  0011                     	;# 
   964  0012                     	;# 
   965  0013                     	;# 
   966  0014                     	;# 
   967  0015                     	;# 
   968  0015                     	;# 
   969  0016                     	;# 
   970  0017                     	;# 
   971  0018                     	;# 
   972  0019                     	;# 
   973  001A                     	;# 
   974  001B                     	;# 
   975  001B                     	;# 
   976  001C                     	;# 
   977  001D                     	;# 
   978  001E                     	;# 
   979  001F                     	;# 
   980  0081                     	;# 
   981  0085                     	;# 
   982  0086                     	;# 
   983  0087                     	;# 
   984  0089                     	;# 
   985  008C                     	;# 
   986  008D                     	;# 
   987  008E                     	;# 
   988  008F                     	;# 
   989  0090                     	;# 
   990  0091                     	;# 
   991  0092                     	;# 
   992  0093                     	;# 
   993  0093                     	;# 
   994  0093                     	;# 
   995  0094                     	;# 
   996  0095                     	;# 
   997  0096                     	;# 
   998  0097                     	;# 
   999  0098                     	;# 
  1000  0099                     	;# 
  1001  009A                     	;# 
  1002  009B                     	;# 
  1003  009C                     	;# 
  1004  009D                     	;# 
  1005  009E                     	;# 
  1006  009F                     	;# 
  1007  0105                     	;# 
  1008  0107                     	;# 
  1009  0108                     	;# 
  1010  0109                     	;# 
  1011  010C                     	;# 
  1012  010C                     	;# 
  1013  010D                     	;# 
  1014  010E                     	;# 
  1015  010F                     	;# 
  1016  0185                     	;# 
  1017  0187                     	;# 
  1018  0188                     	;# 
  1019  0189                     	;# 
  1020  018C                     	;# 
  1021  018D                     	;# 
  1022  0000                     	;# 
  1023  0001                     	;# 
  1024  0002                     	;# 
  1025  0003                     	;# 
  1026  0004                     	;# 
  1027  0005                     	;# 
  1028  0006                     	;# 
  1029  0007                     	;# 
  1030  0009                     	;# 
  1031  000A                     	;# 
  1032  000B                     	;# 
  1033  000C                     	;# 
  1034  000D                     	;# 
  1035  000E                     	;# 
  1036  000E                     	;# 
  1037  000F                     	;# 
  1038  0010                     	;# 
  1039  0011                     	;# 
  1040  0012                     	;# 
  1041  0013                     	;# 
  1042  0014                     	;# 
  1043  0015                     	;# 
  1044  0015                     	;# 
  1045  0016                     	;# 
  1046  0017                     	;# 
  1047  0018                     	;# 
  1048  0019                     	;# 
  1049  001A                     	;# 
  1050  001B                     	;# 
  1051  001B                     	;# 
  1052  001C                     	;# 
  1053  001D                     	;# 
  1054  001E                     	;# 
  1055  001F                     	;# 
  1056  0081                     	;# 
  1057  0085                     	;# 
  1058  0086                     	;# 
  1059  0087                     	;# 
  1060  0089                     	;# 
  1061  008C                     	;# 
  1062  008D                     	;# 
  1063  008E                     	;# 
  1064  008F                     	;# 
  1065  0090                     	;# 
  1066  0091                     	;# 
  1067  0092                     	;# 
  1068  0093                     	;# 
  1069  0093                     	;# 
  1070  0093                     	;# 
  1071  0094                     	;# 
  1072  0095                     	;# 
  1073  0096                     	;# 
  1074  0097                     	;# 
  1075  0098                     	;# 
  1076  0099                     	;# 
  1077  009A                     	;# 
  1078  009B                     	;# 
  1079  009C                     	;# 
  1080  009D                     	;# 
  1081  009E                     	;# 
  1082  009F                     	;# 
  1083  0105                     	;# 
  1084  0107                     	;# 
  1085  0108                     	;# 
  1086  0109                     	;# 
  1087  010C                     	;# 
  1088  010C                     	;# 
  1089  010D                     	;# 
  1090  010E                     	;# 
  1091  010F                     	;# 
  1092  0185                     	;# 
  1093  0187                     	;# 
  1094  0188                     	;# 
  1095  0189                     	;# 
  1096  018C                     	;# 
  1097  018D                     	;# 
  1098  0000                     	;# 
  1099  0001                     	;# 
  1100  0002                     	;# 
  1101  0003                     	;# 
  1102  0004                     	;# 
  1103  0005                     	;# 
  1104  0006                     	;# 
  1105  0007                     	;# 
  1106  0009                     	;# 
  1107  000A                     	;# 
  1108  000B                     	;# 
  1109  000C                     	;# 
  1110  000D                     	;# 
  1111  000E                     	;# 
  1112  000E                     	;# 
  1113  000F                     	;# 
  1114  0010                     	;# 
  1115  0011                     	;# 
  1116  0012                     	;# 
  1117  0013                     	;# 
  1118  0014                     	;# 
  1119  0015                     	;# 
  1120  0015                     	;# 
  1121  0016                     	;# 
  1122  0017                     	;# 
  1123  0018                     	;# 
  1124  0019                     	;# 
  1125  001A                     	;# 
  1126  001B                     	;# 
  1127  001B                     	;# 
  1128  001C                     	;# 
  1129  001D                     	;# 
  1130  001E                     	;# 
  1131  001F                     	;# 
  1132  0081                     	;# 
  1133  0085                     	;# 
  1134  0086                     	;# 
  1135  0087                     	;# 
  1136  0089                     	;# 
  1137  008C                     	;# 
  1138  008D                     	;# 
  1139  008E                     	;# 
  1140  008F                     	;# 
  1141  0090                     	;# 
  1142  0091                     	;# 
  1143  0092                     	;# 
  1144  0093                     	;# 
  1145  0093                     	;# 
  1146  0093                     	;# 
  1147  0094                     	;# 
  1148  0095                     	;# 
  1149  0096                     	;# 
  1150  0097                     	;# 
  1151  0098                     	;# 
  1152  0099                     	;# 
  1153  009A                     	;# 
  1154  009B                     	;# 
  1155  009C                     	;# 
  1156  009D                     	;# 
  1157  009E                     	;# 
  1158  009F                     	;# 
  1159  0105                     	;# 
  1160  0107                     	;# 
  1161  0108                     	;# 
  1162  0109                     	;# 
  1163  010C                     	;# 
  1164  010C                     	;# 
  1165  010D                     	;# 
  1166  010E                     	;# 
  1167  010F                     	;# 
  1168  0185                     	;# 
  1169  0187                     	;# 
  1170  0188                     	;# 
  1171  0189                     	;# 
  1172  018C                     	;# 
  1173  018D                     	;# 
  1174                           
  1175                           	psect	strings
  1176  1000                     __pstrings:
  1177  1000                     stringtab:
  1178  1000                     __stringtab:
  1179                           
  1180                           ;	String table - string pointers are 1 byte each
  1181  1000  1BFF               	btfsc	btemp+1,7
  1182  1001  280A               	ljmp	stringcode
  1183  1002  1383               	bcf	3,7
  1184  1003  187F               	btfsc	btemp+1,0
  1185  1004  1783               	bsf	3,7
  1186  1005  0800               	movf	0,w
  1187  1006  0A84               	incf	4,f
  1188  1007  1903               	skipnz
  1189  1008  0AFF               	incf	btemp+1,f
  1190  1009  0008               	return
  1191  100A                     stringcode:
  1192  100A                     stringdir:
  1193  100A  3010               	movlw	high stringdir
  1194  100B  008A               	movwf	10
  1195  100C  0804               	movf	4,w
  1196  100D  0A84               	incf	4,f
  1197  100E  0782               	addwf	2,f
  1198  100F                     __stringbase:
  1199  100F  3400               	retlw	0
  1200  1010                     __end_of__stringtab:
  1201  1010                     _PT100_TRANSLADA:
  1202  1010  3466               	retlw	102
  1203  1011  3466               	retlw	102
  1204  1012  34A6               	retlw	166
  1205  1013  34BF               	retlw	191
  1206  1014                     __end_of_PT100_TRANSLADA:
  1207  1014                     _PT100_CONSTANT:
  1208  1014  3414               	retlw	20
  1209  1015  34AE               	retlw	174
  1210  1016  342B               	retlw	43
  1211  1017  34C1               	retlw	193
  1212  1018                     __end_of_PT100_CONSTANT:
  1213  1018                     _RESISTOR_ROOM_TEMP:
  1214                           
  1215                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;;./ntc10k.h: 19: const double RESISTOR_ROOM_TEMP = 10000.0;
  1216  1018  3400               	retlw	0
  1217  1019  3440               	retlw	64
  1218  101A  341C               	retlw	28
  1219  101B  3446               	retlw	70
  1220  101C                     __end_of_RESISTOR_ROOM_TEMP:
  1221  101C                     _ROOM_TEMP:
  1222                           
  1223                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;
  1224  101C  3466               	retlw	102
  1225  101D  3486               	retlw	134
  1226  101E  3496               	retlw	150
  1227  101F  3443               	retlw	67
  1228  1020                     __end_of_ROOM_TEMP:
  1229  1020                     _MAX_ADC:
  1230                           
  1231                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;
  1232  1020  3400               	retlw	0
  1233  1021  34C0               	retlw	192
  1234  1022  347F               	retlw	127
  1235  1023  3444               	retlw	68
  1236  1024                     __end_of_MAX_ADC:
  1237  1024                     log@coeff:
  1238  1024  3400               	retlw	0
  1239  1025  3400               	retlw	0
  1240  1026  3400               	retlw	0
  1241  1027  3400               	retlw	0
  1242  1028  34C4               	retlw	196
  1243  1029  34FF               	retlw	255
  1244  102A  347F               	retlw	127
  1245  102B  343F               	retlw	63
  1246  102C  3480               	retlw	128
  1247  102D  34EF               	retlw	239
  1248  102E  34FF               	retlw	255
  1249  102F  34BE               	retlw	190
  1250  1030  3490               	retlw	144
  1251  1031  34E1               	retlw	225
  1252  1032  34A9               	retlw	169
  1253  1033  343E               	retlw	62
  1254  1034  34EC               	retlw	236
  1255  1035  3482               	retlw	130
  1256  1036  3476               	retlw	118
  1257  1037  34BE               	retlw	190
  1258  1038  3482               	retlw	130
  1259  1039  34AD               	retlw	173
  1260  103A  342B               	retlw	43
  1261  103B  343E               	retlw	62
  1262  103C  340E               	retlw	14
  1263  103D  343C               	retlw	60
  1264  103E  34C3               	retlw	195
  1265  103F  34BD               	retlw	189
  1266  1040  3487               	retlw	135
  1267  1041  34D1               	retlw	209
  1268  1042  3413               	retlw	19
  1269  1043  343D               	retlw	61
  1270  1044  3441               	retlw	65
  1271  1045  3478               	retlw	120
  1272  1046  34D3               	retlw	211
  1273  1047  34BB               	retlw	187
  1274  1048                     __end_oflog@coeff:
  1275  1048                     _BETA:
  1276                           
  1277                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1278  1048  3400               	retlw	0
  1279  1049  3460               	retlw	96
  1280  104A  3478               	retlw	120
  1281  104B  3445               	retlw	69
  1282  104C                     __end_of_BETA:
  1283  104C                     _BALANCE_RESISTOR:
  1284                           
  1285                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1286  104C  3400               	retlw	0
  1287  104D  3440               	retlw	64
  1288  104E  341C               	retlw	28
  1289  104F  3446               	retlw	70
  1290  1050                     __end_of_BALANCE_RESISTOR:
  1291  0019                     _TXREG	set	25
  1292  0018                     _RCSTAbits	set	24
  1293  001A                     _RCREG	set	26
  1294  000E                     _TMR1L	set	14
  1295  000F                     _TMR1H	set	15
  1296  000C                     _PIR1bits	set	12
  1297  001E                     _ADRESH	set	30
  1298  001F                     _ADCON0bits	set	31
  1299  0005                     _PORTAbits	set	5
  1300  0007                     _PORTCbits	set	7
  1301  0010                     _T1CON	set	16
  1302  0006                     _PORTBbits	set	6
  1303  0009                     _PORTE	set	9
  1304  0007                     _PORTC	set	7
  1305  0005                     _PORTA	set	5
  1306  0013                     _SSPBUF	set	19
  1307  000B                     _INTCONbits	set	11
  1308  0014                     _SSPCON	set	20
  1309  0006                     _PORTB	set	6
  1310  00C4                     _CREN	set	196
  1311  0081                     _TMR1CS	set	129
  1312  0085                     _T1CKPS1	set	133
  1313  0084                     _T1CKPS0	set	132
  1314  008C                     _PIE1bits	set	140
  1315  0099                     _SPBRG	set	153
  1316  0098                     _TXSTAbits	set	152
  1317  009E                     _ADRESL	set	158
  1318  009F                     _ADCON1bits	set	159
  1319  009F                     _ADCON1	set	159
  1320  0095                     _WPUB	set	149
  1321  0081                     _OPTION_REGbits	set	129
  1322  0089                     _TRISE	set	137
  1323  0087                     _TRISC	set	135
  1324  0086                     _TRISB	set	134
  1325  0085                     _TRISA	set	133
  1326  008F                     _OSCCONbits	set	143
  1327  0091                     _SSPCON2bits	set	145
  1328  0094                     _SSPSTAT	set	148
  1329  0093                     _SSPADD	set	147
  1330  0091                     _SSPCON2	set	145
  1331  043F                     _TRISC7	set	1087
  1332  043E                     _TRISC6	set	1086
  1333  0460                     _TMR1IE	set	1120
  1334  043C                     _TRISC4	set	1084
  1335  043B                     _TRISC3	set	1083
  1336  010C                     _EEDATA	set	268
  1337  010D                     _EEADR	set	269
  1338  0187                     _BAUDCTLbits	set	391
  1339  018D                     _EECON2	set	397
  1340  018C                     _EECON1bits	set	396
  1341  0189                     _ANSELH	set	393
  1342  0188                     _ANSEL	set	392
  1343  1050                     STR_1:
  1344  1050  3476               	retlw	118	;'v'
  1345  1051  3431               	retlw	49	;'1'
  1346  1052  342E               	retlw	46	;'.'
  1347  1053  3430               	retlw	48	;'0'
  1348  1054  342E               	retlw	46	;'.'
  1349  1055  3432               	retlw	50	;'2'
  1350  1056  3434               	retlw	52	;'4'
  1351  1057  3400               	retlw	0
  1352  1058                     STR_2:
  1353  1058  344F               	retlw	79	;'O'
  1354  1059  344B               	retlw	75	;'K'
  1355  105A  3400               	retlw	0
  1356                           
  1357                           	psect	cinit
  1358  0015                     start_initialization:	
  1359                           ; #config settings
  1360                           
  1361  0015                     __initialization:
  1362                           
  1363                           ; Clear objects allocated to COMMON
  1364  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  1365  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1366  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1367  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1368  0019  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1369  001A  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  1370                           
  1371                           ; Clear objects allocated to BANK0
  1372  001B  1283               	bcf	3,5	;RP0=0, select bank0
  1373  001C  1303               	bcf	3,6	;RP1=0, select bank0
  1374  001D  01EF               	clrf	__pbssBANK0& (0+127)
  1375                           
  1376                           ; Clear objects allocated to BANK1
  1377  001E  1383               	bcf	3,7	;select IRP bank0
  1378  001F  30A0               	movlw	low __pbssBANK1
  1379  0020  0084               	movwf	4
  1380  0021  30BB               	movlw	low (__pbssBANK1+27)
  1381  0022  160A  158A  2281  120A  118A  	fcall	clear_ram0
  1382                           
  1383                           ; Clear objects allocated to BANK3
  1384  0027  1783               	bsf	3,7	;select IRP bank2
  1385  0028  3090               	movlw	low __pbssBANK3
  1386  0029  0084               	movwf	4
  1387  002A  30EB               	movlw	low (__pbssBANK3+91)
  1388  002B  160A  158A  2281  120A  118A  	fcall	clear_ram0
  1389                           
  1390                           ; Clear objects allocated to BANK2
  1391  0030  3010               	movlw	low __pbssBANK2
  1392  0031  0084               	movwf	4
  1393  0032  3044               	movlw	low (__pbssBANK2+52)
  1394  0033  160A  158A  2281   	fcall	clear_ram0
  1395  0036                     end_of_initialization:	
  1396                           ;End of C runtime variable initialization code
  1397                           
  1398  0036                     __end_of__initialization:
  1399  0036  0183               	clrf	3
  1400  0037  160A  118A  2AA6   	ljmp	_main	;jump to C main() function
  1401                           
  1402                           	psect	bssCOMMON
  1403  0078                     __pbssCOMMON:
  1404  0078                     _Delay_Led_Tmr0:
  1405  0078                     	ds	2
  1406  007A                     _minuto:
  1407  007A                     	ds	1
  1408  007B                     _statuspower_memo:
  1409  007B                     	ds	1
  1410  007C                     _hora:
  1411  007C                     	ds	1
  1412  007D                     _segundo:
  1413  007D                     	ds	1
  1414                           
  1415                           	psect	bssBANK0
  1416  006F                     __pbssBANK0:
  1417  006F                     _generic_status:
  1418  006F                     	ds	1
  1419                           
  1420                           	psect	bssBANK1
  1421  00A0                     __pbssBANK1:
  1422  00A0                     _Temperatura1:
  1423  00A0                     	ds	4
  1424  00A4                     _Temperatura0:
  1425  00A4                     	ds	4
  1426  00A8                     _errno:
  1427  00A8                     	ds	2
  1428  00AA                     _tempodecorrido:
  1429  00AA                     	ds	2
  1430  00AC                     _count:
  1431  00AC                     	ds	2
  1432  00AE                     _header:
  1433  00AE                     	ds	2
  1434  00B0                     _milisegundo:
  1435  00B0                     	ds	2
  1436  00B2                     _Delay_Led_Usart:
  1437  00B2                     	ds	2
  1438  00B4                     _Delay_Led_Memory:
  1439  00B4                     	ds	2
  1440  00B6                     _pointer:
  1441  00B6                     	ds	1
  1442  00B7                     _destino:
  1443  00B7                     	ds	1
  1444  00B8                     _Board_Number:
  1445  00B8                     	ds	1
  1446  00B9                     _canal:
  1447  00B9                     	ds	1
  1448  00BA                     _statuspower:
  1449  00BA                     	ds	1
  1450                           
  1451                           	psect	bssBANK3
  1452  0190                     __pbssBANK3:
  1453  0190                     _usart_protocol:
  1454  0190                     	ds	58
  1455  01CA                     _buffer:
  1456  01CA                     	ds	33
  1457                           
  1458                           	psect	bssBANK2
  1459  0110                     __pbssBANK2:
  1460  0110                     _usart_buffer:
  1461  0110                     	ds	52
  1462                           
  1463                           	psect	clrtext
  1464  1A81                     clear_ram0:	
  1465                           ;	Called with FSR containing the base address, and
  1466                           ;	W with the last address+1
  1467                           
  1468  1A81  0064               	clrwdt	;clear the watchdog before getting into this loop
  1469  1A82                     clrloop0:
  1470  1A82  0180               	clrf	0	;clear RAM location pointed to by FSR
  1471  1A83  0A84               	incf	4,f	;increment pointer
  1472  1A84  0604               	xorwf	4,w	;XOR with final address
  1473  1A85  1903               	btfsc	3,2	;have we reached the end yet?
  1474  1A86  3400               	retlw	0	;all done for this memory range, return
  1475  1A87  0604               	xorwf	4,w	;XOR again to restore value
  1476  1A88  2A82               	goto	clrloop0	;do the next byte
  1477                           
  1478                           	psect	cstackBANK1
  1479  00BB                     __pcstackBANK1:
  1480  00BB                     ___fladd@signs:
  1481  00BB                     Decodify_Command@dados:	
  1482                           ; 1 bytes @ 0x0
  1483                           
  1484                           
  1485                           ; 2 bytes @ 0x0
  1486  00BB                     	ds	1
  1487  00BC                     ___fladd@aexp:
  1488                           
  1489                           ; 1 bytes @ 0x1
  1490  00BC                     	ds	1
  1491  00BD                     Decodify_Command@add:
  1492  00BD                     ___fladd@bexp:	
  1493                           ; 1 bytes @ 0x2
  1494                           
  1495                           
  1496                           ; 1 bytes @ 0x2
  1497  00BD                     	ds	1
  1498  00BE                     Decodify_Command@sizedata:
  1499  00BE                     ___fladd@grs:	
  1500                           ; 1 bytes @ 0x3
  1501                           
  1502                           
  1503                           ; 1 bytes @ 0x3
  1504  00BE                     	ds	1
  1505  00BF                     ??_mediaLeituraPt100Umidadde:
  1506  00BF                     Decodify_Command@tempint:	
  1507                           ; 1 bytes @ 0x4
  1508                           
  1509                           
  1510                           ; 2 bytes @ 0x4
  1511  00BF                     	ds	2
  1512  00C1                     Decodify_Command@OutPut:
  1513                           
  1514                           ; 4 bytes @ 0x6
  1515  00C1                     	ds	2
  1516  00C3                     mediaLeituraPt100Umidadde@canal:
  1517                           
  1518                           ; 1 bytes @ 0x8
  1519  00C3                     	ds	1
  1520  00C4                     mediaLeituraPt100Umidadde@Temp:
  1521                           
  1522                           ; 4 bytes @ 0x9
  1523  00C4                     	ds	1
  1524  00C5                     Decodify_Command@tempchar:
  1525                           
  1526                           ; 1 bytes @ 0xA
  1527  00C5                     	ds	1
  1528  00C6                     Decodify_Command@add_24LCxxxx:
  1529                           
  1530                           ; 4 bytes @ 0xB
  1531  00C6                     	ds	2
  1532  00C8                     mediaLeituraPt100Umidadde@i:
  1533                           
  1534                           ; 1 bytes @ 0xD
  1535  00C8                     	ds	2
  1536  00CA                     ??_main:
  1537                           
  1538                           ; 1 bytes @ 0xF
  1539  00CA                     	ds	3
  1540                           
  1541                           	psect	cstackCOMMON
  1542  0070                     __pcstackCOMMON:
  1543  0070                     ?_I2C_Master_Start:
  1544  0070                     ?_I2C_Master_Stop:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  0070                     ?_I2C_Master_RepeatedStart:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     ?_USART_putc:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0070                     ?_ADC_init:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     ?_mediaLeituraPt100Umidadde:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559  0070                     ?_Decodify_Command:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562  0070                     ?_USART_to_Protocol:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565  0070                     ?_Send_To_MB:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568  0070                     ?_Send_Reply_OK:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0070                     ?_EEPROM_Read_Byte:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574  0070                     ?_Package_Usart_is_for_me:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  0070                     ?_I2C_Master_Wait:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  0070                     ?_main:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583  0070                     ?_isr:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586  0070                     ??_isr:	
  1587                           ; 1 bytes @ 0x0
  1588                           
  1589                           
  1590                           ; 1 bytes @ 0x0
  1591  0070                     	ds	6
  1592  0076                     isr@tempo:
  1593                           
  1594                           ; 2 bytes @ 0x6
  1595  0076                     	ds	2
  1596                           
  1597                           	psect	cstackBANK0
  1598  0020                     __pcstackBANK0:
  1599  0020                     ?_my_delay_ms_WDT:
  1600  0020                     ??_USART_putc:	
  1601                           ; 1 bytes @ 0x0
  1602                           
  1603  0020                     ??_ADC_init:	
  1604                           ; 1 bytes @ 0x0
  1605                           
  1606  0020                     ?_USART_init:	
  1607                           ; 1 bytes @ 0x0
  1608                           
  1609  0020                     ??_USART_to_Protocol:	
  1610                           ; 1 bytes @ 0x0
  1611                           
  1612  0020                     ?_strcpy:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615  0020                     ?_EEPROM_Write_Byte:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618  0020                     ??_EEPROM_Read_Byte:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621  0020                     ?_my_delay_ms:	
  1622                           ; 1 bytes @ 0x0
  1623                           
  1624  0020                     ??_Package_Usart_is_for_me:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627  0020                     ?_PROCULUS_Delay:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630  0020                     ??_I2C_Master_Wait:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633  0020                     ?_strlen:	
  1634                           ; 1 bytes @ 0x0
  1635                           
  1636  0020                     ?_captura:	
  1637                           ; 2 bytes @ 0x0
  1638                           
  1639  0020                     ?__Umul8_16:	
  1640                           ; 2 bytes @ 0x0
  1641                           
  1642  0020                     ?___lwdiv:	
  1643                           ; 2 bytes @ 0x0
  1644                           
  1645  0020                     ?___lldiv:	
  1646                           ; 2 bytes @ 0x0
  1647                           
  1648  0020                     ?___xxtofl:	
  1649                           ; 4 bytes @ 0x0
  1650                           
  1651  0020                     EEPROM_Write_Byte@dado:	
  1652                           ; 4 bytes @ 0x0
  1653                           
  1654  0020                     Package_Usart_is_for_me@retorno:	
  1655                           ; 1 bytes @ 0x0
  1656                           
  1657  0020                     USART_putc@value:	
  1658                           ; 1 bytes @ 0x0
  1659                           
  1660  0020                     __Umul8_16@multiplicand:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663  0020                     strcpy@from:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666  0020                     PROCULUS_Delay@tempo_ms:	
  1667                           ; 1 bytes @ 0x0
  1668                           
  1669  0020                     ___lwdiv@divisor:	
  1670                           ; 2 bytes @ 0x0
  1671                           
  1672  0020                     my_delay_ms@time:	
  1673                           ; 2 bytes @ 0x0
  1674                           
  1675  0020                     my_delay_ms_WDT@time:	
  1676                           ; 4 bytes @ 0x0
  1677                           
  1678  0020                     USART_init@baudrate:	
  1679                           ; 4 bytes @ 0x0
  1680                           
  1681  0020                     ___lldiv@divisor:	
  1682                           ; 4 bytes @ 0x0
  1683                           
  1684  0020                     ___xxtofl@val:	
  1685                           ; 4 bytes @ 0x0
  1686                           
  1687                           
  1688                           ; 4 bytes @ 0x0
  1689  0020                     	ds	1
  1690  0021                     ??_strcpy:
  1691  0021                     ??_Send_To_MB:	
  1692                           ; 1 bytes @ 0x1
  1693                           
  1694  0021                     ?_USART_put_string:	
  1695                           ; 1 bytes @ 0x1
  1696                           
  1697  0021                     ??_EEPROM_Write_Byte:	
  1698                           ; 1 bytes @ 0x1
  1699                           
  1700  0021                     Send_To_MB@size:	
  1701                           ; 1 bytes @ 0x1
  1702                           
  1703  0021                     USART_put_string@vetor:	
  1704                           ; 1 bytes @ 0x1
  1705                           
  1706                           
  1707                           ; 2 bytes @ 0x1
  1708  0021                     	ds	1
  1709  0022                     ??_strlen:
  1710  0022                     ??_captura:	
  1711                           ; 1 bytes @ 0x2
  1712                           
  1713  0022                     ??_PROCULUS_Delay:	
  1714                           ; 1 bytes @ 0x2
  1715                           
  1716  0022                     ??__Umul8_16:	
  1717                           ; 1 bytes @ 0x2
  1718                           
  1719  0022                     I2C_Master_Wait@tempo:	
  1720                           ; 1 bytes @ 0x2
  1721                           
  1722  0022                     EEPROM_Read_Byte@addr:	
  1723                           ; 1 bytes @ 0x2
  1724                           
  1725  0022                     strcpy@to:	
  1726                           ; 1 bytes @ 0x2
  1727                           
  1728  0022                     USART_to_Protocol@i:	
  1729                           ; 1 bytes @ 0x2
  1730                           
  1731  0022                     ___lwdiv@dividend:	
  1732                           ; 2 bytes @ 0x2
  1733                           
  1734                           
  1735                           ; 2 bytes @ 0x2
  1736  0022                     	ds	1
  1737  0023                     ??_I2C_Master_Start:
  1738  0023                     ?_I2C_Master_Write:	
  1739                           ; 1 bytes @ 0x3
  1740                           
  1741  0023                     ??_I2C_Master_Stop:	
  1742                           ; 1 bytes @ 0x3
  1743                           
  1744  0023                     ??_I2C_Master_RepeatedStart:	
  1745                           ; 1 bytes @ 0x3
  1746                           
  1747  0023                     ??_USART_put_string:	
  1748                           ; 1 bytes @ 0x3
  1749                           
  1750  0023                     ?_EEPROM_Read_String:	
  1751                           ; 1 bytes @ 0x3
  1752                           
  1753  0023                     ?_I2C_Master_Read:	
  1754                           ; 1 bytes @ 0x3
  1755                           
  1756  0023                     ?_EEPROM_Read_Integer:	
  1757                           ; 2 bytes @ 0x3
  1758                           
  1759  0023                     EEPROM_Write_Byte@addr:	
  1760                           ; 2 bytes @ 0x3
  1761                           
  1762  0023                     EEPROM_Read_String@dado:	
  1763                           ; 1 bytes @ 0x3
  1764                           
  1765  0023                     strcpy@cp:	
  1766                           ; 1 bytes @ 0x3
  1767                           
  1768  0023                     strlen@cp:	
  1769                           ; 1 bytes @ 0x3
  1770                           
  1771  0023                     I2C_Master_Write@d:	
  1772                           ; 1 bytes @ 0x3
  1773                           
  1774  0023                     I2C_Master_Read@a:	
  1775                           ; 2 bytes @ 0x3
  1776                           
  1777  0023                     USART_put_string@ptr:	
  1778                           ; 2 bytes @ 0x3
  1779                           
  1780                           
  1781                           ; 2 bytes @ 0x3
  1782  0023                     	ds	1
  1783  0024                     ??_my_delay_ms_WDT:
  1784  0024                     ??_USART_init:	
  1785                           ; 1 bytes @ 0x4
  1786                           
  1787  0024                     ??_EEPROM_Read_String:	
  1788                           ; 1 bytes @ 0x4
  1789                           
  1790  0024                     ??_my_delay_ms:	
  1791                           ; 1 bytes @ 0x4
  1792                           
  1793  0024                     ??___lwdiv:	
  1794                           ; 1 bytes @ 0x4
  1795                           
  1796  0024                     ??___xxtofl:	
  1797                           ; 1 bytes @ 0x4
  1798                           
  1799  0024                     EEPROM_Write_Byte@last_GIE:	
  1800                           ; 1 bytes @ 0x4
  1801                           
  1802  0024                     USART_to_Protocol@usart_protocol:	
  1803                           ; 1 bytes @ 0x4
  1804                           
  1805  0024                     strlen@s:	
  1806                           ; 1 bytes @ 0x4
  1807                           
  1808  0024                     PROCULUS_Delay@i:	
  1809                           ; 1 bytes @ 0x4
  1810                           
  1811  0024                     __Umul8_16@product:	
  1812                           ; 2 bytes @ 0x4
  1813                           
  1814  0024                     ___lldiv@dividend:	
  1815                           ; 2 bytes @ 0x4
  1816                           
  1817                           
  1818                           ; 4 bytes @ 0x4
  1819  0024                     	ds	1
  1820  0025                     ??_I2C_Master_Write:
  1821  0025                     ??_I2C_Master_Read:	
  1822                           ; 1 bytes @ 0x5
  1823                           
  1824  0025                     ??_EEPROM_Read_Integer:	
  1825                           ; 1 bytes @ 0x5
  1826                           
  1827  0025                     ?_EEPROM_Write_Integer:	
  1828                           ; 1 bytes @ 0x5
  1829                           
  1830  0025                     ??_Send_Reply_OK:	
  1831                           ; 1 bytes @ 0x5
  1832                           
  1833  0025                     ?_EEPROM_Write_String:	
  1834                           ; 1 bytes @ 0x5
  1835                           
  1836  0025                     EEPROM_Write_String@dado:	
  1837                           ; 1 bytes @ 0x5
  1838                           
  1839  0025                     EEPROM_Read_String@addr:	
  1840                           ; 1 bytes @ 0x5
  1841                           
  1842  0025                     USART_init@i:	
  1843                           ; 1 bytes @ 0x5
  1844                           
  1845  0025                     EEPROM_Write_Integer@dado:	
  1846                           ; 1 bytes @ 0x5
  1847                           
  1848  0025                     ___lwdiv@quotient:	
  1849                           ; 2 bytes @ 0x5
  1850                           
  1851                           
  1852                           ; 2 bytes @ 0x5
  1853  0025                     	ds	1
  1854  0026                     ??_EEPROM_Write_String:
  1855  0026                     EEPROM_Read_Integer@addr:	
  1856                           ; 1 bytes @ 0x6
  1857                           
  1858  0026                     EEPROM_Read_String@c:	
  1859                           ; 1 bytes @ 0x6
  1860                           
  1861  0026                     __Umul8_16@word_mpld:	
  1862                           ; 1 bytes @ 0x6
  1863                           
  1864  0026                     my_delay_ms@i:	
  1865                           ; 2 bytes @ 0x6
  1866                           
  1867  0026                     my_delay_ms_WDT@i:	
  1868                           ; 4 bytes @ 0x6
  1869                           
  1870                           
  1871                           ; 4 bytes @ 0x6
  1872  0026                     	ds	1
  1873  0027                     ??_EEPROM_Write_Integer:
  1874  0027                     EEPROM_Read_Integer@ptr:	
  1875                           ; 1 bytes @ 0x7
  1876                           
  1877  0027                     EEPROM_Write_String@addr:	
  1878                           ; 1 bytes @ 0x7
  1879                           
  1880  0027                     ___lwdiv@counter:	
  1881                           ; 1 bytes @ 0x7
  1882                           
  1883  0027                     I2C_Master_Read@temp:	
  1884                           ; 1 bytes @ 0x7
  1885                           
  1886                           
  1887                           ; 2 bytes @ 0x7
  1888  0027                     	ds	1
  1889  0028                     ??___lldiv:
  1890  0028                     __Umul8_16@multiplier:	
  1891                           ; 1 bytes @ 0x8
  1892                           
  1893  0028                     ___xxtofl@sign:	
  1894                           ; 1 bytes @ 0x8
  1895                           
  1896  0028                     EEPROM_Read_Integer@result:	
  1897                           ; 1 bytes @ 0x8
  1898                           
  1899                           
  1900                           ; 2 bytes @ 0x8
  1901  0028                     	ds	1
  1902  0029                     ?_EEPROM_24C1025_Read_Buffer_USART:
  1903  0029                     ?_EEPROM_24C1025_Read_Str:	
  1904                           ; 1 bytes @ 0x9
  1905                           
  1906  0029                     ?___flmul:	
  1907                           ; 1 bytes @ 0x9
  1908                           
  1909  0029                     EEPROM_Write_Integer@ptr:	
  1910                           ; 4 bytes @ 0x9
  1911                           
  1912  0029                     ___xxtofl@exp:	
  1913                           ; 1 bytes @ 0x9
  1914                           
  1915  0029                     EEPROM_24C1025_Read_Buffer_USART@mem_add:	
  1916                           ; 1 bytes @ 0x9
  1917                           
  1918  0029                     EEPROM_24C1025_Read_Str@mem_add:	
  1919                           ; 4 bytes @ 0x9
  1920                           
  1921  0029                     ___lldiv@quotient:	
  1922                           ; 4 bytes @ 0x9
  1923                           
  1924  0029                     ___flmul@b:	
  1925                           ; 4 bytes @ 0x9
  1926                           
  1927                           
  1928                           ; 4 bytes @ 0x9
  1929  0029                     	ds	1
  1930  002A                     ?_EEPROM_24C1025_Write_Buffer:
  1931  002A                     ?_EEPROM_24C1025_Read_Buffer:	
  1932                           ; 1 bytes @ 0xA
  1933                           
  1934  002A                     ?_EEPROM_24C1025_Write_Str:	
  1935                           ; 1 bytes @ 0xA
  1936                           
  1937  002A                     EEPROM_Write_Integer@addr:	
  1938                           ; 1 bytes @ 0xA
  1939                           
  1940  002A                     EEPROM_Read_Integer@i:	
  1941                           ; 1 bytes @ 0xA
  1942                           
  1943  002A                     EEPROM_24C1025_Write_Buffer@mem_add:	
  1944                           ; 1 bytes @ 0xA
  1945                           
  1946  002A                     EEPROM_24C1025_Read_Buffer@mem_add:	
  1947                           ; 4 bytes @ 0xA
  1948                           
  1949  002A                     EEPROM_24C1025_Write_Str@mem_add:	
  1950                           ; 4 bytes @ 0xA
  1951                           
  1952  002A                     ___xxtofl@arg:	
  1953                           ; 4 bytes @ 0xA
  1954                           
  1955                           
  1956                           ; 4 bytes @ 0xA
  1957  002A                     	ds	1
  1958  002B                     EEPROM_Write_Integer@i:
  1959                           
  1960                           ; 1 bytes @ 0xB
  1961  002B                     	ds	2
  1962  002D                     EEPROM_24C1025_Read_Buffer_USART@sizedata:
  1963  002D                     EEPROM_24C1025_Read_Str@buffer:	
  1964                           ; 1 bytes @ 0xD
  1965                           
  1966  002D                     ___lldiv@counter:	
  1967                           ; 1 bytes @ 0xD
  1968                           
  1969  002D                     ___flmul@a:	
  1970                           ; 1 bytes @ 0xD
  1971                           
  1972                           
  1973                           ; 4 bytes @ 0xD
  1974  002D                     	ds	1
  1975  002E                     ??_EEPROM_24C1025_Read_Str:
  1976  002E                     ?_I2C_Master_Init:	
  1977                           ; 1 bytes @ 0xE
  1978                           
  1979  002E                     ?_ADC_Media_10bits:	
  1980                           ; 1 bytes @ 0xE
  1981                           
  1982  002E                     EEPROM_24C1025_Write_Buffer@sizedata:	
  1983                           ; 4 bytes @ 0xE
  1984                           
  1985  002E                     EEPROM_24C1025_Read_Buffer@sizedata:	
  1986                           ; 1 bytes @ 0xE
  1987                           
  1988  002E                     EEPROM_24C1025_Read_Buffer_USART@data:	
  1989                           ; 1 bytes @ 0xE
  1990                           
  1991  002E                     EEPROM_24C1025_Write_Str@data:	
  1992                           ; 1 bytes @ 0xE
  1993                           
  1994  002E                     I2C_Master_Init@c:	
  1995                           ; 1 bytes @ 0xE
  1996                           
  1997                           
  1998                           ; 4 bytes @ 0xE
  1999  002E                     	ds	1
  2000  002F                     ??_EEPROM_24C1025_Read_Buffer_USART:
  2001  002F                     ??_EEPROM_24C1025_Write_Str:	
  2002                           ; 1 bytes @ 0xF
  2003                           
  2004  002F                     EEPROM_24C1025_Read_Buffer@data:	
  2005                           ; 1 bytes @ 0xF
  2006                           
  2007  002F                     EEPROM_24C1025_Write_Buffer@data:	
  2008                           ; 1 bytes @ 0xF
  2009                           
  2010                           
  2011                           ; 2 bytes @ 0xF
  2012  002F                     	ds	1
  2013  0030                     ??_EEPROM_24C1025_Read_Buffer:
  2014  0030                     EEPROM_24C1025_Read_Str@cnt:	
  2015                           ; 1 bytes @ 0x10
  2016                           
  2017                           
  2018                           ; 1 bytes @ 0x10
  2019  0030                     	ds	1
  2020  0031                     ??_EEPROM_24C1025_Write_Buffer:
  2021  0031                     ??___flmul:	
  2022                           ; 1 bytes @ 0x11
  2023                           
  2024  0031                     EEPROM_24C1025_Read_Buffer_USART@cnt_117:	
  2025                           ; 1 bytes @ 0x11
  2026                           
  2027  0031                     EEPROM_24C1025_Write_Str@chip_add:	
  2028                           ; 1 bytes @ 0x11
  2029                           
  2030  0031                     EEPROM_24C1025_Read_Str@chip_add:	
  2031                           ; 1 bytes @ 0x11
  2032                           
  2033                           
  2034                           ; 1 bytes @ 0x11
  2035  0031                     	ds	1
  2036  0032                     ??_ADC_Media_10bits:
  2037  0032                     ??_I2C_Master_Init:	
  2038                           ; 1 bytes @ 0x12
  2039                           
  2040  0032                     EEPROM_24C1025_Read_Buffer@cnt_108:	
  2041                           ; 1 bytes @ 0x12
  2042                           
  2043  0032                     EEPROM_24C1025_Read_Buffer_USART@chip_add:	
  2044                           ; 1 bytes @ 0x12
  2045                           
  2046  0032                     EEPROM_24C1025_Write_Str@range:	
  2047                           ; 1 bytes @ 0x12
  2048                           
  2049  0032                     EEPROM_24C1025_Read_Str@range:	
  2050                           ; 1 bytes @ 0x12
  2051                           
  2052                           
  2053                           ; 1 bytes @ 0x12
  2054  0032                     	ds	1
  2055  0033                     EEPROM_24C1025_Write_Buffer@count:
  2056  0033                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2057                           ; 1 bytes @ 0x13
  2058                           
  2059  0033                     EEPROM_24C1025_Read_Buffer_USART@range:	
  2060                           ; 1 bytes @ 0x13
  2061                           
  2062  0033                     EEPROM_24C1025_Write_Str@ctrl:	
  2063                           ; 1 bytes @ 0x13
  2064                           
  2065  0033                     EEPROM_24C1025_Read_Str@ctrl:	
  2066                           ; 1 bytes @ 0x13
  2067                           
  2068  0033                     ADC_Media_10bits@canal:	
  2069                           ; 1 bytes @ 0x13
  2070                           
  2071                           
  2072                           ; 1 bytes @ 0x13
  2073  0033                     	ds	1
  2074  0034                     EEPROM_24C1025_Write_Buffer@chip_add:
  2075  0034                     EEPROM_24C1025_Read_Buffer@range:	
  2076                           ; 1 bytes @ 0x14
  2077                           
  2078  0034                     EEPROM_24C1025_Read_Buffer_USART@ctrl:	
  2079                           ; 1 bytes @ 0x14
  2080                           
  2081  0034                     ADC_Media_10bits@value:	
  2082                           ; 1 bytes @ 0x14
  2083                           
  2084                           
  2085                           ; 2 bytes @ 0x14
  2086  0034                     	ds	1
  2087  0035                     EEPROM_24C1025_Write_Buffer@range:
  2088  0035                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2089                           ; 1 bytes @ 0x15
  2090                           
  2091                           
  2092                           ; 1 bytes @ 0x15
  2093  0035                     	ds	1
  2094  0036                     ?_EEPROM_24C1025_Read_Byte:
  2095  0036                     ?_EEPROM_24C1025_Read_Int:	
  2096                           ; 1 bytes @ 0x16
  2097                           
  2098  0036                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2099                           ; 2 bytes @ 0x16
  2100                           
  2101  0036                     ADC_Media_10bits@i:	
  2102                           ; 1 bytes @ 0x16
  2103                           
  2104  0036                     ___flmul@sign:	
  2105                           ; 1 bytes @ 0x16
  2106                           
  2107  0036                     EEPROM_24C1025_Read_Byte@mem_add:	
  2108                           ; 1 bytes @ 0x16
  2109                           
  2110  0036                     EEPROM_24C1025_Read_Int@mem_add:	
  2111                           ; 4 bytes @ 0x16
  2112                           
  2113                           
  2114                           ; 4 bytes @ 0x16
  2115  0036                     	ds	1
  2116  0037                     ?_EEPROM_24C1025_Write_Byte:
  2117  0037                     ___flmul@aexp:	
  2118                           ; 1 bytes @ 0x17
  2119                           
  2120  0037                     EEPROM_24C1025_Write_Byte@mem_add:	
  2121                           ; 1 bytes @ 0x17
  2122                           
  2123                           
  2124                           ; 4 bytes @ 0x17
  2125  0037                     	ds	1
  2126  0038                     ___flmul@grs:
  2127                           
  2128                           ; 4 bytes @ 0x18
  2129  0038                     	ds	2
  2130  003A                     ??_EEPROM_24C1025_Read_Byte:
  2131  003A                     ??_EEPROM_24C1025_Read_Int:	
  2132                           ; 1 bytes @ 0x1A
  2133                           
  2134                           
  2135                           ; 1 bytes @ 0x1A
  2136  003A                     	ds	1
  2137  003B                     EEPROM_24C1025_Write_Byte@data:
  2138  003B                     EEPROM_24C1025_Read_Byte@chip_add:	
  2139                           ; 1 bytes @ 0x1B
  2140                           
  2141                           
  2142                           ; 1 bytes @ 0x1B
  2143  003B                     	ds	1
  2144  003C                     ??_EEPROM_24C1025_Write_Byte:
  2145  003C                     EEPROM_24C1025_Write_Byte@chip_add:	
  2146                           ; 1 bytes @ 0x1C
  2147                           
  2148  003C                     EEPROM_24C1025_Read_Byte@data:	
  2149                           ; 1 bytes @ 0x1C
  2150                           
  2151  003C                     EEPROM_24C1025_Read_Int@chip_add:	
  2152                           ; 1 bytes @ 0x1C
  2153                           
  2154  003C                     ___flmul@bexp:	
  2155                           ; 1 bytes @ 0x1C
  2156                           
  2157                           
  2158                           ; 1 bytes @ 0x1C
  2159  003C                     	ds	1
  2160  003D                     EEPROM_24C1025_Read_Int@data:
  2161  003D                     ___flmul@prod:	
  2162                           ; 2 bytes @ 0x1D
  2163                           
  2164                           
  2165                           ; 4 bytes @ 0x1D
  2166  003D                     	ds	4
  2167  0041                     ___flmul@temp:
  2168                           
  2169                           ; 2 bytes @ 0x21
  2170  0041                     	ds	2
  2171  0043                     ?___fltol:
  2172  0043                     ?___fldiv:	
  2173                           ; 4 bytes @ 0x23
  2174                           
  2175  0043                     ___fltol@f1:	
  2176                           ; 4 bytes @ 0x23
  2177                           
  2178  0043                     ___fldiv@a:	
  2179                           ; 4 bytes @ 0x23
  2180                           
  2181                           
  2182                           ; 4 bytes @ 0x23
  2183  0043                     	ds	4
  2184  0047                     ??___fltol:
  2185  0047                     ___fldiv@b:	
  2186                           ; 1 bytes @ 0x27
  2187                           
  2188                           
  2189                           ; 4 bytes @ 0x27
  2190  0047                     	ds	4
  2191  004B                     ??___fldiv:
  2192                           
  2193                           ; 1 bytes @ 0x2B
  2194  004B                     	ds	1
  2195  004C                     ___fltol@sign1:
  2196                           
  2197                           ; 1 bytes @ 0x2C
  2198  004C                     	ds	1
  2199  004D                     ___fltol@exp1:
  2200                           
  2201                           ; 1 bytes @ 0x2D
  2202  004D                     	ds	1
  2203  004E                     ?_USART_put_int:
  2204  004E                     ?_EEPROM_24C1025_Write_Int:	
  2205                           ; 1 bytes @ 0x2E
  2206                           
  2207  004E                     USART_put_int@value:	
  2208                           ; 1 bytes @ 0x2E
  2209                           
  2210  004E                     EEPROM_24C1025_Write_Int@mem_add:	
  2211                           ; 2 bytes @ 0x2E
  2212                           
  2213                           
  2214                           ; 4 bytes @ 0x2E
  2215  004E                     	ds	2
  2216  0050                     ??_USART_put_int:
  2217  0050                     ___fldiv@rem:	
  2218                           ; 1 bytes @ 0x30
  2219                           
  2220                           
  2221                           ; 4 bytes @ 0x30
  2222  0050                     	ds	1
  2223  0051                     USART_put_int@dado:
  2224                           
  2225                           ; 1 bytes @ 0x31
  2226  0051                     	ds	1
  2227  0052                     ?_PROCULUS_Control_Register_Write:
  2228  0052                     ?_PROCULUS_VP_Write:	
  2229                           ; 1 bytes @ 0x32
  2230                           
  2231  0052                     PROCULUS_Control_Register_Write@size:	
  2232                           ; 1 bytes @ 0x32
  2233                           
  2234  0052                     EEPROM_24C1025_Write_Int@data:	
  2235                           ; 1 bytes @ 0x32
  2236                           
  2237  0052                     PROCULUS_VP_Write@vp:	
  2238                           ; 2 bytes @ 0x32
  2239                           
  2240                           
  2241                           ; 2 bytes @ 0x32
  2242  0052                     	ds	1
  2243  0053                     ??_PROCULUS_Control_Register_Write:
  2244                           
  2245                           ; 1 bytes @ 0x33
  2246  0053                     	ds	1
  2247  0054                     ??_EEPROM_24C1025_Write_Int:
  2248  0054                     PROCULUS_Control_Register_Write@vetor:	
  2249                           ; 1 bytes @ 0x34
  2250                           
  2251  0054                     ___fldiv@sign:	
  2252                           ; 1 bytes @ 0x34
  2253                           
  2254  0054                     PROCULUS_VP_Write@vetor:	
  2255                           ; 1 bytes @ 0x34
  2256                           
  2257                           
  2258                           ; 2 bytes @ 0x34
  2259  0054                     	ds	1
  2260  0055                     EEPROM_24C1025_Write_Int@chip_add:
  2261  0055                     PROCULUS_Control_Register_Write@i:	
  2262                           ; 1 bytes @ 0x35
  2263                           
  2264  0055                     ___fldiv@new_exp:	
  2265                           ; 1 bytes @ 0x35
  2266                           
  2267                           
  2268                           ; 2 bytes @ 0x35
  2269  0055                     	ds	1
  2270  0056                     ?_PROCULUS_Show_Screen:
  2271  0056                     ?_PROCULUS_Buzzer:	
  2272                           ; 1 bytes @ 0x36
  2273                           
  2274  0056                     PROCULUS_VP_Write@size:	
  2275                           ; 1 bytes @ 0x36
  2276                           
  2277  0056                     EEPROM_24C1025_Write_Int@local:	
  2278                           ; 1 bytes @ 0x36
  2279                           
  2280  0056                     PROCULUS_Buzzer@time_ms_x_10:	
  2281                           ; 2 bytes @ 0x36
  2282                           
  2283  0056                     PROCULUS_Show_Screen@screen:	
  2284                           ; 2 bytes @ 0x36
  2285                           
  2286                           
  2287                           ; 2 bytes @ 0x36
  2288  0056                     	ds	1
  2289  0057                     ??_PROCULUS_VP_Write:
  2290  0057                     ___fldiv@grs:	
  2291                           ; 1 bytes @ 0x37
  2292                           
  2293                           
  2294                           ; 4 bytes @ 0x37
  2295  0057                     	ds	1
  2296  0058                     ?_Save_Log:
  2297  0058                     ??_PROCULUS_Show_Screen:	
  2298                           ; 1 bytes @ 0x38
  2299                           
  2300  0058                     ??_PROCULUS_Buzzer:	
  2301                           ; 1 bytes @ 0x38
  2302                           
  2303  0058                     ?_EEPROM_24C1025_Fill_All:	
  2304                           ; 1 bytes @ 0x38
  2305                           
  2306  0058                     EEPROM_24C1025_Fill_All@value:	
  2307                           ; 1 bytes @ 0x38
  2308                           
  2309  0058                     Save_Log@add_datalog:	
  2310                           ; 2 bytes @ 0x38
  2311                           
  2312                           
  2313                           ; 4 bytes @ 0x38
  2314  0058                     	ds	1
  2315  0059                     PROCULUS_VP_Write@i:
  2316  0059                     PROCULUS_Buzzer@vetor:	
  2317                           ; 1 bytes @ 0x39
  2318                           
  2319  0059                     PROCULUS_Show_Screen@vetor:	
  2320                           ; 2 bytes @ 0x39
  2321                           
  2322                           
  2323                           ; 3 bytes @ 0x39
  2324  0059                     	ds	1
  2325  005A                     ?_PROCULUS_VP_Write_String:
  2326  005A                     ??_EEPROM_24C1025_Fill_All:	
  2327                           ; 1 bytes @ 0x3A
  2328                           
  2329  005A                     EEPROM_24C1025_Fill_All@chip_add:	
  2330                           ; 1 bytes @ 0x3A
  2331                           
  2332  005A                     PROCULUS_VP_Write_String@vp:	
  2333                           ; 1 bytes @ 0x3A
  2334                           
  2335                           
  2336                           ; 2 bytes @ 0x3A
  2337  005A                     	ds	1
  2338  005B                     ___fldiv@bexp:
  2339  005B                     EEPROM_24C1025_Fill_All@mem_add:	
  2340                           ; 1 bytes @ 0x3B
  2341                           
  2342                           
  2343                           ; 4 bytes @ 0x3B
  2344  005B                     	ds	1
  2345  005C                     ??_Save_Log:
  2346  005C                     PROCULUS_VP_Write_String@text:	
  2347                           ; 1 bytes @ 0x3C
  2348                           
  2349  005C                     ___fldiv@aexp:	
  2350                           ; 1 bytes @ 0x3C
  2351                           
  2352                           
  2353                           ; 1 bytes @ 0x3C
  2354  005C                     	ds	1
  2355  005D                     ??_PROCULUS_VP_Write_String:
  2356  005D                     ?___fladd:	
  2357                           ; 1 bytes @ 0x3D
  2358                           
  2359  005D                     ___fladd@b:	
  2360                           ; 4 bytes @ 0x3D
  2361                           
  2362                           
  2363                           ; 4 bytes @ 0x3D
  2364  005D                     	ds	2
  2365  005F                     ??_Decodify_Command:
  2366                           
  2367                           ; 1 bytes @ 0x3F
  2368  005F                     	ds	2
  2369  0061                     ___fladd@a:
  2370                           
  2371                           ; 4 bytes @ 0x41
  2372  0061                     	ds	4
  2373  0065                     ??___fladd:
  2374                           
  2375                           ; 1 bytes @ 0x45
  2376  0065                     	ds	8
  2377  006D                     main@reset:
  2378                           
  2379                           ; 2 bytes @ 0x4D
  2380  006D                     	ds	2
  2381                           
  2382                           	psect	maintext
  2383  12A6                     __pmaintext:	
  2384 ;;
  2385 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2386 ;;
  2387 ;; *************** function _main *****************
  2388 ;; Defined at:
  2389 ;;		line 144 in file "SlaveLiofilizadorVer1.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;  reset           2   77[BANK0 ] unsigned int 
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      void 
  2396 ;; Registers used:
  2397 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : B00/0
  2400 ;;		On exit  : 300/100
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2403 ;;      Params:         0       0       0       0       0
  2404 ;;      Locals:         0       2       0       0       0
  2405 ;;      Temps:          0       0       3       0       0
  2406 ;;      Totals:         0       2       3       0       0
  2407 ;;Total ram usage:        5 bytes
  2408 ;; Hardware stack levels required when called: 7
  2409 ;; This function calls:
  2410 ;;		_ADC_init
  2411 ;;		_Decodify_Command
  2412 ;;		_EEPROM_Read_Integer
  2413 ;;		_EEPROM_Write_Integer
  2414 ;;		_I2C_Master_Init
  2415 ;;		_USART_init
  2416 ;;		_mediaLeituraPt100Umidadde
  2417 ;;		_my_delay_ms_WDT
  2418 ;; This function is called by:
  2419 ;;		Startup code after reset
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           
  2424                           ;psect for function _main
  2425  12A6                     _main:
  2426                           
  2427                           ;SlaveLiofilizadorVer1.c: 145:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2428                           
  2429                           ;incstack = 0
  2430                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2431  12A6  3002               	movlw	2
  2432  12A7  1683               	bsf	3,5	;RP0=1, select bank1
  2433  12A8  1303               	bcf	3,6	;RP1=0, select bank1
  2434  12A9  00CC               	movwf	(??_main^(0+128)+2)
  2435  12AA  3004               	movlw	4
  2436  12AB  00CB               	movwf	(??_main^(0+128)+1)
  2437  12AC  30B9               	movlw	185
  2438  12AD  00CA               	movwf	??_main^(0+128)
  2439  12AE                     u5237:
  2440  12AE  0BCA               	decfsz	??_main^(0+128),f
  2441  12AF  2AAE               	goto	u5237
  2442  12B0  0BCB               	decfsz	(??_main^(0+128)+1),f
  2443  12B1  2AAE               	goto	u5237
  2444  12B2  0BCC               	decfsz	(??_main^(0+128)+2),f
  2445  12B3  2AAE               	goto	u5237
  2446  12B4  2AB5               	nop2
  2447                           
  2448                           ;SlaveLiofilizadorVer1.c: 146:      OSCCONbits.IRCF0=1;
  2449  12B5  1683               	bsf	3,5	;RP0=1, select bank1
  2450  12B6  1303               	bcf	3,6	;RP1=0, select bank1
  2451  12B7  160F               	bsf	15,4	;volatile
  2452                           
  2453                           ;SlaveLiofilizadorVer1.c: 147:      OSCCONbits.IRCF1=1;
  2454  12B8  168F               	bsf	15,5	;volatile
  2455                           
  2456                           ;SlaveLiofilizadorVer1.c: 148:      OSCCONbits.IRCF2=1;
  2457  12B9  170F               	bsf	15,6	;volatile
  2458                           
  2459                           ;SlaveLiofilizadorVer1.c: 150:      PORTA=0;
  2460  12BA  1283               	bcf	3,5	;RP0=0, select bank0
  2461  12BB  0185               	clrf	5	;volatile
  2462                           
  2463                           ;SlaveLiofilizadorVer1.c: 151:      PORTB=0;
  2464  12BC  0186               	clrf	6	;volatile
  2465                           
  2466                           ;SlaveLiofilizadorVer1.c: 152:      PORTC=0;
  2467  12BD  0187               	clrf	7	;volatile
  2468                           
  2469                           ;SlaveLiofilizadorVer1.c: 153:      PORTE=0;
  2470  12BE  0189               	clrf	9	;volatile
  2471                           
  2472                           ;SlaveLiofilizadorVer1.c: 154:      TRISA=0b11101111;
  2473  12BF  30EF               	movlw	239
  2474  12C0  1683               	bsf	3,5	;RP0=1, select bank1
  2475  12C1  0085               	movwf	5	;volatile
  2476                           
  2477                           ;SlaveLiofilizadorVer1.c: 155:      TRISB=0b00001111;
  2478  12C2  300F               	movlw	15
  2479  12C3  0086               	movwf	6	;volatile
  2480                           
  2481                           ;SlaveLiofilizadorVer1.c: 156:      TRISC=0xF0;
  2482  12C4  30F0               	movlw	240
  2483  12C5  0087               	movwf	7	;volatile
  2484                           
  2485                           ;SlaveLiofilizadorVer1.c: 157:      TRISE=0xFF;
  2486  12C6  30FF               	movlw	255
  2487  12C7  0089               	movwf	9	;volatile
  2488                           
  2489                           ;SlaveLiofilizadorVer1.c: 159:      ANSEL=0x00000011;
  2490  12C8  3011               	movlw	17
  2491  12C9  1703               	bsf	3,6	;RP1=1, select bank3
  2492  12CA  0088               	movwf	8	;volatile
  2493                           
  2494                           ;SlaveLiofilizadorVer1.c: 160:      ANSELH=0x00000000;
  2495  12CB  0189               	clrf	9	;volatile
  2496                           
  2497                           ;SlaveLiofilizadorVer1.c: 162:      OPTION_REGbits.nRBPU=0;
  2498  12CC  1303               	bcf	3,6	;RP1=0, select bank1
  2499  12CD  1381               	bcf	1,7	;volatile
  2500                           
  2501                           ;SlaveLiofilizadorVer1.c: 163:      WPUB=0b00001111;
  2502  12CE  300F               	movlw	15
  2503  12CF  0095               	movwf	21	;volatile
  2504                           
  2505                           ;SlaveLiofilizadorVer1.c: 166:      PORTBbits.RB7 =1;
  2506  12D0  1283               	bcf	3,5	;RP0=0, select bank0
  2507  12D1  1786               	bsf	6,7	;volatile
  2508                           
  2509                           ;SlaveLiofilizadorVer1.c: 167:      PORTBbits.RB6 =1;
  2510  12D2  1706               	bsf	6,6	;volatile
  2511                           
  2512                           ;SlaveLiofilizadorVer1.c: 168:      PORTBbits.RB5=1;
  2513  12D3  1686               	bsf	6,5	;volatile
  2514                           
  2515                           ;SlaveLiofilizadorVer1.c: 169:      my_delay_ms_WDT(1000);
  2516  12D4  3000               	movlw	0
  2517  12D5  00A3               	movwf	my_delay_ms_WDT@time+3
  2518  12D6  3000               	movlw	0
  2519  12D7  00A2               	movwf	my_delay_ms_WDT@time+2
  2520  12D8  3003               	movlw	3
  2521  12D9  00A1               	movwf	my_delay_ms_WDT@time+1
  2522  12DA  30E8               	movlw	232
  2523  12DB  00A0               	movwf	my_delay_ms_WDT@time
  2524  12DC  160A  158A  25EA  160A  118A  	fcall	_my_delay_ms_WDT
  2525                           
  2526                           ;SlaveLiofilizadorVer1.c: 171:      OPTION_REGbits.T0CS=0;
  2527  12E1  1683               	bsf	3,5	;RP0=1, select bank1
  2528  12E2  1281               	bcf	1,5	;volatile
  2529                           
  2530                           ;SlaveLiofilizadorVer1.c: 172:      OPTION_REGbits.PSA =1;
  2531  12E3  1581               	bsf	1,3	;volatile
  2532                           
  2533                           ;SlaveLiofilizadorVer1.c: 173:      OPTION_REGbits.PS0 =1;
  2534  12E4  1401               	bsf	1,0	;volatile
  2535                           
  2536                           ;SlaveLiofilizadorVer1.c: 174:      OPTION_REGbits.PS1 =1;
  2537  12E5  1481               	bsf	1,1	;volatile
  2538                           
  2539                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.PS2 =1;
  2540  12E6  1501               	bsf	1,2	;volatile
  2541                           
  2542                           ;SlaveLiofilizadorVer1.c: 176:      INTCONbits.T0IE =0;
  2543  12E7  128B               	bcf	11,5	;volatile
  2544                           
  2545                           ;SlaveLiofilizadorVer1.c: 177:      INTCONbits.INTE =0;
  2546  12E8  120B               	bcf	11,4	;volatile
  2547                           
  2548                           ;SlaveLiofilizadorVer1.c: 178:      INTCONbits.GIE =1;
  2549  12E9  178B               	bsf	11,7	;volatile
  2550                           
  2551                           ;SlaveLiofilizadorVer1.c: 181:      INTCONbits.PEIE = 1;
  2552  12EA  170B               	bsf	11,6	;volatile
  2553                           
  2554                           ;SlaveLiofilizadorVer1.c: 182:      T1CKPS0=1;
  2555  12EB  1283               	bcf	3,5	;RP0=0, select bank0
  2556  12EC  1610               	bsf	16,4	;volatile
  2557                           
  2558                           ;SlaveLiofilizadorVer1.c: 183:      T1CKPS1=1;
  2559  12ED  1690               	bsf	16,5	;volatile
  2560                           
  2561                           ;SlaveLiofilizadorVer1.c: 184:      TMR1CS=0;
  2562  12EE  1090               	bcf	16,1	;volatile
  2563                           
  2564                           ;SlaveLiofilizadorVer1.c: 185:      TMR1IE=1;
  2565  12EF  1683               	bsf	3,5	;RP0=1, select bank1
  2566  12F0  140C               	bsf	12,0	;volatile
  2567                           
  2568                           ;SlaveLiofilizadorVer1.c: 186:      T1CON=1;
  2569  12F1  3001               	movlw	1
  2570  12F2  1283               	bcf	3,5	;RP0=0, select bank0
  2571  12F3  0090               	movwf	16	;volatile
  2572  12F4  0064               	clrwdt	;# 
  2573                           
  2574                           ;SlaveLiofilizadorVer1.c: 193:      ADC_init();
  2575  12F5  160A  158A  22A5  160A  118A  	fcall	_ADC_init
  2576                           
  2577                           ;SlaveLiofilizadorVer1.c: 194:      I2C_Master_Init(100000);
  2578  12FA  3000               	movlw	0
  2579  12FB  00B1               	movwf	I2C_Master_Init@c+3
  2580  12FC  3001               	movlw	1
  2581  12FD  00B0               	movwf	I2C_Master_Init@c+2
  2582  12FE  3086               	movlw	134
  2583  12FF  00AF               	movwf	I2C_Master_Init@c+1
  2584  1300  30A0               	movlw	160
  2585  1301  00AE               	movwf	I2C_Master_Init@c
  2586  1302  160A  158A  24E8  160A  118A  	fcall	_I2C_Master_Init
  2587                           
  2588                           ;SlaveLiofilizadorVer1.c: 195:      USART_init(115200);
  2589  1307  3000               	movlw	0
  2590  1308  1283               	bcf	3,5	;RP0=0, select bank0
  2591  1309  00A3               	movwf	USART_init@baudrate+3
  2592  130A  3001               	movlw	1
  2593  130B  00A2               	movwf	USART_init@baudrate+2
  2594  130C  30C2               	movlw	194
  2595  130D  00A1               	movwf	USART_init@baudrate+1
  2596  130E  3000               	movlw	0
  2597  130F  00A0               	movwf	USART_init@baudrate
  2598  1310  160A  158A  2713  160A  118A  	fcall	_USART_init
  2599                           
  2600                           ;SlaveLiofilizadorVer1.c: 201:      {;SlaveLiofilizadorVer1.c: 202:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 203:      reset=EEPROM_Read_Integer(0x10);
  2601  1315  3010               	movlw	16
  2602  1316  160A  158A  24BE  160A  118A  	fcall	_EEPROM_Read_Integer
  2603  131B  0824               	movf	?_EEPROM_Read_Integer+1,w
  2604  131C  00EE               	movwf	main@reset+1
  2605  131D  0823               	movf	?_EEPROM_Read_Integer,w
  2606  131E  00ED               	movwf	main@reset
  2607                           
  2608                           ;SlaveLiofilizadorVer1.c: 204:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2609  131F  0A6D               	incf	main@reset,w
  2610  1320  1D03               	skipz
  2611  1321  2B2E               	goto	l5771
  2612  1322  0A6E               	incf	main@reset+1,w
  2613  1323  1D03               	btfss	3,2
  2614  1324  2B2E               	goto	l5771
  2615  1325  3000               	movlw	0
  2616  1326  00A5               	movwf	EEPROM_Write_Integer@dado
  2617  1327  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2618  1328  3010               	movlw	16
  2619  1329  160A  158A  2519  160A  118A  	fcall	_EEPROM_Write_Integer
  2620  132E                     l5771:
  2621                           
  2622                           ;SlaveLiofilizadorVer1.c: 205:      reset++;
  2623  132E  3001               	movlw	1
  2624  132F  1283               	bcf	3,5	;RP0=0, select bank0
  2625  1330  1303               	bcf	3,6	;RP1=0, select bank0
  2626  1331  07ED               	addwf	main@reset,f
  2627  1332  1803               	skipnc
  2628  1333  0AEE               	incf	main@reset+1,f
  2629  1334  3000               	movlw	0
  2630  1335  07EE               	addwf	main@reset+1,f
  2631                           
  2632                           ;SlaveLiofilizadorVer1.c: 206:      EEPROM_Write_Integer(0x10,reset);
  2633  1336  086E               	movf	main@reset+1,w
  2634  1337  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2635  1338  086D               	movf	main@reset,w
  2636  1339  00A5               	movwf	EEPROM_Write_Integer@dado
  2637  133A  3010               	movlw	16
  2638  133B  160A  158A  2519  160A  118A  	fcall	_EEPROM_Write_Integer
  2639                           
  2640                           ;SlaveLiofilizadorVer1.c: 207:      };SlaveLiofilizadorVer1.c: 211:      Delay_Led_Tmr0 
      +                          = 0;
  2641  1340  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  2642  1341  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  2643                           
  2644                           ;SlaveLiofilizadorVer1.c: 212:      Delay_Led_Usart = 0;
  2645  1342  1683               	bsf	3,5	;RP0=1, select bank1
  2646  1343  1303               	bcf	3,6	;RP1=0, select bank1
  2647  1344  01B2               	clrf	_Delay_Led_Usart^(0+128)	;volatile
  2648  1345  01B3               	clrf	(_Delay_Led_Usart+1)^(0+128)	;volatile
  2649                           
  2650                           ;SlaveLiofilizadorVer1.c: 213:      Delay_Led_Memory = 0;
  2651  1346  01B4               	clrf	_Delay_Led_Memory^(0+128)	;volatile
  2652  1347  01B5               	clrf	(_Delay_Led_Memory+1)^(0+128)	;volatile
  2653                           
  2654                           ;SlaveLiofilizadorVer1.c: 215:      segundo=0;
  2655  1348  01FD               	clrf	_segundo	;volatile
  2656                           
  2657                           ;SlaveLiofilizadorVer1.c: 216:      hora=0;
  2658  1349  01FC               	clrf	_hora	;volatile
  2659                           
  2660                           ;SlaveLiofilizadorVer1.c: 217:      PORTCbits.RC0=0;
  2661  134A  1283               	bcf	3,5	;RP0=0, select bank0
  2662  134B  1007               	bcf	7,0	;volatile
  2663                           
  2664                           ;SlaveLiofilizadorVer1.c: 218:      PORTCbits.RC1=0;
  2665  134C  1087               	bcf	7,1	;volatile
  2666                           
  2667                           ;SlaveLiofilizadorVer1.c: 219:      PORTAbits.RA2=0;
  2668  134D  1105               	bcf	5,2	;volatile
  2669                           
  2670                           ;SlaveLiofilizadorVer1.c: 220:      PORTAbits.RA3=0;
  2671  134E  1185               	bcf	5,3	;volatile
  2672                           
  2673                           ;SlaveLiofilizadorVer1.c: 223:      Board_Number=(((0x0F)&(~PORTB)));
  2674  134F  0906               	comf	6,w	;volatile
  2675  1350  390F               	andlw	15
  2676  1351  1683               	bsf	3,5	;RP0=1, select bank1
  2677  1352  00CA               	movwf	??_main^(0+128)
  2678  1353  084A               	movf	??_main^(0+128),w
  2679  1354  00B8               	movwf	_Board_Number^(0+128)
  2680                           
  2681                           ;SlaveLiofilizadorVer1.c: 224:      canal=1;
  2682  1355  01B9               	clrf	_canal^(0+128)
  2683  1356  0AB9               	incf	_canal^(0+128),f
  2684                           
  2685                           ;SlaveLiofilizadorVer1.c: 228:      statuspower.flag_global_condensador=0;
  2686  1357  10BA               	bcf	_statuspower^(0+128),1
  2687  1358                     l5797:
  2688                           
  2689                           ;SlaveLiofilizadorVer1.c: 246:           {;SlaveLiofilizadorVer1.c: 248:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2690  1358  1283               	bcf	3,5	;RP0=0, select bank0
  2691  1359  17EF               	bsf	_generic_status,7
  2692                           
  2693                           ;SlaveLiofilizadorVer1.c: 269:          if(++canal==2) canal=0;
  2694  135A  3001               	movlw	1
  2695  135B  1683               	bsf	3,5	;RP0=1, select bank1
  2696  135C  00CA               	movwf	??_main^(0+128)
  2697  135D  084A               	movf	??_main^(0+128),w
  2698  135E  07B9               	addwf	_canal^(0+128),f
  2699  135F  3002               	movlw	2
  2700  1360  0639               	xorwf	_canal^(0+128),w
  2701  1361  1903               	btfsc	3,2
  2702  1362  01B9               	clrf	_canal^(0+128)
  2703                           
  2704                           ;SlaveLiofilizadorVer1.c: 270:          mediaLeituraPt100Umidadde(canal);
  2705  1363  0839               	movf	_canal^(0+128),w
  2706  1364  160A  118A  250F  160A  118A  	fcall	_mediaLeituraPt100Umidadde
  2707                           
  2708                           ;SlaveLiofilizadorVer1.c: 283:          if(generic_status.flag_usart_rx==1)
  2709  1369  1283               	bcf	3,5	;RP0=0, select bank0
  2710  136A  1C6F               	btfss	_generic_status,0
  2711  136B  2B58               	goto	l5797
  2712                           
  2713                           ;SlaveLiofilizadorVer1.c: 284:             {;SlaveLiofilizadorVer1.c: 285:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2714  136C  1703               	bsf	3,6	;RP1=1, select bank2
  2715  136D  0810               	movf	_usart_buffer^(0+256),w	;volatile
  2716  136E  1683               	bsf	3,5	;RP0=1, select bank1
  2717  136F  1303               	bcf	3,6	;RP1=0, select bank1
  2718  1370  00AF               	movwf	(_header+1)^(0+128)
  2719  1371  1283               	bcf	3,5	;RP0=0, select bank2
  2720  1372  1703               	bsf	3,6	;RP1=1, select bank2
  2721  1373  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  2722  1374  1683               	bsf	3,5	;RP0=1, select bank1
  2723  1375  1303               	bcf	3,6	;RP1=0, select bank1
  2724  1376  00AE               	movwf	_header^(0+128)
  2725                           
  2726                           ;SlaveLiofilizadorVer1.c: 286:             if(header==0xAABB)
  2727  1377  30BB               	movlw	187
  2728  1378  062E               	xorwf	_header^(0+128),w
  2729  1379  30AA               	movlw	170
  2730  137A  1903               	skipnz
  2731  137B  062F               	xorwf	(_header+1)^(0+128),w
  2732  137C  1D03               	btfss	3,2
  2733  137D  2B58               	goto	l5797
  2734                           
  2735                           ;SlaveLiofilizadorVer1.c: 287:                {;SlaveLiofilizadorVer1.c: 288:           
      +                               destino =usart_buffer[3];
  2736  137E  1283               	bcf	3,5	;RP0=0, select bank2
  2737  137F  1703               	bsf	3,6	;RP1=1, select bank2
  2738  1380  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  2739  1381  1683               	bsf	3,5	;RP0=1, select bank1
  2740  1382  1303               	bcf	3,6	;RP1=0, select bank1
  2741  1383  00CA               	movwf	??_main^(0+128)
  2742  1384  084A               	movf	??_main^(0+128),w
  2743  1385  00B7               	movwf	_destino^(0+128)
  2744                           
  2745                           ;SlaveLiofilizadorVer1.c: 289:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2746  1386  0837               	movf	_destino^(0+128),w
  2747  1387  0638               	xorwf	_Board_Number^(0+128),w
  2748  1388  1D03               	btfss	3,2
  2749  1389  0A37               	incf	_destino^(0+128),w
  2750  138A  1D03               	btfss	3,2
  2751  138B  2B58               	goto	l5797
  2752                           
  2753                           ;SlaveLiofilizadorVer1.c: 290:                       {;SlaveLiofilizadorVer1.c: 291:    
      +                                             Delay_Led_Usart=20;
  2754  138C  3014               	movlw	20
  2755  138D  00B2               	movwf	_Delay_Led_Usart^(0+128)	;volatile
  2756  138E  3000               	movlw	0
  2757  138F  00B3               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
  2758                           
  2759                           ;SlaveLiofilizadorVer1.c: 292:                       Decodify_Command();
  2760  1390  120A  118A  203A  160A  118A  	fcall	_Decodify_Command
  2761                           
  2762                           ;SlaveLiofilizadorVer1.c: 293:                       generic_status.flag_usart_rx=0;
  2763  1395  1283               	bcf	3,5	;RP0=0, select bank0
  2764  1396  1303               	bcf	3,6	;RP1=0, select bank0
  2765  1397  106F               	bcf	_generic_status,0
  2766                           
  2767                           ;SlaveLiofilizadorVer1.c: 296:             }
  2768  1398  2B58               	goto	l5797
  2769  1399                     __end_of_main:
  2770                           
  2771                           	psect	text1
  2772  150F                     __ptext1:	
  2773 ;; *************** function _mediaLeituraPt100Umidadde *****************
  2774 ;; Defined at:
  2775 ;;		line 685 in file "SlaveLiofilizadorVer1.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;  canal           1    wreg     unsigned char 
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;  canal           1    8[BANK1 ] unsigned char 
  2780 ;;  Temp            4    9[BANK1 ] float 
  2781 ;;  i               1   13[BANK1 ] unsigned char 
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1    wreg      void 
  2784 ;; Registers used:
  2785 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2786 ;; Tracked objects:
  2787 ;;		On entry : 300/100
  2788 ;;		On exit  : 300/100
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2791 ;;      Params:         0       0       0       0       0
  2792 ;;      Locals:         0       0       6       0       0
  2793 ;;      Temps:          0       0       4       0       0
  2794 ;;      Totals:         0       0      10       0       0
  2795 ;;Total ram usage:       10 bytes
  2796 ;; Hardware stack levels used: 1
  2797 ;; Hardware stack levels required when called: 3
  2798 ;; This function calls:
  2799 ;;		_ADC_Media_10bits
  2800 ;;		_Package_Usart_is_for_me
  2801 ;;		___fladd
  2802 ;;		___fldiv
  2803 ;;		___flmul
  2804 ;;		___xxtofl
  2805 ;;		_my_delay_ms
  2806 ;; This function is called by:
  2807 ;;		_main
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           
  2811                           
  2812                           ;psect for function _mediaLeituraPt100Umidadde
  2813  150F                     _mediaLeituraPt100Umidadde:
  2814                           
  2815                           ;incstack = 0
  2816                           ; Regs used in _mediaLeituraPt100Umidadde: [wreg+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  2817                           ;mediaLeituraPt100Umidadde@canal stored from wreg
  2818  150F  00C3               	movwf	mediaLeituraPt100Umidadde@canal^(0+128)
  2819                           
  2820                           ;SlaveLiofilizadorVer1.c: 685: void mediaLeituraPt100Umidadde(unsigned char canal);Slave
      +                          LiofilizadorVer1.c: 686:      {;SlaveLiofilizadorVer1.c: 687:      float Temp;;SlaveLiof
      +                          ilizadorVer1.c: 689:      char i;;SlaveLiofilizadorVer1.c: 691:      ADCON0bits.CHS=cana
      +                          l;
  2821  1510  0843               	movf	mediaLeituraPt100Umidadde@canal^(0+128),w
  2822  1511  00BF               	movwf	??_mediaLeituraPt100Umidadde^(0+128)
  2823  1512  0DBF               	rlf	??_mediaLeituraPt100Umidadde^(0+128),f
  2824  1513  0DBF               	rlf	??_mediaLeituraPt100Umidadde^(0+128),f
  2825  1514  1283               	bcf	3,5	;RP0=0, select bank0
  2826  1515  081F               	movf	31,w	;volatile
  2827  1516  1683               	bsf	3,5	;RP0=1, select bank1
  2828  1517  063F               	xorwf	??_mediaLeituraPt100Umidadde^(0+128),w
  2829  1518  39C3               	andlw	-61
  2830  1519  063F               	xorwf	??_mediaLeituraPt100Umidadde^(0+128),w
  2831  151A  1283               	bcf	3,5	;RP0=0, select bank0
  2832  151B  009F               	movwf	31	;volatile
  2833                           
  2834                           ;SlaveLiofilizadorVer1.c: 692:      my_delay_ms(1);
  2835  151C  3000               	movlw	0
  2836  151D  00A3               	movwf	my_delay_ms@time+3
  2837  151E  3000               	movlw	0
  2838  151F  00A2               	movwf	my_delay_ms@time+2
  2839  1520  3000               	movlw	0
  2840  1521  00A1               	movwf	my_delay_ms@time+1
  2841  1522  3001               	movlw	1
  2842  1523  00A0               	movwf	my_delay_ms@time
  2843  1524  160A  158A  25B3  160A  118A  	fcall	_my_delay_ms
  2844                           
  2845                           ;SlaveLiofilizadorVer1.c: 693:      Temp=0;
  2846  1529  3000               	movlw	0
  2847  152A  1683               	bsf	3,5	;RP0=1, select bank1
  2848  152B  00C7               	movwf	(mediaLeituraPt100Umidadde@Temp+3)^(0+128)
  2849  152C  3000               	movlw	0
  2850  152D  00C6               	movwf	(mediaLeituraPt100Umidadde@Temp+2)^(0+128)
  2851  152E  3000               	movlw	0
  2852  152F  00C5               	movwf	(mediaLeituraPt100Umidadde@Temp+1)^(0+128)
  2853  1530  3000               	movlw	0
  2854  1531  00C4               	movwf	mediaLeituraPt100Umidadde@Temp^(0+128)
  2855                           
  2856                           ;SlaveLiofilizadorVer1.c: 695:      for(i=1;i<15;i++)
  2857  1532  01C8               	clrf	mediaLeituraPt100Umidadde@i^(0+128)
  2858  1533  0AC8               	incf	mediaLeituraPt100Umidadde@i^(0+128),f
  2859  1534                     l4957:
  2860                           
  2861                           ;SlaveLiofilizadorVer1.c: 696:         {;SlaveLiofilizadorVer1.c: 697:         Temp+=ADC
      +                          _Media_10bits(canal);
  2862  1534  0843               	movf	mediaLeituraPt100Umidadde@canal^(0+128),w
  2863  1535  160A  158A  27AA  160A  118A  	fcall	_ADC_Media_10bits
  2864  153A  0831               	movf	?_ADC_Media_10bits+3,w
  2865  153B  00E0               	movwf	___fladd@b+3
  2866  153C  0830               	movf	?_ADC_Media_10bits+2,w
  2867  153D  00DF               	movwf	___fladd@b+2
  2868  153E  082F               	movf	?_ADC_Media_10bits+1,w
  2869  153F  00DE               	movwf	___fladd@b+1
  2870  1540  082E               	movf	?_ADC_Media_10bits,w
  2871  1541  00DD               	movwf	___fladd@b
  2872  1542  1683               	bsf	3,5	;RP0=1, select bank1
  2873  1543  0847               	movf	(mediaLeituraPt100Umidadde@Temp+3)^(0+128),w
  2874  1544  1283               	bcf	3,5	;RP0=0, select bank0
  2875  1545  00E4               	movwf	___fladd@a+3
  2876  1546  1683               	bsf	3,5	;RP0=1, select bank1
  2877  1547  0846               	movf	(mediaLeituraPt100Umidadde@Temp+2)^(0+128),w
  2878  1548  1283               	bcf	3,5	;RP0=0, select bank0
  2879  1549  00E3               	movwf	___fladd@a+2
  2880  154A  1683               	bsf	3,5	;RP0=1, select bank1
  2881  154B  0845               	movf	(mediaLeituraPt100Umidadde@Temp+1)^(0+128),w
  2882  154C  1283               	bcf	3,5	;RP0=0, select bank0
  2883  154D  00E2               	movwf	___fladd@a+1
  2884  154E  1683               	bsf	3,5	;RP0=1, select bank1
  2885  154F  0844               	movf	mediaLeituraPt100Umidadde@Temp^(0+128),w
  2886  1550  1283               	bcf	3,5	;RP0=0, select bank0
  2887  1551  00E1               	movwf	___fladd@a
  2888  1552  120A  158A  256F  160A  118A  	fcall	___fladd
  2889  1557  1283               	bcf	3,5	;RP0=0, select bank0
  2890  1558  0860               	movf	?___fladd+3,w
  2891  1559  1683               	bsf	3,5	;RP0=1, select bank1
  2892  155A  00C7               	movwf	(mediaLeituraPt100Umidadde@Temp+3)^(0+128)
  2893  155B  1283               	bcf	3,5	;RP0=0, select bank0
  2894  155C  085F               	movf	?___fladd+2,w
  2895  155D  1683               	bsf	3,5	;RP0=1, select bank1
  2896  155E  00C6               	movwf	(mediaLeituraPt100Umidadde@Temp+2)^(0+128)
  2897  155F  1283               	bcf	3,5	;RP0=0, select bank0
  2898  1560  085E               	movf	?___fladd+1,w
  2899  1561  1683               	bsf	3,5	;RP0=1, select bank1
  2900  1562  00C5               	movwf	(mediaLeituraPt100Umidadde@Temp+1)^(0+128)
  2901  1563  1283               	bcf	3,5	;RP0=0, select bank0
  2902  1564  085D               	movf	?___fladd,w
  2903  1565  1683               	bsf	3,5	;RP0=1, select bank1
  2904  1566  00C4               	movwf	mediaLeituraPt100Umidadde@Temp^(0+128)
  2905                           
  2906                           ;SlaveLiofilizadorVer1.c: 698:         if(Package_Usart_is_for_me()==1) break;
  2907  1567  160A  158A  233F  160A  118A  	fcall	_Package_Usart_is_for_me
  2908  156C  3A01               	xorlw	1
  2909  156D  1903               	btfsc	3,2
  2910  156E  2D78               	goto	l4967
  2911                           
  2912                           ;SlaveLiofilizadorVer1.c: 699:         }
  2913  156F  3001               	movlw	1
  2914  1570  1683               	bsf	3,5	;RP0=1, select bank1
  2915  1571  00BF               	movwf	??_mediaLeituraPt100Umidadde^(0+128)
  2916  1572  083F               	movf	??_mediaLeituraPt100Umidadde^(0+128),w
  2917  1573  07C8               	addwf	mediaLeituraPt100Umidadde@i^(0+128),f
  2918  1574  300F               	movlw	15
  2919  1575  0248               	subwf	mediaLeituraPt100Umidadde@i^(0+128),w
  2920  1576  1C03               	skipc
  2921  1577  2D34               	goto	l4957
  2922  1578                     l4967:
  2923                           
  2924                           ;SlaveLiofilizadorVer1.c: 700:      if(i<10)
  2925  1578  300A               	movlw	10
  2926  1579  1683               	bsf	3,5	;RP0=1, select bank1
  2927  157A  0248               	subwf	mediaLeituraPt100Umidadde@i^(0+128),w
  2928  157B  1C03               	btfss	3,0
  2929  157C  0008               	return
  2930                           
  2931                           ;SlaveLiofilizadorVer1.c: 707:      if(i==15)
  2932  157D  300F               	movlw	15
  2933  157E  0648               	xorwf	mediaLeituraPt100Umidadde@i^(0+128),w
  2934  157F  1D03               	btfss	3,2
  2935  1580  2D8F               	goto	l4975
  2936                           
  2937                           ;SlaveLiofilizadorVer1.c: 708:        Temp/=(i-1);
  2938  1581  0848               	movf	mediaLeituraPt100Umidadde@i^(0+128),w
  2939  1582  3EFF               	addlw	255
  2940  1583  1283               	bcf	3,5	;RP0=0, select bank0
  2941  1584  00A0               	movwf	___xxtofl@val
  2942  1585  30FF               	movlw	255
  2943  1586  1803               	skipnc
  2944  1587  3000               	movlw	0
  2945  1588  00A1               	movwf	___xxtofl@val+1
  2946  1589  01A2               	clrf	___xxtofl@val+2
  2947  158A  1BA1               	btfsc	___xxtofl@val+1,7
  2948  158B  03A2               	decf	___xxtofl@val+2,f
  2949  158C  0822               	movf	___xxtofl@val+2,w
  2950  158D  00A3               	movwf	___xxtofl@val+3
  2951  158E  2DA3               	goto	L1
  2952  158F                     l4975:
  2953                           
  2954                           ;SlaveLiofilizadorVer1.c: 710:        Temp/=(i);
  2955  158F  0848               	movf	mediaLeituraPt100Umidadde@i^(0+128),w
  2956  1590  00BF               	movwf	??_mediaLeituraPt100Umidadde^(0+128)
  2957  1591  01C0               	clrf	(??_mediaLeituraPt100Umidadde^(0+128)+1)
  2958  1592  01C1               	clrf	(??_mediaLeituraPt100Umidadde^(0+128)+2)
  2959  1593  01C2               	clrf	(??_mediaLeituraPt100Umidadde^(0+128)+3)
  2960  1594  0842               	movf	(??_mediaLeituraPt100Umidadde+3)^(0+128),w
  2961  1595  1283               	bcf	3,5	;RP0=0, select bank0
  2962  1596  00A3               	movwf	___xxtofl@val+3
  2963  1597  1683               	bsf	3,5	;RP0=1, select bank1
  2964  1598  0841               	movf	(??_mediaLeituraPt100Umidadde+2)^(0+128),w
  2965  1599  1283               	bcf	3,5	;RP0=0, select bank0
  2966  159A  00A2               	movwf	___xxtofl@val+2
  2967  159B  1683               	bsf	3,5	;RP0=1, select bank1
  2968  159C  0840               	movf	(??_mediaLeituraPt100Umidadde+1)^(0+128),w
  2969  159D  1283               	bcf	3,5	;RP0=0, select bank0
  2970  159E  00A1               	movwf	___xxtofl@val+1
  2971  159F  1683               	bsf	3,5	;RP0=1, select bank1
  2972  15A0  083F               	movf	??_mediaLeituraPt100Umidadde^(0+128),w
  2973  15A1  1283               	bcf	3,5	;RP0=0, select bank0
  2974  15A2  00A0               	movwf	___xxtofl@val
  2975  15A3                     L1:
  2976  15A3  3001               	movlw	1
  2977  15A4  120A  158A  202F  160A  118A  	fcall	___xxtofl
  2978  15A9  0823               	movf	?___xxtofl+3,w
  2979  15AA  00C6               	movwf	___fldiv@a+3
  2980  15AB  0822               	movf	?___xxtofl+2,w
  2981  15AC  00C5               	movwf	___fldiv@a+2
  2982  15AD  0821               	movf	?___xxtofl+1,w
  2983  15AE  00C4               	movwf	___fldiv@a+1
  2984  15AF  0820               	movf	?___xxtofl,w
  2985  15B0  00C3               	movwf	___fldiv@a
  2986  15B1  1683               	bsf	3,5	;RP0=1, select bank1
  2987  15B2  0847               	movf	(mediaLeituraPt100Umidadde@Temp+3)^(0+128),w
  2988  15B3  1283               	bcf	3,5	;RP0=0, select bank0
  2989  15B4  00CA               	movwf	___fldiv@b+3
  2990  15B5  1683               	bsf	3,5	;RP0=1, select bank1
  2991  15B6  0846               	movf	(mediaLeituraPt100Umidadde@Temp+2)^(0+128),w
  2992  15B7  1283               	bcf	3,5	;RP0=0, select bank0
  2993  15B8  00C9               	movwf	___fldiv@b+2
  2994  15B9  1683               	bsf	3,5	;RP0=1, select bank1
  2995  15BA  0845               	movf	(mediaLeituraPt100Umidadde@Temp+1)^(0+128),w
  2996  15BB  1283               	bcf	3,5	;RP0=0, select bank0
  2997  15BC  00C8               	movwf	___fldiv@b+1
  2998  15BD  1683               	bsf	3,5	;RP0=1, select bank1
  2999  15BE  0844               	movf	mediaLeituraPt100Umidadde@Temp^(0+128),w
  3000  15BF  1283               	bcf	3,5	;RP0=0, select bank0
  3001  15C0  00C7               	movwf	___fldiv@b
  3002  15C1  120A  158A  23CE  160A  118A  	fcall	___fldiv
  3003  15C6  0846               	movf	?___fldiv+3,w
  3004  15C7  1683               	bsf	3,5	;RP0=1, select bank1
  3005  15C8  00C7               	movwf	(mediaLeituraPt100Umidadde@Temp+3)^(0+128)
  3006  15C9  1283               	bcf	3,5	;RP0=0, select bank0
  3007  15CA  0845               	movf	?___fldiv+2,w
  3008  15CB  1683               	bsf	3,5	;RP0=1, select bank1
  3009  15CC  00C6               	movwf	(mediaLeituraPt100Umidadde@Temp+2)^(0+128)
  3010  15CD  1283               	bcf	3,5	;RP0=0, select bank0
  3011  15CE  0844               	movf	?___fldiv+1,w
  3012  15CF  1683               	bsf	3,5	;RP0=1, select bank1
  3013  15D0  00C5               	movwf	(mediaLeituraPt100Umidadde@Temp+1)^(0+128)
  3014  15D1  1283               	bcf	3,5	;RP0=0, select bank0
  3015  15D2  0843               	movf	?___fldiv,w
  3016  15D3  1683               	bsf	3,5	;RP0=1, select bank1
  3017  15D4  00C4               	movwf	mediaLeituraPt100Umidadde@Temp^(0+128)
  3018                           
  3019                           ;SlaveLiofilizadorVer1.c: 722:      if(canal==0)
  3020  15D5  0843               	movf	mediaLeituraPt100Umidadde@canal^(0+128),w
  3021  15D6  1D03               	btfss	3,2
  3022  15D7  2E2F               	goto	l4981
  3023                           
  3024                           ;SlaveLiofilizadorVer1.c: 723:         {;SlaveLiofilizadorVer1.c: 724:         Temperatu
      +                          ra0=((200.0 * Temp) / 1023.0) - 110.0;
  3025  15D8  30C2               	movlw	194
  3026  15D9  1283               	bcf	3,5	;RP0=0, select bank0
  3027  15DA  00E0               	movwf	___fladd@b+3
  3028  15DB  30DC               	movlw	220
  3029  15DC  00DF               	movwf	___fladd@b+2
  3030  15DD  3000               	movlw	0
  3031  15DE  00DE               	movwf	___fladd@b+1
  3032  15DF  3000               	movlw	0
  3033  15E0  00DD               	movwf	___fladd@b
  3034  15E1  3044               	movlw	68
  3035  15E2  00C6               	movwf	___fldiv@a+3
  3036  15E3  307F               	movlw	127
  3037  15E4  00C5               	movwf	___fldiv@a+2
  3038  15E5  30C0               	movlw	192
  3039  15E6  00C4               	movwf	___fldiv@a+1
  3040  15E7  3000               	movlw	0
  3041  15E8  00C3               	movwf	___fldiv@a
  3042  15E9  3043               	movlw	67
  3043  15EA  00AC               	movwf	___flmul@b+3
  3044  15EB  3048               	movlw	72
  3045  15EC  00AB               	movwf	___flmul@b+2
  3046  15ED  3000               	movlw	0
  3047  15EE  00AA               	movwf	___flmul@b+1
  3048  15EF  3000               	movlw	0
  3049  15F0  00A9               	movwf	___flmul@b
  3050  15F1  1683               	bsf	3,5	;RP0=1, select bank1
  3051  15F2  0847               	movf	(mediaLeituraPt100Umidadde@Temp+3)^(0+128),w
  3052  15F3  1283               	bcf	3,5	;RP0=0, select bank0
  3053  15F4  00B0               	movwf	___flmul@a+3
  3054  15F5  1683               	bsf	3,5	;RP0=1, select bank1
  3055  15F6  0846               	movf	(mediaLeituraPt100Umidadde@Temp+2)^(0+128),w
  3056  15F7  1283               	bcf	3,5	;RP0=0, select bank0
  3057  15F8  00AF               	movwf	___flmul@a+2
  3058  15F9  1683               	bsf	3,5	;RP0=1, select bank1
  3059  15FA  0845               	movf	(mediaLeituraPt100Umidadde@Temp+1)^(0+128),w
  3060  15FB  1283               	bcf	3,5	;RP0=0, select bank0
  3061  15FC  00AE               	movwf	___flmul@a+1
  3062  15FD  1683               	bsf	3,5	;RP0=1, select bank1
  3063  15FE  0844               	movf	mediaLeituraPt100Umidadde@Temp^(0+128),w
  3064  15FF  1283               	bcf	3,5	;RP0=0, select bank0
  3065  1600  00AD               	movwf	___flmul@a
  3066  1601  120A  118A  23C8  160A  118A  	fcall	___flmul
  3067  1606  082C               	movf	?___flmul+3,w
  3068  1607  00CA               	movwf	___fldiv@b+3
  3069  1608  082B               	movf	?___flmul+2,w
  3070  1609  00C9               	movwf	___fldiv@b+2
  3071  160A  082A               	movf	?___flmul+1,w
  3072  160B  00C8               	movwf	___fldiv@b+1
  3073  160C  0829               	movf	?___flmul,w
  3074  160D  00C7               	movwf	___fldiv@b
  3075  160E  120A  158A  23CE  160A  118A  	fcall	___fldiv
  3076  1613  0846               	movf	?___fldiv+3,w
  3077  1614  00E4               	movwf	___fladd@a+3
  3078  1615  0845               	movf	?___fldiv+2,w
  3079  1616  00E3               	movwf	___fladd@a+2
  3080  1617  0844               	movf	?___fldiv+1,w
  3081  1618  00E2               	movwf	___fladd@a+1
  3082  1619  0843               	movf	?___fldiv,w
  3083  161A  00E1               	movwf	___fladd@a
  3084  161B  120A  158A  256F   	fcall	___fladd
  3085  161E  1283               	bcf	3,5	;RP0=0, select bank0
  3086  161F  0860               	movf	?___fladd+3,w
  3087  1620  1683               	bsf	3,5	;RP0=1, select bank1
  3088  1621  00A7               	movwf	(_Temperatura0+3)^(0+128)
  3089  1622  1283               	bcf	3,5	;RP0=0, select bank0
  3090  1623  085F               	movf	?___fladd+2,w
  3091  1624  1683               	bsf	3,5	;RP0=1, select bank1
  3092  1625  00A6               	movwf	(_Temperatura0+2)^(0+128)
  3093  1626  1283               	bcf	3,5	;RP0=0, select bank0
  3094  1627  085E               	movf	?___fladd+1,w
  3095  1628  1683               	bsf	3,5	;RP0=1, select bank1
  3096  1629  00A5               	movwf	(_Temperatura0+1)^(0+128)
  3097  162A  1283               	bcf	3,5	;RP0=0, select bank0
  3098  162B  085D               	movf	?___fladd,w
  3099  162C  1683               	bsf	3,5	;RP0=1, select bank1
  3100  162D  00A4               	movwf	_Temperatura0^(0+128)
  3101                           
  3102                           ;SlaveLiofilizadorVer1.c: 725:         }
  3103  162E  0008               	return
  3104  162F                     l4981:
  3105                           
  3106                           ;SlaveLiofilizadorVer1.c: 727:         {;SlaveLiofilizadorVer1.c: 728:         Temperatu
      +                          ra1=((200.0 * Temp) / 1023.0) - 110.0;
  3107  162F  30C2               	movlw	194
  3108  1630  1283               	bcf	3,5	;RP0=0, select bank0
  3109  1631  00E0               	movwf	___fladd@b+3
  3110  1632  30DC               	movlw	220
  3111  1633  00DF               	movwf	___fladd@b+2
  3112  1634  3000               	movlw	0
  3113  1635  00DE               	movwf	___fladd@b+1
  3114  1636  3000               	movlw	0
  3115  1637  00DD               	movwf	___fladd@b
  3116  1638  3044               	movlw	68
  3117  1639  00C6               	movwf	___fldiv@a+3
  3118  163A  307F               	movlw	127
  3119  163B  00C5               	movwf	___fldiv@a+2
  3120  163C  30C0               	movlw	192
  3121  163D  00C4               	movwf	___fldiv@a+1
  3122  163E  3000               	movlw	0
  3123  163F  00C3               	movwf	___fldiv@a
  3124  1640  3043               	movlw	67
  3125  1641  00AC               	movwf	___flmul@b+3
  3126  1642  3048               	movlw	72
  3127  1643  00AB               	movwf	___flmul@b+2
  3128  1644  3000               	movlw	0
  3129  1645  00AA               	movwf	___flmul@b+1
  3130  1646  3000               	movlw	0
  3131  1647  00A9               	movwf	___flmul@b
  3132  1648  1683               	bsf	3,5	;RP0=1, select bank1
  3133  1649  0847               	movf	(mediaLeituraPt100Umidadde@Temp+3)^(0+128),w
  3134  164A  1283               	bcf	3,5	;RP0=0, select bank0
  3135  164B  00B0               	movwf	___flmul@a+3
  3136  164C  1683               	bsf	3,5	;RP0=1, select bank1
  3137  164D  0846               	movf	(mediaLeituraPt100Umidadde@Temp+2)^(0+128),w
  3138  164E  1283               	bcf	3,5	;RP0=0, select bank0
  3139  164F  00AF               	movwf	___flmul@a+2
  3140  1650  1683               	bsf	3,5	;RP0=1, select bank1
  3141  1651  0845               	movf	(mediaLeituraPt100Umidadde@Temp+1)^(0+128),w
  3142  1652  1283               	bcf	3,5	;RP0=0, select bank0
  3143  1653  00AE               	movwf	___flmul@a+1
  3144  1654  1683               	bsf	3,5	;RP0=1, select bank1
  3145  1655  0844               	movf	mediaLeituraPt100Umidadde@Temp^(0+128),w
  3146  1656  1283               	bcf	3,5	;RP0=0, select bank0
  3147  1657  00AD               	movwf	___flmul@a
  3148  1658  120A  118A  23C8  160A  118A  	fcall	___flmul
  3149  165D  082C               	movf	?___flmul+3,w
  3150  165E  00CA               	movwf	___fldiv@b+3
  3151  165F  082B               	movf	?___flmul+2,w
  3152  1660  00C9               	movwf	___fldiv@b+2
  3153  1661  082A               	movf	?___flmul+1,w
  3154  1662  00C8               	movwf	___fldiv@b+1
  3155  1663  0829               	movf	?___flmul,w
  3156  1664  00C7               	movwf	___fldiv@b
  3157  1665  120A  158A  23CE  160A  118A  	fcall	___fldiv
  3158  166A  0846               	movf	?___fldiv+3,w
  3159  166B  00E4               	movwf	___fladd@a+3
  3160  166C  0845               	movf	?___fldiv+2,w
  3161  166D  00E3               	movwf	___fladd@a+2
  3162  166E  0844               	movf	?___fldiv+1,w
  3163  166F  00E2               	movwf	___fladd@a+1
  3164  1670  0843               	movf	?___fldiv,w
  3165  1671  00E1               	movwf	___fladd@a
  3166  1672  120A  158A  256F   	fcall	___fladd
  3167  1675  1283               	bcf	3,5	;RP0=0, select bank0
  3168  1676  0860               	movf	?___fladd+3,w
  3169  1677  1683               	bsf	3,5	;RP0=1, select bank1
  3170  1678  00A3               	movwf	(_Temperatura1+3)^(0+128)
  3171  1679  1283               	bcf	3,5	;RP0=0, select bank0
  3172  167A  085F               	movf	?___fladd+2,w
  3173  167B  1683               	bsf	3,5	;RP0=1, select bank1
  3174  167C  00A2               	movwf	(_Temperatura1+2)^(0+128)
  3175  167D  1283               	bcf	3,5	;RP0=0, select bank0
  3176  167E  085E               	movf	?___fladd+1,w
  3177  167F  1683               	bsf	3,5	;RP0=1, select bank1
  3178  1680  00A1               	movwf	(_Temperatura1+1)^(0+128)
  3179  1681  1283               	bcf	3,5	;RP0=0, select bank0
  3180  1682  085D               	movf	?___fladd,w
  3181  1683  1683               	bsf	3,5	;RP0=1, select bank1
  3182  1684  00A0               	movwf	_Temperatura1^(0+128)
  3183  1685  0008               	return
  3184  1686                     __end_of_mediaLeituraPt100Umidadde:
  3185                           
  3186                           	psect	text2
  3187  0BCE                     __ptext2:	
  3188 ;; *************** function ___fldiv *****************
  3189 ;; Defined at:
  3190 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  a               4   35[BANK0 ] void 
  3193 ;;  b               4   39[BANK0 ] void 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  grs             4   55[BANK0 ] unsigned long 
  3196 ;;  rem             4   48[BANK0 ] unsigned long 
  3197 ;;  new_exp         2   53[BANK0 ] int 
  3198 ;;  aexp            1   60[BANK0 ] unsigned char 
  3199 ;;  bexp            1   59[BANK0 ] unsigned char 
  3200 ;;  sign            1   52[BANK0 ] unsigned char 
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  4   35[BANK0 ] unsigned char 
  3203 ;; Registers used:
  3204 ;;		wreg, status,2, status,0, btemp+1
  3205 ;; Tracked objects:
  3206 ;;		On entry : 300/0
  3207 ;;		On exit  : 300/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3210 ;;      Params:         0       8       0       0       0
  3211 ;;      Locals:         0      13       0       0       0
  3212 ;;      Temps:          0       5       0       0       0
  3213 ;;      Totals:         0      26       0       0       0
  3214 ;;Total ram usage:       26 bytes
  3215 ;; Hardware stack levels used: 1
  3216 ;; Hardware stack levels required when called: 1
  3217 ;; This function calls:
  3218 ;;		Nothing
  3219 ;; This function is called by:
  3220 ;;		_mediaLeituraPt100Umidadde
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           
  3225                           ;psect for function ___fldiv
  3226  0BCE                     ___fldiv:
  3227                           
  3228                           ;incstack = 0
  3229                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  3230  0BCE  084A               	movf	___fldiv@b+3,w
  3231  0BCF  3980               	andlw	128
  3232  0BD0  00CB               	movwf	??___fldiv
  3233  0BD1  084B               	movf	??___fldiv,w
  3234  0BD2  00D4               	movwf	___fldiv@sign
  3235  0BD3  084A               	movf	___fldiv@b+3,w
  3236  0BD4  00CB               	movwf	??___fldiv
  3237  0BD5  074B               	addwf	??___fldiv,w
  3238  0BD6  00CC               	movwf	??___fldiv+1
  3239  0BD7  084C               	movf	??___fldiv+1,w
  3240  0BD8  00DB               	movwf	___fldiv@bexp
  3241  0BD9  1BC9               	btfsc	___fldiv@b+2,7
  3242  0BDA  145B               	bsf	___fldiv@bexp,0
  3243  0BDB  085B               	movf	___fldiv@bexp,w
  3244  0BDC  1903               	btfsc	3,2
  3245  0BDD  2BEC               	goto	l4751
  3246  0BDE  0A5B               	incf	___fldiv@bexp,w
  3247  0BDF  1D03               	btfss	3,2
  3248  0BE0  2BE9               	goto	l4747
  3249  0BE1  3000               	movlw	0
  3250  0BE2  00CA               	movwf	___fldiv@b+3
  3251  0BE3  3000               	movlw	0
  3252  0BE4  00C9               	movwf	___fldiv@b+2
  3253  0BE5  3000               	movlw	0
  3254  0BE6  00C8               	movwf	___fldiv@b+1
  3255  0BE7  3000               	movlw	0
  3256  0BE8  00C7               	movwf	___fldiv@b
  3257  0BE9                     l4747:
  3258  0BE9  17C9               	bsf	___fldiv@b+2,7
  3259  0BEA  01CA               	clrf	___fldiv@b+3
  3260  0BEB  2BF4               	goto	l4753
  3261  0BEC                     l4751:
  3262  0BEC  3000               	movlw	0
  3263  0BED  00CA               	movwf	___fldiv@b+3
  3264  0BEE  3000               	movlw	0
  3265  0BEF  00C9               	movwf	___fldiv@b+2
  3266  0BF0  3000               	movlw	0
  3267  0BF1  00C8               	movwf	___fldiv@b+1
  3268  0BF2  3000               	movlw	0
  3269  0BF3  00C7               	movwf	___fldiv@b
  3270  0BF4                     l4753:
  3271  0BF4  0846               	movf	___fldiv@a+3,w
  3272  0BF5  3980               	andlw	128
  3273  0BF6  00CB               	movwf	??___fldiv
  3274  0BF7  084B               	movf	??___fldiv,w
  3275  0BF8  06D4               	xorwf	___fldiv@sign,f
  3276  0BF9  0846               	movf	___fldiv@a+3,w
  3277  0BFA  00CB               	movwf	??___fldiv
  3278  0BFB  074B               	addwf	??___fldiv,w
  3279  0BFC  00CC               	movwf	??___fldiv+1
  3280  0BFD  084C               	movf	??___fldiv+1,w
  3281  0BFE  00DC               	movwf	___fldiv@aexp
  3282  0BFF  1BC5               	btfsc	___fldiv@a+2,7
  3283  0C00  145C               	bsf	___fldiv@aexp,0
  3284  0C01  085C               	movf	___fldiv@aexp,w
  3285  0C02  1903               	btfsc	3,2
  3286  0C03  2C12               	goto	l4771
  3287  0C04  0A5C               	incf	___fldiv@aexp,w
  3288  0C05  1D03               	btfss	3,2
  3289  0C06  2C0F               	goto	l4767
  3290  0C07  3000               	movlw	0
  3291  0C08  00C6               	movwf	___fldiv@a+3
  3292  0C09  3000               	movlw	0
  3293  0C0A  00C5               	movwf	___fldiv@a+2
  3294  0C0B  3000               	movlw	0
  3295  0C0C  00C4               	movwf	___fldiv@a+1
  3296  0C0D  3000               	movlw	0
  3297  0C0E  00C3               	movwf	___fldiv@a
  3298  0C0F                     l4767:
  3299  0C0F  17C5               	bsf	___fldiv@a+2,7
  3300  0C10  01C6               	clrf	___fldiv@a+3
  3301  0C11  2C1A               	goto	l1334
  3302  0C12                     l4771:
  3303  0C12  3000               	movlw	0
  3304  0C13  00C6               	movwf	___fldiv@a+3
  3305  0C14  3000               	movlw	0
  3306  0C15  00C5               	movwf	___fldiv@a+2
  3307  0C16  3000               	movlw	0
  3308  0C17  00C4               	movwf	___fldiv@a+1
  3309  0C18  3000               	movlw	0
  3310  0C19  00C3               	movwf	___fldiv@a
  3311  0C1A                     l1334:
  3312  0C1A  0846               	movf	___fldiv@a+3,w
  3313  0C1B  0445               	iorwf	___fldiv@a+2,w
  3314  0C1C  0444               	iorwf	___fldiv@a+1,w
  3315  0C1D  0443               	iorwf	___fldiv@a,w
  3316  0C1E  1D03               	skipz
  3317  0C1F  2C39               	goto	l4781
  3318  0C20  3000               	movlw	0
  3319  0C21  00CA               	movwf	___fldiv@b+3
  3320  0C22  3000               	movlw	0
  3321  0C23  00C9               	movwf	___fldiv@b+2
  3322  0C24  3000               	movlw	0
  3323  0C25  00C8               	movwf	___fldiv@b+1
  3324  0C26  3000               	movlw	0
  3325  0C27  00C7               	movwf	___fldiv@b
  3326  0C28  3080               	movlw	128
  3327  0C29  04C9               	iorwf	___fldiv@b+2,f
  3328  0C2A  307F               	movlw	127
  3329  0C2B  04CA               	iorwf	___fldiv@b+3,f
  3330  0C2C                     L2:
  3331  0C2C  0854               	movf	___fldiv@sign,w
  3332  0C2D  00CB               	movwf	??___fldiv
  3333  0C2E  084B               	movf	??___fldiv,w
  3334  0C2F  04CA               	iorwf	___fldiv@b+3,f
  3335  0C30  084A               	movf	___fldiv@b+3,w
  3336  0C31  00C6               	movwf	?___fldiv+3
  3337  0C32  0849               	movf	___fldiv@b+2,w
  3338  0C33  00C5               	movwf	?___fldiv+2
  3339  0C34  0848               	movf	___fldiv@b+1,w
  3340  0C35  00C4               	movwf	?___fldiv+1
  3341  0C36  0847               	movf	___fldiv@b,w
  3342  0C37  00C3               	movwf	?___fldiv
  3343  0C38  0008               	return
  3344  0C39                     l4781:
  3345  0C39  085B               	movf	___fldiv@bexp,w
  3346  0C3A  1D03               	btfss	3,2
  3347  0C3B  2C45               	goto	l4787
  3348  0C3C  3000               	movlw	0
  3349  0C3D  00C6               	movwf	?___fldiv+3
  3350  0C3E  3000               	movlw	0
  3351  0C3F  00C5               	movwf	?___fldiv+2
  3352  0C40  3000               	movlw	0
  3353  0C41  00C4               	movwf	?___fldiv+1
  3354  0C42  3000               	movlw	0
  3355  0C43  00C3               	movwf	?___fldiv
  3356  0C44  0008               	return
  3357  0C45                     l4787:
  3358  0C45  085B               	movf	___fldiv@bexp,w
  3359  0C46  00CB               	movwf	??___fldiv
  3360  0C47  01CC               	clrf	??___fldiv+1
  3361  0C48  084C               	movf	??___fldiv+1,w
  3362  0C49  00CE               	movwf	??___fldiv+3
  3363  0C4A  085C               	movf	___fldiv@aexp,w
  3364  0C4B  024B               	subwf	??___fldiv,w
  3365  0C4C  00CD               	movwf	??___fldiv+2
  3366  0C4D  1C03               	skipc
  3367  0C4E  03CE               	decf	??___fldiv+3,f
  3368  0C4F  084D               	movf	??___fldiv+2,w
  3369  0C50  3E7F               	addlw	127
  3370  0C51  00D5               	movwf	___fldiv@new_exp
  3371  0C52  084E               	movf	??___fldiv+3,w
  3372  0C53  1803               	skipnc
  3373  0C54  3E01               	addlw	1
  3374  0C55  3E00               	addlw	0
  3375  0C56  00D6               	movwf	___fldiv@new_exp+1
  3376  0C57  084A               	movf	___fldiv@b+3,w
  3377  0C58  00D3               	movwf	___fldiv@rem+3
  3378  0C59  0849               	movf	___fldiv@b+2,w
  3379  0C5A  00D2               	movwf	___fldiv@rem+2
  3380  0C5B  0848               	movf	___fldiv@b+1,w
  3381  0C5C  00D1               	movwf	___fldiv@rem+1
  3382  0C5D  0847               	movf	___fldiv@b,w
  3383  0C5E  00D0               	movwf	___fldiv@rem
  3384  0C5F  3000               	movlw	0
  3385  0C60  00CA               	movwf	___fldiv@b+3
  3386  0C61  3000               	movlw	0
  3387  0C62  00C9               	movwf	___fldiv@b+2
  3388  0C63  3000               	movlw	0
  3389  0C64  00C8               	movwf	___fldiv@b+1
  3390  0C65  3000               	movlw	0
  3391  0C66  00C7               	movwf	___fldiv@b
  3392  0C67  3000               	movlw	0
  3393  0C68  00DA               	movwf	___fldiv@grs+3
  3394  0C69  3000               	movlw	0
  3395  0C6A  00D9               	movwf	___fldiv@grs+2
  3396  0C6B  3000               	movlw	0
  3397  0C6C  00D8               	movwf	___fldiv@grs+1
  3398  0C6D  3000               	movlw	0
  3399  0C6E  00D7               	movwf	___fldiv@grs
  3400  0C6F  01DC               	clrf	___fldiv@aexp
  3401  0C70                     l4815:
  3402  0C70  301A               	movlw	26
  3403  0C71  025C               	subwf	___fldiv@aexp,w
  3404  0C72  1803               	btfsc	3,0
  3405  0C73  2CB8               	goto	l4817
  3406  0C74  085C               	movf	___fldiv@aexp,w
  3407  0C75  1903               	btfsc	3,2
  3408  0C76  2C94               	goto	l4807
  3409  0C77  3001               	movlw	1
  3410  0C78  00CB               	movwf	??___fldiv
  3411  0C79                     u4485:
  3412  0C79  1003               	clrc
  3413  0C7A  0DD0               	rlf	___fldiv@rem,f
  3414  0C7B  0DD1               	rlf	___fldiv@rem+1,f
  3415  0C7C  0DD2               	rlf	___fldiv@rem+2,f
  3416  0C7D  0DD3               	rlf	___fldiv@rem+3,f
  3417  0C7E  0BCB               	decfsz	??___fldiv,f
  3418  0C7F  2C79               	goto	u4485
  3419  0C80  3001               	movlw	1
  3420  0C81  00CB               	movwf	??___fldiv
  3421  0C82                     u4495:
  3422  0C82  1003               	clrc
  3423  0C83  0DC7               	rlf	___fldiv@b,f
  3424  0C84  0DC8               	rlf	___fldiv@b+1,f
  3425  0C85  0DC9               	rlf	___fldiv@b+2,f
  3426  0C86  0DCA               	rlf	___fldiv@b+3,f
  3427  0C87  0BCB               	decfsz	??___fldiv,f
  3428  0C88  2C82               	goto	u4495
  3429  0C89  1BDA               	btfsc	___fldiv@grs+3,7
  3430  0C8A  1447               	bsf	___fldiv@b,0
  3431  0C8B  3001               	movlw	1
  3432  0C8C  00CB               	movwf	??___fldiv
  3433  0C8D                     u4515:
  3434  0C8D  1003               	clrc
  3435  0C8E  0DD7               	rlf	___fldiv@grs,f
  3436  0C8F  0DD8               	rlf	___fldiv@grs+1,f
  3437  0C90  0DD9               	rlf	___fldiv@grs+2,f
  3438  0C91  0DDA               	rlf	___fldiv@grs+3,f
  3439  0C92  0BCB               	decfsz	??___fldiv,f
  3440  0C93  2C8D               	goto	u4515
  3441  0C94                     l4807:
  3442  0C94  0846               	movf	___fldiv@a+3,w
  3443  0C95  0253               	subwf	___fldiv@rem+3,w
  3444  0C96  1D03               	skipz
  3445  0C97  2CA2               	goto	u4525
  3446  0C98  0845               	movf	___fldiv@a+2,w
  3447  0C99  0252               	subwf	___fldiv@rem+2,w
  3448  0C9A  1D03               	skipz
  3449  0C9B  2CA2               	goto	u4525
  3450  0C9C  0844               	movf	___fldiv@a+1,w
  3451  0C9D  0251               	subwf	___fldiv@rem+1,w
  3452  0C9E  1D03               	skipz
  3453  0C9F  2CA2               	goto	u4525
  3454  0CA0  0843               	movf	___fldiv@a,w
  3455  0CA1  0250               	subwf	___fldiv@rem,w
  3456  0CA2                     u4525:
  3457  0CA2  1C03               	skipc
  3458  0CA3  2CB3               	goto	l4813
  3459  0CA4  175A               	bsf	___fldiv@grs+3,6
  3460  0CA5  0843               	movf	___fldiv@a,w
  3461  0CA6  02D0               	subwf	___fldiv@rem,f
  3462  0CA7  0844               	movf	___fldiv@a+1,w
  3463  0CA8  1C03               	skipc
  3464  0CA9  0F44               	incfsz	___fldiv@a+1,w
  3465  0CAA  02D1               	subwf	___fldiv@rem+1,f
  3466  0CAB  0845               	movf	___fldiv@a+2,w
  3467  0CAC  1C03               	skipc
  3468  0CAD  0F45               	incfsz	___fldiv@a+2,w
  3469  0CAE  02D2               	subwf	___fldiv@rem+2,f
  3470  0CAF  0846               	movf	___fldiv@a+3,w
  3471  0CB0  1C03               	skipc
  3472  0CB1  0F46               	incfsz	___fldiv@a+3,w
  3473  0CB2  02D3               	subwf	___fldiv@rem+3,f
  3474  0CB3                     l4813:
  3475  0CB3  3001               	movlw	1
  3476  0CB4  00CB               	movwf	??___fldiv
  3477  0CB5  084B               	movf	??___fldiv,w
  3478  0CB6  07DC               	addwf	___fldiv@aexp,f
  3479  0CB7  2C70               	goto	l4815
  3480  0CB8                     l4817:
  3481  0CB8  0853               	movf	___fldiv@rem+3,w
  3482  0CB9  0452               	iorwf	___fldiv@rem+2,w
  3483  0CBA  0451               	iorwf	___fldiv@rem+1,w
  3484  0CBB  0450               	iorwf	___fldiv@rem,w
  3485  0CBC  1D03               	btfss	3,2
  3486  0CBD  1457               	bsf	___fldiv@grs,0
  3487  0CBE                     l4831:
  3488  0CBE  1BC9               	btfsc	___fldiv@b+2,7
  3489  0CBF  2CDB               	goto	l4833
  3490  0CC0  3001               	movlw	1
  3491  0CC1  00CB               	movwf	??___fldiv
  3492  0CC2                     u4555:
  3493  0CC2  1003               	clrc
  3494  0CC3  0DC7               	rlf	___fldiv@b,f
  3495  0CC4  0DC8               	rlf	___fldiv@b+1,f
  3496  0CC5  0DC9               	rlf	___fldiv@b+2,f
  3497  0CC6  0DCA               	rlf	___fldiv@b+3,f
  3498  0CC7  0BCB               	decfsz	??___fldiv,f
  3499  0CC8  2CC2               	goto	u4555
  3500  0CC9  1BDA               	btfsc	___fldiv@grs+3,7
  3501  0CCA  1447               	bsf	___fldiv@b,0
  3502  0CCB  3001               	movlw	1
  3503  0CCC  00CB               	movwf	??___fldiv
  3504  0CCD                     u4575:
  3505  0CCD  1003               	clrc
  3506  0CCE  0DD7               	rlf	___fldiv@grs,f
  3507  0CCF  0DD8               	rlf	___fldiv@grs+1,f
  3508  0CD0  0DD9               	rlf	___fldiv@grs+2,f
  3509  0CD1  0DDA               	rlf	___fldiv@grs+3,f
  3510  0CD2  0BCB               	decfsz	??___fldiv,f
  3511  0CD3  2CCD               	goto	u4575
  3512  0CD4  30FF               	movlw	255
  3513  0CD5  07D5               	addwf	___fldiv@new_exp,f
  3514  0CD6  1803               	skipnc
  3515  0CD7  0AD6               	incf	___fldiv@new_exp+1,f
  3516  0CD8  30FF               	movlw	255
  3517  0CD9  07D6               	addwf	___fldiv@new_exp+1,f
  3518  0CDA  2CBE               	goto	l4831
  3519  0CDB                     l4833:
  3520  0CDB  01DC               	clrf	___fldiv@aexp
  3521  0CDC  1FDA               	btfss	___fldiv@grs+3,7
  3522  0CDD  2CF4               	goto	l4843
  3523  0CDE  30FF               	movlw	255
  3524  0CDF  0557               	andwf	___fldiv@grs,w
  3525  0CE0  00CB               	movwf	??___fldiv
  3526  0CE1  30FF               	movlw	255
  3527  0CE2  0558               	andwf	___fldiv@grs+1,w
  3528  0CE3  00CC               	movwf	??___fldiv+1
  3529  0CE4  30FF               	movlw	255
  3530  0CE5  0559               	andwf	___fldiv@grs+2,w
  3531  0CE6  00CD               	movwf	??___fldiv+2
  3532  0CE7  307F               	movlw	127
  3533  0CE8  055A               	andwf	___fldiv@grs+3,w
  3534  0CE9  00CE               	movwf	??___fldiv+3
  3535  0CEA  084E               	movf	??___fldiv+3,w
  3536  0CEB  044D               	iorwf	??___fldiv+2,w
  3537  0CEC  044C               	iorwf	??___fldiv+1,w
  3538  0CED  044B               	iorwf	??___fldiv,w
  3539  0CEE  1903               	skipnz
  3540  0CEF  1847               	btfsc	___fldiv@b,0
  3541  0CF0  2CF2               	goto	l4839
  3542  0CF1  2CF4               	goto	l4843
  3543  0CF2                     l4839:
  3544  0CF2  01DC               	clrf	___fldiv@aexp
  3545  0CF3  0ADC               	incf	___fldiv@aexp,f
  3546  0CF4                     l4843:
  3547  0CF4  085C               	movf	___fldiv@aexp,w
  3548  0CF5  1903               	btfsc	3,2
  3549  0CF6  2D26               	goto	l4853
  3550  0CF7  3001               	movlw	1
  3551  0CF8  07C7               	addwf	___fldiv@b,f
  3552  0CF9  3000               	movlw	0
  3553  0CFA  1803               	skipnc
  3554  0CFB  3001               	movlw	1
  3555  0CFC  07C8               	addwf	___fldiv@b+1,f
  3556  0CFD  3000               	movlw	0
  3557  0CFE  1803               	skipnc
  3558  0CFF  3001               	movlw	1
  3559  0D00  07C9               	addwf	___fldiv@b+2,f
  3560  0D01  3000               	movlw	0
  3561  0D02  1803               	skipnc
  3562  0D03  3001               	movlw	1
  3563  0D04  07CA               	addwf	___fldiv@b+3,f
  3564  0D05  1C4A               	btfss	___fldiv@b+3,0
  3565  0D06  2D26               	goto	l4853
  3566  0D07  0847               	movf	___fldiv@b,w
  3567  0D08  00CB               	movwf	??___fldiv
  3568  0D09  0848               	movf	___fldiv@b+1,w
  3569  0D0A  00CC               	movwf	??___fldiv+1
  3570  0D0B  0849               	movf	___fldiv@b+2,w
  3571  0D0C  00CD               	movwf	??___fldiv+2
  3572  0D0D  084A               	movf	___fldiv@b+3,w
  3573  0D0E  00CE               	movwf	??___fldiv+3
  3574  0D0F  3001               	movlw	1
  3575  0D10  00CF               	movwf	??___fldiv+4
  3576  0D11                     u4645:
  3577  0D11  0D4E               	rlf	??___fldiv+3,w
  3578  0D12  0CCE               	rrf	??___fldiv+3,f
  3579  0D13  0CCD               	rrf	??___fldiv+2,f
  3580  0D14  0CCC               	rrf	??___fldiv+1,f
  3581  0D15  0CCB               	rrf	??___fldiv,f
  3582  0D16  0BCF               	decfsz	??___fldiv+4,f
  3583  0D17  2D11               	goto	u4645
  3584  0D18  084E               	movf	??___fldiv+3,w
  3585  0D19  00CA               	movwf	___fldiv@b+3
  3586  0D1A  084D               	movf	??___fldiv+2,w
  3587  0D1B  00C9               	movwf	___fldiv@b+2
  3588  0D1C  084C               	movf	??___fldiv+1,w
  3589  0D1D  00C8               	movwf	___fldiv@b+1
  3590  0D1E  084B               	movf	??___fldiv,w
  3591  0D1F  00C7               	movwf	___fldiv@b
  3592  0D20  3001               	movlw	1
  3593  0D21  07D5               	addwf	___fldiv@new_exp,f
  3594  0D22  1803               	skipnc
  3595  0D23  0AD6               	incf	___fldiv@new_exp+1,f
  3596  0D24  3000               	movlw	0
  3597  0D25  07D6               	addwf	___fldiv@new_exp+1,f
  3598  0D26                     l4853:
  3599  0D26  0856               	movf	___fldiv@new_exp+1,w
  3600  0D27  3A80               	xorlw	128
  3601  0D28  00FF               	movwf	127
  3602  0D29  3080               	movlw	128
  3603  0D2A  027F               	subwf	127,w
  3604  0D2B  1D03               	skipz
  3605  0D2C  2D2F               	goto	u4655
  3606  0D2D  30FF               	movlw	255
  3607  0D2E  0255               	subwf	___fldiv@new_exp,w
  3608  0D2F                     u4655:
  3609  0D2F  1C03               	skipc
  3610  0D30  2D3F               	goto	l4857
  3611  0D31  30FF               	movlw	255
  3612  0D32  1283               	bcf	3,5	;RP0=0, select bank0
  3613  0D33  1303               	bcf	3,6	;RP1=0, select bank0
  3614  0D34  00D5               	movwf	___fldiv@new_exp
  3615  0D35  3000               	movlw	0
  3616  0D36  00D6               	movwf	___fldiv@new_exp+1
  3617  0D37  3000               	movlw	0
  3618  0D38  00CA               	movwf	___fldiv@b+3
  3619  0D39  3000               	movlw	0
  3620  0D3A  00C9               	movwf	___fldiv@b+2
  3621  0D3B  3000               	movlw	0
  3622  0D3C  00C8               	movwf	___fldiv@b+1
  3623  0D3D  3000               	movlw	0
  3624  0D3E  00C7               	movwf	___fldiv@b
  3625  0D3F                     l4857:
  3626  0D3F  1283               	bcf	3,5	;RP0=0, select bank0
  3627  0D40  1303               	bcf	3,6	;RP1=0, select bank0
  3628  0D41  0856               	movf	___fldiv@new_exp+1,w
  3629  0D42  3A80               	xorlw	128
  3630  0D43  00FF               	movwf	127
  3631  0D44  3080               	movlw	128
  3632  0D45  027F               	subwf	127,w
  3633  0D46  1D03               	skipz
  3634  0D47  2D4A               	goto	u4665
  3635  0D48  3001               	movlw	1
  3636  0D49  0255               	subwf	___fldiv@new_exp,w
  3637  0D4A                     u4665:
  3638  0D4A  1803               	skipnc
  3639  0D4B  2D59               	goto	l1356
  3640  0D4C  1283               	bcf	3,5	;RP0=0, select bank0
  3641  0D4D  1303               	bcf	3,6	;RP1=0, select bank0
  3642  0D4E  01D5               	clrf	___fldiv@new_exp
  3643  0D4F  01D6               	clrf	___fldiv@new_exp+1
  3644  0D50  3000               	movlw	0
  3645  0D51  00CA               	movwf	___fldiv@b+3
  3646  0D52  3000               	movlw	0
  3647  0D53  00C9               	movwf	___fldiv@b+2
  3648  0D54  3000               	movlw	0
  3649  0D55  00C8               	movwf	___fldiv@b+1
  3650  0D56  3000               	movlw	0
  3651  0D57  00C7               	movwf	___fldiv@b
  3652  0D58  01D4               	clrf	___fldiv@sign
  3653  0D59                     l1356:
  3654  0D59  1283               	bcf	3,5	;RP0=0, select bank0
  3655  0D5A  1303               	bcf	3,6	;RP1=0, select bank0
  3656  0D5B  0855               	movf	___fldiv@new_exp,w
  3657  0D5C  00CB               	movwf	??___fldiv
  3658  0D5D  084B               	movf	??___fldiv,w
  3659  0D5E  00DB               	movwf	___fldiv@bexp
  3660  0D5F  1C5B               	btfss	___fldiv@bexp,0
  3661  0D60  2D63               	goto	l4869
  3662  0D61  17C9               	bsf	___fldiv@b+2,7
  3663  0D62  2D67               	goto	l1358
  3664  0D63                     l4869:
  3665  0D63  307F               	movlw	127
  3666  0D64  00CB               	movwf	??___fldiv
  3667  0D65  084B               	movf	??___fldiv,w
  3668  0D66  05C9               	andwf	___fldiv@b+2,f
  3669  0D67                     l1358:
  3670  0D67  085B               	movf	___fldiv@bexp,w
  3671  0D68  00CB               	movwf	??___fldiv
  3672  0D69  1003               	clrc
  3673  0D6A  0C4B               	rrf	??___fldiv,w
  3674  0D6B  00CC               	movwf	??___fldiv+1
  3675  0D6C  084C               	movf	??___fldiv+1,w
  3676  0D6D  00CA               	movwf	___fldiv@b+3
  3677  0D6E  2C2C               	goto	L2
  3678  0D6F                     __end_of___fldiv:
  3679                           
  3680                           	psect	text3
  3681  0D6F                     __ptext3:	
  3682 ;; *************** function ___fladd *****************
  3683 ;; Defined at:
  3684 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;  b               4   61[BANK0 ] unsigned char 
  3687 ;;  a               4   65[BANK0 ] unsigned char 
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;  grs             1    3[BANK1 ] unsigned char 
  3690 ;;  bexp            1    2[BANK1 ] unsigned char 
  3691 ;;  aexp            1    1[BANK1 ] unsigned char 
  3692 ;;  signs           1    0[BANK1 ] unsigned char 
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  4   61[BANK0 ] unsigned char 
  3695 ;; Registers used:
  3696 ;;		wreg, status,2, status,0, btemp+1
  3697 ;; Tracked objects:
  3698 ;;		On entry : 300/0
  3699 ;;		On exit  : 200/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3702 ;;      Params:         0       8       0       0       0
  3703 ;;      Locals:         0       0       4       0       0
  3704 ;;      Temps:          0       8       0       0       0
  3705 ;;      Totals:         0      16       4       0       0
  3706 ;;Total ram usage:       20 bytes
  3707 ;; Hardware stack levels used: 1
  3708 ;; Hardware stack levels required when called: 1
  3709 ;; This function calls:
  3710 ;;		Nothing
  3711 ;; This function is called by:
  3712 ;;		_mediaLeituraPt100Umidadde
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           
  3717                           ;psect for function ___fladd
  3718  0D6F                     ___fladd:
  3719                           
  3720                           ;incstack = 0
  3721                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3722  0D6F  0860               	movf	___fladd@b+3,w
  3723  0D70  3980               	andlw	128
  3724  0D71  00E5               	movwf	??___fladd
  3725  0D72  0865               	movf	??___fladd,w
  3726  0D73  1683               	bsf	3,5	;RP0=1, select bank1
  3727  0D74  00BB               	movwf	___fladd@signs^(0+128)
  3728  0D75  1283               	bcf	3,5	;RP0=0, select bank0
  3729  0D76  0860               	movf	___fladd@b+3,w
  3730  0D77  00E5               	movwf	??___fladd
  3731  0D78  0765               	addwf	??___fladd,w
  3732  0D79  00E6               	movwf	??___fladd+1
  3733  0D7A  0866               	movf	??___fladd+1,w
  3734  0D7B  1683               	bsf	3,5	;RP0=1, select bank1
  3735  0D7C  00BD               	movwf	___fladd@bexp^(0+128)
  3736  0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  3737  0D7E  1FDF               	btfss	___fladd@b+2,7
  3738  0D7F  2D82               	goto	l4547
  3739  0D80  1683               	bsf	3,5	;RP0=1, select bank1
  3740  0D81  143D               	bsf	___fladd@bexp^(0+128),0
  3741  0D82                     l4547:
  3742  0D82  1683               	bsf	3,5	;RP0=1, select bank1
  3743  0D83  083D               	movf	___fladd@bexp^(0+128),w
  3744  0D84  1903               	btfsc	3,2
  3745  0D85  2D96               	goto	l4557
  3746  0D86  0A3D               	incf	___fladd@bexp^(0+128),w
  3747  0D87  1D03               	btfss	3,2
  3748  0D88  2D92               	goto	l4553
  3749  0D89  3000               	movlw	0
  3750  0D8A  1283               	bcf	3,5	;RP0=0, select bank0
  3751  0D8B  00E0               	movwf	___fladd@b+3
  3752  0D8C  3000               	movlw	0
  3753  0D8D  00DF               	movwf	___fladd@b+2
  3754  0D8E  3000               	movlw	0
  3755  0D8F  00DE               	movwf	___fladd@b+1
  3756  0D90  3000               	movlw	0
  3757  0D91  00DD               	movwf	___fladd@b
  3758  0D92                     l4553:
  3759  0D92  1283               	bcf	3,5	;RP0=0, select bank0
  3760  0D93  17DF               	bsf	___fladd@b+2,7
  3761  0D94  01E0               	clrf	___fladd@b+3
  3762  0D95  2D9F               	goto	l4559
  3763  0D96                     l4557:
  3764  0D96  3000               	movlw	0
  3765  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  3766  0D98  00E0               	movwf	___fladd@b+3
  3767  0D99  3000               	movlw	0
  3768  0D9A  00DF               	movwf	___fladd@b+2
  3769  0D9B  3000               	movlw	0
  3770  0D9C  00DE               	movwf	___fladd@b+1
  3771  0D9D  3000               	movlw	0
  3772  0D9E  00DD               	movwf	___fladd@b
  3773  0D9F                     l4559:
  3774  0D9F  0864               	movf	___fladd@a+3,w
  3775  0DA0  3980               	andlw	128
  3776  0DA1  00E5               	movwf	??___fladd
  3777  0DA2  0865               	movf	??___fladd,w
  3778  0DA3  1683               	bsf	3,5	;RP0=1, select bank1
  3779  0DA4  00BC               	movwf	___fladd@aexp^(0+128)
  3780  0DA5  083C               	movf	___fladd@aexp^(0+128),w
  3781  0DA6  063B               	xorwf	___fladd@signs^(0+128),w
  3782  0DA7  1D03               	btfss	3,2
  3783  0DA8  173B               	bsf	___fladd@signs^(0+128),6
  3784  0DA9  1283               	bcf	3,5	;RP0=0, select bank0
  3785  0DAA  0864               	movf	___fladd@a+3,w
  3786  0DAB  00E5               	movwf	??___fladd
  3787  0DAC  0765               	addwf	??___fladd,w
  3788  0DAD  00E6               	movwf	??___fladd+1
  3789  0DAE  0866               	movf	??___fladd+1,w
  3790  0DAF  1683               	bsf	3,5	;RP0=1, select bank1
  3791  0DB0  00BC               	movwf	___fladd@aexp^(0+128)
  3792  0DB1  1283               	bcf	3,5	;RP0=0, select bank0
  3793  0DB2  1FE3               	btfss	___fladd@a+2,7
  3794  0DB3  2DB6               	goto	l4571
  3795  0DB4  1683               	bsf	3,5	;RP0=1, select bank1
  3796  0DB5  143C               	bsf	___fladd@aexp^(0+128),0
  3797  0DB6                     l4571:
  3798  0DB6  1683               	bsf	3,5	;RP0=1, select bank1
  3799  0DB7  083C               	movf	___fladd@aexp^(0+128),w
  3800  0DB8  1903               	btfsc	3,2
  3801  0DB9  2DCA               	goto	l4581
  3802  0DBA  0A3C               	incf	___fladd@aexp^(0+128),w
  3803  0DBB  1D03               	btfss	3,2
  3804  0DBC  2DC6               	goto	l4577
  3805  0DBD  3000               	movlw	0
  3806  0DBE  1283               	bcf	3,5	;RP0=0, select bank0
  3807  0DBF  00E4               	movwf	___fladd@a+3
  3808  0DC0  3000               	movlw	0
  3809  0DC1  00E3               	movwf	___fladd@a+2
  3810  0DC2  3000               	movlw	0
  3811  0DC3  00E2               	movwf	___fladd@a+1
  3812  0DC4  3000               	movlw	0
  3813  0DC5  00E1               	movwf	___fladd@a
  3814  0DC6                     l4577:
  3815  0DC6  1283               	bcf	3,5	;RP0=0, select bank0
  3816  0DC7  17E3               	bsf	___fladd@a+2,7
  3817  0DC8  01E4               	clrf	___fladd@a+3
  3818  0DC9  2DD3               	goto	l1278
  3819  0DCA                     l4581:
  3820  0DCA  3000               	movlw	0
  3821  0DCB  1283               	bcf	3,5	;RP0=0, select bank0
  3822  0DCC  00E4               	movwf	___fladd@a+3
  3823  0DCD  3000               	movlw	0
  3824  0DCE  00E3               	movwf	___fladd@a+2
  3825  0DCF  3000               	movlw	0
  3826  0DD0  00E2               	movwf	___fladd@a+1
  3827  0DD1  3000               	movlw	0
  3828  0DD2  00E1               	movwf	___fladd@a
  3829  0DD3                     l1278:
  3830  0DD3  1683               	bsf	3,5	;RP0=1, select bank1
  3831  0DD4  083D               	movf	___fladd@bexp^(0+128),w
  3832  0DD5  023C               	subwf	___fladd@aexp^(0+128),w
  3833  0DD6  1803               	skipnc
  3834  0DD7  2E33               	goto	l4617
  3835  0DD8  1F3B               	btfss	___fladd@signs^(0+128),6
  3836  0DD9  2DE0               	goto	l4587
  3837  0DDA  3080               	movlw	128
  3838  0DDB  1283               	bcf	3,5	;RP0=0, select bank0
  3839  0DDC  00E5               	movwf	??___fladd
  3840  0DDD  0865               	movf	??___fladd,w
  3841  0DDE  1683               	bsf	3,5	;RP0=1, select bank1
  3842  0DDF  06BB               	xorwf	___fladd@signs^(0+128),f
  3843  0DE0                     l4587:
  3844  0DE0  083D               	movf	___fladd@bexp^(0+128),w
  3845  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  3846  0DE2  00E5               	movwf	??___fladd
  3847  0DE3  0865               	movf	??___fladd,w
  3848  0DE4  1683               	bsf	3,5	;RP0=1, select bank1
  3849  0DE5  00BE               	movwf	___fladd@grs^(0+128)
  3850  0DE6  083C               	movf	___fladd@aexp^(0+128),w
  3851  0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  3852  0DE8  00E5               	movwf	??___fladd
  3853  0DE9  0865               	movf	??___fladd,w
  3854  0DEA  1683               	bsf	3,5	;RP0=1, select bank1
  3855  0DEB  00BD               	movwf	___fladd@bexp^(0+128)
  3856  0DEC  083E               	movf	___fladd@grs^(0+128),w
  3857  0DED  1283               	bcf	3,5	;RP0=0, select bank0
  3858  0DEE  00E5               	movwf	??___fladd
  3859  0DEF  0865               	movf	??___fladd,w
  3860  0DF0  1683               	bsf	3,5	;RP0=1, select bank1
  3861  0DF1  00BC               	movwf	___fladd@aexp^(0+128)
  3862  0DF2  1283               	bcf	3,5	;RP0=0, select bank0
  3863  0DF3  085D               	movf	___fladd@b,w
  3864  0DF4  00E5               	movwf	??___fladd
  3865  0DF5  0865               	movf	??___fladd,w
  3866  0DF6  1683               	bsf	3,5	;RP0=1, select bank1
  3867  0DF7  00BE               	movwf	___fladd@grs^(0+128)
  3868  0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  3869  0DF9  0861               	movf	___fladd@a,w
  3870  0DFA  00E5               	movwf	??___fladd
  3871  0DFB  0865               	movf	??___fladd,w
  3872  0DFC  00DD               	movwf	___fladd@b
  3873  0DFD  1683               	bsf	3,5	;RP0=1, select bank1
  3874  0DFE  083E               	movf	___fladd@grs^(0+128),w
  3875  0DFF  1283               	bcf	3,5	;RP0=0, select bank0
  3876  0E00  00E5               	movwf	??___fladd
  3877  0E01  0865               	movf	??___fladd,w
  3878  0E02  00E1               	movwf	___fladd@a
  3879  0E03  085E               	movf	___fladd@b+1,w
  3880  0E04  00E5               	movwf	??___fladd
  3881  0E05  0865               	movf	??___fladd,w
  3882  0E06  1683               	bsf	3,5	;RP0=1, select bank1
  3883  0E07  00BE               	movwf	___fladd@grs^(0+128)
  3884  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  3885  0E09  0862               	movf	___fladd@a+1,w
  3886  0E0A  00E5               	movwf	??___fladd
  3887  0E0B  0865               	movf	??___fladd,w
  3888  0E0C  00DE               	movwf	___fladd@b+1
  3889  0E0D  1683               	bsf	3,5	;RP0=1, select bank1
  3890  0E0E  083E               	movf	___fladd@grs^(0+128),w
  3891  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  3892  0E10  00E5               	movwf	??___fladd
  3893  0E11  0865               	movf	??___fladd,w
  3894  0E12  00E2               	movwf	___fladd@a+1
  3895  0E13  085F               	movf	___fladd@b+2,w
  3896  0E14  00E5               	movwf	??___fladd
  3897  0E15  0865               	movf	??___fladd,w
  3898  0E16  1683               	bsf	3,5	;RP0=1, select bank1
  3899  0E17  00BE               	movwf	___fladd@grs^(0+128)
  3900  0E18  1283               	bcf	3,5	;RP0=0, select bank0
  3901  0E19  0863               	movf	___fladd@a+2,w
  3902  0E1A  00E5               	movwf	??___fladd
  3903  0E1B  0865               	movf	??___fladd,w
  3904  0E1C  00DF               	movwf	___fladd@b+2
  3905  0E1D  1683               	bsf	3,5	;RP0=1, select bank1
  3906  0E1E  083E               	movf	___fladd@grs^(0+128),w
  3907  0E1F  1283               	bcf	3,5	;RP0=0, select bank0
  3908  0E20  00E5               	movwf	??___fladd
  3909  0E21  0865               	movf	??___fladd,w
  3910  0E22  00E3               	movwf	___fladd@a+2
  3911  0E23  0860               	movf	___fladd@b+3,w
  3912  0E24  00E5               	movwf	??___fladd
  3913  0E25  0865               	movf	??___fladd,w
  3914  0E26  1683               	bsf	3,5	;RP0=1, select bank1
  3915  0E27  00BE               	movwf	___fladd@grs^(0+128)
  3916  0E28  1283               	bcf	3,5	;RP0=0, select bank0
  3917  0E29  0864               	movf	___fladd@a+3,w
  3918  0E2A  00E5               	movwf	??___fladd
  3919  0E2B  0865               	movf	??___fladd,w
  3920  0E2C  00E0               	movwf	___fladd@b+3
  3921  0E2D  1683               	bsf	3,5	;RP0=1, select bank1
  3922  0E2E  083E               	movf	___fladd@grs^(0+128),w
  3923  0E2F  1283               	bcf	3,5	;RP0=0, select bank0
  3924  0E30  00E5               	movwf	??___fladd
  3925  0E31  0865               	movf	??___fladd,w
  3926  0E32  00E4               	movwf	___fladd@a+3
  3927  0E33                     l4617:
  3928  0E33  1683               	bsf	3,5	;RP0=1, select bank1
  3929  0E34  01BE               	clrf	___fladd@grs^(0+128)
  3930  0E35  083C               	movf	___fladd@aexp^(0+128),w
  3931  0E36  1283               	bcf	3,5	;RP0=0, select bank0
  3932  0E37  00E5               	movwf	??___fladd
  3933  0E38  01E6               	clrf	??___fladd+1
  3934  0E39  0866               	movf	??___fladd+1,w
  3935  0E3A  00E8               	movwf	??___fladd+3
  3936  0E3B  1683               	bsf	3,5	;RP0=1, select bank1
  3937  0E3C  083D               	movf	___fladd@bexp^(0+128),w
  3938  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  3939  0E3E  0265               	subwf	??___fladd,w
  3940  0E3F  00E7               	movwf	??___fladd+2
  3941  0E40  1C03               	skipc
  3942  0E41  03E8               	decf	??___fladd+3,f
  3943  0E42  0868               	movf	??___fladd+3,w
  3944  0E43  3A80               	xorlw	128
  3945  0E44  00FF               	movwf	127
  3946  0E45  3080               	movlw	128
  3947  0E46  027F               	subwf	127,w
  3948  0E47  1D03               	skipz
  3949  0E48  2E4B               	goto	u4025
  3950  0E49  301A               	movlw	26
  3951  0E4A  0267               	subwf	??___fladd+2,w
  3952  0E4B                     u4025:
  3953  0E4B  1C03               	skipc
  3954  0E4C  2E90               	goto	l4635
  3955  0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  3956  0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  3957  0E4F  0860               	movf	___fladd@b+3,w
  3958  0E50  045F               	iorwf	___fladd@b+2,w
  3959  0E51  045E               	iorwf	___fladd@b+1,w
  3960  0E52  045D               	iorwf	___fladd@b,w
  3961  0E53  1903               	btfsc	3,2
  3962  0E54  2E57               	goto	u4030
  3963  0E55  3001               	movlw	1
  3964  0E56  2E58               	goto	u4040
  3965  0E57                     u4030:
  3966  0E57  3000               	movlw	0
  3967  0E58                     u4040:
  3968  0E58  00E5               	movwf	??___fladd
  3969  0E59  0865               	movf	??___fladd,w
  3970  0E5A  1683               	bsf	3,5	;RP0=1, select bank1
  3971  0E5B  00BE               	movwf	___fladd@grs^(0+128)
  3972  0E5C  3000               	movlw	0
  3973  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  3974  0E5E  00E0               	movwf	___fladd@b+3
  3975  0E5F  3000               	movlw	0
  3976  0E60  00DF               	movwf	___fladd@b+2
  3977  0E61  3000               	movlw	0
  3978  0E62  00DE               	movwf	___fladd@b+1
  3979  0E63  3000               	movlw	0
  3980  0E64  00DD               	movwf	___fladd@b
  3981  0E65  1683               	bsf	3,5	;RP0=1, select bank1
  3982  0E66  083C               	movf	___fladd@aexp^(0+128),w
  3983  0E67  1283               	bcf	3,5	;RP0=0, select bank0
  3984  0E68  00E5               	movwf	??___fladd
  3985  0E69  0865               	movf	??___fladd,w
  3986  0E6A  1683               	bsf	3,5	;RP0=1, select bank1
  3987  0E6B  00BD               	movwf	___fladd@bexp^(0+128)
  3988  0E6C  2E96               	goto	l1282
  3989  0E6D                     l1284:
  3990  0E6D  1C3E               	btfss	___fladd@grs^(0+128),0
  3991  0E6E  2E7A               	goto	l4625
  3992  0E6F  083E               	movf	___fladd@grs^(0+128),w
  3993  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  3994  0E71  00E5               	movwf	??___fladd
  3995  0E72  1003               	clrc
  3996  0E73  0C65               	rrf	??___fladd,w
  3997  0E74  3801               	iorlw	1
  3998  0E75  00E6               	movwf	??___fladd+1
  3999  0E76  0866               	movf	??___fladd+1,w
  4000  0E77  1683               	bsf	3,5	;RP0=1, select bank1
  4001  0E78  00BE               	movwf	___fladd@grs^(0+128)
  4002  0E79  2E7C               	goto	l4627
  4003  0E7A                     l4625:
  4004  0E7A  1003               	clrc
  4005  0E7B  0CBE               	rrf	___fladd@grs^(0+128),f
  4006  0E7C                     l4627:
  4007  0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  4008  0E7D  1C5D               	btfss	___fladd@b,0
  4009  0E7E  2E81               	goto	l4631
  4010  0E7F  1683               	bsf	3,5	;RP0=1, select bank1
  4011  0E80  17BE               	bsf	___fladd@grs^(0+128),7
  4012  0E81                     l4631:
  4013  0E81  3001               	movlw	1
  4014  0E82  1283               	bcf	3,5	;RP0=0, select bank0
  4015  0E83  00E5               	movwf	??___fladd
  4016  0E84                     u4075:
  4017  0E84  0D60               	rlf	___fladd@b+3,w
  4018  0E85  0CE0               	rrf	___fladd@b+3,f
  4019  0E86  0CDF               	rrf	___fladd@b+2,f
  4020  0E87  0CDE               	rrf	___fladd@b+1,f
  4021  0E88  0CDD               	rrf	___fladd@b,f
  4022  0E89  0BE5               	decfsz	??___fladd& (0+127),f
  4023  0E8A  2E84               	goto	u4075
  4024  0E8B  3001               	movlw	1
  4025  0E8C  00E5               	movwf	??___fladd
  4026  0E8D  0865               	movf	??___fladd,w
  4027  0E8E  1683               	bsf	3,5	;RP0=1, select bank1
  4028  0E8F  07BD               	addwf	___fladd@bexp^(0+128),f
  4029  0E90                     l4635:
  4030  0E90  1683               	bsf	3,5	;RP0=1, select bank1
  4031  0E91  1303               	bcf	3,6	;RP1=0, select bank1
  4032  0E92  083C               	movf	___fladd@aexp^(0+128),w
  4033  0E93  023D               	subwf	___fladd@bexp^(0+128),w
  4034  0E94  1C03               	skipc
  4035  0E95  2E6D               	goto	l1284
  4036  0E96                     l1282:
  4037  0E96  1B3B               	btfsc	___fladd@signs^(0+128),6
  4038  0E97  2EE1               	goto	l4661
  4039  0E98  083D               	movf	___fladd@bexp^(0+128),w
  4040  0E99  1D03               	btfss	3,2
  4041  0E9A  2EA5               	goto	l4643
  4042  0E9B  3000               	movlw	0
  4043  0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  4044  0E9D  00E0               	movwf	?___fladd+3
  4045  0E9E  3000               	movlw	0
  4046  0E9F  00DF               	movwf	?___fladd+2
  4047  0EA0  3000               	movlw	0
  4048  0EA1  00DE               	movwf	?___fladd+1
  4049  0EA2  3000               	movlw	0
  4050  0EA3  00DD               	movwf	?___fladd
  4051  0EA4  0008               	return
  4052  0EA5                     l4643:
  4053  0EA5  1283               	bcf	3,5	;RP0=0, select bank0
  4054  0EA6  0861               	movf	___fladd@a,w
  4055  0EA7  07DD               	addwf	___fladd@b,f
  4056  0EA8  0862               	movf	___fladd@a+1,w
  4057  0EA9  1103               	clrz
  4058  0EAA  1803               	skipnc
  4059  0EAB  3E01               	addlw	1
  4060  0EAC  1D03               	btfss	3,2
  4061  0EAD  07DE               	addwf	___fladd@b+1,f
  4062  0EAE  0863               	movf	___fladd@a+2,w
  4063  0EAF  1103               	clrz
  4064  0EB0  1803               	skipnc
  4065  0EB1  3E01               	addlw	1
  4066  0EB2  1D03               	btfss	3,2
  4067  0EB3  07DF               	addwf	___fladd@b+2,f
  4068  0EB4  0864               	movf	___fladd@a+3,w
  4069  0EB5  1103               	clrz
  4070  0EB6  1803               	skipnc
  4071  0EB7  3E01               	addlw	1
  4072  0EB8  1D03               	btfss	3,2
  4073  0EB9  07E0               	addwf	___fladd@b+3,f
  4074  0EBA  1C60               	btfss	___fladd@b+3,0
  4075  0EBB  2F8E               	goto	l4695
  4076  0EBC  1683               	bsf	3,5	;RP0=1, select bank1
  4077  0EBD  1C3E               	btfss	___fladd@grs^(0+128),0
  4078  0EBE  2ECA               	goto	l4651
  4079  0EBF  083E               	movf	___fladd@grs^(0+128),w
  4080  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  4081  0EC1  00E5               	movwf	??___fladd
  4082  0EC2  1003               	clrc
  4083  0EC3  0C65               	rrf	??___fladd,w
  4084  0EC4  3801               	iorlw	1
  4085  0EC5  00E6               	movwf	??___fladd+1
  4086  0EC6  0866               	movf	??___fladd+1,w
  4087  0EC7  1683               	bsf	3,5	;RP0=1, select bank1
  4088  0EC8  00BE               	movwf	___fladd@grs^(0+128)
  4089  0EC9  2ECC               	goto	l4653
  4090  0ECA                     l4651:
  4091  0ECA  1003               	clrc
  4092  0ECB  0CBE               	rrf	___fladd@grs^(0+128),f
  4093  0ECC                     l4653:
  4094  0ECC  1283               	bcf	3,5	;RP0=0, select bank0
  4095  0ECD  1C5D               	btfss	___fladd@b,0
  4096  0ECE  2ED1               	goto	l4657
  4097  0ECF  1683               	bsf	3,5	;RP0=1, select bank1
  4098  0ED0  17BE               	bsf	___fladd@grs^(0+128),7
  4099  0ED1                     l4657:
  4100  0ED1  3001               	movlw	1
  4101  0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  4102  0ED3  00E5               	movwf	??___fladd
  4103  0ED4                     u4155:
  4104  0ED4  0D60               	rlf	___fladd@b+3,w
  4105  0ED5  0CE0               	rrf	___fladd@b+3,f
  4106  0ED6  0CDF               	rrf	___fladd@b+2,f
  4107  0ED7  0CDE               	rrf	___fladd@b+1,f
  4108  0ED8  0CDD               	rrf	___fladd@b,f
  4109  0ED9  0BE5               	decfsz	??___fladd& (0+127),f
  4110  0EDA  2ED4               	goto	u4155
  4111  0EDB  3001               	movlw	1
  4112  0EDC  00E5               	movwf	??___fladd
  4113  0EDD  0865               	movf	??___fladd,w
  4114  0EDE  1683               	bsf	3,5	;RP0=1, select bank1
  4115  0EDF  07BD               	addwf	___fladd@bexp^(0+128),f
  4116  0EE0  2F8E               	goto	l4695
  4117  0EE1                     l4661:
  4118  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  4119  0EE2  0860               	movf	___fladd@b+3,w
  4120  0EE3  3A80               	xorlw	128
  4121  0EE4  00FF               	movwf	127
  4122  0EE5  0864               	movf	___fladd@a+3,w
  4123  0EE6  3A80               	xorlw	128
  4124  0EE7  027F               	subwf	127,w
  4125  0EE8  1D03               	skipz
  4126  0EE9  2EF4               	goto	u4163
  4127  0EEA  0863               	movf	___fladd@a+2,w
  4128  0EEB  025F               	subwf	___fladd@b+2,w
  4129  0EEC  1D03               	skipz
  4130  0EED  2EF4               	goto	u4163
  4131  0EEE  0862               	movf	___fladd@a+1,w
  4132  0EEF  025E               	subwf	___fladd@b+1,w
  4133  0EF0  1D03               	skipz
  4134  0EF1  2EF4               	goto	u4163
  4135  0EF2  0861               	movf	___fladd@a,w
  4136  0EF3  025D               	subwf	___fladd@b,w
  4137  0EF4                     u4163:
  4138  0EF4  1803               	skipnc
  4139  0EF5  2F4E               	goto	l4671
  4140  0EF6  30FF               	movlw	255
  4141  0EF7  00E5               	movwf	??___fladd
  4142  0EF8  30FF               	movlw	255
  4143  0EF9  00E6               	movwf	??___fladd+1
  4144  0EFA  30FF               	movlw	255
  4145  0EFB  00E7               	movwf	??___fladd+2
  4146  0EFC  30FF               	movlw	255
  4147  0EFD  00E8               	movwf	??___fladd+3
  4148  0EFE  0861               	movf	___fladd@a,w
  4149  0EFF  00E9               	movwf	??___fladd+4
  4150  0F00  0862               	movf	___fladd@a+1,w
  4151  0F01  00EA               	movwf	??___fladd+5
  4152  0F02  0863               	movf	___fladd@a+2,w
  4153  0F03  00EB               	movwf	??___fladd+6
  4154  0F04  0864               	movf	___fladd@a+3,w
  4155  0F05  00EC               	movwf	??___fladd+7
  4156  0F06  085D               	movf	___fladd@b,w
  4157  0F07  02E9               	subwf	??___fladd+4,f
  4158  0F08  085E               	movf	___fladd@b+1,w
  4159  0F09  1C03               	skipc
  4160  0F0A  0F5E               	incfsz	___fladd@b+1,w
  4161  0F0B  2F0D               	goto	u4171
  4162  0F0C  2F0E               	goto	u4172
  4163  0F0D                     u4171:
  4164  0F0D  02EA               	subwf	??___fladd+5,f
  4165  0F0E                     u4172:
  4166  0F0E  085F               	movf	___fladd@b+2,w
  4167  0F0F  1C03               	skipc
  4168  0F10  0F5F               	incfsz	___fladd@b+2,w
  4169  0F11  2F13               	goto	u4173
  4170  0F12  2F14               	goto	u4174
  4171  0F13                     u4173:
  4172  0F13  02EB               	subwf	??___fladd+6,f
  4173  0F14                     u4174:
  4174  0F14  0860               	movf	___fladd@b+3,w
  4175  0F15  1C03               	skipc
  4176  0F16  0F60               	incfsz	___fladd@b+3,w
  4177  0F17  2F19               	goto	u4175
  4178  0F18  2F1A               	goto	u4176
  4179  0F19                     u4175:
  4180  0F19  02EC               	subwf	??___fladd+7,f
  4181  0F1A                     u4176:
  4182  0F1A  0869               	movf	??___fladd+4,w
  4183  0F1B  07E5               	addwf	??___fladd,f
  4184  0F1C  086A               	movf	??___fladd+5,w
  4185  0F1D  1803               	skipnc
  4186  0F1E  0F6A               	incfsz	??___fladd+5,w
  4187  0F1F  2F21               	goto	u4180
  4188  0F20  2F22               	goto	u4181
  4189  0F21                     u4180:
  4190  0F21  07E6               	addwf	??___fladd+1,f
  4191  0F22                     u4181:
  4192  0F22  086B               	movf	??___fladd+6,w
  4193  0F23  1803               	skipnc
  4194  0F24  0F6B               	incfsz	??___fladd+6,w
  4195  0F25  2F27               	goto	u4182
  4196  0F26  2F28               	goto	u4183
  4197  0F27                     u4182:
  4198  0F27  07E7               	addwf	??___fladd+2,f
  4199  0F28                     u4183:
  4200  0F28  086C               	movf	??___fladd+7,w
  4201  0F29  1803               	skipnc
  4202  0F2A  0A6C               	incf	??___fladd+7,w
  4203  0F2B  07E8               	addwf	??___fladd+3,f
  4204  0F2C  0868               	movf	??___fladd+3,w
  4205  0F2D  00E0               	movwf	___fladd@b+3
  4206  0F2E  0867               	movf	??___fladd+2,w
  4207  0F2F  00DF               	movwf	___fladd@b+2
  4208  0F30  0866               	movf	??___fladd+1,w
  4209  0F31  00DE               	movwf	___fladd@b+1
  4210  0F32  0865               	movf	??___fladd,w
  4211  0F33  00DD               	movwf	___fladd@b
  4212  0F34  3080               	movlw	128
  4213  0F35  00E5               	movwf	??___fladd
  4214  0F36  0865               	movf	??___fladd,w
  4215  0F37  1683               	bsf	3,5	;RP0=1, select bank1
  4216  0F38  06BB               	xorwf	___fladd@signs^(0+128),f
  4217  0F39  09BE               	comf	___fladd@grs^(0+128),f
  4218  0F3A  0ABE               	incf	___fladd@grs^(0+128),f
  4219  0F3B  083E               	movf	___fladd@grs^(0+128),w
  4220  0F3C  1D03               	btfss	3,2
  4221  0F3D  2F5C               	goto	l1299
  4222  0F3E  3001               	movlw	1
  4223  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  4224  0F40  07DD               	addwf	___fladd@b,f
  4225  0F41  3000               	movlw	0
  4226  0F42  1803               	skipnc
  4227  0F43  3001               	movlw	1
  4228  0F44  07DE               	addwf	___fladd@b+1,f
  4229  0F45  3000               	movlw	0
  4230  0F46  1803               	skipnc
  4231  0F47  3001               	movlw	1
  4232  0F48  07DF               	addwf	___fladd@b+2,f
  4233  0F49  3000               	movlw	0
  4234  0F4A  1803               	skipnc
  4235  0F4B  3001               	movlw	1
  4236  0F4C  07E0               	addwf	___fladd@b+3,f
  4237  0F4D  2F5C               	goto	l1299
  4238  0F4E                     l4671:
  4239  0F4E  0861               	movf	___fladd@a,w
  4240  0F4F  02DD               	subwf	___fladd@b,f
  4241  0F50  0862               	movf	___fladd@a+1,w
  4242  0F51  1C03               	skipc
  4243  0F52  0F62               	incfsz	___fladd@a+1,w
  4244  0F53  02DE               	subwf	___fladd@b+1,f
  4245  0F54  0863               	movf	___fladd@a+2,w
  4246  0F55  1C03               	skipc
  4247  0F56  0F63               	incfsz	___fladd@a+2,w
  4248  0F57  02DF               	subwf	___fladd@b+2,f
  4249  0F58  0864               	movf	___fladd@a+3,w
  4250  0F59  1C03               	skipc
  4251  0F5A  0F64               	incfsz	___fladd@a+3,w
  4252  0F5B  02E0               	subwf	___fladd@b+3,f
  4253  0F5C                     l1299:
  4254  0F5C  1283               	bcf	3,5	;RP0=0, select bank0
  4255  0F5D  0860               	movf	___fladd@b+3,w
  4256  0F5E  045F               	iorwf	___fladd@b+2,w
  4257  0F5F  045E               	iorwf	___fladd@b+1,w
  4258  0F60  045D               	iorwf	___fladd@b,w
  4259  0F61  1D03               	skipz
  4260  0F62  2F8B               	goto	l4693
  4261  0F63  1683               	bsf	3,5	;RP0=1, select bank1
  4262  0F64  083E               	movf	___fladd@grs^(0+128),w
  4263  0F65  1D03               	btfss	3,2
  4264  0F66  2F8B               	goto	l4693
  4265  0F67  3000               	movlw	0
  4266  0F68  1283               	bcf	3,5	;RP0=0, select bank0
  4267  0F69  00E0               	movwf	?___fladd+3
  4268  0F6A  3000               	movlw	0
  4269  0F6B  00DF               	movwf	?___fladd+2
  4270  0F6C  3000               	movlw	0
  4271  0F6D  00DE               	movwf	?___fladd+1
  4272  0F6E  3000               	movlw	0
  4273  0F6F  00DD               	movwf	?___fladd
  4274  0F70  0008               	return
  4275  0F71                     l4679:
  4276  0F71  3001               	movlw	1
  4277  0F72  00E5               	movwf	??___fladd
  4278  0F73                     u4225:
  4279  0F73  1003               	clrc
  4280  0F74  0DDD               	rlf	___fladd@b,f
  4281  0F75  0DDE               	rlf	___fladd@b+1,f
  4282  0F76  0DDF               	rlf	___fladd@b+2,f
  4283  0F77  0DE0               	rlf	___fladd@b+3,f
  4284  0F78  0BE5               	decfsz	??___fladd,f
  4285  0F79  2F73               	goto	u4225
  4286  0F7A  1683               	bsf	3,5	;RP0=1, select bank1
  4287  0F7B  1FBE               	btfss	___fladd@grs^(0+128),7
  4288  0F7C  2F7F               	goto	l1303
  4289  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  4290  0F7E  145D               	bsf	___fladd@b,0
  4291  0F7F                     l1303:
  4292  0F7F  1683               	bsf	3,5	;RP0=1, select bank1
  4293  0F80  1C3E               	btfss	___fladd@grs^(0+128),0
  4294  0F81  2F84               	goto	l4687
  4295  0F82  1403               	setc
  4296  0F83  2F85               	goto	L3
  4297  0F84                     l4687:
  4298  0F84  1003               	clrc
  4299  0F85                     L3:
  4300  0F85  0DBE               	rlf	___fladd@grs^(0+128),f
  4301  0F86  083D               	movf	___fladd@bexp^(0+128),w
  4302  0F87  1903               	btfsc	3,2
  4303  0F88  2F8B               	goto	l4693
  4304  0F89  3001               	movlw	1
  4305  0F8A  02BD               	subwf	___fladd@bexp^(0+128),f
  4306  0F8B                     l4693:
  4307  0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  4308  0F8C  1FDF               	btfss	___fladd@b+2,7
  4309  0F8D  2F71               	goto	l4679
  4310  0F8E                     l4695:
  4311  0F8E  1683               	bsf	3,5	;RP0=1, select bank1
  4312  0F8F  01BC               	clrf	___fladd@aexp^(0+128)
  4313  0F90  1FBE               	btfss	___fladd@grs^(0+128),7
  4314  0F91  2F9C               	goto	l4705
  4315  0F92  083E               	movf	___fladd@grs^(0+128),w
  4316  0F93  397F               	andlw	127
  4317  0F94  1D03               	btfss	3,2
  4318  0F95  2F99               	goto	l4701
  4319  0F96  1283               	bcf	3,5	;RP0=0, select bank0
  4320  0F97  1C5D               	btfss	___fladd@b,0
  4321  0F98  2F9C               	goto	l4705
  4322  0F99                     l4701:
  4323  0F99  1683               	bsf	3,5	;RP0=1, select bank1
  4324  0F9A  01BC               	clrf	___fladd@aexp^(0+128)
  4325  0F9B  0ABC               	incf	___fladd@aexp^(0+128),f
  4326  0F9C                     l4705:
  4327  0F9C  1683               	bsf	3,5	;RP0=1, select bank1
  4328  0F9D  083C               	movf	___fladd@aexp^(0+128),w
  4329  0F9E  1903               	btfsc	3,2
  4330  0F9F  2FD4               	goto	l1312
  4331  0FA0  3001               	movlw	1
  4332  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  4333  0FA2  07DD               	addwf	___fladd@b,f
  4334  0FA3  3000               	movlw	0
  4335  0FA4  1803               	skipnc
  4336  0FA5  3001               	movlw	1
  4337  0FA6  07DE               	addwf	___fladd@b+1,f
  4338  0FA7  3000               	movlw	0
  4339  0FA8  1803               	skipnc
  4340  0FA9  3001               	movlw	1
  4341  0FAA  07DF               	addwf	___fladd@b+2,f
  4342  0FAB  3000               	movlw	0
  4343  0FAC  1803               	skipnc
  4344  0FAD  3001               	movlw	1
  4345  0FAE  07E0               	addwf	___fladd@b+3,f
  4346  0FAF  1C60               	btfss	___fladd@b+3,0
  4347  0FB0  2FD4               	goto	l1312
  4348  0FB1  085D               	movf	___fladd@b,w
  4349  0FB2  00E5               	movwf	??___fladd
  4350  0FB3  085E               	movf	___fladd@b+1,w
  4351  0FB4  00E6               	movwf	??___fladd+1
  4352  0FB5  085F               	movf	___fladd@b+2,w
  4353  0FB6  00E7               	movwf	??___fladd+2
  4354  0FB7  0860               	movf	___fladd@b+3,w
  4355  0FB8  00E8               	movwf	??___fladd+3
  4356  0FB9  3001               	movlw	1
  4357  0FBA  00E9               	movwf	??___fladd+4
  4358  0FBB                     u4325:
  4359  0FBB  0D68               	rlf	??___fladd+3,w
  4360  0FBC  0CE8               	rrf	??___fladd+3,f
  4361  0FBD  0CE7               	rrf	??___fladd+2,f
  4362  0FBE  0CE6               	rrf	??___fladd+1,f
  4363  0FBF  0CE5               	rrf	??___fladd,f
  4364  0FC0  0BE9               	decfsz	??___fladd+4,f
  4365  0FC1  2FBB               	goto	u4325
  4366  0FC2  0868               	movf	??___fladd+3,w
  4367  0FC3  00E0               	movwf	___fladd@b+3
  4368  0FC4  0867               	movf	??___fladd+2,w
  4369  0FC5  00DF               	movwf	___fladd@b+2
  4370  0FC6  0866               	movf	??___fladd+1,w
  4371  0FC7  00DE               	movwf	___fladd@b+1
  4372  0FC8  0865               	movf	??___fladd,w
  4373  0FC9  00DD               	movwf	___fladd@b
  4374  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  4375  0FCB  0A3D               	incf	___fladd@bexp^(0+128),w
  4376  0FCC  1903               	btfsc	3,2
  4377  0FCD  2FD4               	goto	l1312
  4378  0FCE  3001               	movlw	1
  4379  0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  4380  0FD0  00E5               	movwf	??___fladd
  4381  0FD1  0865               	movf	??___fladd,w
  4382  0FD2  1683               	bsf	3,5	;RP0=1, select bank1
  4383  0FD3  07BD               	addwf	___fladd@bexp^(0+128),f
  4384  0FD4                     l1312:
  4385  0FD4  1683               	bsf	3,5	;RP0=1, select bank1
  4386  0FD5  0A3D               	incf	___fladd@bexp^(0+128),w
  4387  0FD6  1D03               	btfss	3,2
  4388  0FD7  083D               	movf	___fladd@bexp^(0+128),w
  4389  0FD8  1D03               	btfss	3,2
  4390  0FD9  2FE7               	goto	l4723
  4391  0FDA  3000               	movlw	0
  4392  0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  4393  0FDC  00E0               	movwf	___fladd@b+3
  4394  0FDD  3000               	movlw	0
  4395  0FDE  00DF               	movwf	___fladd@b+2
  4396  0FDF  3000               	movlw	0
  4397  0FE0  00DE               	movwf	___fladd@b+1
  4398  0FE1  3000               	movlw	0
  4399  0FE2  00DD               	movwf	___fladd@b
  4400  0FE3  1683               	bsf	3,5	;RP0=1, select bank1
  4401  0FE4  083D               	movf	___fladd@bexp^(0+128),w
  4402  0FE5  1903               	btfsc	3,2
  4403  0FE6  01BB               	clrf	___fladd@signs^(0+128)
  4404  0FE7                     l4723:
  4405  0FE7  1C3D               	btfss	___fladd@bexp^(0+128),0
  4406  0FE8  2FEC               	goto	l4727
  4407  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  4408  0FEA  17DF               	bsf	___fladd@b+2,7
  4409  0FEB  2FF1               	goto	l1320
  4410  0FEC                     l4727:
  4411  0FEC  307F               	movlw	127
  4412  0FED  1283               	bcf	3,5	;RP0=0, select bank0
  4413  0FEE  00E5               	movwf	??___fladd
  4414  0FEF  0865               	movf	??___fladd,w
  4415  0FF0  05DF               	andwf	___fladd@b+2,f
  4416  0FF1                     l1320:
  4417  0FF1  1683               	bsf	3,5	;RP0=1, select bank1
  4418  0FF2  083D               	movf	___fladd@bexp^(0+128),w
  4419  0FF3  1283               	bcf	3,5	;RP0=0, select bank0
  4420  0FF4  00E5               	movwf	??___fladd
  4421  0FF5  1003               	clrc
  4422  0FF6  0C65               	rrf	??___fladd,w
  4423  0FF7  00E6               	movwf	??___fladd+1
  4424  0FF8  0866               	movf	??___fladd+1,w
  4425  0FF9  00E0               	movwf	___fladd@b+3
  4426  0FFA  1683               	bsf	3,5	;RP0=1, select bank1
  4427  0FFB  1FBB               	btfss	___fladd@signs^(0+128),7
  4428  0FFC  0008               	return
  4429  0FFD  1283               	bcf	3,5	;RP0=0, select bank0
  4430  0FFE  17E0               	bsf	___fladd@b+3,7
  4431  0FFF  0008               	return
  4432  1000                     __end_of___fladd:
  4433                           
  4434                           	psect	text4
  4435  1B3F                     __ptext4:	
  4436 ;; *************** function _Package_Usart_is_for_me *****************
  4437 ;; Defined at:
  4438 ;;		line 8 in file "protocolo.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;		None
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;  retorno         1    0[BANK0 ] unsigned char 
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  1    wreg      unsigned char 
  4445 ;; Registers used:
  4446 ;;		wreg, status,2, status,0
  4447 ;; Tracked objects:
  4448 ;;		On entry : 300/100
  4449 ;;		On exit  : 300/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4452 ;;      Params:         0       0       0       0       0
  4453 ;;      Locals:         0       1       0       0       0
  4454 ;;      Temps:          0       0       0       0       0
  4455 ;;      Totals:         0       1       0       0       0
  4456 ;;Total ram usage:        1 bytes
  4457 ;; Hardware stack levels used: 1
  4458 ;; Hardware stack levels required when called: 1
  4459 ;; This function calls:
  4460 ;;		Nothing
  4461 ;; This function is called by:
  4462 ;;		_mediaLeituraPt100Umidadde
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           
  4467                           ;psect for function _Package_Usart_is_for_me
  4468  1B3F                     _Package_Usart_is_for_me:
  4469                           
  4470                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  4471                           
  4472                           ;incstack = 0
  4473                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  4474  1B3F  1283               	bcf	3,5	;RP0=0, select bank0
  4475  1B40  1C6F               	btfss	_generic_status,0
  4476  1B41  2B53               	goto	l4507
  4477                           
  4478                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  4479  1B42  1703               	bsf	3,6	;RP1=1, select bank2
  4480  1B43  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  4481  1B44  1683               	bsf	3,5	;RP0=1, select bank1
  4482  1B45  1303               	bcf	3,6	;RP1=0, select bank1
  4483  1B46  0638               	xorwf	_Board_Number^(0+128),w
  4484  1B47  1903               	skipnz
  4485  1B48  2B4E               	goto	l805
  4486  1B49  1283               	bcf	3,5	;RP0=0, select bank2
  4487  1B4A  1703               	bsf	3,6	;RP1=1, select bank2
  4488  1B4B  0A13               	incf	(_usart_buffer^(0+256)+3),w	;volatile
  4489  1B4C  1D03               	btfss	3,2
  4490  1B4D  2B53               	goto	l4507
  4491  1B4E                     l805:
  4492                           
  4493                           ;protocolo.c: 13:             retorno=1;
  4494  1B4E  1283               	bcf	3,5	;RP0=0, select bank0
  4495  1B4F  1303               	bcf	3,6	;RP1=0, select bank0
  4496  1B50  01A0               	clrf	Package_Usart_is_for_me@retorno
  4497  1B51  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  4498  1B52  2B55               	goto	l4511
  4499  1B53                     l4507:
  4500                           
  4501                           ;protocolo.c: 15:             retorno=0;
  4502  1B53  1303               	bcf	3,6	;RP1=0, select bank0
  4503  1B54  01A0               	clrf	Package_Usart_is_for_me@retorno
  4504  1B55                     l4511:
  4505                           
  4506                           ;protocolo.c: 21:      return retorno;
  4507  1B55  0820               	movf	Package_Usart_is_for_me@retorno,w
  4508  1B56  0008               	return
  4509  1B57                     __end_of_Package_Usart_is_for_me:
  4510                           
  4511                           	psect	text5
  4512  1FAA                     __ptext5:	
  4513 ;; *************** function _ADC_Media_10bits *****************
  4514 ;; Defined at:
  4515 ;;		line 20 in file "adc.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  canal           1    wreg     unsigned char 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;  canal           1   19[BANK0 ] unsigned char 
  4520 ;;  value           2   20[BANK0 ] unsigned int 
  4521 ;;  i               1   22[BANK0 ] unsigned char 
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  4   14[BANK0 ] float 
  4524 ;; Registers used:
  4525 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4526 ;; Tracked objects:
  4527 ;;		On entry : 300/100
  4528 ;;		On exit  : 300/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4531 ;;      Params:         0       4       0       0       0
  4532 ;;      Locals:         0       4       0       0       0
  4533 ;;      Temps:          0       1       0       0       0
  4534 ;;      Totals:         0       9       0       0       0
  4535 ;;Total ram usage:        9 bytes
  4536 ;; Hardware stack levels used: 1
  4537 ;; Hardware stack levels required when called: 2
  4538 ;; This function calls:
  4539 ;;		___lwdiv
  4540 ;;		___xxtofl
  4541 ;;		_captura
  4542 ;;		_my_delay_ms
  4543 ;; This function is called by:
  4544 ;;		_mediaLeituraPt100Umidadde
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           
  4549                           ;psect for function _ADC_Media_10bits
  4550  1FAA                     _ADC_Media_10bits:
  4551                           
  4552                           ;incstack = 0
  4553                           ; Regs used in _ADC_Media_10bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4554                           ;ADC_Media_10bits@canal stored from wreg
  4555  1FAA  1283               	bcf	3,5	;RP0=0, select bank0
  4556  1FAB  00B3               	movwf	ADC_Media_10bits@canal
  4557                           
  4558                           ;adc.c: 21:       unsigned int value;;adc.c: 22:       unsigned char i;;adc.c: 23:      
      +                           ADCON0bits.CHS=canal;
  4559  1FAC  0833               	movf	ADC_Media_10bits@canal,w
  4560  1FAD  00B2               	movwf	??_ADC_Media_10bits
  4561  1FAE  0DB2               	rlf	??_ADC_Media_10bits,f
  4562  1FAF  0DB2               	rlf	??_ADC_Media_10bits,f
  4563  1FB0  081F               	movf	31,w	;volatile
  4564  1FB1  0632               	xorwf	??_ADC_Media_10bits,w
  4565  1FB2  39C3               	andlw	-61
  4566  1FB3  0632               	xorwf	??_ADC_Media_10bits,w
  4567  1FB4  009F               	movwf	31	;volatile
  4568                           
  4569                           ;adc.c: 24:       my_delay_ms(1);
  4570  1FB5  3000               	movlw	0
  4571  1FB6  00A3               	movwf	my_delay_ms@time+3
  4572  1FB7  3000               	movlw	0
  4573  1FB8  00A2               	movwf	my_delay_ms@time+2
  4574  1FB9  3000               	movlw	0
  4575  1FBA  00A1               	movwf	my_delay_ms@time+1
  4576  1FBB  3001               	movlw	1
  4577  1FBC  00A0               	movwf	my_delay_ms@time
  4578  1FBD  160A  158A  25B3  160A  158A  	fcall	_my_delay_ms
  4579                           
  4580                           ;adc.c: 26:       value=0;
  4581  1FC2  01B4               	clrf	ADC_Media_10bits@value
  4582  1FC3  01B5               	clrf	ADC_Media_10bits@value+1
  4583                           
  4584                           ;adc.c: 27:       for(i=1;i<=50;i++)
  4585  1FC4  01B6               	clrf	ADC_Media_10bits@i
  4586  1FC5  0AB6               	incf	ADC_Media_10bits@i,f
  4587  1FC6                     l4489:
  4588                           
  4589                           ;adc.c: 28:           value+=captura();
  4590  1FC6  160A  158A  229B  160A  158A  	fcall	_captura
  4591  1FCB  0820               	movf	?_captura,w
  4592  1FCC  07B4               	addwf	ADC_Media_10bits@value,f
  4593  1FCD  1803               	skipnc
  4594  1FCE  0AB5               	incf	ADC_Media_10bits@value+1,f
  4595  1FCF  0821               	movf	?_captura+1,w
  4596  1FD0  07B5               	addwf	ADC_Media_10bits@value+1,f
  4597  1FD1  3001               	movlw	1
  4598  1FD2  00B2               	movwf	??_ADC_Media_10bits
  4599  1FD3  0832               	movf	??_ADC_Media_10bits,w
  4600  1FD4  07B6               	addwf	ADC_Media_10bits@i,f
  4601  1FD5  3033               	movlw	51
  4602  1FD6  0236               	subwf	ADC_Media_10bits@i,w
  4603  1FD7  1C03               	skipc
  4604  1FD8  2FC6               	goto	l4489
  4605                           
  4606                           ;adc.c: 29:       value/=(i-1);
  4607  1FD9  0836               	movf	ADC_Media_10bits@i,w
  4608  1FDA  3EFF               	addlw	255
  4609  1FDB  00A0               	movwf	___lwdiv@divisor
  4610  1FDC  30FF               	movlw	255
  4611  1FDD  1803               	skipnc
  4612  1FDE  3000               	movlw	0
  4613  1FDF  00A1               	movwf	___lwdiv@divisor+1
  4614  1FE0  0835               	movf	ADC_Media_10bits@value+1,w
  4615  1FE1  00A3               	movwf	___lwdiv@dividend+1
  4616  1FE2  0834               	movf	ADC_Media_10bits@value,w
  4617  1FE3  00A2               	movwf	___lwdiv@dividend
  4618  1FE4  160A  158A  2696  160A  158A  	fcall	___lwdiv
  4619  1FE9  0821               	movf	?___lwdiv+1,w
  4620  1FEA  00B5               	movwf	ADC_Media_10bits@value+1
  4621  1FEB  0820               	movf	?___lwdiv,w
  4622  1FEC  00B4               	movwf	ADC_Media_10bits@value
  4623                           
  4624                           ;adc.c: 30:       return value;
  4625  1FED  0834               	movf	ADC_Media_10bits@value,w
  4626  1FEE  00A0               	movwf	___xxtofl@val
  4627  1FEF  0835               	movf	ADC_Media_10bits@value+1,w
  4628  1FF0  00A1               	movwf	___xxtofl@val+1
  4629  1FF1  01A2               	clrf	___xxtofl@val+2
  4630  1FF2  01A3               	clrf	___xxtofl@val+3
  4631  1FF3  3000               	movlw	0
  4632  1FF4  120A  158A  202F   	fcall	___xxtofl
  4633  1FF7  0823               	movf	?___xxtofl+3,w
  4634  1FF8  00B1               	movwf	?_ADC_Media_10bits+3
  4635  1FF9  0822               	movf	?___xxtofl+2,w
  4636  1FFA  00B0               	movwf	?_ADC_Media_10bits+2
  4637  1FFB  0821               	movf	?___xxtofl+1,w
  4638  1FFC  00AF               	movwf	?_ADC_Media_10bits+1
  4639  1FFD  0820               	movf	?___xxtofl,w
  4640  1FFE  00AE               	movwf	?_ADC_Media_10bits
  4641  1FFF  0008               	return
  4642  2000                     __end_of_ADC_Media_10bits:
  4643                           
  4644                           	psect	text6
  4645  1DB3                     __ptext6:	
  4646 ;; *************** function _my_delay_ms *****************
  4647 ;; Defined at:
  4648 ;;		line 5 in file "my_delay.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;  time            4    0[BANK0 ] long 
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;  i               4    6[BANK0 ] long 
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  1    wreg      void 
  4655 ;; Registers used:
  4656 ;;		wreg, btemp+1
  4657 ;; Tracked objects:
  4658 ;;		On entry : 300/0
  4659 ;;		On exit  : 300/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4662 ;;      Params:         0       4       0       0       0
  4663 ;;      Locals:         0       4       0       0       0
  4664 ;;      Temps:          0       2       0       0       0
  4665 ;;      Totals:         0      10       0       0       0
  4666 ;;Total ram usage:       10 bytes
  4667 ;; Hardware stack levels used: 1
  4668 ;; Hardware stack levels required when called: 1
  4669 ;; This function calls:
  4670 ;;		Nothing
  4671 ;; This function is called by:
  4672 ;;		_mediaLeituraPt100Umidadde
  4673 ;;		_ADC_Media_10bits
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           
  4678                           ;psect for function _my_delay_ms
  4679  1DB3                     _my_delay_ms:
  4680                           
  4681                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  4682                           
  4683                           ;incstack = 0
  4684                           ; Regs used in _my_delay_ms: [wreg+btemp+1]
  4685  1DB3  3000               	movlw	0
  4686  1DB4  00A9               	movwf	my_delay_ms@i+3
  4687  1DB5  3000               	movlw	0
  4688  1DB6  00A8               	movwf	my_delay_ms@i+2
  4689  1DB7  3000               	movlw	0
  4690  1DB8  00A7               	movwf	my_delay_ms@i+1
  4691  1DB9  3000               	movlw	0
  4692  1DBA  00A6               	movwf	my_delay_ms@i
  4693  1DBB                     l3793:
  4694  1DBB  0829               	movf	my_delay_ms@i+3,w
  4695  1DBC  3A80               	xorlw	128
  4696  1DBD  00FF               	movwf	127
  4697  1DBE  0823               	movf	my_delay_ms@time+3,w
  4698  1DBF  3A80               	xorlw	128
  4699  1DC0  027F               	subwf	127,w
  4700  1DC1  1D03               	skipz
  4701  1DC2  2DCD               	goto	u2853
  4702  1DC3  0822               	movf	my_delay_ms@time+2,w
  4703  1DC4  0228               	subwf	my_delay_ms@i+2,w
  4704  1DC5  1D03               	skipz
  4705  1DC6  2DCD               	goto	u2853
  4706  1DC7  0821               	movf	my_delay_ms@time+1,w
  4707  1DC8  0227               	subwf	my_delay_ms@i+1,w
  4708  1DC9  1D03               	skipz
  4709  1DCA  2DCD               	goto	u2853
  4710  1DCB  0820               	movf	my_delay_ms@time,w
  4711  1DCC  0226               	subwf	my_delay_ms@i,w
  4712  1DCD                     u2853:
  4713  1DCD  1803               	btfsc	3,0
  4714  1DCE  0008               	return
  4715                           
  4716                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  4717  1DCF  3003               	movlw	3
  4718  1DD0  1283               	bcf	3,5	;RP0=0, select bank0
  4719  1DD1  1303               	bcf	3,6	;RP1=0, select bank0
  4720  1DD2  00A5               	movwf	??_my_delay_ms+1
  4721  1DD3  3097               	movlw	151
  4722  1DD4  00A4               	movwf	??_my_delay_ms
  4723  1DD5                     u5247:
  4724  1DD5  0BA4               	decfsz	??_my_delay_ms,f
  4725  1DD6  2DD5               	goto	u5247
  4726  1DD7  0BA5               	decfsz	??_my_delay_ms+1,f
  4727  1DD8  2DD5               	goto	u5247
  4728                           
  4729                           ;my_delay.c: 10:             }
  4730  1DD9  3001               	movlw	1
  4731  1DDA  1283               	bcf	3,5	;RP0=0, select bank0
  4732  1DDB  1303               	bcf	3,6	;RP1=0, select bank0
  4733  1DDC  07A6               	addwf	my_delay_ms@i,f
  4734  1DDD  3000               	movlw	0
  4735  1DDE  1803               	skipnc
  4736  1DDF  3001               	movlw	1
  4737  1DE0  07A7               	addwf	my_delay_ms@i+1,f
  4738  1DE1  3000               	movlw	0
  4739  1DE2  1803               	skipnc
  4740  1DE3  3001               	movlw	1
  4741  1DE4  07A8               	addwf	my_delay_ms@i+2,f
  4742  1DE5  3000               	movlw	0
  4743  1DE6  1803               	skipnc
  4744  1DE7  3001               	movlw	1
  4745  1DE8  07A9               	addwf	my_delay_ms@i+3,f
  4746  1DE9  2DBB               	goto	l3793
  4747  1DEA                     __end_of_my_delay_ms:
  4748                           
  4749                           	psect	text7
  4750  1A9B                     __ptext7:	
  4751 ;; *************** function _captura *****************
  4752 ;; Defined at:
  4753 ;;		line 140 in file "adc.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;		None
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;		None
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  2    0[BANK0 ] unsigned int 
  4760 ;; Registers used:
  4761 ;;		wreg
  4762 ;; Tracked objects:
  4763 ;;		On entry : 300/0
  4764 ;;		On exit  : 300/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4767 ;;      Params:         0       2       0       0       0
  4768 ;;      Locals:         0       0       0       0       0
  4769 ;;      Temps:          0       0       0       0       0
  4770 ;;      Totals:         0       2       0       0       0
  4771 ;;Total ram usage:        2 bytes
  4772 ;; Hardware stack levels used: 1
  4773 ;; Hardware stack levels required when called: 1
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		_ADC_Media_10bits
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           
  4782                           ;psect for function _captura
  4783  1A9B                     _captura:
  4784                           
  4785                           ;adc.c: 141:     ADCON0bits.GO=1;
  4786                           
  4787                           ;incstack = 0
  4788                           ; Regs used in _captura: [wreg]
  4789  1A9B  149F               	bsf	31,1	;volatile
  4790  1A9C                     l483:	
  4791                           ;adc.c: 145:           }
  4792                           
  4793                           
  4794                           ;adc.c: 142:     while(ADCON0bits.GO)
  4795  1A9C  189F               	btfsc	31,1	;volatile
  4796  1A9D  2A9C               	goto	l483
  4797                           
  4798                           ;adc.c: 146:     return ((ADRESH<<8)+ADRESL);
  4799  1A9E  081E               	movf	30,w	;volatile
  4800  1A9F  00A1               	movwf	?_captura+1
  4801  1AA0  1683               	bsf	3,5	;RP0=1, select bank1
  4802  1AA1  081E               	movf	30,w	;volatile
  4803  1AA2  1283               	bcf	3,5	;RP0=0, select bank0
  4804  1AA3  00A0               	movwf	?_captura
  4805  1AA4  0008               	return
  4806  1AA5                     __end_of_captura:
  4807                           
  4808                           	psect	text8
  4809  082F                     __ptext8:	
  4810 ;; *************** function ___xxtofl *****************
  4811 ;; Defined at:
  4812 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;  sign            1    wreg     unsigned char 
  4815 ;;  val             4    0[BANK0 ] long 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  sign            1    8[BANK0 ] unsigned char 
  4818 ;;  arg             4   10[BANK0 ] unsigned long 
  4819 ;;  exp             1    9[BANK0 ] unsigned char 
  4820 ;; Return value:  Size  Location     Type
  4821 ;;                  4    0[BANK0 ] unsigned char 
  4822 ;; Registers used:
  4823 ;;		wreg, status,2, status,0
  4824 ;; Tracked objects:
  4825 ;;		On entry : 300/0
  4826 ;;		On exit  : 300/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4829 ;;      Params:         0       4       0       0       0
  4830 ;;      Locals:         0       6       0       0       0
  4831 ;;      Temps:          0       4       0       0       0
  4832 ;;      Totals:         0      14       0       0       0
  4833 ;;Total ram usage:       14 bytes
  4834 ;; Hardware stack levels used: 1
  4835 ;; Hardware stack levels required when called: 1
  4836 ;; This function calls:
  4837 ;;		Nothing
  4838 ;; This function is called by:
  4839 ;;		_mediaLeituraPt100Umidadde
  4840 ;;		_ADC_Media_10bits
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           
  4844                           
  4845                           ;psect for function ___xxtofl
  4846  082F                     ___xxtofl:
  4847                           
  4848                           ;incstack = 0
  4849                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4850                           ;___xxtofl@sign stored from wreg
  4851  082F  00A8               	movwf	___xxtofl@sign
  4852  0830  0828               	movf	___xxtofl@sign,w
  4853  0831  1D03               	btfss	3,2
  4854  0832  1FA3               	btfss	___xxtofl@val+3,7
  4855  0833  2844               	goto	l4041
  4856  0834  0920               	comf	___xxtofl@val,w
  4857  0835  00AA               	movwf	___xxtofl@arg
  4858  0836  0921               	comf	___xxtofl@val+1,w
  4859  0837  00AB               	movwf	___xxtofl@arg+1
  4860  0838  0922               	comf	___xxtofl@val+2,w
  4861  0839  00AC               	movwf	___xxtofl@arg+2
  4862  083A  0923               	comf	___xxtofl@val+3,w
  4863  083B  00AD               	movwf	___xxtofl@arg+3
  4864  083C  0AAA               	incf	___xxtofl@arg,f
  4865  083D  1903               	skipnz
  4866  083E  0AAB               	incf	___xxtofl@arg+1,f
  4867  083F  1903               	skipnz
  4868  0840  0AAC               	incf	___xxtofl@arg+2,f
  4869  0841  1903               	skipnz
  4870  0842  0AAD               	incf	___xxtofl@arg+3,f
  4871  0843  284C               	goto	l1418
  4872  0844                     l4041:
  4873  0844  0823               	movf	___xxtofl@val+3,w
  4874  0845  00AD               	movwf	___xxtofl@arg+3
  4875  0846  0822               	movf	___xxtofl@val+2,w
  4876  0847  00AC               	movwf	___xxtofl@arg+2
  4877  0848  0821               	movf	___xxtofl@val+1,w
  4878  0849  00AB               	movwf	___xxtofl@arg+1
  4879  084A  0820               	movf	___xxtofl@val,w
  4880  084B  00AA               	movwf	___xxtofl@arg
  4881  084C                     l1418:
  4882  084C  0823               	movf	___xxtofl@val+3,w
  4883  084D  0422               	iorwf	___xxtofl@val+2,w
  4884  084E  0421               	iorwf	___xxtofl@val+1,w
  4885  084F  0420               	iorwf	___xxtofl@val,w
  4886  0850  1D03               	skipz
  4887  0851  285B               	goto	l4047
  4888  0852  3000               	movlw	0
  4889  0853  00A3               	movwf	?___xxtofl+3
  4890  0854  3000               	movlw	0
  4891  0855  00A2               	movwf	?___xxtofl+2
  4892  0856  3000               	movlw	0
  4893  0857  00A1               	movwf	?___xxtofl+1
  4894  0858  3000               	movlw	0
  4895  0859  00A0               	movwf	?___xxtofl
  4896  085A  0008               	return
  4897  085B                     l4047:
  4898  085B  3096               	movlw	150
  4899  085C  00A4               	movwf	??___xxtofl
  4900  085D  0824               	movf	??___xxtofl,w
  4901  085E  00A9               	movwf	___xxtofl@exp
  4902  085F                     l4051:
  4903  085F  30FE               	movlw	254
  4904  0860  052D               	andwf	___xxtofl@arg+3,w
  4905  0861  1903               	btfsc	3,2
  4906  0862  288C               	goto	l1424
  4907  0863  3001               	movlw	1
  4908  0864  00A4               	movwf	??___xxtofl
  4909  0865  0824               	movf	??___xxtofl,w
  4910  0866  07A9               	addwf	___xxtofl@exp,f
  4911  0867  3001               	movlw	1
  4912  0868                     u3455:
  4913  0868  1003               	clrc
  4914  0869  0CAD               	rrf	___xxtofl@arg+3,f
  4915  086A  0CAC               	rrf	___xxtofl@arg+2,f
  4916  086B  0CAB               	rrf	___xxtofl@arg+1,f
  4917  086C  0CAA               	rrf	___xxtofl@arg,f
  4918  086D  3EFF               	addlw	-1
  4919  086E  1D03               	skipz
  4920  086F  2868               	goto	u3455
  4921  0870  285F               	goto	l4051
  4922  0871                     l4053:
  4923  0871  3001               	movlw	1
  4924  0872  00A4               	movwf	??___xxtofl
  4925  0873  0824               	movf	??___xxtofl,w
  4926  0874  07A9               	addwf	___xxtofl@exp,f
  4927  0875  3001               	movlw	1
  4928  0876  07AA               	addwf	___xxtofl@arg,f
  4929  0877  3000               	movlw	0
  4930  0878  1803               	skipnc
  4931  0879  3001               	movlw	1
  4932  087A  07AB               	addwf	___xxtofl@arg+1,f
  4933  087B  3000               	movlw	0
  4934  087C  1803               	skipnc
  4935  087D  3001               	movlw	1
  4936  087E  07AC               	addwf	___xxtofl@arg+2,f
  4937  087F  3000               	movlw	0
  4938  0880  1803               	skipnc
  4939  0881  3001               	movlw	1
  4940  0882  07AD               	addwf	___xxtofl@arg+3,f
  4941  0883  3001               	movlw	1
  4942  0884                     u3475:
  4943  0884  1003               	clrc
  4944  0885  0CAD               	rrf	___xxtofl@arg+3,f
  4945  0886  0CAC               	rrf	___xxtofl@arg+2,f
  4946  0887  0CAB               	rrf	___xxtofl@arg+1,f
  4947  0888  0CAA               	rrf	___xxtofl@arg,f
  4948  0889  3EFF               	addlw	-1
  4949  088A  1D03               	skipz
  4950  088B  2884               	goto	u3475
  4951  088C                     l1424:
  4952  088C  30FF               	movlw	255
  4953  088D  052D               	andwf	___xxtofl@arg+3,w
  4954  088E  1903               	btfsc	3,2
  4955  088F  28A0               	goto	l4061
  4956  0890  2871               	goto	l4053
  4957  0891                     l4063:
  4958  0891  3002               	movlw	2
  4959  0892  0229               	subwf	___xxtofl@exp,w
  4960  0893  1C03               	btfss	3,0
  4961  0894  28A2               	goto	l1431
  4962  0895  3001               	movlw	1
  4963  0896  02A9               	subwf	___xxtofl@exp,f
  4964  0897  3001               	movlw	1
  4965  0898  00A4               	movwf	??___xxtofl
  4966  0899                     u3495:
  4967  0899  1003               	clrc
  4968  089A  0DAA               	rlf	___xxtofl@arg,f
  4969  089B  0DAB               	rlf	___xxtofl@arg+1,f
  4970  089C  0DAC               	rlf	___xxtofl@arg+2,f
  4971  089D  0DAD               	rlf	___xxtofl@arg+3,f
  4972  089E  0BA4               	decfsz	??___xxtofl,f
  4973  089F  2899               	goto	u3495
  4974  08A0                     l4061:
  4975  08A0  1FAC               	btfss	___xxtofl@arg+2,7
  4976  08A1  2891               	goto	l4063
  4977  08A2                     l1431:
  4978  08A2  1829               	btfsc	___xxtofl@exp,0
  4979  08A3  28AC               	goto	l1432
  4980  08A4  30FF               	movlw	255
  4981  08A5  05AA               	andwf	___xxtofl@arg,f
  4982  08A6  30FF               	movlw	255
  4983  08A7  05AB               	andwf	___xxtofl@arg+1,f
  4984  08A8  307F               	movlw	127
  4985  08A9  05AC               	andwf	___xxtofl@arg+2,f
  4986  08AA  30FF               	movlw	255
  4987  08AB  05AD               	andwf	___xxtofl@arg+3,f
  4988  08AC                     l1432:
  4989  08AC  1003               	clrc
  4990  08AD  0CA9               	rrf	___xxtofl@exp,f
  4991  08AE  0829               	movf	___xxtofl@exp,w
  4992  08AF  00A4               	movwf	??___xxtofl
  4993  08B0  01A5               	clrf	??___xxtofl+1
  4994  08B1  01A6               	clrf	??___xxtofl+2
  4995  08B2  01A7               	clrf	??___xxtofl+3
  4996  08B3  3018               	movlw	24
  4997  08B4                     u3535:
  4998  08B4  1003               	clrc
  4999  08B5  0DA4               	rlf	??___xxtofl,f
  5000  08B6  0DA5               	rlf	??___xxtofl+1,f
  5001  08B7  0DA6               	rlf	??___xxtofl+2,f
  5002  08B8  0DA7               	rlf	??___xxtofl+3,f
  5003  08B9  3EFF               	addlw	-1
  5004  08BA  1D03               	skipz
  5005  08BB  28B4               	goto	u3535
  5006  08BC  0824               	movf	??___xxtofl,w
  5007  08BD  04AA               	iorwf	___xxtofl@arg,f
  5008  08BE  0825               	movf	??___xxtofl+1,w
  5009  08BF  04AB               	iorwf	___xxtofl@arg+1,f
  5010  08C0  0826               	movf	??___xxtofl+2,w
  5011  08C1  04AC               	iorwf	___xxtofl@arg+2,f
  5012  08C2  0827               	movf	??___xxtofl+3,w
  5013  08C3  04AD               	iorwf	___xxtofl@arg+3,f
  5014  08C4  0828               	movf	___xxtofl@sign,w
  5015  08C5  1D03               	btfss	3,2
  5016  08C6  1FA3               	btfss	___xxtofl@val+3,7
  5017  08C7  28C9               	goto	l4075
  5018  08C8  17AD               	bsf	___xxtofl@arg+3,7
  5019  08C9                     l4075:
  5020  08C9  082D               	movf	___xxtofl@arg+3,w
  5021  08CA  00A3               	movwf	?___xxtofl+3
  5022  08CB  082C               	movf	___xxtofl@arg+2,w
  5023  08CC  00A2               	movwf	?___xxtofl+2
  5024  08CD  082B               	movf	___xxtofl@arg+1,w
  5025  08CE  00A1               	movwf	?___xxtofl+1
  5026  08CF  082A               	movf	___xxtofl@arg,w
  5027  08D0  00A0               	movwf	?___xxtofl
  5028  08D1  0008               	return
  5029  08D2                     __end_of___xxtofl:
  5030                           
  5031                           	psect	text9
  5032  1F13                     __ptext9:	
  5033 ;; *************** function _USART_init *****************
  5034 ;; Defined at:
  5035 ;;		line 18 in file "usart.c"
  5036 ;; Parameters:    Size  Location     Type
  5037 ;;  baudrate        4    0[BANK0 ] unsigned long 
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;  i               1    5[BANK0 ] unsigned char 
  5040 ;;  erro            1    0        unsigned char 
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  1    wreg      void 
  5043 ;; Registers used:
  5044 ;;		wreg, status,2, status,0
  5045 ;; Tracked objects:
  5046 ;;		On entry : 300/0
  5047 ;;		On exit  : 300/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5050 ;;      Params:         0       4       0       0       0
  5051 ;;      Locals:         0       1       0       0       0
  5052 ;;      Temps:          0       1       0       0       0
  5053 ;;      Totals:         0       6       0       0       0
  5054 ;;Total ram usage:        6 bytes
  5055 ;; Hardware stack levels used: 1
  5056 ;; Hardware stack levels required when called: 1
  5057 ;; This function calls:
  5058 ;;		Nothing
  5059 ;; This function is called by:
  5060 ;;		_main
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           
  5065                           ;psect for function _USART_init
  5066  1F13                     _USART_init:
  5067                           
  5068                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  5069                           
  5070                           ;incstack = 0
  5071                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  5072  1F13  304B               	movlw	75
  5073  1F14  0621               	xorwf	USART_init@baudrate+1,w
  5074  1F15  0420               	iorwf	USART_init@baudrate,w
  5075  1F16  0422               	iorwf	USART_init@baudrate+2,w
  5076  1F17  0423               	iorwf	USART_init@baudrate+3,w
  5077  1F18  1D03               	btfss	3,2
  5078  1F19  2F26               	goto	l4905
  5079                           
  5080                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  5081  1F1A  1283               	bcf	3,5	;RP0=0, select bank0
  5082  1F1B  1303               	bcf	3,6	;RP1=0, select bank0
  5083  1F1C  1798               	bsf	24,7	;volatile
  5084                           
  5085                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  5086  1F1D  1618               	bsf	24,4	;volatile
  5087                           
  5088                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  5089  1F1E  1683               	bsf	3,5	;RP0=1, select bank1
  5090  1F1F  1518               	bsf	24,2	;volatile
  5091                           
  5092                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  5093  1F20  1218               	bcf	24,4	;volatile
  5094                           
  5095                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  5096  1F21  1318               	bcf	24,6	;volatile
  5097                           
  5098                           ;usart.c: 32:           SPBRG =12;
  5099  1F22  300C               	movlw	12
  5100  1F23  0099               	movwf	25	;volatile
  5101                           
  5102                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  5103  1F24  170B               	bsf	11,6	;volatile
  5104  1F25  2F42               	goto	L4
  5105  1F26                     l4905:	
  5106                           ;usart.c: 35:           }
  5107                           
  5108                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  5109                           
  5110  1F26  30C2               	movlw	194
  5111  1F27  1283               	bcf	3,5	;RP0=0, select bank0
  5112  1F28  1303               	bcf	3,6	;RP1=0, select bank0
  5113  1F29  0621               	xorwf	USART_init@baudrate+1,w
  5114  1F2A  1D03               	skipz
  5115  1F2B  2F43               	goto	l4925
  5116  1F2C  0322               	decf	USART_init@baudrate+2,w
  5117  1F2D  0420               	iorwf	USART_init@baudrate,w
  5118  1F2E  0423               	iorwf	USART_init@baudrate+3,w
  5119  1F2F  1D03               	btfss	3,2
  5120  1F30  2F43               	goto	l4925
  5121                           
  5122                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  5123  1F31  3010               	movlw	16
  5124  1F32  1683               	bsf	3,5	;RP0=1, select bank1
  5125  1F33  1303               	bcf	3,6	;RP1=0, select bank1
  5126  1F34  0099               	movwf	25	;volatile
  5127                           
  5128                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  5129  1F35  1703               	bsf	3,6	;RP1=1, select bank3
  5130  1F36  1587               	bsf	7,3	;volatile
  5131                           
  5132                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  5133  1F37  1303               	bcf	3,6	;RP1=0, select bank1
  5134  1F38  1518               	bsf	24,2	;volatile
  5135                           
  5136                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  5137  1F39  1283               	bcf	3,5	;RP0=0, select bank0
  5138  1F3A  1798               	bsf	24,7	;volatile
  5139                           
  5140                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  5141  1F3B  1683               	bsf	3,5	;RP0=1, select bank1
  5142  1F3C  1218               	bcf	24,4	;volatile
  5143                           
  5144                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  5145  1F3D  1318               	bcf	24,6	;volatile
  5146                           
  5147                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  5148  1F3E  1283               	bcf	3,5	;RP0=0, select bank0
  5149  1F3F  1618               	bsf	24,4	;volatile
  5150                           
  5151                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  5152  1F40  170B               	bsf	11,6	;volatile
  5153                           
  5154                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  5155  1F41  1683               	bsf	3,5	;RP0=1, select bank1
  5156  1F42                     L4:
  5157  1F42  168C               	bsf	12,5	;volatile
  5158  1F43                     l4925:
  5159                           
  5160                           ;usart.c: 68:      TRISC6= 1;
  5161  1F43  1683               	bsf	3,5	;RP0=1, select bank1
  5162  1F44  1303               	bcf	3,6	;RP1=0, select bank1
  5163  1F45  1707               	bsf	7,6	;volatile
  5164                           
  5165                           ;usart.c: 69:      TRISC7= 1;
  5166  1F46  1787               	bsf	7,7	;volatile
  5167                           
  5168                           ;usart.c: 71:      CREN=0;
  5169  1F47  1283               	bcf	3,5	;RP0=0, select bank0
  5170  1F48  1218               	bcf	24,4	;volatile
  5171                           
  5172                           ;usart.c: 72:      CREN=1;
  5173  1F49  1618               	bsf	24,4	;volatile
  5174                           
  5175                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  5176  1F4A  01A5               	clrf	USART_init@i
  5177  1F4B                     l4939:
  5178  1F4B  081A               	movf	26,w	;volatile
  5179  1F4C  3001               	movlw	1
  5180  1F4D  00A4               	movwf	??_USART_init
  5181  1F4E  0824               	movf	??_USART_init,w
  5182  1F4F  07A5               	addwf	USART_init@i,f
  5183  1F50  300F               	movlw	15
  5184  1F51  0225               	subwf	USART_init@i,w
  5185  1F52  1803               	btfsc	3,0
  5186  1F53  0008               	return
  5187  1F54  2F4B               	goto	l4939
  5188  1F55                     __end_of_USART_init:
  5189                           
  5190                           	psect	text10
  5191  1CE8                     __ptext10:	
  5192 ;; *************** function _I2C_Master_Init *****************
  5193 ;; Defined at:
  5194 ;;		line 7 in file "I2C.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;  c               4   14[BANK0 ] const unsigned long 
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;		None
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  1    wreg      void 
  5201 ;; Registers used:
  5202 ;;		wreg, status,2, status,0, pclath, cstack
  5203 ;; Tracked objects:
  5204 ;;		On entry : 300/0
  5205 ;;		On exit  : 300/100
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5208 ;;      Params:         0       4       0       0       0
  5209 ;;      Locals:         0       0       0       0       0
  5210 ;;      Temps:          0       4       0       0       0
  5211 ;;      Totals:         0       8       0       0       0
  5212 ;;Total ram usage:        8 bytes
  5213 ;; Hardware stack levels used: 1
  5214 ;; Hardware stack levels required when called: 2
  5215 ;; This function calls:
  5216 ;;		___lldiv
  5217 ;; This function is called by:
  5218 ;;		_main
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           
  5222                           
  5223                           ;psect for function _I2C_Master_Init
  5224  1CE8                     _I2C_Master_Init:
  5225                           
  5226                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  5227                           
  5228                           ;incstack = 0
  5229                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  5230  1CE8  3028               	movlw	40
  5231  1CE9  0094               	movwf	20	;volatile
  5232                           
  5233                           ;I2C.c: 11:   SSPCON2 = 0;
  5234  1CEA  1683               	bsf	3,5	;RP0=1, select bank1
  5235  1CEB  0191               	clrf	17	;volatile
  5236                           
  5237                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  5238  1CEC  1283               	bcf	3,5	;RP0=0, select bank0
  5239  1CED  082E               	movf	I2C_Master_Init@c,w
  5240  1CEE  00B2               	movwf	??_I2C_Master_Init
  5241  1CEF  082F               	movf	I2C_Master_Init@c+1,w
  5242  1CF0  00B3               	movwf	??_I2C_Master_Init+1
  5243  1CF1  0830               	movf	I2C_Master_Init@c+2,w
  5244  1CF2  00B4               	movwf	??_I2C_Master_Init+2
  5245  1CF3  0831               	movf	I2C_Master_Init@c+3,w
  5246  1CF4  00B5               	movwf	??_I2C_Master_Init+3
  5247  1CF5  3002               	movlw	2
  5248  1CF6                     u4685:
  5249  1CF6  1003               	clrc
  5250  1CF7  0DB2               	rlf	??_I2C_Master_Init,f
  5251  1CF8  0DB3               	rlf	??_I2C_Master_Init+1,f
  5252  1CF9  0DB4               	rlf	??_I2C_Master_Init+2,f
  5253  1CFA  0DB5               	rlf	??_I2C_Master_Init+3,f
  5254  1CFB  3EFF               	addlw	-1
  5255  1CFC  1D03               	skipz
  5256  1CFD  2CF6               	goto	u4685
  5257  1CFE  0835               	movf	??_I2C_Master_Init+3,w
  5258  1CFF  00A3               	movwf	___lldiv@divisor+3
  5259  1D00  0834               	movf	??_I2C_Master_Init+2,w
  5260  1D01  00A2               	movwf	___lldiv@divisor+2
  5261  1D02  0833               	movf	??_I2C_Master_Init+1,w
  5262  1D03  00A1               	movwf	___lldiv@divisor+1
  5263  1D04  0832               	movf	??_I2C_Master_Init,w
  5264  1D05  00A0               	movwf	___lldiv@divisor
  5265  1D06  3000               	movlw	0
  5266  1D07  00A7               	movwf	___lldiv@dividend+3
  5267  1D08  307A               	movlw	122
  5268  1D09  00A6               	movwf	___lldiv@dividend+2
  5269  1D0A  3012               	movlw	18
  5270  1D0B  00A5               	movwf	___lldiv@dividend+1
  5271  1D0C  3000               	movlw	0
  5272  1D0D  00A4               	movwf	___lldiv@dividend
  5273  1D0E  160A  118A  2079   	fcall	___lldiv
  5274  1D11  0820               	movf	?___lldiv,w
  5275  1D12  3EFF               	addlw	255
  5276  1D13  1683               	bsf	3,5	;RP0=1, select bank1
  5277  1D14  0093               	movwf	19	;volatile
  5278                           
  5279                           ;I2C.c: 13:   SSPSTAT = 0;
  5280  1D15  0194               	clrf	20	;volatile
  5281                           
  5282                           ;I2C.c: 14:   TRISC3 = 1;
  5283  1D16  1587               	bsf	7,3	;volatile
  5284                           
  5285                           ;I2C.c: 15:   TRISC4 = 1;
  5286  1D17  1607               	bsf	7,4	;volatile
  5287  1D18  0008               	return
  5288  1D19                     __end_of_I2C_Master_Init:
  5289                           
  5290                           	psect	text11
  5291  1079                     __ptext11:	
  5292 ;; *************** function ___lldiv *****************
  5293 ;; Defined at:
  5294 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;  divisor         4    0[BANK0 ] unsigned long 
  5297 ;;  dividend        4    4[BANK0 ] unsigned long 
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;  quotient        4    9[BANK0 ] unsigned long 
  5300 ;;  counter         1   13[BANK0 ] unsigned char 
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  4    0[BANK0 ] unsigned long 
  5303 ;; Registers used:
  5304 ;;		wreg, status,2, status,0
  5305 ;; Tracked objects:
  5306 ;;		On entry : 300/0
  5307 ;;		On exit  : 300/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5310 ;;      Params:         0       8       0       0       0
  5311 ;;      Locals:         0       5       0       0       0
  5312 ;;      Temps:          0       1       0       0       0
  5313 ;;      Totals:         0      14       0       0       0
  5314 ;;Total ram usage:       14 bytes
  5315 ;; Hardware stack levels used: 1
  5316 ;; Hardware stack levels required when called: 1
  5317 ;; This function calls:
  5318 ;;		Nothing
  5319 ;; This function is called by:
  5320 ;;		_I2C_Master_Init
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324                           
  5325                           ;psect for function ___lldiv
  5326  1079                     ___lldiv:
  5327                           
  5328                           ;incstack = 0
  5329                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5330  1079  3000               	movlw	0
  5331  107A  00AC               	movwf	___lldiv@quotient+3
  5332  107B  3000               	movlw	0
  5333  107C  00AB               	movwf	___lldiv@quotient+2
  5334  107D  3000               	movlw	0
  5335  107E  00AA               	movwf	___lldiv@quotient+1
  5336  107F  3000               	movlw	0
  5337  1080  00A9               	movwf	___lldiv@quotient
  5338  1081  0823               	movf	___lldiv@divisor+3,w
  5339  1082  0422               	iorwf	___lldiv@divisor+2,w
  5340  1083  0421               	iorwf	___lldiv@divisor+1,w
  5341  1084  0420               	iorwf	___lldiv@divisor,w
  5342  1085  1903               	skipnz
  5343  1086  28CE               	goto	l4535
  5344  1087  01AD               	clrf	___lldiv@counter
  5345  1088  0AAD               	incf	___lldiv@counter,f
  5346  1089                     l4521:
  5347  1089  1BA3               	btfsc	___lldiv@divisor+3,7
  5348  108A  2899               	goto	l4523
  5349  108B  3001               	movlw	1
  5350  108C  00A8               	movwf	??___lldiv
  5351  108D                     u3875:
  5352  108D  1003               	clrc
  5353  108E  0DA0               	rlf	___lldiv@divisor,f
  5354  108F  0DA1               	rlf	___lldiv@divisor+1,f
  5355  1090  0DA2               	rlf	___lldiv@divisor+2,f
  5356  1091  0DA3               	rlf	___lldiv@divisor+3,f
  5357  1092  0BA8               	decfsz	??___lldiv,f
  5358  1093  288D               	goto	u3875
  5359  1094  3001               	movlw	1
  5360  1095  00A8               	movwf	??___lldiv
  5361  1096  0828               	movf	??___lldiv,w
  5362  1097  07AD               	addwf	___lldiv@counter,f
  5363  1098  2889               	goto	l4521
  5364  1099                     l4523:
  5365  1099  3001               	movlw	1
  5366  109A  00A8               	movwf	??___lldiv
  5367  109B                     u3895:
  5368  109B  1003               	clrc
  5369  109C  0DA9               	rlf	___lldiv@quotient,f
  5370  109D  0DAA               	rlf	___lldiv@quotient+1,f
  5371  109E  0DAB               	rlf	___lldiv@quotient+2,f
  5372  109F  0DAC               	rlf	___lldiv@quotient+3,f
  5373  10A0  0BA8               	decfsz	??___lldiv,f
  5374  10A1  289B               	goto	u3895
  5375  10A2  0823               	movf	___lldiv@divisor+3,w
  5376  10A3  0227               	subwf	___lldiv@dividend+3,w
  5377  10A4  1D03               	skipz
  5378  10A5  28B0               	goto	u3905
  5379  10A6  0822               	movf	___lldiv@divisor+2,w
  5380  10A7  0226               	subwf	___lldiv@dividend+2,w
  5381  10A8  1D03               	skipz
  5382  10A9  28B0               	goto	u3905
  5383  10AA  0821               	movf	___lldiv@divisor+1,w
  5384  10AB  0225               	subwf	___lldiv@dividend+1,w
  5385  10AC  1D03               	skipz
  5386  10AD  28B0               	goto	u3905
  5387  10AE  0820               	movf	___lldiv@divisor,w
  5388  10AF  0224               	subwf	___lldiv@dividend,w
  5389  10B0                     u3905:
  5390  10B0  1C03               	skipc
  5391  10B1  28C1               	goto	l4531
  5392  10B2  0820               	movf	___lldiv@divisor,w
  5393  10B3  02A4               	subwf	___lldiv@dividend,f
  5394  10B4  0821               	movf	___lldiv@divisor+1,w
  5395  10B5  1C03               	skipc
  5396  10B6  0F21               	incfsz	___lldiv@divisor+1,w
  5397  10B7  02A5               	subwf	___lldiv@dividend+1,f
  5398  10B8  0822               	movf	___lldiv@divisor+2,w
  5399  10B9  1C03               	skipc
  5400  10BA  0F22               	incfsz	___lldiv@divisor+2,w
  5401  10BB  02A6               	subwf	___lldiv@dividend+2,f
  5402  10BC  0823               	movf	___lldiv@divisor+3,w
  5403  10BD  1C03               	skipc
  5404  10BE  0F23               	incfsz	___lldiv@divisor+3,w
  5405  10BF  02A7               	subwf	___lldiv@dividend+3,f
  5406  10C0  1429               	bsf	___lldiv@quotient,0
  5407  10C1                     l4531:
  5408  10C1  3001               	movlw	1
  5409  10C2                     u3915:
  5410  10C2  1003               	clrc
  5411  10C3  0CA3               	rrf	___lldiv@divisor+3,f
  5412  10C4  0CA2               	rrf	___lldiv@divisor+2,f
  5413  10C5  0CA1               	rrf	___lldiv@divisor+1,f
  5414  10C6  0CA0               	rrf	___lldiv@divisor,f
  5415  10C7  3EFF               	addlw	-1
  5416  10C8  1D03               	skipz
  5417  10C9  28C2               	goto	u3915
  5418  10CA  3001               	movlw	1
  5419  10CB  02AD               	subwf	___lldiv@counter,f
  5420  10CC  1D03               	btfss	3,2
  5421  10CD  2899               	goto	l4523
  5422  10CE                     l4535:
  5423  10CE  082C               	movf	___lldiv@quotient+3,w
  5424  10CF  00A3               	movwf	?___lldiv+3
  5425  10D0  082B               	movf	___lldiv@quotient+2,w
  5426  10D1  00A2               	movwf	?___lldiv+2
  5427  10D2  082A               	movf	___lldiv@quotient+1,w
  5428  10D3  00A1               	movwf	?___lldiv+1
  5429  10D4  0829               	movf	___lldiv@quotient,w
  5430  10D5  00A0               	movwf	?___lldiv
  5431  10D6  0008               	return
  5432  10D7                     __end_of___lldiv:
  5433                           
  5434                           	psect	text12
  5435  003A                     __ptext12:	
  5436 ;; *************** function _Decodify_Command *****************
  5437 ;; Defined at:
  5438 ;;		line 304 in file "SlaveLiofilizadorVer1.c"
  5439 ;; Parameters:    Size  Location     Type
  5440 ;;		None
  5441 ;; Auto vars:     Size  Location     Type
  5442 ;;  sizedata        1    3[BANK1 ] unsigned char 
  5443 ;;  add             1    2[BANK1 ] unsigned char 
  5444 ;;  add_24LCxxxx    4   11[BANK1 ] unsigned long 
  5445 ;;  OutPut          4    6[BANK1 ] float 
  5446 ;;  tempint         2    4[BANK1 ] int 
  5447 ;;  dados           2    0[BANK1 ] int 
  5448 ;;  tempchar        1   10[BANK1 ] unsigned char 
  5449 ;; Return value:  Size  Location     Type
  5450 ;;                  1    wreg      void 
  5451 ;; Registers used:
  5452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5453 ;; Tracked objects:
  5454 ;;		On entry : 300/100
  5455 ;;		On exit  : 0/0
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5458 ;;      Params:         0       0       0       0       0
  5459 ;;      Locals:         0       0      15       0       0
  5460 ;;      Temps:          0       4       0       0       0
  5461 ;;      Totals:         0       4      15       0       0
  5462 ;;Total ram usage:       19 bytes
  5463 ;; Hardware stack levels used: 1
  5464 ;; Hardware stack levels required when called: 6
  5465 ;; This function calls:
  5466 ;;		_EEPROM_24C1025_Fill_All
  5467 ;;		_EEPROM_24C1025_Read_Buffer_USART
  5468 ;;		_EEPROM_24C1025_Read_Byte
  5469 ;;		_EEPROM_24C1025_Read_Int
  5470 ;;		_EEPROM_24C1025_Read_Str
  5471 ;;		_EEPROM_24C1025_Write_Buffer
  5472 ;;		_EEPROM_24C1025_Write_Byte
  5473 ;;		_EEPROM_24C1025_Write_Int
  5474 ;;		_EEPROM_24C1025_Write_Str
  5475 ;;		_EEPROM_Read_Byte
  5476 ;;		_EEPROM_Read_Integer
  5477 ;;		_EEPROM_Read_String
  5478 ;;		_EEPROM_Write_Byte
  5479 ;;		_EEPROM_Write_Integer
  5480 ;;		_EEPROM_Write_String
  5481 ;;		_PROCULUS_Buzzer
  5482 ;;		_PROCULUS_Show_Screen
  5483 ;;		_PROCULUS_VP_Write_String
  5484 ;;		_Save_Log
  5485 ;;		_Send_Reply_OK
  5486 ;;		_Send_To_MB
  5487 ;;		_USART_put_int
  5488 ;;		_USART_put_string
  5489 ;;		_USART_putc
  5490 ;;		_USART_to_Protocol
  5491 ;;		___flmul
  5492 ;;		___fltol
  5493 ;;		_strcpy
  5494 ;;		_strlen
  5495 ;; This function is called by:
  5496 ;;		_main
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           
  5501                           ;psect for function _Decodify_Command
  5502  003A                     _Decodify_Command:
  5503                           
  5504                           ;SlaveLiofilizadorVer1.c: 306:     int dados;;SlaveLiofilizadorVer1.c: 307:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 308:     int tempint;;SlaveLiofilizadorVer1.c: 309:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 310:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 322:     USART_to_Protocol(&usart_protocol);
  5505                           
  5506                           ;incstack = 0
  5507                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5508  003A  3090               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  5509  003B  160A  158A  2755  120A  118A  	fcall	_USART_to_Protocol
  5510                           
  5511                           ;SlaveLiofilizadorVer1.c: 324:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  5512  0040  1683               	bsf	3,5	;RP0=1, select bank3
  5513  0041  1703               	bsf	3,6	;RP1=1, select bank3
  5514  0042  0817               	movf	(_usart_protocol^(0+384)+7),w
  5515  0043  1283               	bcf	3,5	;RP0=0, select bank0
  5516  0044  1303               	bcf	3,6	;RP1=0, select bank0
  5517  0045  00DF               	movwf	??_Decodify_Command
  5518  0046  085F               	movf	??_Decodify_Command,w
  5519  0047  1683               	bsf	3,5	;RP0=1, select bank1
  5520  0048  00C9               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  5521                           
  5522                           ;SlaveLiofilizadorVer1.c: 325:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  5523  0049  1703               	bsf	3,6	;RP1=1, select bank3
  5524  004A  0818               	movf	(_usart_protocol^(0+384)+8),w
  5525  004B  1283               	bcf	3,5	;RP0=0, select bank0
  5526  004C  1303               	bcf	3,6	;RP1=0, select bank0
  5527  004D  00DF               	movwf	??_Decodify_Command
  5528  004E  085F               	movf	??_Decodify_Command,w
  5529  004F  1683               	bsf	3,5	;RP0=1, select bank1
  5530  0050  00C8               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  5531                           
  5532                           ;SlaveLiofilizadorVer1.c: 326:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  5533  0051  1703               	bsf	3,6	;RP1=1, select bank3
  5534  0052  0819               	movf	(_usart_protocol^(0+384)+9),w
  5535  0053  1283               	bcf	3,5	;RP0=0, select bank0
  5536  0054  1303               	bcf	3,6	;RP1=0, select bank0
  5537  0055  00DF               	movwf	??_Decodify_Command
  5538  0056  085F               	movf	??_Decodify_Command,w
  5539  0057  1683               	bsf	3,5	;RP0=1, select bank1
  5540  0058  00C7               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  5541                           
  5542                           ;SlaveLiofilizadorVer1.c: 327:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  5543  0059  1703               	bsf	3,6	;RP1=1, select bank3
  5544  005A  081A               	movf	(_usart_protocol^(0+384)+10),w
  5545  005B  1283               	bcf	3,5	;RP0=0, select bank0
  5546  005C  1303               	bcf	3,6	;RP1=0, select bank0
  5547  005D  00DF               	movwf	??_Decodify_Command
  5548  005E  085F               	movf	??_Decodify_Command,w
  5549  005F  1683               	bsf	3,5	;RP0=1, select bank1
  5550  0060  00C6               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  5551                           
  5552                           ;SlaveLiofilizadorVer1.c: 334:     switch(usart_protocol.command){
  5553  0061  2B75               	goto	l5693
  5554  0062                     l5533:
  5555                           
  5556                           ;SlaveLiofilizadorVer1.c: 343:              strcpy(buffer,"v1.0.24");
  5557  0062  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  5558  0063  00DF               	movwf	??_Decodify_Command
  5559  0064  085F               	movf	??_Decodify_Command,w
  5560  0065  00A0               	movwf	strcpy@from
  5561  0066  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  5562  0067  160A  118A  205B  120A  118A  	fcall	_strcpy
  5563                           
  5564                           ;SlaveLiofilizadorVer1.c: 344:              Send_To_MB(11);
  5565  006C  300B               	movlw	11
  5566  006D                     L7:
  5567  006D  160A  158A  2496  120A  118A  	fcall	_Send_To_MB
  5568                           
  5569                           ;SlaveLiofilizadorVer1.c: 345:              USART_put_string(buffer);
  5570  0072  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  5571  0073  1283               	bcf	3,5	;RP0=0, select bank0
  5572  0074  00A1               	movwf	USART_put_string@vetor
  5573  0075  3001               	movlw	1
  5574  0076  00A2               	movwf	USART_put_string@vetor+1
  5575  0077  160A  158A  254B   	fcall	_USART_put_string
  5576                           
  5577                           ;SlaveLiofilizadorVer1.c: 346:              break;
  5578  007A  0008               	return
  5579  007B                     l5539:
  5580                           
  5581                           ;SlaveLiofilizadorVer1.c: 356:              if(usart_protocol.value[0]==0)
  5582  007B  1683               	bsf	3,5	;RP0=1, select bank3
  5583  007C  1703               	bsf	3,6	;RP1=1, select bank3
  5584  007D  0816               	movf	(_usart_protocol^(0+384)+6),w
  5585  007E  1D03               	btfss	3,2
  5586  007F  2889               	goto	l5543
  5587                           
  5588                           ;SlaveLiofilizadorVer1.c: 357:                 OutPut=Temperatura0;
  5589  0080  1303               	bcf	3,6	;RP1=0, select bank1
  5590  0081  0827               	movf	(_Temperatura0+3)^(0+128),w
  5591  0082  00C4               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  5592  0083  0826               	movf	(_Temperatura0+2)^(0+128),w
  5593  0084  00C3               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  5594  0085  0825               	movf	(_Temperatura0+1)^(0+128),w
  5595  0086  00C2               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  5596  0087  0824               	movf	_Temperatura0^(0+128),w
  5597  0088  2891               	goto	L5
  5598  0089                     l5543:
  5599                           
  5600                           ;SlaveLiofilizadorVer1.c: 359:                 OutPut=Temperatura1;
  5601  0089  1303               	bcf	3,6	;RP1=0, select bank1
  5602  008A  0823               	movf	(_Temperatura1+3)^(0+128),w
  5603  008B  00C4               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  5604  008C  0822               	movf	(_Temperatura1+2)^(0+128),w
  5605  008D  00C3               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  5606  008E  0821               	movf	(_Temperatura1+1)^(0+128),w
  5607  008F  00C2               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  5608  0090  0820               	movf	_Temperatura1^(0+128),w
  5609  0091                     L5:
  5610  0091  00C1               	movwf	Decodify_Command@OutPut^(0+128)
  5611                           
  5612                           ;SlaveLiofilizadorVer1.c: 370:              OutPut*=10.0;
  5613  0092  3041               	movlw	65
  5614  0093  1283               	bcf	3,5	;RP0=0, select bank0
  5615  0094  00AC               	movwf	___flmul@b+3
  5616  0095  3020               	movlw	32
  5617  0096  00AB               	movwf	___flmul@b+2
  5618  0097  3000               	movlw	0
  5619  0098  00AA               	movwf	___flmul@b+1
  5620  0099  3000               	movlw	0
  5621  009A  00A9               	movwf	___flmul@b
  5622  009B  1683               	bsf	3,5	;RP0=1, select bank1
  5623  009C  0844               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  5624  009D  1283               	bcf	3,5	;RP0=0, select bank0
  5625  009E  00B0               	movwf	___flmul@a+3
  5626  009F  1683               	bsf	3,5	;RP0=1, select bank1
  5627  00A0  0843               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  5628  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  5629  00A2  00AF               	movwf	___flmul@a+2
  5630  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  5631  00A4  0842               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  5632  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  5633  00A6  00AE               	movwf	___flmul@a+1
  5634  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  5635  00A8  0841               	movf	Decodify_Command@OutPut^(0+128),w
  5636  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  5637  00AA  00AD               	movwf	___flmul@a
  5638  00AB  120A  118A  23C8  120A  118A  	fcall	___flmul
  5639  00B0  082C               	movf	?___flmul+3,w
  5640  00B1  1683               	bsf	3,5	;RP0=1, select bank1
  5641  00B2  00C4               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  5642  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  5643  00B4  082B               	movf	?___flmul+2,w
  5644  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  5645  00B6  00C3               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  5646  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  5647  00B8  082A               	movf	?___flmul+1,w
  5648  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  5649  00BA  00C2               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  5650  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  5651  00BC  0829               	movf	?___flmul,w
  5652  00BD  1683               	bsf	3,5	;RP0=1, select bank1
  5653  00BE  00C1               	movwf	Decodify_Command@OutPut^(0+128)
  5654                           
  5655                           ;SlaveLiofilizadorVer1.c: 372:              INTCONbits.GIE=0;
  5656  00BF  138B               	bcf	11,7	;volatile
  5657                           
  5658                           ;SlaveLiofilizadorVer1.c: 373:              Send_To_MB(2);
  5659  00C0  3002               	movlw	2
  5660  00C1  160A  158A  2496  120A  118A  	fcall	_Send_To_MB
  5661                           
  5662                           ;SlaveLiofilizadorVer1.c: 374:              USART_put_int(OutPut);
  5663  00C6  0844               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  5664  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  5665  00C8  00C6               	movwf	___fltol@f1+3
  5666  00C9  1683               	bsf	3,5	;RP0=1, select bank1
  5667  00CA  0843               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  5668  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  5669  00CC  00C5               	movwf	___fltol@f1+2
  5670  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  5671  00CE  0842               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  5672  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  5673  00D0  00C4               	movwf	___fltol@f1+1
  5674  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  5675  00D2  0841               	movf	Decodify_Command@OutPut^(0+128),w
  5676  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  5677  00D4  00C3               	movwf	___fltol@f1
  5678  00D5  160A  118A  20D7  120A  118A  	fcall	___fltol
  5679  00DA  0844               	movf	?___fltol+1,w
  5680  00DB  00CF               	movwf	USART_put_int@value+1
  5681  00DC  0843               	movf	?___fltol,w
  5682  00DD  00CE               	movwf	USART_put_int@value
  5683  00DE  160A  158A  2312   	fcall	_USART_put_int
  5684                           
  5685                           ;SlaveLiofilizadorVer1.c: 375:              INTCONbits.GIE=1;
  5686  00E1  178B               	bsf	11,7	;volatile
  5687                           
  5688                           ;SlaveLiofilizadorVer1.c: 376:              break;
  5689  00E2  0008               	return
  5690  00E3                     l5555:
  5691                           
  5692                           ;SlaveLiofilizadorVer1.c: 381:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  5693  00E3  1683               	bsf	3,5	;RP0=1, select bank3
  5694  00E4  1703               	bsf	3,6	;RP1=1, select bank3
  5695  00E5  0816               	movf	(_usart_protocol^(0+384)+6),w
  5696  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  5697  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  5698  00E8  00DF               	movwf	??_Decodify_Command
  5699  00E9  085F               	movf	??_Decodify_Command,w
  5700  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  5701  00EB  00C9               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  5702                           
  5703                           ;SlaveLiofilizadorVer1.c: 382:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  5704  00EC  1703               	bsf	3,6	;RP1=1, select bank3
  5705  00ED  0817               	movf	(_usart_protocol^(0+384)+7),w
  5706  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  5707  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  5708  00F0  00DF               	movwf	??_Decodify_Command
  5709  00F1  085F               	movf	??_Decodify_Command,w
  5710  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  5711  00F3  00C8               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  5712                           
  5713                           ;SlaveLiofilizadorVer1.c: 383:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  5714  00F4  1703               	bsf	3,6	;RP1=1, select bank3
  5715  00F5  0818               	movf	(_usart_protocol^(0+384)+8),w
  5716  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  5717  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  5718  00F8  00DF               	movwf	??_Decodify_Command
  5719  00F9  085F               	movf	??_Decodify_Command,w
  5720  00FA  1683               	bsf	3,5	;RP0=1, select bank1
  5721  00FB  00C7               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  5722                           
  5723                           ;SlaveLiofilizadorVer1.c: 384:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  5724  00FC  1703               	bsf	3,6	;RP1=1, select bank3
  5725  00FD  0819               	movf	(_usart_protocol^(0+384)+9),w
  5726  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  5727  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  5728  0100  00DF               	movwf	??_Decodify_Command
  5729  0101  085F               	movf	??_Decodify_Command,w
  5730  0102  1683               	bsf	3,5	;RP0=1, select bank1
  5731  0103  00C6               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  5732                           
  5733                           ;SlaveLiofilizadorVer1.c: 385:              Save_Log(add_24LCxxxx);
  5734  0104  0849               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  5735  0105  1283               	bcf	3,5	;RP0=0, select bank0
  5736  0106  00DB               	movwf	Save_Log@add_datalog+3
  5737  0107  1683               	bsf	3,5	;RP0=1, select bank1
  5738  0108  0848               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  5739  0109  1283               	bcf	3,5	;RP0=0, select bank0
  5740  010A  00DA               	movwf	Save_Log@add_datalog+2
  5741  010B  1683               	bsf	3,5	;RP0=1, select bank1
  5742  010C  0847               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  5743  010D  1283               	bcf	3,5	;RP0=0, select bank0
  5744  010E  00D9               	movwf	Save_Log@add_datalog+1
  5745  010F  1683               	bsf	3,5	;RP0=1, select bank1
  5746  0110  0846               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  5747  0111  1283               	bcf	3,5	;RP0=0, select bank0
  5748  0112  00D8               	movwf	Save_Log@add_datalog
  5749  0113  160A  118A  2142   	fcall	_Save_Log
  5750                           
  5751                           ;SlaveLiofilizadorVer1.c: 386:              Delay_Led_Tmr0=0;
  5752  0116  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  5753  0117  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  5754                           
  5755                           ;SlaveLiofilizadorVer1.c: 387:              milisegundo=0;
  5756  0118  1683               	bsf	3,5	;RP0=1, select bank1
  5757  0119  1303               	bcf	3,6	;RP1=0, select bank1
  5758  011A  01B0               	clrf	_milisegundo^(0+128)	;volatile
  5759  011B  01B1               	clrf	(_milisegundo+1)^(0+128)	;volatile
  5760                           
  5761                           ;SlaveLiofilizadorVer1.c: 388:              break;
  5762  011C  0008               	return
  5763  011D                     l5563:
  5764                           
  5765                           ;SlaveLiofilizadorVer1.c: 400:              Send_To_MB(2);
  5766  011D  3002               	movlw	2
  5767  011E  160A  158A  2496  120A  118A  	fcall	_Send_To_MB
  5768                           
  5769                           ;SlaveLiofilizadorVer1.c: 406:              USART_put_int(2);
  5770  0123  3002               	movlw	2
  5771  0124  1283               	bcf	3,5	;RP0=0, select bank0
  5772  0125  00CE               	movwf	USART_put_int@value
  5773  0126  3000               	movlw	0
  5774  0127  00CF               	movwf	USART_put_int@value+1
  5775  0128  160A  158A  2312   	fcall	_USART_put_int
  5776                           
  5777                           ;SlaveLiofilizadorVer1.c: 412:              break;
  5778  012B  0008               	return
  5779  012C                     l5567:
  5780                           
  5781                           ;SlaveLiofilizadorVer1.c: 429:              EEPROM_Write_Byte(usart_protocol.value[0],
  5782  012C  1683               	bsf	3,5	;RP0=1, select bank3
  5783  012D  1703               	bsf	3,6	;RP1=1, select bank3
  5784  012E  0817               	movf	(_usart_protocol^(0+384)+7),w
  5785  012F  1283               	bcf	3,5	;RP0=0, select bank0
  5786  0130  1303               	bcf	3,6	;RP1=0, select bank0
  5787  0131  00DF               	movwf	??_Decodify_Command
  5788  0132  085F               	movf	??_Decodify_Command,w
  5789  0133  00A0               	movwf	EEPROM_Write_Byte@dado
  5790  0134  1683               	bsf	3,5	;RP0=1, select bank3
  5791  0135  1703               	bsf	3,6	;RP1=1, select bank3
  5792  0136  0816               	movf	(_usart_protocol^(0+384)+6),w
  5793  0137  160A  158A  265A  120A  118A  	fcall	_EEPROM_Write_Byte
  5794  013C                     L6:
  5795                           
  5796                           ;SlaveLiofilizadorVer1.c: 431:              Send_To_MB(3);
  5797  013C  3003               	movlw	3
  5798  013D  160A  158A  2496  120A  118A  	fcall	_Send_To_MB
  5799                           
  5800                           ;SlaveLiofilizadorVer1.c: 432:              Send_Reply_OK();
  5801  0142  160A  158A  2292   	fcall	_Send_Reply_OK
  5802                           
  5803                           ;SlaveLiofilizadorVer1.c: 433:              break;
  5804  0145  0008               	return
  5805  0146                     l5571:
  5806                           
  5807                           ;SlaveLiofilizadorVer1.c: 435:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  5808  0146  1683               	bsf	3,5	;RP0=1, select bank3
  5809  0147  1703               	bsf	3,6	;RP1=1, select bank3
  5810  0148  0816               	movf	(_usart_protocol^(0+384)+6),w
  5811  0149  160A  158A  2407  120A  118A  	fcall	_EEPROM_Read_Byte
  5812  014E  1303               	bcf	3,6	;RP1=0, select bank0
  5813  014F  00DF               	movwf	??_Decodify_Command
  5814  0150  085F               	movf	??_Decodify_Command,w
  5815  0151  1683               	bsf	3,5	;RP0=1, select bank1
  5816  0152  00C5               	movwf	Decodify_Command@tempchar^(0+128)
  5817                           
  5818                           ;SlaveLiofilizadorVer1.c: 436:              Send_To_MB(1);;
  5819  0153  3001               	movlw	1
  5820  0154  160A  158A  2496  120A  118A  	fcall	_Send_To_MB
  5821                           
  5822                           ;SlaveLiofilizadorVer1.c: 437:              USART_putc(tempchar);
  5823  0159  0845               	movf	Decodify_Command@tempchar^(0+128),w
  5824  015A  160A  158A  22C6   	fcall	_USART_putc
  5825                           
  5826                           ;SlaveLiofilizadorVer1.c: 438:              break;
  5827  015D  0008               	return
  5828  015E                     l5577:
  5829                           
  5830                           ;SlaveLiofilizadorVer1.c: 440:              {;SlaveLiofilizadorVer1.c: 441:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 442:              add=usart_protocol.value[
      +                          0];
  5831  015E  1683               	bsf	3,5	;RP0=1, select bank3
  5832  015F  1703               	bsf	3,6	;RP1=1, select bank3
  5833  0160  0816               	movf	(_usart_protocol^(0+384)+6),w
  5834  0161  1283               	bcf	3,5	;RP0=0, select bank0
  5835  0162  1303               	bcf	3,6	;RP1=0, select bank0
  5836  0163  00DF               	movwf	??_Decodify_Command
  5837  0164  085F               	movf	??_Decodify_Command,w
  5838  0165  1683               	bsf	3,5	;RP0=1, select bank1
  5839  0166  00BD               	movwf	Decodify_Command@add^(0+128)
  5840                           
  5841                           ;SlaveLiofilizadorVer1.c: 443:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  5842  0167  1703               	bsf	3,6	;RP1=1, select bank3
  5843  0168  0818               	movf	(_usart_protocol^(0+384)+8),w
  5844  0169  1283               	bcf	3,5	;RP0=0, select bank0
  5845  016A  1303               	bcf	3,6	;RP1=0, select bank0
  5846  016B  00DF               	movwf	??_Decodify_Command
  5847  016C  01E0               	clrf	??_Decodify_Command+1
  5848  016D  1683               	bsf	3,5	;RP0=1, select bank3
  5849  016E  1703               	bsf	3,6	;RP1=1, select bank3
  5850  016F  0817               	movf	(_usart_protocol^(0+384)+7),w
  5851  0170  1283               	bcf	3,5	;RP0=0, select bank0
  5852  0171  1303               	bcf	3,6	;RP1=0, select bank0
  5853  0172  00E1               	movwf	??_Decodify_Command+2
  5854  0173  01E2               	clrf	??_Decodify_Command+3
  5855  0174  0861               	movf	??_Decodify_Command+2,w
  5856  0175  00E2               	movwf	??_Decodify_Command+3
  5857  0176  01E1               	clrf	??_Decodify_Command+2
  5858  0177  085F               	movf	??_Decodify_Command,w
  5859  0178  0461               	iorwf	??_Decodify_Command+2,w
  5860  0179  1683               	bsf	3,5	;RP0=1, select bank1
  5861  017A  00BB               	movwf	Decodify_Command@dados^(0+128)
  5862  017B  1283               	bcf	3,5	;RP0=0, select bank0
  5863  017C  0860               	movf	??_Decodify_Command+1,w
  5864  017D  0462               	iorwf	??_Decodify_Command+3,w
  5865  017E  1683               	bsf	3,5	;RP0=1, select bank1
  5866  017F  00BC               	movwf	(Decodify_Command@dados+1)^(0+128)
  5867                           
  5868                           ;SlaveLiofilizadorVer1.c: 444:              EEPROM_Write_Integer(add,dados);
  5869  0180  083C               	movf	(Decodify_Command@dados+1)^(0+128),w
  5870  0181  1283               	bcf	3,5	;RP0=0, select bank0
  5871  0182  00A6               	movwf	EEPROM_Write_Integer@dado+1
  5872  0183  1683               	bsf	3,5	;RP0=1, select bank1
  5873  0184  083B               	movf	Decodify_Command@dados^(0+128),w
  5874  0185  1283               	bcf	3,5	;RP0=0, select bank0
  5875  0186  00A5               	movwf	EEPROM_Write_Integer@dado
  5876  0187  1683               	bsf	3,5	;RP0=1, select bank1
  5877  0188  083D               	movf	Decodify_Command@add^(0+128),w
  5878  0189  160A  158A  2519  120A  118A  	fcall	_EEPROM_Write_Integer
  5879  018E  293C               	goto	L6
  5880  018F                     l5587:	
  5881                           ;SlaveLiofilizadorVer1.c: 445:              Send_To_MB(3);
  5882                           
  5883                           
  5884                           ;SlaveLiofilizadorVer1.c: 450:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  5885  018F  1683               	bsf	3,5	;RP0=1, select bank3
  5886  0190  1703               	bsf	3,6	;RP1=1, select bank3
  5887  0191  0816               	movf	(_usart_protocol^(0+384)+6),w
  5888  0192  160A  158A  24BE  120A  118A  	fcall	_EEPROM_Read_Integer
  5889  0197  0824               	movf	?_EEPROM_Read_Integer+1,w
  5890  0198  1683               	bsf	3,5	;RP0=1, select bank1
  5891  0199  00C0               	movwf	(Decodify_Command@tempint+1)^(0+128)
  5892  019A  1283               	bcf	3,5	;RP0=0, select bank0
  5893  019B  0823               	movf	?_EEPROM_Read_Integer,w
  5894  019C                     L8:
  5895  019C  1683               	bsf	3,5	;RP0=1, select bank1
  5896  019D  00BF               	movwf	Decodify_Command@tempint^(0+128)
  5897                           
  5898                           ;SlaveLiofilizadorVer1.c: 451:              Send_To_MB(2);
  5899  019E  3002               	movlw	2
  5900  019F  160A  158A  2496  120A  118A  	fcall	_Send_To_MB
  5901                           
  5902                           ;SlaveLiofilizadorVer1.c: 452:              USART_put_int(tempint);
  5903  01A4  0840               	movf	(Decodify_Command@tempint+1)^(0+128),w
  5904  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  5905  01A6  00CF               	movwf	USART_put_int@value+1
  5906  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  5907  01A8  083F               	movf	Decodify_Command@tempint^(0+128),w
  5908  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  5909  01AA  00CE               	movwf	USART_put_int@value
  5910  01AB  160A  158A  2312   	fcall	_USART_put_int
  5911                           
  5912                           ;SlaveLiofilizadorVer1.c: 453:              break;
  5913  01AE  0008               	return
  5914  01AF                     l5593:
  5915                           
  5916                           ;SlaveLiofilizadorVer1.c: 456:              EEPROM_Write_String(usart_protocol.value[0],
  5917  01AF  3097               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  5918  01B0  00DF               	movwf	??_Decodify_Command
  5919  01B1  085F               	movf	??_Decodify_Command,w
  5920  01B2  00A5               	movwf	EEPROM_Write_String@dado
  5921  01B3  1683               	bsf	3,5	;RP0=1, select bank3
  5922  01B4  1703               	bsf	3,6	;RP1=1, select bank3
  5923  01B5  0816               	movf	(_usart_protocol^(0+384)+6),w
  5924  01B6  120A  158A  2004  120A  118A  	fcall	_EEPROM_Write_String
  5925  01BB  293C               	goto	L6
  5926  01BC                     l5599:	
  5927                           ;SlaveLiofilizadorVer1.c: 458:              Send_To_MB(3);
  5928                           
  5929                           
  5930                           ;SlaveLiofilizadorVer1.c: 462:              {;SlaveLiofilizadorVer1.c: 463:             
      +                           EEPROM_Read_String(usart_protocol.value[0],buffer);
  5931  01BC  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  5932  01BD  00DF               	movwf	??_Decodify_Command
  5933  01BE  085F               	movf	??_Decodify_Command,w
  5934  01BF  00A3               	movwf	EEPROM_Read_String@dado
  5935  01C0  1683               	bsf	3,5	;RP0=1, select bank3
  5936  01C1  1703               	bsf	3,6	;RP1=1, select bank3
  5937  01C2  0816               	movf	(_usart_protocol^(0+384)+6),w
  5938  01C3  160A  158A  23C6  120A  118A  	fcall	_EEPROM_Read_String
  5939                           
  5940                           ;SlaveLiofilizadorVer1.c: 464:              Send_To_MB(sizeof(buffer));
  5941  01C8  3021               	movlw	33
  5942  01C9  286D               	goto	L7
  5943  01CA                     l5605:
  5944                           
  5945                           ;SlaveLiofilizadorVer1.c: 471:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  5946  01CA  1683               	bsf	3,5	;RP0=1, select bank1
  5947  01CB  0849               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  5948  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  5949  01CD  00BA               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  5950  01CE  1683               	bsf	3,5	;RP0=1, select bank1
  5951  01CF  0848               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  5952  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  5953  01D1  00B9               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  5954  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  5955  01D3  0847               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  5956  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  5957  01D5  00B8               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  5958  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  5959  01D7  0846               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  5960  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  5961  01D9  00B7               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  5962  01DA  1683               	bsf	3,5	;RP0=1, select bank3
  5963  01DB  1703               	bsf	3,6	;RP1=1, select bank3
  5964  01DC  081B               	movf	(_usart_protocol^(0+384)+11),w
  5965  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  5966  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  5967  01DF  00DF               	movwf	??_Decodify_Command
  5968  01E0  085F               	movf	??_Decodify_Command,w
  5969  01E1  00BB               	movwf	EEPROM_24C1025_Write_Byte@data
  5970  01E2  1683               	bsf	3,5	;RP0=1, select bank3
  5971  01E3  1703               	bsf	3,6	;RP1=1, select bank3
  5972  01E4  0816               	movf	(_usart_protocol^(0+384)+6),w
  5973  01E5  160A  158A  22FC  120A  118A  	fcall	_EEPROM_24C1025_Write_Byte
  5974  01EA  293C               	goto	L6
  5975  01EB                     l5611:	
  5976                           ;SlaveLiofilizadorVer1.c: 474:              Send_To_MB(3);
  5977                           
  5978                           
  5979                           ;SlaveLiofilizadorVer1.c: 478:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  5980  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  5981  01EC  0849               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  5982  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  5983  01EE  00B9               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  5984  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  5985  01F0  0848               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  5986  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  5987  01F2  00B8               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  5988  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  5989  01F4  0847               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  5990  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  5991  01F6  00B7               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  5992  01F7  1683               	bsf	3,5	;RP0=1, select bank1
  5993  01F8  0846               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  5994  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  5995  01FA  00B6               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  5996  01FB  1683               	bsf	3,5	;RP0=1, select bank3
  5997  01FC  1703               	bsf	3,6	;RP1=1, select bank3
  5998  01FD  0816               	movf	(_usart_protocol^(0+384)+6),w
  5999  01FE  160A  158A  2357  120A  118A  	fcall	_EEPROM_24C1025_Read_Byte
  6000  0203  00DF               	movwf	??_Decodify_Command
  6001  0204  085F               	movf	??_Decodify_Command,w
  6002  0205  1683               	bsf	3,5	;RP0=1, select bank1
  6003  0206  00C5               	movwf	Decodify_Command@tempchar^(0+128)
  6004                           
  6005                           ;SlaveLiofilizadorVer1.c: 482:              Send_To_MB(1);
  6006  0207  3001               	movlw	1
  6007  0208  160A  158A  2496  120A  118A  	fcall	_Send_To_MB
  6008                           
  6009                           ;SlaveLiofilizadorVer1.c: 483:              USART_putc(tempchar);
  6010  020D  0845               	movf	Decodify_Command@tempchar^(0+128),w
  6011  020E  160A  158A  22C6   	fcall	_USART_putc
  6012                           
  6013                           ;SlaveLiofilizadorVer1.c: 484:              break;
  6014  0211  0008               	return
  6015  0212                     l5617:
  6016                           
  6017                           ;SlaveLiofilizadorVer1.c: 486:              {;SlaveLiofilizadorVer1.c: 487:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  6018  0212  1683               	bsf	3,5	;RP0=1, select bank1
  6019  0213  0849               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6020  0214  1283               	bcf	3,5	;RP0=0, select bank0
  6021  0215  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  6022  0216  1683               	bsf	3,5	;RP0=1, select bank1
  6023  0217  0848               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6024  0218  1283               	bcf	3,5	;RP0=0, select bank0
  6025  0219  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  6026  021A  1683               	bsf	3,5	;RP0=1, select bank1
  6027  021B  0847               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6028  021C  1283               	bcf	3,5	;RP0=0, select bank0
  6029  021D  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  6030  021E  1683               	bsf	3,5	;RP0=1, select bank1
  6031  021F  0846               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6032  0220  1283               	bcf	3,5	;RP0=0, select bank0
  6033  0221  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  6034  0222  1683               	bsf	3,5	;RP0=1, select bank3
  6035  0223  1703               	bsf	3,6	;RP1=1, select bank3
  6036  0224  081C               	movf	(_usart_protocol^(0+384)+12),w
  6037  0225  1283               	bcf	3,5	;RP0=0, select bank0
  6038  0226  1303               	bcf	3,6	;RP1=0, select bank0
  6039  0227  00DF               	movwf	??_Decodify_Command
  6040  0228  01E0               	clrf	??_Decodify_Command+1
  6041  0229  1683               	bsf	3,5	;RP0=1, select bank3
  6042  022A  1703               	bsf	3,6	;RP1=1, select bank3
  6043  022B  081B               	movf	(_usart_protocol^(0+384)+11),w
  6044  022C  1283               	bcf	3,5	;RP0=0, select bank0
  6045  022D  1303               	bcf	3,6	;RP1=0, select bank0
  6046  022E  00E1               	movwf	??_Decodify_Command+2
  6047  022F  01E2               	clrf	??_Decodify_Command+3
  6048  0230  0861               	movf	??_Decodify_Command+2,w
  6049  0231  00E2               	movwf	??_Decodify_Command+3
  6050  0232  01E1               	clrf	??_Decodify_Command+2
  6051  0233  085F               	movf	??_Decodify_Command,w
  6052  0234  0461               	iorwf	??_Decodify_Command+2,w
  6053  0235  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  6054  0236  0860               	movf	??_Decodify_Command+1,w
  6055  0237  0462               	iorwf	??_Decodify_Command+3,w
  6056  0238  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  6057  0239  1683               	bsf	3,5	;RP0=1, select bank3
  6058  023A  1703               	bsf	3,6	;RP1=1, select bank3
  6059  023B  0816               	movf	(_usart_protocol^(0+384)+6),w
  6060  023C  160A  158A  23A6  120A  118A  	fcall	_EEPROM_24C1025_Write_Int
  6061  0241  293C               	goto	L6
  6062  0242                     l5623:	
  6063                           ;SlaveLiofilizadorVer1.c: 492:              Send_To_MB(3);
  6064                           
  6065                           
  6066                           ;SlaveLiofilizadorVer1.c: 497:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  6067  0242  1683               	bsf	3,5	;RP0=1, select bank1
  6068  0243  0849               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6069  0244  1283               	bcf	3,5	;RP0=0, select bank0
  6070  0245  00B9               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  6071  0246  1683               	bsf	3,5	;RP0=1, select bank1
  6072  0247  0848               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6073  0248  1283               	bcf	3,5	;RP0=0, select bank0
  6074  0249  00B8               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  6075  024A  1683               	bsf	3,5	;RP0=1, select bank1
  6076  024B  0847               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6077  024C  1283               	bcf	3,5	;RP0=0, select bank0
  6078  024D  00B7               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  6079  024E  1683               	bsf	3,5	;RP0=1, select bank1
  6080  024F  0846               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6081  0250  1283               	bcf	3,5	;RP0=0, select bank0
  6082  0251  00B6               	movwf	EEPROM_24C1025_Read_Int@mem_add
  6083  0252  1683               	bsf	3,5	;RP0=1, select bank3
  6084  0253  1703               	bsf	3,6	;RP1=1, select bank3
  6085  0254  0816               	movf	(_usart_protocol^(0+384)+6),w
  6086  0255  160A  158A  246E  120A  118A  	fcall	_EEPROM_24C1025_Read_Int
  6087  025A  0837               	movf	?_EEPROM_24C1025_Read_Int+1,w
  6088  025B  1683               	bsf	3,5	;RP0=1, select bank1
  6089  025C  00C0               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6090  025D  1283               	bcf	3,5	;RP0=0, select bank0
  6091  025E  0836               	movf	?_EEPROM_24C1025_Read_Int,w
  6092  025F  299C               	goto	L8
  6093  0260                     l5629:	
  6094                           ;SlaveLiofilizadorVer1.c: 499:              Send_To_MB(2);
  6095                           
  6096                           
  6097                           ;SlaveLiofilizadorVer1.c: 505:              {;SlaveLiofilizadorVer1.c: 506:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 507:              sizedata=usart_protocol.value
      +                          [5];
  6098  0260  1683               	bsf	3,5	;RP0=1, select bank3
  6099  0261  1703               	bsf	3,6	;RP1=1, select bank3
  6100  0262  081B               	movf	(_usart_protocol^(0+384)+11),w
  6101  0263  1283               	bcf	3,5	;RP0=0, select bank0
  6102  0264  1303               	bcf	3,6	;RP1=0, select bank0
  6103  0265  00DF               	movwf	??_Decodify_Command
  6104  0266  085F               	movf	??_Decodify_Command,w
  6105  0267  1683               	bsf	3,5	;RP0=1, select bank1
  6106  0268  00BE               	movwf	Decodify_Command@sizedata^(0+128)
  6107                           
  6108                           ;SlaveLiofilizadorVer1.c: 508:              Send_To_MB(sizedata);
  6109  0269  083E               	movf	Decodify_Command@sizedata^(0+128),w
  6110  026A  160A  158A  2496  120A  118A  	fcall	_Send_To_MB
  6111                           
  6112                           ;SlaveLiofilizadorVer1.c: 509:              EEPROM_24C1025_Read_Buffer_USART(usart_proto
      +                          col.value[0],
  6113  026F  0849               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6114  0270  1283               	bcf	3,5	;RP0=0, select bank0
  6115  0271  00AC               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3
  6116  0272  1683               	bsf	3,5	;RP0=1, select bank1
  6117  0273  0848               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6118  0274  1283               	bcf	3,5	;RP0=0, select bank0
  6119  0275  00AB               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2
  6120  0276  1683               	bsf	3,5	;RP0=1, select bank1
  6121  0277  0847               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6122  0278  1283               	bcf	3,5	;RP0=0, select bank0
  6123  0279  00AA               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1
  6124  027A  1683               	bsf	3,5	;RP0=1, select bank1
  6125  027B  0846               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6126  027C  1283               	bcf	3,5	;RP0=0, select bank0
  6127  027D  00A9               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add
  6128  027E  1683               	bsf	3,5	;RP0=1, select bank1
  6129  027F  083E               	movf	Decodify_Command@sizedata^(0+128),w
  6130  0280  1283               	bcf	3,5	;RP0=0, select bank0
  6131  0281  00DF               	movwf	??_Decodify_Command
  6132  0282  085F               	movf	??_Decodify_Command,w
  6133  0283  00AD               	movwf	EEPROM_24C1025_Read_Buffer_USART@sizedata
  6134  0284  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6135  0285  00E0               	movwf	??_Decodify_Command+1
  6136  0286  0860               	movf	??_Decodify_Command+1,w
  6137  0287  00AE               	movwf	EEPROM_24C1025_Read_Buffer_USART@data
  6138  0288  1683               	bsf	3,5	;RP0=1, select bank3
  6139  0289  1703               	bsf	3,6	;RP1=1, select bank3
  6140  028A  0816               	movf	(_usart_protocol^(0+384)+6),w
  6141  028B  120A  158A  20D2   	fcall	_EEPROM_24C1025_Read_Buffer_USART
  6142                           
  6143                           ;SlaveLiofilizadorVer1.c: 514:              };SlaveLiofilizadorVer1.c: 515:             
      +                           break;
  6144  028E  0008               	return
  6145  028F                     l5635:
  6146                           
  6147                           ;SlaveLiofilizadorVer1.c: 518:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  6148  028F  1683               	bsf	3,5	;RP0=1, select bank1
  6149  0290  0849               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6150  0291  1283               	bcf	3,5	;RP0=0, select bank0
  6151  0292  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  6152  0293  1683               	bsf	3,5	;RP0=1, select bank1
  6153  0294  0848               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6154  0295  1283               	bcf	3,5	;RP0=0, select bank0
  6155  0296  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  6156  0297  1683               	bsf	3,5	;RP0=1, select bank1
  6157  0298  0847               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6158  0299  1283               	bcf	3,5	;RP0=0, select bank0
  6159  029A  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  6160  029B  1683               	bsf	3,5	;RP0=1, select bank1
  6161  029C  0846               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6162  029D  1283               	bcf	3,5	;RP0=0, select bank0
  6163  029E  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  6164  029F  1683               	bsf	3,5	;RP0=1, select bank3
  6165  02A0  1703               	bsf	3,6	;RP1=1, select bank3
  6166  02A1  081B               	movf	(_usart_protocol^(0+384)+11),w
  6167  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  6168  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  6169  02A4  00DF               	movwf	??_Decodify_Command
  6170  02A5  085F               	movf	??_Decodify_Command,w
  6171  02A6  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  6172  02A7  309C               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  6173  02A8  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  6174  02A9  3001               	movlw	1
  6175  02AA  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  6176  02AB  1683               	bsf	3,5	;RP0=1, select bank3
  6177  02AC  1703               	bsf	3,6	;RP1=1, select bank3
  6178  02AD  0816               	movf	(_usart_protocol^(0+384)+6),w
  6179  02AE  160A  118A  2399  120A  118A  	fcall	_EEPROM_24C1025_Write_Buffer
  6180  02B3  293C               	goto	L6
  6181  02B4                     l5641:	
  6182                           ;SlaveLiofilizadorVer1.c: 523:              Send_To_MB(3);
  6183                           
  6184                           
  6185                           ;SlaveLiofilizadorVer1.c: 528:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  6186  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  6187  02B5  0849               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6188  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  6189  02B7  00AD               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  6190  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  6191  02B9  0848               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6192  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  6193  02BB  00AC               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  6194  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  6195  02BD  0847               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6196  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  6197  02BF  00AB               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  6198  02C0  1683               	bsf	3,5	;RP0=1, select bank1
  6199  02C1  0846               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6200  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  6201  02C3  00AA               	movwf	EEPROM_24C1025_Write_Str@mem_add
  6202  02C4  309B               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  6203  02C5  00DF               	movwf	??_Decodify_Command
  6204  02C6  085F               	movf	??_Decodify_Command,w
  6205  02C7  00AE               	movwf	EEPROM_24C1025_Write_Str@data
  6206  02C8  1683               	bsf	3,5	;RP0=1, select bank3
  6207  02C9  1703               	bsf	3,6	;RP1=1, select bank3
  6208  02CA  0816               	movf	(_usart_protocol^(0+384)+6),w
  6209  02CB  120A  118A  26BD  120A  118A  	fcall	_EEPROM_24C1025_Write_Str
  6210  02D0  293C               	goto	L6
  6211  02D1                     l5647:	
  6212                           ;SlaveLiofilizadorVer1.c: 531:              Send_To_MB(3);
  6213                           
  6214                           
  6215                           ;SlaveLiofilizadorVer1.c: 535:              {;SlaveLiofilizadorVer1.c: 536:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  6216  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  6217  02D2  0849               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6218  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  6219  02D4  00AC               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  6220  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  6221  02D6  0848               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6222  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  6223  02D8  00AB               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  6224  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  6225  02DA  0847               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6226  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  6227  02DC  00AA               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  6228  02DD  1683               	bsf	3,5	;RP0=1, select bank1
  6229  02DE  0846               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6230  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  6231  02E0  00A9               	movwf	EEPROM_24C1025_Read_Str@mem_add
  6232  02E1  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6233  02E2  00DF               	movwf	??_Decodify_Command
  6234  02E3  085F               	movf	??_Decodify_Command,w
  6235  02E4  00AD               	movwf	EEPROM_24C1025_Read_Str@buffer
  6236  02E5  1683               	bsf	3,5	;RP0=1, select bank3
  6237  02E6  1703               	bsf	3,6	;RP1=1, select bank3
  6238  02E7  0816               	movf	(_usart_protocol^(0+384)+6),w
  6239  02E8  160A  118A  2686  120A  118A  	fcall	_EEPROM_24C1025_Read_Str
  6240                           
  6241                           ;SlaveLiofilizadorVer1.c: 540:              Send_To_MB(strlen(buffer)+1);
  6242  02ED  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6243  02EE  160A  158A  2370  120A  118A  	fcall	_strlen
  6244  02F3  0820               	movf	?_strlen,w
  6245  02F4  3E01               	addlw	1
  6246  02F5  286D               	goto	L7
  6247  02F6                     l5651:
  6248                           
  6249                           ;SlaveLiofilizadorVer1.c: 546:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  6250  02F6  1683               	bsf	3,5	;RP0=1, select bank3
  6251  02F7  1703               	bsf	3,6	;RP1=1, select bank3
  6252  02F8  0817               	movf	(_usart_protocol^(0+384)+7),w
  6253  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  6254  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  6255  02FB  00DF               	movwf	??_Decodify_Command
  6256  02FC  01E0               	clrf	??_Decodify_Command+1
  6257  02FD  085F               	movf	??_Decodify_Command,w
  6258  02FE  00D8               	movwf	EEPROM_24C1025_Fill_All@value
  6259  02FF  0860               	movf	??_Decodify_Command+1,w
  6260  0300  00D9               	movwf	EEPROM_24C1025_Fill_All@value+1
  6261  0301  1683               	bsf	3,5	;RP0=1, select bank3
  6262  0302  1703               	bsf	3,6	;RP1=1, select bank3
  6263  0303  0816               	movf	(_usart_protocol^(0+384)+6),w
  6264  0304  160A  158A  26D2  120A  118A  	fcall	_EEPROM_24C1025_Fill_All
  6265  0309  293C               	goto	L6
  6266  030A                     l5657:	
  6267                           ;SlaveLiofilizadorVer1.c: 548:              Send_To_MB(3);
  6268                           
  6269                           
  6270                           ;SlaveLiofilizadorVer1.c: 553:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  6271  030A  1683               	bsf	3,5	;RP0=1, select bank3
  6272  030B  1703               	bsf	3,6	;RP1=1, select bank3
  6273  030C  0816               	movf	(_usart_protocol^(0+384)+6),w
  6274  030D  1283               	bcf	3,5	;RP0=0, select bank0
  6275  030E  1303               	bcf	3,6	;RP1=0, select bank0
  6276  030F  00DF               	movwf	??_Decodify_Command
  6277  0310  01E0               	clrf	??_Decodify_Command+1
  6278  0311  085F               	movf	??_Decodify_Command,w
  6279  0312  00D6               	movwf	PROCULUS_Show_Screen@screen
  6280  0313  0860               	movf	??_Decodify_Command+1,w
  6281  0314  00D7               	movwf	PROCULUS_Show_Screen@screen+1
  6282  0315  160A  158A  22E7  120A  118A  	fcall	_PROCULUS_Show_Screen
  6283  031A  293C               	goto	L6
  6284  031B                     l5663:	
  6285                           ;SlaveLiofilizadorVer1.c: 554:              Send_To_MB(3);
  6286                           
  6287                           
  6288                           ;SlaveLiofilizadorVer1.c: 559:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  6289  031B  1683               	bsf	3,5	;RP0=1, select bank3
  6290  031C  1703               	bsf	3,6	;RP1=1, select bank3
  6291  031D  0816               	movf	(_usart_protocol^(0+384)+6),w
  6292  031E  1283               	bcf	3,5	;RP0=0, select bank0
  6293  031F  1303               	bcf	3,6	;RP1=0, select bank0
  6294  0320  00DF               	movwf	??_Decodify_Command
  6295  0321  01E0               	clrf	??_Decodify_Command+1
  6296  0322  085F               	movf	??_Decodify_Command,w
  6297  0323  00E0               	movwf	??_Decodify_Command+1
  6298  0324  01DF               	clrf	??_Decodify_Command
  6299  0325  1683               	bsf	3,5	;RP0=1, select bank3
  6300  0326  1703               	bsf	3,6	;RP1=1, select bank3
  6301  0327  0817               	movf	(_usart_protocol^(0+384)+7),w
  6302  0328  1283               	bcf	3,5	;RP0=0, select bank0
  6303  0329  1303               	bcf	3,6	;RP1=0, select bank0
  6304  032A  075F               	addwf	??_Decodify_Command,w
  6305  032B  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
  6306  032C  3000               	movlw	0
  6307  032D  1803               	skipnc
  6308  032E  3001               	movlw	1
  6309  032F  0760               	addwf	??_Decodify_Command+1,w
  6310  0330  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  6311  0331  160A  158A  2429  120A  118A  	fcall	_PROCULUS_Buzzer
  6312  0336  293C               	goto	L6
  6313  0337                     l5669:	
  6314                           ;SlaveLiofilizadorVer1.c: 561:              Send_To_MB(3);
  6315                           
  6316                           
  6317                           ;SlaveLiofilizadorVer1.c: 565:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  6318  0337  1683               	bsf	3,5	;RP0=1, select bank3
  6319  0338  1703               	bsf	3,6	;RP1=1, select bank3
  6320  0339  0816               	movf	(_usart_protocol^(0+384)+6),w
  6321  033A  1283               	bcf	3,5	;RP0=0, select bank0
  6322  033B  1303               	bcf	3,6	;RP1=0, select bank0
  6323  033C  00DF               	movwf	??_Decodify_Command
  6324  033D  01E0               	clrf	??_Decodify_Command+1
  6325  033E  085F               	movf	??_Decodify_Command,w
  6326  033F  00E0               	movwf	??_Decodify_Command+1
  6327  0340  01DF               	clrf	??_Decodify_Command
  6328  0341  1683               	bsf	3,5	;RP0=1, select bank3
  6329  0342  1703               	bsf	3,6	;RP1=1, select bank3
  6330  0343  0817               	movf	(_usart_protocol^(0+384)+7),w
  6331  0344  1283               	bcf	3,5	;RP0=0, select bank0
  6332  0345  1303               	bcf	3,6	;RP1=0, select bank0
  6333  0346  075F               	addwf	??_Decodify_Command,w
  6334  0347  00DA               	movwf	PROCULUS_VP_Write_String@vp
  6335  0348  3000               	movlw	0
  6336  0349  1803               	skipnc
  6337  034A  3001               	movlw	1
  6338  034B  0760               	addwf	??_Decodify_Command+1,w
  6339  034C  00DB               	movwf	PROCULUS_VP_Write_String@vp+1
  6340  034D  3098               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  6341  034E  00E1               	movwf	??_Decodify_Command+2
  6342  034F  0861               	movf	??_Decodify_Command+2,w
  6343  0350  00DC               	movwf	PROCULUS_VP_Write_String@text
  6344  0351  160A  158A  2328  120A  118A  	fcall	_PROCULUS_VP_Write_String
  6345  0356  293C               	goto	L6
  6346  0357                     l5675:	
  6347                           ;SlaveLiofilizadorVer1.c: 568:              Send_To_MB(3);
  6348                           
  6349                           
  6350                           ;SlaveLiofilizadorVer1.c: 574:              if(usart_protocol.value[0]==0)
  6351  0357  1683               	bsf	3,5	;RP0=1, select bank3
  6352  0358  1703               	bsf	3,6	;RP1=1, select bank3
  6353  0359  0816               	movf	(_usart_protocol^(0+384)+6),w
  6354  035A  1D03               	btfss	3,2
  6355  035B  2B67               	goto	l5681
  6356                           
  6357                           ;SlaveLiofilizadorVer1.c: 575:                 {;SlaveLiofilizadorVer1.c: 576:          
      +                                 if(!usart_protocol.value[1])
  6358  035C  0817               	movf	(_usart_protocol^(0+384)+7),w
  6359  035D  1D03               	btfss	3,2
  6360  035E  2B63               	goto	l422
  6361                           
  6362                           ;SlaveLiofilizadorVer1.c: 577:                    PORTCbits.RC0=0;
  6363  035F  1283               	bcf	3,5	;RP0=0, select bank0
  6364  0360  1303               	bcf	3,6	;RP1=0, select bank0
  6365  0361  1007               	bcf	7,0	;volatile
  6366  0362  293C               	goto	L6
  6367  0363                     l422:	
  6368                           ;SlaveLiofilizadorVer1.c: 578:                 else
  6369                           
  6370                           
  6371                           ;SlaveLiofilizadorVer1.c: 579:                    PORTCbits.RC0=1;
  6372  0363  1283               	bcf	3,5	;RP0=0, select bank0
  6373  0364  1303               	bcf	3,6	;RP1=0, select bank0
  6374  0365  1407               	bsf	7,0	;volatile
  6375  0366  293C               	goto	L6
  6376  0367                     l5681:
  6377  0367  0316               	decf	(_usart_protocol^(0+384)+6),w
  6378  0368  1D03               	btfss	3,2
  6379  0369  293C               	goto	L6
  6380                           
  6381                           ;SlaveLiofilizadorVer1.c: 582:                      {;SlaveLiofilizadorVer1.c: 583:     
      +                                            if(!usart_protocol.value[1])
  6382  036A  0817               	movf	(_usart_protocol^(0+384)+7),w
  6383  036B  1D03               	btfss	3,2
  6384  036C  2B71               	goto	l426
  6385                           
  6386                           ;SlaveLiofilizadorVer1.c: 584:                          PORTCbits.RC1=0;
  6387  036D  1283               	bcf	3,5	;RP0=0, select bank0
  6388  036E  1303               	bcf	3,6	;RP1=0, select bank0
  6389  036F  1087               	bcf	7,1	;volatile
  6390  0370  293C               	goto	L6
  6391  0371                     l426:	
  6392                           ;SlaveLiofilizadorVer1.c: 585:                       else
  6393                           
  6394                           
  6395                           ;SlaveLiofilizadorVer1.c: 586:                          PORTCbits.RC1=1;
  6396  0371  1283               	bcf	3,5	;RP0=0, select bank0
  6397  0372  1303               	bcf	3,6	;RP1=0, select bank0
  6398  0373  1487               	bsf	7,1	;volatile
  6399  0374  293C               	goto	L6
  6400  0375                     l5693:	
  6401                           ;SlaveLiofilizadorVer1.c: 588:              Send_To_MB(3);
  6402                           
  6403  0375  1703               	bsf	3,6	;RP1=1, select bank3
  6404  0376  0814               	movf	(_usart_protocol^(0+384)+4),w
  6405  0377  1283               	bcf	3,5	;RP0=0, select bank0
  6406  0378  1303               	bcf	3,6	;RP1=0, select bank0
  6407  0379  00DF               	movwf	??_Decodify_Command
  6408  037A  01E0               	clrf	??_Decodify_Command+1
  6409                           
  6410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6411                           ; Switch size 1, requested type "simple"
  6412                           ; Number of cases is 1, Range of values is 0 to 0
  6413                           ; switch strategies available:
  6414                           ; Name         Instructions Cycles
  6415                           ; simple_byte            4     3 (average)
  6416                           ; direct_byte           11     8 (fixed)
  6417                           ; jumptable            260     6 (fixed)
  6418                           ;	Chosen strategy is simple_byte
  6419  037B  0860               	movf	??_Decodify_Command+1,w
  6420  037C  3A00               	xorlw	0	; case 0
  6421  037D  1903               	skipnz
  6422  037E  2B80               	goto	l5851
  6423  037F  2BC7               	goto	l428
  6424  0380                     l5851:
  6425                           
  6426                           ; Switch size 1, requested type "simple"
  6427                           ; Number of cases is 23, Range of values is 2 to 65
  6428                           ; switch strategies available:
  6429                           ; Name         Instructions Cycles
  6430                           ; simple_byte           70    36 (average)
  6431                           ; direct_byte          203    11 (fixed)
  6432                           ; jumptable            263     9 (fixed)
  6433                           ;	Chosen strategy is simple_byte
  6434  0380  085F               	movf	??_Decodify_Command,w
  6435  0381  3A02               	xorlw	2	; case 2
  6436  0382  1903               	skipnz
  6437  0383  28E3               	goto	l5555
  6438  0384  3A01               	xorlw	1	; case 3
  6439  0385  1903               	skipnz
  6440  0386  291D               	goto	l5563
  6441  0387  3A0B               	xorlw	11	; case 8
  6442  0388  1903               	skipnz
  6443  0389  292C               	goto	l5567
  6444  038A  3A01               	xorlw	1	; case 9
  6445  038B  1903               	skipnz
  6446  038C  2946               	goto	l5571
  6447  038D  3A03               	xorlw	3	; case 10
  6448  038E  1903               	skipnz
  6449  038F  295E               	goto	l5577
  6450  0390  3A01               	xorlw	1	; case 11
  6451  0391  1903               	skipnz
  6452  0392  298F               	goto	l5587
  6453  0393  3A07               	xorlw	7	; case 12
  6454  0394  1903               	skipnz
  6455  0395  29AF               	goto	l5593
  6456  0396  3A01               	xorlw	1	; case 13
  6457  0397  1903               	skipnz
  6458  0398  29BC               	goto	l5599
  6459  0399  3A1C               	xorlw	28	; case 17
  6460  039A  1903               	skipnz
  6461  039B  29CA               	goto	l5605
  6462  039C  3A03               	xorlw	3	; case 18
  6463  039D  1903               	skipnz
  6464  039E  29EB               	goto	l5611
  6465  039F  3A01               	xorlw	1	; case 19
  6466  03A0  1903               	skipnz
  6467  03A1  2A12               	goto	l5617
  6468  03A2  3A07               	xorlw	7	; case 20
  6469  03A3  1903               	skipnz
  6470  03A4  2A42               	goto	l5623
  6471  03A5  3A01               	xorlw	1	; case 21
  6472  03A6  1903               	skipnz
  6473  03A7  2AB4               	goto	l5641
  6474  03A8  3A03               	xorlw	3	; case 22
  6475  03A9  1903               	skipnz
  6476  03AA  2AD1               	goto	l5647
  6477  03AB  3A01               	xorlw	1	; case 23
  6478  03AC  1903               	skipnz
  6479  03AD  2A8F               	goto	l5635
  6480  03AE  3A0F               	xorlw	15	; case 24
  6481  03AF  1903               	skipnz
  6482  03B0  2A60               	goto	l5629
  6483  03B1  3A01               	xorlw	1	; case 25
  6484  03B2  1903               	skipnz
  6485  03B3  2AF6               	goto	l5651
  6486  03B4  3A03               	xorlw	3	; case 26
  6487  03B5  1903               	skipnz
  6488  03B6  287B               	goto	l5539
  6489  03B7  3A38               	xorlw	56	; case 34
  6490  03B8  1903               	skipnz
  6491  03B9  2B37               	goto	l5669
  6492  03BA  3A06               	xorlw	6	; case 36
  6493  03BB  1903               	skipnz
  6494  03BC  2B1B               	goto	l5663
  6495  03BD  3A01               	xorlw	1	; case 37
  6496  03BE  1903               	skipnz
  6497  03BF  2B0A               	goto	l5657
  6498  03C0  3A15               	xorlw	21	; case 48
  6499  03C1  1903               	skipnz
  6500  03C2  2B57               	goto	l5675
  6501  03C3  3A71               	xorlw	113	; case 65
  6502  03C4  1903               	skipnz
  6503  03C5  2862               	goto	l5533
  6504  03C6  2BC7               	goto	l428
  6505  03C7                     l428:
  6506  03C7  0008               	return
  6507  03C8                     __end_of_Decodify_Command:
  6508                           
  6509                           	psect	text13
  6510  105B                     __ptext13:	
  6511 ;; *************** function _strcpy *****************
  6512 ;; Defined at:
  6513 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strcpy.c"
  6514 ;; Parameters:    Size  Location     Type
  6515 ;;  to              1    wreg     PTR unsigned char 
  6516 ;;		 -> buffer(33), 
  6517 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  6518 ;;		 -> STR_1(8), 
  6519 ;; Auto vars:     Size  Location     Type
  6520 ;;  to              1    2[BANK0 ] PTR unsigned char 
  6521 ;;		 -> buffer(33), 
  6522 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  6523 ;;		 -> buffer(33), 
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  1    wreg      PTR unsigned char 
  6526 ;; Registers used:
  6527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6528 ;; Tracked objects:
  6529 ;;		On entry : 300/0
  6530 ;;		On exit  : B00/800
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6533 ;;      Params:         0       1       0       0       0
  6534 ;;      Locals:         0       2       0       0       0
  6535 ;;      Temps:          0       1       0       0       0
  6536 ;;      Totals:         0       4       0       0       0
  6537 ;;Total ram usage:        4 bytes
  6538 ;; Hardware stack levels used: 2
  6539 ;; Hardware stack levels required when called: 1
  6540 ;; This function calls:
  6541 ;;		Nothing
  6542 ;; This function is called by:
  6543 ;;		_Decodify_Command
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           
  6548                           ;psect for function _strcpy
  6549  105B                     _strcpy:
  6550                           
  6551                           ;incstack = 0
  6552                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  6553                           ;strcpy@to stored from wreg
  6554  105B  00A2               	movwf	strcpy@to
  6555  105C  0822               	movf	strcpy@to,w
  6556  105D  00A1               	movwf	??_strcpy
  6557  105E  0821               	movf	??_strcpy,w
  6558  105F  00A3               	movwf	strcpy@cp
  6559  1060                     l4433:
  6560  1060  0820               	movf	strcpy@from,w
  6561  1061  0084               	movwf	4
  6562  1062  160A  118A  200A  160A  118A  	fcall	stringdir
  6563  1067  00A1               	movwf	??_strcpy
  6564  1068  0823               	movf	strcpy@cp,w
  6565  1069  0084               	movwf	4
  6566  106A  0821               	movf	??_strcpy,w
  6567  106B  1783               	bsf	3,7	;select IRP bank2
  6568  106C  0080               	movwf	0
  6569  106D  0800               	movf	0,w
  6570  106E  1903               	btfsc	3,2
  6571  106F  0008               	return
  6572  1070  3001               	movlw	1
  6573  1071  00A1               	movwf	??_strcpy
  6574  1072  0821               	movf	??_strcpy,w
  6575  1073  07A3               	addwf	strcpy@cp,f
  6576  1074  3001               	movlw	1
  6577  1075  00A1               	movwf	??_strcpy
  6578  1076  0821               	movf	??_strcpy,w
  6579  1077  07A0               	addwf	strcpy@from,f
  6580  1078  2860               	goto	l4433
  6581  1079                     __end_of_strcpy:
  6582                           
  6583                           	psect	text14
  6584  1F55                     __ptext14:	
  6585 ;; *************** function _USART_to_Protocol *****************
  6586 ;; Defined at:
  6587 ;;		line 77 in file "usart.c"
  6588 ;; Parameters:    Size  Location     Type
  6589 ;;  usart_protoc    1    wreg     PTR struct .
  6590 ;;		 -> usart_protocol(58), 
  6591 ;; Auto vars:     Size  Location     Type
  6592 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  6593 ;;		 -> usart_protocol(58), 
  6594 ;;  i               2    2[BANK0 ] int 
  6595 ;; Return value:  Size  Location     Type
  6596 ;;                  1    wreg      void 
  6597 ;; Registers used:
  6598 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6599 ;; Tracked objects:
  6600 ;;		On entry : 300/100
  6601 ;;		On exit  : 0/0
  6602 ;;		Unchanged: 0/0
  6603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6604 ;;      Params:         0       0       0       0       0
  6605 ;;      Locals:         0       3       0       0       0
  6606 ;;      Temps:          0       2       0       0       0
  6607 ;;      Totals:         0       5       0       0       0
  6608 ;;Total ram usage:        5 bytes
  6609 ;; Hardware stack levels used: 1
  6610 ;; Hardware stack levels required when called: 1
  6611 ;; This function calls:
  6612 ;;		Nothing
  6613 ;; This function is called by:
  6614 ;;		_Decodify_Command
  6615 ;; This function uses a non-reentrant model
  6616 ;;
  6617                           
  6618                           
  6619                           ;psect for function _USART_to_Protocol
  6620  1F55                     _USART_to_Protocol:
  6621                           
  6622                           ;incstack = 0
  6623                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  6624                           ;USART_to_Protocol@usart_protocol stored from wreg
  6625  1F55  1283               	bcf	3,5	;RP0=0, select bank0
  6626  1F56  00A4               	movwf	USART_to_Protocol@usart_protocol
  6627                           
  6628                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  6629  1F57  0824               	movf	USART_to_Protocol@usart_protocol,w
  6630  1F58  0084               	movwf	4
  6631  1F59  1703               	bsf	3,6	;RP1=1, select bank2
  6632  1F5A  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  6633  1F5B  1783               	bsf	3,7	;select IRP bank2
  6634  1F5C  0080               	movwf	0
  6635  1F5D  0A84               	incf	4,f
  6636  1F5E  0810               	movf	_usart_buffer^(0+256),w	;volatile
  6637  1F5F  0080               	movwf	0
  6638                           
  6639                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  6640  1F60  0812               	movf	(_usart_buffer^(0+256)+2),w	;volatile
  6641  1F61  1303               	bcf	3,6	;RP1=0, select bank0
  6642  1F62  00A0               	movwf	??_USART_to_Protocol
  6643  1F63  0824               	movf	USART_to_Protocol@usart_protocol,w
  6644  1F64  3E02               	addlw	2
  6645  1F65  0084               	movwf	4
  6646  1F66  0820               	movf	??_USART_to_Protocol,w
  6647  1F67  0080               	movwf	0
  6648                           
  6649                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  6650  1F68  1703               	bsf	3,6	;RP1=1, select bank2
  6651  1F69  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  6652  1F6A  1303               	bcf	3,6	;RP1=0, select bank0
  6653  1F6B  00A0               	movwf	??_USART_to_Protocol
  6654  1F6C  0824               	movf	USART_to_Protocol@usart_protocol,w
  6655  1F6D  3E03               	addlw	3
  6656  1F6E  0084               	movwf	4
  6657  1F6F  0820               	movf	??_USART_to_Protocol,w
  6658  1F70  0080               	movwf	0
  6659                           
  6660                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  6661  1F71  1703               	bsf	3,6	;RP1=1, select bank2
  6662  1F72  0814               	movf	(_usart_buffer^(0+256)+4),w	;volatile
  6663  1F73  1303               	bcf	3,6	;RP1=0, select bank0
  6664  1F74  00A0               	movwf	??_USART_to_Protocol
  6665  1F75  0824               	movf	USART_to_Protocol@usart_protocol,w
  6666  1F76  3E04               	addlw	4
  6667  1F77  0084               	movwf	4
  6668  1F78  0820               	movf	??_USART_to_Protocol,w
  6669  1F79  0080               	movwf	0
  6670                           
  6671                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  6672  1F7A  1703               	bsf	3,6	;RP1=1, select bank2
  6673  1F7B  0815               	movf	(_usart_buffer^(0+256)+5),w	;volatile
  6674  1F7C  1303               	bcf	3,6	;RP1=0, select bank0
  6675  1F7D  00A0               	movwf	??_USART_to_Protocol
  6676  1F7E  0824               	movf	USART_to_Protocol@usart_protocol,w
  6677  1F7F  3E05               	addlw	5
  6678  1F80  0084               	movwf	4
  6679  1F81  0820               	movf	??_USART_to_Protocol,w
  6680  1F82  0080               	movwf	0
  6681                           
  6682                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  6683  1F83  01A2               	clrf	USART_to_Protocol@i
  6684  1F84  01A3               	clrf	USART_to_Protocol@i+1
  6685  1F85                     l4427:
  6686  1F85  0824               	movf	USART_to_Protocol@usart_protocol,w
  6687  1F86  3E05               	addlw	5
  6688  1F87  0084               	movwf	4
  6689  1F88  0823               	movf	USART_to_Protocol@i+1,w
  6690  1F89  3A80               	xorlw	128
  6691  1F8A  00A0               	movwf	??_USART_to_Protocol
  6692  1F8B  3080               	movlw	128
  6693  1F8C  0220               	subwf	??_USART_to_Protocol,w
  6694  1F8D  1D03               	skipz
  6695  1F8E  2F91               	goto	u3785
  6696  1F8F  0800               	movf	0,w
  6697  1F90  0222               	subwf	USART_to_Protocol@i,w
  6698  1F91                     u3785:
  6699  1F91  1803               	btfsc	3,0
  6700  1F92  0008               	return
  6701                           
  6702                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  6703  1F93  1283               	bcf	3,5	;RP0=0, select bank0
  6704  1F94  1303               	bcf	3,6	;RP1=0, select bank0
  6705  1F95  0822               	movf	USART_to_Protocol@i,w
  6706  1F96  3E16               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  6707  1F97  0084               	movwf	4
  6708  1F98  1783               	bsf	3,7	;select IRP bank2
  6709  1F99  0800               	movf	0,w
  6710  1F9A  00A0               	movwf	??_USART_to_Protocol
  6711  1F9B  0822               	movf	USART_to_Protocol@i,w
  6712  1F9C  0724               	addwf	USART_to_Protocol@usart_protocol,w
  6713  1F9D  00A1               	movwf	??_USART_to_Protocol+1
  6714  1F9E  0821               	movf	??_USART_to_Protocol+1,w
  6715  1F9F  3E06               	addlw	6
  6716  1FA0  0084               	movwf	4
  6717  1FA1  0820               	movf	??_USART_to_Protocol,w
  6718  1FA2  0080               	movwf	0
  6719  1FA3  3001               	movlw	1
  6720  1FA4  07A2               	addwf	USART_to_Protocol@i,f
  6721  1FA5  1803               	skipnc
  6722  1FA6  0AA3               	incf	USART_to_Protocol@i+1,f
  6723  1FA7  3000               	movlw	0
  6724  1FA8  07A3               	addwf	USART_to_Protocol@i+1,f
  6725  1FA9  2F85               	goto	l4427
  6726  1FAA                     __end_of_USART_to_Protocol:
  6727                           
  6728                           	psect	text15
  6729  1C96                     __ptext15:	
  6730 ;; *************** function _Send_To_MB *****************
  6731 ;; Defined at:
  6732 ;;		line 598 in file "SlaveLiofilizadorVer1.c"
  6733 ;; Parameters:    Size  Location     Type
  6734 ;;  size            1    wreg     unsigned char 
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;  size            1    1[BANK0 ] unsigned char 
  6737 ;; Return value:  Size  Location     Type
  6738 ;;                  1    wreg      void 
  6739 ;; Registers used:
  6740 ;;		wreg, status,2, status,0, pclath, cstack
  6741 ;; Tracked objects:
  6742 ;;		On entry : 0/800
  6743 ;;		On exit  : 300/100
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6746 ;;      Params:         0       0       0       0       0
  6747 ;;      Locals:         0       1       0       0       0
  6748 ;;      Temps:          0       0       0       0       0
  6749 ;;      Totals:         0       1       0       0       0
  6750 ;;Total ram usage:        1 bytes
  6751 ;; Hardware stack levels used: 1
  6752 ;; Hardware stack levels required when called: 2
  6753 ;; This function calls:
  6754 ;;		_USART_putc
  6755 ;; This function is called by:
  6756 ;;		_Decodify_Command
  6757 ;; This function uses a non-reentrant model
  6758 ;;
  6759                           
  6760                           
  6761                           ;psect for function _Send_To_MB
  6762  1C96                     _Send_To_MB:
  6763                           
  6764                           ;incstack = 0
  6765                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  6766                           ;Send_To_MB@size stored from wreg
  6767  1C96  1283               	bcf	3,5	;RP0=0, select bank0
  6768  1C97  1303               	bcf	3,6	;RP1=0, select bank0
  6769  1C98  00A1               	movwf	Send_To_MB@size
  6770                           
  6771                           ;SlaveLiofilizadorVer1.c: 600:      USART_putc(0xAA);
  6772  1C99  30AA               	movlw	170
  6773  1C9A  160A  158A  22C6  160A  158A  	fcall	_USART_putc
  6774                           
  6775                           ;SlaveLiofilizadorVer1.c: 601:      USART_putc(0xBB);
  6776  1C9F  30BB               	movlw	187
  6777  1CA0  160A  158A  22C6  160A  158A  	fcall	_USART_putc
  6778                           
  6779                           ;SlaveLiofilizadorVer1.c: 602:      USART_putc(Board_Number);
  6780  1CA5  0838               	movf	_Board_Number^(0+128),w
  6781  1CA6  160A  158A  22C6  160A  158A  	fcall	_USART_putc
  6782                           
  6783                           ;SlaveLiofilizadorVer1.c: 603:      USART_putc(0x00);
  6784  1CAB  3000               	movlw	0
  6785  1CAC  160A  158A  22C6  160A  158A  	fcall	_USART_putc
  6786                           
  6787                           ;SlaveLiofilizadorVer1.c: 604:      USART_putc(usart_protocol.command);
  6788  1CB1  1703               	bsf	3,6	;RP1=1, select bank3
  6789  1CB2  0814               	movf	(_usart_protocol^(0+384)+4),w
  6790  1CB3  160A  158A  22C6  160A  158A  	fcall	_USART_putc
  6791                           
  6792                           ;SlaveLiofilizadorVer1.c: 605:      USART_putc(size);
  6793  1CB8  1283               	bcf	3,5	;RP0=0, select bank0
  6794  1CB9  0821               	movf	Send_To_MB@size,w
  6795  1CBA  160A  158A  22C6   	fcall	_USART_putc
  6796  1CBD  0008               	return
  6797  1CBE                     __end_of_Send_To_MB:
  6798                           
  6799                           	psect	text16
  6800  1A92                     __ptext16:	
  6801 ;; *************** function _Send_Reply_OK *****************
  6802 ;; Defined at:
  6803 ;;		line 609 in file "SlaveLiofilizadorVer1.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;		None
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;		None
  6808 ;; Return value:  Size  Location     Type
  6809 ;;                  1    wreg      void 
  6810 ;; Registers used:
  6811 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6812 ;; Tracked objects:
  6813 ;;		On entry : 300/100
  6814 ;;		On exit  : 300/100
  6815 ;;		Unchanged: 0/0
  6816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6817 ;;      Params:         0       0       0       0       0
  6818 ;;      Locals:         0       0       0       0       0
  6819 ;;      Temps:          0       0       0       0       0
  6820 ;;      Totals:         0       0       0       0       0
  6821 ;;Total ram usage:        0 bytes
  6822 ;; Hardware stack levels used: 1
  6823 ;; Hardware stack levels required when called: 3
  6824 ;; This function calls:
  6825 ;;		_USART_put_string
  6826 ;; This function is called by:
  6827 ;;		_Decodify_Command
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831                           
  6832                           ;psect for function _Send_Reply_OK
  6833  1A92                     _Send_Reply_OK:
  6834                           
  6835                           ;SlaveLiofilizadorVer1.c: 610:      USART_put_string("OK");
  6836                           
  6837                           ;incstack = 0
  6838                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6839  1A92  3049               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  6840  1A93  1283               	bcf	3,5	;RP0=0, select bank0
  6841  1A94  00A1               	movwf	USART_put_string@vetor
  6842  1A95  3080               	movlw	128
  6843  1A96  00A2               	movwf	USART_put_string@vetor+1
  6844  1A97  160A  158A  254B   	fcall	_USART_put_string
  6845  1A9A  0008               	return
  6846  1A9B                     __end_of_Send_Reply_OK:
  6847                           
  6848                           	psect	text17
  6849  1D4B                     __ptext17:	
  6850 ;; *************** function _USART_put_string *****************
  6851 ;; Defined at:
  6852 ;;		line 167 in file "usart.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  6855 ;;		 -> STR_2(3), buffer(33), 
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  6858 ;;		 -> STR_2(3), buffer(33), 
  6859 ;; Return value:  Size  Location     Type
  6860 ;;                  1    wreg      void 
  6861 ;; Registers used:
  6862 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6863 ;; Tracked objects:
  6864 ;;		On entry : 300/800
  6865 ;;		On exit  : 300/100
  6866 ;;		Unchanged: 0/0
  6867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6868 ;;      Params:         0       2       0       0       0
  6869 ;;      Locals:         0       2       0       0       0
  6870 ;;      Temps:          0       0       0       0       0
  6871 ;;      Totals:         0       4       0       0       0
  6872 ;;Total ram usage:        4 bytes
  6873 ;; Hardware stack levels used: 1
  6874 ;; Hardware stack levels required when called: 2
  6875 ;; This function calls:
  6876 ;;		_USART_putc
  6877 ;; This function is called by:
  6878 ;;		_Decodify_Command
  6879 ;;		_Send_Reply_OK
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883                           
  6884                           ;psect for function _USART_put_string
  6885  1D4B                     _USART_put_string:
  6886                           
  6887                           ;usart.c: 167: void USART_put_string(char *vetor);usart.c: 168: {;usart.c: 169:     char
      +                           *ptr;;usart.c: 170:     ptr=vetor;
  6888                           
  6889                           ;incstack = 0
  6890                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6891  1D4B  0821               	movf	USART_put_string@vetor,w
  6892  1D4C  00A3               	movwf	USART_put_string@ptr
  6893  1D4D  0822               	movf	USART_put_string@vetor+1,w
  6894  1D4E  00A4               	movwf	USART_put_string@ptr+1
  6895  1D4F                     l3737:	
  6896                           ;usart.c: 171:     while(*ptr){
  6897                           
  6898                           
  6899                           ;usart.c: 171:     while(*ptr){
  6900  1D4F  0824               	movf	USART_put_string@ptr+1,w
  6901  1D50  00FF               	movwf	127
  6902  1D51  0823               	movf	USART_put_string@ptr,w
  6903  1D52  0084               	movwf	4
  6904  1D53  160A  118A  2000  160A  158A  	fcall	stringtab
  6905  1D58  3A00               	xorlw	0
  6906  1D59  1903               	btfsc	3,2
  6907  1D5A  2D71               	goto	l3739
  6908                           
  6909                           ;usart.c: 172:         USART_putc(*ptr);
  6910  1D5B  0824               	movf	USART_put_string@ptr+1,w
  6911  1D5C  00FF               	movwf	127
  6912  1D5D  0823               	movf	USART_put_string@ptr,w
  6913  1D5E  0084               	movwf	4
  6914  1D5F  160A  118A  2000  160A  158A  	fcall	stringtab
  6915  1D64  160A  158A  22C6  160A  158A  	fcall	_USART_putc
  6916                           
  6917                           ;usart.c: 173:         ptr++;
  6918  1D69  3001               	movlw	1
  6919  1D6A  1283               	bcf	3,5	;RP0=0, select bank0
  6920  1D6B  07A3               	addwf	USART_put_string@ptr,f
  6921  1D6C  1803               	skipnc
  6922  1D6D  0AA4               	incf	USART_put_string@ptr+1,f
  6923  1D6E  3000               	movlw	0
  6924  1D6F  07A4               	addwf	USART_put_string@ptr+1,f
  6925  1D70  2D4F               	goto	l3737
  6926  1D71                     l3739:
  6927                           
  6928                           ;usart.c: 175:     USART_putc(*ptr);
  6929  1D71  0824               	movf	USART_put_string@ptr+1,w
  6930  1D72  00FF               	movwf	127
  6931  1D73  0823               	movf	USART_put_string@ptr,w
  6932  1D74  0084               	movwf	4
  6933  1D75  160A  118A  2000  160A  158A  	fcall	stringtab
  6934  1D7A  160A  158A  22C6   	fcall	_USART_putc
  6935  1D7D  0008               	return
  6936  1D7E                     __end_of_USART_put_string:
  6937                           
  6938                           	psect	text18
  6939  1142                     __ptext18:	
  6940 ;; *************** function _Save_Log *****************
  6941 ;; Defined at:
  6942 ;;		line 1005 in file "SlaveLiofilizadorVer1.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;  add_datalog     4   56[BANK0 ] unsigned long 
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;		None
  6947 ;; Return value:  Size  Location     Type
  6948 ;;                  1    wreg      void 
  6949 ;; Registers used:
  6950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6951 ;; Tracked objects:
  6952 ;;		On entry : 300/0
  6953 ;;		On exit  : 0/0
  6954 ;;		Unchanged: 0/0
  6955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6956 ;;      Params:         0       4       0       0       0
  6957 ;;      Locals:         0       0       0       0       0
  6958 ;;      Temps:          0       0       0       0       0
  6959 ;;      Totals:         0       4       0       0       0
  6960 ;;Total ram usage:        4 bytes
  6961 ;; Hardware stack levels used: 1
  6962 ;; Hardware stack levels required when called: 5
  6963 ;; This function calls:
  6964 ;;		_EEPROM_24C1025_Write_Int
  6965 ;;		___flmul
  6966 ;;		___fltol
  6967 ;; This function is called by:
  6968 ;;		_Decodify_Command
  6969 ;; This function uses a non-reentrant model
  6970 ;;
  6971                           
  6972                           
  6973                           ;psect for function _Save_Log
  6974  1142                     _Save_Log:
  6975                           
  6976                           ;SlaveLiofilizadorVer1.c: 1006:      EEPROM_24C1025_Write_Int(0x00, add_datalog, Tempera
      +                          tura0*10.0);
  6977                           
  6978                           ;incstack = 0
  6979                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6980  1142  085B               	movf	Save_Log@add_datalog+3,w
  6981  1143  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  6982  1144  085A               	movf	Save_Log@add_datalog+2,w
  6983  1145  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  6984  1146  0859               	movf	Save_Log@add_datalog+1,w
  6985  1147  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  6986  1148  0858               	movf	Save_Log@add_datalog,w
  6987  1149  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  6988  114A  1683               	bsf	3,5	;RP0=1, select bank1
  6989  114B  0827               	movf	(_Temperatura0+3)^(0+128),w
  6990  114C  1283               	bcf	3,5	;RP0=0, select bank0
  6991  114D  00B0               	movwf	___flmul@a+3
  6992  114E  1683               	bsf	3,5	;RP0=1, select bank1
  6993  114F  0826               	movf	(_Temperatura0+2)^(0+128),w
  6994  1150  1283               	bcf	3,5	;RP0=0, select bank0
  6995  1151  00AF               	movwf	___flmul@a+2
  6996  1152  1683               	bsf	3,5	;RP0=1, select bank1
  6997  1153  0825               	movf	(_Temperatura0+1)^(0+128),w
  6998  1154  1283               	bcf	3,5	;RP0=0, select bank0
  6999  1155  00AE               	movwf	___flmul@a+1
  7000  1156  1683               	bsf	3,5	;RP0=1, select bank1
  7001  1157  0824               	movf	_Temperatura0^(0+128),w
  7002  1158  1283               	bcf	3,5	;RP0=0, select bank0
  7003  1159  00AD               	movwf	___flmul@a
  7004  115A  3041               	movlw	65
  7005  115B  00AC               	movwf	___flmul@b+3
  7006  115C  3020               	movlw	32
  7007  115D  00AB               	movwf	___flmul@b+2
  7008  115E  3000               	movlw	0
  7009  115F  00AA               	movwf	___flmul@b+1
  7010  1160  3000               	movlw	0
  7011  1161  00A9               	movwf	___flmul@b
  7012  1162  120A  118A  23C8  160A  118A  	fcall	___flmul
  7013  1167  082C               	movf	?___flmul+3,w
  7014  1168  00C6               	movwf	___fltol@f1+3
  7015  1169  082B               	movf	?___flmul+2,w
  7016  116A  00C5               	movwf	___fltol@f1+2
  7017  116B  082A               	movf	?___flmul+1,w
  7018  116C  00C4               	movwf	___fltol@f1+1
  7019  116D  0829               	movf	?___flmul,w
  7020  116E  00C3               	movwf	___fltol@f1
  7021  116F  160A  118A  20D7  160A  118A  	fcall	___fltol
  7022  1174  0844               	movf	?___fltol+1,w
  7023  1175  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  7024  1176  0843               	movf	?___fltol,w
  7025  1177  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  7026  1178  3000               	movlw	0
  7027  1179  160A  158A  23A6  160A  118A  	fcall	_EEPROM_24C1025_Write_Int
  7028                           
  7029                           ;SlaveLiofilizadorVer1.c: 1007:      EEPROM_24C1025_Write_Int(0x00, add_datalog, Tempera
      +                          tura1*10.0);
  7030  117E  1283               	bcf	3,5	;RP0=0, select bank0
  7031  117F  1303               	bcf	3,6	;RP1=0, select bank0
  7032  1180  085B               	movf	Save_Log@add_datalog+3,w
  7033  1181  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
  7034  1182  085A               	movf	Save_Log@add_datalog+2,w
  7035  1183  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
  7036  1184  0859               	movf	Save_Log@add_datalog+1,w
  7037  1185  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
  7038  1186  0858               	movf	Save_Log@add_datalog,w
  7039  1187  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
  7040  1188  1683               	bsf	3,5	;RP0=1, select bank1
  7041  1189  0823               	movf	(_Temperatura1+3)^(0+128),w
  7042  118A  1283               	bcf	3,5	;RP0=0, select bank0
  7043  118B  00B0               	movwf	___flmul@a+3
  7044  118C  1683               	bsf	3,5	;RP0=1, select bank1
  7045  118D  0822               	movf	(_Temperatura1+2)^(0+128),w
  7046  118E  1283               	bcf	3,5	;RP0=0, select bank0
  7047  118F  00AF               	movwf	___flmul@a+2
  7048  1190  1683               	bsf	3,5	;RP0=1, select bank1
  7049  1191  0821               	movf	(_Temperatura1+1)^(0+128),w
  7050  1192  1283               	bcf	3,5	;RP0=0, select bank0
  7051  1193  00AE               	movwf	___flmul@a+1
  7052  1194  1683               	bsf	3,5	;RP0=1, select bank1
  7053  1195  0820               	movf	_Temperatura1^(0+128),w
  7054  1196  1283               	bcf	3,5	;RP0=0, select bank0
  7055  1197  00AD               	movwf	___flmul@a
  7056  1198  3041               	movlw	65
  7057  1199  00AC               	movwf	___flmul@b+3
  7058  119A  3020               	movlw	32
  7059  119B  00AB               	movwf	___flmul@b+2
  7060  119C  3000               	movlw	0
  7061  119D  00AA               	movwf	___flmul@b+1
  7062  119E  3000               	movlw	0
  7063  119F  00A9               	movwf	___flmul@b
  7064  11A0  120A  118A  23C8  160A  118A  	fcall	___flmul
  7065  11A5  082C               	movf	?___flmul+3,w
  7066  11A6  00C6               	movwf	___fltol@f1+3
  7067  11A7  082B               	movf	?___flmul+2,w
  7068  11A8  00C5               	movwf	___fltol@f1+2
  7069  11A9  082A               	movf	?___flmul+1,w
  7070  11AA  00C4               	movwf	___fltol@f1+1
  7071  11AB  0829               	movf	?___flmul,w
  7072  11AC  00C3               	movwf	___fltol@f1
  7073  11AD  160A  118A  20D7  160A  118A  	fcall	___fltol
  7074  11B2  0844               	movf	?___fltol+1,w
  7075  11B3  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
  7076  11B4  0843               	movf	?___fltol,w
  7077  11B5  00D2               	movwf	EEPROM_24C1025_Write_Int@data
  7078  11B6  3000               	movlw	0
  7079  11B7  160A  158A  23A6   	fcall	_EEPROM_24C1025_Write_Int
  7080  11BA  0008               	return
  7081  11BB                     __end_of_Save_Log:
  7082                           
  7083                           	psect	text19
  7084  10D7                     __ptext19:	
  7085 ;; *************** function ___fltol *****************
  7086 ;; Defined at:
  7087 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  7088 ;; Parameters:    Size  Location     Type
  7089 ;;  f1              4   35[BANK0 ] void 
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;  exp1            1   45[BANK0 ] unsigned char 
  7092 ;;  sign1           1   44[BANK0 ] unsigned char 
  7093 ;; Return value:  Size  Location     Type
  7094 ;;                  4   35[BANK0 ] long 
  7095 ;; Registers used:
  7096 ;;		wreg, status,2, status,0
  7097 ;; Tracked objects:
  7098 ;;		On entry : 300/0
  7099 ;;		On exit  : 300/0
  7100 ;;		Unchanged: 0/0
  7101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7102 ;;      Params:         0       4       0       0       0
  7103 ;;      Locals:         0       2       0       0       0
  7104 ;;      Temps:          0       5       0       0       0
  7105 ;;      Totals:         0      11       0       0       0
  7106 ;;Total ram usage:       11 bytes
  7107 ;; Hardware stack levels used: 1
  7108 ;; Hardware stack levels required when called: 1
  7109 ;; This function calls:
  7110 ;;		Nothing
  7111 ;; This function is called by:
  7112 ;;		_Decodify_Command
  7113 ;;		_Save_Log
  7114 ;; This function uses a non-reentrant model
  7115 ;;
  7116                           
  7117                           
  7118                           ;psect for function ___fltol
  7119  10D7                     ___fltol:
  7120                           
  7121                           ;incstack = 0
  7122                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7123  10D7  1003               	clrc
  7124  10D8  0D45               	rlf	___fltol@f1+2,w
  7125  10D9  0D46               	rlf	___fltol@f1+3,w
  7126  10DA  00C7               	movwf	??___fltol
  7127  10DB  0847               	movf	??___fltol,w
  7128  10DC  00CD               	movwf	___fltol@exp1
  7129  10DD  084D               	movf	___fltol@exp1,w
  7130  10DE  1D03               	btfss	3,2
  7131  10DF  28E9               	goto	l3839
  7132  10E0                     l3835:
  7133  10E0  3000               	movlw	0
  7134  10E1  00C6               	movwf	?___fltol+3
  7135  10E2  3000               	movlw	0
  7136  10E3  00C5               	movwf	?___fltol+2
  7137  10E4  3000               	movlw	0
  7138  10E5  00C4               	movwf	?___fltol+1
  7139  10E6  3000               	movlw	0
  7140  10E7  00C3               	movwf	?___fltol
  7141  10E8  0008               	return
  7142  10E9                     l3839:
  7143  10E9  0843               	movf	___fltol@f1,w
  7144  10EA  00C7               	movwf	??___fltol
  7145  10EB  0844               	movf	___fltol@f1+1,w
  7146  10EC  00C8               	movwf	??___fltol+1
  7147  10ED  0845               	movf	___fltol@f1+2,w
  7148  10EE  00C9               	movwf	??___fltol+2
  7149  10EF  0846               	movf	___fltol@f1+3,w
  7150  10F0  00CA               	movwf	??___fltol+3
  7151  10F1  301F               	movlw	31
  7152  10F2                     u2905:
  7153  10F2  1003               	clrc
  7154  10F3  0CCA               	rrf	??___fltol+3,f
  7155  10F4  0CC9               	rrf	??___fltol+2,f
  7156  10F5  0CC8               	rrf	??___fltol+1,f
  7157  10F6  0CC7               	rrf	??___fltol,f
  7158  10F7  3EFF               	addlw	-1
  7159  10F8  1D03               	skipz
  7160  10F9  28F2               	goto	u2905
  7161  10FA  0847               	movf	??___fltol,w
  7162  10FB  00CB               	movwf	??___fltol+4
  7163  10FC  084B               	movf	??___fltol+4,w
  7164  10FD  00CC               	movwf	___fltol@sign1
  7165  10FE  17C5               	bsf	___fltol@f1+2,7
  7166  10FF  30FF               	movlw	255
  7167  1100  05C3               	andwf	___fltol@f1,f
  7168  1101  30FF               	movlw	255
  7169  1102  05C4               	andwf	___fltol@f1+1,f
  7170  1103  30FF               	movlw	255
  7171  1104  05C5               	andwf	___fltol@f1+2,f
  7172  1105  3000               	movlw	0
  7173  1106  05C6               	andwf	___fltol@f1+3,f
  7174  1107  3096               	movlw	150
  7175  1108  02CD               	subwf	___fltol@exp1,f
  7176  1109  1FCD               	btfss	___fltol@exp1,7
  7177  110A  2920               	goto	l3857
  7178  110B  084D               	movf	___fltol@exp1,w
  7179  110C  3A80               	xorlw	128
  7180  110D  3E97               	addlw	151
  7181  110E  1C03               	btfss	3,0
  7182  110F  28E0               	goto	l3835
  7183  1110                     l3855:
  7184  1110  3001               	movlw	1
  7185  1111                     u2935:
  7186  1111  1003               	clrc
  7187  1112  0CC6               	rrf	___fltol@f1+3,f
  7188  1113  0CC5               	rrf	___fltol@f1+2,f
  7189  1114  0CC4               	rrf	___fltol@f1+1,f
  7190  1115  0CC3               	rrf	___fltol@f1,f
  7191  1116  3EFF               	addlw	-1
  7192  1117  1D03               	skipz
  7193  1118  2911               	goto	u2935
  7194  1119  3001               	movlw	1
  7195  111A  00C7               	movwf	??___fltol
  7196  111B  0847               	movf	??___fltol,w
  7197  111C  07CD               	addwf	___fltol@exp1,f
  7198  111D  1903               	btfsc	3,2
  7199  111E  2933               	goto	l3865
  7200  111F  2910               	goto	l3855
  7201  1120                     l3857:
  7202  1120  3020               	movlw	32
  7203  1121  024D               	subwf	___fltol@exp1,w
  7204  1122  1803               	btfsc	3,0
  7205  1123  28E0               	goto	l3835
  7206  1124                     l1178:
  7207  1124  084D               	movf	___fltol@exp1,w
  7208  1125  1903               	btfsc	3,2
  7209  1126  2933               	goto	l3865
  7210  1127  3001               	movlw	1
  7211  1128  00C7               	movwf	??___fltol
  7212  1129                     u2965:
  7213  1129  1003               	clrc
  7214  112A  0DC3               	rlf	___fltol@f1,f
  7215  112B  0DC4               	rlf	___fltol@f1+1,f
  7216  112C  0DC5               	rlf	___fltol@f1+2,f
  7217  112D  0DC6               	rlf	___fltol@f1+3,f
  7218  112E  0BC7               	decfsz	??___fltol,f
  7219  112F  2929               	goto	u2965
  7220  1130  3001               	movlw	1
  7221  1131  02CD               	subwf	___fltol@exp1,f
  7222  1132  2924               	goto	l1178
  7223  1133                     l3865:
  7224  1133  084C               	movf	___fltol@sign1,w
  7225  1134  1903               	btfsc	3,2
  7226  1135  0008               	return
  7227  1136  09C3               	comf	___fltol@f1,f
  7228  1137  09C4               	comf	___fltol@f1+1,f
  7229  1138  09C5               	comf	___fltol@f1+2,f
  7230  1139  09C6               	comf	___fltol@f1+3,f
  7231  113A  0AC3               	incf	___fltol@f1,f
  7232  113B  1903               	skipnz
  7233  113C  0AC4               	incf	___fltol@f1+1,f
  7234  113D  1903               	skipnz
  7235  113E  0AC5               	incf	___fltol@f1+2,f
  7236  113F  1903               	skipnz
  7237  1140  0AC6               	incf	___fltol@f1+3,f
  7238  1141  0008               	return
  7239  1142                     __end_of___fltol:
  7240                           
  7241                           	psect	text20
  7242  03C8                     __ptext20:	
  7243 ;; *************** function ___flmul *****************
  7244 ;; Defined at:
  7245 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  7246 ;; Parameters:    Size  Location     Type
  7247 ;;  b               4    9[BANK0 ] long 
  7248 ;;  a               4   13[BANK0 ] long 
  7249 ;; Auto vars:     Size  Location     Type
  7250 ;;  prod            4   29[BANK0 ] struct .
  7251 ;;  grs             4   24[BANK0 ] unsigned long 
  7252 ;;  temp            2   33[BANK0 ] struct .
  7253 ;;  bexp            1   28[BANK0 ] unsigned char 
  7254 ;;  aexp            1   23[BANK0 ] unsigned char 
  7255 ;;  sign            1   22[BANK0 ] unsigned char 
  7256 ;; Return value:  Size  Location     Type
  7257 ;;                  4    9[BANK0 ] unsigned char 
  7258 ;; Registers used:
  7259 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7260 ;; Tracked objects:
  7261 ;;		On entry : 300/0
  7262 ;;		On exit  : 300/0
  7263 ;;		Unchanged: 0/0
  7264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7265 ;;      Params:         0       8       0       0       0
  7266 ;;      Locals:         0      13       0       0       0
  7267 ;;      Temps:          0       5       0       0       0
  7268 ;;      Totals:         0      26       0       0       0
  7269 ;;Total ram usage:       26 bytes
  7270 ;; Hardware stack levels used: 1
  7271 ;; Hardware stack levels required when called: 2
  7272 ;; This function calls:
  7273 ;;		__Umul8_16
  7274 ;; This function is called by:
  7275 ;;		_Decodify_Command
  7276 ;;		_mediaLeituraPt100Umidadde
  7277 ;;		_Save_Log
  7278 ;; This function uses a non-reentrant model
  7279 ;;
  7280                           
  7281                           
  7282                           ;psect for function ___flmul
  7283  03C8                     ___flmul:
  7284                           
  7285                           ;incstack = 0
  7286                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7287  03C8  082C               	movf	___flmul@b+3,w
  7288  03C9  3980               	andlw	128
  7289  03CA  00B1               	movwf	??___flmul
  7290  03CB  0831               	movf	??___flmul,w
  7291  03CC  00B6               	movwf	___flmul@sign
  7292  03CD  082C               	movf	___flmul@b+3,w
  7293  03CE  00B1               	movwf	??___flmul
  7294  03CF  0731               	addwf	??___flmul,w
  7295  03D0  00B2               	movwf	??___flmul+1
  7296  03D1  0832               	movf	??___flmul+1,w
  7297  03D2  00BC               	movwf	___flmul@bexp
  7298  03D3  1BAB               	btfsc	___flmul@b+2,7
  7299  03D4  143C               	bsf	___flmul@bexp,0
  7300  03D5  083C               	movf	___flmul@bexp,w
  7301  03D6  1903               	btfsc	3,2
  7302  03D7  2BE5               	goto	l3911
  7303  03D8  0A3C               	incf	___flmul@bexp,w
  7304  03D9  1D03               	btfss	3,2
  7305  03DA  2BE3               	goto	l3909
  7306  03DB  3000               	movlw	0
  7307  03DC  00AC               	movwf	___flmul@b+3
  7308  03DD  3000               	movlw	0
  7309  03DE  00AB               	movwf	___flmul@b+2
  7310  03DF  3000               	movlw	0
  7311  03E0  00AA               	movwf	___flmul@b+1
  7312  03E1  3000               	movlw	0
  7313  03E2  00A9               	movwf	___flmul@b
  7314  03E3                     l3909:
  7315  03E3  17AB               	bsf	___flmul@b+2,7
  7316  03E4  2BED               	goto	l3913
  7317  03E5                     l3911:
  7318  03E5  3000               	movlw	0
  7319  03E6  00AC               	movwf	___flmul@b+3
  7320  03E7  3000               	movlw	0
  7321  03E8  00AB               	movwf	___flmul@b+2
  7322  03E9  3000               	movlw	0
  7323  03EA  00AA               	movwf	___flmul@b+1
  7324  03EB  3000               	movlw	0
  7325  03EC  00A9               	movwf	___flmul@b
  7326  03ED                     l3913:
  7327  03ED  0830               	movf	___flmul@a+3,w
  7328  03EE  3980               	andlw	128
  7329  03EF  00B1               	movwf	??___flmul
  7330  03F0  0831               	movf	??___flmul,w
  7331  03F1  06B6               	xorwf	___flmul@sign,f
  7332  03F2  0830               	movf	___flmul@a+3,w
  7333  03F3  00B1               	movwf	??___flmul
  7334  03F4  0731               	addwf	??___flmul,w
  7335  03F5  00B2               	movwf	??___flmul+1
  7336  03F6  0832               	movf	??___flmul+1,w
  7337  03F7  00B7               	movwf	___flmul@aexp
  7338  03F8  1BAF               	btfsc	___flmul@a+2,7
  7339  03F9  1437               	bsf	___flmul@aexp,0
  7340  03FA  0837               	movf	___flmul@aexp,w
  7341  03FB  1903               	btfsc	3,2
  7342  03FC  2C0A               	goto	l3929
  7343  03FD  0A37               	incf	___flmul@aexp,w
  7344  03FE  1D03               	btfss	3,2
  7345  03FF  2C08               	goto	l3927
  7346  0400  3000               	movlw	0
  7347  0401  00B0               	movwf	___flmul@a+3
  7348  0402  3000               	movlw	0
  7349  0403  00AF               	movwf	___flmul@a+2
  7350  0404  3000               	movlw	0
  7351  0405  00AE               	movwf	___flmul@a+1
  7352  0406  3000               	movlw	0
  7353  0407  00AD               	movwf	___flmul@a
  7354  0408                     l3927:
  7355  0408  17AF               	bsf	___flmul@a+2,7
  7356  0409  2C12               	goto	l3931
  7357  040A                     l3929:
  7358  040A  3000               	movlw	0
  7359  040B  00B0               	movwf	___flmul@a+3
  7360  040C  3000               	movlw	0
  7361  040D  00AF               	movwf	___flmul@a+2
  7362  040E  3000               	movlw	0
  7363  040F  00AE               	movwf	___flmul@a+1
  7364  0410  3000               	movlw	0
  7365  0411  00AD               	movwf	___flmul@a
  7366  0412                     l3931:
  7367  0412  0837               	movf	___flmul@aexp,w
  7368  0413  1D03               	btfss	3,2
  7369  0414  083C               	movf	___flmul@bexp,w
  7370  0415  1D03               	btfss	3,2
  7371  0416  2C20               	goto	l3939
  7372  0417  3000               	movlw	0
  7373  0418  00AC               	movwf	?___flmul+3
  7374  0419  3000               	movlw	0
  7375  041A  00AB               	movwf	?___flmul+2
  7376  041B  3000               	movlw	0
  7377  041C  00AA               	movwf	?___flmul+1
  7378  041D  3000               	movlw	0
  7379  041E  00A9               	movwf	?___flmul
  7380  041F  0008               	return
  7381  0420                     l3939:
  7382  0420  0829               	movf	___flmul@b,w
  7383  0421  00B1               	movwf	??___flmul
  7384  0422  0831               	movf	??___flmul,w
  7385  0423  00A0               	movwf	__Umul8_16@multiplicand
  7386  0424  082F               	movf	___flmul@a+2,w
  7387  0425  160A  158A  244B  120A  118A  	fcall	__Umul8_16
  7388  042A  0821               	movf	?__Umul8_16+1,w
  7389  042B  00C2               	movwf	___flmul@temp+1
  7390  042C  0820               	movf	?__Umul8_16,w
  7391  042D  00C1               	movwf	___flmul@temp
  7392  042E  0841               	movf	___flmul@temp,w
  7393  042F  00B1               	movwf	??___flmul
  7394  0430  01B2               	clrf	??___flmul+1
  7395  0431  01B3               	clrf	??___flmul+2
  7396  0432  01B4               	clrf	??___flmul+3
  7397  0433  0834               	movf	??___flmul+3,w
  7398  0434  00BB               	movwf	___flmul@grs+3
  7399  0435  0833               	movf	??___flmul+2,w
  7400  0436  00BA               	movwf	___flmul@grs+2
  7401  0437  0832               	movf	??___flmul+1,w
  7402  0438  00B9               	movwf	___flmul@grs+1
  7403  0439  0831               	movf	??___flmul,w
  7404  043A  00B8               	movwf	___flmul@grs
  7405  043B  0842               	movf	___flmul@temp+1,w
  7406  043C  00B1               	movwf	??___flmul
  7407  043D  01B2               	clrf	??___flmul+1
  7408  043E  01B3               	clrf	??___flmul+2
  7409  043F  01B4               	clrf	??___flmul+3
  7410  0440  0834               	movf	??___flmul+3,w
  7411  0441  00C0               	movwf	___flmul@prod+3
  7412  0442  0833               	movf	??___flmul+2,w
  7413  0443  00BF               	movwf	___flmul@prod+2
  7414  0444  0832               	movf	??___flmul+1,w
  7415  0445  00BE               	movwf	___flmul@prod+1
  7416  0446  0831               	movf	??___flmul,w
  7417  0447  00BD               	movwf	___flmul@prod
  7418  0448  082A               	movf	___flmul@b+1,w
  7419  0449  00B1               	movwf	??___flmul
  7420  044A  0831               	movf	??___flmul,w
  7421  044B  00A0               	movwf	__Umul8_16@multiplicand
  7422  044C  082E               	movf	___flmul@a+1,w
  7423  044D  160A  158A  244B  120A  118A  	fcall	__Umul8_16
  7424  0452  0821               	movf	?__Umul8_16+1,w
  7425  0453  00C2               	movwf	___flmul@temp+1
  7426  0454  0820               	movf	?__Umul8_16,w
  7427  0455  00C1               	movwf	___flmul@temp
  7428  0456  0841               	movf	___flmul@temp,w
  7429  0457  00B1               	movwf	??___flmul
  7430  0458  01B2               	clrf	??___flmul+1
  7431  0459  01B3               	clrf	??___flmul+2
  7432  045A  01B4               	clrf	??___flmul+3
  7433  045B  0831               	movf	??___flmul,w
  7434  045C  07B8               	addwf	___flmul@grs,f
  7435  045D  0832               	movf	??___flmul+1,w
  7436  045E  1103               	clrz
  7437  045F  1803               	skipnc
  7438  0460  3E01               	addlw	1
  7439  0461  1D03               	btfss	3,2
  7440  0462  07B9               	addwf	___flmul@grs+1,f
  7441  0463  0833               	movf	??___flmul+2,w
  7442  0464  1103               	clrz
  7443  0465  1803               	skipnc
  7444  0466  3E01               	addlw	1
  7445  0467  1D03               	btfss	3,2
  7446  0468  07BA               	addwf	___flmul@grs+2,f
  7447  0469  0834               	movf	??___flmul+3,w
  7448  046A  1103               	clrz
  7449  046B  1803               	skipnc
  7450  046C  3E01               	addlw	1
  7451  046D  1D03               	btfss	3,2
  7452  046E  07BB               	addwf	___flmul@grs+3,f
  7453  046F  0842               	movf	___flmul@temp+1,w
  7454  0470  00B1               	movwf	??___flmul
  7455  0471  01B2               	clrf	??___flmul+1
  7456  0472  01B3               	clrf	??___flmul+2
  7457  0473  01B4               	clrf	??___flmul+3
  7458  0474  0831               	movf	??___flmul,w
  7459  0475  07BD               	addwf	___flmul@prod,f
  7460  0476  0832               	movf	??___flmul+1,w
  7461  0477  1103               	clrz
  7462  0478  1803               	skipnc
  7463  0479  3E01               	addlw	1
  7464  047A  1D03               	btfss	3,2
  7465  047B  07BE               	addwf	___flmul@prod+1,f
  7466  047C  0833               	movf	??___flmul+2,w
  7467  047D  1103               	clrz
  7468  047E  1803               	skipnc
  7469  047F  3E01               	addlw	1
  7470  0480  1D03               	btfss	3,2
  7471  0481  07BF               	addwf	___flmul@prod+2,f
  7472  0482  0834               	movf	??___flmul+3,w
  7473  0483  1103               	clrz
  7474  0484  1803               	skipnc
  7475  0485  3E01               	addlw	1
  7476  0486  1D03               	btfss	3,2
  7477  0487  07C0               	addwf	___flmul@prod+3,f
  7478  0488  082B               	movf	___flmul@b+2,w
  7479  0489  00B1               	movwf	??___flmul
  7480  048A  0831               	movf	??___flmul,w
  7481  048B  00A0               	movwf	__Umul8_16@multiplicand
  7482  048C  082D               	movf	___flmul@a,w
  7483  048D  160A  158A  244B  120A  118A  	fcall	__Umul8_16
  7484  0492  0821               	movf	?__Umul8_16+1,w
  7485  0493  00C2               	movwf	___flmul@temp+1
  7486  0494  0820               	movf	?__Umul8_16,w
  7487  0495  00C1               	movwf	___flmul@temp
  7488  0496  0841               	movf	___flmul@temp,w
  7489  0497  00B1               	movwf	??___flmul
  7490  0498  01B2               	clrf	??___flmul+1
  7491  0499  01B3               	clrf	??___flmul+2
  7492  049A  01B4               	clrf	??___flmul+3
  7493  049B  0831               	movf	??___flmul,w
  7494  049C  07B8               	addwf	___flmul@grs,f
  7495  049D  0832               	movf	??___flmul+1,w
  7496  049E  1103               	clrz
  7497  049F  1803               	skipnc
  7498  04A0  3E01               	addlw	1
  7499  04A1  1D03               	btfss	3,2
  7500  04A2  07B9               	addwf	___flmul@grs+1,f
  7501  04A3  0833               	movf	??___flmul+2,w
  7502  04A4  1103               	clrz
  7503  04A5  1803               	skipnc
  7504  04A6  3E01               	addlw	1
  7505  04A7  1D03               	btfss	3,2
  7506  04A8  07BA               	addwf	___flmul@grs+2,f
  7507  04A9  0834               	movf	??___flmul+3,w
  7508  04AA  1103               	clrz
  7509  04AB  1803               	skipnc
  7510  04AC  3E01               	addlw	1
  7511  04AD  1D03               	btfss	3,2
  7512  04AE  07BB               	addwf	___flmul@grs+3,f
  7513  04AF  0842               	movf	___flmul@temp+1,w
  7514  04B0  00B1               	movwf	??___flmul
  7515  04B1  01B2               	clrf	??___flmul+1
  7516  04B2  01B3               	clrf	??___flmul+2
  7517  04B3  01B4               	clrf	??___flmul+3
  7518  04B4  0831               	movf	??___flmul,w
  7519  04B5  07BD               	addwf	___flmul@prod,f
  7520  04B6  0832               	movf	??___flmul+1,w
  7521  04B7  1103               	clrz
  7522  04B8  1803               	skipnc
  7523  04B9  3E01               	addlw	1
  7524  04BA  1D03               	btfss	3,2
  7525  04BB  07BE               	addwf	___flmul@prod+1,f
  7526  04BC  0833               	movf	??___flmul+2,w
  7527  04BD  1103               	clrz
  7528  04BE  1803               	skipnc
  7529  04BF  3E01               	addlw	1
  7530  04C0  1D03               	btfss	3,2
  7531  04C1  07BF               	addwf	___flmul@prod+2,f
  7532  04C2  0834               	movf	??___flmul+3,w
  7533  04C3  1103               	clrz
  7534  04C4  1803               	skipnc
  7535  04C5  3E01               	addlw	1
  7536  04C6  1D03               	btfss	3,2
  7537  04C7  07C0               	addwf	___flmul@prod+3,f
  7538  04C8  3008               	movlw	8
  7539  04C9  00B1               	movwf	??___flmul
  7540  04CA                     u3185:
  7541  04CA  1003               	clrc
  7542  04CB  0DB8               	rlf	___flmul@grs,f
  7543  04CC  0DB9               	rlf	___flmul@grs+1,f
  7544  04CD  0DBA               	rlf	___flmul@grs+2,f
  7545  04CE  0DBB               	rlf	___flmul@grs+3,f
  7546  04CF  0BB1               	decfsz	??___flmul,f
  7547  04D0  2CCA               	goto	u3185
  7548  04D1  082A               	movf	___flmul@b+1,w
  7549  04D2  00B1               	movwf	??___flmul
  7550  04D3  0831               	movf	??___flmul,w
  7551  04D4  00A0               	movwf	__Umul8_16@multiplicand
  7552  04D5  082D               	movf	___flmul@a,w
  7553  04D6  160A  158A  244B  120A  118A  	fcall	__Umul8_16
  7554  04DB  0821               	movf	?__Umul8_16+1,w
  7555  04DC  00C2               	movwf	___flmul@temp+1
  7556  04DD  0820               	movf	?__Umul8_16,w
  7557  04DE  00C1               	movwf	___flmul@temp
  7558  04DF  0841               	movf	___flmul@temp,w
  7559  04E0  00B1               	movwf	??___flmul
  7560  04E1  0842               	movf	___flmul@temp+1,w
  7561  04E2  00B2               	movwf	??___flmul+1
  7562  04E3  01B3               	clrf	??___flmul+2
  7563  04E4  01B4               	clrf	??___flmul+3
  7564  04E5  0831               	movf	??___flmul,w
  7565  04E6  07B8               	addwf	___flmul@grs,f
  7566  04E7  0832               	movf	??___flmul+1,w
  7567  04E8  1103               	clrz
  7568  04E9  1803               	skipnc
  7569  04EA  3E01               	addlw	1
  7570  04EB  1D03               	btfss	3,2
  7571  04EC  07B9               	addwf	___flmul@grs+1,f
  7572  04ED  0833               	movf	??___flmul+2,w
  7573  04EE  1103               	clrz
  7574  04EF  1803               	skipnc
  7575  04F0  3E01               	addlw	1
  7576  04F1  1D03               	btfss	3,2
  7577  04F2  07BA               	addwf	___flmul@grs+2,f
  7578  04F3  0834               	movf	??___flmul+3,w
  7579  04F4  1103               	clrz
  7580  04F5  1803               	skipnc
  7581  04F6  3E01               	addlw	1
  7582  04F7  1D03               	btfss	3,2
  7583  04F8  07BB               	addwf	___flmul@grs+3,f
  7584  04F9  0829               	movf	___flmul@b,w
  7585  04FA  00B1               	movwf	??___flmul
  7586  04FB  0831               	movf	??___flmul,w
  7587  04FC  00A0               	movwf	__Umul8_16@multiplicand
  7588  04FD  082E               	movf	___flmul@a+1,w
  7589  04FE  160A  158A  244B  120A  118A  	fcall	__Umul8_16
  7590  0503  0821               	movf	?__Umul8_16+1,w
  7591  0504  00C2               	movwf	___flmul@temp+1
  7592  0505  0820               	movf	?__Umul8_16,w
  7593  0506  00C1               	movwf	___flmul@temp
  7594  0507  0841               	movf	___flmul@temp,w
  7595  0508  00B1               	movwf	??___flmul
  7596  0509  0842               	movf	___flmul@temp+1,w
  7597  050A  00B2               	movwf	??___flmul+1
  7598  050B  01B3               	clrf	??___flmul+2
  7599  050C  01B4               	clrf	??___flmul+3
  7600  050D  0831               	movf	??___flmul,w
  7601  050E  07B8               	addwf	___flmul@grs,f
  7602  050F  0832               	movf	??___flmul+1,w
  7603  0510  1103               	clrz
  7604  0511  1803               	skipnc
  7605  0512  3E01               	addlw	1
  7606  0513  1D03               	btfss	3,2
  7607  0514  07B9               	addwf	___flmul@grs+1,f
  7608  0515  0833               	movf	??___flmul+2,w
  7609  0516  1103               	clrz
  7610  0517  1803               	skipnc
  7611  0518  3E01               	addlw	1
  7612  0519  1D03               	btfss	3,2
  7613  051A  07BA               	addwf	___flmul@grs+2,f
  7614  051B  0834               	movf	??___flmul+3,w
  7615  051C  1103               	clrz
  7616  051D  1803               	skipnc
  7617  051E  3E01               	addlw	1
  7618  051F  1D03               	btfss	3,2
  7619  0520  07BB               	addwf	___flmul@grs+3,f
  7620  0521  3008               	movlw	8
  7621  0522  00B1               	movwf	??___flmul
  7622  0523                     u3215:
  7623  0523  1003               	clrc
  7624  0524  0DB8               	rlf	___flmul@grs,f
  7625  0525  0DB9               	rlf	___flmul@grs+1,f
  7626  0526  0DBA               	rlf	___flmul@grs+2,f
  7627  0527  0DBB               	rlf	___flmul@grs+3,f
  7628  0528  0BB1               	decfsz	??___flmul,f
  7629  0529  2D23               	goto	u3215
  7630  052A  0829               	movf	___flmul@b,w
  7631  052B  00B1               	movwf	??___flmul
  7632  052C  0831               	movf	??___flmul,w
  7633  052D  00A0               	movwf	__Umul8_16@multiplicand
  7634  052E  082D               	movf	___flmul@a,w
  7635  052F  160A  158A  244B  120A  118A  	fcall	__Umul8_16
  7636  0534  0821               	movf	?__Umul8_16+1,w
  7637  0535  00C2               	movwf	___flmul@temp+1
  7638  0536  0820               	movf	?__Umul8_16,w
  7639  0537  00C1               	movwf	___flmul@temp
  7640  0538  0841               	movf	___flmul@temp,w
  7641  0539  00B1               	movwf	??___flmul
  7642  053A  0842               	movf	___flmul@temp+1,w
  7643  053B  00B2               	movwf	??___flmul+1
  7644  053C  01B3               	clrf	??___flmul+2
  7645  053D  01B4               	clrf	??___flmul+3
  7646  053E  0831               	movf	??___flmul,w
  7647  053F  07B8               	addwf	___flmul@grs,f
  7648  0540  0832               	movf	??___flmul+1,w
  7649  0541  1103               	clrz
  7650  0542  1803               	skipnc
  7651  0543  3E01               	addlw	1
  7652  0544  1D03               	btfss	3,2
  7653  0545  07B9               	addwf	___flmul@grs+1,f
  7654  0546  0833               	movf	??___flmul+2,w
  7655  0547  1103               	clrz
  7656  0548  1803               	skipnc
  7657  0549  3E01               	addlw	1
  7658  054A  1D03               	btfss	3,2
  7659  054B  07BA               	addwf	___flmul@grs+2,f
  7660  054C  0834               	movf	??___flmul+3,w
  7661  054D  1103               	clrz
  7662  054E  1803               	skipnc
  7663  054F  3E01               	addlw	1
  7664  0550  1D03               	btfss	3,2
  7665  0551  07BB               	addwf	___flmul@grs+3,f
  7666  0552  082A               	movf	___flmul@b+1,w
  7667  0553  00B1               	movwf	??___flmul
  7668  0554  0831               	movf	??___flmul,w
  7669  0555  00A0               	movwf	__Umul8_16@multiplicand
  7670  0556  082F               	movf	___flmul@a+2,w
  7671  0557  160A  158A  244B  120A  118A  	fcall	__Umul8_16
  7672  055C  0821               	movf	?__Umul8_16+1,w
  7673  055D  00C2               	movwf	___flmul@temp+1
  7674  055E  0820               	movf	?__Umul8_16,w
  7675  055F  00C1               	movwf	___flmul@temp
  7676  0560  0841               	movf	___flmul@temp,w
  7677  0561  00B1               	movwf	??___flmul
  7678  0562  0842               	movf	___flmul@temp+1,w
  7679  0563  00B2               	movwf	??___flmul+1
  7680  0564  01B3               	clrf	??___flmul+2
  7681  0565  01B4               	clrf	??___flmul+3
  7682  0566  0831               	movf	??___flmul,w
  7683  0567  07BD               	addwf	___flmul@prod,f
  7684  0568  0832               	movf	??___flmul+1,w
  7685  0569  1103               	clrz
  7686  056A  1803               	skipnc
  7687  056B  3E01               	addlw	1
  7688  056C  1D03               	btfss	3,2
  7689  056D  07BE               	addwf	___flmul@prod+1,f
  7690  056E  0833               	movf	??___flmul+2,w
  7691  056F  1103               	clrz
  7692  0570  1803               	skipnc
  7693  0571  3E01               	addlw	1
  7694  0572  1D03               	btfss	3,2
  7695  0573  07BF               	addwf	___flmul@prod+2,f
  7696  0574  0834               	movf	??___flmul+3,w
  7697  0575  1103               	clrz
  7698  0576  1803               	skipnc
  7699  0577  3E01               	addlw	1
  7700  0578  1D03               	btfss	3,2
  7701  0579  07C0               	addwf	___flmul@prod+3,f
  7702  057A  082B               	movf	___flmul@b+2,w
  7703  057B  00B1               	movwf	??___flmul
  7704  057C  0831               	movf	??___flmul,w
  7705  057D  00A0               	movwf	__Umul8_16@multiplicand
  7706  057E  082E               	movf	___flmul@a+1,w
  7707  057F  160A  158A  244B  120A  118A  	fcall	__Umul8_16
  7708  0584  0821               	movf	?__Umul8_16+1,w
  7709  0585  00C2               	movwf	___flmul@temp+1
  7710  0586  0820               	movf	?__Umul8_16,w
  7711  0587  00C1               	movwf	___flmul@temp
  7712  0588  0841               	movf	___flmul@temp,w
  7713  0589  00B1               	movwf	??___flmul
  7714  058A  0842               	movf	___flmul@temp+1,w
  7715  058B  00B2               	movwf	??___flmul+1
  7716  058C  01B3               	clrf	??___flmul+2
  7717  058D  01B4               	clrf	??___flmul+3
  7718  058E  0831               	movf	??___flmul,w
  7719  058F  07BD               	addwf	___flmul@prod,f
  7720  0590  0832               	movf	??___flmul+1,w
  7721  0591  1103               	clrz
  7722  0592  1803               	skipnc
  7723  0593  3E01               	addlw	1
  7724  0594  1D03               	btfss	3,2
  7725  0595  07BE               	addwf	___flmul@prod+1,f
  7726  0596  0833               	movf	??___flmul+2,w
  7727  0597  1103               	clrz
  7728  0598  1803               	skipnc
  7729  0599  3E01               	addlw	1
  7730  059A  1D03               	btfss	3,2
  7731  059B  07BF               	addwf	___flmul@prod+2,f
  7732  059C  0834               	movf	??___flmul+3,w
  7733  059D  1103               	clrz
  7734  059E  1803               	skipnc
  7735  059F  3E01               	addlw	1
  7736  05A0  1D03               	btfss	3,2
  7737  05A1  07C0               	addwf	___flmul@prod+3,f
  7738  05A2  082B               	movf	___flmul@b+2,w
  7739  05A3  00B1               	movwf	??___flmul
  7740  05A4  0831               	movf	??___flmul,w
  7741  05A5  00A0               	movwf	__Umul8_16@multiplicand
  7742  05A6  082F               	movf	___flmul@a+2,w
  7743  05A7  160A  158A  244B  120A  118A  	fcall	__Umul8_16
  7744  05AC  0821               	movf	?__Umul8_16+1,w
  7745  05AD  00C2               	movwf	___flmul@temp+1
  7746  05AE  0820               	movf	?__Umul8_16,w
  7747  05AF  00C1               	movwf	___flmul@temp
  7748  05B0  0841               	movf	___flmul@temp,w
  7749  05B1  00B1               	movwf	??___flmul
  7750  05B2  0842               	movf	___flmul@temp+1,w
  7751  05B3  00B2               	movwf	??___flmul+1
  7752  05B4  01B3               	clrf	??___flmul+2
  7753  05B5  01B4               	clrf	??___flmul+3
  7754  05B6  3008               	movlw	8
  7755  05B7                     u3255:
  7756  05B7  1003               	clrc
  7757  05B8  0DB1               	rlf	??___flmul,f
  7758  05B9  0DB2               	rlf	??___flmul+1,f
  7759  05BA  0DB3               	rlf	??___flmul+2,f
  7760  05BB  0DB4               	rlf	??___flmul+3,f
  7761  05BC  3EFF               	addlw	-1
  7762  05BD  1D03               	skipz
  7763  05BE  2DB7               	goto	u3255
  7764  05BF  0831               	movf	??___flmul,w
  7765  05C0  07BD               	addwf	___flmul@prod,f
  7766  05C1  0832               	movf	??___flmul+1,w
  7767  05C2  1103               	clrz
  7768  05C3  1803               	skipnc
  7769  05C4  3E01               	addlw	1
  7770  05C5  1D03               	btfss	3,2
  7771  05C6  07BE               	addwf	___flmul@prod+1,f
  7772  05C7  0833               	movf	??___flmul+2,w
  7773  05C8  1103               	clrz
  7774  05C9  1803               	skipnc
  7775  05CA  3E01               	addlw	1
  7776  05CB  1D03               	btfss	3,2
  7777  05CC  07BF               	addwf	___flmul@prod+2,f
  7778  05CD  0834               	movf	??___flmul+3,w
  7779  05CE  1103               	clrz
  7780  05CF  1803               	skipnc
  7781  05D0  3E01               	addlw	1
  7782  05D1  1D03               	btfss	3,2
  7783  05D2  07C0               	addwf	___flmul@prod+3,f
  7784  05D3  083B               	movf	___flmul@grs+3,w
  7785  05D4  00B1               	movwf	??___flmul
  7786  05D5  01B2               	clrf	??___flmul+1
  7787  05D6  01B3               	clrf	??___flmul+2
  7788  05D7  01B4               	clrf	??___flmul+3
  7789  05D8  0831               	movf	??___flmul,w
  7790  05D9  07BD               	addwf	___flmul@prod,f
  7791  05DA  0832               	movf	??___flmul+1,w
  7792  05DB  1103               	clrz
  7793  05DC  1803               	skipnc
  7794  05DD  3E01               	addlw	1
  7795  05DE  1D03               	btfss	3,2
  7796  05DF  07BE               	addwf	___flmul@prod+1,f
  7797  05E0  0833               	movf	??___flmul+2,w
  7798  05E1  1103               	clrz
  7799  05E2  1803               	skipnc
  7800  05E3  3E01               	addlw	1
  7801  05E4  1D03               	btfss	3,2
  7802  05E5  07BF               	addwf	___flmul@prod+2,f
  7803  05E6  0834               	movf	??___flmul+3,w
  7804  05E7  1103               	clrz
  7805  05E8  1803               	skipnc
  7806  05E9  3E01               	addlw	1
  7807  05EA  1D03               	btfss	3,2
  7808  05EB  07C0               	addwf	___flmul@prod+3,f
  7809  05EC  3008               	movlw	8
  7810  05ED  00B1               	movwf	??___flmul
  7811  05EE                     u3285:
  7812  05EE  1003               	clrc
  7813  05EF  0DB8               	rlf	___flmul@grs,f
  7814  05F0  0DB9               	rlf	___flmul@grs+1,f
  7815  05F1  0DBA               	rlf	___flmul@grs+2,f
  7816  05F2  0DBB               	rlf	___flmul@grs+3,f
  7817  05F3  0BB1               	decfsz	??___flmul,f
  7818  05F4  2DEE               	goto	u3285
  7819  05F5  083C               	movf	___flmul@bexp,w
  7820  05F6  0737               	addwf	___flmul@aexp,w
  7821  05F7  00B1               	movwf	??___flmul
  7822  05F8  01B2               	clrf	??___flmul+1
  7823  05F9  0DB2               	rlf	??___flmul+1,f
  7824  05FA  0831               	movf	??___flmul,w
  7825  05FB  3E82               	addlw	130
  7826  05FC  00C1               	movwf	___flmul@temp
  7827  05FD  0832               	movf	??___flmul+1,w
  7828  05FE  1803               	skipnc
  7829  05FF  3E01               	addlw	1
  7830  0600  3EFF               	addlw	255
  7831  0601  00C2               	movwf	___flmul@temp+1
  7832  0602                     l3991:
  7833  0602  1BBF               	btfsc	___flmul@prod+2,7
  7834  0603  2E1F               	goto	l3993
  7835  0604  3001               	movlw	1
  7836  0605  00B1               	movwf	??___flmul
  7837  0606                     u3295:
  7838  0606  1003               	clrc
  7839  0607  0DBD               	rlf	___flmul@prod,f
  7840  0608  0DBE               	rlf	___flmul@prod+1,f
  7841  0609  0DBF               	rlf	___flmul@prod+2,f
  7842  060A  0DC0               	rlf	___flmul@prod+3,f
  7843  060B  0BB1               	decfsz	??___flmul,f
  7844  060C  2E06               	goto	u3295
  7845  060D  1BBB               	btfsc	___flmul@grs+3,7
  7846  060E  143D               	bsf	___flmul@prod,0
  7847  060F  3001               	movlw	1
  7848  0610  00B1               	movwf	??___flmul
  7849  0611                     u3315:
  7850  0611  1003               	clrc
  7851  0612  0DB8               	rlf	___flmul@grs,f
  7852  0613  0DB9               	rlf	___flmul@grs+1,f
  7853  0614  0DBA               	rlf	___flmul@grs+2,f
  7854  0615  0DBB               	rlf	___flmul@grs+3,f
  7855  0616  0BB1               	decfsz	??___flmul,f
  7856  0617  2E11               	goto	u3315
  7857  0618  30FF               	movlw	255
  7858  0619  07C1               	addwf	___flmul@temp,f
  7859  061A  1803               	skipnc
  7860  061B  0AC2               	incf	___flmul@temp+1,f
  7861  061C  30FF               	movlw	255
  7862  061D  07C2               	addwf	___flmul@temp+1,f
  7863  061E  2E02               	goto	l3991
  7864  061F                     l3993:
  7865  061F  01B7               	clrf	___flmul@aexp
  7866  0620  1FBB               	btfss	___flmul@grs+3,7
  7867  0621  2E38               	goto	l4003
  7868  0622  30FF               	movlw	255
  7869  0623  0538               	andwf	___flmul@grs,w
  7870  0624  00B1               	movwf	??___flmul
  7871  0625  30FF               	movlw	255
  7872  0626  0539               	andwf	___flmul@grs+1,w
  7873  0627  00B2               	movwf	??___flmul+1
  7874  0628  30FF               	movlw	255
  7875  0629  053A               	andwf	___flmul@grs+2,w
  7876  062A  00B3               	movwf	??___flmul+2
  7877  062B  307F               	movlw	127
  7878  062C  053B               	andwf	___flmul@grs+3,w
  7879  062D  00B4               	movwf	??___flmul+3
  7880  062E  0834               	movf	??___flmul+3,w
  7881  062F  0433               	iorwf	??___flmul+2,w
  7882  0630  0432               	iorwf	??___flmul+1,w
  7883  0631  0431               	iorwf	??___flmul,w
  7884  0632  1903               	skipnz
  7885  0633  183D               	btfsc	___flmul@prod,0
  7886  0634  2E36               	goto	l3999
  7887  0635  2E38               	goto	l4003
  7888  0636                     l3999:
  7889  0636  01B7               	clrf	___flmul@aexp
  7890  0637  0AB7               	incf	___flmul@aexp,f
  7891  0638                     l4003:
  7892  0638  0837               	movf	___flmul@aexp,w
  7893  0639  1903               	btfsc	3,2
  7894  063A  2E6A               	goto	l4013
  7895  063B  3001               	movlw	1
  7896  063C  07BD               	addwf	___flmul@prod,f
  7897  063D  3000               	movlw	0
  7898  063E  1803               	skipnc
  7899  063F  3001               	movlw	1
  7900  0640  07BE               	addwf	___flmul@prod+1,f
  7901  0641  3000               	movlw	0
  7902  0642  1803               	skipnc
  7903  0643  3001               	movlw	1
  7904  0644  07BF               	addwf	___flmul@prod+2,f
  7905  0645  3000               	movlw	0
  7906  0646  1803               	skipnc
  7907  0647  3001               	movlw	1
  7908  0648  07C0               	addwf	___flmul@prod+3,f
  7909  0649  1C40               	btfss	___flmul@prod+3,0
  7910  064A  2E6A               	goto	l4013
  7911  064B  083D               	movf	___flmul@prod,w
  7912  064C  00B1               	movwf	??___flmul
  7913  064D  083E               	movf	___flmul@prod+1,w
  7914  064E  00B2               	movwf	??___flmul+1
  7915  064F  083F               	movf	___flmul@prod+2,w
  7916  0650  00B3               	movwf	??___flmul+2
  7917  0651  0840               	movf	___flmul@prod+3,w
  7918  0652  00B4               	movwf	??___flmul+3
  7919  0653  3001               	movlw	1
  7920  0654  00B5               	movwf	??___flmul+4
  7921  0655                     u3385:
  7922  0655  0D34               	rlf	??___flmul+3,w
  7923  0656  0CB4               	rrf	??___flmul+3,f
  7924  0657  0CB3               	rrf	??___flmul+2,f
  7925  0658  0CB2               	rrf	??___flmul+1,f
  7926  0659  0CB1               	rrf	??___flmul,f
  7927  065A  0BB5               	decfsz	??___flmul+4,f
  7928  065B  2E55               	goto	u3385
  7929  065C  0834               	movf	??___flmul+3,w
  7930  065D  00C0               	movwf	___flmul@prod+3
  7931  065E  0833               	movf	??___flmul+2,w
  7932  065F  00BF               	movwf	___flmul@prod+2
  7933  0660  0832               	movf	??___flmul+1,w
  7934  0661  00BE               	movwf	___flmul@prod+1
  7935  0662  0831               	movf	??___flmul,w
  7936  0663  00BD               	movwf	___flmul@prod
  7937  0664  3001               	movlw	1
  7938  0665  07C1               	addwf	___flmul@temp,f
  7939  0666  1803               	skipnc
  7940  0667  0AC2               	incf	___flmul@temp+1,f
  7941  0668  3000               	movlw	0
  7942  0669  07C2               	addwf	___flmul@temp+1,f
  7943  066A                     l4013:
  7944  066A  0842               	movf	___flmul@temp+1,w
  7945  066B  3A80               	xorlw	128
  7946  066C  00FF               	movwf	127
  7947  066D  3080               	movlw	128
  7948  066E  027F               	subwf	127,w
  7949  066F  1D03               	skipz
  7950  0670  2E73               	goto	u3395
  7951  0671  30FF               	movlw	255
  7952  0672  0241               	subwf	___flmul@temp,w
  7953  0673                     u3395:
  7954  0673  1C03               	skipc
  7955  0674  2E80               	goto	l4017
  7956  0675  307F               	movlw	127
  7957  0676  1283               	bcf	3,5	;RP0=0, select bank0
  7958  0677  1303               	bcf	3,6	;RP1=0, select bank0
  7959  0678  00C0               	movwf	___flmul@prod+3
  7960  0679  3080               	movlw	128
  7961  067A  00BF               	movwf	___flmul@prod+2
  7962  067B  3000               	movlw	0
  7963  067C  00BE               	movwf	___flmul@prod+1
  7964  067D  3000               	movlw	0
  7965  067E  00BD               	movwf	___flmul@prod
  7966  067F  2EB0               	goto	l1386
  7967  0680                     l4017:
  7968  0680  1283               	bcf	3,5	;RP0=0, select bank0
  7969  0681  1303               	bcf	3,6	;RP1=0, select bank0
  7970  0682  0842               	movf	___flmul@temp+1,w
  7971  0683  3A80               	xorlw	128
  7972  0684  00FF               	movwf	127
  7973  0685  3080               	movlw	128
  7974  0686  027F               	subwf	127,w
  7975  0687  1D03               	skipz
  7976  0688  2E8B               	goto	u3405
  7977  0689  3001               	movlw	1
  7978  068A  0241               	subwf	___flmul@temp,w
  7979  068B                     u3405:
  7980  068B  1803               	skipnc
  7981  068C  2E99               	goto	l4023
  7982  068D  3000               	movlw	0
  7983  068E  1283               	bcf	3,5	;RP0=0, select bank0
  7984  068F  1303               	bcf	3,6	;RP1=0, select bank0
  7985  0690  00C0               	movwf	___flmul@prod+3
  7986  0691  3000               	movlw	0
  7987  0692  00BF               	movwf	___flmul@prod+2
  7988  0693  3000               	movlw	0
  7989  0694  00BE               	movwf	___flmul@prod+1
  7990  0695  3000               	movlw	0
  7991  0696  00BD               	movwf	___flmul@prod
  7992  0697  01B6               	clrf	___flmul@sign
  7993  0698  2EB0               	goto	l1386
  7994  0699                     l4023:
  7995  0699  1283               	bcf	3,5	;RP0=0, select bank0
  7996  069A  1303               	bcf	3,6	;RP1=0, select bank0
  7997  069B  0841               	movf	___flmul@temp,w
  7998  069C  00B1               	movwf	??___flmul
  7999  069D  0831               	movf	??___flmul,w
  8000  069E  00BC               	movwf	___flmul@bexp
  8001  069F  30FF               	movlw	255
  8002  06A0  05BD               	andwf	___flmul@prod,f
  8003  06A1  30FF               	movlw	255
  8004  06A2  05BE               	andwf	___flmul@prod+1,f
  8005  06A3  307F               	movlw	127
  8006  06A4  05BF               	andwf	___flmul@prod+2,f
  8007  06A5  3000               	movlw	0
  8008  06A6  05C0               	andwf	___flmul@prod+3,f
  8009  06A7  183C               	btfsc	___flmul@bexp,0
  8010  06A8  17BF               	bsf	___flmul@prod+2,7
  8011  06A9  083C               	movf	___flmul@bexp,w
  8012  06AA  00B1               	movwf	??___flmul
  8013  06AB  1003               	clrc
  8014  06AC  0C31               	rrf	??___flmul,w
  8015  06AD  00B2               	movwf	??___flmul+1
  8016  06AE  0832               	movf	??___flmul+1,w
  8017  06AF  00C0               	movwf	___flmul@prod+3
  8018  06B0                     l1386:
  8019  06B0  0836               	movf	___flmul@sign,w
  8020  06B1  00B1               	movwf	??___flmul
  8021  06B2  0831               	movf	??___flmul,w
  8022  06B3  04C0               	iorwf	___flmul@prod+3,f
  8023  06B4  0840               	movf	___flmul@prod+3,w
  8024  06B5  00AC               	movwf	?___flmul+3
  8025  06B6  083F               	movf	___flmul@prod+2,w
  8026  06B7  00AB               	movwf	?___flmul+2
  8027  06B8  083E               	movf	___flmul@prod+1,w
  8028  06B9  00AA               	movwf	?___flmul+1
  8029  06BA  083D               	movf	___flmul@prod,w
  8030  06BB  00A9               	movwf	?___flmul
  8031  06BC  0008               	return
  8032  06BD                     __end_of___flmul:
  8033                           
  8034                           	psect	text21
  8035  1C4B                     __ptext21:	
  8036 ;; *************** function __Umul8_16 *****************
  8037 ;; Defined at:
  8038 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  8039 ;; Parameters:    Size  Location     Type
  8040 ;;  multiplier      1    wreg     unsigned char 
  8041 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;  multiplier      1    8[BANK0 ] unsigned char 
  8044 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  8045 ;;  product         2    4[BANK0 ] unsigned int 
  8046 ;; Return value:  Size  Location     Type
  8047 ;;                  2    0[BANK0 ] unsigned int 
  8048 ;; Registers used:
  8049 ;;		wreg, status,2, status,0
  8050 ;; Tracked objects:
  8051 ;;		On entry : 300/0
  8052 ;;		On exit  : 300/0
  8053 ;;		Unchanged: 0/0
  8054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8055 ;;      Params:         0       2       0       0       0
  8056 ;;      Locals:         0       5       0       0       0
  8057 ;;      Temps:          0       2       0       0       0
  8058 ;;      Totals:         0       9       0       0       0
  8059 ;;Total ram usage:        9 bytes
  8060 ;; Hardware stack levels used: 1
  8061 ;; Hardware stack levels required when called: 1
  8062 ;; This function calls:
  8063 ;;		Nothing
  8064 ;; This function is called by:
  8065 ;;		___flmul
  8066 ;; This function uses a non-reentrant model
  8067 ;;
  8068                           
  8069                           
  8070                           ;psect for function __Umul8_16
  8071  1C4B                     __Umul8_16:
  8072                           
  8073                           ;incstack = 0
  8074                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8075                           ;__Umul8_16@multiplier stored from wreg
  8076  1C4B  00A8               	movwf	__Umul8_16@multiplier
  8077  1C4C  01A4               	clrf	__Umul8_16@product
  8078  1C4D  01A5               	clrf	__Umul8_16@product+1
  8079  1C4E  0820               	movf	__Umul8_16@multiplicand,w
  8080  1C4F  00A2               	movwf	??__Umul8_16
  8081  1C50  01A3               	clrf	??__Umul8_16+1
  8082  1C51  0822               	movf	??__Umul8_16,w
  8083  1C52  00A6               	movwf	__Umul8_16@word_mpld
  8084  1C53  0823               	movf	??__Umul8_16+1,w
  8085  1C54  00A7               	movwf	__Umul8_16@word_mpld+1
  8086  1C55                     l3623:
  8087  1C55  1C28               	btfss	__Umul8_16@multiplier,0
  8088  1C56  2C5D               	goto	l1393
  8089  1C57  0826               	movf	__Umul8_16@word_mpld,w
  8090  1C58  07A4               	addwf	__Umul8_16@product,f
  8091  1C59  1803               	skipnc
  8092  1C5A  0AA5               	incf	__Umul8_16@product+1,f
  8093  1C5B  0827               	movf	__Umul8_16@word_mpld+1,w
  8094  1C5C  07A5               	addwf	__Umul8_16@product+1,f
  8095  1C5D                     l1393:
  8096  1C5D  3001               	movlw	1
  8097  1C5E                     u2715:
  8098  1C5E  1003               	clrc
  8099  1C5F  0DA6               	rlf	__Umul8_16@word_mpld,f
  8100  1C60  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  8101  1C61  3EFF               	addlw	-1
  8102  1C62  1D03               	skipz
  8103  1C63  2C5E               	goto	u2715
  8104  1C64  1003               	clrc
  8105  1C65  0CA8               	rrf	__Umul8_16@multiplier,f
  8106  1C66  0828               	movf	__Umul8_16@multiplier,w
  8107  1C67  1D03               	btfss	3,2
  8108  1C68  2C55               	goto	l3623
  8109  1C69  0825               	movf	__Umul8_16@product+1,w
  8110  1C6A  00A1               	movwf	?__Umul8_16+1
  8111  1C6B  0824               	movf	__Umul8_16@product,w
  8112  1C6C  00A0               	movwf	?__Umul8_16
  8113  1C6D  0008               	return
  8114  1C6E                     __end_of__Umul8_16:
  8115                           
  8116                           	psect	text22
  8117  1B28                     __ptext22:	
  8118 ;; *************** function _PROCULUS_VP_Write_String *****************
  8119 ;; Defined at:
  8120 ;;		line 205 in file "proculus.c"
  8121 ;; Parameters:    Size  Location     Type
  8122 ;;  vp              2   58[BANK0 ] unsigned int 
  8123 ;;  text            1   60[BANK0 ] PTR unsigned char 
  8124 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  8125 ;; Auto vars:     Size  Location     Type
  8126 ;;		None
  8127 ;; Return value:  Size  Location     Type
  8128 ;;                  1    wreg      void 
  8129 ;; Registers used:
  8130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8131 ;; Tracked objects:
  8132 ;;		On entry : 300/0
  8133 ;;		On exit  : 300/0
  8134 ;;		Unchanged: 0/0
  8135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8136 ;;      Params:         0       3       0       0       0
  8137 ;;      Locals:         0       0       0       0       0
  8138 ;;      Temps:          0       1       0       0       0
  8139 ;;      Totals:         0       4       0       0       0
  8140 ;;Total ram usage:        4 bytes
  8141 ;; Hardware stack levels used: 1
  8142 ;; Hardware stack levels required when called: 4
  8143 ;; This function calls:
  8144 ;;		_PROCULUS_VP_Write
  8145 ;;		_strlen
  8146 ;; This function is called by:
  8147 ;;		_Decodify_Command
  8148 ;; This function uses a non-reentrant model
  8149 ;;
  8150                           
  8151                           
  8152                           ;psect for function _PROCULUS_VP_Write_String
  8153  1B28                     _PROCULUS_VP_Write_String:
  8154                           
  8155                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  8156                           
  8157                           ;incstack = 0
  8158                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8159  1B28  085B               	movf	PROCULUS_VP_Write_String@vp+1,w
  8160  1B29  00D3               	movwf	PROCULUS_VP_Write@vp+1
  8161  1B2A  085A               	movf	PROCULUS_VP_Write_String@vp,w
  8162  1B2B  00D2               	movwf	PROCULUS_VP_Write@vp
  8163  1B2C  085C               	movf	PROCULUS_VP_Write_String@text,w
  8164  1B2D  00D4               	movwf	PROCULUS_VP_Write@vetor
  8165  1B2E  3001               	movlw	1
  8166  1B2F  00D5               	movwf	PROCULUS_VP_Write@vetor+1
  8167  1B30  085C               	movf	PROCULUS_VP_Write_String@text,w
  8168  1B31  160A  158A  2370  160A  158A  	fcall	_strlen
  8169  1B36  0820               	movf	?_strlen,w
  8170  1B37  3E01               	addlw	1
  8171  1B38  00DD               	movwf	??_PROCULUS_VP_Write_String
  8172  1B39  085D               	movf	??_PROCULUS_VP_Write_String,w
  8173  1B3A  00D6               	movwf	PROCULUS_VP_Write@size
  8174  1B3B  120A  118A  27B8   	fcall	_PROCULUS_VP_Write
  8175  1B3E  0008               	return
  8176  1B3F                     __end_of_PROCULUS_VP_Write_String:
  8177                           
  8178                           	psect	text23
  8179  1B70                     __ptext23:	
  8180 ;; *************** function _strlen *****************
  8181 ;; Defined at:
  8182 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
  8183 ;; Parameters:    Size  Location     Type
  8184 ;;  s               1    wreg     PTR const unsigned char 
  8185 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8186 ;; Auto vars:     Size  Location     Type
  8187 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  8188 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8189 ;;  cp              1    3[BANK0 ] PTR const unsigned char 
  8190 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8191 ;; Return value:  Size  Location     Type
  8192 ;;                  2    0[BANK0 ] unsigned int 
  8193 ;; Registers used:
  8194 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8195 ;; Tracked objects:
  8196 ;;		On entry : 0/300
  8197 ;;		On exit  : B00/800
  8198 ;;		Unchanged: 0/0
  8199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8200 ;;      Params:         0       2       0       0       0
  8201 ;;      Locals:         0       2       0       0       0
  8202 ;;      Temps:          0       1       0       0       0
  8203 ;;      Totals:         0       5       0       0       0
  8204 ;;Total ram usage:        5 bytes
  8205 ;; Hardware stack levels used: 1
  8206 ;; Hardware stack levels required when called: 1
  8207 ;; This function calls:
  8208 ;;		Nothing
  8209 ;; This function is called by:
  8210 ;;		_Decodify_Command
  8211 ;;		_PROCULUS_VP_Write_String
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214                           
  8215                           
  8216                           ;psect for function _strlen
  8217  1B70                     _strlen:
  8218                           
  8219                           ;incstack = 0
  8220                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  8221                           ;strlen@s stored from wreg
  8222  1B70  1283               	bcf	3,5	;RP0=0, select bank0
  8223  1B71  1303               	bcf	3,6	;RP1=0, select bank0
  8224  1B72  00A4               	movwf	strlen@s
  8225  1B73  0824               	movf	strlen@s,w
  8226  1B74  00A2               	movwf	??_strlen
  8227  1B75  0822               	movf	??_strlen,w
  8228  1B76  00A3               	movwf	strlen@cp
  8229  1B77                     l3783:
  8230  1B77  0823               	movf	strlen@cp,w
  8231  1B78  0084               	movwf	4
  8232  1B79  1783               	bsf	3,7	;select IRP bank2
  8233  1B7A  0800               	movf	0,w
  8234  1B7B  1903               	btfsc	3,2
  8235  1B7C  2B82               	goto	l3785
  8236  1B7D  3001               	movlw	1
  8237  1B7E  00A2               	movwf	??_strlen
  8238  1B7F  0822               	movf	??_strlen,w
  8239  1B80  07A3               	addwf	strlen@cp,f
  8240  1B81  2B77               	goto	l3783
  8241  1B82                     l3785:
  8242  1B82  0824               	movf	strlen@s,w
  8243  1B83  0223               	subwf	strlen@cp,w
  8244  1B84  00A0               	movwf	?_strlen
  8245  1B85  01A1               	clrf	?_strlen+1
  8246  1B86  1BA0               	btfsc	?_strlen,7
  8247  1B87  03A1               	decf	?_strlen+1,f
  8248  1B88  0008               	return
  8249  1B89                     __end_of_strlen:
  8250                           
  8251                           	psect	text24
  8252  07B8                     __ptext24:	
  8253 ;; *************** function _PROCULUS_VP_Write *****************
  8254 ;; Defined at:
  8255 ;;		line 40 in file "proculus.c"
  8256 ;; Parameters:    Size  Location     Type
  8257 ;;  vp              2   50[BANK0 ] unsigned int 
  8258 ;;  vetor           2   52[BANK0 ] PTR unsigned char 
  8259 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  8260 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(52), usart_protocol(58), 
  8261 ;;  size            1   54[BANK0 ] unsigned char 
  8262 ;; Auto vars:     Size  Location     Type
  8263 ;;  i               1   57[BANK0 ] unsigned char 
  8264 ;; Return value:  Size  Location     Type
  8265 ;;                  1    wreg      void 
  8266 ;; Registers used:
  8267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8268 ;; Tracked objects:
  8269 ;;		On entry : B00/800
  8270 ;;		On exit  : 300/0
  8271 ;;		Unchanged: 0/0
  8272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8273 ;;      Params:         0       5       0       0       0
  8274 ;;      Locals:         0       1       0       0       0
  8275 ;;      Temps:          0       2       0       0       0
  8276 ;;      Totals:         0       8       0       0       0
  8277 ;;Total ram usage:        8 bytes
  8278 ;; Hardware stack levels used: 1
  8279 ;; Hardware stack levels required when called: 3
  8280 ;; This function calls:
  8281 ;;		_PROCULUS_Delay
  8282 ;;		_USART_put_int
  8283 ;;		_USART_putc
  8284 ;; This function is called by:
  8285 ;;		_PROCULUS_VP_Write_String
  8286 ;; This function uses a non-reentrant model
  8287 ;;
  8288                           
  8289                           
  8290                           ;psect for function _PROCULUS_VP_Write
  8291  07B8                     _PROCULUS_VP_Write:
  8292                           
  8293                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  8294                           
  8295                           ;incstack = 0
  8296                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8297  07B8  30A5               	movlw	165
  8298  07B9  00CE               	movwf	USART_put_int@value
  8299  07BA  305A               	movlw	90
  8300  07BB  00CF               	movwf	USART_put_int@value+1
  8301  07BC  160A  158A  2312  120A  118A  	fcall	_USART_put_int
  8302                           
  8303                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  8304  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  8305  07C2  0856               	movf	PROCULUS_VP_Write@size,w
  8306  07C3  3E03               	addlw	3
  8307  07C4  160A  158A  22C6  120A  118A  	fcall	_USART_putc
  8308                           
  8309                           ;proculus.c: 43:      USART_putc(0x82);
  8310  07C9  3082               	movlw	130
  8311  07CA  160A  158A  22C6  120A  118A  	fcall	_USART_putc
  8312                           
  8313                           ;proculus.c: 44:      USART_put_int(vp);
  8314  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  8315  07D0  0853               	movf	PROCULUS_VP_Write@vp+1,w
  8316  07D1  00CF               	movwf	USART_put_int@value+1
  8317  07D2  0852               	movf	PROCULUS_VP_Write@vp,w
  8318  07D3  00CE               	movwf	USART_put_int@value
  8319  07D4  160A  158A  2312  120A  118A  	fcall	_USART_put_int
  8320                           
  8321                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  8322  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  8323  07DA  01D9               	clrf	PROCULUS_VP_Write@i
  8324  07DB                     l5501:
  8325  07DB  0856               	movf	PROCULUS_VP_Write@size,w
  8326  07DC  0259               	subwf	PROCULUS_VP_Write@i,w
  8327  07DD  1803               	btfsc	3,0
  8328  07DE  2FF7               	goto	l5503
  8329                           
  8330                           ;proculus.c: 46:          USART_putc(vetor[i]);
  8331  07DF  0859               	movf	PROCULUS_VP_Write@i,w
  8332  07E0  0754               	addwf	PROCULUS_VP_Write@vetor,w
  8333  07E1  00D7               	movwf	??_PROCULUS_VP_Write
  8334  07E2  0855               	movf	PROCULUS_VP_Write@vetor+1,w
  8335  07E3  1803               	skipnc
  8336  07E4  3E01               	addlw	1
  8337  07E5  00D8               	movwf	??_PROCULUS_VP_Write+1
  8338  07E6  0857               	movf	??_PROCULUS_VP_Write,w
  8339  07E7  0084               	movwf	4
  8340  07E8  1783               	bsf	3,7
  8341  07E9  1C58               	btfss	??_PROCULUS_VP_Write+1,0
  8342  07EA  1383               	bcf	3,7
  8343  07EB  0800               	movf	0,w
  8344  07EC  160A  158A  22C6  120A  118A  	fcall	_USART_putc
  8345  07F1  3001               	movlw	1
  8346  07F2  1283               	bcf	3,5	;RP0=0, select bank0
  8347  07F3  00D7               	movwf	??_PROCULUS_VP_Write
  8348  07F4  0857               	movf	??_PROCULUS_VP_Write,w
  8349  07F5  07D9               	addwf	PROCULUS_VP_Write@i,f
  8350  07F6  2FDB               	goto	l5501
  8351  07F7                     l5503:
  8352                           
  8353                           ;proculus.c: 48:      PROCULUS_Delay(1);
  8354  07F7  3001               	movlw	1
  8355  07F8  00A0               	movwf	PROCULUS_Delay@tempo_ms
  8356  07F9  3000               	movlw	0
  8357  07FA  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  8358  07FB  160A  158A  2389   	fcall	_PROCULUS_Delay
  8359  07FE  0008               	return
  8360  07FF                     __end_of_PROCULUS_VP_Write:
  8361                           
  8362                           	psect	text25
  8363  1AE7                     __ptext25:	
  8364 ;; *************** function _PROCULUS_Show_Screen *****************
  8365 ;; Defined at:
  8366 ;;		line 243 in file "proculus.c"
  8367 ;; Parameters:    Size  Location     Type
  8368 ;;  screen          2   54[BANK0 ] unsigned int 
  8369 ;; Auto vars:     Size  Location     Type
  8370 ;;  vetor           3   57[BANK0 ] unsigned char [3]
  8371 ;; Return value:  Size  Location     Type
  8372 ;;                  1    wreg      void 
  8373 ;; Registers used:
  8374 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8375 ;; Tracked objects:
  8376 ;;		On entry : 300/0
  8377 ;;		On exit  : 300/0
  8378 ;;		Unchanged: 0/0
  8379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8380 ;;      Params:         0       2       0       0       0
  8381 ;;      Locals:         0       3       0       0       0
  8382 ;;      Temps:          0       1       0       0       0
  8383 ;;      Totals:         0       6       0       0       0
  8384 ;;Total ram usage:        6 bytes
  8385 ;; Hardware stack levels used: 1
  8386 ;; Hardware stack levels required when called: 4
  8387 ;; This function calls:
  8388 ;;		_PROCULUS_Control_Register_Write
  8389 ;; This function is called by:
  8390 ;;		_Decodify_Command
  8391 ;; This function uses a non-reentrant model
  8392 ;;
  8393                           
  8394                           
  8395                           ;psect for function _PROCULUS_Show_Screen
  8396  1AE7                     _PROCULUS_Show_Screen:
  8397                           
  8398                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  8399                           
  8400                           ;incstack = 0
  8401                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8402  1AE7  3003               	movlw	3
  8403  1AE8  00D8               	movwf	??_PROCULUS_Show_Screen
  8404  1AE9  0858               	movf	??_PROCULUS_Show_Screen,w
  8405  1AEA  00D9               	movwf	PROCULUS_Show_Screen@vetor
  8406                           
  8407                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  8408  1AEB  0857               	movf	PROCULUS_Show_Screen@screen+1,w
  8409  1AEC  00D8               	movwf	??_PROCULUS_Show_Screen
  8410  1AED  0858               	movf	??_PROCULUS_Show_Screen,w
  8411  1AEE  00DA               	movwf	PROCULUS_Show_Screen@vetor+1
  8412                           
  8413                           ;proculus.c: 247:      vetor[2] = (char) screen;
  8414  1AEF  0856               	movf	PROCULUS_Show_Screen@screen,w
  8415  1AF0  00D8               	movwf	??_PROCULUS_Show_Screen
  8416  1AF1  0858               	movf	??_PROCULUS_Show_Screen,w
  8417  1AF2  00DB               	movwf	PROCULUS_Show_Screen@vetor+2
  8418                           
  8419                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  8420  1AF3  3003               	movlw	3
  8421  1AF4  00D8               	movwf	??_PROCULUS_Show_Screen
  8422  1AF5  0858               	movf	??_PROCULUS_Show_Screen,w
  8423  1AF6  00D2               	movwf	PROCULUS_Control_Register_Write@size
  8424  1AF7  3059               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  8425  1AF8  160A  158A  2622   	fcall	_PROCULUS_Control_Register_Write
  8426  1AFB  0008               	return
  8427  1AFC                     __end_of_PROCULUS_Show_Screen:
  8428                           
  8429                           	psect	text26
  8430  1C29                     __ptext26:	
  8431 ;; *************** function _PROCULUS_Buzzer *****************
  8432 ;; Defined at:
  8433 ;;		line 223 in file "proculus.c"
  8434 ;; Parameters:    Size  Location     Type
  8435 ;;  time_ms_x_10    2   54[BANK0 ] unsigned int 
  8436 ;; Auto vars:     Size  Location     Type
  8437 ;;  vetor           2   57[BANK0 ] unsigned char [2]
  8438 ;; Return value:  Size  Location     Type
  8439 ;;                  1    wreg      void 
  8440 ;; Registers used:
  8441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8442 ;; Tracked objects:
  8443 ;;		On entry : 300/0
  8444 ;;		On exit  : 300/0
  8445 ;;		Unchanged: 0/0
  8446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8447 ;;      Params:         0       2       0       0       0
  8448 ;;      Locals:         0       2       0       0       0
  8449 ;;      Temps:          0       1       0       0       0
  8450 ;;      Totals:         0       5       0       0       0
  8451 ;;Total ram usage:        5 bytes
  8452 ;; Hardware stack levels used: 1
  8453 ;; Hardware stack levels required when called: 4
  8454 ;; This function calls:
  8455 ;;		_PROCULUS_Control_Register_Write
  8456 ;;		___lwdiv
  8457 ;; This function is called by:
  8458 ;;		_Decodify_Command
  8459 ;; This function uses a non-reentrant model
  8460 ;;
  8461                           
  8462                           
  8463                           ;psect for function _PROCULUS_Buzzer
  8464  1C29                     _PROCULUS_Buzzer:
  8465                           
  8466                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
  8467                           
  8468                           ;incstack = 0
  8469                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8470  1C29  300A               	movlw	10
  8471  1C2A  00A0               	movwf	___lwdiv@divisor
  8472  1C2B  3000               	movlw	0
  8473  1C2C  00A1               	movwf	___lwdiv@divisor+1
  8474  1C2D  0857               	movf	PROCULUS_Buzzer@time_ms_x_10+1,w
  8475  1C2E  00A3               	movwf	___lwdiv@dividend+1
  8476  1C2F  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  8477  1C30  00A2               	movwf	___lwdiv@dividend
  8478  1C31  160A  158A  2696  160A  158A  	fcall	___lwdiv
  8479  1C36  0821               	movf	?___lwdiv+1,w
  8480  1C37  00D7               	movwf	PROCULUS_Buzzer@time_ms_x_10+1
  8481  1C38  0820               	movf	?___lwdiv,w
  8482  1C39  00D6               	movwf	PROCULUS_Buzzer@time_ms_x_10
  8483                           
  8484                           ;proculus.c: 226:      vetor[0]=0x02;
  8485  1C3A  3002               	movlw	2
  8486  1C3B  00D8               	movwf	??_PROCULUS_Buzzer
  8487  1C3C  0858               	movf	??_PROCULUS_Buzzer,w
  8488  1C3D  00D9               	movwf	PROCULUS_Buzzer@vetor
  8489                           
  8490                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
  8491  1C3E  0856               	movf	PROCULUS_Buzzer@time_ms_x_10,w
  8492  1C3F  00D8               	movwf	??_PROCULUS_Buzzer
  8493  1C40  0858               	movf	??_PROCULUS_Buzzer,w
  8494  1C41  00DA               	movwf	PROCULUS_Buzzer@vetor+1
  8495                           
  8496                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
  8497  1C42  3002               	movlw	2
  8498  1C43  00D8               	movwf	??_PROCULUS_Buzzer
  8499  1C44  0858               	movf	??_PROCULUS_Buzzer,w
  8500  1C45  00D2               	movwf	PROCULUS_Control_Register_Write@size
  8501  1C46  3059               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
  8502  1C47  160A  158A  2622   	fcall	_PROCULUS_Control_Register_Write
  8503  1C4A  0008               	return
  8504  1C4B                     __end_of_PROCULUS_Buzzer:
  8505                           
  8506                           	psect	text27
  8507  1E96                     __ptext27:	
  8508 ;; *************** function ___lwdiv *****************
  8509 ;; Defined at:
  8510 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  8511 ;; Parameters:    Size  Location     Type
  8512 ;;  divisor         2    0[BANK0 ] unsigned int 
  8513 ;;  dividend        2    2[BANK0 ] unsigned int 
  8514 ;; Auto vars:     Size  Location     Type
  8515 ;;  quotient        2    5[BANK0 ] unsigned int 
  8516 ;;  counter         1    7[BANK0 ] unsigned char 
  8517 ;; Return value:  Size  Location     Type
  8518 ;;                  2    0[BANK0 ] unsigned int 
  8519 ;; Registers used:
  8520 ;;		wreg, status,2, status,0
  8521 ;; Tracked objects:
  8522 ;;		On entry : 300/0
  8523 ;;		On exit  : 300/0
  8524 ;;		Unchanged: 0/0
  8525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8526 ;;      Params:         0       4       0       0       0
  8527 ;;      Locals:         0       3       0       0       0
  8528 ;;      Temps:          0       1       0       0       0
  8529 ;;      Totals:         0       8       0       0       0
  8530 ;;Total ram usage:        8 bytes
  8531 ;; Hardware stack levels used: 1
  8532 ;; Hardware stack levels required when called: 1
  8533 ;; This function calls:
  8534 ;;		Nothing
  8535 ;; This function is called by:
  8536 ;;		_ADC_Media_10bits
  8537 ;;		_PROCULUS_Buzzer
  8538 ;; This function uses a non-reentrant model
  8539 ;;
  8540                           
  8541                           
  8542                           ;psect for function ___lwdiv
  8543  1E96                     ___lwdiv:
  8544                           
  8545                           ;incstack = 0
  8546                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8547  1E96  01A5               	clrf	___lwdiv@quotient
  8548  1E97  01A6               	clrf	___lwdiv@quotient+1
  8549  1E98  0820               	movf	___lwdiv@divisor,w
  8550  1E99  0421               	iorwf	___lwdiv@divisor+1,w
  8551  1E9A  1903               	btfsc	3,2
  8552  1E9B  2ECD               	goto	l3891
  8553  1E9C  01A7               	clrf	___lwdiv@counter
  8554  1E9D  0AA7               	incf	___lwdiv@counter,f
  8555  1E9E                     l3879:
  8556  1E9E  1BA1               	btfsc	___lwdiv@divisor+1,7
  8557  1E9F  2EAC               	goto	l3881
  8558  1EA0  3001               	movlw	1
  8559  1EA1                     u3005:
  8560  1EA1  1003               	clrc
  8561  1EA2  0DA0               	rlf	___lwdiv@divisor,f
  8562  1EA3  0DA1               	rlf	___lwdiv@divisor+1,f
  8563  1EA4  3EFF               	addlw	-1
  8564  1EA5  1D03               	skipz
  8565  1EA6  2EA1               	goto	u3005
  8566  1EA7  3001               	movlw	1
  8567  1EA8  00A4               	movwf	??___lwdiv
  8568  1EA9  0824               	movf	??___lwdiv,w
  8569  1EAA  07A7               	addwf	___lwdiv@counter,f
  8570  1EAB  2E9E               	goto	l3879
  8571  1EAC                     l3881:
  8572  1EAC  3001               	movlw	1
  8573  1EAD                     u3025:
  8574  1EAD  1003               	clrc
  8575  1EAE  0DA5               	rlf	___lwdiv@quotient,f
  8576  1EAF  0DA6               	rlf	___lwdiv@quotient+1,f
  8577  1EB0  3EFF               	addlw	-1
  8578  1EB1  1D03               	skipz
  8579  1EB2  2EAD               	goto	u3025
  8580  1EB3  0821               	movf	___lwdiv@divisor+1,w
  8581  1EB4  0223               	subwf	___lwdiv@dividend+1,w
  8582  1EB5  1D03               	skipz
  8583  1EB6  2EB9               	goto	u3035
  8584  1EB7  0820               	movf	___lwdiv@divisor,w
  8585  1EB8  0222               	subwf	___lwdiv@dividend,w
  8586  1EB9                     u3035:
  8587  1EB9  1C03               	skipc
  8588  1EBA  2EC2               	goto	l3887
  8589  1EBB  0820               	movf	___lwdiv@divisor,w
  8590  1EBC  02A2               	subwf	___lwdiv@dividend,f
  8591  1EBD  0821               	movf	___lwdiv@divisor+1,w
  8592  1EBE  1C03               	skipc
  8593  1EBF  03A3               	decf	___lwdiv@dividend+1,f
  8594  1EC0  02A3               	subwf	___lwdiv@dividend+1,f
  8595  1EC1  1425               	bsf	___lwdiv@quotient,0
  8596  1EC2                     l3887:
  8597  1EC2  3001               	movlw	1
  8598  1EC3                     u3045:
  8599  1EC3  1003               	clrc
  8600  1EC4  0CA1               	rrf	___lwdiv@divisor+1,f
  8601  1EC5  0CA0               	rrf	___lwdiv@divisor,f
  8602  1EC6  3EFF               	addlw	-1
  8603  1EC7  1D03               	skipz
  8604  1EC8  2EC3               	goto	u3045
  8605  1EC9  3001               	movlw	1
  8606  1ECA  02A7               	subwf	___lwdiv@counter,f
  8607  1ECB  1D03               	btfss	3,2
  8608  1ECC  2EAC               	goto	l3881
  8609  1ECD                     l3891:
  8610  1ECD  0826               	movf	___lwdiv@quotient+1,w
  8611  1ECE  00A1               	movwf	?___lwdiv+1
  8612  1ECF  0825               	movf	___lwdiv@quotient,w
  8613  1ED0  00A0               	movwf	?___lwdiv
  8614  1ED1  0008               	return
  8615  1ED2                     __end_of___lwdiv:
  8616                           
  8617                           	psect	text28
  8618  1E22                     __ptext28:	
  8619 ;; *************** function _PROCULUS_Control_Register_Write *****************
  8620 ;; Defined at:
  8621 ;;		line 13 in file "proculus.c"
  8622 ;; Parameters:    Size  Location     Type
  8623 ;;  vetor           1    wreg     PTR unsigned char 
  8624 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  8625 ;;  size            1   50[BANK0 ] unsigned char 
  8626 ;; Auto vars:     Size  Location     Type
  8627 ;;  vetor           1   52[BANK0 ] PTR unsigned char 
  8628 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  8629 ;;  i               1   53[BANK0 ] unsigned char 
  8630 ;; Return value:  Size  Location     Type
  8631 ;;                  1    wreg      void 
  8632 ;; Registers used:
  8633 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8634 ;; Tracked objects:
  8635 ;;		On entry : 300/0
  8636 ;;		On exit  : 300/0
  8637 ;;		Unchanged: 0/0
  8638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8639 ;;      Params:         0       1       0       0       0
  8640 ;;      Locals:         0       2       0       0       0
  8641 ;;      Temps:          0       1       0       0       0
  8642 ;;      Totals:         0       4       0       0       0
  8643 ;;Total ram usage:        4 bytes
  8644 ;; Hardware stack levels used: 1
  8645 ;; Hardware stack levels required when called: 3
  8646 ;; This function calls:
  8647 ;;		_PROCULUS_Delay
  8648 ;;		_USART_put_int
  8649 ;;		_USART_putc
  8650 ;; This function is called by:
  8651 ;;		_PROCULUS_Buzzer
  8652 ;;		_PROCULUS_Show_Screen
  8653 ;; This function uses a non-reentrant model
  8654 ;;
  8655                           
  8656                           
  8657                           ;psect for function _PROCULUS_Control_Register_Write
  8658  1E22                     _PROCULUS_Control_Register_Write:
  8659                           
  8660                           ;incstack = 0
  8661                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
  8662                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
  8663  1E22  00D4               	movwf	PROCULUS_Control_Register_Write@vetor
  8664                           
  8665                           ;proculus.c: 14:      USART_put_int(0x5AA5);
  8666  1E23  30A5               	movlw	165
  8667  1E24  00CE               	movwf	USART_put_int@value
  8668  1E25  305A               	movlw	90
  8669  1E26  00CF               	movwf	USART_put_int@value+1
  8670  1E27  160A  158A  2312  160A  158A  	fcall	_USART_put_int
  8671                           
  8672                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
  8673  1E2C  1283               	bcf	3,5	;RP0=0, select bank0
  8674  1E2D  0852               	movf	PROCULUS_Control_Register_Write@size,w
  8675  1E2E  3E01               	addlw	1
  8676  1E2F  160A  158A  22C6  160A  158A  	fcall	_USART_putc
  8677                           
  8678                           ;proculus.c: 16:      USART_putc(0x80);
  8679  1E34  3080               	movlw	128
  8680  1E35  160A  158A  22C6  160A  158A  	fcall	_USART_putc
  8681                           
  8682                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
  8683  1E3A  1283               	bcf	3,5	;RP0=0, select bank0
  8684  1E3B  01D5               	clrf	PROCULUS_Control_Register_Write@i
  8685  1E3C                     l3813:
  8686  1E3C  0852               	movf	PROCULUS_Control_Register_Write@size,w
  8687  1E3D  0255               	subwf	PROCULUS_Control_Register_Write@i,w
  8688  1E3E  1803               	btfsc	3,0
  8689  1E3F  2E52               	goto	l3815
  8690                           
  8691                           ;proculus.c: 18:          USART_putc(vetor[i]);
  8692  1E40  0855               	movf	PROCULUS_Control_Register_Write@i,w
  8693  1E41  0754               	addwf	PROCULUS_Control_Register_Write@vetor,w
  8694  1E42  00D3               	movwf	??_PROCULUS_Control_Register_Write
  8695  1E43  0853               	movf	??_PROCULUS_Control_Register_Write,w
  8696  1E44  0084               	movwf	4
  8697  1E45  1383               	bcf	3,7	;select IRP bank0
  8698  1E46  0800               	movf	0,w
  8699  1E47  160A  158A  22C6  160A  158A  	fcall	_USART_putc
  8700  1E4C  3001               	movlw	1
  8701  1E4D  1283               	bcf	3,5	;RP0=0, select bank0
  8702  1E4E  00D3               	movwf	??_PROCULUS_Control_Register_Write
  8703  1E4F  0853               	movf	??_PROCULUS_Control_Register_Write,w
  8704  1E50  07D5               	addwf	PROCULUS_Control_Register_Write@i,f
  8705  1E51  2E3C               	goto	l3813
  8706  1E52                     l3815:
  8707                           
  8708                           ;proculus.c: 19:      PROCULUS_Delay(1);
  8709  1E52  3001               	movlw	1
  8710  1E53  00A0               	movwf	PROCULUS_Delay@tempo_ms
  8711  1E54  3000               	movlw	0
  8712  1E55  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  8713  1E56  160A  158A  2389   	fcall	_PROCULUS_Delay
  8714  1E59  0008               	return
  8715  1E5A                     __end_of_PROCULUS_Control_Register_Write:
  8716                           
  8717                           	psect	text29
  8718  1B12                     __ptext29:	
  8719 ;; *************** function _USART_put_int *****************
  8720 ;; Defined at:
  8721 ;;		line 137 in file "usart.c"
  8722 ;; Parameters:    Size  Location     Type
  8723 ;;  value           2   46[BANK0 ] int 
  8724 ;; Auto vars:     Size  Location     Type
  8725 ;;  dado            1   49[BANK0 ] PTR unsigned char 
  8726 ;;		 -> USART_put_int@value(2), 
  8727 ;; Return value:  Size  Location     Type
  8728 ;;                  1    wreg      void 
  8729 ;; Registers used:
  8730 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8731 ;; Tracked objects:
  8732 ;;		On entry : 300/0
  8733 ;;		On exit  : 300/100
  8734 ;;		Unchanged: 0/0
  8735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8736 ;;      Params:         0       2       0       0       0
  8737 ;;      Locals:         0       1       0       0       0
  8738 ;;      Temps:          0       1       0       0       0
  8739 ;;      Totals:         0       4       0       0       0
  8740 ;;Total ram usage:        4 bytes
  8741 ;; Hardware stack levels used: 1
  8742 ;; Hardware stack levels required when called: 2
  8743 ;; This function calls:
  8744 ;;		_USART_putc
  8745 ;; This function is called by:
  8746 ;;		_Decodify_Command
  8747 ;;		_PROCULUS_Control_Register_Write
  8748 ;;		_PROCULUS_VP_Write
  8749 ;; This function uses a non-reentrant model
  8750 ;;
  8751                           
  8752                           
  8753                           ;psect for function _USART_put_int
  8754  1B12                     _USART_put_int:
  8755                           
  8756                           ;usart.c: 138:      char *dado;;usart.c: 139:      dado=(char*)&value;
  8757                           
  8758                           ;incstack = 0
  8759                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8760  1B12  304E               	movlw	(low (USART_put_int@value| 0))& (0+255)
  8761  1B13  00D0               	movwf	??_USART_put_int
  8762  1B14  0850               	movf	??_USART_put_int,w
  8763  1B15  00D1               	movwf	USART_put_int@dado
  8764                           
  8765                           ;usart.c: 140:      USART_putc(*(dado+1));
  8766  1B16  0A51               	incf	USART_put_int@dado,w
  8767  1B17  0084               	movwf	4
  8768  1B18  1383               	bcf	3,7	;select IRP bank0
  8769  1B19  0800               	movf	0,w
  8770  1B1A  160A  158A  22C6  160A  158A  	fcall	_USART_putc
  8771                           
  8772                           ;usart.c: 141:      USART_putc(*dado);
  8773  1B1F  1283               	bcf	3,5	;RP0=0, select bank0
  8774  1B20  0851               	movf	USART_put_int@dado,w
  8775  1B21  0084               	movwf	4
  8776  1B22  1383               	bcf	3,7	;select IRP bank0
  8777  1B23  0800               	movf	0,w
  8778  1B24  160A  158A  22C6   	fcall	_USART_putc
  8779  1B27  0008               	return
  8780  1B28                     __end_of_USART_put_int:
  8781                           
  8782                           	psect	text30
  8783  1B89                     __ptext30:	
  8784 ;; *************** function _PROCULUS_Delay *****************
  8785 ;; Defined at:
  8786 ;;		line 267 in file "proculus.c"
  8787 ;; Parameters:    Size  Location     Type
  8788 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
  8789 ;; Auto vars:     Size  Location     Type
  8790 ;;  i               2    4[BANK0 ] unsigned int 
  8791 ;; Return value:  Size  Location     Type
  8792 ;;                  1    wreg      void 
  8793 ;; Registers used:
  8794 ;;		wreg, status,2
  8795 ;; Tracked objects:
  8796 ;;		On entry : 300/800
  8797 ;;		On exit  : 300/0
  8798 ;;		Unchanged: 0/0
  8799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8800 ;;      Params:         0       2       0       0       0
  8801 ;;      Locals:         0       2       0       0       0
  8802 ;;      Temps:          0       2       0       0       0
  8803 ;;      Totals:         0       6       0       0       0
  8804 ;;Total ram usage:        6 bytes
  8805 ;; Hardware stack levels used: 1
  8806 ;; Hardware stack levels required when called: 1
  8807 ;; This function calls:
  8808 ;;		Nothing
  8809 ;; This function is called by:
  8810 ;;		_PROCULUS_Control_Register_Write
  8811 ;;		_PROCULUS_VP_Write
  8812 ;; This function uses a non-reentrant model
  8813 ;;
  8814                           
  8815                           
  8816                           ;psect for function _PROCULUS_Delay
  8817  1B89                     _PROCULUS_Delay:
  8818                           
  8819                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
  8820                           
  8821                           ;incstack = 0
  8822                           ; Regs used in _PROCULUS_Delay: [wreg+status,2]
  8823  1B89  01A4               	clrf	PROCULUS_Delay@i
  8824  1B8A  01A5               	clrf	PROCULUS_Delay@i+1
  8825  1B8B                     l788:
  8826  1B8B  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
  8827  1B8C  0225               	subwf	PROCULUS_Delay@i+1,w
  8828  1B8D  1D03               	skipz
  8829  1B8E  2B91               	goto	u2695
  8830  1B8F  0820               	movf	PROCULUS_Delay@tempo_ms,w
  8831  1B90  0224               	subwf	PROCULUS_Delay@i,w
  8832  1B91                     u2695:
  8833  1B91  1803               	btfsc	3,0
  8834  1B92  0008               	return
  8835                           
  8836                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
  8837  1B93  3003               	movlw	3
  8838  1B94  1283               	bcf	3,5	;RP0=0, select bank0
  8839  1B95  1303               	bcf	3,6	;RP1=0, select bank0
  8840  1B96  00A3               	movwf	??_PROCULUS_Delay+1
  8841  1B97  3097               	movlw	151
  8842  1B98  00A2               	movwf	??_PROCULUS_Delay
  8843  1B99                     u5257:
  8844  1B99  0BA2               	decfsz	??_PROCULUS_Delay,f
  8845  1B9A  2B99               	goto	u5257
  8846  1B9B  0BA3               	decfsz	??_PROCULUS_Delay+1,f
  8847  1B9C  2B99               	goto	u5257
  8848                           
  8849                           ;proculus.c: 270:     }
  8850  1B9D  3001               	movlw	1
  8851  1B9E  1283               	bcf	3,5	;RP0=0, select bank0
  8852  1B9F  1303               	bcf	3,6	;RP1=0, select bank0
  8853  1BA0  07A4               	addwf	PROCULUS_Delay@i,f
  8854  1BA1  1803               	skipnc
  8855  1BA2  0AA5               	incf	PROCULUS_Delay@i+1,f
  8856  1BA3  3000               	movlw	0
  8857  1BA4  07A5               	addwf	PROCULUS_Delay@i+1,f
  8858  1BA5  2B8B               	goto	l788
  8859  1BA6                     __end_of_PROCULUS_Delay:
  8860                           
  8861                           	psect	text31
  8862  0804                     __ptext31:	
  8863 ;; *************** function _EEPROM_Write_String *****************
  8864 ;; Defined at:
  8865 ;;		line 97 in file "eeprom.c"
  8866 ;; Parameters:    Size  Location     Type
  8867 ;;  addr            1    wreg     unsigned char 
  8868 ;;  dado            1    5[BANK0 ] PTR unsigned char 
  8869 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  8870 ;; Auto vars:     Size  Location     Type
  8871 ;;  addr            1    7[BANK0 ] unsigned char 
  8872 ;; Return value:  Size  Location     Type
  8873 ;;                  1    wreg      void 
  8874 ;; Registers used:
  8875 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8876 ;; Tracked objects:
  8877 ;;		On entry : 300/300
  8878 ;;		On exit  : 0/0
  8879 ;;		Unchanged: 0/0
  8880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8881 ;;      Params:         0       1       0       0       0
  8882 ;;      Locals:         0       1       0       0       0
  8883 ;;      Temps:          0       1       0       0       0
  8884 ;;      Totals:         0       3       0       0       0
  8885 ;;Total ram usage:        3 bytes
  8886 ;; Hardware stack levels used: 1
  8887 ;; Hardware stack levels required when called: 2
  8888 ;; This function calls:
  8889 ;;		_EEPROM_Write_Byte
  8890 ;; This function is called by:
  8891 ;;		_Decodify_Command
  8892 ;; This function uses a non-reentrant model
  8893 ;;
  8894                           
  8895                           
  8896                           ;psect for function _EEPROM_Write_String
  8897  0804                     _EEPROM_Write_String:
  8898                           
  8899                           ;incstack = 0
  8900                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8901                           ;EEPROM_Write_String@addr stored from wreg
  8902  0804  1283               	bcf	3,5	;RP0=0, select bank0
  8903  0805  1303               	bcf	3,6	;RP1=0, select bank0
  8904  0806  00A7               	movwf	EEPROM_Write_String@addr
  8905  0807                     l4449:	
  8906                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
  8907                           
  8908                           
  8909                           ;eeprom.c: 99:     while(*dado)
  8910  0807  0825               	movf	EEPROM_Write_String@dado,w
  8911  0808  0084               	movwf	4
  8912  0809  1783               	bsf	3,7	;select IRP bank2
  8913  080A  0800               	movf	0,w
  8914  080B  1903               	btfsc	3,2
  8915  080C  2824               	goto	l4451
  8916                           
  8917                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
  8918  080D  0825               	movf	EEPROM_Write_String@dado,w
  8919  080E  0084               	movwf	4
  8920  080F  0800               	movf	0,w
  8921  0810  00A6               	movwf	??_EEPROM_Write_String
  8922  0811  0826               	movf	??_EEPROM_Write_String,w
  8923  0812  00A0               	movwf	EEPROM_Write_Byte@dado
  8924  0813  0827               	movf	EEPROM_Write_String@addr,w
  8925  0814  160A  158A  265A  120A  158A  	fcall	_EEPROM_Write_Byte
  8926                           
  8927                           ;eeprom.c: 102:      addr++;
  8928  0819  3001               	movlw	1
  8929  081A  1283               	bcf	3,5	;RP0=0, select bank0
  8930  081B  1303               	bcf	3,6	;RP1=0, select bank0
  8931  081C  00A6               	movwf	??_EEPROM_Write_String
  8932  081D  0826               	movf	??_EEPROM_Write_String,w
  8933  081E  07A7               	addwf	EEPROM_Write_String@addr,f
  8934                           
  8935                           ;eeprom.c: 103:      dado++;
  8936  081F  3001               	movlw	1
  8937  0820  00A6               	movwf	??_EEPROM_Write_String
  8938  0821  0826               	movf	??_EEPROM_Write_String,w
  8939  0822  07A5               	addwf	EEPROM_Write_String@dado,f
  8940  0823  2807               	goto	l4449
  8941  0824                     l4451:
  8942                           
  8943                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
  8944  0824  0825               	movf	EEPROM_Write_String@dado,w
  8945  0825  0084               	movwf	4
  8946  0826  0800               	movf	0,w
  8947  0827  00A6               	movwf	??_EEPROM_Write_String
  8948  0828  0826               	movf	??_EEPROM_Write_String,w
  8949  0829  00A0               	movwf	EEPROM_Write_Byte@dado
  8950  082A  0827               	movf	EEPROM_Write_String@addr,w
  8951  082B  160A  158A  265A   	fcall	_EEPROM_Write_Byte
  8952  082E  0008               	return
  8953  082F                     __end_of_EEPROM_Write_String:
  8954                           
  8955                           	psect	text32
  8956  1D19                     __ptext32:	
  8957 ;; *************** function _EEPROM_Write_Integer *****************
  8958 ;; Defined at:
  8959 ;;		line 68 in file "eeprom.c"
  8960 ;; Parameters:    Size  Location     Type
  8961 ;;  addr            1    wreg     unsigned char 
  8962 ;;  dado            2    5[BANK0 ] unsigned int 
  8963 ;; Auto vars:     Size  Location     Type
  8964 ;;  addr            1   10[BANK0 ] unsigned char 
  8965 ;;  i               1   11[BANK0 ] unsigned char 
  8966 ;;  ptr             1    9[BANK0 ] PTR unsigned char 
  8967 ;;		 -> EEPROM_Write_Integer@dado(2), 
  8968 ;;  addr_memo       1    0        unsigned char 
  8969 ;; Return value:  Size  Location     Type
  8970 ;;                  1    wreg      void 
  8971 ;; Registers used:
  8972 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8973 ;; Tracked objects:
  8974 ;;		On entry : 200/0
  8975 ;;		On exit  : 0/0
  8976 ;;		Unchanged: 0/0
  8977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8978 ;;      Params:         0       2       0       0       0
  8979 ;;      Locals:         0       3       0       0       0
  8980 ;;      Temps:          0       2       0       0       0
  8981 ;;      Totals:         0       7       0       0       0
  8982 ;;Total ram usage:        7 bytes
  8983 ;; Hardware stack levels used: 1
  8984 ;; Hardware stack levels required when called: 2
  8985 ;; This function calls:
  8986 ;;		_EEPROM_Write_Byte
  8987 ;; This function is called by:
  8988 ;;		_main
  8989 ;;		_Decodify_Command
  8990 ;; This function uses a non-reentrant model
  8991 ;;
  8992                           
  8993                           
  8994                           ;psect for function _EEPROM_Write_Integer
  8995  1D19                     _EEPROM_Write_Integer:
  8996                           
  8997                           ;incstack = 0
  8998                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8999                           ;EEPROM_Write_Integer@addr stored from wreg
  9000  1D19  1283               	bcf	3,5	;RP0=0, select bank0
  9001  1D1A  00AA               	movwf	EEPROM_Write_Integer@addr
  9002                           
  9003                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
  9004  1D1B  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
  9005  1D1C  00A7               	movwf	??_EEPROM_Write_Integer
  9006  1D1D  0827               	movf	??_EEPROM_Write_Integer,w
  9007  1D1E  00A9               	movwf	EEPROM_Write_Integer@ptr
  9008                           
  9009                           ;eeprom.c: 75:       for (i=0;i<2;i++)
  9010  1D1F  01AB               	clrf	EEPROM_Write_Integer@i
  9011  1D20                     l4399:
  9012                           
  9013                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
  9014  1D20  0829               	movf	EEPROM_Write_Integer@ptr,w
  9015  1D21  0084               	movwf	4
  9016  1D22  1383               	bcf	3,7	;select IRP bank0
  9017  1D23  0800               	movf	0,w
  9018  1D24  00A7               	movwf	??_EEPROM_Write_Integer
  9019  1D25  0827               	movf	??_EEPROM_Write_Integer,w
  9020  1D26  00A0               	movwf	EEPROM_Write_Byte@dado
  9021  1D27  082A               	movf	EEPROM_Write_Integer@addr,w
  9022  1D28  160A  158A  265A  160A  158A  	fcall	_EEPROM_Write_Byte
  9023  1D2D  3001               	movlw	1
  9024  1D2E  1283               	bcf	3,5	;RP0=0, select bank0
  9025  1D2F  1303               	bcf	3,6	;RP1=0, select bank0
  9026  1D30  00A7               	movwf	??_EEPROM_Write_Integer
  9027  1D31  0827               	movf	??_EEPROM_Write_Integer,w
  9028  1D32  07A9               	addwf	EEPROM_Write_Integer@ptr,f
  9029  1D33  3001               	movlw	1
  9030  1D34  00A7               	movwf	??_EEPROM_Write_Integer
  9031  1D35  0827               	movf	??_EEPROM_Write_Integer,w
  9032  1D36  07AA               	addwf	EEPROM_Write_Integer@addr,f
  9033  1D37  3001               	movlw	1
  9034  1D38  00A7               	movwf	??_EEPROM_Write_Integer
  9035  1D39  0827               	movf	??_EEPROM_Write_Integer,w
  9036  1D3A  07AB               	addwf	EEPROM_Write_Integer@i,f
  9037  1D3B  3002               	movlw	2
  9038  1D3C  022B               	subwf	EEPROM_Write_Integer@i,w
  9039  1D3D  1C03               	skipc
  9040  1D3E  2D20               	goto	l4399
  9041                           
  9042                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
  9043  1D3F  304E               	movlw	78
  9044  1D40  1283               	bcf	3,5	;RP0=0, select bank0
  9045  1D41  1303               	bcf	3,6	;RP1=0, select bank0
  9046  1D42  00A8               	movwf	??_EEPROM_Write_Integer+1
  9047  1D43  30EA               	movlw	234
  9048  1D44  00A7               	movwf	??_EEPROM_Write_Integer
  9049  1D45                     u5267:
  9050  1D45  0BA7               	decfsz	??_EEPROM_Write_Integer,f
  9051  1D46  2D45               	goto	u5267
  9052  1D47  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
  9053  1D48  2D45               	goto	u5267
  9054  1D49  0000               	nop
  9055  1D4A  0008               	return
  9056  1D4B                     __end_of_EEPROM_Write_Integer:
  9057                           
  9058                           	psect	text33
  9059  1E5A                     __ptext33:	
  9060 ;; *************** function _EEPROM_Write_Byte *****************
  9061 ;; Defined at:
  9062 ;;		line 21 in file "eeprom.c"
  9063 ;; Parameters:    Size  Location     Type
  9064 ;;  addr            1    wreg     unsigned char 
  9065 ;;  dado            1    0[BANK0 ] unsigned char 
  9066 ;; Auto vars:     Size  Location     Type
  9067 ;;  addr            1    3[BANK0 ] unsigned char 
  9068 ;;  last_GIE        1    4[BANK0 ] unsigned char 
  9069 ;; Return value:  Size  Location     Type
  9070 ;;                  1    wreg      void 
  9071 ;; Registers used:
  9072 ;;		wreg, status,2, status,0
  9073 ;; Tracked objects:
  9074 ;;		On entry : 0/300
  9075 ;;		On exit  : 0/0
  9076 ;;		Unchanged: 0/0
  9077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9078 ;;      Params:         0       1       0       0       0
  9079 ;;      Locals:         0       2       0       0       0
  9080 ;;      Temps:          0       2       0       0       0
  9081 ;;      Totals:         0       5       0       0       0
  9082 ;;Total ram usage:        5 bytes
  9083 ;; Hardware stack levels used: 1
  9084 ;; Hardware stack levels required when called: 1
  9085 ;; This function calls:
  9086 ;;		Nothing
  9087 ;; This function is called by:
  9088 ;;		_Decodify_Command
  9089 ;;		_EEPROM_Write_Integer
  9090 ;;		_EEPROM_Write_String
  9091 ;; This function uses a non-reentrant model
  9092 ;;
  9093                           
  9094                           
  9095                           ;psect for function _EEPROM_Write_Byte
  9096  1E5A                     _EEPROM_Write_Byte:
  9097                           
  9098                           ;incstack = 0
  9099                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
  9100                           ;EEPROM_Write_Byte@addr stored from wreg
  9101  1E5A  1283               	bcf	3,5	;RP0=0, select bank0
  9102  1E5B  1303               	bcf	3,6	;RP1=0, select bank0
  9103  1E5C  00A3               	movwf	EEPROM_Write_Byte@addr
  9104                           
  9105                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
  9106  1E5D  3014               	movlw	20
  9107  1E5E  1683               	bsf	3,5	;RP0=1, select bank1
  9108  1E5F  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
  9109  1E60  3000               	movlw	0
  9110  1E61  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
  9111  1E62                     l507:	
  9112                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
  9113                           
  9114  1E62  1703               	bsf	3,6	;RP1=1, select bank3
  9115  1E63  188C               	btfsc	12,1	;volsfr
  9116  1E64  2E62               	goto	l507
  9117                           
  9118                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
  9119  1E65  1F8B               	btfss	11,7	;volatile
  9120  1E66  2E6C               	goto	l3745
  9121                           
  9122                           ;eeprom.c: 28:           last_GIE=1;
  9123  1E67  1283               	bcf	3,5	;RP0=0, select bank0
  9124  1E68  1303               	bcf	3,6	;RP1=0, select bank0
  9125  1E69  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9126  1E6A  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
  9127  1E6B  2E6F               	goto	l3747
  9128  1E6C                     l3745:
  9129                           
  9130                           ;eeprom.c: 30:           last_GIE=0;
  9131  1E6C  1283               	bcf	3,5	;RP0=0, select bank0
  9132  1E6D  1303               	bcf	3,6	;RP1=0, select bank0
  9133  1E6E  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9134  1E6F                     l3747:
  9135                           
  9136                           ;eeprom.c: 32:        EEADR=addr;
  9137  1E6F  0823               	movf	EEPROM_Write_Byte@addr,w
  9138  1E70  1703               	bsf	3,6	;RP1=1, select bank2
  9139  1E71  008D               	movwf	13	;volatile
  9140                           
  9141                           ;eeprom.c: 33:        EEDATA=dado;
  9142  1E72  1303               	bcf	3,6	;RP1=0, select bank0
  9143  1E73  0820               	movf	EEPROM_Write_Byte@dado,w
  9144  1E74  1703               	bsf	3,6	;RP1=1, select bank2
  9145  1E75  008C               	movwf	12	;volatile
  9146                           
  9147                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
  9148  1E76  1683               	bsf	3,5	;RP0=1, select bank3
  9149  1E77  138C               	bcf	12,7	;volsfr
  9150                           
  9151                           ;eeprom.c: 35:        EECON1bits.WREN=1;
  9152  1E78  150C               	bsf	12,2	;volsfr
  9153                           
  9154                           ;eeprom.c: 36:        INTCONbits.GIE=0;
  9155  1E79  138B               	bcf	11,7	;volatile
  9156                           
  9157                           ;eeprom.c: 37:        EECON2=0x55;
  9158  1E7A  3055               	movlw	85
  9159  1E7B  008D               	movwf	13	;volsfr
  9160                           
  9161                           ;eeprom.c: 38:        EECON2=0xAA;
  9162  1E7C  30AA               	movlw	170
  9163  1E7D  008D               	movwf	13	;volsfr
  9164                           
  9165                           ;eeprom.c: 39:        EECON1bits.WR=1;
  9166  1E7E  148C               	bsf	12,1	;volsfr
  9167                           
  9168                           ;eeprom.c: 41:        if(last_GIE==1)
  9169  1E7F  1283               	bcf	3,5	;RP0=0, select bank0
  9170  1E80  1303               	bcf	3,6	;RP1=0, select bank0
  9171  1E81  0324               	decf	EEPROM_Write_Byte@last_GIE,w
  9172  1E82  1D03               	btfss	3,2
  9173  1E83  2E86               	goto	l512
  9174                           
  9175                           ;eeprom.c: 42:           INTCONbits.GIE=1;
  9176  1E84  178B               	bsf	11,7	;volatile
  9177  1E85  2E87               	goto	l513
  9178  1E86                     l512:	
  9179                           ;eeprom.c: 43:        else
  9180                           
  9181                           
  9182                           ;eeprom.c: 44:           INTCONbits.GIE=0;
  9183  1E86  138B               	bcf	11,7	;volatile
  9184  1E87                     l513:
  9185                           
  9186                           ;eeprom.c: 46:        EECON1bits.WREN=0;
  9187  1E87  1683               	bsf	3,5	;RP0=1, select bank3
  9188  1E88  1703               	bsf	3,6	;RP1=1, select bank3
  9189  1E89  110C               	bcf	12,2	;volsfr
  9190                           
  9191                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
  9192  1E8A  304E               	movlw	78
  9193  1E8B  1283               	bcf	3,5	;RP0=0, select bank0
  9194  1E8C  1303               	bcf	3,6	;RP1=0, select bank0
  9195  1E8D  00A2               	movwf	??_EEPROM_Write_Byte+1
  9196  1E8E  30EA               	movlw	234
  9197  1E8F  00A1               	movwf	??_EEPROM_Write_Byte
  9198  1E90                     u5277:
  9199  1E90  0BA1               	decfsz	??_EEPROM_Write_Byte,f
  9200  1E91  2E90               	goto	u5277
  9201  1E92  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
  9202  1E93  2E90               	goto	u5277
  9203  1E94  0000               	nop
  9204  1E95  0008               	return
  9205  1E96                     __end_of_EEPROM_Write_Byte:
  9206                           
  9207                           	psect	text34
  9208  1BC6                     __ptext34:	
  9209 ;; *************** function _EEPROM_Read_String *****************
  9210 ;; Defined at:
  9211 ;;		line 109 in file "eeprom.c"
  9212 ;; Parameters:    Size  Location     Type
  9213 ;;  addr            1    wreg     unsigned char 
  9214 ;;  dado            1    3[BANK0 ] PTR unsigned char 
  9215 ;;		 -> buffer(33), 
  9216 ;; Auto vars:     Size  Location     Type
  9217 ;;  addr            1    5[BANK0 ] unsigned char 
  9218 ;;  c               1    6[BANK0 ] unsigned char 
  9219 ;; Return value:  Size  Location     Type
  9220 ;;                  1    wreg      void 
  9221 ;; Registers used:
  9222 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9223 ;; Tracked objects:
  9224 ;;		On entry : 300/300
  9225 ;;		On exit  : B00/800
  9226 ;;		Unchanged: 0/0
  9227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9228 ;;      Params:         0       1       0       0       0
  9229 ;;      Locals:         0       2       0       0       0
  9230 ;;      Temps:          0       1       0       0       0
  9231 ;;      Totals:         0       4       0       0       0
  9232 ;;Total ram usage:        4 bytes
  9233 ;; Hardware stack levels used: 1
  9234 ;; Hardware stack levels required when called: 2
  9235 ;; This function calls:
  9236 ;;		_EEPROM_Read_Byte
  9237 ;; This function is called by:
  9238 ;;		_Decodify_Command
  9239 ;; This function uses a non-reentrant model
  9240 ;;
  9241                           
  9242                           
  9243                           ;psect for function _EEPROM_Read_String
  9244  1BC6                     _EEPROM_Read_String:
  9245                           
  9246                           ;incstack = 0
  9247                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9248                           ;EEPROM_Read_String@addr stored from wreg
  9249  1BC6  1283               	bcf	3,5	;RP0=0, select bank0
  9250  1BC7  1303               	bcf	3,6	;RP1=0, select bank0
  9251  1BC8  00A5               	movwf	EEPROM_Read_String@addr
  9252  1BC9                     l539:	
  9253                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
  9254                           
  9255                           
  9256                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
  9257  1BC9  0825               	movf	EEPROM_Read_String@addr,w
  9258  1BCA  160A  158A  2407  160A  158A  	fcall	_EEPROM_Read_Byte
  9259  1BCF  1303               	bcf	3,6	;RP1=0, select bank0
  9260  1BD0  00A4               	movwf	??_EEPROM_Read_String
  9261  1BD1  0824               	movf	??_EEPROM_Read_String,w
  9262  1BD2  00A6               	movwf	EEPROM_Read_String@c
  9263  1BD3  3001               	movlw	1
  9264  1BD4  00A4               	movwf	??_EEPROM_Read_String
  9265  1BD5  0824               	movf	??_EEPROM_Read_String,w
  9266  1BD6  07A5               	addwf	EEPROM_Read_String@addr,f
  9267                           
  9268                           ;eeprom.c: 114:         *(dado++)=c;
  9269  1BD7  0826               	movf	EEPROM_Read_String@c,w
  9270  1BD8  00A4               	movwf	??_EEPROM_Read_String
  9271  1BD9  0823               	movf	EEPROM_Read_String@dado,w
  9272  1BDA  0084               	movwf	4
  9273  1BDB  0824               	movf	??_EEPROM_Read_String,w
  9274  1BDC  1783               	bsf	3,7	;select IRP bank2
  9275  1BDD  0080               	movwf	0
  9276  1BDE  3001               	movlw	1
  9277  1BDF  00A4               	movwf	??_EEPROM_Read_String
  9278  1BE0  0824               	movf	??_EEPROM_Read_String,w
  9279  1BE1  07A3               	addwf	EEPROM_Read_String@dado,f
  9280                           
  9281                           ;eeprom.c: 116:       }while(c);
  9282  1BE2  0826               	movf	EEPROM_Read_String@c,w
  9283  1BE3  1903               	btfsc	3,2
  9284  1BE4  0008               	return
  9285  1BE5  2BC9               	goto	l539
  9286  1BE6                     __end_of_EEPROM_Read_String:
  9287                           
  9288                           	psect	text35
  9289  1CBE                     __ptext35:	
  9290 ;; *************** function _EEPROM_Read_Integer *****************
  9291 ;; Defined at:
  9292 ;;		line 81 in file "eeprom.c"
  9293 ;; Parameters:    Size  Location     Type
  9294 ;;  addr            1    wreg     unsigned char 
  9295 ;; Auto vars:     Size  Location     Type
  9296 ;;  addr            1    6[BANK0 ] unsigned char 
  9297 ;;  result          2    8[BANK0 ] unsigned int 
  9298 ;;  i               1   10[BANK0 ] unsigned char 
  9299 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
  9300 ;;		 -> EEPROM_Read_Integer@result(2), 
  9301 ;; Return value:  Size  Location     Type
  9302 ;;                  2    3[BANK0 ] unsigned int 
  9303 ;; Registers used:
  9304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9305 ;; Tracked objects:
  9306 ;;		On entry : 0/0
  9307 ;;		On exit  : B00/0
  9308 ;;		Unchanged: 0/0
  9309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9310 ;;      Params:         0       2       0       0       0
  9311 ;;      Locals:         0       5       0       0       0
  9312 ;;      Temps:          0       1       0       0       0
  9313 ;;      Totals:         0       8       0       0       0
  9314 ;;Total ram usage:        8 bytes
  9315 ;; Hardware stack levels used: 1
  9316 ;; Hardware stack levels required when called: 2
  9317 ;; This function calls:
  9318 ;;		_EEPROM_Read_Byte
  9319 ;; This function is called by:
  9320 ;;		_main
  9321 ;;		_Decodify_Command
  9322 ;; This function uses a non-reentrant model
  9323 ;;
  9324                           
  9325                           
  9326                           ;psect for function _EEPROM_Read_Integer
  9327  1CBE                     _EEPROM_Read_Integer:
  9328                           
  9329                           ;incstack = 0
  9330                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9331                           ;EEPROM_Read_Integer@addr stored from wreg
  9332  1CBE  1283               	bcf	3,5	;RP0=0, select bank0
  9333  1CBF  1303               	bcf	3,6	;RP1=0, select bank0
  9334  1CC0  00A6               	movwf	EEPROM_Read_Integer@addr
  9335                           
  9336                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
  9337  1CC1  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
  9338  1CC2  00A5               	movwf	??_EEPROM_Read_Integer
  9339  1CC3  0825               	movf	??_EEPROM_Read_Integer,w
  9340  1CC4  00A7               	movwf	EEPROM_Read_Integer@ptr
  9341                           
  9342                           ;eeprom.c: 87:       for (i=0;i<2;i++)
  9343  1CC5  01AA               	clrf	EEPROM_Read_Integer@i
  9344  1CC6                     l4375:
  9345                           
  9346                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
  9347  1CC6  0826               	movf	EEPROM_Read_Integer@addr,w
  9348  1CC7  160A  158A  2407  160A  158A  	fcall	_EEPROM_Read_Byte
  9349  1CCC  1303               	bcf	3,6	;RP1=0, select bank0
  9350  1CCD  00A5               	movwf	??_EEPROM_Read_Integer
  9351  1CCE  0827               	movf	EEPROM_Read_Integer@ptr,w
  9352  1CCF  0084               	movwf	4
  9353  1CD0  0825               	movf	??_EEPROM_Read_Integer,w
  9354  1CD1  1383               	bcf	3,7	;select IRP bank0
  9355  1CD2  0080               	movwf	0
  9356  1CD3  3001               	movlw	1
  9357  1CD4  00A5               	movwf	??_EEPROM_Read_Integer
  9358  1CD5  0825               	movf	??_EEPROM_Read_Integer,w
  9359  1CD6  07A6               	addwf	EEPROM_Read_Integer@addr,f
  9360  1CD7  3001               	movlw	1
  9361  1CD8  00A5               	movwf	??_EEPROM_Read_Integer
  9362  1CD9  0825               	movf	??_EEPROM_Read_Integer,w
  9363  1CDA  07A7               	addwf	EEPROM_Read_Integer@ptr,f
  9364  1CDB  3001               	movlw	1
  9365  1CDC  00A5               	movwf	??_EEPROM_Read_Integer
  9366  1CDD  0825               	movf	??_EEPROM_Read_Integer,w
  9367  1CDE  07AA               	addwf	EEPROM_Read_Integer@i,f
  9368  1CDF  3002               	movlw	2
  9369  1CE0  022A               	subwf	EEPROM_Read_Integer@i,w
  9370  1CE1  1C03               	skipc
  9371  1CE2  2CC6               	goto	l4375
  9372                           
  9373                           ;eeprom.c: 89:       return result;
  9374  1CE3  0829               	movf	EEPROM_Read_Integer@result+1,w
  9375  1CE4  00A4               	movwf	?_EEPROM_Read_Integer+1
  9376  1CE5  0828               	movf	EEPROM_Read_Integer@result,w
  9377  1CE6  00A3               	movwf	?_EEPROM_Read_Integer
  9378  1CE7  0008               	return
  9379  1CE8                     __end_of_EEPROM_Read_Integer:
  9380                           
  9381                           	psect	text36
  9382  1C07                     __ptext36:	
  9383 ;; *************** function _EEPROM_Read_Byte *****************
  9384 ;; Defined at:
  9385 ;;		line 52 in file "eeprom.c"
  9386 ;; Parameters:    Size  Location     Type
  9387 ;;  addr            1    wreg     unsigned char 
  9388 ;; Auto vars:     Size  Location     Type
  9389 ;;  addr            1    2[BANK0 ] unsigned char 
  9390 ;; Return value:  Size  Location     Type
  9391 ;;                  1    wreg      unsigned char 
  9392 ;; Registers used:
  9393 ;;		wreg
  9394 ;; Tracked objects:
  9395 ;;		On entry : 0/300
  9396 ;;		On exit  : 300/200
  9397 ;;		Unchanged: 0/0
  9398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9399 ;;      Params:         0       0       0       0       0
  9400 ;;      Locals:         0       1       0       0       0
  9401 ;;      Temps:          0       2       0       0       0
  9402 ;;      Totals:         0       3       0       0       0
  9403 ;;Total ram usage:        3 bytes
  9404 ;; Hardware stack levels used: 1
  9405 ;; Hardware stack levels required when called: 1
  9406 ;; This function calls:
  9407 ;;		Nothing
  9408 ;; This function is called by:
  9409 ;;		_Decodify_Command
  9410 ;;		_EEPROM_Read_Integer
  9411 ;;		_EEPROM_Read_String
  9412 ;; This function uses a non-reentrant model
  9413 ;;
  9414                           
  9415                           
  9416                           ;psect for function _EEPROM_Read_Byte
  9417  1C07                     _EEPROM_Read_Byte:
  9418                           
  9419                           ;incstack = 0
  9420                           ; Regs used in _EEPROM_Read_Byte: [wreg]
  9421                           ;EEPROM_Read_Byte@addr stored from wreg
  9422  1C07  1283               	bcf	3,5	;RP0=0, select bank0
  9423  1C08  1303               	bcf	3,6	;RP1=0, select bank0
  9424  1C09  00A2               	movwf	EEPROM_Read_Byte@addr
  9425                           
  9426                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
  9427  1C0A  3014               	movlw	20
  9428  1C0B  1683               	bsf	3,5	;RP0=1, select bank1
  9429  1C0C  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
  9430  1C0D  3000               	movlw	0
  9431  1C0E  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
  9432  1C0F                     l517:	
  9433                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
  9434                           
  9435  1C0F  1703               	bsf	3,6	;RP1=1, select bank3
  9436  1C10  188C               	btfsc	12,1	;volsfr
  9437  1C11  2C0F               	goto	l517
  9438                           
  9439                           ;eeprom.c: 57:    EEADR=addr;
  9440  1C12  1283               	bcf	3,5	;RP0=0, select bank0
  9441  1C13  1303               	bcf	3,6	;RP1=0, select bank0
  9442  1C14  0822               	movf	EEPROM_Read_Byte@addr,w
  9443  1C15  1703               	bsf	3,6	;RP1=1, select bank2
  9444  1C16  008D               	movwf	13	;volatile
  9445                           
  9446                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
  9447  1C17  1683               	bsf	3,5	;RP0=1, select bank3
  9448  1C18  138C               	bcf	12,7	;volsfr
  9449                           
  9450                           ;eeprom.c: 59:    EECON1bits.RD=1;
  9451  1C19  140C               	bsf	12,0	;volsfr
  9452                           
  9453                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
  9454  1C1A  304E               	movlw	78
  9455  1C1B  1283               	bcf	3,5	;RP0=0, select bank0
  9456  1C1C  1303               	bcf	3,6	;RP1=0, select bank0
  9457  1C1D  00A1               	movwf	??_EEPROM_Read_Byte+1
  9458  1C1E  30EA               	movlw	234
  9459  1C1F  00A0               	movwf	??_EEPROM_Read_Byte
  9460  1C20                     u5287:
  9461  1C20  0BA0               	decfsz	??_EEPROM_Read_Byte,f
  9462  1C21  2C20               	goto	u5287
  9463  1C22  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
  9464  1C23  2C20               	goto	u5287
  9465  1C24  0000               	nop
  9466                           
  9467                           ;eeprom.c: 61:    return EEDATA;
  9468  1C25  1283               	bcf	3,5	;RP0=0, select bank2
  9469  1C26  1703               	bsf	3,6	;RP1=1, select bank2
  9470  1C27  080C               	movf	12,w	;volatile
  9471  1C28  0008               	return
  9472  1C29                     __end_of_EEPROM_Read_Byte:
  9473                           
  9474                           	psect	text37
  9475  06BD                     __ptext37:	
  9476 ;; *************** function _EEPROM_24C1025_Write_Str *****************
  9477 ;; Defined at:
  9478 ;;		line 220 in file "EEPROM_24C1025.c"
  9479 ;; Parameters:    Size  Location     Type
  9480 ;;  chip_add        1    wreg     unsigned char 
  9481 ;;  mem_add         4   10[BANK0 ] unsigned long 
  9482 ;;  data            1   14[BANK0 ] PTR unsigned char 
  9483 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  9484 ;; Auto vars:     Size  Location     Type
  9485 ;;  chip_add        1   17[BANK0 ] unsigned char 
  9486 ;;  ctrl            1   19[BANK0 ] unsigned char 
  9487 ;;  range           1   18[BANK0 ] unsigned char 
  9488 ;; Return value:  Size  Location     Type
  9489 ;;                  1    wreg      void 
  9490 ;; Registers used:
  9491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9492 ;; Tracked objects:
  9493 ;;		On entry : 300/300
  9494 ;;		On exit  : 0/0
  9495 ;;		Unchanged: 0/0
  9496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9497 ;;      Params:         0       5       0       0       0
  9498 ;;      Locals:         0       3       0       0       0
  9499 ;;      Temps:          0       2       0       0       0
  9500 ;;      Totals:         0      10       0       0       0
  9501 ;;Total ram usage:       10 bytes
  9502 ;; Hardware stack levels used: 1
  9503 ;; Hardware stack levels required when called: 3
  9504 ;; This function calls:
  9505 ;;		_I2C_Master_Start
  9506 ;;		_I2C_Master_Stop
  9507 ;;		_I2C_Master_Write
  9508 ;;		_my_delay_ms_WDT
  9509 ;; This function is called by:
  9510 ;;		_Decodify_Command
  9511 ;; This function uses a non-reentrant model
  9512 ;;
  9513                           
  9514                           
  9515                           ;psect for function _EEPROM_24C1025_Write_Str
  9516  06BD                     _EEPROM_24C1025_Write_Str:
  9517                           
  9518                           ;incstack = 0
  9519                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  9520                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
  9521  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  9522  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  9523  06BF  00B1               	movwf	EEPROM_24C1025_Write_Str@chip_add
  9524                           
  9525                           ;EEPROM_24C1025.c: 222:      unsigned char ctrl;;EEPROM_24C1025.c: 224:      if(mem_add>
      +                          0x1FFFF) return;
  9526  06C0  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  9527  06C1  1D03               	btfss	3,2
  9528  06C2  0008               	return
  9529  06C3  3002               	movlw	2
  9530  06C4  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  9531  06C5  1D03               	skipz
  9532  06C6  2ECF               	goto	u3623
  9533  06C7  3000               	movlw	0
  9534  06C8  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9535  06C9  1D03               	skipz
  9536  06CA  2ECF               	goto	u3623
  9537  06CB  3000               	movlw	0
  9538  06CC  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  9539  06CD  1D03               	skipz
  9540  06CE  2ECF               	goto	u3623
  9541  06CF                     u3623:
  9542  06CF  1803               	btfsc	3,0
  9543  06D0  0008               	return
  9544                           
  9545                           ;EEPROM_24C1025.c: 226:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9546  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  9547  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  9548  06D3                     L9:
  9549  06D3  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  9550  06D4  1D03               	btfss	3,2
  9551  06D5  2EE4               	goto	l4177
  9552  06D6  3001               	movlw	1
  9553  06D7  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  9554  06D8  1D03               	skipz
  9555  06D9  2EE2               	goto	u3633
  9556  06DA  3000               	movlw	0
  9557  06DB  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9558  06DC  1D03               	skipz
  9559  06DD  2EE2               	goto	u3633
  9560  06DE  3000               	movlw	0
  9561  06DF  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  9562  06E0  1D03               	skipz
  9563  06E1  2EE2               	goto	u3633
  9564  06E2                     u3633:
  9565  06E2  1C03               	btfss	3,0
  9566  06E3  2EEB               	goto	l4179
  9567  06E4                     l4177:
  9568  06E4  3008               	movlw	8
  9569  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  9570  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  9571  06E7  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9572  06E8  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9573  06E9  00B2               	movwf	EEPROM_24C1025_Write_Str@range
  9574  06EA  2EEE               	goto	l4181
  9575  06EB                     l4179:
  9576  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  9577  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  9578  06ED  01B2               	clrf	EEPROM_24C1025_Write_Str@range
  9579  06EE                     l4181:
  9580                           
  9581                           ;EEPROM_24C1025.c: 227:      ctrl=chip_add;
  9582  06EE  0831               	movf	EEPROM_24C1025_Write_Str@chip_add,w
  9583  06EF  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9584  06F0  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9585  06F1  00B3               	movwf	EEPROM_24C1025_Write_Str@ctrl
  9586                           
  9587                           ;EEPROM_24C1025.c: 228:      ctrl<<=1;
  9588  06F2  1003               	clrc
  9589  06F3  0DB3               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
  9590                           
  9591                           ;EEPROM_24C1025.c: 229:      ctrl |= 0xA0;
  9592  06F4  30A0               	movlw	160
  9593  06F5  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9594  06F6  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9595  06F7  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
  9596                           
  9597                           ;EEPROM_24C1025.c: 230:      ctrl |= range;
  9598  06F8  0832               	movf	EEPROM_24C1025_Write_Str@range,w
  9599  06F9  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9600  06FA  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9601  06FB  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
  9602                           
  9603                           ;EEPROM_24C1025.c: 232:      I2C_Master_Start();
  9604  06FC  160A  158A  22D6  120A  118A  	fcall	_I2C_Master_Start
  9605                           
  9606                           ;EEPROM_24C1025.c: 233:      I2C_Master_Write(ctrl);
  9607  0701  1283               	bcf	3,5	;RP0=0, select bank0
  9608  0702  0833               	movf	EEPROM_24C1025_Write_Str@ctrl,w
  9609  0703  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9610  0704  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
  9611  0705  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9612  0706  00A3               	movwf	I2C_Master_Write@d
  9613  0707  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
  9614  0708  00A4               	movwf	I2C_Master_Write@d+1
  9615  0709  160A  158A  22B0  120A  118A  	fcall	_I2C_Master_Write
  9616                           
  9617                           ;EEPROM_24C1025.c: 234:      I2C_Master_Write(((char *)&mem_add)[1]);
  9618  070E  082B               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9619  070F  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9620  0710  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
  9621  0711  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9622  0712  00A3               	movwf	I2C_Master_Write@d
  9623  0713  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
  9624  0714  00A4               	movwf	I2C_Master_Write@d+1
  9625  0715  160A  158A  22B0  120A  118A  	fcall	_I2C_Master_Write
  9626                           
  9627                           ;EEPROM_24C1025.c: 235:      I2C_Master_Write(((char *)&mem_add)[0]);
  9628  071A  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
  9629  071B  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9630  071C  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
  9631  071D  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9632  071E  00A3               	movwf	I2C_Master_Write@d
  9633  071F  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
  9634  0720  00A4               	movwf	I2C_Master_Write@d+1
  9635  0721  160A  158A  22B0  120A  118A  	fcall	_I2C_Master_Write
  9636  0726                     l4241:	
  9637                           ;EEPROM_24C1025.c: 236:      while(*data)
  9638                           
  9639                           
  9640                           ;EEPROM_24C1025.c: 236:      while(*data)
  9641  0726  082E               	movf	EEPROM_24C1025_Write_Str@data,w
  9642  0727  0084               	movwf	4
  9643  0728  1783               	bsf	3,7	;select IRP bank2
  9644  0729  0800               	movf	0,w
  9645  072A  1903               	btfsc	3,2
  9646  072B  2F9E               	goto	l4243
  9647  072C  0064               	clrwdt	;# 
  9648                           
  9649                           ;EEPROM_24C1025.c: 239:           if(mem_add>0x1FFFF) return;
  9650  072D  1283               	bcf	3,5	;RP0=0, select bank0
  9651  072E  1303               	bcf	3,6	;RP1=0, select bank0
  9652  072F  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  9653  0730  1D03               	btfss	3,2
  9654  0731  0008               	return
  9655  0732  3002               	movlw	2
  9656  0733  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  9657  0734  1D03               	skipz
  9658  0735  2F3E               	goto	u3643
  9659  0736  3000               	movlw	0
  9660  0737  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9661  0738  1D03               	skipz
  9662  0739  2F3E               	goto	u3643
  9663  073A  3000               	movlw	0
  9664  073B  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  9665  073C  1D03               	skipz
  9666  073D  2F3E               	goto	u3643
  9667  073E                     u3643:
  9668  073E  1803               	btfsc	3,0
  9669  073F  0008               	return
  9670                           
  9671                           ;EEPROM_24C1025.c: 240:           if((mem_add+1)%128==0)
  9672  0740  1283               	bcf	3,5	;RP0=0, select bank0
  9673  0741  1303               	bcf	3,6	;RP1=0, select bank0
  9674  0742  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
  9675  0743  3E01               	addlw	1
  9676  0744  397F               	andlw	127
  9677  0745  1D03               	btfss	3,2
  9678  0746  2F7C               	goto	l4235
  9679                           
  9680                           ;EEPROM_24C1025.c: 241:             {;EEPROM_24C1025.c: 242:             I2C_Master_Writ
      +                          e(*data);
  9681  0747  082E               	movf	EEPROM_24C1025_Write_Str@data,w
  9682  0748  0084               	movwf	4
  9683  0749  1783               	bsf	3,7	;select IRP bank2
  9684  074A  0800               	movf	0,w
  9685  074B  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9686  074C  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
  9687  074D  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9688  074E  00A3               	movwf	I2C_Master_Write@d
  9689  074F  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
  9690  0750  00A4               	movwf	I2C_Master_Write@d+1
  9691  0751  160A  158A  22B0  120A  118A  	fcall	_I2C_Master_Write
  9692                           
  9693                           ;EEPROM_24C1025.c: 243:             I2C_Master_Stop();
  9694  0756  160A  158A  2289  120A  118A  	fcall	_I2C_Master_Stop
  9695                           
  9696                           ;EEPROM_24C1025.c: 245:             my_delay_ms_WDT(5);
  9697  075B  3000               	movlw	0
  9698  075C  1283               	bcf	3,5	;RP0=0, select bank0
  9699  075D  00A3               	movwf	my_delay_ms_WDT@time+3
  9700  075E  3000               	movlw	0
  9701  075F  00A2               	movwf	my_delay_ms_WDT@time+2
  9702  0760  3000               	movlw	0
  9703  0761  00A1               	movwf	my_delay_ms_WDT@time+1
  9704  0762  3005               	movlw	5
  9705  0763  00A0               	movwf	my_delay_ms_WDT@time
  9706  0764  160A  158A  25EA  120A  118A  	fcall	_my_delay_ms_WDT
  9707                           
  9708                           ;EEPROM_24C1025.c: 246:             mem_add++;
  9709  0769  3001               	movlw	1
  9710  076A  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
  9711  076B  3000               	movlw	0
  9712  076C  1803               	skipnc
  9713  076D  3001               	movlw	1
  9714  076E  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
  9715  076F  3000               	movlw	0
  9716  0770  1803               	skipnc
  9717  0771  3001               	movlw	1
  9718  0772  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
  9719  0773  3000               	movlw	0
  9720  0774  1803               	skipnc
  9721  0775  3001               	movlw	1
  9722  0776  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
  9723                           
  9724                           ;EEPROM_24C1025.c: 247:             data++;
  9725  0777  3001               	movlw	1
  9726  0778  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9727  0779  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9728  077A  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
  9729  077B  2ED3               	goto	L9
  9730  077C                     l4235:	
  9731                           ;EEPROM_24C1025.c: 248:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9732                           
  9733                           
  9734                           ;EEPROM_24C1025.c: 260:             {;EEPROM_24C1025.c: 261:             I2C_Master_Writ
      +                          e(*data);
  9735  077C  082E               	movf	EEPROM_24C1025_Write_Str@data,w
  9736  077D  0084               	movwf	4
  9737  077E  1783               	bsf	3,7	;select IRP bank2
  9738  077F  0800               	movf	0,w
  9739  0780  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9740  0781  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
  9741  0782  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9742  0783  00A3               	movwf	I2C_Master_Write@d
  9743  0784  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
  9744  0785  00A4               	movwf	I2C_Master_Write@d+1
  9745  0786  160A  158A  22B0  120A  118A  	fcall	_I2C_Master_Write
  9746                           
  9747                           ;EEPROM_24C1025.c: 262:             data++;
  9748  078B  3001               	movlw	1
  9749  078C  00AF               	movwf	??_EEPROM_24C1025_Write_Str
  9750  078D  082F               	movf	??_EEPROM_24C1025_Write_Str,w
  9751  078E  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
  9752                           
  9753                           ;EEPROM_24C1025.c: 263:             mem_add++;
  9754  078F  3001               	movlw	1
  9755  0790  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
  9756  0791  3000               	movlw	0
  9757  0792  1803               	skipnc
  9758  0793  3001               	movlw	1
  9759  0794  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
  9760  0795  3000               	movlw	0
  9761  0796  1803               	skipnc
  9762  0797  3001               	movlw	1
  9763  0798  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
  9764  0799  3000               	movlw	0
  9765  079A  1803               	skipnc
  9766  079B  3001               	movlw	1
  9767  079C  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
  9768  079D  2F26               	goto	l4241
  9769  079E                     l4243:
  9770                           
  9771                           ;EEPROM_24C1025.c: 266:      I2C_Master_Write(0);
  9772  079E  3000               	movlw	0
  9773  079F  00A3               	movwf	I2C_Master_Write@d
  9774  07A0  00A4               	movwf	I2C_Master_Write@d+1
  9775  07A1  160A  158A  22B0  120A  118A  	fcall	_I2C_Master_Write
  9776                           
  9777                           ;EEPROM_24C1025.c: 267:      I2C_Master_Stop();
  9778  07A6  160A  158A  2289  120A  118A  	fcall	_I2C_Master_Stop
  9779                           
  9780                           ;EEPROM_24C1025.c: 268:      my_delay_ms_WDT(5);
  9781  07AB  3000               	movlw	0
  9782  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  9783  07AD  00A3               	movwf	my_delay_ms_WDT@time+3
  9784  07AE  3000               	movlw	0
  9785  07AF  00A2               	movwf	my_delay_ms_WDT@time+2
  9786  07B0  3000               	movlw	0
  9787  07B1  00A1               	movwf	my_delay_ms_WDT@time+1
  9788  07B2  3005               	movlw	5
  9789  07B3  00A0               	movwf	my_delay_ms_WDT@time
  9790  07B4  160A  158A  25EA   	fcall	_my_delay_ms_WDT
  9791  07B7  0008               	return
  9792  07B8                     __end_of_EEPROM_24C1025_Write_Str:
  9793                           
  9794                           	psect	text38
  9795  1AFC                     __ptext38:	
  9796 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
  9797 ;; Defined at:
  9798 ;;		line 341 in file "EEPROM_24C1025.c"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;  chip_add        1    wreg     unsigned char 
  9801 ;;  mem_add         4   23[BANK0 ] unsigned long 
  9802 ;;  data            1   27[BANK0 ] unsigned char 
  9803 ;; Auto vars:     Size  Location     Type
  9804 ;;  chip_add        1   28[BANK0 ] unsigned char 
  9805 ;; Return value:  Size  Location     Type
  9806 ;;                  1    wreg      void 
  9807 ;; Registers used:
  9808 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9809 ;; Tracked objects:
  9810 ;;		On entry : 300/300
  9811 ;;		On exit  : 0/0
  9812 ;;		Unchanged: 0/0
  9813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9814 ;;      Params:         0       5       0       0       0
  9815 ;;      Locals:         0       1       0       0       0
  9816 ;;      Temps:          0       0       0       0       0
  9817 ;;      Totals:         0       6       0       0       0
  9818 ;;Total ram usage:        6 bytes
  9819 ;; Hardware stack levels used: 1
  9820 ;; Hardware stack levels required when called: 4
  9821 ;; This function calls:
  9822 ;;		_EEPROM_24C1025_Write_Buffer
  9823 ;; This function is called by:
  9824 ;;		_Decodify_Command
  9825 ;; This function uses a non-reentrant model
  9826 ;;
  9827                           
  9828                           
  9829                           ;psect for function _EEPROM_24C1025_Write_Byte
  9830  1AFC                     _EEPROM_24C1025_Write_Byte:
  9831                           
  9832                           ;incstack = 0
  9833                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  9834                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
  9835  1AFC  1283               	bcf	3,5	;RP0=0, select bank0
  9836  1AFD  1303               	bcf	3,6	;RP1=0, select bank0
  9837  1AFE  00BC               	movwf	EEPROM_24C1025_Write_Byte@chip_add
  9838                           
  9839                           ;EEPROM_24C1025.c: 342:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
  9840  1AFF  083A               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
  9841  1B00  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  9842  1B01  0839               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
  9843  1B02  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  9844  1B03  0838               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
  9845  1B04  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  9846  1B05  0837               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
  9847  1B06  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  9848  1B07  01AE               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
  9849  1B08  0AAE               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
  9850  1B09  303B               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
  9851  1B0A  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  9852  1B0B  3000               	movlw	0
  9853  1B0C  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  9854  1B0D  083C               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
  9855  1B0E  160A  118A  2399   	fcall	_EEPROM_24C1025_Write_Buffer
  9856  1B11  0008               	return
  9857  1B12                     __end_of_EEPROM_24C1025_Write_Byte:
  9858                           
  9859                           	psect	text39
  9860  1686                     __ptext39:	
  9861 ;; *************** function _EEPROM_24C1025_Read_Str *****************
  9862 ;; Defined at:
  9863 ;;		line 275 in file "EEPROM_24C1025.c"
  9864 ;; Parameters:    Size  Location     Type
  9865 ;;  chip_add        1    wreg     unsigned char 
  9866 ;;  mem_add         4    9[BANK0 ] unsigned long 
  9867 ;;  buffer          1   13[BANK0 ] PTR unsigned char 
  9868 ;;		 -> buffer(33), 
  9869 ;; Auto vars:     Size  Location     Type
  9870 ;;  chip_add        1   17[BANK0 ] unsigned char 
  9871 ;;  ctrl            1   19[BANK0 ] unsigned char 
  9872 ;;  range           1   18[BANK0 ] unsigned char 
  9873 ;;  cnt             1   16[BANK0 ] unsigned char 
  9874 ;; Return value:  Size  Location     Type
  9875 ;;                  1    wreg      void 
  9876 ;; Registers used:
  9877 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9878 ;; Tracked objects:
  9879 ;;		On entry : 300/300
  9880 ;;		On exit  : 0/0
  9881 ;;		Unchanged: 0/0
  9882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9883 ;;      Params:         0       5       0       0       0
  9884 ;;      Locals:         0       4       0       0       0
  9885 ;;      Temps:          0       2       0       0       0
  9886 ;;      Totals:         0      11       0       0       0
  9887 ;;Total ram usage:       11 bytes
  9888 ;; Hardware stack levels used: 1
  9889 ;; Hardware stack levels required when called: 3
  9890 ;; This function calls:
  9891 ;;		_I2C_Master_Read
  9892 ;;		_I2C_Master_RepeatedStart
  9893 ;;		_I2C_Master_Start
  9894 ;;		_I2C_Master_Stop
  9895 ;;		_I2C_Master_Write
  9896 ;; This function is called by:
  9897 ;;		_Decodify_Command
  9898 ;; This function uses a non-reentrant model
  9899 ;;
  9900                           
  9901                           
  9902                           ;psect for function _EEPROM_24C1025_Read_Str
  9903  1686                     _EEPROM_24C1025_Read_Str:
  9904                           
  9905                           ;incstack = 0
  9906                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9907                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
  9908  1686  1283               	bcf	3,5	;RP0=0, select bank0
  9909  1687  1303               	bcf	3,6	;RP1=0, select bank0
  9910  1688  00B1               	movwf	EEPROM_24C1025_Read_Str@chip_add
  9911                           
  9912                           ;EEPROM_24C1025.c: 277:      unsigned char range=0;
  9913  1689  01B2               	clrf	EEPROM_24C1025_Read_Str@range
  9914                           
  9915                           ;EEPROM_24C1025.c: 278:      unsigned char ctrl;;EEPROM_24C1025.c: 280:      if(mem_add>
      +                          0x1FFFF) return;
  9916  168A  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  9917  168B  1D03               	btfss	3,2
  9918  168C  0008               	return
  9919  168D  3002               	movlw	2
  9920  168E  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  9921  168F  1D03               	skipz
  9922  1690  2E99               	goto	u3683
  9923  1691  3000               	movlw	0
  9924  1692  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  9925  1693  1D03               	skipz
  9926  1694  2E99               	goto	u3683
  9927  1695  3000               	movlw	0
  9928  1696  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  9929  1697  1D03               	skipz
  9930  1698  2E99               	goto	u3683
  9931  1699                     u3683:
  9932  1699  1803               	btfsc	3,0
  9933  169A  0008               	return
  9934                           
  9935                           ;EEPROM_24C1025.c: 282:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9936  169B  1283               	bcf	3,5	;RP0=0, select bank0
  9937  169C  1303               	bcf	3,6	;RP1=0, select bank0
  9938  169D  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
  9939  169E  1D03               	btfss	3,2
  9940  169F  2EAE               	goto	l4255
  9941  16A0  3001               	movlw	1
  9942  16A1  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
  9943  16A2  1D03               	skipz
  9944  16A3  2EAC               	goto	u3693
  9945  16A4  3000               	movlw	0
  9946  16A5  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
  9947  16A6  1D03               	skipz
  9948  16A7  2EAC               	goto	u3693
  9949  16A8  3000               	movlw	0
  9950  16A9  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
  9951  16AA  1D03               	skipz
  9952  16AB  2EAC               	goto	u3693
  9953  16AC                     u3693:
  9954  16AC  1C03               	btfss	3,0
  9955  16AD  2EB5               	goto	l4257
  9956  16AE                     l4255:
  9957  16AE  3008               	movlw	8
  9958  16AF  1283               	bcf	3,5	;RP0=0, select bank0
  9959  16B0  1303               	bcf	3,6	;RP1=0, select bank0
  9960  16B1  00AE               	movwf	??_EEPROM_24C1025_Read_Str
  9961  16B2  082E               	movf	??_EEPROM_24C1025_Read_Str,w
  9962  16B3  00B2               	movwf	EEPROM_24C1025_Read_Str@range
  9963  16B4  2EB8               	goto	l4259
  9964  16B5                     l4257:
  9965  16B5  1283               	bcf	3,5	;RP0=0, select bank0
  9966  16B6  1303               	bcf	3,6	;RP1=0, select bank0
  9967  16B7  01B2               	clrf	EEPROM_24C1025_Read_Str@range
  9968  16B8                     l4259:
  9969                           
  9970                           ;EEPROM_24C1025.c: 283:      ctrl=chip_add;
  9971  16B8  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
  9972  16B9  00AE               	movwf	??_EEPROM_24C1025_Read_Str
  9973  16BA  082E               	movf	??_EEPROM_24C1025_Read_Str,w
  9974  16BB  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
  9975                           
  9976                           ;EEPROM_24C1025.c: 284:      ctrl<<=1;
  9977  16BC  1003               	clrc
  9978  16BD  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
  9979                           
  9980                           ;EEPROM_24C1025.c: 285:      ctrl |= 0xA0;
  9981  16BE  30A0               	movlw	160
  9982  16BF  00AE               	movwf	??_EEPROM_24C1025_Read_Str
  9983  16C0  082E               	movf	??_EEPROM_24C1025_Read_Str,w
  9984  16C1  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
  9985                           
  9986                           ;EEPROM_24C1025.c: 286:      ctrl |= 0b00000001;
  9987  16C2  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
  9988                           
  9989                           ;EEPROM_24C1025.c: 287:      ctrl |= range;
  9990  16C3  0832               	movf	EEPROM_24C1025_Read_Str@range,w
  9991  16C4  00AE               	movwf	??_EEPROM_24C1025_Read_Str
  9992  16C5  082E               	movf	??_EEPROM_24C1025_Read_Str,w
  9993  16C6  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
  9994                           
  9995                           ;EEPROM_24C1025.c: 289:      I2C_Master_Start();
  9996  16C7  160A  158A  22D6  160A  118A  	fcall	_I2C_Master_Start
  9997                           
  9998                           ;EEPROM_24C1025.c: 290:      I2C_Master_Write(ctrl & 0xFE);
  9999  16CC  1283               	bcf	3,5	;RP0=0, select bank0
 10000  16CD  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10001  16CE  39FE               	andlw	254
 10002  16CF  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10003  16D0  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10004  16D1  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10005  16D2  00A3               	movwf	I2C_Master_Write@d
 10006  16D3  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10007  16D4  00A4               	movwf	I2C_Master_Write@d+1
 10008  16D5  160A  158A  22B0  160A  118A  	fcall	_I2C_Master_Write
 10009                           
 10010                           ;EEPROM_24C1025.c: 291:      I2C_Master_Write(((char *)&mem_add)[1]);
 10011  16DA  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10012  16DB  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10013  16DC  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10014  16DD  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10015  16DE  00A3               	movwf	I2C_Master_Write@d
 10016  16DF  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10017  16E0  00A4               	movwf	I2C_Master_Write@d+1
 10018  16E1  160A  158A  22B0  160A  118A  	fcall	_I2C_Master_Write
 10019                           
 10020                           ;EEPROM_24C1025.c: 292:      I2C_Master_Write(((char *)&mem_add)[0]);
 10021  16E6  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10022  16E7  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10023  16E8  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10024  16E9  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10025  16EA  00A3               	movwf	I2C_Master_Write@d
 10026  16EB  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10027  16EC  00A4               	movwf	I2C_Master_Write@d+1
 10028  16ED  160A  158A  22B0  160A  118A  	fcall	_I2C_Master_Write
 10029                           
 10030                           ;EEPROM_24C1025.c: 293:      I2C_Master_RepeatedStart();
 10031  16F2  160A  158A  22BB  160A  118A  	fcall	_I2C_Master_RepeatedStart
 10032                           
 10033                           ;EEPROM_24C1025.c: 294:      I2C_Master_Write(ctrl);
 10034  16F7  1283               	bcf	3,5	;RP0=0, select bank0
 10035  16F8  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10036  16F9  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10037  16FA  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10038  16FB  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10039  16FC  00A3               	movwf	I2C_Master_Write@d
 10040  16FD  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10041  16FE  00A4               	movwf	I2C_Master_Write@d+1
 10042  16FF  160A  158A  22B0  160A  118A  	fcall	_I2C_Master_Write
 10043                           
 10044                           ;EEPROM_24C1025.c: 296:      cnt=0;
 10045  1704  01B0               	clrf	EEPROM_24C1025_Read_Str@cnt
 10046  1705                     l4281:
 10047                           
 10048                           ;EEPROM_24C1025.c: 298:            if(mem_add>0x1FFFF) break;
 10049  1705  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10050  1706  1D03               	btfss	3,2
 10051  1707  2FE7               	goto	l4337
 10052  1708  3002               	movlw	2
 10053  1709  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10054  170A  1D03               	skipz
 10055  170B  2F14               	goto	u3703
 10056  170C  3000               	movlw	0
 10057  170D  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10058  170E  1D03               	skipz
 10059  170F  2F14               	goto	u3703
 10060  1710  3000               	movlw	0
 10061  1711  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10062  1712  1D03               	skipz
 10063  1713  2F14               	goto	u3703
 10064  1714                     u3703:
 10065  1714  1803               	btfsc	3,0
 10066  1715  2FE7               	goto	l4337
 10067                           
 10068                           ;EEPROM_24C1025.c: 299:            if((mem_add+1)%128==0)
 10069  1716  1283               	bcf	3,5	;RP0=0, select bank0
 10070  1717  1303               	bcf	3,6	;RP1=0, select bank0
 10071  1718  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10072  1719  3E01               	addlw	1
 10073  171A  397F               	andlw	127
 10074  171B  1D03               	btfss	3,2
 10075  171C  2FB7               	goto	l4325
 10076                           
 10077                           ;EEPROM_24C1025.c: 300:              {;EEPROM_24C1025.c: 301:              (*buffer)=I2C
      +                          _Master_Read(0);
 10078  171D  3000               	movlw	0
 10079  171E  00A3               	movwf	I2C_Master_Read@a
 10080  171F  00A4               	movwf	I2C_Master_Read@a+1
 10081  1720  160A  158A  257E  160A  118A  	fcall	_I2C_Master_Read
 10082  1725  0823               	movf	?_I2C_Master_Read,w
 10083  1726  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10084  1727  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10085  1728  0084               	movwf	4
 10086  1729  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10087  172A  1783               	bsf	3,7	;select IRP bank2
 10088  172B  0080               	movwf	0
 10089                           
 10090                           ;EEPROM_24C1025.c: 302:              I2C_Master_Stop();
 10091  172C  160A  158A  2289  160A  118A  	fcall	_I2C_Master_Stop
 10092                           
 10093                           ;EEPROM_24C1025.c: 304:              _delay((unsigned long)((5)*(8000000/4000.0)));
 10094  1731  300D               	movlw	13
 10095  1732  1283               	bcf	3,5	;RP0=0, select bank0
 10096  1733  1303               	bcf	3,6	;RP1=0, select bank0
 10097  1734  00AF               	movwf	??_EEPROM_24C1025_Read_Str+1
 10098  1735  30FB               	movlw	251
 10099  1736  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10100  1737                     u5297:
 10101  1737  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10102  1738  2F37               	goto	u5297
 10103  1739  0BAF               	decfsz	??_EEPROM_24C1025_Read_Str+1,f
 10104  173A  2F37               	goto	u5297
 10105                           
 10106                           ;EEPROM_24C1025.c: 305:              mem_add++;
 10107  173B  3001               	movlw	1
 10108  173C  1283               	bcf	3,5	;RP0=0, select bank0
 10109  173D  1303               	bcf	3,6	;RP1=0, select bank0
 10110  173E  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10111  173F  3000               	movlw	0
 10112  1740  1803               	skipnc
 10113  1741  3001               	movlw	1
 10114  1742  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10115  1743  3000               	movlw	0
 10116  1744  1803               	skipnc
 10117  1745  3001               	movlw	1
 10118  1746  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10119  1747  3000               	movlw	0
 10120  1748  1803               	skipnc
 10121  1749  3001               	movlw	1
 10122  174A  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10123                           
 10124                           ;EEPROM_24C1025.c: 306:              buffer++;
 10125  174B  3001               	movlw	1
 10126  174C  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10127  174D  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10128  174E  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 10129                           
 10130                           ;EEPROM_24C1025.c: 307:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10131  174F  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10132  1750  1D03               	btfss	3,2
 10133  1751  2F60               	goto	l4299
 10134  1752  3001               	movlw	1
 10135  1753  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10136  1754  1D03               	skipz
 10137  1755  2F5E               	goto	u3723
 10138  1756  3000               	movlw	0
 10139  1757  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10140  1758  1D03               	skipz
 10141  1759  2F5E               	goto	u3723
 10142  175A  3000               	movlw	0
 10143  175B  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10144  175C  1D03               	skipz
 10145  175D  2F5E               	goto	u3723
 10146  175E                     u3723:
 10147  175E  1C03               	btfss	3,0
 10148  175F  2F67               	goto	l4301
 10149  1760                     l4299:
 10150  1760  3008               	movlw	8
 10151  1761  1283               	bcf	3,5	;RP0=0, select bank0
 10152  1762  1303               	bcf	3,6	;RP1=0, select bank0
 10153  1763  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10154  1764  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10155  1765  00B2               	movwf	EEPROM_24C1025_Read_Str@range
 10156  1766  2F6A               	goto	l4303
 10157  1767                     l4301:
 10158  1767  1283               	bcf	3,5	;RP0=0, select bank0
 10159  1768  1303               	bcf	3,6	;RP1=0, select bank0
 10160  1769  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10161  176A                     l4303:
 10162                           
 10163                           ;EEPROM_24C1025.c: 308:              ctrl=chip_add;
 10164  176A  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10165  176B  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10166  176C  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10167  176D  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10168                           
 10169                           ;EEPROM_24C1025.c: 309:              ctrl<<=1;
 10170  176E  1003               	clrc
 10171  176F  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10172                           
 10173                           ;EEPROM_24C1025.c: 310:              ctrl |= 0xA0;
 10174  1770  30A0               	movlw	160
 10175  1771  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10176  1772  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10177  1773  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10178                           
 10179                           ;EEPROM_24C1025.c: 311:              ctrl |= 0b00000001;
 10180  1774  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10181                           
 10182                           ;EEPROM_24C1025.c: 312:              ctrl |= range;
 10183  1775  0832               	movf	EEPROM_24C1025_Read_Str@range,w
 10184  1776  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10185  1777  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10186  1778  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10187                           
 10188                           ;EEPROM_24C1025.c: 314:              I2C_Master_Start();
 10189  1779  160A  158A  22D6  160A  118A  	fcall	_I2C_Master_Start
 10190                           
 10191                           ;EEPROM_24C1025.c: 315:              I2C_Master_Write(ctrl & 0xFE);
 10192  177E  1283               	bcf	3,5	;RP0=0, select bank0
 10193  177F  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10194  1780  39FE               	andlw	254
 10195  1781  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10196  1782  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10197  1783  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10198  1784  00A3               	movwf	I2C_Master_Write@d
 10199  1785  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10200  1786  00A4               	movwf	I2C_Master_Write@d+1
 10201  1787  160A  158A  22B0  160A  118A  	fcall	_I2C_Master_Write
 10202                           
 10203                           ;EEPROM_24C1025.c: 316:              I2C_Master_Write(((char *)&mem_add)[1]);
 10204  178C  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10205  178D  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10206  178E  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10207  178F  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10208  1790  00A3               	movwf	I2C_Master_Write@d
 10209  1791  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10210  1792  00A4               	movwf	I2C_Master_Write@d+1
 10211  1793  160A  158A  22B0  160A  118A  	fcall	_I2C_Master_Write
 10212                           
 10213                           ;EEPROM_24C1025.c: 317:              I2C_Master_Write(((char *)&mem_add)[0]);
 10214  1798  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10215  1799  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10216  179A  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10217  179B  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10218  179C  00A3               	movwf	I2C_Master_Write@d
 10219  179D  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10220  179E  00A4               	movwf	I2C_Master_Write@d+1
 10221  179F  160A  158A  22B0  160A  118A  	fcall	_I2C_Master_Write
 10222                           
 10223                           ;EEPROM_24C1025.c: 318:              I2C_Master_RepeatedStart();
 10224  17A4  160A  158A  22BB  160A  118A  	fcall	_I2C_Master_RepeatedStart
 10225                           
 10226                           ;EEPROM_24C1025.c: 319:              I2C_Master_Write(ctrl);
 10227  17A9  1283               	bcf	3,5	;RP0=0, select bank0
 10228  17AA  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10229  17AB  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10230  17AC  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10231  17AD  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10232  17AE  00A3               	movwf	I2C_Master_Write@d
 10233  17AF  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10234  17B0  00A4               	movwf	I2C_Master_Write@d+1
 10235  17B1  160A  158A  22B0  160A  118A  	fcall	_I2C_Master_Write
 10236                           
 10237                           ;EEPROM_24C1025.c: 320:              }
 10238  17B6  2FDE               	goto	l4335
 10239  17B7                     l4325:
 10240                           
 10241                           ;EEPROM_24C1025.c: 322:              {;EEPROM_24C1025.c: 323:              (*buffer)=I2C
      +                          _Master_Read(1);
 10242  17B7  3001               	movlw	1
 10243  17B8  00A3               	movwf	I2C_Master_Read@a
 10244  17B9  3000               	movlw	0
 10245  17BA  00A4               	movwf	I2C_Master_Read@a+1
 10246  17BB  160A  158A  257E  160A  118A  	fcall	_I2C_Master_Read
 10247  17C0  0823               	movf	?_I2C_Master_Read,w
 10248  17C1  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10249  17C2  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10250  17C3  0084               	movwf	4
 10251  17C4  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10252  17C5  1783               	bsf	3,7	;select IRP bank2
 10253  17C6  0080               	movwf	0
 10254                           
 10255                           ;EEPROM_24C1025.c: 324:              if((*buffer)==0)break;
 10256  17C7  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10257  17C8  0084               	movwf	4
 10258  17C9  0800               	movf	0,w
 10259  17CA  1903               	btfsc	3,2
 10260  17CB  2FE7               	goto	l4337
 10261                           
 10262                           ;EEPROM_24C1025.c: 325:              buffer++;
 10263  17CC  3001               	movlw	1
 10264  17CD  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10265  17CE  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10266  17CF  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 10267                           
 10268                           ;EEPROM_24C1025.c: 326:              mem_add++;
 10269  17D0  3001               	movlw	1
 10270  17D1  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10271  17D2  3000               	movlw	0
 10272  17D3  1803               	skipnc
 10273  17D4  3001               	movlw	1
 10274  17D5  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10275  17D6  3000               	movlw	0
 10276  17D7  1803               	skipnc
 10277  17D8  3001               	movlw	1
 10278  17D9  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10279  17DA  3000               	movlw	0
 10280  17DB  1803               	skipnc
 10281  17DC  3001               	movlw	1
 10282  17DD  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10283  17DE                     l4335:
 10284                           
 10285                           ;EEPROM_24C1025.c: 328:        }while((cnt++)<64);
 10286  17DE  3001               	movlw	1
 10287  17DF  07B0               	addwf	EEPROM_24C1025_Read_Str@cnt,f
 10288  17E0  30FF               	movlw	-1
 10289  17E1  0730               	addwf	EEPROM_24C1025_Read_Str@cnt,w
 10290  17E2  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10291  17E3  3040               	movlw	64
 10292  17E4  022E               	subwf	??_EEPROM_24C1025_Read_Str,w
 10293  17E5  1C03               	skipc
 10294  17E6  2F05               	goto	l4281
 10295  17E7                     l4337:
 10296                           
 10297                           ;EEPROM_24C1025.c: 330:      I2C_Master_Read(0);
 10298  17E7  3000               	movlw	0
 10299  17E8  1283               	bcf	3,5	;RP0=0, select bank0
 10300  17E9  1303               	bcf	3,6	;RP1=0, select bank0
 10301  17EA  00A3               	movwf	I2C_Master_Read@a
 10302  17EB  00A4               	movwf	I2C_Master_Read@a+1
 10303  17EC  160A  158A  257E  160A  118A  	fcall	_I2C_Master_Read
 10304                           
 10305                           ;EEPROM_24C1025.c: 331:      I2C_Master_Stop();
 10306  17F1  160A  158A  2289  160A  118A  	fcall	_I2C_Master_Stop
 10307                           
 10308                           ;EEPROM_24C1025.c: 332:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 10309  17F6  30B9               	movlw	185
 10310  17F7  1283               	bcf	3,5	;RP0=0, select bank0
 10311  17F8  1303               	bcf	3,6	;RP1=0, select bank0
 10312  17F9  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10313  17FA                     u5307:
 10314  17FA  2FFB               	nop2
 10315  17FB  2FFC               	nop2
 10316  17FC  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10317  17FD  2FFA               	goto	u5307
 10318  17FE  2FFF               	nop2
 10319  17FF  0008               	return
 10320  1800                     __end_of_EEPROM_24C1025_Read_Str:
 10321                           
 10322                           	psect	text40
 10323  1C6E                     __ptext40:	
 10324 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 10325 ;; Defined at:
 10326 ;;		line 360 in file "EEPROM_24C1025.c"
 10327 ;; Parameters:    Size  Location     Type
 10328 ;;  chip_add        1    wreg     unsigned char 
 10329 ;;  mem_add         4   22[BANK0 ] unsigned long 
 10330 ;; Auto vars:     Size  Location     Type
 10331 ;;  chip_add        1   28[BANK0 ] unsigned char 
 10332 ;;  data            2   29[BANK0 ] unsigned char [2]
 10333 ;; Return value:  Size  Location     Type
 10334 ;;                  2   22[BANK0 ] unsigned int 
 10335 ;; Registers used:
 10336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10337 ;; Tracked objects:
 10338 ;;		On entry : 300/300
 10339 ;;		On exit  : 300/0
 10340 ;;		Unchanged: 0/0
 10341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10342 ;;      Params:         0       4       0       0       0
 10343 ;;      Locals:         0       3       0       0       0
 10344 ;;      Temps:          0       2       0       0       0
 10345 ;;      Totals:         0       9       0       0       0
 10346 ;;Total ram usage:        9 bytes
 10347 ;; Hardware stack levels used: 1
 10348 ;; Hardware stack levels required when called: 4
 10349 ;; This function calls:
 10350 ;;		_EEPROM_24C1025_Read_Buffer
 10351 ;; This function is called by:
 10352 ;;		_Decodify_Command
 10353 ;; This function uses a non-reentrant model
 10354 ;;
 10355                           
 10356                           
 10357                           ;psect for function _EEPROM_24C1025_Read_Int
 10358  1C6E                     _EEPROM_24C1025_Read_Int:
 10359                           
 10360                           ;incstack = 0
 10361                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 10362                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 10363  1C6E  1283               	bcf	3,5	;RP0=0, select bank0
 10364  1C6F  1303               	bcf	3,6	;RP1=0, select bank0
 10365  1C70  00BC               	movwf	EEPROM_24C1025_Read_Int@chip_add
 10366                           
 10367                           ;EEPROM_24C1025.c: 361:     char data[2];;EEPROM_24C1025.c: 362:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 10368  1C71  0839               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 10369  1C72  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 10370  1C73  0838               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 10371  1C74  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 10372  1C75  0837               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 10373  1C76  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 10374  1C77  0836               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 10375  1C78  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 10376  1C79  3002               	movlw	2
 10377  1C7A  00BA               	movwf	??_EEPROM_24C1025_Read_Int
 10378  1C7B  083A               	movf	??_EEPROM_24C1025_Read_Int,w
 10379  1C7C  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 10380  1C7D  303D               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 10381  1C7E  00BB               	movwf	??_EEPROM_24C1025_Read_Int+1
 10382  1C7F  083B               	movf	??_EEPROM_24C1025_Read_Int+1,w
 10383  1C80  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 10384  1C81  083C               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 10385  1C82  120A  158A  2250   	fcall	_EEPROM_24C1025_Read_Buffer
 10386                           
 10387                           ;EEPROM_24C1025.c: 363:     return (data[0]<<8)+data[1];
 10388  1C85  1283               	bcf	3,5	;RP0=0, select bank0
 10389  1C86  1303               	bcf	3,6	;RP1=0, select bank0
 10390  1C87  083D               	movf	EEPROM_24C1025_Read_Int@data,w
 10391  1C88  00BA               	movwf	??_EEPROM_24C1025_Read_Int
 10392  1C89  01BB               	clrf	??_EEPROM_24C1025_Read_Int+1
 10393  1C8A  083A               	movf	??_EEPROM_24C1025_Read_Int,w
 10394  1C8B  00BB               	movwf	??_EEPROM_24C1025_Read_Int+1
 10395  1C8C  01BA               	clrf	??_EEPROM_24C1025_Read_Int
 10396  1C8D  083E               	movf	EEPROM_24C1025_Read_Int@data+1,w
 10397  1C8E  073A               	addwf	??_EEPROM_24C1025_Read_Int,w
 10398  1C8F  00B6               	movwf	?_EEPROM_24C1025_Read_Int
 10399  1C90  3000               	movlw	0
 10400  1C91  1803               	skipnc
 10401  1C92  3001               	movlw	1
 10402  1C93  073B               	addwf	??_EEPROM_24C1025_Read_Int+1,w
 10403  1C94  00B7               	movwf	?_EEPROM_24C1025_Read_Int+1
 10404  1C95  0008               	return
 10405  1C96                     __end_of_EEPROM_24C1025_Read_Int:
 10406                           
 10407                           	psect	text41
 10408  1B57                     __ptext41:	
 10409 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 10410 ;; Defined at:
 10411 ;;		line 346 in file "EEPROM_24C1025.c"
 10412 ;; Parameters:    Size  Location     Type
 10413 ;;  chip_add        1    wreg     unsigned char 
 10414 ;;  mem_add         4   22[BANK0 ] unsigned long 
 10415 ;; Auto vars:     Size  Location     Type
 10416 ;;  chip_add        1   27[BANK0 ] unsigned char 
 10417 ;;  data            1   28[BANK0 ] unsigned char 
 10418 ;; Return value:  Size  Location     Type
 10419 ;;                  1    wreg      unsigned char 
 10420 ;; Registers used:
 10421 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10422 ;; Tracked objects:
 10423 ;;		On entry : 300/300
 10424 ;;		On exit  : 300/0
 10425 ;;		Unchanged: 0/0
 10426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10427 ;;      Params:         0       4       0       0       0
 10428 ;;      Locals:         0       2       0       0       0
 10429 ;;      Temps:          0       1       0       0       0
 10430 ;;      Totals:         0       7       0       0       0
 10431 ;;Total ram usage:        7 bytes
 10432 ;; Hardware stack levels used: 1
 10433 ;; Hardware stack levels required when called: 4
 10434 ;; This function calls:
 10435 ;;		_EEPROM_24C1025_Read_Buffer
 10436 ;; This function is called by:
 10437 ;;		_Decodify_Command
 10438 ;; This function uses a non-reentrant model
 10439 ;;
 10440                           
 10441                           
 10442                           ;psect for function _EEPROM_24C1025_Read_Byte
 10443  1B57                     _EEPROM_24C1025_Read_Byte:
 10444                           
 10445                           ;incstack = 0
 10446                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 10447                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 10448  1B57  1283               	bcf	3,5	;RP0=0, select bank0
 10449  1B58  1303               	bcf	3,6	;RP1=0, select bank0
 10450  1B59  00BB               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 10451                           
 10452                           ;EEPROM_24C1025.c: 347:     char data;;EEPROM_24C1025.c: 348:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 10453  1B5A  0839               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 10454  1B5B  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 10455  1B5C  0838               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 10456  1B5D  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 10457  1B5E  0837               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 10458  1B5F  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 10459  1B60  0836               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 10460  1B61  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 10461  1B62  01AE               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 10462  1B63  0AAE               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 10463  1B64  303C               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 10464  1B65  00BA               	movwf	??_EEPROM_24C1025_Read_Byte
 10465  1B66  083A               	movf	??_EEPROM_24C1025_Read_Byte,w
 10466  1B67  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 10467  1B68  083B               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 10468  1B69  120A  158A  2250   	fcall	_EEPROM_24C1025_Read_Buffer
 10469                           
 10470                           ;EEPROM_24C1025.c: 349:     return data;
 10471  1B6C  1283               	bcf	3,5	;RP0=0, select bank0
 10472  1B6D  1303               	bcf	3,6	;RP1=0, select bank0
 10473  1B6E  083C               	movf	EEPROM_24C1025_Read_Byte@data,w
 10474  1B6F  0008               	return
 10475  1B70                     __end_of_EEPROM_24C1025_Read_Byte:
 10476                           
 10477                           	psect	text42
 10478  0A50                     __ptext42:	
 10479 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 10480 ;; Defined at:
 10481 ;;		line 77 in file "EEPROM_24C1025.c"
 10482 ;; Parameters:    Size  Location     Type
 10483 ;;  chip_add        1    wreg     unsigned char 
 10484 ;;  mem_add         4   10[BANK0 ] unsigned long 
 10485 ;;  sizedata        1   14[BANK0 ] unsigned char 
 10486 ;;  data            1   15[BANK0 ] PTR unsigned char 
 10487 ;;		 -> EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), 
 10488 ;; Auto vars:     Size  Location     Type
 10489 ;;  chip_add        1   19[BANK0 ] unsigned char 
 10490 ;;  cnt             1   18[BANK0 ] unsigned char 
 10491 ;;  ctrl            1   21[BANK0 ] unsigned char 
 10492 ;;  range           1   20[BANK0 ] unsigned char 
 10493 ;;  cnt             1    0        unsigned char 
 10494 ;; Return value:  Size  Location     Type
 10495 ;;                  1    wreg      void 
 10496 ;; Registers used:
 10497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10498 ;; Tracked objects:
 10499 ;;		On entry : 300/0
 10500 ;;		On exit  : 0/0
 10501 ;;		Unchanged: 0/0
 10502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10503 ;;      Params:         0       6       0       0       0
 10504 ;;      Locals:         0       4       0       0       0
 10505 ;;      Temps:          0       2       0       0       0
 10506 ;;      Totals:         0      12       0       0       0
 10507 ;;Total ram usage:       12 bytes
 10508 ;; Hardware stack levels used: 1
 10509 ;; Hardware stack levels required when called: 3
 10510 ;; This function calls:
 10511 ;;		_I2C_Master_Read
 10512 ;;		_I2C_Master_RepeatedStart
 10513 ;;		_I2C_Master_Start
 10514 ;;		_I2C_Master_Stop
 10515 ;;		_I2C_Master_Write
 10516 ;;		_my_delay_ms_WDT
 10517 ;; This function is called by:
 10518 ;;		_EEPROM_24C1025_Read_Byte
 10519 ;;		_EEPROM_24C1025_Read_Int
 10520 ;; This function uses a non-reentrant model
 10521 ;;
 10522                           
 10523                           
 10524                           ;psect for function _EEPROM_24C1025_Read_Buffer
 10525  0A50                     _EEPROM_24C1025_Read_Buffer:
 10526                           
 10527                           ;incstack = 0
 10528                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
 10529                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 10530  0A50  00B3               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 10531                           
 10532                           ;EEPROM_24C1025.c: 83:      unsigned char range=0;
 10533  0A51  01B4               	clrf	EEPROM_24C1025_Read_Buffer@range
 10534                           
 10535                           ;EEPROM_24C1025.c: 84:      unsigned char ctrl;;EEPROM_24C1025.c: 86:      Delay_Led_Mem
      +                          ory=20;
 10536  0A52  3014               	movlw	20
 10537  0A53  1683               	bsf	3,5	;RP0=1, select bank1
 10538  0A54  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 10539  0A55  3000               	movlw	0
 10540  0A56  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 10541                           
 10542                           ;EEPROM_24C1025.c: 88:      if(mem_add>0x1FFFF) return;
 10543  0A57  1283               	bcf	3,5	;RP0=0, select bank0
 10544  0A58  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 10545  0A59  1D03               	btfss	3,2
 10546  0A5A  0008               	return
 10547  0A5B  3002               	movlw	2
 10548  0A5C  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 10549  0A5D  1D03               	skipz
 10550  0A5E  2A67               	goto	u2733
 10551  0A5F  3000               	movlw	0
 10552  0A60  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10553  0A61  1D03               	skipz
 10554  0A62  2A67               	goto	u2733
 10555  0A63  3000               	movlw	0
 10556  0A64  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10557  0A65  1D03               	skipz
 10558  0A66  2A67               	goto	u2733
 10559  0A67                     u2733:
 10560  0A67  1803               	btfsc	3,0
 10561  0A68  0008               	return
 10562                           
 10563                           ;EEPROM_24C1025.c: 90:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10564  0A69  1283               	bcf	3,5	;RP0=0, select bank0
 10565  0A6A  1303               	bcf	3,6	;RP1=0, select bank0
 10566  0A6B  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 10567  0A6C  1D03               	btfss	3,2
 10568  0A6D  2A7C               	goto	l3643
 10569  0A6E  3001               	movlw	1
 10570  0A6F  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 10571  0A70  1D03               	skipz
 10572  0A71  2A7A               	goto	u2743
 10573  0A72  3000               	movlw	0
 10574  0A73  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10575  0A74  1D03               	skipz
 10576  0A75  2A7A               	goto	u2743
 10577  0A76  3000               	movlw	0
 10578  0A77  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10579  0A78  1D03               	skipz
 10580  0A79  2A7A               	goto	u2743
 10581  0A7A                     u2743:
 10582  0A7A  1C03               	btfss	3,0
 10583  0A7B  2A83               	goto	l3645
 10584  0A7C                     l3643:
 10585  0A7C  3008               	movlw	8
 10586  0A7D  1283               	bcf	3,5	;RP0=0, select bank0
 10587  0A7E  1303               	bcf	3,6	;RP1=0, select bank0
 10588  0A7F  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10589  0A80  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10590  0A81  00B4               	movwf	EEPROM_24C1025_Read_Buffer@range
 10591  0A82  2A86               	goto	l3647
 10592  0A83                     l3645:
 10593  0A83  1283               	bcf	3,5	;RP0=0, select bank0
 10594  0A84  1303               	bcf	3,6	;RP1=0, select bank0
 10595  0A85  01B4               	clrf	EEPROM_24C1025_Read_Buffer@range
 10596  0A86                     l3647:
 10597                           
 10598                           ;EEPROM_24C1025.c: 91:      ctrl=chip_add;
 10599  0A86  0833               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 10600  0A87  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10601  0A88  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10602  0A89  00B5               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 10603                           
 10604                           ;EEPROM_24C1025.c: 92:      ctrl<<=1;
 10605  0A8A  1003               	clrc
 10606  0A8B  0DB5               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 10607                           
 10608                           ;EEPROM_24C1025.c: 93:      ctrl |= 0xA0;
 10609  0A8C  30A0               	movlw	160
 10610  0A8D  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10611  0A8E  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10612  0A8F  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 10613                           
 10614                           ;EEPROM_24C1025.c: 94:      ctrl |= 0b00000001;
 10615  0A90  1435               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 10616                           
 10617                           ;EEPROM_24C1025.c: 95:      ctrl |= range;
 10618  0A91  0834               	movf	EEPROM_24C1025_Read_Buffer@range,w
 10619  0A92  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10620  0A93  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10621  0A94  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 10622                           
 10623                           ;EEPROM_24C1025.c: 97:      I2C_Master_Start();
 10624  0A95  160A  158A  22D6  120A  158A  	fcall	_I2C_Master_Start
 10625                           
 10626                           ;EEPROM_24C1025.c: 98:      I2C_Master_Write(ctrl & 0xFE);
 10627  0A9A  1283               	bcf	3,5	;RP0=0, select bank0
 10628  0A9B  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 10629  0A9C  39FE               	andlw	254
 10630  0A9D  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10631  0A9E  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 10632  0A9F  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10633  0AA0  00A3               	movwf	I2C_Master_Write@d
 10634  0AA1  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 10635  0AA2  00A4               	movwf	I2C_Master_Write@d+1
 10636  0AA3  160A  158A  22B0  120A  158A  	fcall	_I2C_Master_Write
 10637                           
 10638                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(((char *)&mem_add)[1]);
 10639  0AA8  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10640  0AA9  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10641  0AAA  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 10642  0AAB  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10643  0AAC  00A3               	movwf	I2C_Master_Write@d
 10644  0AAD  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 10645  0AAE  00A4               	movwf	I2C_Master_Write@d+1
 10646  0AAF  160A  158A  22B0  120A  158A  	fcall	_I2C_Master_Write
 10647                           
 10648                           ;EEPROM_24C1025.c: 100:      I2C_Master_Write(((char *)&mem_add)[0]);
 10649  0AB4  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10650  0AB5  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10651  0AB6  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 10652  0AB7  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10653  0AB8  00A3               	movwf	I2C_Master_Write@d
 10654  0AB9  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 10655  0ABA  00A4               	movwf	I2C_Master_Write@d+1
 10656  0ABB  160A  158A  22B0  120A  158A  	fcall	_I2C_Master_Write
 10657                           
 10658                           ;EEPROM_24C1025.c: 101:      I2C_Master_RepeatedStart();
 10659  0AC0  160A  158A  22BB  120A  158A  	fcall	_I2C_Master_RepeatedStart
 10660                           
 10661                           ;EEPROM_24C1025.c: 102:      I2C_Master_Write(ctrl);
 10662  0AC5  1283               	bcf	3,5	;RP0=0, select bank0
 10663  0AC6  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 10664  0AC7  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10665  0AC8  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 10666  0AC9  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10667  0ACA  00A3               	movwf	I2C_Master_Write@d
 10668  0ACB  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 10669  0ACC  00A4               	movwf	I2C_Master_Write@d+1
 10670  0ACD  160A  158A  22B0  120A  158A  	fcall	_I2C_Master_Write
 10671                           
 10672                           ;EEPROM_24C1025.c: 104:      for(char cnt=0;cnt<(sizedata);cnt++)
 10673  0AD2  01B2               	clrf	EEPROM_24C1025_Read_Buffer@cnt_108
 10674  0AD3                     l3721:
 10675  0AD3  082E               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 10676  0AD4  0232               	subwf	EEPROM_24C1025_Read_Buffer@cnt_108,w
 10677  0AD5  1803               	btfsc	3,0
 10678  0AD6  2BB5               	goto	l3723
 10679  0AD7  0064               	clrwdt	;# 
 10680                           
 10681                           ;EEPROM_24C1025.c: 107:            if(mem_add>0x1FFFF) break;
 10682  0AD8  1283               	bcf	3,5	;RP0=0, select bank0
 10683  0AD9  1303               	bcf	3,6	;RP1=0, select bank0
 10684  0ADA  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 10685  0ADB  1D03               	btfss	3,2
 10686  0ADC  2BB5               	goto	l3723
 10687  0ADD  3002               	movlw	2
 10688  0ADE  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 10689  0ADF  1D03               	skipz
 10690  0AE0  2AE9               	goto	u2753
 10691  0AE1  3000               	movlw	0
 10692  0AE2  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10693  0AE3  1D03               	skipz
 10694  0AE4  2AE9               	goto	u2753
 10695  0AE5  3000               	movlw	0
 10696  0AE6  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10697  0AE7  1D03               	skipz
 10698  0AE8  2AE9               	goto	u2753
 10699  0AE9                     u2753:
 10700  0AE9  1803               	btfsc	3,0
 10701  0AEA  2BB5               	goto	l3723
 10702                           
 10703                           ;EEPROM_24C1025.c: 108:            if((mem_add+1)%128==0)
 10704  0AEB  1283               	bcf	3,5	;RP0=0, select bank0
 10705  0AEC  1303               	bcf	3,6	;RP1=0, select bank0
 10706  0AED  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10707  0AEE  3E01               	addlw	1
 10708  0AEF  397F               	andlw	127
 10709  0AF0  1D03               	btfss	3,2
 10710  0AF1  2B8E               	goto	l3713
 10711                           
 10712                           ;EEPROM_24C1025.c: 109:              {;EEPROM_24C1025.c: 110:              (*data)=I2C_M
      +                          aster_Read(0);
 10713  0AF2  3000               	movlw	0
 10714  0AF3  00A3               	movwf	I2C_Master_Read@a
 10715  0AF4  00A4               	movwf	I2C_Master_Read@a+1
 10716  0AF5  160A  158A  257E  120A  158A  	fcall	_I2C_Master_Read
 10717  0AFA  0823               	movf	?_I2C_Master_Read,w
 10718  0AFB  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10719  0AFC  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 10720  0AFD  0084               	movwf	4
 10721  0AFE  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10722  0AFF  1383               	bcf	3,7	;select IRP bank0
 10723  0B00  0080               	movwf	0
 10724                           
 10725                           ;EEPROM_24C1025.c: 111:              I2C_Master_Stop();
 10726  0B01  160A  158A  2289  120A  158A  	fcall	_I2C_Master_Stop
 10727                           
 10728                           ;EEPROM_24C1025.c: 113:              my_delay_ms_WDT(5);
 10729  0B06  3000               	movlw	0
 10730  0B07  1283               	bcf	3,5	;RP0=0, select bank0
 10731  0B08  00A3               	movwf	my_delay_ms_WDT@time+3
 10732  0B09  3000               	movlw	0
 10733  0B0A  00A2               	movwf	my_delay_ms_WDT@time+2
 10734  0B0B  3000               	movlw	0
 10735  0B0C  00A1               	movwf	my_delay_ms_WDT@time+1
 10736  0B0D  3005               	movlw	5
 10737  0B0E  00A0               	movwf	my_delay_ms_WDT@time
 10738  0B0F  160A  158A  25EA  120A  158A  	fcall	_my_delay_ms_WDT
 10739                           
 10740                           ;EEPROM_24C1025.c: 114:              mem_add++;
 10741  0B14  3001               	movlw	1
 10742  0B15  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 10743  0B16  3000               	movlw	0
 10744  0B17  1803               	skipnc
 10745  0B18  3001               	movlw	1
 10746  0B19  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 10747  0B1A  3000               	movlw	0
 10748  0B1B  1803               	skipnc
 10749  0B1C  3001               	movlw	1
 10750  0B1D  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 10751  0B1E  3000               	movlw	0
 10752  0B1F  1803               	skipnc
 10753  0B20  3001               	movlw	1
 10754  0B21  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 10755                           
 10756                           ;EEPROM_24C1025.c: 115:              data++;
 10757  0B22  3001               	movlw	1
 10758  0B23  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10759  0B24  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10760  0B25  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 10761                           
 10762                           ;EEPROM_24C1025.c: 116:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10763  0B26  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 10764  0B27  1D03               	btfss	3,2
 10765  0B28  2B37               	goto	l3687
 10766  0B29  3001               	movlw	1
 10767  0B2A  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 10768  0B2B  1D03               	skipz
 10769  0B2C  2B35               	goto	u2773
 10770  0B2D  3000               	movlw	0
 10771  0B2E  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10772  0B2F  1D03               	skipz
 10773  0B30  2B35               	goto	u2773
 10774  0B31  3000               	movlw	0
 10775  0B32  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10776  0B33  1D03               	skipz
 10777  0B34  2B35               	goto	u2773
 10778  0B35                     u2773:
 10779  0B35  1C03               	btfss	3,0
 10780  0B36  2B3E               	goto	l3689
 10781  0B37                     l3687:
 10782  0B37  3008               	movlw	8
 10783  0B38  1283               	bcf	3,5	;RP0=0, select bank0
 10784  0B39  1303               	bcf	3,6	;RP1=0, select bank0
 10785  0B3A  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10786  0B3B  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10787  0B3C  00B4               	movwf	EEPROM_24C1025_Read_Buffer@range
 10788  0B3D  2B41               	goto	l3691
 10789  0B3E                     l3689:
 10790  0B3E  1283               	bcf	3,5	;RP0=0, select bank0
 10791  0B3F  1303               	bcf	3,6	;RP1=0, select bank0
 10792  0B40  01B4               	clrf	EEPROM_24C1025_Read_Buffer@range
 10793  0B41                     l3691:
 10794                           
 10795                           ;EEPROM_24C1025.c: 117:              ctrl=chip_add;
 10796  0B41  0833               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 10797  0B42  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10798  0B43  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10799  0B44  00B5               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 10800                           
 10801                           ;EEPROM_24C1025.c: 118:              ctrl<<=1;
 10802  0B45  1003               	clrc
 10803  0B46  0DB5               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 10804                           
 10805                           ;EEPROM_24C1025.c: 119:              ctrl |= 0xA0;
 10806  0B47  30A0               	movlw	160
 10807  0B48  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10808  0B49  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10809  0B4A  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 10810                           
 10811                           ;EEPROM_24C1025.c: 120:              ctrl |= 0b00000001;
 10812  0B4B  1435               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 10813                           
 10814                           ;EEPROM_24C1025.c: 121:              ctrl |= range;
 10815  0B4C  0834               	movf	EEPROM_24C1025_Read_Buffer@range,w
 10816  0B4D  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10817  0B4E  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10818  0B4F  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 10819                           
 10820                           ;EEPROM_24C1025.c: 123:              I2C_Master_Start();
 10821  0B50  160A  158A  22D6  120A  158A  	fcall	_I2C_Master_Start
 10822                           
 10823                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl & 0xFE);
 10824  0B55  1283               	bcf	3,5	;RP0=0, select bank0
 10825  0B56  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 10826  0B57  39FE               	andlw	254
 10827  0B58  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10828  0B59  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 10829  0B5A  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10830  0B5B  00A3               	movwf	I2C_Master_Write@d
 10831  0B5C  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 10832  0B5D  00A4               	movwf	I2C_Master_Write@d+1
 10833  0B5E  160A  158A  22B0  120A  158A  	fcall	_I2C_Master_Write
 10834                           
 10835                           ;EEPROM_24C1025.c: 125:              I2C_Master_Write(((char *)&mem_add)[1]);
 10836  0B63  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10837  0B64  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10838  0B65  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 10839  0B66  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10840  0B67  00A3               	movwf	I2C_Master_Write@d
 10841  0B68  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 10842  0B69  00A4               	movwf	I2C_Master_Write@d+1
 10843  0B6A  160A  158A  22B0  120A  158A  	fcall	_I2C_Master_Write
 10844                           
 10845                           ;EEPROM_24C1025.c: 126:              I2C_Master_Write(((char *)&mem_add)[0]);
 10846  0B6F  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10847  0B70  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10848  0B71  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 10849  0B72  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10850  0B73  00A3               	movwf	I2C_Master_Write@d
 10851  0B74  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 10852  0B75  00A4               	movwf	I2C_Master_Write@d+1
 10853  0B76  160A  158A  22B0  120A  158A  	fcall	_I2C_Master_Write
 10854                           
 10855                           ;EEPROM_24C1025.c: 127:              I2C_Master_RepeatedStart();
 10856  0B7B  160A  158A  22BB  120A  158A  	fcall	_I2C_Master_RepeatedStart
 10857                           
 10858                           ;EEPROM_24C1025.c: 128:              I2C_Master_Write(ctrl);
 10859  0B80  1283               	bcf	3,5	;RP0=0, select bank0
 10860  0B81  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 10861  0B82  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10862  0B83  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 10863  0B84  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10864  0B85  00A3               	movwf	I2C_Master_Write@d
 10865  0B86  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 10866  0B87  00A4               	movwf	I2C_Master_Write@d+1
 10867  0B88  160A  158A  22B0  120A  158A  	fcall	_I2C_Master_Write
 10868                           
 10869                           ;EEPROM_24C1025.c: 129:              }
 10870  0B8D  2BB0               	goto	l3719
 10871  0B8E                     l3713:
 10872                           
 10873                           ;EEPROM_24C1025.c: 131:              {;EEPROM_24C1025.c: 132:              (*data)=I2C_M
      +                          aster_Read(1);
 10874  0B8E  3001               	movlw	1
 10875  0B8F  00A3               	movwf	I2C_Master_Read@a
 10876  0B90  3000               	movlw	0
 10877  0B91  00A4               	movwf	I2C_Master_Read@a+1
 10878  0B92  160A  158A  257E  120A  158A  	fcall	_I2C_Master_Read
 10879  0B97  0823               	movf	?_I2C_Master_Read,w
 10880  0B98  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10881  0B99  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 10882  0B9A  0084               	movwf	4
 10883  0B9B  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10884  0B9C  1383               	bcf	3,7	;select IRP bank0
 10885  0B9D  0080               	movwf	0
 10886                           
 10887                           ;EEPROM_24C1025.c: 133:              data++;
 10888  0B9E  3001               	movlw	1
 10889  0B9F  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10890  0BA0  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10891  0BA1  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 10892                           
 10893                           ;EEPROM_24C1025.c: 134:              mem_add++;
 10894  0BA2  3001               	movlw	1
 10895  0BA3  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 10896  0BA4  3000               	movlw	0
 10897  0BA5  1803               	skipnc
 10898  0BA6  3001               	movlw	1
 10899  0BA7  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 10900  0BA8  3000               	movlw	0
 10901  0BA9  1803               	skipnc
 10902  0BAA  3001               	movlw	1
 10903  0BAB  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 10904  0BAC  3000               	movlw	0
 10905  0BAD  1803               	skipnc
 10906  0BAE  3001               	movlw	1
 10907  0BAF  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 10908  0BB0                     l3719:
 10909                           
 10910                           ;EEPROM_24C1025.c: 136:         }
 10911  0BB0  3001               	movlw	1
 10912  0BB1  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10913  0BB2  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 10914  0BB3  07B2               	addwf	EEPROM_24C1025_Read_Buffer@cnt_108,f
 10915  0BB4  2AD3               	goto	l3721
 10916  0BB5                     l3723:
 10917                           
 10918                           ;EEPROM_24C1025.c: 137:         I2C_Master_Read(0);
 10919  0BB5  3000               	movlw	0
 10920  0BB6  1283               	bcf	3,5	;RP0=0, select bank0
 10921  0BB7  1303               	bcf	3,6	;RP1=0, select bank0
 10922  0BB8  00A3               	movwf	I2C_Master_Read@a
 10923  0BB9  00A4               	movwf	I2C_Master_Read@a+1
 10924  0BBA  160A  158A  257E  120A  158A  	fcall	_I2C_Master_Read
 10925                           
 10926                           ;EEPROM_24C1025.c: 138:         I2C_Master_Stop();
 10927  0BBF  160A  158A  2289  120A  158A  	fcall	_I2C_Master_Stop
 10928                           
 10929                           ;EEPROM_24C1025.c: 139:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 10930  0BC4  30B9               	movlw	185
 10931  0BC5  1283               	bcf	3,5	;RP0=0, select bank0
 10932  0BC6  1303               	bcf	3,6	;RP1=0, select bank0
 10933  0BC7  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10934  0BC8                     u5317:
 10935  0BC8  2BC9               	nop2
 10936  0BC9  2BCA               	nop2
 10937  0BCA  0BB0               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 10938  0BCB  2BC8               	goto	u5317
 10939  0BCC  2BCD               	nop2
 10940  0BCD  0008               	return
 10941  0BCE                     __end_of_EEPROM_24C1025_Read_Buffer:
 10942                           
 10943                           	psect	text43
 10944  08D2                     __ptext43:	
 10945 ;; *************** function _EEPROM_24C1025_Read_Buffer_USART *****************
 10946 ;; Defined at:
 10947 ;;		line 148 in file "EEPROM_24C1025.c"
 10948 ;; Parameters:    Size  Location     Type
 10949 ;;  chip_add        1    wreg     unsigned char 
 10950 ;;  mem_add         4    9[BANK0 ] unsigned long 
 10951 ;;  sizedata        1   13[BANK0 ] unsigned char 
 10952 ;;  data            1   14[BANK0 ] PTR unsigned char 
 10953 ;;		 -> buffer(33), 
 10954 ;; Auto vars:     Size  Location     Type
 10955 ;;  chip_add        1   18[BANK0 ] unsigned char 
 10956 ;;  cnt             1   17[BANK0 ] unsigned char 
 10957 ;;  ctrl            1   20[BANK0 ] unsigned char 
 10958 ;;  range           1   19[BANK0 ] unsigned char 
 10959 ;;  cnt             1    0        unsigned char 
 10960 ;; Return value:  Size  Location     Type
 10961 ;;                  1    wreg      void 
 10962 ;; Registers used:
 10963 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10964 ;; Tracked objects:
 10965 ;;		On entry : 300/300
 10966 ;;		On exit  : 0/0
 10967 ;;		Unchanged: 0/0
 10968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10969 ;;      Params:         0       6       0       0       0
 10970 ;;      Locals:         0       4       0       0       0
 10971 ;;      Temps:          0       2       0       0       0
 10972 ;;      Totals:         0      12       0       0       0
 10973 ;;Total ram usage:       12 bytes
 10974 ;; Hardware stack levels used: 1
 10975 ;; Hardware stack levels required when called: 3
 10976 ;; This function calls:
 10977 ;;		_I2C_Master_Read
 10978 ;;		_I2C_Master_RepeatedStart
 10979 ;;		_I2C_Master_Start
 10980 ;;		_I2C_Master_Stop
 10981 ;;		_I2C_Master_Write
 10982 ;;		_USART_putc
 10983 ;; This function is called by:
 10984 ;;		_Decodify_Command
 10985 ;; This function uses a non-reentrant model
 10986 ;;
 10987                           
 10988                           
 10989                           ;psect for function _EEPROM_24C1025_Read_Buffer_USART
 10990  08D2                     _EEPROM_24C1025_Read_Buffer_USART:
 10991                           
 10992                           ;incstack = 0
 10993                           ; Regs used in _EEPROM_24C1025_Read_Buffer_USART: [wreg-fsr0h+status,2+status,0+pclath+c
      +                          stack]
 10994                           ;EEPROM_24C1025_Read_Buffer_USART@chip_add stored from wreg
 10995  08D2  1283               	bcf	3,5	;RP0=0, select bank0
 10996  08D3  1303               	bcf	3,6	;RP1=0, select bank0
 10997  08D4  00B2               	movwf	EEPROM_24C1025_Read_Buffer_USART@chip_add
 10998                           
 10999                           ;EEPROM_24C1025.c: 154:      unsigned char range=0;
 11000  08D5  01B3               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11001                           
 11002                           ;EEPROM_24C1025.c: 155:      unsigned char ctrl;;EEPROM_24C1025.c: 157:      Delay_Led_M
      +                          emory=20;
 11003  08D6  3014               	movlw	20
 11004  08D7  1683               	bsf	3,5	;RP0=1, select bank1
 11005  08D8  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 11006  08D9  3000               	movlw	0
 11007  08DA  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 11008                           
 11009                           ;EEPROM_24C1025.c: 159:      if(mem_add>0x1FFFF) return;
 11010  08DB  1283               	bcf	3,5	;RP0=0, select bank0
 11011  08DC  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11012  08DD  1D03               	btfss	3,2
 11013  08DE  0008               	return
 11014  08DF  3002               	movlw	2
 11015  08E0  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11016  08E1  1D03               	skipz
 11017  08E2  28EB               	goto	u3563
 11018  08E3  3000               	movlw	0
 11019  08E4  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11020  08E5  1D03               	skipz
 11021  08E6  28EB               	goto	u3563
 11022  08E7  3000               	movlw	0
 11023  08E8  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11024  08E9  1D03               	skipz
 11025  08EA  28EB               	goto	u3563
 11026  08EB                     u3563:
 11027  08EB  1803               	btfsc	3,0
 11028  08EC  0008               	return
 11029                           
 11030                           ;EEPROM_24C1025.c: 161:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11031  08ED  1283               	bcf	3,5	;RP0=0, select bank0
 11032  08EE  1303               	bcf	3,6	;RP1=0, select bank0
 11033  08EF  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11034  08F0  1D03               	btfss	3,2
 11035  08F1  2900               	goto	l4089
 11036  08F2  3001               	movlw	1
 11037  08F3  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11038  08F4  1D03               	skipz
 11039  08F5  28FE               	goto	u3573
 11040  08F6  3000               	movlw	0
 11041  08F7  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11042  08F8  1D03               	skipz
 11043  08F9  28FE               	goto	u3573
 11044  08FA  3000               	movlw	0
 11045  08FB  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11046  08FC  1D03               	skipz
 11047  08FD  28FE               	goto	u3573
 11048  08FE                     u3573:
 11049  08FE  1C03               	btfss	3,0
 11050  08FF  2907               	goto	l4091
 11051  0900                     l4089:
 11052  0900  3008               	movlw	8
 11053  0901  1283               	bcf	3,5	;RP0=0, select bank0
 11054  0902  1303               	bcf	3,6	;RP1=0, select bank0
 11055  0903  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11056  0904  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11057  0905  00B3               	movwf	EEPROM_24C1025_Read_Buffer_USART@range
 11058  0906  290A               	goto	l4093
 11059  0907                     l4091:
 11060  0907  1283               	bcf	3,5	;RP0=0, select bank0
 11061  0908  1303               	bcf	3,6	;RP1=0, select bank0
 11062  0909  01B3               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11063  090A                     l4093:
 11064                           
 11065                           ;EEPROM_24C1025.c: 162:      ctrl=chip_add;
 11066  090A  0832               	movf	EEPROM_24C1025_Read_Buffer_USART@chip_add,w
 11067  090B  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11068  090C  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11069  090D  00B4               	movwf	EEPROM_24C1025_Read_Buffer_USART@ctrl
 11070                           
 11071                           ;EEPROM_24C1025.c: 163:      ctrl<<=1;
 11072  090E  1003               	clrc
 11073  090F  0DB4               	rlf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11074                           
 11075                           ;EEPROM_24C1025.c: 164:      ctrl |= 0xA0;
 11076  0910  30A0               	movlw	160
 11077  0911  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11078  0912  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11079  0913  04B4               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11080                           
 11081                           ;EEPROM_24C1025.c: 165:      ctrl |= 0b00000001;
 11082  0914  1434               	bsf	EEPROM_24C1025_Read_Buffer_USART@ctrl,0
 11083                           
 11084                           ;EEPROM_24C1025.c: 166:      ctrl |= range;
 11085  0915  0833               	movf	EEPROM_24C1025_Read_Buffer_USART@range,w
 11086  0916  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11087  0917  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11088  0918  04B4               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11089                           
 11090                           ;EEPROM_24C1025.c: 168:      I2C_Master_Start();
 11091  0919  160A  158A  22D6  120A  158A  	fcall	_I2C_Master_Start
 11092                           
 11093                           ;EEPROM_24C1025.c: 169:      I2C_Master_Write(ctrl & 0xFE);
 11094  091E  1283               	bcf	3,5	;RP0=0, select bank0
 11095  091F  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11096  0920  39FE               	andlw	254
 11097  0921  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11098  0922  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11099  0923  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11100  0924  00A3               	movwf	I2C_Master_Write@d
 11101  0925  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11102  0926  00A4               	movwf	I2C_Master_Write@d+1
 11103  0927  160A  158A  22B0  120A  158A  	fcall	_I2C_Master_Write
 11104                           
 11105                           ;EEPROM_24C1025.c: 170:      I2C_Master_Write(((char *)&mem_add)[1]);
 11106  092C  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11107  092D  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11108  092E  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11109  092F  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11110  0930  00A3               	movwf	I2C_Master_Write@d
 11111  0931  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11112  0932  00A4               	movwf	I2C_Master_Write@d+1
 11113  0933  160A  158A  22B0  120A  158A  	fcall	_I2C_Master_Write
 11114                           
 11115                           ;EEPROM_24C1025.c: 171:      I2C_Master_Write(((char *)&mem_add)[0]);
 11116  0938  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11117  0939  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11118  093A  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11119  093B  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11120  093C  00A3               	movwf	I2C_Master_Write@d
 11121  093D  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11122  093E  00A4               	movwf	I2C_Master_Write@d+1
 11123  093F  160A  158A  22B0  120A  158A  	fcall	_I2C_Master_Write
 11124                           
 11125                           ;EEPROM_24C1025.c: 172:      I2C_Master_RepeatedStart();
 11126  0944  160A  158A  22BB  120A  158A  	fcall	_I2C_Master_RepeatedStart
 11127                           
 11128                           ;EEPROM_24C1025.c: 173:      I2C_Master_Write(ctrl);
 11129  0949  1283               	bcf	3,5	;RP0=0, select bank0
 11130  094A  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11131  094B  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11132  094C  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11133  094D  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11134  094E  00A3               	movwf	I2C_Master_Write@d
 11135  094F  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11136  0950  00A4               	movwf	I2C_Master_Write@d+1
 11137  0951  160A  158A  22B0  120A  158A  	fcall	_I2C_Master_Write
 11138                           
 11139                           ;EEPROM_24C1025.c: 175:      for(char cnt=0;cnt<(sizedata);cnt++)
 11140  0956  01B1               	clrf	EEPROM_24C1025_Read_Buffer_USART@cnt_117
 11141  0957                     l4163:
 11142  0957  082D               	movf	EEPROM_24C1025_Read_Buffer_USART@sizedata,w
 11143  0958  0231               	subwf	EEPROM_24C1025_Read_Buffer_USART@cnt_117,w
 11144  0959  1803               	btfsc	3,0
 11145  095A  2A37               	goto	l4165
 11146  095B  0064               	clrwdt	;# 
 11147                           
 11148                           ;EEPROM_24C1025.c: 178:            if(mem_add>0x1FFFF) break;
 11149  095C  1283               	bcf	3,5	;RP0=0, select bank0
 11150  095D  1303               	bcf	3,6	;RP1=0, select bank0
 11151  095E  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11152  095F  1D03               	btfss	3,2
 11153  0960  2A37               	goto	l4165
 11154  0961  3002               	movlw	2
 11155  0962  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11156  0963  1D03               	skipz
 11157  0964  296D               	goto	u3583
 11158  0965  3000               	movlw	0
 11159  0966  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11160  0967  1D03               	skipz
 11161  0968  296D               	goto	u3583
 11162  0969  3000               	movlw	0
 11163  096A  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11164  096B  1D03               	skipz
 11165  096C  296D               	goto	u3583
 11166  096D                     u3583:
 11167  096D  1803               	btfsc	3,0
 11168  096E  2A37               	goto	l4165
 11169                           
 11170                           ;EEPROM_24C1025.c: 179:            if((mem_add+1)%128==0)
 11171  096F  1283               	bcf	3,5	;RP0=0, select bank0
 11172  0970  1303               	bcf	3,6	;RP1=0, select bank0
 11173  0971  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11174  0972  3E01               	addlw	1
 11175  0973  397F               	andlw	127
 11176  0974  1D03               	btfss	3,2
 11177  0975  2A0B               	goto	l4157
 11178                           
 11179                           ;EEPROM_24C1025.c: 180:              {;EEPROM_24C1025.c: 181:              (*data)=I2C_M
      +                          aster_Read(0);
 11180  0976  3000               	movlw	0
 11181  0977  00A3               	movwf	I2C_Master_Read@a
 11182  0978  00A4               	movwf	I2C_Master_Read@a+1
 11183  0979  160A  158A  257E  120A  158A  	fcall	_I2C_Master_Read
 11184  097E  0823               	movf	?_I2C_Master_Read,w
 11185  097F  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11186  0980  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11187  0981  0084               	movwf	4
 11188  0982  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11189  0983  1783               	bsf	3,7	;select IRP bank2
 11190  0984  0080               	movwf	0
 11191                           
 11192                           ;EEPROM_24C1025.c: 182:              I2C_Master_Stop();
 11193  0985  160A  158A  2289  120A  158A  	fcall	_I2C_Master_Stop
 11194                           
 11195                           ;EEPROM_24C1025.c: 183:              USART_putc(*data);
 11196  098A  1283               	bcf	3,5	;RP0=0, select bank0
 11197  098B  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11198  098C  0084               	movwf	4
 11199  098D  1783               	bsf	3,7	;select IRP bank2
 11200  098E  0800               	movf	0,w
 11201  098F  160A  158A  22C6  120A  158A  	fcall	_USART_putc
 11202                           
 11203                           ;EEPROM_24C1025.c: 186:              mem_add++;
 11204  0994  3001               	movlw	1
 11205  0995  1283               	bcf	3,5	;RP0=0, select bank0
 11206  0996  07A9               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,f
 11207  0997  3000               	movlw	0
 11208  0998  1803               	skipnc
 11209  0999  3001               	movlw	1
 11210  099A  07AA               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,f
 11211  099B  3000               	movlw	0
 11212  099C  1803               	skipnc
 11213  099D  3001               	movlw	1
 11214  099E  07AB               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,f
 11215  099F  3000               	movlw	0
 11216  09A0  1803               	skipnc
 11217  09A1  3001               	movlw	1
 11218  09A2  07AC               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,f
 11219                           
 11220                           ;EEPROM_24C1025.c: 188:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11221  09A3  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11222  09A4  1D03               	btfss	3,2
 11223  09A5  29B4               	goto	l4131
 11224  09A6  3001               	movlw	1
 11225  09A7  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11226  09A8  1D03               	skipz
 11227  09A9  29B2               	goto	u3603
 11228  09AA  3000               	movlw	0
 11229  09AB  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11230  09AC  1D03               	skipz
 11231  09AD  29B2               	goto	u3603
 11232  09AE  3000               	movlw	0
 11233  09AF  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11234  09B0  1D03               	skipz
 11235  09B1  29B2               	goto	u3603
 11236  09B2                     u3603:
 11237  09B2  1C03               	btfss	3,0
 11238  09B3  29BB               	goto	l4133
 11239  09B4                     l4131:
 11240  09B4  3008               	movlw	8
 11241  09B5  1283               	bcf	3,5	;RP0=0, select bank0
 11242  09B6  1303               	bcf	3,6	;RP1=0, select bank0
 11243  09B7  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11244  09B8  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11245  09B9  00B3               	movwf	EEPROM_24C1025_Read_Buffer_USART@range
 11246  09BA  29BE               	goto	l4135
 11247  09BB                     l4133:
 11248  09BB  1283               	bcf	3,5	;RP0=0, select bank0
 11249  09BC  1303               	bcf	3,6	;RP1=0, select bank0
 11250  09BD  01B3               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11251  09BE                     l4135:
 11252                           
 11253                           ;EEPROM_24C1025.c: 189:              ctrl=chip_add;
 11254  09BE  0832               	movf	EEPROM_24C1025_Read_Buffer_USART@chip_add,w
 11255  09BF  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11256  09C0  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11257  09C1  00B4               	movwf	EEPROM_24C1025_Read_Buffer_USART@ctrl
 11258                           
 11259                           ;EEPROM_24C1025.c: 190:              ctrl<<=1;
 11260  09C2  1003               	clrc
 11261  09C3  0DB4               	rlf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11262                           
 11263                           ;EEPROM_24C1025.c: 191:              ctrl |= 0xA0;
 11264  09C4  30A0               	movlw	160
 11265  09C5  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11266  09C6  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11267  09C7  04B4               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11268                           
 11269                           ;EEPROM_24C1025.c: 192:              ctrl |= 0b00000001;
 11270  09C8  1434               	bsf	EEPROM_24C1025_Read_Buffer_USART@ctrl,0
 11271                           
 11272                           ;EEPROM_24C1025.c: 193:              ctrl |= range;
 11273  09C9  0833               	movf	EEPROM_24C1025_Read_Buffer_USART@range,w
 11274  09CA  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11275  09CB  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11276  09CC  04B4               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11277                           
 11278                           ;EEPROM_24C1025.c: 195:              I2C_Master_Start();
 11279  09CD  160A  158A  22D6  120A  158A  	fcall	_I2C_Master_Start
 11280                           
 11281                           ;EEPROM_24C1025.c: 196:              I2C_Master_Write(ctrl & 0xFE);
 11282  09D2  1283               	bcf	3,5	;RP0=0, select bank0
 11283  09D3  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11284  09D4  39FE               	andlw	254
 11285  09D5  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11286  09D6  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11287  09D7  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11288  09D8  00A3               	movwf	I2C_Master_Write@d
 11289  09D9  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11290  09DA  00A4               	movwf	I2C_Master_Write@d+1
 11291  09DB  160A  158A  22B0  120A  158A  	fcall	_I2C_Master_Write
 11292                           
 11293                           ;EEPROM_24C1025.c: 197:              I2C_Master_Write(((char *)&mem_add)[1]);
 11294  09E0  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11295  09E1  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11296  09E2  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11297  09E3  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11298  09E4  00A3               	movwf	I2C_Master_Write@d
 11299  09E5  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11300  09E6  00A4               	movwf	I2C_Master_Write@d+1
 11301  09E7  160A  158A  22B0  120A  158A  	fcall	_I2C_Master_Write
 11302                           
 11303                           ;EEPROM_24C1025.c: 198:              I2C_Master_Write(((char *)&mem_add)[0]);
 11304  09EC  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11305  09ED  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11306  09EE  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11307  09EF  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11308  09F0  00A3               	movwf	I2C_Master_Write@d
 11309  09F1  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11310  09F2  00A4               	movwf	I2C_Master_Write@d+1
 11311  09F3  160A  158A  22B0  120A  158A  	fcall	_I2C_Master_Write
 11312                           
 11313                           ;EEPROM_24C1025.c: 199:              I2C_Master_RepeatedStart();
 11314  09F8  160A  158A  22BB  120A  158A  	fcall	_I2C_Master_RepeatedStart
 11315                           
 11316                           ;EEPROM_24C1025.c: 200:              I2C_Master_Write(ctrl);
 11317  09FD  1283               	bcf	3,5	;RP0=0, select bank0
 11318  09FE  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11319  09FF  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11320  0A00  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11321  0A01  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11322  0A02  00A3               	movwf	I2C_Master_Write@d
 11323  0A03  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11324  0A04  00A4               	movwf	I2C_Master_Write@d+1
 11325  0A05  160A  158A  22B0  120A  158A  	fcall	_I2C_Master_Write
 11326                           
 11327                           ;EEPROM_24C1025.c: 201:              }
 11328  0A0A  2A32               	goto	l4161
 11329  0A0B                     l4157:
 11330                           
 11331                           ;EEPROM_24C1025.c: 203:              {;EEPROM_24C1025.c: 204:              (*data)=I2C_M
      +                          aster_Read(1);
 11332  0A0B  3001               	movlw	1
 11333  0A0C  00A3               	movwf	I2C_Master_Read@a
 11334  0A0D  3000               	movlw	0
 11335  0A0E  00A4               	movwf	I2C_Master_Read@a+1
 11336  0A0F  160A  158A  257E  120A  158A  	fcall	_I2C_Master_Read
 11337  0A14  0823               	movf	?_I2C_Master_Read,w
 11338  0A15  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11339  0A16  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11340  0A17  0084               	movwf	4
 11341  0A18  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11342  0A19  1783               	bsf	3,7	;select IRP bank2
 11343  0A1A  0080               	movwf	0
 11344                           
 11345                           ;EEPROM_24C1025.c: 205:              USART_putc(*data);
 11346  0A1B  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11347  0A1C  0084               	movwf	4
 11348  0A1D  0800               	movf	0,w
 11349  0A1E  160A  158A  22C6  120A  158A  	fcall	_USART_putc
 11350                           
 11351                           ;EEPROM_24C1025.c: 207:              mem_add++;
 11352  0A23  3001               	movlw	1
 11353  0A24  1283               	bcf	3,5	;RP0=0, select bank0
 11354  0A25  07A9               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,f
 11355  0A26  3000               	movlw	0
 11356  0A27  1803               	skipnc
 11357  0A28  3001               	movlw	1
 11358  0A29  07AA               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,f
 11359  0A2A  3000               	movlw	0
 11360  0A2B  1803               	skipnc
 11361  0A2C  3001               	movlw	1
 11362  0A2D  07AB               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,f
 11363  0A2E  3000               	movlw	0
 11364  0A2F  1803               	skipnc
 11365  0A30  3001               	movlw	1
 11366  0A31  07AC               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,f
 11367  0A32                     l4161:
 11368                           
 11369                           ;EEPROM_24C1025.c: 209:         }
 11370  0A32  3001               	movlw	1
 11371  0A33  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11372  0A34  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11373  0A35  07B1               	addwf	EEPROM_24C1025_Read_Buffer_USART@cnt_117,f
 11374  0A36  2957               	goto	l4163
 11375  0A37                     l4165:
 11376                           
 11377                           ;EEPROM_24C1025.c: 210:         I2C_Master_Read(0);
 11378  0A37  3000               	movlw	0
 11379  0A38  1283               	bcf	3,5	;RP0=0, select bank0
 11380  0A39  1303               	bcf	3,6	;RP1=0, select bank0
 11381  0A3A  00A3               	movwf	I2C_Master_Read@a
 11382  0A3B  00A4               	movwf	I2C_Master_Read@a+1
 11383  0A3C  160A  158A  257E  120A  158A  	fcall	_I2C_Master_Read
 11384                           
 11385                           ;EEPROM_24C1025.c: 211:         I2C_Master_Stop();
 11386  0A41  160A  158A  2289  120A  158A  	fcall	_I2C_Master_Stop
 11387                           
 11388                           ;EEPROM_24C1025.c: 212:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 11389  0A46  30B9               	movlw	185
 11390  0A47  1283               	bcf	3,5	;RP0=0, select bank0
 11391  0A48  1303               	bcf	3,6	;RP1=0, select bank0
 11392  0A49  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11393  0A4A                     u5327:
 11394  0A4A  2A4B               	nop2
 11395  0A4B  2A4C               	nop2
 11396  0A4C  0BAF               	decfsz	??_EEPROM_24C1025_Read_Buffer_USART,f
 11397  0A4D  2A4A               	goto	u5327
 11398  0A4E  2A4F               	nop2
 11399  0A4F  0008               	return
 11400  0A50                     __end_of_EEPROM_24C1025_Read_Buffer_USART:
 11401                           
 11402                           	psect	text44
 11403  1AC6                     __ptext44:	
 11404 ;; *************** function _USART_putc *****************
 11405 ;; Defined at:
 11406 ;;		line 89 in file "usart.c"
 11407 ;; Parameters:    Size  Location     Type
 11408 ;;  value           1    wreg     unsigned char 
 11409 ;; Auto vars:     Size  Location     Type
 11410 ;;  value           1    0[BANK0 ] unsigned char 
 11411 ;; Return value:  Size  Location     Type
 11412 ;;                  1    wreg      void 
 11413 ;; Registers used:
 11414 ;;		wreg
 11415 ;; Tracked objects:
 11416 ;;		On entry : 0/100
 11417 ;;		On exit  : 300/100
 11418 ;;		Unchanged: 0/0
 11419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11420 ;;      Params:         0       0       0       0       0
 11421 ;;      Locals:         0       1       0       0       0
 11422 ;;      Temps:          0       0       0       0       0
 11423 ;;      Totals:         0       1       0       0       0
 11424 ;;Total ram usage:        1 bytes
 11425 ;; Hardware stack levels used: 1
 11426 ;; Hardware stack levels required when called: 1
 11427 ;; This function calls:
 11428 ;;		Nothing
 11429 ;; This function is called by:
 11430 ;;		_EEPROM_24C1025_Read_Buffer_USART
 11431 ;;		_Decodify_Command
 11432 ;;		_Send_To_MB
 11433 ;;		_PROCULUS_Control_Register_Write
 11434 ;;		_PROCULUS_VP_Write
 11435 ;;		_USART_put_int
 11436 ;;		_USART_put_string
 11437 ;; This function uses a non-reentrant model
 11438 ;;
 11439                           
 11440                           
 11441                           ;psect for function _USART_putc
 11442  1AC6                     _USART_putc:
 11443                           
 11444                           ;incstack = 0
 11445                           ; Regs used in _USART_putc: [wreg]
 11446                           ;USART_putc@value stored from wreg
 11447  1AC6  1283               	bcf	3,5	;RP0=0, select bank0
 11448  1AC7  1303               	bcf	3,6	;RP1=0, select bank0
 11449  1AC8  00A0               	movwf	USART_putc@value
 11450                           
 11451                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
 11452  1AC9  3014               	movlw	20
 11453  1ACA  1683               	bsf	3,5	;RP0=1, select bank1
 11454  1ACB  00B2               	movwf	_Delay_Led_Usart^(0+128)	;volatile
 11455  1ACC  3000               	movlw	0
 11456  1ACD  00B3               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
 11457  1ACE                     l868:	
 11458                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
 11459                           
 11460  1ACE  1C98               	btfss	24,1	;volatile
 11461  1ACF  2ACE               	goto	l868
 11462                           
 11463                           ;usart.c: 93:     TXREG=value;
 11464  1AD0  1283               	bcf	3,5	;RP0=0, select bank0
 11465  1AD1  0820               	movf	USART_putc@value,w
 11466  1AD2  0099               	movwf	25	;volatile
 11467                           
 11468                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
 11469  1AD3  1683               	bsf	3,5	;RP0=1, select bank1
 11470  1AD4  1698               	bsf	24,5	;volatile
 11471  1AD5  0008               	return
 11472  1AD6                     __end_of_USART_putc:
 11473                           
 11474                           	psect	text45
 11475  1ABB                     __ptext45:	
 11476 ;; *************** function _I2C_Master_RepeatedStart *****************
 11477 ;; Defined at:
 11478 ;;		line 62 in file "I2C.c"
 11479 ;; Parameters:    Size  Location     Type
 11480 ;;		None
 11481 ;; Auto vars:     Size  Location     Type
 11482 ;;		None
 11483 ;; Return value:  Size  Location     Type
 11484 ;;                  1    wreg      void 
 11485 ;; Registers used:
 11486 ;;		wreg, status,2, status,0, pclath, cstack
 11487 ;; Tracked objects:
 11488 ;;		On entry : 300/0
 11489 ;;		On exit  : 200/0
 11490 ;;		Unchanged: 0/0
 11491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11492 ;;      Params:         0       0       0       0       0
 11493 ;;      Locals:         0       0       0       0       0
 11494 ;;      Temps:          0       0       0       0       0
 11495 ;;      Totals:         0       0       0       0       0
 11496 ;;Total ram usage:        0 bytes
 11497 ;; Hardware stack levels used: 1
 11498 ;; Hardware stack levels required when called: 2
 11499 ;; This function calls:
 11500 ;;		_I2C_Master_Wait
 11501 ;; This function is called by:
 11502 ;;		_EEPROM_24C1025_Read_Buffer
 11503 ;;		_EEPROM_24C1025_Read_Buffer_USART
 11504 ;;		_EEPROM_24C1025_Read_Str
 11505 ;; This function uses a non-reentrant model
 11506 ;;
 11507                           
 11508                           
 11509                           ;psect for function _I2C_Master_RepeatedStart
 11510  1ABB                     _I2C_Master_RepeatedStart:
 11511                           
 11512                           ;I2C.c: 64:   if(I2C_Master_Wait())
 11513                           
 11514                           ;incstack = 0
 11515                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 11516  1ABB  160A  158A  23E6  160A  158A  	fcall	_I2C_Master_Wait
 11517  1AC0  3A00               	xorlw	0
 11518  1AC1  1903               	skipnz
 11519  1AC2  0008               	return
 11520                           
 11521                           ;I2C.c: 65:     {;I2C.c: 66:     SSPCON2bits.RSEN = 1;
 11522  1AC3  1683               	bsf	3,5	;RP0=1, select bank1
 11523  1AC4  1491               	bsf	17,1	;volatile
 11524  1AC5  0008               	return
 11525  1AC6                     __end_of_I2C_Master_RepeatedStart:
 11526                           
 11527                           	psect	text46
 11528  1D7E                     __ptext46:	
 11529 ;; *************** function _I2C_Master_Read *****************
 11530 ;; Defined at:
 11531 ;;		line 87 in file "I2C.c"
 11532 ;; Parameters:    Size  Location     Type
 11533 ;;  a               2    3[BANK0 ] unsigned short 
 11534 ;; Auto vars:     Size  Location     Type
 11535 ;;  temp            2    7[BANK0 ] unsigned short 
 11536 ;; Return value:  Size  Location     Type
 11537 ;;                  2    3[BANK0 ] unsigned short 
 11538 ;; Registers used:
 11539 ;;		wreg, status,2, status,0, pclath, cstack
 11540 ;; Tracked objects:
 11541 ;;		On entry : 300/0
 11542 ;;		On exit  : 300/0
 11543 ;;		Unchanged: 0/0
 11544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11545 ;;      Params:         0       2       0       0       0
 11546 ;;      Locals:         0       2       0       0       0
 11547 ;;      Temps:          0       2       0       0       0
 11548 ;;      Totals:         0       6       0       0       0
 11549 ;;Total ram usage:        6 bytes
 11550 ;; Hardware stack levels used: 1
 11551 ;; Hardware stack levels required when called: 2
 11552 ;; This function calls:
 11553 ;;		_I2C_Master_Wait
 11554 ;; This function is called by:
 11555 ;;		_EEPROM_24C1025_Read_Buffer
 11556 ;;		_EEPROM_24C1025_Read_Buffer_USART
 11557 ;;		_EEPROM_24C1025_Read_Str
 11558 ;; This function uses a non-reentrant model
 11559 ;;
 11560                           
 11561                           
 11562                           ;psect for function _I2C_Master_Read
 11563  1D7E                     _I2C_Master_Read:
 11564                           
 11565                           ;I2C.c: 87: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 88: {;I2C.c: 89:   u
      +                          nsigned short temp;;I2C.c: 90:   if(I2C_Master_Wait())SSPCON2bits.RCEN = 1;
 11566                           
 11567                           ;incstack = 0
 11568                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 11569  1D7E  160A  158A  23E6  160A  158A  	fcall	_I2C_Master_Wait
 11570  1D83  3A00               	xorlw	0
 11571  1D84  1683               	bsf	3,5	;RP0=1, select bank1
 11572  1D85  1D03               	btfss	3,2
 11573  1D86  1591               	bsf	17,3	;volatile
 11574                           
 11575                           ;I2C.c: 91:   if(I2C_Master_Wait())temp = SSPBUF;
 11576  1D87  160A  158A  23E6  160A  158A  	fcall	_I2C_Master_Wait
 11577  1D8C  3A00               	xorlw	0
 11578  1D8D  1903               	skipnz
 11579  1D8E  2D96               	goto	l3593
 11580  1D8F  0813               	movf	19,w	;volatile
 11581  1D90  00A5               	movwf	??_I2C_Master_Read
 11582  1D91  01A6               	clrf	??_I2C_Master_Read+1
 11583  1D92  0825               	movf	??_I2C_Master_Read,w
 11584  1D93  00A7               	movwf	I2C_Master_Read@temp
 11585  1D94  0826               	movf	??_I2C_Master_Read+1,w
 11586  1D95  00A8               	movwf	I2C_Master_Read@temp+1
 11587  1D96                     l3593:
 11588                           
 11589                           ;I2C.c: 92:   if(I2C_Master_Wait())
 11590  1D96  160A  158A  23E6  160A  158A  	fcall	_I2C_Master_Wait
 11591  1D9B  3A00               	xorlw	0
 11592  1D9C  1903               	skipnz
 11593  1D9D  2DB0               	goto	l3605
 11594                           
 11595                           ;I2C.c: 93:     {;I2C.c: 94:     SSPCON2bits.ACKDT = (a)?0:1;
 11596  1D9E  0823               	movf	I2C_Master_Read@a,w
 11597  1D9F  0424               	iorwf	I2C_Master_Read@a+1,w
 11598  1DA0  1D03               	btfss	3,2
 11599  1DA1  2DA6               	goto	u2670
 11600  1DA2  1683               	bsf	3,5	;RP0=1, select bank1
 11601  1DA3  1303               	bcf	3,6	;RP1=0, select bank1
 11602  1DA4  1691               	bsf	17,5	;volatile
 11603  1DA5  2DA9               	goto	l3597
 11604  1DA6                     u2670:
 11605  1DA6  1683               	bsf	3,5	;RP0=1, select bank1
 11606  1DA7  1303               	bcf	3,6	;RP1=0, select bank1
 11607  1DA8  1291               	bcf	17,5	;volatile
 11608  1DA9                     l3597:
 11609                           
 11610                           ;I2C.c: 95:     SSPCON2bits.ACKEN = 1;
 11611  1DA9  1611               	bsf	17,4	;volatile
 11612                           
 11613                           ;I2C.c: 96:     return temp;
 11614  1DAA  1283               	bcf	3,5	;RP0=0, select bank0
 11615  1DAB  0828               	movf	I2C_Master_Read@temp+1,w
 11616  1DAC  00A4               	movwf	?_I2C_Master_Read+1
 11617  1DAD  0827               	movf	I2C_Master_Read@temp,w
 11618  1DAE  00A3               	movwf	?_I2C_Master_Read
 11619  1DAF  0008               	return
 11620  1DB0                     l3605:
 11621                           
 11622                           ;I2C.c: 99:     {;I2C.c: 100:     return 0x00;
 11623  1DB0  01A3               	clrf	?_I2C_Master_Read
 11624  1DB1  01A4               	clrf	?_I2C_Master_Read+1
 11625  1DB2  0008               	return
 11626  1DB3                     __end_of_I2C_Master_Read:
 11627                           
 11628                           	psect	text47
 11629  1ED2                     __ptext47:	
 11630 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 11631 ;; Defined at:
 11632 ;;		line 367 in file "EEPROM_24C1025.c"
 11633 ;; Parameters:    Size  Location     Type
 11634 ;;  chip_add        1    wreg     unsigned char 
 11635 ;;  value           2   56[BANK0 ] unsigned int 
 11636 ;; Auto vars:     Size  Location     Type
 11637 ;;  chip_add        1   58[BANK0 ] unsigned char 
 11638 ;;  mem_add         4   59[BANK0 ] unsigned long 
 11639 ;; Return value:  Size  Location     Type
 11640 ;;                  1    wreg      void 
 11641 ;; Registers used:
 11642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11643 ;; Tracked objects:
 11644 ;;		On entry : 300/300
 11645 ;;		On exit  : 0/0
 11646 ;;		Unchanged: 0/0
 11647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11648 ;;      Params:         0       2       0       0       0
 11649 ;;      Locals:         0       5       0       0       0
 11650 ;;      Temps:          0       0       0       0       0
 11651 ;;      Totals:         0       7       0       0       0
 11652 ;;Total ram usage:        7 bytes
 11653 ;; Hardware stack levels used: 1
 11654 ;; Hardware stack levels required when called: 5
 11655 ;; This function calls:
 11656 ;;		_EEPROM_24C1025_Write_Int
 11657 ;; This function is called by:
 11658 ;;		_Decodify_Command
 11659 ;; This function uses a non-reentrant model
 11660 ;;
 11661                           
 11662                           
 11663                           ;psect for function _EEPROM_24C1025_Fill_All
 11664  1ED2                     _EEPROM_24C1025_Fill_All:
 11665                           
 11666                           ;incstack = 0
 11667                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 11668                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 11669  1ED2  1283               	bcf	3,5	;RP0=0, select bank0
 11670  1ED3  1303               	bcf	3,6	;RP1=0, select bank0
 11671  1ED4  00DA               	movwf	EEPROM_24C1025_Fill_All@chip_add
 11672                           
 11673                           ;EEPROM_24C1025.c: 368:      unsigned long mem_add;;EEPROM_24C1025.c: 369:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 11674  1ED5  3000               	movlw	0
 11675  1ED6  00DE               	movwf	EEPROM_24C1025_Fill_All@mem_add+3
 11676  1ED7  3000               	movlw	0
 11677  1ED8  00DD               	movwf	EEPROM_24C1025_Fill_All@mem_add+2
 11678  1ED9  3000               	movlw	0
 11679  1EDA  00DC               	movwf	EEPROM_24C1025_Fill_All@mem_add+1
 11680  1EDB  3000               	movlw	0
 11681  1EDC  00DB               	movwf	EEPROM_24C1025_Fill_All@mem_add
 11682  1EDD                     l5513:
 11683                           
 11684                           ;EEPROM_24C1025.c: 370:         {;EEPROM_24C1025.c: 371:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 11685  1EDD  1283               	bcf	3,5	;RP0=0, select bank0
 11686  1EDE  1303               	bcf	3,6	;RP1=0, select bank0
 11687  1EDF  085E               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 11688  1EE0  00D1               	movwf	EEPROM_24C1025_Write_Int@mem_add+3
 11689  1EE1  085D               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 11690  1EE2  00D0               	movwf	EEPROM_24C1025_Write_Int@mem_add+2
 11691  1EE3  085C               	movf	EEPROM_24C1025_Fill_All@mem_add+1,w
 11692  1EE4  00CF               	movwf	EEPROM_24C1025_Write_Int@mem_add+1
 11693  1EE5  085B               	movf	EEPROM_24C1025_Fill_All@mem_add,w
 11694  1EE6  00CE               	movwf	EEPROM_24C1025_Write_Int@mem_add
 11695  1EE7  0859               	movf	EEPROM_24C1025_Fill_All@value+1,w
 11696  1EE8  00D3               	movwf	EEPROM_24C1025_Write_Int@data+1
 11697  1EE9  0858               	movf	EEPROM_24C1025_Fill_All@value,w
 11698  1EEA  00D2               	movwf	EEPROM_24C1025_Write_Int@data
 11699  1EEB  085A               	movf	EEPROM_24C1025_Fill_All@chip_add,w
 11700  1EEC  160A  158A  23A6  160A  158A  	fcall	_EEPROM_24C1025_Write_Int
 11701  1EF1  0064               	clrwdt	;# 
 11702                           
 11703                           ;EEPROM_24C1025.c: 373:         }
 11704  1EF2  3002               	movlw	2
 11705  1EF3  1283               	bcf	3,5	;RP0=0, select bank0
 11706  1EF4  1303               	bcf	3,6	;RP1=0, select bank0
 11707  1EF5  07DB               	addwf	EEPROM_24C1025_Fill_All@mem_add,f
 11708  1EF6  3000               	movlw	0
 11709  1EF7  1803               	skipnc
 11710  1EF8  3001               	movlw	1
 11711  1EF9  07DC               	addwf	EEPROM_24C1025_Fill_All@mem_add+1,f
 11712  1EFA  3000               	movlw	0
 11713  1EFB  1803               	skipnc
 11714  1EFC  3001               	movlw	1
 11715  1EFD  07DD               	addwf	EEPROM_24C1025_Fill_All@mem_add+2,f
 11716  1EFE  3000               	movlw	0
 11717  1EFF  1803               	skipnc
 11718  1F00  3001               	movlw	1
 11719  1F01  07DE               	addwf	EEPROM_24C1025_Fill_All@mem_add+3,f
 11720  1F02  085E               	movf	EEPROM_24C1025_Fill_All@mem_add+3,w
 11721  1F03  1D03               	btfss	3,2
 11722  1F04  0008               	return
 11723  1F05  085D               	movf	EEPROM_24C1025_Fill_All@mem_add+2,w
 11724  1F06  1D03               	btfss	3,2
 11725  1F07  0008               	return
 11726  1F08  3004               	movlw	4
 11727  1F09  025C               	subwf	EEPROM_24C1025_Fill_All@mem_add+1,w
 11728  1F0A  1D03               	skipz
 11729  1F0B  2F10               	goto	u5113
 11730  1F0C  3000               	movlw	0
 11731  1F0D  025B               	subwf	EEPROM_24C1025_Fill_All@mem_add,w
 11732  1F0E  1D03               	skipz
 11733  1F0F  2F10               	goto	u5113
 11734  1F10                     u5113:
 11735  1F10  1803               	btfsc	3,0
 11736  1F11  0008               	return
 11737  1F12  2EDD               	goto	l5513
 11738  1F13                     __end_of_EEPROM_24C1025_Fill_All:
 11739                           
 11740                           	psect	text48
 11741  1BA6                     __ptext48:	
 11742 ;; *************** function _EEPROM_24C1025_Write_Int *****************
 11743 ;; Defined at:
 11744 ;;		line 352 in file "EEPROM_24C1025.c"
 11745 ;; Parameters:    Size  Location     Type
 11746 ;;  chip_add        1    wreg     unsigned char 
 11747 ;;  mem_add         4   46[BANK0 ] unsigned long 
 11748 ;;  data            2   50[BANK0 ] int 
 11749 ;; Auto vars:     Size  Location     Type
 11750 ;;  chip_add        1   53[BANK0 ] unsigned char 
 11751 ;;  local           2   54[BANK0 ] unsigned char [2]
 11752 ;; Return value:  Size  Location     Type
 11753 ;;                  1    wreg      void 
 11754 ;; Registers used:
 11755 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11756 ;; Tracked objects:
 11757 ;;		On entry : 0/300
 11758 ;;		On exit  : 0/0
 11759 ;;		Unchanged: 0/0
 11760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11761 ;;      Params:         0       6       0       0       0
 11762 ;;      Locals:         0       3       0       0       0
 11763 ;;      Temps:          0       1       0       0       0
 11764 ;;      Totals:         0      10       0       0       0
 11765 ;;Total ram usage:       10 bytes
 11766 ;; Hardware stack levels used: 1
 11767 ;; Hardware stack levels required when called: 4
 11768 ;; This function calls:
 11769 ;;		_EEPROM_24C1025_Write_Buffer
 11770 ;; This function is called by:
 11771 ;;		_EEPROM_24C1025_Fill_All
 11772 ;;		_Decodify_Command
 11773 ;;		_Save_Log
 11774 ;; This function uses a non-reentrant model
 11775 ;;
 11776                           
 11777                           
 11778                           ;psect for function _EEPROM_24C1025_Write_Int
 11779  1BA6                     _EEPROM_24C1025_Write_Int:
 11780                           
 11781                           ;incstack = 0
 11782                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 11783                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
 11784  1BA6  1283               	bcf	3,5	;RP0=0, select bank0
 11785  1BA7  1303               	bcf	3,6	;RP1=0, select bank0
 11786  1BA8  00D5               	movwf	EEPROM_24C1025_Write_Int@chip_add
 11787                           
 11788                           ;EEPROM_24C1025.c: 353:      char local[2];;EEPROM_24C1025.c: 354:      local[0]=((char 
      +                          *)&data)[1];
 11789  1BA9  0853               	movf	EEPROM_24C1025_Write_Int@data+1,w
 11790  1BAA  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 11791  1BAB  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 11792  1BAC  00D6               	movwf	EEPROM_24C1025_Write_Int@local
 11793                           
 11794                           ;EEPROM_24C1025.c: 355:      local[1]=((char *)&data)[0];
 11795  1BAD  0852               	movf	EEPROM_24C1025_Write_Int@data,w
 11796  1BAE  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 11797  1BAF  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 11798  1BB0  00D7               	movwf	EEPROM_24C1025_Write_Int@local+1
 11799                           
 11800                           ;EEPROM_24C1025.c: 356:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
 11801  1BB1  0851               	movf	EEPROM_24C1025_Write_Int@mem_add+3,w
 11802  1BB2  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 11803  1BB3  0850               	movf	EEPROM_24C1025_Write_Int@mem_add+2,w
 11804  1BB4  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 11805  1BB5  084F               	movf	EEPROM_24C1025_Write_Int@mem_add+1,w
 11806  1BB6  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 11807  1BB7  084E               	movf	EEPROM_24C1025_Write_Int@mem_add,w
 11808  1BB8  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 11809  1BB9  3002               	movlw	2
 11810  1BBA  00D4               	movwf	??_EEPROM_24C1025_Write_Int
 11811  1BBB  0854               	movf	??_EEPROM_24C1025_Write_Int,w
 11812  1BBC  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 11813  1BBD  3056               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
 11814  1BBE  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 11815  1BBF  3000               	movlw	0
 11816  1BC0  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 11817  1BC1  0855               	movf	EEPROM_24C1025_Write_Int@chip_add,w
 11818  1BC2  160A  118A  2399   	fcall	_EEPROM_24C1025_Write_Buffer
 11819  1BC5  0008               	return
 11820  1BC6                     __end_of_EEPROM_24C1025_Write_Int:
 11821                           
 11822                           	psect	text49
 11823  1399                     __ptext49:	
 11824 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 11825 ;; Defined at:
 11826 ;;		line 15 in file "EEPROM_24C1025.c"
 11827 ;; Parameters:    Size  Location     Type
 11828 ;;  chip_add        1    wreg     unsigned char 
 11829 ;;  mem_add         4   10[BANK0 ] unsigned long 
 11830 ;;  sizedata        1   14[BANK0 ] unsigned char 
 11831 ;;  data            2   15[BANK0 ] PTR unsigned char 
 11832 ;;		 -> usart_protocol.value(52), usart_protocol(58), EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(
      +1), 
 11833 ;; Auto vars:     Size  Location     Type
 11834 ;;  chip_add        1   20[BANK0 ] unsigned char 
 11835 ;;  ctrl            1   22[BANK0 ] unsigned char 
 11836 ;;  range           1   21[BANK0 ] unsigned char 
 11837 ;;  count           1   19[BANK0 ] unsigned char 
 11838 ;; Return value:  Size  Location     Type
 11839 ;;                  1    wreg      void 
 11840 ;; Registers used:
 11841 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11842 ;; Tracked objects:
 11843 ;;		On entry : 0/300
 11844 ;;		On exit  : 0/0
 11845 ;;		Unchanged: 0/0
 11846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11847 ;;      Params:         0       7       0       0       0
 11848 ;;      Locals:         0       4       0       0       0
 11849 ;;      Temps:          0       2       0       0       0
 11850 ;;      Totals:         0      13       0       0       0
 11851 ;;Total ram usage:       13 bytes
 11852 ;; Hardware stack levels used: 1
 11853 ;; Hardware stack levels required when called: 3
 11854 ;; This function calls:
 11855 ;;		_I2C_Master_Start
 11856 ;;		_I2C_Master_Stop
 11857 ;;		_I2C_Master_Write
 11858 ;;		_my_delay_ms_WDT
 11859 ;; This function is called by:
 11860 ;;		_EEPROM_24C1025_Write_Byte
 11861 ;;		_EEPROM_24C1025_Write_Int
 11862 ;;		_Decodify_Command
 11863 ;; This function uses a non-reentrant model
 11864 ;;
 11865                           
 11866                           
 11867                           ;psect for function _EEPROM_24C1025_Write_Buffer
 11868  1399                     _EEPROM_24C1025_Write_Buffer:
 11869                           
 11870                           ;incstack = 0
 11871                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
 11872                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 11873  1399  1283               	bcf	3,5	;RP0=0, select bank0
 11874  139A  1303               	bcf	3,6	;RP1=0, select bank0
 11875  139B  00B4               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 11876                           
 11877                           ;EEPROM_24C1025.c: 21:      unsigned char ctrl;;EEPROM_24C1025.c: 22:      unsigned char
      +                           count;;EEPROM_24C1025.c: 24:      Delay_Led_Memory=20;
 11878  139C  3014               	movlw	20
 11879  139D  1683               	bsf	3,5	;RP0=1, select bank1
 11880  139E  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 11881  139F  3000               	movlw	0
 11882  13A0  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 11883                           
 11884                           ;EEPROM_24C1025.c: 26:      if(mem_add>0x1FFFF) return;
 11885  13A1  1283               	bcf	3,5	;RP0=0, select bank0
 11886  13A2  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11887  13A3  1D03               	btfss	3,2
 11888  13A4  0008               	return
 11889  13A5  3002               	movlw	2
 11890  13A6  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11891  13A7  1D03               	skipz
 11892  13A8  2BB1               	goto	u5043
 11893  13A9  3000               	movlw	0
 11894  13AA  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11895  13AB  1D03               	skipz
 11896  13AC  2BB1               	goto	u5043
 11897  13AD  3000               	movlw	0
 11898  13AE  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11899  13AF  1D03               	skipz
 11900  13B0  2BB1               	goto	u5043
 11901  13B1                     u5043:
 11902  13B1  1803               	btfsc	3,0
 11903  13B2  0008               	return
 11904                           
 11905                           ;EEPROM_24C1025.c: 28:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11906  13B3  1283               	bcf	3,5	;RP0=0, select bank0
 11907  13B4  1303               	bcf	3,6	;RP1=0, select bank0
 11908  13B5  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11909  13B6  1D03               	btfss	3,2
 11910  13B7  2BC6               	goto	l5411
 11911  13B8  3001               	movlw	1
 11912  13B9  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11913  13BA  1D03               	skipz
 11914  13BB  2BC4               	goto	u5053
 11915  13BC  3000               	movlw	0
 11916  13BD  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11917  13BE  1D03               	skipz
 11918  13BF  2BC4               	goto	u5053
 11919  13C0  3000               	movlw	0
 11920  13C1  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11921  13C2  1D03               	skipz
 11922  13C3  2BC4               	goto	u5053
 11923  13C4                     u5053:
 11924  13C4  1C03               	btfss	3,0
 11925  13C5  2BCD               	goto	l5413
 11926  13C6                     l5411:
 11927  13C6  3008               	movlw	8
 11928  13C7  1283               	bcf	3,5	;RP0=0, select bank0
 11929  13C8  1303               	bcf	3,6	;RP1=0, select bank0
 11930  13C9  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11931  13CA  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11932  13CB  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 11933  13CC  2BD0               	goto	l5415
 11934  13CD                     l5413:
 11935  13CD  1283               	bcf	3,5	;RP0=0, select bank0
 11936  13CE  1303               	bcf	3,6	;RP1=0, select bank0
 11937  13CF  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 11938  13D0                     l5415:
 11939                           
 11940                           ;EEPROM_24C1025.c: 29:      ctrl=chip_add;
 11941  13D0  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 11942  13D1  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11943  13D2  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11944  13D3  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 11945                           
 11946                           ;EEPROM_24C1025.c: 30:      ctrl<<=1;
 11947  13D4  1003               	clrc
 11948  13D5  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 11949                           
 11950                           ;EEPROM_24C1025.c: 31:      ctrl |= 0xA0;
 11951  13D6  30A0               	movlw	160
 11952  13D7  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11953  13D8  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11954  13D9  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 11955                           
 11956                           ;EEPROM_24C1025.c: 32:      ctrl |= range;
 11957  13DA  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 11958  13DB  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11959  13DC  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11960  13DD  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 11961                           
 11962                           ;EEPROM_24C1025.c: 34:      I2C_Master_Start();
 11963  13DE  160A  158A  22D6  160A  118A  	fcall	_I2C_Master_Start
 11964                           
 11965                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(ctrl);
 11966  13E3  1283               	bcf	3,5	;RP0=0, select bank0
 11967  13E4  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 11968  13E5  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11969  13E6  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 11970  13E7  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11971  13E8  00A3               	movwf	I2C_Master_Write@d
 11972  13E9  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 11973  13EA  00A4               	movwf	I2C_Master_Write@d+1
 11974  13EB  160A  158A  22B0  160A  118A  	fcall	_I2C_Master_Write
 11975                           
 11976                           ;EEPROM_24C1025.c: 36:      I2C_Master_Write(((char *)&mem_add)[1]);
 11977  13F0  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11978  13F1  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11979  13F2  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 11980  13F3  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11981  13F4  00A3               	movwf	I2C_Master_Write@d
 11982  13F5  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 11983  13F6  00A4               	movwf	I2C_Master_Write@d+1
 11984  13F7  160A  158A  22B0  160A  118A  	fcall	_I2C_Master_Write
 11985                           
 11986                           ;EEPROM_24C1025.c: 37:      I2C_Master_Write(((char *)&mem_add)[0]);
 11987  13FC  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11988  13FD  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11989  13FE  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 11990  13FF  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11991  1400  00A3               	movwf	I2C_Master_Write@d
 11992  1401  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 11993  1402  00A4               	movwf	I2C_Master_Write@d+1
 11994  1403  160A  158A  22B0  160A  118A  	fcall	_I2C_Master_Write
 11995                           
 11996                           ;EEPROM_24C1025.c: 38:      for(count=0;count<(sizedata-1);count++)
 11997  1408  01B3               	clrf	EEPROM_24C1025_Write_Buffer@count
 11998  1409                     l5477:
 11999  1409  082E               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 12000  140A  3EFF               	addlw	255
 12001  140B  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12002  140C  30FF               	movlw	255
 12003  140D  1803               	skipnc
 12004  140E  3000               	movlw	0
 12005  140F  00B2               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 12006  1410  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12007  1411  3A80               	xorlw	128
 12008  1412  3C80               	sublw	128
 12009  1413  1D03               	skipz
 12010  1414  2C17               	goto	u5095
 12011  1415  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12012  1416  0233               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 12013  1417                     u5095:
 12014  1417  1803               	btfsc	3,0
 12015  1418  2CEA               	goto	l5479
 12016  1419  0064               	clrwdt	;# 
 12017                           
 12018                           ;EEPROM_24C1025.c: 41:           if(mem_add>0x1FFFF) return;
 12019  141A  1283               	bcf	3,5	;RP0=0, select bank0
 12020  141B  1303               	bcf	3,6	;RP1=0, select bank0
 12021  141C  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12022  141D  1D03               	btfss	3,2
 12023  141E  0008               	return
 12024  141F  3002               	movlw	2
 12025  1420  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12026  1421  1D03               	skipz
 12027  1422  2C2B               	goto	u5063
 12028  1423  3000               	movlw	0
 12029  1424  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12030  1425  1D03               	skipz
 12031  1426  2C2B               	goto	u5063
 12032  1427  3000               	movlw	0
 12033  1428  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12034  1429  1D03               	skipz
 12035  142A  2C2B               	goto	u5063
 12036  142B                     u5063:
 12037  142B  1803               	btfsc	3,0
 12038  142C  0008               	return
 12039                           
 12040                           ;EEPROM_24C1025.c: 42:           if((mem_add+1)%128==0)
 12041  142D  1283               	bcf	3,5	;RP0=0, select bank0
 12042  142E  1303               	bcf	3,6	;RP1=0, select bank0
 12043  142F  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12044  1430  3E01               	addlw	1
 12045  1431  397F               	andlw	127
 12046  1432  1D03               	btfss	3,2
 12047  1433  2CC0               	goto	l5469
 12048                           
 12049                           ;EEPROM_24C1025.c: 43:             {;EEPROM_24C1025.c: 44:             I2C_Master_Write(
      +                          *data);
 12050  1434  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12051  1435  0084               	movwf	4
 12052  1436  1783               	bsf	3,7
 12053  1437  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12054  1438  1383               	bcf	3,7
 12055  1439  0800               	movf	0,w
 12056  143A  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12057  143B  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12058  143C  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12059  143D  00A3               	movwf	I2C_Master_Write@d
 12060  143E  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12061  143F  00A4               	movwf	I2C_Master_Write@d+1
 12062  1440  160A  158A  22B0  160A  118A  	fcall	_I2C_Master_Write
 12063                           
 12064                           ;EEPROM_24C1025.c: 45:             I2C_Master_Stop();
 12065  1445  160A  158A  2289  160A  118A  	fcall	_I2C_Master_Stop
 12066                           
 12067                           ;EEPROM_24C1025.c: 47:             my_delay_ms_WDT(5);
 12068  144A  3000               	movlw	0
 12069  144B  1283               	bcf	3,5	;RP0=0, select bank0
 12070  144C  00A3               	movwf	my_delay_ms_WDT@time+3
 12071  144D  3000               	movlw	0
 12072  144E  00A2               	movwf	my_delay_ms_WDT@time+2
 12073  144F  3000               	movlw	0
 12074  1450  00A1               	movwf	my_delay_ms_WDT@time+1
 12075  1451  3005               	movlw	5
 12076  1452  00A0               	movwf	my_delay_ms_WDT@time
 12077  1453  160A  158A  25EA  160A  118A  	fcall	_my_delay_ms_WDT
 12078                           
 12079                           ;EEPROM_24C1025.c: 48:             mem_add++;
 12080  1458  3001               	movlw	1
 12081  1459  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12082  145A  3000               	movlw	0
 12083  145B  1803               	skipnc
 12084  145C  3001               	movlw	1
 12085  145D  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12086  145E  3000               	movlw	0
 12087  145F  1803               	skipnc
 12088  1460  3001               	movlw	1
 12089  1461  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12090  1462  3000               	movlw	0
 12091  1463  1803               	skipnc
 12092  1464  3001               	movlw	1
 12093  1465  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12094                           
 12095                           ;EEPROM_24C1025.c: 49:             data++;
 12096  1466  3001               	movlw	1
 12097  1467  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12098  1468  1803               	skipnc
 12099  1469  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 12100  146A  3000               	movlw	0
 12101  146B  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 12102                           
 12103                           ;EEPROM_24C1025.c: 50:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12104  146C  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12105  146D  1D03               	btfss	3,2
 12106  146E  2C7D               	goto	l5449
 12107  146F  3001               	movlw	1
 12108  1470  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12109  1471  1D03               	skipz
 12110  1472  2C7B               	goto	u5083
 12111  1473  3000               	movlw	0
 12112  1474  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12113  1475  1D03               	skipz
 12114  1476  2C7B               	goto	u5083
 12115  1477  3000               	movlw	0
 12116  1478  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12117  1479  1D03               	skipz
 12118  147A  2C7B               	goto	u5083
 12119  147B                     u5083:
 12120  147B  1C03               	btfss	3,0
 12121  147C  2C84               	goto	l5451
 12122  147D                     l5449:
 12123  147D  3008               	movlw	8
 12124  147E  1283               	bcf	3,5	;RP0=0, select bank0
 12125  147F  1303               	bcf	3,6	;RP1=0, select bank0
 12126  1480  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12127  1481  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12128  1482  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 12129  1483  2C87               	goto	l5453
 12130  1484                     l5451:
 12131  1484  1283               	bcf	3,5	;RP0=0, select bank0
 12132  1485  1303               	bcf	3,6	;RP1=0, select bank0
 12133  1486  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 12134  1487                     l5453:
 12135                           
 12136                           ;EEPROM_24C1025.c: 51:             ctrl=chip_add;
 12137  1487  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12138  1488  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12139  1489  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12140  148A  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12141                           
 12142                           ;EEPROM_24C1025.c: 52:             ctrl<<=1;
 12143  148B  1003               	clrc
 12144  148C  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12145                           
 12146                           ;EEPROM_24C1025.c: 53:             ctrl |= 0xA0;
 12147  148D  30A0               	movlw	160
 12148  148E  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12149  148F  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12150  1490  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12151                           
 12152                           ;EEPROM_24C1025.c: 54:             ctrl |= range;
 12153  1491  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12154  1492  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12155  1493  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12156  1494  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12157                           
 12158                           ;EEPROM_24C1025.c: 56:             I2C_Master_Start();
 12159  1495  160A  158A  22D6  160A  118A  	fcall	_I2C_Master_Start
 12160                           
 12161                           ;EEPROM_24C1025.c: 57:             I2C_Master_Write(ctrl);
 12162  149A  1283               	bcf	3,5	;RP0=0, select bank0
 12163  149B  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12164  149C  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12165  149D  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12166  149E  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12167  149F  00A3               	movwf	I2C_Master_Write@d
 12168  14A0  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12169  14A1  00A4               	movwf	I2C_Master_Write@d+1
 12170  14A2  160A  158A  22B0  160A  118A  	fcall	_I2C_Master_Write
 12171                           
 12172                           ;EEPROM_24C1025.c: 58:             I2C_Master_Write(((char *)&mem_add)[1]);
 12173  14A7  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12174  14A8  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12175  14A9  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12176  14AA  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12177  14AB  00A3               	movwf	I2C_Master_Write@d
 12178  14AC  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12179  14AD  00A4               	movwf	I2C_Master_Write@d+1
 12180  14AE  160A  158A  22B0  160A  118A  	fcall	_I2C_Master_Write
 12181                           
 12182                           ;EEPROM_24C1025.c: 59:             I2C_Master_Write(((char *)&mem_add)[0]);
 12183  14B3  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12184  14B4  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12185  14B5  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12186  14B6  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12187  14B7  00A3               	movwf	I2C_Master_Write@d
 12188  14B8  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12189  14B9  00A4               	movwf	I2C_Master_Write@d+1
 12190  14BA  160A  158A  22B0  160A  118A  	fcall	_I2C_Master_Write
 12191                           
 12192                           ;EEPROM_24C1025.c: 60:             }
 12193  14BF  2CE5               	goto	l5475
 12194  14C0                     l5469:
 12195                           
 12196                           ;EEPROM_24C1025.c: 62:             {;EEPROM_24C1025.c: 63:             I2C_Master_Write(
      +                          *data);
 12197  14C0  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12198  14C1  0084               	movwf	4
 12199  14C2  1783               	bsf	3,7
 12200  14C3  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12201  14C4  1383               	bcf	3,7
 12202  14C5  0800               	movf	0,w
 12203  14C6  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12204  14C7  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12205  14C8  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12206  14C9  00A3               	movwf	I2C_Master_Write@d
 12207  14CA  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12208  14CB  00A4               	movwf	I2C_Master_Write@d+1
 12209  14CC  160A  158A  22B0  160A  118A  	fcall	_I2C_Master_Write
 12210                           
 12211                           ;EEPROM_24C1025.c: 64:             data++;
 12212  14D1  3001               	movlw	1
 12213  14D2  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12214  14D3  1803               	skipnc
 12215  14D4  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 12216  14D5  3000               	movlw	0
 12217  14D6  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 12218                           
 12219                           ;EEPROM_24C1025.c: 65:             mem_add++;
 12220  14D7  3001               	movlw	1
 12221  14D8  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12222  14D9  3000               	movlw	0
 12223  14DA  1803               	skipnc
 12224  14DB  3001               	movlw	1
 12225  14DC  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12226  14DD  3000               	movlw	0
 12227  14DE  1803               	skipnc
 12228  14DF  3001               	movlw	1
 12229  14E0  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12230  14E1  3000               	movlw	0
 12231  14E2  1803               	skipnc
 12232  14E3  3001               	movlw	1
 12233  14E4  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12234  14E5                     l5475:
 12235                           
 12236                           ;EEPROM_24C1025.c: 67:      }
 12237  14E5  3001               	movlw	1
 12238  14E6  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12239  14E7  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12240  14E8  07B3               	addwf	EEPROM_24C1025_Write_Buffer@count,f
 12241  14E9  2C09               	goto	l5477
 12242  14EA                     l5479:
 12243                           
 12244                           ;EEPROM_24C1025.c: 68:      I2C_Master_Write(*data);
 12245  14EA  1283               	bcf	3,5	;RP0=0, select bank0
 12246  14EB  1303               	bcf	3,6	;RP1=0, select bank0
 12247  14EC  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12248  14ED  0084               	movwf	4
 12249  14EE  1783               	bsf	3,7
 12250  14EF  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12251  14F0  1383               	bcf	3,7
 12252  14F1  0800               	movf	0,w
 12253  14F2  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12254  14F3  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12255  14F4  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12256  14F5  00A3               	movwf	I2C_Master_Write@d
 12257  14F6  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12258  14F7  00A4               	movwf	I2C_Master_Write@d+1
 12259  14F8  160A  158A  22B0  160A  118A  	fcall	_I2C_Master_Write
 12260                           
 12261                           ;EEPROM_24C1025.c: 69:      I2C_Master_Stop();
 12262  14FD  160A  158A  2289  160A  118A  	fcall	_I2C_Master_Stop
 12263                           
 12264                           ;EEPROM_24C1025.c: 71:      my_delay_ms_WDT(5);
 12265  1502  3000               	movlw	0
 12266  1503  1283               	bcf	3,5	;RP0=0, select bank0
 12267  1504  00A3               	movwf	my_delay_ms_WDT@time+3
 12268  1505  3000               	movlw	0
 12269  1506  00A2               	movwf	my_delay_ms_WDT@time+2
 12270  1507  3000               	movlw	0
 12271  1508  00A1               	movwf	my_delay_ms_WDT@time+1
 12272  1509  3005               	movlw	5
 12273  150A  00A0               	movwf	my_delay_ms_WDT@time
 12274  150B  160A  158A  25EA   	fcall	_my_delay_ms_WDT
 12275  150E  0008               	return
 12276  150F                     __end_of_EEPROM_24C1025_Write_Buffer:
 12277                           
 12278                           	psect	text50
 12279  1DEA                     __ptext50:	
 12280 ;; *************** function _my_delay_ms_WDT *****************
 12281 ;; Defined at:
 12282 ;;		line 13 in file "my_delay.c"
 12283 ;; Parameters:    Size  Location     Type
 12284 ;;  time            4    0[BANK0 ] long 
 12285 ;; Auto vars:     Size  Location     Type
 12286 ;;  i               4    6[BANK0 ] long 
 12287 ;; Return value:  Size  Location     Type
 12288 ;;                  1    wreg      void 
 12289 ;; Registers used:
 12290 ;;		wreg, btemp+1
 12291 ;; Tracked objects:
 12292 ;;		On entry : 300/0
 12293 ;;		On exit  : 300/0
 12294 ;;		Unchanged: 0/0
 12295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12296 ;;      Params:         0       4       0       0       0
 12297 ;;      Locals:         0       4       0       0       0
 12298 ;;      Temps:          0       2       0       0       0
 12299 ;;      Totals:         0      10       0       0       0
 12300 ;;Total ram usage:       10 bytes
 12301 ;; Hardware stack levels used: 1
 12302 ;; Hardware stack levels required when called: 1
 12303 ;; This function calls:
 12304 ;;		Nothing
 12305 ;; This function is called by:
 12306 ;;		_EEPROM_24C1025_Write_Buffer
 12307 ;;		_EEPROM_24C1025_Read_Buffer
 12308 ;;		_EEPROM_24C1025_Write_Str
 12309 ;;		_main
 12310 ;; This function uses a non-reentrant model
 12311 ;;
 12312                           
 12313                           
 12314                           ;psect for function _my_delay_ms_WDT
 12315  1DEA                     _my_delay_ms_WDT:
 12316                           
 12317                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
 12318                           
 12319                           ;incstack = 0
 12320                           ; Regs used in _my_delay_ms_WDT: [wreg+btemp+1]
 12321  1DEA  3000               	movlw	0
 12322  1DEB  00A9               	movwf	my_delay_ms_WDT@i+3
 12323  1DEC  3000               	movlw	0
 12324  1DED  00A8               	movwf	my_delay_ms_WDT@i+2
 12325  1DEE  3000               	movlw	0
 12326  1DEF  00A7               	movwf	my_delay_ms_WDT@i+1
 12327  1DF0  3000               	movlw	0
 12328  1DF1  00A6               	movwf	my_delay_ms_WDT@i
 12329  1DF2                     l3489:
 12330  1DF2  0829               	movf	my_delay_ms_WDT@i+3,w
 12331  1DF3  3A80               	xorlw	128
 12332  1DF4  00FF               	movwf	127
 12333  1DF5  0823               	movf	my_delay_ms_WDT@time+3,w
 12334  1DF6  3A80               	xorlw	128
 12335  1DF7  027F               	subwf	127,w
 12336  1DF8  1D03               	skipz
 12337  1DF9  2E04               	goto	u2553
 12338  1DFA  0822               	movf	my_delay_ms_WDT@time+2,w
 12339  1DFB  0228               	subwf	my_delay_ms_WDT@i+2,w
 12340  1DFC  1D03               	skipz
 12341  1DFD  2E04               	goto	u2553
 12342  1DFE  0821               	movf	my_delay_ms_WDT@time+1,w
 12343  1DFF  0227               	subwf	my_delay_ms_WDT@i+1,w
 12344  1E00  1D03               	skipz
 12345  1E01  2E04               	goto	u2553
 12346  1E02  0820               	movf	my_delay_ms_WDT@time,w
 12347  1E03  0226               	subwf	my_delay_ms_WDT@i,w
 12348  1E04                     u2553:
 12349  1E04  1803               	btfsc	3,0
 12350  1E05  0008               	return
 12351  1E06  0064               	clrwdt	;# 
 12352                           
 12353                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
 12354  1E07  3003               	movlw	3
 12355  1E08  1283               	bcf	3,5	;RP0=0, select bank0
 12356  1E09  1303               	bcf	3,6	;RP1=0, select bank0
 12357  1E0A  00A5               	movwf	??_my_delay_ms_WDT+1
 12358  1E0B  3097               	movlw	151
 12359  1E0C  00A4               	movwf	??_my_delay_ms_WDT
 12360  1E0D                     u5337:
 12361  1E0D  0BA4               	decfsz	??_my_delay_ms_WDT,f
 12362  1E0E  2E0D               	goto	u5337
 12363  1E0F  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
 12364  1E10  2E0D               	goto	u5337
 12365                           
 12366                           ;my_delay.c: 19:             }
 12367  1E11  3001               	movlw	1
 12368  1E12  1283               	bcf	3,5	;RP0=0, select bank0
 12369  1E13  1303               	bcf	3,6	;RP1=0, select bank0
 12370  1E14  07A6               	addwf	my_delay_ms_WDT@i,f
 12371  1E15  3000               	movlw	0
 12372  1E16  1803               	skipnc
 12373  1E17  3001               	movlw	1
 12374  1E18  07A7               	addwf	my_delay_ms_WDT@i+1,f
 12375  1E19  3000               	movlw	0
 12376  1E1A  1803               	skipnc
 12377  1E1B  3001               	movlw	1
 12378  1E1C  07A8               	addwf	my_delay_ms_WDT@i+2,f
 12379  1E1D  3000               	movlw	0
 12380  1E1E  1803               	skipnc
 12381  1E1F  3001               	movlw	1
 12382  1E20  07A9               	addwf	my_delay_ms_WDT@i+3,f
 12383  1E21  2DF2               	goto	l3489
 12384  1E22                     __end_of_my_delay_ms_WDT:
 12385                           
 12386                           	psect	text51
 12387  1AB0                     __ptext51:	
 12388 ;; *************** function _I2C_Master_Write *****************
 12389 ;; Defined at:
 12390 ;;		line 79 in file "I2C.c"
 12391 ;; Parameters:    Size  Location     Type
 12392 ;;  d               2    3[BANK0 ] unsigned int 
 12393 ;; Auto vars:     Size  Location     Type
 12394 ;;		None
 12395 ;; Return value:  Size  Location     Type
 12396 ;;                  1    wreg      void 
 12397 ;; Registers used:
 12398 ;;		wreg, status,2, status,0, pclath, cstack
 12399 ;; Tracked objects:
 12400 ;;		On entry : 300/0
 12401 ;;		On exit  : 300/0
 12402 ;;		Unchanged: 0/0
 12403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12404 ;;      Params:         0       2       0       0       0
 12405 ;;      Locals:         0       0       0       0       0
 12406 ;;      Temps:          0       0       0       0       0
 12407 ;;      Totals:         0       2       0       0       0
 12408 ;;Total ram usage:        2 bytes
 12409 ;; Hardware stack levels used: 1
 12410 ;; Hardware stack levels required when called: 2
 12411 ;; This function calls:
 12412 ;;		_I2C_Master_Wait
 12413 ;; This function is called by:
 12414 ;;		_EEPROM_24C1025_Write_Buffer
 12415 ;;		_EEPROM_24C1025_Read_Buffer
 12416 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12417 ;;		_EEPROM_24C1025_Write_Str
 12418 ;;		_EEPROM_24C1025_Read_Str
 12419 ;; This function uses a non-reentrant model
 12420 ;;
 12421                           
 12422                           
 12423                           ;psect for function _I2C_Master_Write
 12424  1AB0                     _I2C_Master_Write:
 12425                           
 12426                           ;I2C.c: 79: void I2C_Master_Write(unsigned d);I2C.c: 80: {;I2C.c: 81:   if(I2C_Master_Wa
      +                          it())
 12427                           
 12428                           ;incstack = 0
 12429                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 12430  1AB0  160A  158A  23E6  160A  158A  	fcall	_I2C_Master_Wait
 12431  1AB5  3A00               	xorlw	0
 12432  1AB6  1903               	skipnz
 12433  1AB7  0008               	return
 12434                           
 12435                           ;I2C.c: 82:     {;I2C.c: 83:     SSPBUF = d;
 12436  1AB8  0823               	movf	I2C_Master_Write@d,w
 12437  1AB9  0093               	movwf	19	;volatile
 12438  1ABA  0008               	return
 12439  1ABB                     __end_of_I2C_Master_Write:
 12440                           
 12441                           	psect	text52
 12442  1A89                     __ptext52:	
 12443 ;; *************** function _I2C_Master_Stop *****************
 12444 ;; Defined at:
 12445 ;;		line 70 in file "I2C.c"
 12446 ;; Parameters:    Size  Location     Type
 12447 ;;		None
 12448 ;; Auto vars:     Size  Location     Type
 12449 ;;		None
 12450 ;; Return value:  Size  Location     Type
 12451 ;;                  1    wreg      void 
 12452 ;; Registers used:
 12453 ;;		wreg, status,2, status,0, pclath, cstack
 12454 ;; Tracked objects:
 12455 ;;		On entry : 300/800
 12456 ;;		On exit  : 200/0
 12457 ;;		Unchanged: 0/0
 12458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12459 ;;      Params:         0       0       0       0       0
 12460 ;;      Locals:         0       0       0       0       0
 12461 ;;      Temps:          0       0       0       0       0
 12462 ;;      Totals:         0       0       0       0       0
 12463 ;;Total ram usage:        0 bytes
 12464 ;; Hardware stack levels used: 1
 12465 ;; Hardware stack levels required when called: 2
 12466 ;; This function calls:
 12467 ;;		_I2C_Master_Wait
 12468 ;; This function is called by:
 12469 ;;		_EEPROM_24C1025_Write_Buffer
 12470 ;;		_EEPROM_24C1025_Read_Buffer
 12471 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12472 ;;		_EEPROM_24C1025_Write_Str
 12473 ;;		_EEPROM_24C1025_Read_Str
 12474 ;; This function uses a non-reentrant model
 12475 ;;
 12476                           
 12477                           
 12478                           ;psect for function _I2C_Master_Stop
 12479  1A89                     _I2C_Master_Stop:
 12480                           
 12481                           ;I2C.c: 72:   if(I2C_Master_Wait())
 12482                           
 12483                           ;incstack = 0
 12484                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 12485  1A89  160A  158A  23E6   	fcall	_I2C_Master_Wait
 12486  1A8C  3A00               	xorlw	0
 12487                           
 12488                           ;I2C.c: 73:     {;I2C.c: 74:     SSPCON2bits.PEN = 1;
 12489  1A8D  1683               	bsf	3,5	;RP0=1, select bank1
 12490  1A8E  1D03               	btfss	3,2
 12491  1A8F  1511               	bsf	17,2	;volatile
 12492                           
 12493                           ;I2C.c: 76:   INTCONbits.GIE=1;
 12494                           
 12495                           ;I2C.c: 75:     }
 12496  1A90  178B               	bsf	11,7	;volatile
 12497  1A91  0008               	return
 12498  1A92                     __end_of_I2C_Master_Stop:
 12499                           
 12500                           	psect	text53
 12501  1AD6                     __ptext53:	
 12502 ;; *************** function _I2C_Master_Start *****************
 12503 ;; Defined at:
 12504 ;;		line 52 in file "I2C.c"
 12505 ;; Parameters:    Size  Location     Type
 12506 ;;		None
 12507 ;; Auto vars:     Size  Location     Type
 12508 ;;		None
 12509 ;; Return value:  Size  Location     Type
 12510 ;;                  1    wreg      void 
 12511 ;; Registers used:
 12512 ;;		wreg, status,2, status,0, pclath, cstack
 12513 ;; Tracked objects:
 12514 ;;		On entry : 300/0
 12515 ;;		On exit  : 200/0
 12516 ;;		Unchanged: 0/0
 12517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12518 ;;      Params:         0       0       0       0       0
 12519 ;;      Locals:         0       0       0       0       0
 12520 ;;      Temps:          0       0       0       0       0
 12521 ;;      Totals:         0       0       0       0       0
 12522 ;;Total ram usage:        0 bytes
 12523 ;; Hardware stack levels used: 1
 12524 ;; Hardware stack levels required when called: 2
 12525 ;; This function calls:
 12526 ;;		_I2C_Master_Wait
 12527 ;; This function is called by:
 12528 ;;		_EEPROM_24C1025_Write_Buffer
 12529 ;;		_EEPROM_24C1025_Read_Buffer
 12530 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12531 ;;		_EEPROM_24C1025_Write_Str
 12532 ;;		_EEPROM_24C1025_Read_Str
 12533 ;; This function uses a non-reentrant model
 12534 ;;
 12535                           
 12536                           
 12537                           ;psect for function _I2C_Master_Start
 12538  1AD6                     _I2C_Master_Start:
 12539                           
 12540                           ;I2C.c: 54:   INTCONbits.GIE=0;
 12541                           
 12542                           ;incstack = 0
 12543                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 12544  1AD6  138B               	bcf	11,7	;volatile
 12545                           
 12546                           ;I2C.c: 55:   Delay_Led_Memory=20;
 12547  1AD7  3014               	movlw	20
 12548  1AD8  1683               	bsf	3,5	;RP0=1, select bank1
 12549  1AD9  00B4               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 12550  1ADA  3000               	movlw	0
 12551  1ADB  00B5               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 12552                           
 12553                           ;I2C.c: 56:   if(I2C_Master_Wait())
 12554  1ADC  160A  158A  23E6  160A  158A  	fcall	_I2C_Master_Wait
 12555  1AE1  3A00               	xorlw	0
 12556  1AE2  1903               	skipnz
 12557  1AE3  0008               	return
 12558                           
 12559                           ;I2C.c: 57:     {;I2C.c: 58:     SSPCON2bits.SEN = 1;
 12560  1AE4  1683               	bsf	3,5	;RP0=1, select bank1
 12561  1AE5  1411               	bsf	17,0	;volatile
 12562  1AE6  0008               	return
 12563  1AE7                     __end_of_I2C_Master_Start:
 12564                           
 12565                           	psect	text54
 12566  1BE6                     __ptext54:	
 12567 ;; *************** function _I2C_Master_Wait *****************
 12568 ;; Defined at:
 12569 ;;		line 37 in file "I2C.c"
 12570 ;; Parameters:    Size  Location     Type
 12571 ;;		None
 12572 ;; Auto vars:     Size  Location     Type
 12573 ;;  tempo           1    2[BANK0 ] unsigned char 
 12574 ;; Return value:  Size  Location     Type
 12575 ;;                  1    wreg      unsigned char 
 12576 ;; Registers used:
 12577 ;;		wreg, status,2, status,0
 12578 ;; Tracked objects:
 12579 ;;		On entry : 200/0
 12580 ;;		On exit  : 300/0
 12581 ;;		Unchanged: 0/0
 12582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12583 ;;      Params:         0       0       0       0       0
 12584 ;;      Locals:         0       1       0       0       0
 12585 ;;      Temps:          0       2       0       0       0
 12586 ;;      Totals:         0       3       0       0       0
 12587 ;;Total ram usage:        3 bytes
 12588 ;; Hardware stack levels used: 1
 12589 ;; Hardware stack levels required when called: 1
 12590 ;; This function calls:
 12591 ;;		Nothing
 12592 ;; This function is called by:
 12593 ;;		_I2C_Master_Start
 12594 ;;		_I2C_Master_RepeatedStart
 12595 ;;		_I2C_Master_Stop
 12596 ;;		_I2C_Master_Write
 12597 ;;		_I2C_Master_Read
 12598 ;; This function uses a non-reentrant model
 12599 ;;
 12600                           
 12601                           
 12602                           ;psect for function _I2C_Master_Wait
 12603  1BE6                     _I2C_Master_Wait:
 12604                           
 12605                           ;I2C.c: 39:   char tempo;;I2C.c: 40:   tempo=200;
 12606                           
 12607                           ;incstack = 0
 12608                           ; Regs used in _I2C_Master_Wait: [wreg+status,2+status,0]
 12609  1BE6  30C8               	movlw	200
 12610  1BE7  1283               	bcf	3,5	;RP0=0, select bank0
 12611  1BE8  00A0               	movwf	??_I2C_Master_Wait
 12612  1BE9  0820               	movf	??_I2C_Master_Wait,w
 12613  1BEA  00A2               	movwf	I2C_Master_Wait@tempo
 12614                           
 12615                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 12616  1BEB  2BF8               	goto	l3461
 12617  1BEC                     l3457:
 12618                           
 12619                           ;I2C.c: 44:          tempo--;
 12620  1BEC  3001               	movlw	1
 12621  1BED  02A2               	subwf	I2C_Master_Wait@tempo,f
 12622                           
 12623                           ;I2C.c: 47:       _delay((unsigned long)((1)*(8000000/4000.0)));
 12624  1BEE  3003               	movlw	3
 12625  1BEF  1283               	bcf	3,5	;RP0=0, select bank0
 12626  1BF0  1303               	bcf	3,6	;RP1=0, select bank0
 12627  1BF1  00A1               	movwf	??_I2C_Master_Wait+1
 12628  1BF2  3097               	movlw	151
 12629  1BF3  00A0               	movwf	??_I2C_Master_Wait
 12630  1BF4                     u5347:
 12631  1BF4  0BA0               	decfsz	??_I2C_Master_Wait,f
 12632  1BF5  2BF4               	goto	u5347
 12633  1BF6  0BA1               	decfsz	??_I2C_Master_Wait+1,f
 12634  1BF7  2BF4               	goto	u5347
 12635  1BF8                     l3461:
 12636                           
 12637                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 12638  1BF8  1683               	bsf	3,5	;RP0=1, select bank1
 12639  1BF9  1303               	bcf	3,6	;RP1=0, select bank1
 12640  1BFA  1914               	btfsc	20,2	;volatile
 12641  1BFB  2C00               	goto	l3455
 12642  1BFC  0811               	movf	17,w	;volatile
 12643  1BFD  391F               	andlw	31
 12644  1BFE  1903               	btfsc	3,2
 12645  1BFF  2C04               	goto	l3465
 12646  1C00                     l3455:
 12647                           
 12648                           ;I2C.c: 42:       {;I2C.c: 43:       if(tempo)
 12649  1C00  1283               	bcf	3,5	;RP0=0, select bank0
 12650  1C01  0822               	movf	I2C_Master_Wait@tempo,w
 12651  1C02  1D03               	btfss	3,2
 12652  1C03  2BEC               	goto	l3457
 12653  1C04                     l3465:
 12654                           
 12655                           ;I2C.c: 49:   return tempo ;
 12656  1C04  1283               	bcf	3,5	;RP0=0, select bank0
 12657  1C05  0822               	movf	I2C_Master_Wait@tempo,w
 12658  1C06  0008               	return
 12659  1C07                     __end_of_I2C_Master_Wait:
 12660                           
 12661                           	psect	text55
 12662  1AA5                     __ptext55:	
 12663 ;; *************** function _ADC_init *****************
 12664 ;; Defined at:
 12665 ;;		line 10 in file "adc.c"
 12666 ;; Parameters:    Size  Location     Type
 12667 ;;		None
 12668 ;; Auto vars:     Size  Location     Type
 12669 ;;		None
 12670 ;; Return value:  Size  Location     Type
 12671 ;;                  1    wreg      void 
 12672 ;; Registers used:
 12673 ;;		wreg, status,2, status,0
 12674 ;; Tracked objects:
 12675 ;;		On entry : 0/100
 12676 ;;		On exit  : 300/0
 12677 ;;		Unchanged: 0/0
 12678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12679 ;;      Params:         0       0       0       0       0
 12680 ;;      Locals:         0       0       0       0       0
 12681 ;;      Temps:          0       0       0       0       0
 12682 ;;      Totals:         0       0       0       0       0
 12683 ;;Total ram usage:        0 bytes
 12684 ;; Hardware stack levels used: 1
 12685 ;; Hardware stack levels required when called: 1
 12686 ;; This function calls:
 12687 ;;		Nothing
 12688 ;; This function is called by:
 12689 ;;		_main
 12690 ;; This function uses a non-reentrant model
 12691 ;;
 12692                           
 12693                           
 12694                           ;psect for function _ADC_init
 12695  1AA5                     _ADC_init:
 12696                           
 12697                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 12698                           
 12699                           ;incstack = 0
 12700                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 12701  1AA5  30C0               	movlw	192
 12702  1AA6  1283               	bcf	3,5	;RP0=0, select bank0
 12703  1AA7  1303               	bcf	3,6	;RP1=0, select bank0
 12704  1AA8  049F               	iorwf	31,f	;volatile
 12705                           
 12706                           ;adc.c: 12:      ADCON1=0b10000000;
 12707  1AA9  3080               	movlw	128
 12708  1AAA  1683               	bsf	3,5	;RP0=1, select bank1
 12709  1AAB  009F               	movwf	31	;volatile
 12710                           
 12711                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 12712  1AAC  179F               	bsf	31,7	;volatile
 12713                           
 12714                           ;adc.c: 14:      ADCON0bits.ADON=1;
 12715  1AAD  1283               	bcf	3,5	;RP0=0, select bank0
 12716  1AAE  141F               	bsf	31,0	;volatile
 12717  1AAF  0008               	return
 12718  1AB0                     __end_of_ADC_init:
 12719                           
 12720                           	psect	text56
 12721  11BB                     __ptext56:	
 12722 ;; *************** function _isr *****************
 12723 ;; Defined at:
 12724 ;;		line 29 in file "isr.c"
 12725 ;; Parameters:    Size  Location     Type
 12726 ;;		None
 12727 ;; Auto vars:     Size  Location     Type
 12728 ;;  tempo           2    6[COMMON] unsigned int 
 12729 ;; Return value:  Size  Location     Type
 12730 ;;                  1    wreg      void 
 12731 ;; Registers used:
 12732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 12733 ;; Tracked objects:
 12734 ;;		On entry : 0/0
 12735 ;;		On exit  : 300/0
 12736 ;;		Unchanged: 0/0
 12737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12738 ;;      Params:         0       0       0       0       0
 12739 ;;      Locals:         2       0       0       0       0
 12740 ;;      Temps:          6       0       0       0       0
 12741 ;;      Totals:         8       0       0       0       0
 12742 ;;Total ram usage:        8 bytes
 12743 ;; Hardware stack levels used: 1
 12744 ;; This function calls:
 12745 ;;		Nothing
 12746 ;; This function is called by:
 12747 ;;		Interrupt level 1
 12748 ;; This function uses a non-reentrant model
 12749 ;;
 12750                           
 12751                           
 12752                           ;psect for function _isr
 12753  11BB                     _isr:
 12754                           
 12755                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 12756  11BB  188B               	btfsc	11,1	;volatile
 12757                           
 12758                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 12759  11BC  108B               	bcf	11,1	;volatile
 12760                           
 12761                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 12762                           
 12763                           ;isr.c: 37:       }
 12764  11BD  1C0C               	btfss	12,0	;volatile
 12765  11BE  2A35               	goto	i1l5335
 12766                           
 12767                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 12768  11BF  30B1               	movlw	177
 12769  11C0  008F               	movwf	15	;volatile
 12770                           
 12771                           ;isr.c: 42:                 TMR1L=0xF3;
 12772  11C1  30F3               	movlw	243
 12773  11C2  008E               	movwf	14	;volatile
 12774                           
 12775                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 12776  11C3  100C               	bcf	12,0	;volatile
 12777                           
 12778                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 12779  11C4  1FEF               	btfss	_generic_status,7
 12780  11C5  29C8               	goto	i1l5291
 12781                           
 12782                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 12783  11C6  13EF               	bcf	_generic_status,7
 12784  11C7  0064               	clrwdt	;# 
 12785  11C8                     i1l5291:
 12786                           
 12787                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 12788  11C8  300A               	movlw	10
 12789  11C9  07F8               	addwf	_Delay_Led_Tmr0,f	;volatile
 12790  11CA  1803               	skipnc
 12791  11CB  0AF9               	incf	_Delay_Led_Tmr0+1,f	;volatile
 12792  11CC  3000               	movlw	0
 12793  11CD  07F9               	addwf	_Delay_Led_Tmr0+1,f	;volatile
 12794                           
 12795                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 12796  11CE  3003               	movlw	3
 12797  11CF  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 12798  11D0  30E8               	movlw	232
 12799  11D1  1903               	skipnz
 12800  11D2  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 12801  11D3  1C03               	skipc
 12802  11D4  29D7               	goto	i1l5295
 12803                           
 12804                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 12805  11D5  01F8               	clrf	_Delay_Led_Tmr0	;volatile
 12806  11D6  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
 12807  11D7                     i1l5295:
 12808                           
 12809                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 12810  11D7  3001               	movlw	1
 12811  11D8  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 12812  11D9  30F4               	movlw	244
 12813  11DA  1903               	skipnz
 12814  11DB  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 12815  11DC  1803               	skipnc
 12816  11DD  29E2               	goto	i1l632
 12817                           
 12818                           ;isr.c: 55:                    PORTBbits.RB7=1;
 12819  11DE  1283               	bcf	3,5	;RP0=0, select bank0
 12820  11DF  1303               	bcf	3,6	;RP1=0, select bank0
 12821  11E0  1786               	bsf	6,7	;volatile
 12822  11E1  29E5               	goto	i1l5299
 12823  11E2                     i1l632:	
 12824                           ;isr.c: 56:                 else
 12825                           
 12826                           
 12827                           ;isr.c: 57:                    PORTBbits.RB7=0;
 12828  11E2  1283               	bcf	3,5	;RP0=0, select bank0
 12829  11E3  1303               	bcf	3,6	;RP1=0, select bank0
 12830  11E4  1386               	bcf	6,7	;volatile
 12831  11E5                     i1l5299:
 12832                           
 12833                           ;isr.c: 60:                 if(Delay_Led_Usart){
 12834  11E5  1683               	bsf	3,5	;RP0=1, select bank1
 12835  11E6  0832               	movf	_Delay_Led_Usart^(0+128),w	;volatile
 12836  11E7  0433               	iorwf	(_Delay_Led_Usart+1)^(0+128),w	;volatile
 12837  11E8  1903               	btfsc	3,2
 12838  11E9  29F3               	goto	i1l634
 12839                           
 12840                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 12841  11EA  300A               	movlw	10
 12842  11EB  02B2               	subwf	_Delay_Led_Usart^(0+128),f	;volatile
 12843  11EC  3000               	movlw	0
 12844  11ED  1C03               	skipc
 12845  11EE  03B3               	decf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 12846  11EF  02B3               	subwf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 12847                           
 12848                           ;isr.c: 62:                    PORTBbits.RB6=1;
 12849  11F0  1283               	bcf	3,5	;RP0=0, select bank0
 12850  11F1  1706               	bsf	6,6	;volatile
 12851                           
 12852                           ;isr.c: 63:                    }
 12853  11F2  29F5               	goto	i1l5305
 12854  11F3                     i1l634:	
 12855                           ;isr.c: 64:                 else{
 12856                           
 12857                           
 12858                           ;isr.c: 65:                    PORTBbits.RB6=0;
 12859  11F3  1283               	bcf	3,5	;RP0=0, select bank0
 12860  11F4  1306               	bcf	6,6	;volatile
 12861  11F5                     i1l5305:
 12862                           
 12863                           ;isr.c: 68:                 if(Delay_Led_Memory){
 12864  11F5  1683               	bsf	3,5	;RP0=1, select bank1
 12865  11F6  0834               	movf	_Delay_Led_Memory^(0+128),w	;volatile
 12866  11F7  0435               	iorwf	(_Delay_Led_Memory+1)^(0+128),w	;volatile
 12867  11F8  1903               	btfsc	3,2
 12868  11F9  2A03               	goto	i1l636
 12869                           
 12870                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 12871  11FA  300A               	movlw	10
 12872  11FB  02B4               	subwf	_Delay_Led_Memory^(0+128),f	;volatile
 12873  11FC  3000               	movlw	0
 12874  11FD  1C03               	skipc
 12875  11FE  03B5               	decf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 12876  11FF  02B5               	subwf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 12877                           
 12878                           ;isr.c: 70:                    PORTBbits.RB5=1;
 12879  1200  1283               	bcf	3,5	;RP0=0, select bank0
 12880  1201  1686               	bsf	6,5	;volatile
 12881                           
 12882                           ;isr.c: 71:                    }
 12883  1202  2A05               	goto	i1l5311
 12884  1203                     i1l636:	
 12885                           ;isr.c: 72:                 else{
 12886                           
 12887                           
 12888                           ;isr.c: 73:                    PORTBbits.RB5=0;
 12889  1203  1283               	bcf	3,5	;RP0=0, select bank0
 12890  1204  1286               	bcf	6,5	;volatile
 12891  1205                     i1l5311:
 12892                           
 12893                           ;isr.c: 77:                 tempodecorrido+=10;
 12894  1205  300A               	movlw	10
 12895  1206  1683               	bsf	3,5	;RP0=1, select bank1
 12896  1207  07AA               	addwf	_tempodecorrido^(0+128),f	;volatile
 12897  1208  1803               	skipnc
 12898  1209  0AAB               	incf	(_tempodecorrido+1)^(0+128),f	;volatile
 12899  120A  3000               	movlw	0
 12900  120B  07AB               	addwf	(_tempodecorrido+1)^(0+128),f	;volatile
 12901                           
 12902                           ;isr.c: 78:                 milisegundo+=10;
 12903  120C  300A               	movlw	10
 12904  120D  07B0               	addwf	_milisegundo^(0+128),f	;volatile
 12905  120E  1803               	skipnc
 12906  120F  0AB1               	incf	(_milisegundo+1)^(0+128),f	;volatile
 12907  1210  3000               	movlw	0
 12908  1211  07B1               	addwf	(_milisegundo+1)^(0+128),f	;volatile
 12909                           
 12910                           ;isr.c: 79:                 if(milisegundo==1000){
 12911  1212  30E8               	movlw	232
 12912  1213  0630               	xorwf	_milisegundo^(0+128),w	;volatile
 12913  1214  3003               	movlw	3
 12914  1215  1903               	skipnz
 12915  1216  0631               	xorwf	(_milisegundo+1)^(0+128),w	;volatile
 12916  1217  1D03               	btfss	3,2
 12917  1218  2A35               	goto	i1l5335
 12918                           
 12919                           ;isr.c: 80:                    milisegundo=0;
 12920  1219  01B0               	clrf	_milisegundo^(0+128)	;volatile
 12921  121A  01B1               	clrf	(_milisegundo+1)^(0+128)	;volatile
 12922                           
 12923                           ;isr.c: 81:                    segundo++;
 12924  121B  3001               	movlw	1
 12925  121C  00F0               	movwf	??_isr
 12926  121D  0870               	movf	??_isr,w
 12927  121E  07FD               	addwf	_segundo,f	;volatile
 12928                           
 12929                           ;isr.c: 88:                    if(segundo==60){
 12930  121F  303C               	movlw	60
 12931  1220  067D               	xorwf	_segundo,w	;volatile
 12932  1221  1D03               	btfss	3,2
 12933  1222  2A35               	goto	i1l5335
 12934                           
 12935                           ;isr.c: 89:                       segundo=0;
 12936  1223  01FD               	clrf	_segundo	;volatile
 12937                           
 12938                           ;isr.c: 90:                       minuto++;
 12939  1224  3001               	movlw	1
 12940  1225  00F0               	movwf	??_isr
 12941  1226  0870               	movf	??_isr,w
 12942  1227  07FA               	addwf	_minuto,f	;volatile
 12943                           
 12944                           ;isr.c: 91:                       if(minuto==60){
 12945  1228  303C               	movlw	60
 12946  1229  067A               	xorwf	_minuto,w	;volatile
 12947  122A  1D03               	btfss	3,2
 12948  122B  2A35               	goto	i1l5335
 12949                           
 12950                           ;isr.c: 92:                          minuto=0;
 12951  122C  01FA               	clrf	_minuto	;volatile
 12952                           
 12953                           ;isr.c: 93:                          hora++;
 12954  122D  3001               	movlw	1
 12955  122E  00F0               	movwf	??_isr
 12956  122F  0870               	movf	??_isr,w
 12957  1230  07FC               	addwf	_hora,f	;volatile
 12958                           
 12959                           ;isr.c: 94:                          if(hora==24){
 12960  1231  3018               	movlw	24
 12961  1232  067C               	xorwf	_hora,w	;volatile
 12962  1233  1903               	btfsc	3,2
 12963                           
 12964                           ;isr.c: 95:                             hora=0;
 12965  1234  01FC               	clrf	_hora	;volatile
 12966  1235                     i1l5335:	
 12967                           ;isr.c: 99:                 }
 12968                           
 12969                           
 12970                           ;isr.c: 104:     if(PIR1bits.RCIF)
 12971  1235  1283               	bcf	3,5	;RP0=0, select bank0
 12972  1236  1E8C               	btfss	12,5	;volatile
 12973  1237  2A9B               	goto	i1l650
 12974                           
 12975                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 12976  1238  146F               	bsf	_generic_status,0
 12977                           
 12978                           ;isr.c: 109:         tempo=30;
 12979  1239  301E               	movlw	30
 12980  123A  00F6               	movwf	isr@tempo
 12981  123B  3000               	movlw	0
 12982  123C  00F7               	movwf	isr@tempo+1
 12983                           
 12984                           ;isr.c: 110:         count=0;
 12985  123D  1683               	bsf	3,5	;RP0=1, select bank1
 12986  123E  01AC               	clrf	_count^(0+128)	;volatile
 12987  123F  01AD               	clrf	(_count+1)^(0+128)	;volatile
 12988                           
 12989                           ;isr.c: 111:         pointer=usart_buffer;
 12990  1240  3010               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 12991  1241  00F0               	movwf	??_isr
 12992  1242  0870               	movf	??_isr,w
 12993  1243  00B6               	movwf	_pointer^(0+128)
 12994  1244                     i1l5357:	
 12995                           ;isr.c: 112:         while(tempo)
 12996                           
 12997                           
 12998                           ;isr.c: 112:         while(tempo)
 12999  1244  0876               	movf	isr@tempo,w
 13000  1245  0477               	iorwf	isr@tempo+1,w
 13001  1246  1903               	btfsc	3,2
 13002  1247  2A77               	goto	i1l5359
 13003                           
 13004                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13005  1248  1283               	bcf	3,5	;RP0=0, select bank0
 13006  1249  1303               	bcf	3,6	;RP1=0, select bank0
 13007  124A  1E8C               	btfss	12,5	;volatile
 13008  124B  2A70               	goto	i1l5355
 13009                           
 13010                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13011  124C  081A               	movf	26,w	;volatile
 13012  124D  00F0               	movwf	??_isr
 13013  124E  1683               	bsf	3,5	;RP0=1, select bank1
 13014  124F  0836               	movf	_pointer^(0+128),w
 13015  1250  0084               	movwf	4
 13016  1251  0870               	movf	??_isr,w
 13017  1252  1783               	bsf	3,7	;select IRP bank2
 13018  1253  0080               	movwf	0
 13019                           
 13020                           ;isr.c: 118:                 if(count<32+20 -1)
 13021  1254  082D               	movf	(_count+1)^(0+128),w	;volatile
 13022  1255  3A80               	xorlw	128
 13023  1256  00FF               	movwf	127
 13024  1257  3080               	movlw	128
 13025  1258  027F               	subwf	127,w
 13026  1259  1D03               	skipz
 13027  125A  2A5D               	goto	u501_25
 13028  125B  3033               	movlw	51
 13029  125C  022C               	subwf	_count^(0+128),w	;volatile
 13030  125D                     u501_25:
 13031  125D  1803               	skipnc
 13032  125E  2A6B               	goto	i1l5353
 13033                           
 13034                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13035  125F  3001               	movlw	1
 13036  1260  1683               	bsf	3,5	;RP0=1, select bank1
 13037  1261  1303               	bcf	3,6	;RP1=0, select bank1
 13038  1262  07AC               	addwf	_count^(0+128),f	;volatile
 13039  1263  1803               	skipnc
 13040  1264  0AAD               	incf	(_count+1)^(0+128),f	;volatile
 13041  1265  3000               	movlw	0
 13042  1266  07AD               	addwf	(_count+1)^(0+128),f	;volatile
 13043                           
 13044                           ;isr.c: 121:                    pointer++;
 13045  1267  3001               	movlw	1
 13046  1268  00F0               	movwf	??_isr
 13047  1269  0870               	movf	??_isr,w
 13048  126A  07B6               	addwf	_pointer^(0+128),f
 13049  126B                     i1l5353:
 13050                           
 13051                           ;isr.c: 123:                 tempo=30;
 13052  126B  301E               	movlw	30
 13053  126C  00F6               	movwf	isr@tempo
 13054  126D  3000               	movlw	0
 13055  126E  00F7               	movwf	isr@tempo+1
 13056                           
 13057                           ;isr.c: 124:             }
 13058  126F  2A44               	goto	i1l5357
 13059  1270                     i1l5355:
 13060                           
 13061                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13062  1270  3001               	movlw	1
 13063  1271  02F6               	subwf	isr@tempo,f
 13064  1272  3000               	movlw	0
 13065  1273  1C03               	skipc
 13066  1274  03F7               	decf	isr@tempo+1,f
 13067  1275  02F7               	subwf	isr@tempo+1,f
 13068  1276  2A44               	goto	i1l5357
 13069  1277                     i1l5359:
 13070                           
 13071                           ;isr.c: 131:         (*pointer)=0;
 13072  1277  1683               	bsf	3,5	;RP0=1, select bank1
 13073  1278  1303               	bcf	3,6	;RP1=0, select bank1
 13074  1279  0836               	movf	_pointer^(0+128),w
 13075  127A  0084               	movwf	4
 13076  127B  1783               	bsf	3,7	;select IRP bank2
 13077  127C  0180               	clrf	0
 13078                           
 13079                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13080  127D  1283               	bcf	3,5	;RP0=0, select bank0
 13081  127E  1C98               	btfss	24,1	;volatile
 13082  127F  2A9B               	goto	i1l650
 13083                           
 13084                           ;isr.c: 134:            CREN=0;
 13085  1280  1218               	bcf	24,4	;volatile
 13086                           
 13087                           ;isr.c: 135:            CREN=1;
 13088  1281  1618               	bsf	24,4	;volatile
 13089                           
 13090                           ;isr.c: 136:            tempo=RCREG;
 13091  1282  081A               	movf	26,w	;volatile
 13092  1283  00F0               	movwf	??_isr
 13093  1284  01F1               	clrf	??_isr+1
 13094  1285  0870               	movf	??_isr,w
 13095  1286  00F6               	movwf	isr@tempo
 13096  1287  0871               	movf	??_isr+1,w
 13097  1288  00F7               	movwf	isr@tempo+1
 13098                           
 13099                           ;isr.c: 137:            tempo=RCREG;
 13100  1289  081A               	movf	26,w	;volatile
 13101  128A  00F0               	movwf	??_isr
 13102  128B  01F1               	clrf	??_isr+1
 13103  128C  0870               	movf	??_isr,w
 13104  128D  00F6               	movwf	isr@tempo
 13105  128E  0871               	movf	??_isr+1,w
 13106  128F  00F7               	movwf	isr@tempo+1
 13107                           
 13108                           ;isr.c: 138:            tempo=RCREG;
 13109  1290  081A               	movf	26,w	;volatile
 13110  1291  00F0               	movwf	??_isr
 13111  1292  01F1               	clrf	??_isr+1
 13112  1293  0870               	movf	??_isr,w
 13113  1294  00F6               	movwf	isr@tempo
 13114  1295  0871               	movf	??_isr+1,w
 13115  1296  00F7               	movwf	isr@tempo+1
 13116                           
 13117                           ;isr.c: 139:            usart_buffer[0]=0;
 13118  1297  1703               	bsf	3,6	;RP1=1, select bank2
 13119  1298  0190               	clrf	_usart_buffer^(0+256)	;volatile
 13120                           
 13121                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 13122  1299  1303               	bcf	3,6	;RP1=0, select bank0
 13123  129A  14EF               	bsf	_generic_status,1
 13124  129B                     i1l650:
 13125  129B  0875               	movf	??_isr+5,w
 13126  129C  00FF               	movwf	127
 13127  129D  0874               	movf	??_isr+4,w
 13128  129E  008A               	movwf	10
 13129  129F  0873               	movf	??_isr+3,w
 13130  12A0  0084               	movwf	4
 13131  12A1  0E72               	swapf	??_isr+2,w
 13132  12A2  0083               	movwf	3
 13133  12A3  0EFE               	swapf	126,f
 13134  12A4  0E7E               	swapf	126,w
 13135  12A5  0009               	retfie
 13136  12A6                     __end_of_isr:
 13137  007E                     btemp	set	126	;btemp
 13138  007E                     wtemp0	set	126
 13139                           
 13140                           	psect	intentry
 13141  0004                     __pintentry:	
 13142                           ;incstack = 0
 13143                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 13144                           
 13145  0004                     interrupt_function:
 13146  007E                     saved_w	set	btemp
 13147  0004  00FE               	movwf	btemp
 13148  0005  0E03               	swapf	3,w
 13149  0006  00F2               	movwf	??_isr+2
 13150  0007  0804               	movf	4,w
 13151  0008  00F3               	movwf	??_isr+3
 13152  0009  080A               	movf	10,w
 13153  000A  00F4               	movwf	??_isr+4
 13154  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13155  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13156  000D  087F               	movf	btemp+1,w
 13157  000E  00F5               	movwf	??_isr+5
 13158  000F  160A  118A  29BB   	ljmp	_isr
 13159                           
 13160                           	psect	config
 13161                           
 13162                           ;Config register CONFIG1 @ 0x2007
 13163                           ;	Oscillator Selection bits
 13164                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 13165                           ;	Watchdog Timer Enable bit
 13166                           ;	WDTE = ON, WDT enabled
 13167                           ;	Power-up Timer Enable bit
 13168                           ;	PWRTE = ON, PWRT enabled
 13169                           ;	RE3/MCLR pin function select bit
 13170                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 13171                           ;	Code Protection bit
 13172                           ;	CP = ON, Program memory code protection is enabled
 13173                           ;	Data Code Protection bit
 13174                           ;	CPD = OFF, Data memory code protection is disabled
 13175                           ;	Brown Out Reset Selection bits
 13176                           ;	BOREN = ON, BOR enabled
 13177                           ;	Internal External Switchover bit
 13178                           ;	IESO = ON, Internal/External Switchover mode is enabled
 13179                           ;	Fail-Safe Clock Monitor Enabled bit
 13180                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 13181                           ;	Low Voltage Programming Enable bit
 13182                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 13183                           ;	In-Circuit Debugger Mode bit
 13184                           ;	DEBUG = 0x1, unprogrammed default
 13185  2007                     	org	8199
 13186  2007  2F8C               	dw	12172
 13187                           
 13188                           ;Config register CONFIG2 @ 0x2008
 13189                           ;	Brown-out Reset Selection bit
 13190                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 13191                           ;	Flash Program Memory Self Write Enable bits
 13192                           ;	WRT = OFF, Write protection off
 13193  2008                     	org	8200
 13194  2008  3FFF               	dw	16383

Data Sizes:
    Strings     11
    Constant    64
    Data        0
    BSS         177
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     79      80
    BANK1            80     18      45
    BANK3            96      0      91
    BANK2            96      0      52

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 58
		 -> buffer(BANK3[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 58
		 -> buffer(BANK3[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK3[33]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK3[33]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK0[2]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 58
		 -> usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 58
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK0[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK0[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 52
		 -> NULL(NULL[0]), usart_buffer(BANK2[52]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_24C1025_Read_Str@buffer	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_24C1025_Read_Buffer_USART@data	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), EEPROM_24C1025_Write_Int@local(BANK0[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _mediaLeituraPt100Umidadde->___fladd
    ___fldiv->___flmul
    ___fladd->___fldiv
    _ADC_Media_10bits->___xxtofl
    _I2C_Master_Init->___lldiv
    _Decodify_Command->_EEPROM_24C1025_Fill_All
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->_EEPROM_24C1025_Write_Int
    ___fltol->___flmul
    ___flmul->__Umul8_16
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_I2C_Master_Read
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_my_delay_ms_WDT
    _EEPROM_24C1025_Read_Buffer_USART->_I2C_Master_Read
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int
    _EEPROM_24C1025_Write_Int->___fltol
    _EEPROM_24C1025_Write_Buffer->_my_delay_ms_WDT
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command
    _mediaLeituraPt100Umidadde->___fladd

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  110981
                                             77 BANK0      2     2      0
                                             15 BANK1      3     3      0
                           _ADC_init
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                         _USART_init
          _mediaLeituraPt100Umidadde
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _mediaLeituraPt100Umidadde                           10    10      0   12784
                                              4 BANK1     10    10      0
                   _ADC_Media_10bits
            _Package_Usart_is_for_me
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    2107
                                             35 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    3826
                                             61 BANK0     16     8      8
                                              0 BANK1      4     4      0
                   _ADC_Media_10bits (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      26
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Media_10bits                                     9     5      4    1477
                                             14 BANK0      9     5      4
                            ___lwdiv
                           ___xxtofl
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     261
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     613
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           7     3      4     167
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    19    19      0   95896
                                             63 BANK0      4     4      0
                                              0 BANK1     15    15      0
            _EEPROM_24C1025_Fill_All
   _EEPROM_24C1025_Read_Buffer_USART
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     184
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     255
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      44
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     416
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     416
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4   12681
                                             56 BANK0      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             35 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    4160
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             4     1      3    3099
                                             58 BANK0      4     1      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     156
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    8     3      5    2670
                                             50 BANK0      8     3      5
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 6     4      2    1777
                                             54 BANK0      6     4      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      5     3      2    2219
                                             54 BANK0      5     3      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1584
                                             50 BANK0      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        4     2      2     812
                                             46 BANK0      4     2      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     324
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  3     2      1     812
                                              5 BANK0      3     2      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2     991
                                              5 BANK0      7     5      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     624
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   4     3      1     189
                                              3 BANK0      4     3      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_Integer                                  8     6      2     161
                                              3 BANK0      8     6      2
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Byte                                     3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                            10     5      5    6059
                                             10 BANK0     10     5      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    7267
                                             23 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    6763
                                              9 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              9     5      4    7761
                                             22 BANK0      9     5      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             7     3      4    7738
                                             22 BANK0      7     3      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          13     7      6    7570
                                             10 BANK0     12     6      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Buffer_USART                    13     7      6    6904
                                              9 BANK0     12     6      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2    1090
                                              3 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    8163
                                             56 BANK0      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                            10     4      6    7912
                                             46 BANK0     10     4      6
        _EEPROM_24C1025_Write_Buffer
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    6985
                                             10 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     502
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    4898
                                              3 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  8     8      0      28
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
         ___fltol (ARG)
           ___flmul (ARG)
     _EEPROM_24C1025_Read_Buffer_USART
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
       _USART_putc
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
         _I2C_Master_RepeatedStart
         _I2C_Master_Start
         _I2C_Master_Stop
         _I2C_Master_Write
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
       _I2C_Master_RepeatedStart
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
     _EEPROM_24C1025_Write_Buffer
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
     _EEPROM_24C1025_Write_Int
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
       _my_delay_ms_WDT
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
       ___flmul
       ___fltol
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_int
     _USART_put_string
     _USART_putc
     _USART_to_Protocol
     ___flmul
     ___fltol
     _strcpy
     _strlen
   _EEPROM_Read_Integer
   _EEPROM_Write_Integer
   _I2C_Master_Init
     ___lldiv
   _USART_init
   _mediaLeituraPt100Umidadde
     _ADC_Media_10bits
       ___lwdiv
       ___xxtofl
       _captura
       _my_delay_ms
     _Package_Usart_is_for_me
     ___fladd
       _ADC_Media_10bits (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
     ___fldiv
     ___flmul
     ___xxtofl
     _my_delay_ms
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     11A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     12      2D       7       56.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      5B       9       94.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      34      11       54.2%
DATA                 0      0     11A      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Sep 27 11:34:23 2021

                               _USART_putc 1AC6                               ___fldiv@aexp 005C  
                             ___fldiv@bexp 005B                                          pc 0002  
                             ___fldiv@sign 0054            EEPROM_24C1025_Read_Buffer@range 0034  
         EEPROM_24C1025_Write_Str@chip_add 0031                                         fsr 0004  
 __end_of_EEPROM_24C1025_Read_Buffer_USART 0A50  __size_of_EEPROM_24C1025_Read_Buffer_USART 017E  
       ??_EEPROM_24C1025_Read_Buffer_USART 002F          ?_EEPROM_24C1025_Read_Buffer_USART 0029  
         _EEPROM_24C1025_Read_Buffer_USART 08D2                              _USART_put_int 1B12  
                 Decodify_Command@tempchar 00C5                        __Umul8_16@word_mpld 0026  
               __end_of_RESISTOR_ROOM_TEMP 101C               PROCULUS_VP_Write_String@text 005C  
                                      l422 0363                                        l512 1E86  
                                      l513 1E87                                        l426 0371  
                                      l507 1E62                                        l428 03C7  
                                      l517 1C0F                                        l539 1BC9  
                                      l483 1A9C                                        l805 1B4E  
                                      l868 1ACE                                        l788 1B8B  
       EEPROM_24C1025_Read_Buffer@chip_add 0033                   Decodify_Command@sizedata 00BE  
                                      _isr 11BB                                        fsr0 0004  
                                      indf 0000                  __end_of_EEPROM_Write_Byte 1E96  
                         _ADC_Media_10bits 1FAA                               ___flmul@aexp 0037  
                             ___flmul@bexp 003C                     PROCULUS_VP_Write@vetor 0054  
             ?_EEPROM_24C1025_Write_Buffer 002A                               ___flmul@sign 0036  
                             ___flmul@temp 0041                               ___flmul@prod 003D  
  __end_of_PROCULUS_Control_Register_Write 1E5A   __size_of_PROCULUS_Control_Register_Write 0038  
        ??_PROCULUS_Control_Register_Write 0053           ?_PROCULUS_Control_Register_Write 0052  
          _PROCULUS_Control_Register_Write 1E22                               ___fltol@exp1 004D  
                          __end_of_MAX_ADC 1024                                       l1303 0F7F  
                                     l1320 0FF1                                       l1312 0FD4  
                                     l1334 0C1A                                       l1431 08A2  
                                     l1432 08AC                                       l1424 088C  
                                     l1178 1124                                       l1418 084C  
                                     l1282 0E96                                       l4003 0638  
                                     l1284 0E6D                                       l1356 0D59  
                                     l4013 066A                                       l1278 0DD3  
                                     l1358 0D67                                       l4023 0699  
                                     l1393 1C5D                                       l4017 0680  
                                     l4041 0844                                       l1386 06B0  
                                     l4131 09B4                                       l4051 085F  
                                     l1299 0F5C                                       l4133 09BB  
                                     l4301 1767                                       l4061 08A0  
                                     l4053 0871                                       l4135 09BE  
                                     l4303 176A                                       l4063 0891  
                                     l4047 085B                                       l4161 0A32  
                                     l4241 0726                                       l4163 0957  
                                     l4091 0907                                       l4243 079E  
                                     l4235 077C                                       l4075 08C9  
                                     l3461 1BF8                                       l3605 1DB0  
                                     l4157 0A0B                                       l4165 0A37  
                                     l4093 090A                                       l4325 17B7  
                                     l4181 06EE                                       l3455 1C00  
                                     l4335 17DE                                       l4255 16AE  
                                     l3623 1C55                                       l4511 1B55  
                                     l3457 1BEC                                       l3465 1C04  
                                     l4089 0900                                       l3713 0B8E  
                                     l3721 0AD3                                       l4337 17E7  
                                     l4281 1705                                       l4257 16B5  
                                     l4177 06E4                                       l4433 1060  
                                     l4521 1089                                       l5411 13C6  
                                     l3723 0BB5                                       l3643 0A7C  
                                     l4259 16B8                                       l4179 06EB  
                                     l4451 0824                                       l4427 1F85  
                                     l4531 10C1                                       l4523 1099  
                                     l4507 1B53                                       l5413 13CD  
                                     l3645 0A83                                       l3813 1E3C  
                                     l5501 07DB                                       l4701 0F99  
                                     l5415 13D0                                       l3719 0BB0  
                                     l3647 0A86                                       l4375 1CC6  
                                     l3815 1E52                                       l5503 07F7  
                                     l3911 03E5                                       l4535 10CE  
                                     l4631 0E81                                       l3489 1DF2  
                                     l5513 1EDD                                       l3593 1D96  
                                     l3745 1E6C                                       l4449 0807  
                                     l3913 03ED                                       l3737 1D4F  
                                     l4705 0F9C                                       l4625 0E7A  
                                     l4617 0E33                                       l4553 0D92  
                                     l5451 1484                                       l3691 0B41  
                                     l4299 1760                                       l3747 1E6F  
                                     l3931 0412                                       l3835 10E0  
                                     l3739 1D71                                       l5611 01EB  
                                     l4723 0FE7                                       l4651 0ECA  
                                     l4643 0EA5                                       l4627 0E7C  
                                     l4635 0E90                                       l4571 0DB6  
                                     l4547 0D82                                       l5453 1487  
                                     l3597 1DA9                                       l3909 03E3  
                                     l5605 01CA                                       l5533 0062  
                                     l4653 0ECC                                       l4661 0EE1  
                                     l4581 0DCA                                       l4557 0D96  
                                     l4813 0CB3                                       l3687 0B37  
                                     l4399 1D20                                       l3783 1B77  
                                     l3927 0408                                       l3855 1110  
                                     l3839 10E9                                       l5623 0242  
                                     l5543 0089                                       l4727 0FEC  
                                     l4671 0F4E                                       l4559 0D9F  
                                     l4831 0CBE                                       l4807 0C94  
                                     l4815 0C70                                       l4751 0BEC  
                                     l5449 147D                                       l3689 0B3E  
                                     l3881 1EAC                                       l3785 1B82  
                                     l3929 040A                                       l3865 1133  
                                     l3857 1120                                       l5641 02B4  
                                     l5617 0212                                       l4905 1F26  
                                     l3793 1DBB                                       l4489 1FC6  
                                     l4657 0ED1                                       l4577 0DC6  
                                     l4833 0CDB                                       l4817 0CB8  
                                     l4753 0BF4                                       l5475 14E5  
                                     l3891 1ECD                                       l3939 0420  
                                     l5651 02F6                                       l5635 028F  
                                     l5571 0146                                       l5563 011D  
                                     l5555 00E3                                       l5539 007B  
                                     l4587 0DE0                                       l4843 0CF4  
                                     l4771 0C12                                       l4747 0BE9  
                                     l5469 14C0                                       l5477 1409  
                                     l5629 0260                                       l4925 1F43  
                                     l4693 0F8B                                       l4853 0D26  
                                     l4781 0C39                                       l5479 14EA  
                                     l3887 1EC2                                       l3879 1E9E  
                                     l3991 0602                                       l5663 031B  
                                     l5647 02D1                                       l5567 012C  
                                     l4687 0F84                                       l4679 0F71  
                                     l4695 0F8E                                       l4839 0CF2  
                                     l4767 0C0F                                       l3993 061F  
                                     l5681 0367                                       l5657 030A  
                                     l5593 01AF                                       l5577 015E  
                                     l4857 0D3F                                       l5851 0380  
                                     l5675 0357                                       l5587 018F  
                                     l4939 1F4B                                       l4787 0C45  
                                     l5771 132E                                       ?_isr 0070  
                                     l5669 0337                                       l5693 0375  
                                     l4869 0D63                                       l4981 162F  
                                     l4957 1534                                       l3999 0636  
                                     l5599 01BC                                       l4975 158F  
                                     l4967 1578                                       l5797 1358  
                                     _BETA 1048                                       STR_1 1050  
                                     STR_2 1058                                _statuspower 00BA  
                                     _CREN 00C4                                       u3005 1EA1  
                                     u3025 1EAD                                       u3035 1EB9  
                                     u3045 1EC3                                       u4030 0E57  
                                     u3215 0523                                       u4040 0E58  
                                     u4025 0E4B                                       u3315 0611  
                                     u3405 068B                                       u3255 05B7  
                                     u2553 1E04                                       u5113 1F10  
                                     u3185 04CA                                       u4225 0F73  
                                     u5043 13B1                                       u3603 09B2  
                                     u2715 1C5E                                       u4171 0F0D  
                                     u4163 0EF4                                       u4155 0ED4  
                                     u4075 0E84                                       u4180 0F21  
                                     u4172 0F0E                                       u5053 13C4  
                                     u2733 0A67                                       u3285 05EE  
                                     u4325 0FBB                                       u4181 0F22  
                                     u4173 0F13                                       u2670 1DA6  
                                     u4182 0F27                                       u4174 0F14  
                                     u5063 142B                                       u2743 0A7A  
                                     u3703 1714                                       u3623 06CF  
                                     u3295 0606                                       u3535 08B4  
                                     u3455 0868                                       u4183 0F28  
                                     u4175 0F19                                       u4176 0F1A  
                                     u2753 0AE9                                       u3633 06E2  
                                     u3385 0655                                       u2905 10F2  
                                     u5083 147B                                       u3563 08EB  
                                     u5307 17FA                                       u3723 175E  
                                     u3643 073E                                       u3395 0673  
                                     u3475 0884                                       u4515 0C8D  
                                     u3573 08FE                                       u5317 0BC8  
                                     u2773 0B35                                       u2853 1DCD  
                                     u4525 0CA2                                       u5237 12AE  
                                     u5095 1417                                       u5327 0A4A  
                                     u3583 096D                                       u2695 1B91  
                                     u2935 1111                                       u3495 0899  
                                     u5247 1DD5                                       u5337 1E0D  
                                     u5257 1B99                                       u3905 10B0  
                                     u5347 1BF4                                       u3683 1699  
                                     u5267 1D45                                       u3915 10C2  
                                     u4555 0CC2                                       u3693 16AC  
                                     u5277 1E90                                       u2965 1129  
                                     u4645 0D11                                       u4485 0C79  
                                     u5287 1C20                                       u4655 0D2F  
                                     u4575 0CCD                                       u4495 0C82  
                                     u5297 1737                                       u3785 1F91  
                                     u4665 0D4A                                       u3875 108D  
                                     u4685 1CF6                                       u3895 109B  
                                     _WPUB 0095                       PROCULUS_Buzzer@vetor 0059  
         __end_of_I2C_Master_RepeatedStart 1AC6                                       _main 12A6  
                                     _hora 007C          __size_of_EEPROM_24C1025_Write_Int 0020  
                                     btemp 007E          __size_of_EEPROM_24C1025_Write_Str 00FB  
                ?_EEPROM_24C1025_Write_Int 004E                  ?_EEPROM_24C1025_Write_Str 002A  
              __size_of_EEPROM_Read_String 0020                                       start 0012  
                         __end_of_ADC_init 1AB0                           _BALANCE_RESISTOR 104C  
                          ___fldiv@new_exp 0055         EEPROM_24C1025_Read_Buffer@sizedata 002E  
                                    ??_isr 0070                           ?_I2C_Master_Init 002E  
                         ?_I2C_Master_Read 0023                           ?_I2C_Master_Wait 0070  
                         ?_I2C_Master_Stop 0070                             ?_USART_put_int 004E  
                            ___fltol@sign1 004C                            __end_of___fladd 1000  
                                    ?_main 0070                            __end_of___fldiv 0D6F  
                                    _EEADR 010D                            __end_of___flmul 06BD  
                          __end_of___fltol 1142                                      _ANSEL 0188  
                          __end_of___lldiv 10D7                                      _T1CON 0010  
                          __end_of___lwdiv 1ED2                                      i1l632 11E2  
                                    i1l650 129B                                      i1l634 11F3  
                                    i1l636 1203                                      _RCREG 001A  
                                    _TMR1H 000F                                      _TMR1L 000E  
                                    _SPBRG 0099                                      _PORTA 0005  
                                    _PORTB 0006                                      _PORTC 0007  
                                    _PORTE 0009                                      _TRISA 0085  
                                    _TRISB 0086                                      _TRISC 0087  
          EEPROM_24C1025_Read_Int@chip_add 003C                                      _TRISE 0089  
                                    _TXREG 0019                      ADC_Media_10bits@canal 0033  
                          __end_of_captura 1AA5                               _usart_buffer 0110  
                    ADC_Media_10bits@value 0034                  EEPROM_Read_Integer@result 0028  
                                    _canal 00B9               __size_of_EEPROM_Read_Integer 002A  
                                    _count 00AC                                      _errno 00A8  
            ??_EEPROM_24C1025_Write_Buffer 0031         __size_of_EEPROM_24C1025_Write_Byte 0016  
               ?_EEPROM_24C1025_Write_Byte 0037                                      pclath 000A  
                                    status 0003                                      wtemp0 007E  
          EEPROM_24C1025_Read_Byte@mem_add 0036                               __end_of_BETA 104C  
                  __size_of_PROCULUS_Delay 001D          __size_of_PROCULUS_VP_Write_String 0017  
                              ?_USART_init 0020                            __initialization 0015  
                ?_PROCULUS_VP_Write_String 005A                                ?_USART_putc 0070  
                             __end_of_main 1399                             Send_To_MB@size 0021  
                 __end_of_EEPROM_Read_Byte 1C29                                     ??_main 00CA  
                         __end_of_Save_Log 11BB                           _USART_put_string 1D4B  
                    EEPROM_Write_Byte@addr 0023                      EEPROM_Write_Byte@dado 0020  
               __size_of_EEPROM_Write_Byte 003C                          ?_I2C_Master_Start 0070  
                EEPROM_Write_Byte@last_GIE 0024                          ?_I2C_Master_Write 0023  
                       ??_I2C_Master_Start 0023                                     _ADCON1 009F  
                       ??_I2C_Master_Write 0025                  PROCULUS_Show_Screen@vetor 0059  
                                   _ADRESH 001E                                     _ADRESL 009E  
                                   _EEDATA 010C                                     _EECON2 018D  
                               _Send_To_MB 1C96                      EEPROM_Write_Integer@i 002B  
                                   _ANSELH 0189               __end_of_PROCULUS_Show_Screen 1AFC  
               mediaLeituraPt100Umidadde@i 00C8                                     i1l5311 1205  
                                   i1l5305 11F5                                     i1l5335 1235  
                                   i1l5353 126B                                     i1l5355 1270  
                                   i1l5291 11C8                                     i1l5357 1244  
                                   i1l5359 1277                                     i1l5295 11D7  
                                   i1l5299 11E5                                     u501_25 125D  
        __end_of_EEPROM_24C1025_Write_Byte 1B12                               ?_my_delay_ms 0020  
                                   _TMR1IE 0460                                     _TMR1CS 0081  
                 ?_EEPROM_24C1025_Fill_All 0058                                     _SSPADD 0093  
                                   _TRISC3 043B                                     _TRISC4 043C  
                                   _TRISC6 043E                                     _TRISC7 043F  
                                   _SSPCON 0014                                     _SSPBUF 0013  
           EEPROM_24C1025_Fill_All@mem_add 005B                           __end_of___xxtofl 08D2  
            EEPROM_24C1025_Read_Str@buffer 002D                         PROCULUS_VP_Write@i 0059  
                 __end_of_Decodify_Command 03C8                   ?_EEPROM_24C1025_Read_Int 0036  
                 ?_EEPROM_24C1025_Read_Str 0029                   _I2C_Master_RepeatedStart 1ABB  
               ?_mediaLeituraPt100Umidadde 0070       __size_of_EEPROM_24C1025_Write_Buffer 0176  
                                ??___fladd 0065                                  ??___fldiv 004B  
                                ??___flmul 0031                                  ??___fltol 0047  
                          ??_USART_put_int 0050                                  ??___lldiv 0028  
                                   _header 00AE                          __end_of_ROOM_TEMP 1020  
                                ??___lwdiv 0024                                     _buffer 01CA  
                        _USART_to_Protocol 1F55                            USART_putc@value 0020  
                                   _minuto 007A          EEPROM_24C1025_Read_Buffer@cnt_108 0032  
                                ??_captura 0022                         ?_USART_to_Protocol 0070  
             Decodify_Command@add_24LCxxxx 00C6                                     _strcpy 105B  
                                   _strlen 1B70          EEPROM_24C1025_Read_Buffer@mem_add 002A  
         __end_of_EEPROM_24C1025_Read_Byte 1B70                         __size_of__Umul8_16 0023  
                                   saved_w 007E          EEPROM_24C1025_Write_Byte@chip_add 003C  
                                ?_ADC_init 0070             mediaLeituraPt100Umidadde@canal 00C3  
                      ??_USART_to_Protocol 0020                        __size_of_USART_init 0042  
                      __size_of_USART_putc 0010                               ___xxtofl@arg 002A  
                             ___xxtofl@exp 0029                               ___xxtofl@val 0020  
                         __end_oflog@coeff 1048                    __end_of__initialization 0036  
      PROCULUS_Control_Register_Write@size 0052                                 ___fltol@f1 0043  
                             _Board_Number 00B8                   __end_of_ADC_Media_10bits 2000  
                           __pcstackCOMMON 0070                   __size_of_PROCULUS_Buzzer 0022  
                __end_of_USART_to_Protocol 1FAA                      USART_put_string@vetor 0021  
                      my_delay_ms_WDT@time 0020              __size_of_EEPROM_Write_Integer 0032  
                 __size_of_my_delay_ms_WDT 0038                             _OPTION_REGbits 0081  
                 __end_of_BALANCE_RESISTOR 1050           __end_of_EEPROM_24C1025_Write_Int 1BC6  
         __end_of_EEPROM_24C1025_Write_Str 07B8                                 ??_ADC_init 0020  
              __end_of_EEPROM_Write_String 082F            __end_of_EEPROM_24C1025_Fill_All 1F13  
                              ?_Send_To_MB 0070                     __size_of_Send_Reply_OK 0009  
                               __pbssBANK0 006F                                 __pbssBANK1 00A0  
                               __pbssBANK2 0110                                 __pbssBANK3 0190  
                       _RESISTOR_ROOM_TEMP 1018            __end_of_EEPROM_24C1025_Read_Int 1C96  
          __end_of_EEPROM_24C1025_Read_Str 1800                   ?_Package_Usart_is_for_me 0070  
                                ?_Save_Log 0058                             _PROCULUS_Delay 1B89  
                        __end_of__Umul8_16 1C6E                                 __pmaintext 12A6  
                      Save_Log@add_datalog 0058                        _EEPROM_Read_Integer 1CBE  
               PROCULUS_Show_Screen@screen 0056                                 __pintentry 0004  
                     _PROCULUS_Show_Screen 1AE7                                    _T1CKPS0 0084  
                                  _T1CKPS1 0085                                    ?_strcpy 0020  
                                  ?_strlen 0020                                  ?___xxtofl 0020  
                                  _MAX_ADC 1020                       ?_EEPROM_Read_Integer 0023  
                    Decodify_Command@dados 00BB                EEPROM_24C1025_Read_Int@data 003D  
                                  _SSPCON2 0091           __end_of_PROCULUS_VP_Write_String 1B3F  
                  EEPROM_Read_Integer@addr 0026                                    _SSPSTAT 0094  
                 _EEPROM_24C1025_Read_Byte 1B57                                 __stringtab 1000  
                      PROCULUS_VP_Write@vp 0052                ??_EEPROM_24C1025_Write_Byte 003C  
               __end_of_EEPROM_Read_String 1BE6                     __end_of_PROCULUS_Delay 1BA6  
                 __end_of_USART_put_string 1D7E                       __size_of_my_delay_ms 0037  
                               ??_Save_Log 005C                            PROCULUS_Delay@i 0024  
                             ??_USART_init 0024                EEPROM_24C1025_Read_Str@ctrl 0033  
                             ??_USART_putc 0020                 __size_of_USART_to_Protocol 0055  
              PROCULUS_Buzzer@time_ms_x_10 0056                                    ___fladd 0D6F  
                                  ___fldiv 0BCE                   EEPROM_Write_Integer@addr 002A  
                                  ___flmul 03C8                   EEPROM_Write_Integer@dado 0025  
                                  ___fltol 10D7                                    ___lldiv 1079  
                                  ___lwdiv 1E96                              _Send_Reply_OK 1A92  
                      __size_of_Send_To_MB 0028                      ?_PROCULUS_Show_Screen 0056  
                                  _captura 1A9B                           _statuspower_memo 007B  
                                  __ptext1 150F                                    __ptext2 0BCE  
                                  __ptext3 0D6F                                    __ptext4 1B3F  
                                  __ptext5 1FAA                                    __ptext6 1DB3  
                                  __ptext7 1A9B                                    __ptext8 082F  
                                  __ptext9 1F13                          ??_PROCULUS_Buzzer 0058  
                                  _destino 00B7                          ?_EEPROM_Read_Byte 0070  
                          __size_of_strcpy 001E                            __size_of_strlen 0019  
                             __size_of_isr 00EB                                 ??___xxtofl 0024  
                       ??_EEPROM_Read_Byte 0020                                    _segundo 007D  
                 __size_of_I2C_Master_Init 0031                   __size_of_I2C_Master_Read 0035  
                           _usart_protocol 0190                      ??_EEPROM_Read_Integer 0025  
                 __size_of_I2C_Master_Wait 0021                   __size_of_I2C_Master_Stop 0009  
            EEPROM_24C1025_Write_Int@local 0056                                    _pointer 00B6  
            EEPROM_24C1025_Write_Byte@data 003B                                    clrloop0 1A82  
                       __end_of_USART_init 1F55            __end_of_Package_Usart_is_for_me 1B57  
                       __end_of_USART_putc 1AD6                          ADC_Media_10bits@i 0036  
                     end_of_initialization 0036                   _EEPROM_24C1025_Write_Int 1BA6  
                        ??_my_delay_ms_WDT 0024                   _EEPROM_24C1025_Write_Str 06BD  
               ??_I2C_Master_RepeatedStart 0023                            ?_PROCULUS_Delay 0020  
                          my_delay_ms@time 0020            EEPROM_24C1025_Write_Buffer@data 002F  
          EEPROM_24C1025_Write_Buffer@ctrl 0036                  __size_of_I2C_Master_Start 0011  
                __size_of_I2C_Master_Write 000B                          ?_Decodify_Command 0070  
                          ___lldiv@divisor 0020                            ___lldiv@counter 002D  
     EEPROM_24C1025_Read_Buffer_USART@data 002E       EEPROM_24C1025_Read_Buffer_USART@ctrl 0034  
                       ??_Decodify_Command 005F                                  _RCSTAbits 0018  
              ??_mediaLeituraPt100Umidadde 00BF                           I2C_Master_Init@c 002E  
                         I2C_Master_Read@a 0023                             ?_Send_Reply_OK 0070  
                _EEPROM_24C1025_Write_Byte 1AFC           __size_of_EEPROM_24C1025_Fill_All 0041  
                                  strlen@s 0024                         USART_to_Protocol@i 0022  
                                _PORTAbits 0005                                  _PORTBbits 0006  
                                _PORTCbits 0007                           _Delay_Led_Memory 00B4  
             ??_EEPROM_24C1025_Read_Buffer 0030              EEPROM_24C1025_Write_Str@range 0032  
                                _ROOM_TEMP 101C                                ___fladd@grs 00BE  
         __size_of_EEPROM_24C1025_Read_Int 0028    EEPROM_24C1025_Read_Buffer_USART@cnt_117 0031  
         __size_of_EEPROM_24C1025_Read_Str 017A                              ___xxtofl@sign 0028  
      __end_of_EEPROM_24C1025_Write_Buffer 150F                _EEPROM_24C1025_Write_Buffer 1399  
  EEPROM_24C1025_Read_Buffer_USART@mem_add 0029                                ___fldiv@grs 0057  
                              ___fldiv@rem 0050       PROCULUS_Control_Register_Write@vetor 0054  
         EEPROM_24C1025_Write_Buffer@count 0033            EEPROM_24C1025_Write_Int@mem_add 004E  
         EEPROM_24C1025_Write_Buffer@range 0035                          __size_of_ADC_init 000B  
                  Decodify_Command@tempint 00BF                      PROCULUS_VP_Write@size 0056  
          EEPROM_24C1025_Read_Str@chip_add 0031                                ___flmul@grs 0038  
                 _PROCULUS_VP_Write_String 1B28                                  _TXSTAbits 0098  
      __size_of_EEPROM_24C1025_Read_Buffer 017E                          ?_ADC_Media_10bits 002E  
                   PROCULUS_Delay@tempo_ms 0020                     ??_PROCULUS_Show_Screen 0058  
                       ??_ADC_Media_10bits 0032                      __end_of_USART_put_int 1B28  
                              _BAUDCTLbits 0187                             __end_of_strcpy 1079  
                           __end_of_strlen 1B89                        start_initialization 0015  
                _mediaLeituraPt100Umidadde 150F                                __end_of_isr 12A6  
                              USART_init@i 0025                               ??_Send_To_MB 0021  
 EEPROM_24C1025_Read_Buffer_USART@chip_add 0032                          ??_I2C_Master_Init 0032  
                        ??_I2C_Master_Read 0025                          ??_I2C_Master_Wait 0020  
                        ??_I2C_Master_Stop 0023               __end_of_EEPROM_Write_Integer 1D4B  
         EEPROM_24C1025_Write_Int@chip_add 0055                        Decodify_Command@add 00BD  
                          ??_Send_Reply_OK 0025                          __size_of_Save_Log 0079  
                     I2C_Master_Wait@tempo 0022                                  __Umul8_16 1C4B  
            mediaLeituraPt100Umidadde@Temp 00C4                         __end_of_Send_To_MB 1CBE  
         __size_of_Package_Usart_is_for_me 0018                                   ??_strcpy 0021  
                                 ??_strlen 0022   EEPROM_24C1025_Read_Buffer_USART@sizedata 002D  
               ??_EEPROM_24C1025_Read_Byte 003A         EEPROM_24C1025_Write_Buffer@mem_add 002A  
                                ___fladd@a 0061                                  ___fladd@b 005D  
         EEPROM_24C1025_Write_Byte@mem_add 0037                                  ___fldiv@a 0043  
                                ___fldiv@b 0047                                  ___flmul@a 002D  
                                ___flmul@b 0029                                __pbssCOMMON 0078  
                                ___latbits 0002                              __pcstackBANK0 0020  
                            __pcstackBANK1 00BB                          _PROCULUS_VP_Write 07B8  
                        __size_of___xxtofl 00A3                         ?_PROCULUS_VP_Write 0052  
             __size_of_EEPROM_Write_String 002B                           _I2C_Master_Start 1AD6  
                         _I2C_Master_Write 1AB0                        ??_PROCULUS_VP_Write 0057  
                           _tempodecorrido 00AA                          ?_USART_put_string 0021  
                          _PROCULUS_Buzzer 1C29                           ___lwdiv@dividend 0022  
           Package_Usart_is_for_me@retorno 0020                         ??_USART_put_string 0023  
                                 ?___fladd 005D                                   ?___fldiv 0043  
                  _EEPROM_24C1025_Fill_All 1ED2                                   ?___flmul 0029  
                                 ?___fltol 0043                                   ?___lldiv 0020  
                               ?__Umul8_16 0020                         _EEPROM_Read_String 1BC6  
                                 ?___lwdiv 0020         __end_of_EEPROM_24C1025_Read_Buffer 0BCE  
               _EEPROM_24C1025_Read_Buffer 0A50                                   ?_captura 0020  
                                __pstrings 1000                            _my_delay_ms_WDT 1DEA  
                  _EEPROM_24C1025_Read_Int 1C6E                    _EEPROM_24C1025_Read_Str 1686  
                   EEPROM_Read_Integer@ptr 0027                 ??_EEPROM_24C1025_Write_Int 0054  
               ??_EEPROM_24C1025_Write_Str 002F                        ?_EEPROM_Read_String 0023  
                __end_of_PROCULUS_VP_Write 07FF                 EEPROM_24C1025_Read_Str@cnt 0030  
                                 _ADC_init 1AA5                           ___lwdiv@quotient 0025  
                  EEPROM_Write_Integer@ptr 0029                           ??_PROCULUS_Delay 0022  
           EEPROM_24C1025_Read_Buffer@data 002F             EEPROM_24C1025_Read_Buffer@ctrl 0035  
                            ??_my_delay_ms 0024                  __size_of_EEPROM_Read_Byte 0022  
                        interrupt_function 0004            EEPROM_24C1025_Write_Str@mem_add 002A  
                     ??_EEPROM_Read_String 0024                                  clear_ram0 1A81  
                                 _PIE1bits 008C                                   _PIR1bits 000C  
         PROCULUS_Control_Register_Write@i 0055                     Decodify_Command@OutPut 00C1  
                          _PT100_TRANSLADA 1010                            _Delay_Led_Usart 00B2  
             EEPROM_24C1025_Read_Byte@data 003C                __end_of_EEPROM_Read_Integer 1CE8  
                               _ADCON0bits 001F                                __stringbase 100F  
                               _ADCON1bits 009F                  __size_of_Decodify_Command 038E  
                     _EEPROM_Write_Integer 1D19             EEPROM_24C1025_Read_Int@mem_add 0036  
                                main@reset 006D                 ??_PROCULUS_VP_Write_String 005D  
                      I2C_Master_Read@temp 0027                    __end_of_PROCULUS_Buzzer 1C4B  
       __size_of_mediaLeituraPt100Umidadde 0177                             _generic_status 006F  
                               _EECON1bits 018C                                   _Save_Log 1142  
                ??_EEPROM_24C1025_Fill_All 005A                        __end_of_my_delay_ms 1DEA  
             EEPROM_24C1025_Read_Str@range 0032                    __end_of_my_delay_ms_WDT 1E22  
                             my_delay_ms@i 0026                                ??__Umul8_16 0022  
        __size_of_I2C_Master_RepeatedStart 000B                           __size_of___fladd 0291  
                ??_EEPROM_24C1025_Read_Int 003A                    _Package_Usart_is_for_me 1B3F  
                         __size_of___fldiv 01A1                  ??_EEPROM_24C1025_Read_Str 002E  
                         __size_of___flmul 02F5                  ?_I2C_Master_RepeatedStart 0070  
                         __size_of___fltol 006B                           __size_of___lldiv 005E  
                         __size_of___lwdiv 003C                         __end_of__stringtab 1010  
      EEPROM_24C1025_Write_Buffer@chip_add 0034                        USART_put_string@ptr 0023  
                         __size_of_captura 000A                      ?_EEPROM_Write_Integer 0025  
                             _Temperatura0 00A4                               _Temperatura1 00A0  
                          _I2C_Master_Init 1CE8                            _I2C_Master_Read 1D7E  
                                 ___xxtofl 082F                 __size_of_PROCULUS_VP_Write 0047  
                          _I2C_Master_Wait 1BE6           EEPROM_24C1025_Read_Byte@chip_add 003B  
                          _I2C_Master_Stop 1A89                  __size_of_ADC_Media_10bits 0056  
                          ___lwdiv@divisor 0020                            ___lwdiv@counter 0027  
                                 __ptext10 1CE8                                   __ptext11 1079  
                                 __ptext20 03C8                                   __ptext12 003A  
                                 __ptext21 1C4B                                   __ptext13 105B  
                                 __ptext30 1B89                                   __ptext22 1B28  
                                 __ptext14 1F55                                   __ptext31 0804  
                                 __ptext23 1B70                                   __ptext15 1C96  
                                 __ptext40 1C6E                                   __ptext32 1D19  
                                 __ptext24 07B8                                   __ptext16 1A92  
                                 __ptext41 1B57                                   __ptext33 1E5A  
                                 __ptext25 1AE7                                   __ptext17 1D4B  
                                 __ptext50 1DEA                                   __ptext42 0A50  
                                 __ptext34 1BC6                                   __ptext26 1C29  
                                 __ptext18 1142                                   __ptext51 1AB0  
                                 __ptext43 08D2                                   __ptext35 1CBE  
                                 __ptext27 1E96                                   __ptext19 10D7  
                                 __ptext52 1A89                                   __ptext44 1AC6  
                                 __ptext36 1C07                                   __ptext28 1E22  
                                 __ptext53 1AD6                                   __ptext45 1ABB  
                                 __ptext37 06BD                                   __ptext29 1B12  
                                 __ptext54 1BE6                                   __ptext46 1D7E  
                                 __ptext38 1AFC                                   __ptext55 1AA5  
                                 __ptext47 1ED2                                   __ptext39 1686  
                                 __ptext56 11BB                                   __ptext48 1BA6  
                                 __ptext49 1399                         USART_put_int@value 004E  
                           _PT100_CONSTANT 1014                                 strcpy@from 0020  
                            __size_of_main 00F3               EEPROM_24C1025_Fill_All@value 0058  
               PROCULUS_VP_Write_String@vp 005A                    __end_of_PT100_TRANSLADA 1014  
      EEPROM_24C1025_Write_Buffer@sizedata 002E                                _milisegundo 00B0  
        __end_of_mediaLeituraPt100Umidadde 1686                             _Delay_Led_Tmr0 0078  
            __size_of_PROCULUS_Show_Screen 0015                        _EEPROM_Write_String 0804  
                                 log@coeff 1024                   __end_of_I2C_Master_Start 1AE7  
                 __end_of_I2C_Master_Write 1ABB                                 _INTCONbits 000B  
                   __end_of_PT100_CONSTANT 1018                                   isr@tempo 0076  
                     EEPROM_Read_Byte@addr 0022                     EEPROM_Read_String@addr 0025  
                   EEPROM_Read_String@dado 0023                           my_delay_ms_WDT@i 0026  
                                 intlevel1 0000                           ?_PROCULUS_Buzzer 0056  
                        USART_put_int@dado 0051                           _EEPROM_Read_Byte 1C07  
                              _my_delay_ms 1DB3                       ?_EEPROM_Write_String 0025  
                         ___lldiv@dividend 0024                     __size_of_USART_put_int 0016  
             EEPROM_24C1025_Write_Int@data 0052                       EEPROM_Read_Integer@i 002A  
                  EEPROM_Write_String@addr 0027                    EEPROM_Write_String@dado 0025  
                       USART_init@baudrate 0020                                  stringcode 100A  
                               _OSCCONbits 008F      EEPROM_24C1025_Read_Buffer_USART@range 0033  
                ??_Package_Usart_is_for_me 0020                           ?_my_delay_ms_WDT 0020  
                    __end_of_Send_Reply_OK 1A9B                    __end_of_I2C_Master_Init 1D19  
                  __end_of_I2C_Master_Read 1DB3                    __end_of_I2C_Master_Wait 1C07  
                  __end_of_I2C_Master_Stop 1A92               EEPROM_24C1025_Write_Str@data 002E  
             EEPROM_24C1025_Write_Str@ctrl 0033                ?_EEPROM_24C1025_Read_Buffer 002A  
          EEPROM_24C1025_Fill_All@chip_add 005A                     ??_EEPROM_Write_Integer 0027  
                   __Umul8_16@multiplicand 0020            USART_to_Protocol@usart_protocol 0024  
                         _Decodify_Command 003A                  __size_of_USART_put_string 0033  
                         ___lldiv@quotient 0029                          I2C_Master_Write@d 0023  
                                 strcpy@cp 0023                                   strlen@cp 0023  
                                 strcpy@to 0022                                   stringdir 100A  
                                 stringtab 1000                                _SSPCON2bits 0091  
                        _EEPROM_Write_Byte 1E5A             EEPROM_24C1025_Read_Str@mem_add 0029  
                            ___fladd@signs 00BB                         ?_EEPROM_Write_Byte 0020  
                    ??_EEPROM_Write_String 0026                               ___fladd@aexp 00BC  
                             ___fladd@bexp 00BD          __size_of_EEPROM_24C1025_Read_Byte 0019  
                ?_EEPROM_24C1025_Read_Byte 0036                        EEPROM_Read_String@c 0026  
                     __Umul8_16@multiplier 0028                        ??_EEPROM_Write_Byte 0021  
                        __Umul8_16@product 0024                                 _USART_init 1F13  
