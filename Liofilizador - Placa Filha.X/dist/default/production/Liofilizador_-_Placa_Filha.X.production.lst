

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Sep 27 22:01:54 2021

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9s 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	plic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text19,local,class=CODE,merge=1,delta=2
    26                           	psect	text25,local,class=CODE,merge=1,delta=2
    27                           	psect	text32,local,class=CODE,merge=1,delta=2
    28                           	psect	text40,local,class=CODE,merge=1,delta=2
    29                           	psect	text58,local,class=CODE,merge=1,delta=2
    30                           	psect	text68,local,class=CODE,merge=1,delta=2
    31                           	psect	text69,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	psect	pa_nodes0,global,class=CODE,delta=2
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F886 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  0086                     	;# 
   108  0087                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  0105                     	;# 
   133  0107                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0185                     	;# 
   142  0187                     	;# 
   143  0188                     	;# 
   144  0189                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  008F                     	;# 
   342  0090                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0097                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009A                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  0105                     	;# 
   361  0107                     	;# 
   362  0108                     	;# 
   363  0109                     	;# 
   364  010C                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0185                     	;# 
   370  0187                     	;# 
   371  0188                     	;# 
   372  0189                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  000E                     	;# 
   390  000F                     	;# 
   391  0010                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001D                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  0081                     	;# 
   410  0085                     	;# 
   411  0086                     	;# 
   412  0087                     	;# 
   413  0089                     	;# 
   414  008C                     	;# 
   415  008D                     	;# 
   416  008E                     	;# 
   417  008F                     	;# 
   418  0090                     	;# 
   419  0091                     	;# 
   420  0092                     	;# 
   421  0093                     	;# 
   422  0093                     	;# 
   423  0093                     	;# 
   424  0094                     	;# 
   425  0095                     	;# 
   426  0096                     	;# 
   427  0097                     	;# 
   428  0098                     	;# 
   429  0099                     	;# 
   430  009A                     	;# 
   431  009B                     	;# 
   432  009C                     	;# 
   433  009D                     	;# 
   434  009E                     	;# 
   435  009F                     	;# 
   436  0105                     	;# 
   437  0107                     	;# 
   438  0108                     	;# 
   439  0109                     	;# 
   440  010C                     	;# 
   441  010C                     	;# 
   442  010D                     	;# 
   443  010E                     	;# 
   444  010F                     	;# 
   445  0185                     	;# 
   446  0187                     	;# 
   447  0188                     	;# 
   448  0189                     	;# 
   449  018C                     	;# 
   450  018D                     	;# 
   451  0000                     	;# 
   452  0001                     	;# 
   453  0002                     	;# 
   454  0003                     	;# 
   455  0004                     	;# 
   456  0005                     	;# 
   457  0006                     	;# 
   458  0007                     	;# 
   459  0009                     	;# 
   460  000A                     	;# 
   461  000B                     	;# 
   462  000C                     	;# 
   463  000D                     	;# 
   464  000E                     	;# 
   465  000E                     	;# 
   466  000F                     	;# 
   467  0010                     	;# 
   468  0011                     	;# 
   469  0012                     	;# 
   470  0013                     	;# 
   471  0014                     	;# 
   472  0015                     	;# 
   473  0015                     	;# 
   474  0016                     	;# 
   475  0017                     	;# 
   476  0018                     	;# 
   477  0019                     	;# 
   478  001A                     	;# 
   479  001B                     	;# 
   480  001B                     	;# 
   481  001C                     	;# 
   482  001D                     	;# 
   483  001E                     	;# 
   484  001F                     	;# 
   485  0081                     	;# 
   486  0085                     	;# 
   487  0086                     	;# 
   488  0087                     	;# 
   489  0089                     	;# 
   490  008C                     	;# 
   491  008D                     	;# 
   492  008E                     	;# 
   493  008F                     	;# 
   494  0090                     	;# 
   495  0091                     	;# 
   496  0092                     	;# 
   497  0093                     	;# 
   498  0093                     	;# 
   499  0093                     	;# 
   500  0094                     	;# 
   501  0095                     	;# 
   502  0096                     	;# 
   503  0097                     	;# 
   504  0098                     	;# 
   505  0099                     	;# 
   506  009A                     	;# 
   507  009B                     	;# 
   508  009C                     	;# 
   509  009D                     	;# 
   510  009E                     	;# 
   511  009F                     	;# 
   512  0105                     	;# 
   513  0107                     	;# 
   514  0108                     	;# 
   515  0109                     	;# 
   516  010C                     	;# 
   517  010C                     	;# 
   518  010D                     	;# 
   519  010E                     	;# 
   520  010F                     	;# 
   521  0185                     	;# 
   522  0187                     	;# 
   523  0188                     	;# 
   524  0189                     	;# 
   525  018C                     	;# 
   526  018D                     	;# 
   527  0000                     	;# 
   528  0001                     	;# 
   529  0002                     	;# 
   530  0003                     	;# 
   531  0004                     	;# 
   532  0005                     	;# 
   533  0006                     	;# 
   534  0007                     	;# 
   535  0009                     	;# 
   536  000A                     	;# 
   537  000B                     	;# 
   538  000C                     	;# 
   539  000D                     	;# 
   540  000E                     	;# 
   541  000E                     	;# 
   542  000F                     	;# 
   543  0010                     	;# 
   544  0011                     	;# 
   545  0012                     	;# 
   546  0013                     	;# 
   547  0014                     	;# 
   548  0015                     	;# 
   549  0015                     	;# 
   550  0016                     	;# 
   551  0017                     	;# 
   552  0018                     	;# 
   553  0019                     	;# 
   554  001A                     	;# 
   555  001B                     	;# 
   556  001B                     	;# 
   557  001C                     	;# 
   558  001D                     	;# 
   559  001E                     	;# 
   560  001F                     	;# 
   561  0081                     	;# 
   562  0085                     	;# 
   563  0086                     	;# 
   564  0087                     	;# 
   565  0089                     	;# 
   566  008C                     	;# 
   567  008D                     	;# 
   568  008E                     	;# 
   569  008F                     	;# 
   570  0090                     	;# 
   571  0091                     	;# 
   572  0092                     	;# 
   573  0093                     	;# 
   574  0093                     	;# 
   575  0093                     	;# 
   576  0094                     	;# 
   577  0095                     	;# 
   578  0096                     	;# 
   579  0097                     	;# 
   580  0098                     	;# 
   581  0099                     	;# 
   582  009A                     	;# 
   583  009B                     	;# 
   584  009C                     	;# 
   585  009D                     	;# 
   586  009E                     	;# 
   587  009F                     	;# 
   588  0105                     	;# 
   589  0107                     	;# 
   590  0108                     	;# 
   591  0109                     	;# 
   592  010C                     	;# 
   593  010C                     	;# 
   594  010D                     	;# 
   595  010E                     	;# 
   596  010F                     	;# 
   597  0185                     	;# 
   598  0187                     	;# 
   599  0188                     	;# 
   600  0189                     	;# 
   601  018C                     	;# 
   602  018D                     	;# 
   603  0000                     	;# 
   604  0001                     	;# 
   605  0002                     	;# 
   606  0003                     	;# 
   607  0004                     	;# 
   608  0005                     	;# 
   609  0006                     	;# 
   610  0007                     	;# 
   611  0009                     	;# 
   612  000A                     	;# 
   613  000B                     	;# 
   614  000C                     	;# 
   615  000D                     	;# 
   616  000E                     	;# 
   617  000E                     	;# 
   618  000F                     	;# 
   619  0010                     	;# 
   620  0011                     	;# 
   621  0012                     	;# 
   622  0013                     	;# 
   623  0014                     	;# 
   624  0015                     	;# 
   625  0015                     	;# 
   626  0016                     	;# 
   627  0017                     	;# 
   628  0018                     	;# 
   629  0019                     	;# 
   630  001A                     	;# 
   631  001B                     	;# 
   632  001B                     	;# 
   633  001C                     	;# 
   634  001D                     	;# 
   635  001E                     	;# 
   636  001F                     	;# 
   637  0081                     	;# 
   638  0085                     	;# 
   639  0086                     	;# 
   640  0087                     	;# 
   641  0089                     	;# 
   642  008C                     	;# 
   643  008D                     	;# 
   644  008E                     	;# 
   645  008F                     	;# 
   646  0090                     	;# 
   647  0091                     	;# 
   648  0092                     	;# 
   649  0093                     	;# 
   650  0093                     	;# 
   651  0093                     	;# 
   652  0094                     	;# 
   653  0095                     	;# 
   654  0096                     	;# 
   655  0097                     	;# 
   656  0098                     	;# 
   657  0099                     	;# 
   658  009A                     	;# 
   659  009B                     	;# 
   660  009C                     	;# 
   661  009D                     	;# 
   662  009E                     	;# 
   663  009F                     	;# 
   664  0105                     	;# 
   665  0107                     	;# 
   666  0108                     	;# 
   667  0109                     	;# 
   668  010C                     	;# 
   669  010C                     	;# 
   670  010D                     	;# 
   671  010E                     	;# 
   672  010F                     	;# 
   673  0185                     	;# 
   674  0187                     	;# 
   675  0188                     	;# 
   676  0189                     	;# 
   677  018C                     	;# 
   678  018D                     	;# 
   679  0000                     	;# 
   680  0001                     	;# 
   681  0002                     	;# 
   682  0003                     	;# 
   683  0004                     	;# 
   684  0005                     	;# 
   685  0006                     	;# 
   686  0007                     	;# 
   687  0009                     	;# 
   688  000A                     	;# 
   689  000B                     	;# 
   690  000C                     	;# 
   691  000D                     	;# 
   692  000E                     	;# 
   693  000E                     	;# 
   694  000F                     	;# 
   695  0010                     	;# 
   696  0011                     	;# 
   697  0012                     	;# 
   698  0013                     	;# 
   699  0014                     	;# 
   700  0015                     	;# 
   701  0015                     	;# 
   702  0016                     	;# 
   703  0017                     	;# 
   704  0018                     	;# 
   705  0019                     	;# 
   706  001A                     	;# 
   707  001B                     	;# 
   708  001B                     	;# 
   709  001C                     	;# 
   710  001D                     	;# 
   711  001E                     	;# 
   712  001F                     	;# 
   713  0081                     	;# 
   714  0085                     	;# 
   715  0086                     	;# 
   716  0087                     	;# 
   717  0089                     	;# 
   718  008C                     	;# 
   719  008D                     	;# 
   720  008E                     	;# 
   721  008F                     	;# 
   722  0090                     	;# 
   723  0091                     	;# 
   724  0092                     	;# 
   725  0093                     	;# 
   726  0093                     	;# 
   727  0093                     	;# 
   728  0094                     	;# 
   729  0095                     	;# 
   730  0096                     	;# 
   731  0097                     	;# 
   732  0098                     	;# 
   733  0099                     	;# 
   734  009A                     	;# 
   735  009B                     	;# 
   736  009C                     	;# 
   737  009D                     	;# 
   738  009E                     	;# 
   739  009F                     	;# 
   740  0105                     	;# 
   741  0107                     	;# 
   742  0108                     	;# 
   743  0109                     	;# 
   744  010C                     	;# 
   745  010C                     	;# 
   746  010D                     	;# 
   747  010E                     	;# 
   748  010F                     	;# 
   749  0185                     	;# 
   750  0187                     	;# 
   751  0188                     	;# 
   752  0189                     	;# 
   753  018C                     	;# 
   754  018D                     	;# 
   755  0000                     	;# 
   756  0001                     	;# 
   757  0002                     	;# 
   758  0003                     	;# 
   759  0004                     	;# 
   760  0005                     	;# 
   761  0006                     	;# 
   762  0007                     	;# 
   763  0009                     	;# 
   764  000A                     	;# 
   765  000B                     	;# 
   766  000C                     	;# 
   767  000D                     	;# 
   768  000E                     	;# 
   769  000E                     	;# 
   770  000F                     	;# 
   771  0010                     	;# 
   772  0011                     	;# 
   773  0012                     	;# 
   774  0013                     	;# 
   775  0014                     	;# 
   776  0015                     	;# 
   777  0015                     	;# 
   778  0016                     	;# 
   779  0017                     	;# 
   780  0018                     	;# 
   781  0019                     	;# 
   782  001A                     	;# 
   783  001B                     	;# 
   784  001B                     	;# 
   785  001C                     	;# 
   786  001D                     	;# 
   787  001E                     	;# 
   788  001F                     	;# 
   789  0081                     	;# 
   790  0085                     	;# 
   791  0086                     	;# 
   792  0087                     	;# 
   793  0089                     	;# 
   794  008C                     	;# 
   795  008D                     	;# 
   796  008E                     	;# 
   797  008F                     	;# 
   798  0090                     	;# 
   799  0091                     	;# 
   800  0092                     	;# 
   801  0093                     	;# 
   802  0093                     	;# 
   803  0093                     	;# 
   804  0094                     	;# 
   805  0095                     	;# 
   806  0096                     	;# 
   807  0097                     	;# 
   808  0098                     	;# 
   809  0099                     	;# 
   810  009A                     	;# 
   811  009B                     	;# 
   812  009C                     	;# 
   813  009D                     	;# 
   814  009E                     	;# 
   815  009F                     	;# 
   816  0105                     	;# 
   817  0107                     	;# 
   818  0108                     	;# 
   819  0109                     	;# 
   820  010C                     	;# 
   821  010C                     	;# 
   822  010D                     	;# 
   823  010E                     	;# 
   824  010F                     	;# 
   825  0185                     	;# 
   826  0187                     	;# 
   827  0188                     	;# 
   828  0189                     	;# 
   829  018C                     	;# 
   830  018D                     	;# 
   831  0000                     	;# 
   832  0001                     	;# 
   833  0002                     	;# 
   834  0003                     	;# 
   835  0004                     	;# 
   836  0005                     	;# 
   837  0006                     	;# 
   838  0007                     	;# 
   839  0009                     	;# 
   840  000A                     	;# 
   841  000B                     	;# 
   842  000C                     	;# 
   843  000D                     	;# 
   844  000E                     	;# 
   845  000E                     	;# 
   846  000F                     	;# 
   847  0010                     	;# 
   848  0011                     	;# 
   849  0012                     	;# 
   850  0013                     	;# 
   851  0014                     	;# 
   852  0015                     	;# 
   853  0015                     	;# 
   854  0016                     	;# 
   855  0017                     	;# 
   856  0018                     	;# 
   857  0019                     	;# 
   858  001A                     	;# 
   859  001B                     	;# 
   860  001B                     	;# 
   861  001C                     	;# 
   862  001D                     	;# 
   863  001E                     	;# 
   864  001F                     	;# 
   865  0081                     	;# 
   866  0085                     	;# 
   867  0086                     	;# 
   868  0087                     	;# 
   869  0089                     	;# 
   870  008C                     	;# 
   871  008D                     	;# 
   872  008E                     	;# 
   873  008F                     	;# 
   874  0090                     	;# 
   875  0091                     	;# 
   876  0092                     	;# 
   877  0093                     	;# 
   878  0093                     	;# 
   879  0093                     	;# 
   880  0094                     	;# 
   881  0095                     	;# 
   882  0096                     	;# 
   883  0097                     	;# 
   884  0098                     	;# 
   885  0099                     	;# 
   886  009A                     	;# 
   887  009B                     	;# 
   888  009C                     	;# 
   889  009D                     	;# 
   890  009E                     	;# 
   891  009F                     	;# 
   892  0105                     	;# 
   893  0107                     	;# 
   894  0108                     	;# 
   895  0109                     	;# 
   896  010C                     	;# 
   897  010C                     	;# 
   898  010D                     	;# 
   899  010E                     	;# 
   900  010F                     	;# 
   901  0185                     	;# 
   902  0187                     	;# 
   903  0188                     	;# 
   904  0189                     	;# 
   905  018C                     	;# 
   906  018D                     	;# 
   907  0000                     	;# 
   908  0001                     	;# 
   909  0002                     	;# 
   910  0003                     	;# 
   911  0004                     	;# 
   912  0005                     	;# 
   913  0006                     	;# 
   914  0007                     	;# 
   915  0009                     	;# 
   916  000A                     	;# 
   917  000B                     	;# 
   918  000C                     	;# 
   919  000D                     	;# 
   920  000E                     	;# 
   921  000E                     	;# 
   922  000F                     	;# 
   923  0010                     	;# 
   924  0011                     	;# 
   925  0012                     	;# 
   926  0013                     	;# 
   927  0014                     	;# 
   928  0015                     	;# 
   929  0015                     	;# 
   930  0016                     	;# 
   931  0017                     	;# 
   932  0018                     	;# 
   933  0019                     	;# 
   934  001A                     	;# 
   935  001B                     	;# 
   936  001B                     	;# 
   937  001C                     	;# 
   938  001D                     	;# 
   939  001E                     	;# 
   940  001F                     	;# 
   941  0081                     	;# 
   942  0085                     	;# 
   943  0086                     	;# 
   944  0087                     	;# 
   945  0089                     	;# 
   946  008C                     	;# 
   947  008D                     	;# 
   948  008E                     	;# 
   949  008F                     	;# 
   950  0090                     	;# 
   951  0091                     	;# 
   952  0092                     	;# 
   953  0093                     	;# 
   954  0093                     	;# 
   955  0093                     	;# 
   956  0094                     	;# 
   957  0095                     	;# 
   958  0096                     	;# 
   959  0097                     	;# 
   960  0098                     	;# 
   961  0099                     	;# 
   962  009A                     	;# 
   963  009B                     	;# 
   964  009C                     	;# 
   965  009D                     	;# 
   966  009E                     	;# 
   967  009F                     	;# 
   968  0105                     	;# 
   969  0107                     	;# 
   970  0108                     	;# 
   971  0109                     	;# 
   972  010C                     	;# 
   973  010C                     	;# 
   974  010D                     	;# 
   975  010E                     	;# 
   976  010F                     	;# 
   977  0185                     	;# 
   978  0187                     	;# 
   979  0188                     	;# 
   980  0189                     	;# 
   981  018C                     	;# 
   982  018D                     	;# 
   983  0000                     	;# 
   984  0001                     	;# 
   985  0002                     	;# 
   986  0003                     	;# 
   987  0004                     	;# 
   988  0005                     	;# 
   989  0006                     	;# 
   990  0007                     	;# 
   991  0009                     	;# 
   992  000A                     	;# 
   993  000B                     	;# 
   994  000C                     	;# 
   995  000D                     	;# 
   996  000E                     	;# 
   997  000E                     	;# 
   998  000F                     	;# 
   999  0010                     	;# 
  1000  0011                     	;# 
  1001  0012                     	;# 
  1002  0013                     	;# 
  1003  0014                     	;# 
  1004  0015                     	;# 
  1005  0015                     	;# 
  1006  0016                     	;# 
  1007  0017                     	;# 
  1008  0018                     	;# 
  1009  0019                     	;# 
  1010  001A                     	;# 
  1011  001B                     	;# 
  1012  001B                     	;# 
  1013  001C                     	;# 
  1014  001D                     	;# 
  1015  001E                     	;# 
  1016  001F                     	;# 
  1017  0081                     	;# 
  1018  0085                     	;# 
  1019  0086                     	;# 
  1020  0087                     	;# 
  1021  0089                     	;# 
  1022  008C                     	;# 
  1023  008D                     	;# 
  1024  008E                     	;# 
  1025  008F                     	;# 
  1026  0090                     	;# 
  1027  0091                     	;# 
  1028  0092                     	;# 
  1029  0093                     	;# 
  1030  0093                     	;# 
  1031  0093                     	;# 
  1032  0094                     	;# 
  1033  0095                     	;# 
  1034  0096                     	;# 
  1035  0097                     	;# 
  1036  0098                     	;# 
  1037  0099                     	;# 
  1038  009A                     	;# 
  1039  009B                     	;# 
  1040  009C                     	;# 
  1041  009D                     	;# 
  1042  009E                     	;# 
  1043  009F                     	;# 
  1044  0105                     	;# 
  1045  0107                     	;# 
  1046  0108                     	;# 
  1047  0109                     	;# 
  1048  010C                     	;# 
  1049  010C                     	;# 
  1050  010D                     	;# 
  1051  010E                     	;# 
  1052  010F                     	;# 
  1053  0185                     	;# 
  1054  0187                     	;# 
  1055  0188                     	;# 
  1056  0189                     	;# 
  1057  018C                     	;# 
  1058  018D                     	;# 
  1059  0000                     	;# 
  1060  0001                     	;# 
  1061  0002                     	;# 
  1062  0003                     	;# 
  1063  0004                     	;# 
  1064  0005                     	;# 
  1065  0006                     	;# 
  1066  0007                     	;# 
  1067  0009                     	;# 
  1068  000A                     	;# 
  1069  000B                     	;# 
  1070  000C                     	;# 
  1071  000D                     	;# 
  1072  000E                     	;# 
  1073  000E                     	;# 
  1074  000F                     	;# 
  1075  0010                     	;# 
  1076  0011                     	;# 
  1077  0012                     	;# 
  1078  0013                     	;# 
  1079  0014                     	;# 
  1080  0015                     	;# 
  1081  0015                     	;# 
  1082  0016                     	;# 
  1083  0017                     	;# 
  1084  0018                     	;# 
  1085  0019                     	;# 
  1086  001A                     	;# 
  1087  001B                     	;# 
  1088  001B                     	;# 
  1089  001C                     	;# 
  1090  001D                     	;# 
  1091  001E                     	;# 
  1092  001F                     	;# 
  1093  0081                     	;# 
  1094  0085                     	;# 
  1095  0086                     	;# 
  1096  0087                     	;# 
  1097  0089                     	;# 
  1098  008C                     	;# 
  1099  008D                     	;# 
  1100  008E                     	;# 
  1101  008F                     	;# 
  1102  0090                     	;# 
  1103  0091                     	;# 
  1104  0092                     	;# 
  1105  0093                     	;# 
  1106  0093                     	;# 
  1107  0093                     	;# 
  1108  0094                     	;# 
  1109  0095                     	;# 
  1110  0096                     	;# 
  1111  0097                     	;# 
  1112  0098                     	;# 
  1113  0099                     	;# 
  1114  009A                     	;# 
  1115  009B                     	;# 
  1116  009C                     	;# 
  1117  009D                     	;# 
  1118  009E                     	;# 
  1119  009F                     	;# 
  1120  0105                     	;# 
  1121  0107                     	;# 
  1122  0108                     	;# 
  1123  0109                     	;# 
  1124  010C                     	;# 
  1125  010C                     	;# 
  1126  010D                     	;# 
  1127  010E                     	;# 
  1128  010F                     	;# 
  1129  0185                     	;# 
  1130  0187                     	;# 
  1131  0188                     	;# 
  1132  0189                     	;# 
  1133  018C                     	;# 
  1134  018D                     	;# 
  1135                           
  1136                           	psect	idataCOMMON
  1137  0000                     __pidataCOMMON:
  1138                           
  1139                           	psect	idataBANK1
  1140  0000                     __pidataBANK1:
  1141                           
  1142                           	psect	strings
  1143  1000                     __pstrings:
  1144  1000                     stringtab:
  1145  1000                     __stringtab:
  1146                           
  1147                           ;	String table - string pointers are 1 byte each
  1148  1000  1BFF               	btfsc	btemp+1,7
  1149  1001  280A               	ljmp	stringcode
  1150  1002  1383               	bcf	3,7
  1151  1003  187F               	btfsc	btemp+1,0
  1152  1004  1783               	bsf	3,7
  1153  1005  0800               	movf	0,w
  1154  1006  0A84               	incf	4,f
  1155  1007  1903               	skipnz
  1156  1008  0AFF               	incf	btemp+1,f
  1157  1009  0008               	return
  1158  100A                     stringcode:
  1159  100A                     stringdir:
  1160  100A  3010               	movlw	high stringdir
  1161  100B  008A               	movwf	10
  1162  100C  0804               	movf	4,w
  1163  100D  0A84               	incf	4,f
  1164  100E  0782               	addwf	2,f
  1165  100F                     __stringbase:
  1166  100F  3400               	retlw	0
  1167  1010                     __end_of__stringtab:
  1168  1010                     log@coeff:
  1169  1010  3400               	retlw	0
  1170  1011  3400               	retlw	0
  1171  1012  3400               	retlw	0
  1172  1013  3400               	retlw	0
  1173  1014  34C4               	retlw	196
  1174  1015  34FF               	retlw	255
  1175  1016  347F               	retlw	127
  1176  1017  343F               	retlw	63
  1177  1018  3480               	retlw	128
  1178  1019  34EF               	retlw	239
  1179  101A  34FF               	retlw	255
  1180  101B  34BE               	retlw	190
  1181  101C  3490               	retlw	144
  1182  101D  34E1               	retlw	225
  1183  101E  34A9               	retlw	169
  1184  101F  343E               	retlw	62
  1185  1020  34EC               	retlw	236
  1186  1021  3482               	retlw	130
  1187  1022  3476               	retlw	118
  1188  1023  34BE               	retlw	190
  1189  1024  3482               	retlw	130
  1190  1025  34AD               	retlw	173
  1191  1026  342B               	retlw	43
  1192  1027  343E               	retlw	62
  1193  1028  340E               	retlw	14
  1194  1029  343C               	retlw	60
  1195  102A  34C3               	retlw	195
  1196  102B  34BD               	retlw	189
  1197  102C  3487               	retlw	135
  1198  102D  34D1               	retlw	209
  1199  102E  3413               	retlw	19
  1200  102F  343D               	retlw	61
  1201  1030  3441               	retlw	65
  1202  1031  3478               	retlw	120
  1203  1032  34D3               	retlw	211
  1204  1033  34BB               	retlw	187
  1205  1034                     __end_oflog@coeff:
  1206  1034                     _BETA:
  1207                           
  1208                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1209  1034  3400               	retlw	0
  1210  1035  3460               	retlw	96
  1211  1036  3478               	retlw	120
  1212  1037  3445               	retlw	69
  1213  1038                     __end_of_BETA:
  1214  1038                     _BALANCE_RESISTOR:
  1215                           
  1216                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1217  1038  3400               	retlw	0
  1218  1039  3440               	retlw	64
  1219  103A  341C               	retlw	28
  1220  103B  3446               	retlw	70
  1221  103C                     __end_of_BALANCE_RESISTOR:
  1222  0019                     _TXREG	set	25
  1223  0018                     _RCSTAbits	set	24
  1224  001A                     _RCREG	set	26
  1225  000E                     _TMR1L	set	14
  1226  000F                     _TMR1H	set	15
  1227  000C                     _PIR1bits	set	12
  1228  001E                     _ADRESH	set	30
  1229  001F                     _ADCON0bits	set	31
  1230  0005                     _PORTAbits	set	5
  1231  0007                     _PORTCbits	set	7
  1232  0010                     _T1CON	set	16
  1233  0006                     _PORTBbits	set	6
  1234  0009                     _PORTE	set	9
  1235  0007                     _PORTC	set	7
  1236  0005                     _PORTA	set	5
  1237  0013                     _SSPBUF	set	19
  1238  000B                     _INTCONbits	set	11
  1239  0014                     _SSPCON	set	20
  1240  0006                     _PORTB	set	6
  1241  00C4                     _CREN	set	196
  1242  0081                     _TMR1CS	set	129
  1243  0085                     _T1CKPS1	set	133
  1244  0084                     _T1CKPS0	set	132
  1245  008C                     _PIE1bits	set	140
  1246  0099                     _SPBRG	set	153
  1247  0098                     _TXSTAbits	set	152
  1248  009E                     _ADRESL	set	158
  1249  009F                     _ADCON1bits	set	159
  1250  009F                     _ADCON1	set	159
  1251  0095                     _WPUB	set	149
  1252  0081                     _OPTION_REGbits	set	129
  1253  0089                     _TRISE	set	137
  1254  0087                     _TRISC	set	135
  1255  0086                     _TRISB	set	134
  1256  0085                     _TRISA	set	133
  1257  008F                     _OSCCONbits	set	143
  1258  0091                     _SSPCON2bits	set	145
  1259  0094                     _SSPSTAT	set	148
  1260  0093                     _SSPADD	set	147
  1261  0091                     _SSPCON2	set	145
  1262  043F                     _TRISC7	set	1087
  1263  043E                     _TRISC6	set	1086
  1264  0460                     _TMR1IE	set	1120
  1265  043C                     _TRISC4	set	1084
  1266  043B                     _TRISC3	set	1083
  1267  010C                     _EEDATA	set	268
  1268  010D                     _EEADR	set	269
  1269  0187                     _BAUDCTLbits	set	391
  1270  018D                     _EECON2	set	397
  1271  018C                     _EECON1bits	set	396
  1272  0189                     _ANSELH	set	393
  1273  0188                     _ANSEL	set	392
  1274  103C                     STR_1:
  1275  103C  3476               	retlw	118	;'v'
  1276  103D  3431               	retlw	49	;'1'
  1277  103E  342E               	retlw	46	;'.'
  1278  103F  3430               	retlw	48	;'0'
  1279  1040  342E               	retlw	46	;'.'
  1280  1041  3432               	retlw	50	;'2'
  1281  1042  3434               	retlw	52	;'4'
  1282  1043  3400               	retlw	0
  1283  1044                     STR_2:
  1284  1044  344F               	retlw	79	;'O'
  1285  1045  344B               	retlw	75	;'K'
  1286  1046  3400               	retlw	0
  1287                           
  1288                           	psect	cinit
  1289  0015                     start_initialization:	
  1290                           ; #config settings
  1291                           
  1292  0015                     __initialization:
  1293                           
  1294                           ; Initialize objects allocated to BANK1
  1295  0015  1683               	bsf	3,5	;RP0=1, select bank1
  1296                           
  1297                           ;initializer for _RL0Status
  1298  0016  3001               	movlw	1
  1299  0017  00ED               	movwf	__pdataBANK1& (0+127)
  1300                           
  1301                           ;initializer for _RL1Status
  1302  0018  00FC               	movwf	__pdataCOMMON& (0+127)
  1303  0019  3090               	movlw	low __pbssBANK3
  1304                           
  1305                           ; Clear objects allocated to BANK3
  1306  001A  1783               	bsf	3,7	;select IRP bank2
  1307  001B  0084               	movwf	4
  1308  001C  30EA               	movlw	low (__pbssBANK3+90)
  1309  001D  120A  158A  2000  120A  118A  	fcall	clear_ram0
  1310                           
  1311                           ; Clear objects allocated to BANK2
  1312  0022  3010               	movlw	low __pbssBANK2
  1313  0023  0084               	movwf	4
  1314  0024  3065               	movlw	low (__pbssBANK2+85)
  1315  0025  120A  158A  2000  120A  118A  	fcall	clear_ram0
  1316  002A  30DD               	movlw	low __pbssBANK1
  1317                           
  1318                           ; Clear objects allocated to BANK1
  1319  002B  1383               	bcf	3,7	;select IRP bank0
  1320  002C  0084               	movwf	4
  1321  002D  30ED               	movlw	low (__pbssBANK1+16)
  1322  002E  120A  158A  2000   	fcall	clear_ram0
  1323                           
  1324                           ; Clear objects allocated to COMMON
  1325  0031  01F0               	clrf	__pbssCOMMON& (0+127)
  1326  0032  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1327  0033  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1328  0034  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1329  0035  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1330  0036  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1331  0037                     end_of_initialization:	
  1332                           ;End of C runtime variable initialization code
  1333                           
  1334  0037                     __end_of__initialization:
  1335  0037  0183               	clrf	3
  1336  0038  120A  158A  281D   	ljmp	l7406	;jump to C main() function
  1337                           
  1338                           	psect	bssCOMMON
  1339  0070                     __pbssCOMMON:
  1340  0070                     _minuto:
  1341  0070                     	ds	1
  1342  0071                     _destino:
  1343  0071                     	ds	1
  1344  0072                     _canal:
  1345  0072                     	ds	1
  1346  0073                     _Histerese1:
  1347  0073                     	ds	1
  1348  0074                     _hora:
  1349  0074                     	ds	1
  1350  0075                     _segundo:
  1351  0075                     	ds	1
  1352                           
  1353                           	psect	dataCOMMON
  1354  007C                     __pdataCOMMON:
  1355  007C                     _RL1Status:
  1356  007C                     	ds	1
  1357                           
  1358                           	psect	bssBANK1
  1359  00DD                     __pbssBANK1:
  1360  00DD                     _SetPoint1:
  1361  00DD                     	ds	4
  1362  00E1                     _SetPoint0:
  1363  00E1                     	ds	4
  1364  00E5                     _Board_Number:
  1365  00E5                     	ds	1
  1366  00E6                     _TempoCNT_1:
  1367  00E6                     	ds	1
  1368  00E7                     _TempoOFF_1:
  1369  00E7                     	ds	1
  1370  00E8                     _TempoON_1:
  1371  00E8                     	ds	1
  1372  00E9                     _TempoCNT_0:
  1373  00E9                     	ds	1
  1374  00EA                     _TempoOFF_0:
  1375  00EA                     	ds	1
  1376  00EB                     _TempoON_0:
  1377  00EB                     	ds	1
  1378  00EC                     _generic_status:
  1379  00EC                     	ds	1
  1380                           
  1381                           	psect	dataBANK1
  1382  00ED                     __pdataBANK1:
  1383  00ED                     _RL0Status:
  1384  00ED                     	ds	1
  1385                           
  1386                           	psect	bssBANK3
  1387  0190                     __pbssBANK3:
  1388  0190                     _Temperatura1:
  1389  0190                     	ds	4
  1390  0194                     _Temperatura0:
  1391  0194                     	ds	4
  1392  0198                     _Histerese0:
  1393  0198                     	ds	4
  1394  019C                     _tempodecorrido:
  1395  019C                     	ds	2
  1396  019E                     _count:
  1397  019E                     	ds	2
  1398  01A0                     _header:
  1399  01A0                     	ds	2
  1400  01A2                     _Status1:
  1401  01A2                     	ds	2
  1402  01A4                     _Status0:
  1403  01A4                     	ds	2
  1404  01A6                     _milisegundo:
  1405  01A6                     	ds	2
  1406  01A8                     _Delay_Led_Usart:
  1407  01A8                     	ds	2
  1408  01AA                     _Delay_Led_Tmr0:
  1409  01AA                     	ds	2
  1410  01AC                     _Delay_Led_Memory:
  1411  01AC                     	ds	2
  1412  01AE                     _pointer:
  1413  01AE                     	ds	1
  1414  01AF                     _modoAutonomo1:
  1415  01AF                     	ds	1
  1416  01B0                     _usart_protocol:
  1417  01B0                     	ds	58
  1418                           
  1419                           	psect	bssBANK2
  1420  0110                     __pbssBANK2:
  1421  0110                     _usart_buffer:
  1422  0110                     	ds	52
  1423  0144                     _buffer:
  1424  0144                     	ds	33
  1425                           
  1426                           	psect	clrtext
  1427  0800                     clear_ram0:	
  1428                           ;	Called with FSR containing the base address, and
  1429                           ;	W with the last address+1
  1430                           
  1431  0800  0064               	clrwdt	;clear the watchdog before getting into this loop
  1432  0801                     clrloop0:
  1433  0801  0180               	clrf	0	;clear RAM location pointed to by FSR
  1434  0802  0A84               	incf	4,f	;increment pointer
  1435  0803  0604               	xorwf	4,w	;XOR with final address
  1436  0804  1903               	btfsc	3,2	;have we reached the end yet?
  1437  0805  3400               	retlw	0	;all done for this memory range, return
  1438  0806  0604               	xorwf	4,w	;XOR again to restore value
  1439  0807  2801               	goto	clrloop0	;do the next byte
  1440                           
  1441                           	psect	cstackBANK1
  1442  00A0                     __pcstackBANK1:
  1443  00A0                     ?_eval_poly:
  1444  00A0                     ?___fltol:	
  1445                           ; 4 bytes @ 0x0
  1446                           
  1447  00A0                     ?___fldiv:	
  1448                           ; 4 bytes @ 0x0
  1449                           
  1450  00A0                     ___fltol@f1:	
  1451                           ; 4 bytes @ 0x0
  1452                           
  1453  00A0                     ___fldiv@a:	
  1454                           ; 4 bytes @ 0x0
  1455                           
  1456  00A0                     eval_poly@x:	
  1457                           ; 4 bytes @ 0x0
  1458                           
  1459                           
  1460                           ; 4 bytes @ 0x0
  1461  00A0                     	ds	4
  1462  00A4                     ??___fltol:
  1463  00A4                     eval_poly@d:	
  1464                           ; 1 bytes @ 0x4
  1465                           
  1466  00A4                     ___fldiv@b:	
  1467                           ; 1 bytes @ 0x4
  1468                           
  1469                           
  1470                           ; 4 bytes @ 0x4
  1471  00A4                     	ds	1
  1472  00A5                     eval_poly@n:
  1473                           
  1474                           ; 2 bytes @ 0x5
  1475  00A5                     	ds	2
  1476  00A7                     ??_eval_poly:
  1477                           
  1478                           ; 1 bytes @ 0x7
  1479  00A7                     	ds	1
  1480  00A8                     ?_USART_put_int:
  1481  00A8                     ?_EEPROM_24C1025_Write_Int:	
  1482                           ; 1 bytes @ 0x8
  1483                           
  1484  00A8                     ??___fldiv:	
  1485                           ; 1 bytes @ 0x8
  1486                           
  1487  00A8                     USART_put_int@value:	
  1488                           ; 1 bytes @ 0x8
  1489                           
  1490  00A8                     EEPROM_24C1025_Write_Int@mem_add:	
  1491                           ; 2 bytes @ 0x8
  1492                           
  1493                           
  1494                           ; 4 bytes @ 0x8
  1495  00A8                     	ds	2
  1496  00AA                     ?_PROCULUS_Control_Register_Write:
  1497  00AA                     ?_PROCULUS_VP_Write:	
  1498                           ; 1 bytes @ 0xA
  1499                           
  1500  00AA                     PROCULUS_Control_Register_Write@size:	
  1501                           ; 1 bytes @ 0xA
  1502                           
  1503  00AA                     PROCULUS_VP_Write@vp:	
  1504                           ; 1 bytes @ 0xA
  1505                           
  1506                           
  1507                           ; 2 bytes @ 0xA
  1508  00AA                     	ds	1
  1509  00AB                     ??_PROCULUS_Control_Register_Write:
  1510                           
  1511                           ; 1 bytes @ 0xB
  1512  00AB                     	ds	1
  1513  00AC                     PROCULUS_Control_Register_Write@vetor:
  1514  00AC                     EEPROM_24C1025_Write_Int@data:	
  1515                           ; 1 bytes @ 0xC
  1516                           
  1517  00AC                     PROCULUS_VP_Write@vetor:	
  1518                           ; 2 bytes @ 0xC
  1519                           
  1520  00AC                     ___fldiv@rem:	
  1521                           ; 2 bytes @ 0xC
  1522                           
  1523  00AC                     eval_poly@res:	
  1524                           ; 4 bytes @ 0xC
  1525                           
  1526                           
  1527                           ; 4 bytes @ 0xC
  1528  00AC                     	ds	1
  1529  00AD                     PROCULUS_Control_Register_Write@i:
  1530                           
  1531                           ; 1 bytes @ 0xD
  1532  00AD                     	ds	1
  1533  00AE                     ?_PROCULUS_Show_Screen:
  1534  00AE                     ?_PROCULUS_Buzzer:	
  1535                           ; 1 bytes @ 0xE
  1536                           
  1537  00AE                     EEPROM_24C1025_Write_Int@chip_add:	
  1538                           ; 1 bytes @ 0xE
  1539                           
  1540  00AE                     PROCULUS_VP_Write@size:	
  1541                           ; 1 bytes @ 0xE
  1542                           
  1543  00AE                     PROCULUS_Buzzer@time_ms_x_10:	
  1544                           ; 1 bytes @ 0xE
  1545                           
  1546  00AE                     PROCULUS_Show_Screen@screen:	
  1547                           ; 2 bytes @ 0xE
  1548                           
  1549                           
  1550                           ; 2 bytes @ 0xE
  1551  00AE                     	ds	1
  1552  00AF                     ??_PROCULUS_VP_Write:
  1553  00AF                     EEPROM_24C1025_Write_Int@local:	
  1554                           ; 1 bytes @ 0xF
  1555                           
  1556                           
  1557                           ; 2 bytes @ 0xF
  1558  00AF                     	ds	1
  1559  00B0                     ?_log:
  1560  00B0                     ___fldiv@sign:	
  1561                           ; 4 bytes @ 0x10
  1562                           
  1563  00B0                     PROCULUS_Buzzer@vetor:	
  1564                           ; 1 bytes @ 0x10
  1565                           
  1566  00B0                     PROCULUS_Show_Screen@vetor:	
  1567                           ; 2 bytes @ 0x10
  1568                           
  1569  00B0                     log@x:	
  1570                           ; 3 bytes @ 0x10
  1571                           
  1572                           
  1573                           ; 4 bytes @ 0x10
  1574  00B0                     	ds	1
  1575  00B1                     ?_Save_Log:
  1576  00B1                     ?_EEPROM_24C1025_Fill_All:	
  1577                           ; 1 bytes @ 0x11
  1578                           
  1579  00B1                     PROCULUS_VP_Write@i:	
  1580                           ; 1 bytes @ 0x11
  1581                           
  1582  00B1                     EEPROM_24C1025_Fill_All@value:	
  1583                           ; 1 bytes @ 0x11
  1584                           
  1585  00B1                     ___fldiv@new_exp:	
  1586                           ; 2 bytes @ 0x11
  1587                           
  1588  00B1                     Save_Log@add_datalog:	
  1589                           ; 2 bytes @ 0x11
  1590                           
  1591                           
  1592                           ; 4 bytes @ 0x11
  1593  00B1                     	ds	1
  1594  00B2                     ?_PROCULUS_VP_Write_String:
  1595  00B2                     PROCULUS_VP_Write_String@vp:	
  1596                           ; 1 bytes @ 0x12
  1597                           
  1598                           
  1599                           ; 2 bytes @ 0x12
  1600  00B2                     	ds	1
  1601  00B3                     EEPROM_24C1025_Fill_All@chip_add:
  1602  00B3                     ___fldiv@grs:	
  1603                           ; 1 bytes @ 0x13
  1604                           
  1605                           
  1606                           ; 4 bytes @ 0x13
  1607  00B3                     	ds	1
  1608  00B4                     PROCULUS_VP_Write_String@text:
  1609  00B4                     EEPROM_24C1025_Fill_All@mem_add:	
  1610                           ; 1 bytes @ 0x14
  1611                           
  1612                           
  1613                           ; 4 bytes @ 0x14
  1614  00B4                     	ds	3
  1615  00B7                     ___fldiv@bexp:
  1616                           
  1617                           ; 1 bytes @ 0x17
  1618  00B7                     	ds	1
  1619  00B8                     ___fldiv@aexp:
  1620                           
  1621                           ; 1 bytes @ 0x18
  1622  00B8                     	ds	1
  1623  00B9                     ??_Load_Work:
  1624  00B9                     ?_ADC_Read_NTC:	
  1625                           ; 1 bytes @ 0x19
  1626                           
  1627                           
  1628                           ; 4 bytes @ 0x19
  1629  00B9                     	ds	4
  1630  00BD                     ??_Decodify_Command:
  1631  00BD                     ADC_Read_NTC@calc:	
  1632                           ; 1 bytes @ 0x1D
  1633                           
  1634                           
  1635                           ; 4 bytes @ 0x1D
  1636  00BD                     	ds	2
  1637  00BF                     Decodify_Command@dados:
  1638                           
  1639                           ; 2 bytes @ 0x1F
  1640  00BF                     	ds	2
  1641  00C1                     Decodify_Command@add:
  1642  00C1                     ADC_Read_NTC@B:	
  1643                           ; 1 bytes @ 0x21
  1644                           
  1645                           
  1646                           ; 2 bytes @ 0x21
  1647  00C1                     	ds	1
  1648  00C2                     Decodify_Command@sizedata:
  1649                           
  1650                           ; 1 bytes @ 0x22
  1651  00C2                     	ds	1
  1652  00C3                     Decodify_Command@tempint:
  1653  00C3                     ADC_Read_NTC@resistencia:	
  1654                           ; 2 bytes @ 0x23
  1655                           
  1656                           
  1657                           ; 4 bytes @ 0x23
  1658  00C3                     	ds	2
  1659  00C5                     Decodify_Command@OutPut:
  1660                           
  1661                           ; 4 bytes @ 0x25
  1662  00C5                     	ds	2
  1663  00C7                     ADC_Read_NTC@i:
  1664                           
  1665                           ; 1 bytes @ 0x27
  1666  00C7                     	ds	1
  1667  00C8                     ADC_Read_NTC@value:
  1668                           
  1669                           ; 2 bytes @ 0x28
  1670  00C8                     	ds	1
  1671  00C9                     Decodify_Command@tempchar:
  1672                           
  1673                           ; 1 bytes @ 0x29
  1674  00C9                     	ds	1
  1675  00CA                     Decodify_Command@add_24LCxxxx:
  1676  00CA                     ADC_Read_NTC@temperatura:	
  1677                           ; 4 bytes @ 0x2A
  1678                           
  1679                           
  1680                           ; 4 bytes @ 0x2A
  1681  00CA                     	ds	4
  1682  00CE                     _mediatemperaturaNTC$2354:
  1683                           
  1684                           ; 4 bytes @ 0x2E
  1685  00CE                     	ds	4
  1686  00D2                     mediatemperaturaNTC@canal:
  1687                           
  1688                           ; 1 bytes @ 0x32
  1689  00D2                     	ds	1
  1690  00D3                     mediatemperaturaNTC@Temp:
  1691                           
  1692                           ; 4 bytes @ 0x33
  1693  00D3                     	ds	4
  1694  00D7                     mediatemperaturaNTC@i:
  1695                           
  1696                           ; 1 bytes @ 0x37
  1697  00D7                     	ds	1
  1698  00D8                     ??_main:
  1699                           
  1700                           ; 1 bytes @ 0x38
  1701  00D8                     	ds	3
  1702  00DB                     main@reset:
  1703                           
  1704                           ; 2 bytes @ 0x3B
  1705  00DB                     	ds	2
  1706                           
  1707                           	psect	cstackCOMMON
  1708  0076                     __pcstackCOMMON:
  1709  0076                     ?_I2C_Master_Start:
  1710  0076                     ?_I2C_Master_Stop:	
  1711                           ; 1 bytes @ 0x0
  1712                           
  1713  0076                     ?_I2C_Master_RepeatedStart:	
  1714                           ; 1 bytes @ 0x0
  1715                           
  1716  0076                     ?_USART_putc:	
  1717                           ; 1 bytes @ 0x0
  1718                           
  1719  0076                     ?_ADC_init:	
  1720                           ; 1 bytes @ 0x0
  1721                           
  1722  0076                     ?_Load_Work:	
  1723                           ; 1 bytes @ 0x0
  1724                           
  1725  0076                     ?_mediatemperaturaNTC:	
  1726                           ; 1 bytes @ 0x0
  1727                           
  1728  0076                     ?_Auto_Relay0:	
  1729                           ; 1 bytes @ 0x0
  1730                           
  1731  0076                     ?_Auto_Relay1:	
  1732                           ; 1 bytes @ 0x0
  1733                           
  1734  0076                     ?_Decodify_Command:	
  1735                           ; 1 bytes @ 0x0
  1736                           
  1737  0076                     ?_USART_to_Protocol:	
  1738                           ; 1 bytes @ 0x0
  1739                           
  1740  0076                     ?_Send_To_MB:	
  1741                           ; 1 bytes @ 0x0
  1742                           
  1743  0076                     ?_Send_Reply_OK:	
  1744                           ; 1 bytes @ 0x0
  1745                           
  1746  0076                     ?_EEPROM_Read_Byte:	
  1747                           ; 1 bytes @ 0x0
  1748                           
  1749  0076                     ?_Package_Usart_is_for_me:	
  1750                           ; 1 bytes @ 0x0
  1751                           
  1752  0076                     ?_Rele0Ligado:	
  1753                           ; 1 bytes @ 0x0
  1754                           
  1755  0076                     ?_Rele1Ligado:	
  1756                           ; 1 bytes @ 0x0
  1757                           
  1758  0076                     ?_Rele0Desligado:	
  1759                           ; 1 bytes @ 0x0
  1760                           
  1761  0076                     ?_Rele1Desligado:	
  1762                           ; 1 bytes @ 0x0
  1763                           
  1764  0076                     ?_I2C_Master_Wait:	
  1765                           ; 1 bytes @ 0x0
  1766                           
  1767  0076                     ?_main:	
  1768                           ; 1 bytes @ 0x0
  1769                           
  1770  0076                     ?_isr:	
  1771                           ; 1 bytes @ 0x0
  1772                           
  1773  0076                     ??_isr:	
  1774                           ; 1 bytes @ 0x0
  1775                           
  1776  0076                     ADC_Read_NTC@canal:	
  1777                           ; 1 bytes @ 0x0
  1778                           
  1779                           
  1780                           ; 1 bytes @ 0x0
  1781  0076                     	ds	4
  1782  007A                     isr@tempo:
  1783                           
  1784                           ; 2 bytes @ 0x4
  1785  007A                     	ds	2
  1786                           
  1787                           	psect	cstackBANK0
  1788  0020                     __pcstackBANK0:
  1789  0020                     ?___fleq:
  1790  0020                     ?_my_delay_ms_WDT:	
  1791                           ; 1 bit 
  1792                           
  1793  0020                     ??_USART_putc:	
  1794                           ; 1 bytes @ 0x0
  1795                           
  1796  0020                     ??_ADC_init:	
  1797                           ; 1 bytes @ 0x0
  1798                           
  1799  0020                     ?_USART_init:	
  1800                           ; 1 bytes @ 0x0
  1801                           
  1802  0020                     ??_USART_to_Protocol:	
  1803                           ; 1 bytes @ 0x0
  1804                           
  1805  0020                     ?_strcpy:	
  1806                           ; 1 bytes @ 0x0
  1807                           
  1808  0020                     ?_EEPROM_Write_Byte:	
  1809                           ; 1 bytes @ 0x0
  1810                           
  1811  0020                     ??_EEPROM_Read_Byte:	
  1812                           ; 1 bytes @ 0x0
  1813                           
  1814  0020                     ?_my_delay_ms:	
  1815                           ; 1 bytes @ 0x0
  1816                           
  1817  0020                     ??_Package_Usart_is_for_me:	
  1818                           ; 1 bytes @ 0x0
  1819                           
  1820  0020                     ??_Rele0Ligado:	
  1821                           ; 1 bytes @ 0x0
  1822                           
  1823  0020                     ??_Rele1Ligado:	
  1824                           ; 1 bytes @ 0x0
  1825                           
  1826  0020                     ??_Rele0Desligado:	
  1827                           ; 1 bytes @ 0x0
  1828                           
  1829  0020                     ??_Rele1Desligado:	
  1830                           ; 1 bytes @ 0x0
  1831                           
  1832  0020                     ?_PROCULUS_Delay:	
  1833                           ; 1 bytes @ 0x0
  1834                           
  1835  0020                     ??_I2C_Master_Wait:	
  1836                           ; 1 bytes @ 0x0
  1837                           
  1838  0020                     ?_strlen:	
  1839                           ; 1 bytes @ 0x0
  1840                           
  1841  0020                     ?_captura:	
  1842                           ; 2 bytes @ 0x0
  1843                           
  1844  0020                     ?__Umul8_16:	
  1845                           ; 2 bytes @ 0x0
  1846                           
  1847  0020                     ?___lwdiv:	
  1848                           ; 2 bytes @ 0x0
  1849                           
  1850  0020                     ?___lldiv:	
  1851                           ; 2 bytes @ 0x0
  1852                           
  1853  0020                     EEPROM_Write_Byte@dado:	
  1854                           ; 4 bytes @ 0x0
  1855                           
  1856  0020                     Package_Usart_is_for_me@retorno:	
  1857                           ; 1 bytes @ 0x0
  1858                           
  1859  0020                     USART_putc@value:	
  1860                           ; 1 bytes @ 0x0
  1861                           
  1862  0020                     __Umul8_16@multiplicand:	
  1863                           ; 1 bytes @ 0x0
  1864                           
  1865  0020                     strcpy@from:	
  1866                           ; 1 bytes @ 0x0
  1867                           
  1868  0020                     PROCULUS_Delay@tempo_ms:	
  1869                           ; 1 bytes @ 0x0
  1870                           
  1871  0020                     ___lwdiv@divisor:	
  1872                           ; 2 bytes @ 0x0
  1873                           
  1874  0020                     my_delay_ms@time:	
  1875                           ; 2 bytes @ 0x0
  1876                           
  1877  0020                     my_delay_ms_WDT@time:	
  1878                           ; 4 bytes @ 0x0
  1879                           
  1880  0020                     USART_init@baudrate:	
  1881                           ; 4 bytes @ 0x0
  1882                           
  1883  0020                     ___lldiv@divisor:	
  1884                           ; 4 bytes @ 0x0
  1885                           
  1886  0020                     ___fleq@ff1:	
  1887                           ; 4 bytes @ 0x0
  1888                           
  1889                           
  1890                           ; 4 bytes @ 0x0
  1891  0020                     	ds	1
  1892  0021                     ??_strcpy:
  1893  0021                     ??_Send_To_MB:	
  1894                           ; 1 bytes @ 0x1
  1895                           
  1896  0021                     ?_USART_put_string:	
  1897                           ; 1 bytes @ 0x1
  1898                           
  1899  0021                     ??_EEPROM_Write_Byte:	
  1900                           ; 1 bytes @ 0x1
  1901                           
  1902  0021                     Send_To_MB@size:	
  1903                           ; 1 bytes @ 0x1
  1904                           
  1905  0021                     USART_put_string@vetor:	
  1906                           ; 1 bytes @ 0x1
  1907                           
  1908                           
  1909                           ; 2 bytes @ 0x1
  1910  0021                     	ds	1
  1911  0022                     ??_strlen:
  1912  0022                     ??_captura:	
  1913                           ; 1 bytes @ 0x2
  1914                           
  1915  0022                     ??_PROCULUS_Delay:	
  1916                           ; 1 bytes @ 0x2
  1917                           
  1918  0022                     ??__Umul8_16:	
  1919                           ; 1 bytes @ 0x2
  1920                           
  1921  0022                     I2C_Master_Wait@tempo:	
  1922                           ; 1 bytes @ 0x2
  1923                           
  1924  0022                     EEPROM_Read_Byte@addr:	
  1925                           ; 1 bytes @ 0x2
  1926                           
  1927  0022                     strcpy@to:	
  1928                           ; 1 bytes @ 0x2
  1929                           
  1930  0022                     strlen@s:	
  1931                           ; 1 bytes @ 0x2
  1932                           
  1933  0022                     USART_to_Protocol@i:	
  1934                           ; 1 bytes @ 0x2
  1935                           
  1936  0022                     ___lwdiv@dividend:	
  1937                           ; 2 bytes @ 0x2
  1938                           
  1939  0022                     __Umul8_16@product:	
  1940                           ; 2 bytes @ 0x2
  1941                           
  1942                           
  1943                           ; 2 bytes @ 0x2
  1944  0022                     	ds	1
  1945  0023                     ??_I2C_Master_Start:
  1946  0023                     ?_I2C_Master_Write:	
  1947                           ; 1 bytes @ 0x3
  1948                           
  1949  0023                     ??_I2C_Master_Stop:	
  1950                           ; 1 bytes @ 0x3
  1951                           
  1952  0023                     ??_I2C_Master_RepeatedStart:	
  1953                           ; 1 bytes @ 0x3
  1954                           
  1955  0023                     ??_USART_put_string:	
  1956                           ; 1 bytes @ 0x3
  1957                           
  1958  0023                     ?_EEPROM_Read_String:	
  1959                           ; 1 bytes @ 0x3
  1960                           
  1961  0023                     ?_I2C_Master_Read:	
  1962                           ; 1 bytes @ 0x3
  1963                           
  1964  0023                     ?_EEPROM_Read_Integer:	
  1965                           ; 2 bytes @ 0x3
  1966                           
  1967  0023                     EEPROM_Write_Byte@addr:	
  1968                           ; 2 bytes @ 0x3
  1969                           
  1970  0023                     EEPROM_Read_String@dado:	
  1971                           ; 1 bytes @ 0x3
  1972                           
  1973  0023                     strcpy@cp:	
  1974                           ; 1 bytes @ 0x3
  1975                           
  1976  0023                     strlen@cp:	
  1977                           ; 1 bytes @ 0x3
  1978                           
  1979  0023                     I2C_Master_Write@d:	
  1980                           ; 1 bytes @ 0x3
  1981                           
  1982  0023                     I2C_Master_Read@a:	
  1983                           ; 2 bytes @ 0x3
  1984                           
  1985  0023                     USART_put_string@ptr:	
  1986                           ; 2 bytes @ 0x3
  1987                           
  1988                           
  1989                           ; 2 bytes @ 0x3
  1990  0023                     	ds	1
  1991  0024                     ??_my_delay_ms_WDT:
  1992  0024                     ??_USART_init:	
  1993                           ; 1 bytes @ 0x4
  1994                           
  1995  0024                     ??_EEPROM_Read_String:	
  1996                           ; 1 bytes @ 0x4
  1997                           
  1998  0024                     ??_my_delay_ms:	
  1999                           ; 1 bytes @ 0x4
  2000                           
  2001  0024                     ??___lwdiv:	
  2002                           ; 1 bytes @ 0x4
  2003                           
  2004  0024                     EEPROM_Write_Byte@last_GIE:	
  2005                           ; 1 bytes @ 0x4
  2006                           
  2007  0024                     EEPROM_Read_String@addr:	
  2008                           ; 1 bytes @ 0x4
  2009                           
  2010  0024                     USART_init@i:	
  2011                           ; 1 bytes @ 0x4
  2012                           
  2013  0024                     USART_to_Protocol@usart_protocol:	
  2014                           ; 1 bytes @ 0x4
  2015                           
  2016  0024                     ___lwdiv@counter:	
  2017                           ; 1 bytes @ 0x4
  2018                           
  2019  0024                     PROCULUS_Delay@i:	
  2020                           ; 1 bytes @ 0x4
  2021                           
  2022  0024                     __Umul8_16@word_mpld:	
  2023                           ; 2 bytes @ 0x4
  2024                           
  2025  0024                     ___lldiv@dividend:	
  2026                           ; 2 bytes @ 0x4
  2027                           
  2028  0024                     ___fleq@ff2:	
  2029                           ; 4 bytes @ 0x4
  2030                           
  2031                           
  2032                           ; 4 bytes @ 0x4
  2033  0024                     	ds	1
  2034  0025                     ??_I2C_Master_Write:
  2035  0025                     ??_I2C_Master_Read:	
  2036                           ; 1 bytes @ 0x5
  2037                           
  2038  0025                     ??_EEPROM_Read_Integer:	
  2039                           ; 1 bytes @ 0x5
  2040                           
  2041  0025                     ?_EEPROM_Write_Integer:	
  2042                           ; 1 bytes @ 0x5
  2043                           
  2044  0025                     ??_Send_Reply_OK:	
  2045                           ; 1 bytes @ 0x5
  2046                           
  2047  0025                     ?_EEPROM_Write_String:	
  2048                           ; 1 bytes @ 0x5
  2049                           
  2050  0025                     EEPROM_Read_Integer@addr:	
  2051                           ; 1 bytes @ 0x5
  2052                           
  2053  0025                     EEPROM_Write_String@dado:	
  2054                           ; 1 bytes @ 0x5
  2055                           
  2056  0025                     EEPROM_Read_String@c:	
  2057                           ; 1 bytes @ 0x5
  2058                           
  2059  0025                     I2C_Master_Read@temp:	
  2060                           ; 1 bytes @ 0x5
  2061                           
  2062  0025                     EEPROM_Write_Integer@dado:	
  2063                           ; 2 bytes @ 0x5
  2064                           
  2065  0025                     ___lwdiv@quotient:	
  2066                           ; 2 bytes @ 0x5
  2067                           
  2068                           
  2069                           ; 2 bytes @ 0x5
  2070  0025                     	ds	1
  2071  0026                     ??_EEPROM_Write_String:
  2072  0026                     EEPROM_Read_Integer@ptr:	
  2073                           ; 1 bytes @ 0x6
  2074                           
  2075  0026                     EEPROM_Write_String@addr:	
  2076                           ; 1 bytes @ 0x6
  2077                           
  2078  0026                     __Umul8_16@multiplier:	
  2079                           ; 1 bytes @ 0x6
  2080                           
  2081  0026                     my_delay_ms@i:	
  2082                           ; 1 bytes @ 0x6
  2083                           
  2084  0026                     my_delay_ms_WDT@i:	
  2085                           ; 4 bytes @ 0x6
  2086                           
  2087                           
  2088                           ; 4 bytes @ 0x6
  2089  0026                     	ds	1
  2090  0027                     ??_EEPROM_Write_Integer:
  2091  0027                     ?_EEPROM_24C1025_Read_Buffer_USART:	
  2092                           ; 1 bytes @ 0x7
  2093                           
  2094  0027                     ?_EEPROM_24C1025_Read_Str:	
  2095                           ; 1 bytes @ 0x7
  2096                           
  2097  0027                     EEPROM_Read_Integer@result:	
  2098                           ; 1 bytes @ 0x7
  2099                           
  2100  0027                     EEPROM_24C1025_Read_Buffer_USART@mem_add:	
  2101                           ; 2 bytes @ 0x7
  2102                           
  2103  0027                     EEPROM_24C1025_Read_Str@mem_add:	
  2104                           ; 4 bytes @ 0x7
  2105                           
  2106                           
  2107                           ; 4 bytes @ 0x7
  2108  0027                     	ds	1
  2109  0028                     ??___lldiv:
  2110  0028                     ??___fleq:	
  2111                           ; 1 bytes @ 0x8
  2112                           
  2113  0028                     ___lldiv@quotient:	
  2114                           ; 1 bytes @ 0x8
  2115                           
  2116                           
  2117                           ; 4 bytes @ 0x8
  2118  0028                     	ds	1
  2119  0029                     EEPROM_Write_Integer@addr:
  2120  0029                     EEPROM_Read_Integer@i:	
  2121                           ; 1 bytes @ 0x9
  2122                           
  2123                           
  2124                           ; 1 bytes @ 0x9
  2125  0029                     	ds	1
  2126  002A                     ?_EEPROM_24C1025_Write_Buffer:
  2127  002A                     ?_EEPROM_24C1025_Read_Buffer:	
  2128                           ; 1 bytes @ 0xA
  2129                           
  2130  002A                     ?_EEPROM_24C1025_Write_Str:	
  2131                           ; 1 bytes @ 0xA
  2132                           
  2133  002A                     ?___xxtofl:	
  2134                           ; 1 bytes @ 0xA
  2135                           
  2136  002A                     EEPROM_Write_Integer@ptr:	
  2137                           ; 4 bytes @ 0xA
  2138                           
  2139  002A                     EEPROM_24C1025_Write_Buffer@mem_add:	
  2140                           ; 1 bytes @ 0xA
  2141                           
  2142  002A                     EEPROM_24C1025_Read_Buffer@mem_add:	
  2143                           ; 4 bytes @ 0xA
  2144                           
  2145  002A                     EEPROM_24C1025_Write_Str@mem_add:	
  2146                           ; 4 bytes @ 0xA
  2147                           
  2148  002A                     ___xxtofl@val:	
  2149                           ; 4 bytes @ 0xA
  2150                           
  2151                           
  2152                           ; 4 bytes @ 0xA
  2153  002A                     	ds	1
  2154  002B                     EEPROM_24C1025_Read_Buffer_USART@sizedata:
  2155  002B                     EEPROM_24C1025_Read_Str@buffer:	
  2156                           ; 1 bytes @ 0xB
  2157                           
  2158  002B                     EEPROM_Write_Integer@i:	
  2159                           ; 1 bytes @ 0xB
  2160                           
  2161                           
  2162                           ; 1 bytes @ 0xB
  2163  002B                     	ds	1
  2164  002C                     ??_EEPROM_24C1025_Read_Str:
  2165  002C                     ?_frexp:	
  2166                           ; 1 bytes @ 0xC
  2167                           
  2168  002C                     EEPROM_24C1025_Read_Buffer_USART@data:	
  2169                           ; 4 bytes @ 0xC
  2170                           
  2171  002C                     ___lldiv@counter:	
  2172                           ; 1 bytes @ 0xC
  2173                           
  2174  002C                     frexp@value:	
  2175                           ; 1 bytes @ 0xC
  2176                           
  2177                           
  2178                           ; 4 bytes @ 0xC
  2179  002C                     	ds	1
  2180  002D                     ??_EEPROM_24C1025_Read_Buffer_USART:
  2181  002D                     ?_I2C_Master_Init:	
  2182                           ; 1 bytes @ 0xD
  2183                           
  2184  002D                     I2C_Master_Init@c:	
  2185                           ; 1 bytes @ 0xD
  2186                           
  2187                           
  2188                           ; 4 bytes @ 0xD
  2189  002D                     	ds	1
  2190  002E                     ??___xxtofl:
  2191  002E                     EEPROM_24C1025_Write_Buffer@sizedata:	
  2192                           ; 1 bytes @ 0xE
  2193                           
  2194  002E                     EEPROM_24C1025_Read_Buffer@sizedata:	
  2195                           ; 1 bytes @ 0xE
  2196                           
  2197  002E                     EEPROM_24C1025_Read_Buffer_USART@cnt_117:	
  2198                           ; 1 bytes @ 0xE
  2199                           
  2200  002E                     EEPROM_24C1025_Write_Str@data:	
  2201                           ; 1 bytes @ 0xE
  2202                           
  2203  002E                     EEPROM_24C1025_Read_Str@cnt:	
  2204                           ; 1 bytes @ 0xE
  2205                           
  2206                           
  2207                           ; 1 bytes @ 0xE
  2208  002E                     	ds	1
  2209  002F                     ??_EEPROM_24C1025_Write_Str:
  2210  002F                     EEPROM_24C1025_Read_Buffer@data:	
  2211                           ; 1 bytes @ 0xF
  2212                           
  2213  002F                     EEPROM_24C1025_Read_Buffer_USART@chip_add:	
  2214                           ; 1 bytes @ 0xF
  2215                           
  2216  002F                     EEPROM_24C1025_Write_Str@chip_add:	
  2217                           ; 1 bytes @ 0xF
  2218                           
  2219  002F                     EEPROM_24C1025_Read_Str@chip_add:	
  2220                           ; 1 bytes @ 0xF
  2221                           
  2222  002F                     EEPROM_24C1025_Write_Buffer@data:	
  2223                           ; 1 bytes @ 0xF
  2224                           
  2225                           
  2226                           ; 2 bytes @ 0xF
  2227  002F                     	ds	1
  2228  0030                     ??_EEPROM_24C1025_Read_Buffer:
  2229  0030                     EEPROM_24C1025_Read_Buffer_USART@range:	
  2230                           ; 1 bytes @ 0x10
  2231                           
  2232  0030                     EEPROM_24C1025_Write_Str@range:	
  2233                           ; 1 bytes @ 0x10
  2234                           
  2235  0030                     EEPROM_24C1025_Read_Str@range:	
  2236                           ; 1 bytes @ 0x10
  2237                           
  2238  0030                     frexp@eptr:	
  2239                           ; 1 bytes @ 0x10
  2240                           
  2241                           
  2242                           ; 1 bytes @ 0x10
  2243  0030                     	ds	1
  2244  0031                     ??_frexp:
  2245  0031                     ??_EEPROM_24C1025_Write_Buffer:	
  2246                           ; 1 bytes @ 0x11
  2247                           
  2248  0031                     ??_I2C_Master_Init:	
  2249                           ; 1 bytes @ 0x11
  2250                           
  2251  0031                     EEPROM_24C1025_Read_Buffer@cnt_108:	
  2252                           ; 1 bytes @ 0x11
  2253                           
  2254  0031                     EEPROM_24C1025_Read_Buffer_USART@ctrl:	
  2255                           ; 1 bytes @ 0x11
  2256                           
  2257  0031                     EEPROM_24C1025_Write_Str@ctrl:	
  2258                           ; 1 bytes @ 0x11
  2259                           
  2260  0031                     EEPROM_24C1025_Read_Str@ctrl:	
  2261                           ; 1 bytes @ 0x11
  2262                           
  2263                           
  2264                           ; 1 bytes @ 0x11
  2265  0031                     	ds	1
  2266  0032                     EEPROM_24C1025_Read_Buffer@chip_add:
  2267  0032                     ___xxtofl@sign:	
  2268                           ; 1 bytes @ 0x12
  2269                           
  2270                           
  2271                           ; 1 bytes @ 0x12
  2272  0032                     	ds	1
  2273  0033                     EEPROM_24C1025_Write_Buffer@count:
  2274  0033                     EEPROM_24C1025_Read_Buffer@range:	
  2275                           ; 1 bytes @ 0x13
  2276                           
  2277  0033                     ___xxtofl@exp:	
  2278                           ; 1 bytes @ 0x13
  2279                           
  2280                           
  2281                           ; 1 bytes @ 0x13
  2282  0033                     	ds	1
  2283  0034                     EEPROM_24C1025_Write_Buffer@chip_add:
  2284  0034                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2285                           ; 1 bytes @ 0x14
  2286                           
  2287  0034                     ___xxtofl@arg:	
  2288                           ; 1 bytes @ 0x14
  2289                           
  2290                           
  2291                           ; 4 bytes @ 0x14
  2292  0034                     	ds	1
  2293  0035                     ?_EEPROM_24C1025_Read_Byte:
  2294  0035                     ?_EEPROM_24C1025_Read_Int:	
  2295                           ; 1 bytes @ 0x15
  2296                           
  2297  0035                     EEPROM_24C1025_Write_Buffer@range:	
  2298                           ; 2 bytes @ 0x15
  2299                           
  2300  0035                     EEPROM_24C1025_Read_Byte@mem_add:	
  2301                           ; 1 bytes @ 0x15
  2302                           
  2303  0035                     EEPROM_24C1025_Read_Int@mem_add:	
  2304                           ; 4 bytes @ 0x15
  2305                           
  2306                           
  2307                           ; 4 bytes @ 0x15
  2308  0035                     	ds	1
  2309  0036                     EEPROM_24C1025_Write_Buffer@ctrl:
  2310                           
  2311                           ; 1 bytes @ 0x16
  2312  0036                     	ds	1
  2313  0037                     ?_EEPROM_24C1025_Write_Byte:
  2314  0037                     EEPROM_24C1025_Write_Byte@mem_add:	
  2315                           ; 1 bytes @ 0x17
  2316                           
  2317                           
  2318                           ; 4 bytes @ 0x17
  2319  0037                     	ds	1
  2320  0038                     ?___fladd:
  2321  0038                     ___fladd@b:	
  2322                           ; 4 bytes @ 0x18
  2323                           
  2324                           
  2325                           ; 4 bytes @ 0x18
  2326  0038                     	ds	1
  2327  0039                     ??_EEPROM_24C1025_Read_Byte:
  2328  0039                     ??_EEPROM_24C1025_Read_Int:	
  2329                           ; 1 bytes @ 0x19
  2330                           
  2331  0039                     EEPROM_24C1025_Read_Byte@chip_add:	
  2332                           ; 1 bytes @ 0x19
  2333                           
  2334  0039                     EEPROM_24C1025_Read_Int@chip_add:	
  2335                           ; 1 bytes @ 0x19
  2336                           
  2337                           
  2338                           ; 1 bytes @ 0x19
  2339  0039                     	ds	1
  2340  003A                     EEPROM_24C1025_Read_Byte@data:
  2341  003A                     EEPROM_24C1025_Read_Int@data:	
  2342                           ; 1 bytes @ 0x1A
  2343                           
  2344                           
  2345                           ; 2 bytes @ 0x1A
  2346  003A                     	ds	1
  2347  003B                     EEPROM_24C1025_Write_Byte@data:
  2348                           
  2349                           ; 1 bytes @ 0x1B
  2350  003B                     	ds	1
  2351  003C                     ??_EEPROM_24C1025_Write_Byte:
  2352  003C                     EEPROM_24C1025_Write_Byte@chip_add:	
  2353                           ; 1 bytes @ 0x1C
  2354                           
  2355  003C                     ___fladd@a:	
  2356                           ; 1 bytes @ 0x1C
  2357                           
  2358                           
  2359                           ; 4 bytes @ 0x1C
  2360  003C                     	ds	4
  2361  0040                     ??___fladd:
  2362                           
  2363                           ; 1 bytes @ 0x20
  2364  0040                     	ds	8
  2365  0048                     ___fladd@signs:
  2366                           
  2367                           ; 1 bytes @ 0x28
  2368  0048                     	ds	1
  2369  0049                     ___fladd@aexp:
  2370                           
  2371                           ; 1 bytes @ 0x29
  2372  0049                     	ds	1
  2373  004A                     ___fladd@bexp:
  2374                           
  2375                           ; 1 bytes @ 0x2A
  2376  004A                     	ds	1
  2377  004B                     ___fladd@grs:
  2378                           
  2379                           ; 1 bytes @ 0x2B
  2380  004B                     	ds	1
  2381  004C                     ?___flsub:
  2382  004C                     ___flsub@a:	
  2383                           ; 4 bytes @ 0x2C
  2384                           
  2385                           
  2386                           ; 4 bytes @ 0x2C
  2387  004C                     	ds	4
  2388  0050                     ___flsub@b:
  2389                           
  2390                           ; 4 bytes @ 0x30
  2391  0050                     	ds	4
  2392  0054                     ?___flge:
  2393  0054                     ??___flsub:	
  2394                           ; 1 bit 
  2395                           
  2396  0054                     ?___flmul:	
  2397                           ; 1 bytes @ 0x34
  2398                           
  2399  0054                     ___flge@ff1:	
  2400                           ; 4 bytes @ 0x34
  2401                           
  2402  0054                     ___flmul@b:	
  2403                           ; 4 bytes @ 0x34
  2404                           
  2405                           
  2406                           ; 4 bytes @ 0x34
  2407  0054                     	ds	4
  2408  0058                     ___flge@ff2:
  2409  0058                     ___flmul@a:	
  2410                           ; 4 bytes @ 0x38
  2411                           
  2412                           
  2413                           ; 4 bytes @ 0x38
  2414  0058                     	ds	4
  2415  005C                     ??___flge:
  2416  005C                     ??___flmul:	
  2417                           ; 1 bytes @ 0x3C
  2418                           
  2419                           
  2420                           ; 1 bytes @ 0x3C
  2421  005C                     	ds	4
  2422  0060                     ??_Auto_Relay0:
  2423  0060                     ??_Auto_Relay1:	
  2424                           ; 1 bytes @ 0x40
  2425                           
  2426  0060                     ___flmul@sign:	
  2427                           ; 1 bytes @ 0x40
  2428                           
  2429                           
  2430                           ; 1 bytes @ 0x40
  2431  0060                     	ds	1
  2432  0061                     ___flmul@aexp:
  2433                           
  2434                           ; 1 bytes @ 0x41
  2435  0061                     	ds	1
  2436  0062                     ___flmul@bexp:
  2437                           
  2438                           ; 1 bytes @ 0x42
  2439  0062                     	ds	1
  2440  0063                     ___flmul@grs:
  2441                           
  2442                           ; 4 bytes @ 0x43
  2443  0063                     	ds	4
  2444  0067                     ___flmul@prod:
  2445                           
  2446                           ; 4 bytes @ 0x47
  2447  0067                     	ds	4
  2448  006B                     ___flmul@temp:
  2449                           
  2450                           ; 2 bytes @ 0x4B
  2451  006B                     	ds	2
  2452  006D                     ??_log:
  2453  006D                     ___fltol@sign1:	
  2454                           ; 1 bytes @ 0x4D
  2455                           
  2456  006D                     log@exponent:	
  2457                           ; 1 bytes @ 0x4D
  2458                           
  2459                           
  2460                           ; 2 bytes @ 0x4D
  2461  006D                     	ds	1
  2462  006E                     ___fltol@exp1:
  2463                           
  2464                           ; 1 bytes @ 0x4E
  2465  006E                     	ds	1
  2466  006F                     ??_mediatemperaturaNTC:
  2467  006F                     ??_USART_put_int:	
  2468                           ; 1 bytes @ 0x4F
  2469                           
  2470  006F                     ??_Save_Log:	
  2471                           ; 1 bytes @ 0x4F
  2472                           
  2473  006F                     ??_ADC_Read_NTC:	
  2474                           ; 1 bytes @ 0x4F
  2475                           
  2476  006F                     ??_EEPROM_24C1025_Write_Int:	
  2477                           ; 1 bytes @ 0x4F
  2478                           
  2479  006F                     ??_EEPROM_24C1025_Fill_All:	
  2480                           ; 1 bytes @ 0x4F
  2481                           
  2482  006F                     USART_put_int@dado:	
  2483                           ; 1 bytes @ 0x4F
  2484                           
  2485                           
  2486                           ; 1 bytes @ 0x4F
  2487  006F                     	ds	1
  2488  0070                     ??_PROCULUS_Show_Screen:
  2489  0070                     ??_PROCULUS_Buzzer:	
  2490                           ; 1 bytes @ 0x50
  2491                           
  2492  0070                     ??_PROCULUS_VP_Write_String:	
  2493                           ; 1 bytes @ 0x50
  2494                           
  2495                           
  2496                           	psect	maintext
  2497  081D                     __pmaintext:	
  2498                           ; 1 bytes @ 0x50
  2499 ;;
  2500 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2501 ;;
  2502 ;; *************** function _main *****************
  2503 ;; Defined at:
  2504 ;;		line 148 in file "SlaveLiofilizadorVer1.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;		None
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;  reset           2   59[BANK1 ] unsigned int 
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  1    wreg      void 
  2511 ;; Registers used:
  2512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2513 ;; Tracked objects:
  2514 ;;		On entry : B00/0
  2515 ;;		On exit  : 300/100
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2518 ;;      Params:         0       0       0       0       0
  2519 ;;      Locals:         0       0       2       0       0
  2520 ;;      Temps:          0       0       3       0       0
  2521 ;;      Totals:         0       0       5       0       0
  2522 ;;Total ram usage:        5 bytes
  2523 ;; Hardware stack levels required when called: 7
  2524 ;; This function calls:
  2525 ;;		_ADC_init
  2526 ;;		_Auto_Relay0
  2527 ;;		_Auto_Relay1
  2528 ;;		_Decodify_Command
  2529 ;;		_EEPROM_Read_Integer
  2530 ;;		_EEPROM_Write_Integer
  2531 ;;		_I2C_Master_Init
  2532 ;;		_Load_Work
  2533 ;;		_USART_init
  2534 ;;		_mediatemperaturaNTC
  2535 ;;		_my_delay_ms_WDT
  2536 ;; This function is called by:
  2537 ;;		Startup code after reset
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           
  2542                           ;psect for function _main
  2543  081D                     _main:
  2544  081D                     l7406:	
  2545                           ;incstack = 0
  2546                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2547                           
  2548                           
  2549                           ;SlaveLiofilizadorVer1.c: 149:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2550  081D  3002               	movlw	2
  2551  081E  1683               	bsf	3,5	;RP0=1, select bank1
  2552  081F  1303               	bcf	3,6	;RP1=0, select bank1
  2553  0820  00DA               	movwf	(??_main^(0+128)+2)
  2554  0821  3004               	movlw	4
  2555  0822  00D9               	movwf	(??_main^(0+128)+1)
  2556  0823  30B9               	movlw	185
  2557  0824  00D8               	movwf	??_main^(0+128)
  2558  0825                     u6657:
  2559  0825  0BD8               	decfsz	??_main^(0+128),f
  2560  0826  2825               	goto	u6657
  2561  0827  0BD9               	decfsz	(??_main^(0+128)+1),f
  2562  0828  2825               	goto	u6657
  2563  0829  0BDA               	decfsz	(??_main^(0+128)+2),f
  2564  082A  2825               	goto	u6657
  2565  082B  282C               	nop2
  2566                           
  2567                           ;SlaveLiofilizadorVer1.c: 150:      OSCCONbits.IRCF0=1;
  2568  082C  1683               	bsf	3,5	;RP0=1, select bank1
  2569  082D  1303               	bcf	3,6	;RP1=0, select bank1
  2570  082E  160F               	bsf	15,4	;volatile
  2571                           
  2572                           ;SlaveLiofilizadorVer1.c: 151:      OSCCONbits.IRCF1=1;
  2573  082F  168F               	bsf	15,5	;volatile
  2574                           
  2575                           ;SlaveLiofilizadorVer1.c: 152:      OSCCONbits.IRCF2=1;
  2576  0830  170F               	bsf	15,6	;volatile
  2577                           
  2578                           ;SlaveLiofilizadorVer1.c: 154:      PORTA=0;
  2579  0831  1283               	bcf	3,5	;RP0=0, select bank0
  2580  0832  0185               	clrf	5	;volatile
  2581                           
  2582                           ;SlaveLiofilizadorVer1.c: 155:      PORTB=0;
  2583  0833  0186               	clrf	6	;volatile
  2584                           
  2585                           ;SlaveLiofilizadorVer1.c: 156:      PORTC=0;
  2586  0834  0187               	clrf	7	;volatile
  2587                           
  2588                           ;SlaveLiofilizadorVer1.c: 157:      PORTE=0;
  2589  0835  0189               	clrf	9	;volatile
  2590                           
  2591                           ;SlaveLiofilizadorVer1.c: 158:      TRISA=0b11101111;
  2592  0836  30EF               	movlw	239
  2593  0837  1683               	bsf	3,5	;RP0=1, select bank1
  2594  0838  0085               	movwf	5	;volatile
  2595                           
  2596                           ;SlaveLiofilizadorVer1.c: 159:      TRISB=0b00001111;
  2597  0839  300F               	movlw	15
  2598  083A  0086               	movwf	6	;volatile
  2599                           
  2600                           ;SlaveLiofilizadorVer1.c: 160:      TRISC=0xF0;
  2601  083B  30F0               	movlw	240
  2602  083C  0087               	movwf	7	;volatile
  2603                           
  2604                           ;SlaveLiofilizadorVer1.c: 161:      TRISE=0xFF;
  2605  083D  30FF               	movlw	255
  2606  083E  0089               	movwf	9	;volatile
  2607                           
  2608                           ;SlaveLiofilizadorVer1.c: 163:      ANSEL=0x00000011;
  2609  083F  3011               	movlw	17
  2610  0840  1703               	bsf	3,6	;RP1=1, select bank3
  2611  0841  0088               	movwf	8	;volatile
  2612                           
  2613                           ;SlaveLiofilizadorVer1.c: 164:      ANSELH=0x00000000;
  2614  0842  0189               	clrf	9	;volatile
  2615                           
  2616                           ;SlaveLiofilizadorVer1.c: 166:      OPTION_REGbits.nRBPU=0;
  2617  0843  1303               	bcf	3,6	;RP1=0, select bank1
  2618  0844  1381               	bcf	1,7	;volatile
  2619                           
  2620                           ;SlaveLiofilizadorVer1.c: 167:      WPUB=0b00001111;
  2621  0845  300F               	movlw	15
  2622  0846  0095               	movwf	21	;volatile
  2623                           
  2624                           ;SlaveLiofilizadorVer1.c: 170:      PORTBbits.RB7 =1;
  2625  0847  1283               	bcf	3,5	;RP0=0, select bank0
  2626  0848  1786               	bsf	6,7	;volatile
  2627                           
  2628                           ;SlaveLiofilizadorVer1.c: 171:      PORTBbits.RB6 =1;
  2629  0849  1706               	bsf	6,6	;volatile
  2630                           
  2631                           ;SlaveLiofilizadorVer1.c: 172:      PORTBbits.RB5=1;
  2632  084A  1686               	bsf	6,5	;volatile
  2633                           
  2634                           ;SlaveLiofilizadorVer1.c: 173:      my_delay_ms_WDT(1000);
  2635  084B  3003               	movlw	3
  2636  084C  01A3               	clrf	my_delay_ms_WDT@time+3
  2637  084D  01A2               	clrf	my_delay_ms_WDT@time+2
  2638  084E  00A1               	movwf	my_delay_ms_WDT@time+1
  2639  084F  30E8               	movlw	232
  2640  0850  00A0               	movwf	my_delay_ms_WDT@time
  2641  0851  160A  118A  277B  120A  158A  	fcall	_my_delay_ms_WDT
  2642                           
  2643                           ;SlaveLiofilizadorVer1.c: 175:      OPTION_REGbits.T0CS=0;
  2644  0856  1683               	bsf	3,5	;RP0=1, select bank1
  2645  0857  1281               	bcf	1,5	;volatile
  2646                           
  2647                           ;SlaveLiofilizadorVer1.c: 176:      OPTION_REGbits.PSA =1;
  2648  0858  1581               	bsf	1,3	;volatile
  2649                           
  2650                           ;SlaveLiofilizadorVer1.c: 177:      OPTION_REGbits.PS0 =1;
  2651  0859  1401               	bsf	1,0	;volatile
  2652                           
  2653                           ;SlaveLiofilizadorVer1.c: 178:      OPTION_REGbits.PS1 =1;
  2654  085A  1481               	bsf	1,1	;volatile
  2655                           
  2656                           ;SlaveLiofilizadorVer1.c: 179:      OPTION_REGbits.PS2 =1;
  2657  085B  1501               	bsf	1,2	;volatile
  2658                           
  2659                           ;SlaveLiofilizadorVer1.c: 180:      INTCONbits.T0IE =0;
  2660  085C  128B               	bcf	11,5	;volatile
  2661                           
  2662                           ;SlaveLiofilizadorVer1.c: 181:      INTCONbits.INTE =0;
  2663  085D  120B               	bcf	11,4	;volatile
  2664                           
  2665                           ;SlaveLiofilizadorVer1.c: 182:      INTCONbits.GIE =1;
  2666  085E  178B               	bsf	11,7	;volatile
  2667                           
  2668                           ;SlaveLiofilizadorVer1.c: 185:      INTCONbits.PEIE = 1;
  2669  085F  170B               	bsf	11,6	;volatile
  2670                           
  2671                           ;SlaveLiofilizadorVer1.c: 186:      T1CKPS0=1;
  2672  0860  1283               	bcf	3,5	;RP0=0, select bank0
  2673  0861  1610               	bsf	16,4	;volatile
  2674                           
  2675                           ;SlaveLiofilizadorVer1.c: 187:      T1CKPS1=1;
  2676  0862  1690               	bsf	16,5	;volatile
  2677                           
  2678                           ;SlaveLiofilizadorVer1.c: 188:      TMR1CS=0;
  2679  0863  1090               	bcf	16,1	;volatile
  2680                           
  2681                           ;SlaveLiofilizadorVer1.c: 189:      TMR1IE=1;
  2682  0864  1683               	bsf	3,5	;RP0=1, select bank1
  2683  0865  140C               	bsf	12,0	;volatile
  2684                           
  2685                           ;SlaveLiofilizadorVer1.c: 190:      T1CON=1;
  2686  0866  3001               	movlw	1
  2687  0867  1283               	bcf	3,5	;RP0=0, select bank0
  2688  0868  0090               	movwf	16	;volatile
  2689  0869  0064               	clrwdt	;# 
  2690                           
  2691                           ;SlaveLiofilizadorVer1.c: 197:      ADC_init();
  2692  086A  120A  118A  27EF  120A  158A  	fcall	_ADC_init
  2693                           
  2694                           ;SlaveLiofilizadorVer1.c: 198:      I2C_Master_Init(100000);
  2695  086F  3001               	movlw	1
  2696  0870  01B0               	clrf	I2C_Master_Init@c+3
  2697  0871  00AF               	movwf	I2C_Master_Init@c+2
  2698  0872  3086               	movlw	134
  2699  0873  00AE               	movwf	I2C_Master_Init@c+1
  2700  0874  30A0               	movlw	160
  2701  0875  00AD               	movwf	I2C_Master_Init@c
  2702  0876  120A  118A  272F  120A  158A  	fcall	_I2C_Master_Init
  2703                           
  2704                           ;SlaveLiofilizadorVer1.c: 199:      USART_init(115200);
  2705  087B  1283               	bcf	3,5	;RP0=0, select bank0
  2706  087C  3001               	movlw	1
  2707  087D  01A3               	clrf	USART_init@baudrate+3
  2708  087E  00A2               	movwf	USART_init@baudrate+2
  2709  087F  30C2               	movlw	194
  2710  0880  00A1               	movwf	USART_init@baudrate+1
  2711  0881  01A0               	clrf	USART_init@baudrate
  2712  0882  160A  118A  2089  120A  158A  	fcall	_USART_init
  2713                           
  2714                           ;SlaveLiofilizadorVer1.c: 205:      {;SlaveLiofilizadorVer1.c: 206:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 207:      reset=EEPROM_Read_Integer(0x10);
  2715  0887  3010               	movlw	16
  2716  0888  160A  118A  2287  120A  158A  	fcall	_EEPROM_Read_Integer
  2717  088D  0824               	movf	?_EEPROM_Read_Integer+1,w
  2718  088E  1683               	bsf	3,5	;RP0=1, select bank1
  2719  088F  00DC               	movwf	(main@reset+1)^(0+128)
  2720  0890  1283               	bcf	3,5	;RP0=0, select bank0
  2721  0891  0823               	movf	?_EEPROM_Read_Integer,w
  2722  0892  1683               	bsf	3,5	;RP0=1, select bank1
  2723  0893  00DB               	movwf	main@reset^(0+128)
  2724                           
  2725                           ;SlaveLiofilizadorVer1.c: 208:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2726  0894  0F5B               	incfsz	main@reset^(0+128),w
  2727  0895  28A2               	goto	l7476
  2728  0896  0A5C               	incf	(main@reset+1)^(0+128),w
  2729  0897  1D03               	btfss	3,2
  2730  0898  28A2               	goto	l7476
  2731  0899  1283               	bcf	3,5	;RP0=0, select bank0
  2732  089A  3010               	movlw	16
  2733  089B  01A5               	clrf	EEPROM_Write_Integer@dado
  2734  089C  01A6               	clrf	EEPROM_Write_Integer@dado+1
  2735  089D  120A  118A  261A  120A  158A  	fcall	_EEPROM_Write_Integer
  2736  08A2                     l7476:
  2737                           
  2738                           ;SlaveLiofilizadorVer1.c: 209:      reset++;
  2739  08A2  1683               	bsf	3,5	;RP0=1, select bank1
  2740  08A3  1303               	bcf	3,6	;RP1=0, select bank1
  2741  08A4  0ADB               	incf	main@reset^(0+128),f
  2742  08A5  1903               	skipnz
  2743  08A6  0ADC               	incf	(main@reset+1)^(0+128),f
  2744                           
  2745                           ;SlaveLiofilizadorVer1.c: 210:      EEPROM_Write_Integer(0x10,reset);
  2746  08A7  085C               	movf	(main@reset+1)^(0+128),w
  2747  08A8  1283               	bcf	3,5	;RP0=0, select bank0
  2748  08A9  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2749  08AA  1683               	bsf	3,5	;RP0=1, select bank1
  2750  08AB  085B               	movf	main@reset^(0+128),w
  2751  08AC  1283               	bcf	3,5	;RP0=0, select bank0
  2752  08AD  00A5               	movwf	EEPROM_Write_Integer@dado
  2753  08AE  3010               	movlw	16
  2754  08AF  120A  118A  261A  120A  158A  	fcall	_EEPROM_Write_Integer
  2755                           
  2756                           ;SlaveLiofilizadorVer1.c: 211:      };SlaveLiofilizadorVer1.c: 215:      Delay_Led_Tmr0 
      +                          = 0;
  2757  08B4  1683               	bsf	3,5	;RP0=1, select bank3
  2758  08B5  1703               	bsf	3,6	;RP1=1, select bank3
  2759  08B6  01AA               	clrf	_Delay_Led_Tmr0^(0+384)	;volatile
  2760  08B7  01AB               	clrf	(_Delay_Led_Tmr0+1)^(0+384)	;volatile
  2761                           
  2762                           ;SlaveLiofilizadorVer1.c: 216:      Delay_Led_Usart = 0;
  2763  08B8  01A8               	clrf	_Delay_Led_Usart^(0+384)	;volatile
  2764  08B9  01A9               	clrf	(_Delay_Led_Usart+1)^(0+384)	;volatile
  2765                           
  2766                           ;SlaveLiofilizadorVer1.c: 217:      Delay_Led_Memory = 0;
  2767  08BA  01AC               	clrf	_Delay_Led_Memory^(0+384)	;volatile
  2768  08BB  01AD               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
  2769                           
  2770                           ;SlaveLiofilizadorVer1.c: 219:      segundo=0;
  2771  08BC  01F5               	clrf	_segundo	;volatile
  2772                           
  2773                           ;SlaveLiofilizadorVer1.c: 220:      hora=0;
  2774  08BD  01F4               	clrf	_hora	;volatile
  2775                           
  2776                           ;SlaveLiofilizadorVer1.c: 221:      PORTCbits.RC0=0;
  2777  08BE  1283               	bcf	3,5	;RP0=0, select bank0
  2778  08BF  1303               	bcf	3,6	;RP1=0, select bank0
  2779  08C0  1007               	bcf	7,0	;volatile
  2780                           
  2781                           ;SlaveLiofilizadorVer1.c: 222:      PORTCbits.RC1=0;
  2782  08C1  1087               	bcf	7,1	;volatile
  2783                           
  2784                           ;SlaveLiofilizadorVer1.c: 223:      PORTAbits.RA2=0;
  2785  08C2  1105               	bcf	5,2	;volatile
  2786                           
  2787                           ;SlaveLiofilizadorVer1.c: 224:      PORTAbits.RA3=0;
  2788  08C3  1185               	bcf	5,3	;volatile
  2789                           
  2790                           ;SlaveLiofilizadorVer1.c: 227:      Board_Number=(((0x0F)&(~PORTB)));
  2791  08C4  0906               	comf	6,w	;volatile
  2792  08C5  1683               	bsf	3,5	;RP0=1, select bank1
  2793  08C6  00E5               	movwf	_Board_Number^(0+128)
  2794  08C7  300F               	movlw	15
  2795  08C8  05E5               	andwf	_Board_Number^(0+128),f
  2796                           
  2797                           ;SlaveLiofilizadorVer1.c: 228:      canal=1;
  2798  08C9  01F2               	clrf	_canal
  2799  08CA  0AF2               	incf	_canal,f
  2800                           
  2801                           ;SlaveLiofilizadorVer1.c: 242:      Load_Work();
  2802  08CB  160A  118A  21A6  120A  158A  	fcall	_Load_Work
  2803                           
  2804                           ;SlaveLiofilizadorVer1.c: 243:      generic_status.flag_global_hot=0;
  2805  08D0  1683               	bsf	3,5	;RP0=1, select bank1
  2806  08D1  1303               	bcf	3,6	;RP1=0, select bank1
  2807  08D2  136C               	bcf	_generic_status^(0+128),6
  2808  08D3                     l7506:
  2809                           
  2810                           ;SlaveLiofilizadorVer1.c: 250:           {;SlaveLiofilizadorVer1.c: 252:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2811  08D3  1303               	bcf	3,6	;RP1=0, select bank1
  2812  08D4  3002               	movlw	2
  2813  08D5  17EC               	bsf	_generic_status^(0+128),7
  2814                           
  2815                           ;SlaveLiofilizadorVer1.c: 256:          if(++canal==2) canal=0;
  2816  08D6  0AF2               	incf	_canal,f
  2817  08D7  0672               	xorwf	_canal,w
  2818  08D8  1903               	btfsc	3,2
  2819  08D9  01F2               	clrf	_canal
  2820                           
  2821                           ;SlaveLiofilizadorVer1.c: 257:          mediatemperaturaNTC(canal);
  2822  08DA  0872               	movf	_canal,w
  2823  08DB  120A  158A  211B  120A  158A  	fcall	_mediatemperaturaNTC
  2824                           
  2825                           ;SlaveLiofilizadorVer1.c: 260:          if(generic_status.flag_global_hot)
  2826  08E0  1303               	bcf	3,6	;RP1=0, select bank1
  2827  08E1  1F6C               	btfss	_generic_status^(0+128),6
  2828  08E2  28EE               	goto	l434
  2829                           
  2830                           ;SlaveLiofilizadorVer1.c: 261:             {;SlaveLiofilizadorVer1.c: 262:              
      +                          Auto_Relay0();
  2831  08E3  160A  158A  2564  120A  158A  	fcall	_Auto_Relay0
  2832                           
  2833                           ;SlaveLiofilizadorVer1.c: 263:              Auto_Relay1();
  2834  08E8  160A  158A  250C  120A  158A  	fcall	_Auto_Relay1
  2835                           
  2836                           ;SlaveLiofilizadorVer1.c: 264:             }
  2837  08ED  28F1               	goto	l435
  2838  08EE                     l434:	
  2839                           ;SlaveLiofilizadorVer1.c: 265:          else
  2840                           
  2841                           
  2842                           ;SlaveLiofilizadorVer1.c: 266:             {;SlaveLiofilizadorVer1.c: 267:             P
      +                          ORTCbits.RC0=0;
  2843  08EE  1283               	bcf	3,5	;RP0=0, select bank0
  2844  08EF  1007               	bcf	7,0	;volatile
  2845                           
  2846                           ;SlaveLiofilizadorVer1.c: 268:             PORTCbits.RC1=0;
  2847  08F0  1087               	bcf	7,1	;volatile
  2848  08F1                     l435:	
  2849                           ;SlaveLiofilizadorVer1.c: 269:             }
  2850                           
  2851                           
  2852                           ;SlaveLiofilizadorVer1.c: 287:          if(generic_status.flag_usart_rx==1)
  2853  08F1  1683               	bsf	3,5	;RP0=1, select bank1
  2854  08F2  1303               	bcf	3,6	;RP1=0, select bank1
  2855  08F3  1C6C               	btfss	_generic_status^(0+128),0
  2856  08F4  28D3               	goto	l7506
  2857                           
  2858                           ;SlaveLiofilizadorVer1.c: 288:             {;SlaveLiofilizadorVer1.c: 289:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2859  08F5  1283               	bcf	3,5	;RP0=0, select bank2
  2860  08F6  1703               	bsf	3,6	;RP1=1, select bank2
  2861  08F7  0810               	movf	_usart_buffer^(0+256),w	;volatile
  2862  08F8  1683               	bsf	3,5	;RP0=1, select bank3
  2863  08F9  00A1               	movwf	(_header+1)^(0+384)
  2864  08FA  1283               	bcf	3,5	;RP0=0, select bank2
  2865  08FB  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  2866  08FC  1683               	bsf	3,5	;RP0=1, select bank3
  2867  08FD  00A0               	movwf	_header^(0+384)
  2868                           
  2869                           ;SlaveLiofilizadorVer1.c: 290:             if(header==0xAABB)
  2870  08FE  3ABB               	xorlw	187
  2871  08FF  30AA               	movlw	170
  2872  0900  1903               	skipnz
  2873  0901  0621               	xorwf	(_header+1)^(0+384),w
  2874  0902  1D03               	btfss	3,2
  2875  0903  28D3               	goto	l7506
  2876                           
  2877                           ;SlaveLiofilizadorVer1.c: 291:                {;SlaveLiofilizadorVer1.c: 292:           
      +                               destino =usart_buffer[3];
  2878  0904  1283               	bcf	3,5	;RP0=0, select bank2
  2879  0905  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  2880  0906  00F1               	movwf	_destino
  2881                           
  2882                           ;SlaveLiofilizadorVer1.c: 293:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2883  0907  1683               	bsf	3,5	;RP0=1, select bank1
  2884  0908  1303               	bcf	3,6	;RP1=0, select bank1
  2885  0909  0665               	xorwf	_Board_Number^(0+128),w
  2886  090A  1903               	skipnz
  2887  090B  290E               	goto	l7526
  2888  090C  0F71               	incfsz	_destino,w
  2889  090D  28D3               	goto	l7506
  2890  090E                     l7526:
  2891                           
  2892                           ;SlaveLiofilizadorVer1.c: 294:                       {;SlaveLiofilizadorVer1.c: 295:    
      +                                             Delay_Led_Usart=20;
  2893  090E  3014               	movlw	20
  2894  090F  1703               	bsf	3,6	;RP1=1, select bank3
  2895  0910  00A8               	movwf	_Delay_Led_Usart^(0+384)	;volatile
  2896  0911  01A9               	clrf	(_Delay_Led_Usart+1)^(0+384)	;volatile
  2897                           
  2898                           ;SlaveLiofilizadorVer1.c: 296:                       Decodify_Command();
  2899  0912  120A  118A  20AE  120A  158A  	fcall	_Decodify_Command
  2900                           
  2901                           ;SlaveLiofilizadorVer1.c: 297:                       generic_status.flag_usart_rx=0;
  2902  0917  1683               	bsf	3,5	;RP0=1, select bank1
  2903  0918  1303               	bcf	3,6	;RP1=0, select bank1
  2904  0919  106C               	bcf	_generic_status^(0+128),0
  2905                           
  2906                           ;SlaveLiofilizadorVer1.c: 300:             }
  2907  091A  28D3               	goto	l7506
  2908  091B                     __end_of_main:
  2909                           
  2910                           	psect	text1
  2911  091B                     __ptext1:	
  2912 ;; *************** function _mediatemperaturaNTC *****************
  2913 ;; Defined at:
  2914 ;;		line 654 in file "SlaveLiofilizadorVer1.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  canal           1    wreg     unsigned char 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  canal           1   50[BANK1 ] unsigned char 
  2919 ;;  Temp            4   51[BANK1 ] float 
  2920 ;;  i               1   55[BANK1 ] unsigned char 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2925 ;; Tracked objects:
  2926 ;;		On entry : 300/100
  2927 ;;		On exit  : 100/100
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2930 ;;      Params:         0       0       0       0       0
  2931 ;;      Locals:         0       0      10       0       0
  2932 ;;      Temps:          0       1       0       0       0
  2933 ;;      Totals:         0       1      10       0       0
  2934 ;;Total ram usage:       11 bytes
  2935 ;; Hardware stack levels used: 1
  2936 ;; Hardware stack levels required when called: 6
  2937 ;; This function calls:
  2938 ;;		_ADC_Read_NTC
  2939 ;;		_Package_Usart_is_for_me
  2940 ;;		_Rele0Ligado
  2941 ;;		_Rele1Ligado
  2942 ;;		___fladd
  2943 ;;		___fldiv
  2944 ;;		___xxtofl
  2945 ;;		_my_delay_ms
  2946 ;; This function is called by:
  2947 ;;		_main
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           
  2952                           ;psect for function _mediatemperaturaNTC
  2953  091B                     _mediatemperaturaNTC:
  2954                           
  2955                           ;incstack = 0
  2956                           ; Regs used in _mediatemperaturaNTC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  2957                           ;mediatemperaturaNTC@canal stored from wreg
  2958  091B  00D2               	movwf	mediatemperaturaNTC@canal^(0+128)
  2959                           
  2960                           ;SlaveLiofilizadorVer1.c: 654: void mediatemperaturaNTC(unsigned char canal);SlaveLiofil
      +                          izadorVer1.c: 655:      {;SlaveLiofilizadorVer1.c: 656:      float Temp;;SlaveLiofilizad
      +                          orVer1.c: 657:      char i;;SlaveLiofilizadorVer1.c: 659:      ADCON0bits.CHS=canal;
  2961  091C  1283               	bcf	3,5	;RP0=0, select bank0
  2962  091D  00EF               	movwf	??_mediatemperaturaNTC
  2963  091E  0DEF               	rlf	??_mediatemperaturaNTC,f
  2964  091F  0DEF               	rlf	??_mediatemperaturaNTC,f
  2965  0920  081F               	movf	31,w	;volatile
  2966  0921  066F               	xorwf	??_mediatemperaturaNTC,w
  2967  0922  39C3               	andlw	-61
  2968  0923  066F               	xorwf	??_mediatemperaturaNTC,w
  2969  0924  009F               	movwf	31	;volatile
  2970                           
  2971                           ;SlaveLiofilizadorVer1.c: 660:      my_delay_ms(1);
  2972  0925  01A0               	clrf	my_delay_ms@time
  2973  0926  0AA0               	incf	my_delay_ms@time,f
  2974  0927  01A1               	clrf	my_delay_ms@time+1
  2975  0928  01A2               	clrf	my_delay_ms@time+2
  2976  0929  01A3               	clrf	my_delay_ms@time+3
  2977  092A  160A  118A  205D  120A  158A  	fcall	_my_delay_ms
  2978                           
  2979                           ;SlaveLiofilizadorVer1.c: 662:      Temp=0;
  2980  092F  1683               	bsf	3,5	;RP0=1, select bank1
  2981  0930  01D3               	clrf	mediatemperaturaNTC@Temp^(0+128)
  2982  0931  01D4               	clrf	(mediatemperaturaNTC@Temp+1)^(0+128)
  2983  0932  01D5               	clrf	(mediatemperaturaNTC@Temp+2)^(0+128)
  2984  0933  01D6               	clrf	(mediatemperaturaNTC@Temp+3)^(0+128)
  2985                           
  2986                           ;SlaveLiofilizadorVer1.c: 664:      for(i=1;i<15;i++)
  2987  0934  01D7               	clrf	mediatemperaturaNTC@i^(0+128)
  2988  0935  0AD7               	incf	mediatemperaturaNTC@i^(0+128),f
  2989  0936                     l7102:
  2990                           
  2991                           ;SlaveLiofilizadorVer1.c: 665:          {;SlaveLiofilizadorVer1.c: 666:          Temp+=A
      +                          DC_Read_NTC(canal);
  2992  0936  2443  120A  158A   	fcall	_ADC_Read_NTC
  2993  0939  083C               	movf	(?_ADC_Read_NTC+3)^(0+128),w
  2994  093A  00D1               	movwf	(_mediatemperaturaNTC$2354+3)^(0+128)
  2995  093B  083B               	movf	(?_ADC_Read_NTC+2)^(0+128),w
  2996  093C  00D0               	movwf	(_mediatemperaturaNTC$2354+2)^(0+128)
  2997  093D  083A               	movf	(?_ADC_Read_NTC+1)^(0+128),w
  2998  093E  00CF               	movwf	(_mediatemperaturaNTC$2354+1)^(0+128)
  2999  093F  0839               	movf	?_ADC_Read_NTC^(0+128),w
  3000  0940  00CE               	movwf	_mediatemperaturaNTC$2354^(0+128)
  3001                           
  3002                           ;SlaveLiofilizadorVer1.c: 665:          {;SlaveLiofilizadorVer1.c: 666:          Temp+=A
      +                          DC_Read_NTC(canal);
  3003  0941  0851               	movf	(_mediatemperaturaNTC$2354+3)^(0+128),w
  3004  0942  1283               	bcf	3,5	;RP0=0, select bank0
  3005  0943  00BB               	movwf	___fladd@b+3
  3006  0944  1683               	bsf	3,5	;RP0=1, select bank1
  3007  0945  0850               	movf	(_mediatemperaturaNTC$2354+2)^(0+128),w
  3008  0946  1283               	bcf	3,5	;RP0=0, select bank0
  3009  0947  00BA               	movwf	___fladd@b+2
  3010  0948  1683               	bsf	3,5	;RP0=1, select bank1
  3011  0949  084F               	movf	(_mediatemperaturaNTC$2354+1)^(0+128),w
  3012  094A  1283               	bcf	3,5	;RP0=0, select bank0
  3013  094B  00B9               	movwf	___fladd@b+1
  3014  094C  1683               	bsf	3,5	;RP0=1, select bank1
  3015  094D  084E               	movf	_mediatemperaturaNTC$2354^(0+128),w
  3016  094E  1283               	bcf	3,5	;RP0=0, select bank0
  3017  094F  00B8               	movwf	___fladd@b
  3018  0950  1683               	bsf	3,5	;RP0=1, select bank1
  3019  0951  0856               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3020  0952  1283               	bcf	3,5	;RP0=0, select bank0
  3021  0953  00BF               	movwf	___fladd@a+3
  3022  0954  1683               	bsf	3,5	;RP0=1, select bank1
  3023  0955  0855               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3024  0956  1283               	bcf	3,5	;RP0=0, select bank0
  3025  0957  00BE               	movwf	___fladd@a+2
  3026  0958  1683               	bsf	3,5	;RP0=1, select bank1
  3027  0959  0854               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3028  095A  1283               	bcf	3,5	;RP0=0, select bank0
  3029  095B  00BD               	movwf	___fladd@a+1
  3030  095C  1683               	bsf	3,5	;RP0=1, select bank1
  3031  095D  0853               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3032  095E  1283               	bcf	3,5	;RP0=0, select bank0
  3033  095F  00BC               	movwf	___fladd@a
  3034  0960  22D4  120A  158A   	fcall	___fladd
  3035  0963  083B               	movf	?___fladd+3,w
  3036  0964  1683               	bsf	3,5	;RP0=1, select bank1
  3037  0965  00D6               	movwf	(mediatemperaturaNTC@Temp+3)^(0+128)
  3038  0966  1283               	bcf	3,5	;RP0=0, select bank0
  3039  0967  083A               	movf	?___fladd+2,w
  3040  0968  1683               	bsf	3,5	;RP0=1, select bank1
  3041  0969  00D5               	movwf	(mediatemperaturaNTC@Temp+2)^(0+128)
  3042  096A  1283               	bcf	3,5	;RP0=0, select bank0
  3043  096B  0839               	movf	?___fladd+1,w
  3044  096C  1683               	bsf	3,5	;RP0=1, select bank1
  3045  096D  00D4               	movwf	(mediatemperaturaNTC@Temp+1)^(0+128)
  3046  096E  1283               	bcf	3,5	;RP0=0, select bank0
  3047  096F  0838               	movf	?___fladd,w
  3048  0970  1683               	bsf	3,5	;RP0=1, select bank1
  3049  0971  00D3               	movwf	mediatemperaturaNTC@Temp^(0+128)
  3050                           
  3051                           ;SlaveLiofilizadorVer1.c: 668:          if(Package_Usart_is_for_me()==1) break;
  3052  0972  27E8  120A  158A   	fcall	_Package_Usart_is_for_me
  3053  0975  3A01               	xorlw	1
  3054  0976  1903               	btfsc	3,2
  3055  0977  299E               	goto	l7130
  3056                           
  3057                           ;SlaveLiofilizadorVer1.c: 670:          if(generic_status.flag_global_hot)
  3058  0978  1683               	bsf	3,5	;RP0=1, select bank1
  3059  0979  1F6C               	btfss	_generic_status^(0+128),6
  3060  097A  2997               	goto	l7126
  3061                           
  3062                           ;SlaveLiofilizadorVer1.c: 671:            {;SlaveLiofilizadorVer1.c: 673:            if(
      +                          (TempoCNT_0==0)&&
  3063  097B  0869               	movf	_TempoCNT_0^(0+128),w	;volatile
  3064  097C  1D03               	btfss	3,2
  3065  097D  2988               	goto	l7118
  3066  097E  0B6D               	decfsz	_RL0Status^(0+128),w
  3067  097F  2988               	goto	l7118
  3068  0980  1703               	bsf	3,6	;RP1=1, select bank3
  3069  0981  0324               	decf	_Status0^(0+384),w
  3070  0982  0425               	iorwf	(_Status0+1)^(0+384),w
  3071  0983  1D03               	btfss	3,2
  3072  0984  2988               	goto	l7118
  3073                           
  3074                           ;SlaveLiofilizadorVer1.c: 675:               (Status0==1)) Rele0Ligado();
  3075  0985  21F9  120A  158A   	fcall	_Rele0Ligado
  3076  0988                     l7118:
  3077                           
  3078                           ;SlaveLiofilizadorVer1.c: 677:            if((TempoCNT_1==0)&&
  3079  0988  1683               	bsf	3,5	;RP0=1, select bank1
  3080  0989  1303               	bcf	3,6	;RP1=0, select bank1
  3081  098A  0866               	movf	_TempoCNT_1^(0+128),w	;volatile
  3082  098B  1D03               	btfss	3,2
  3083  098C  2997               	goto	l7126
  3084  098D  0B7C               	decfsz	_RL1Status,w
  3085  098E  2997               	goto	l7126
  3086  098F  1703               	bsf	3,6	;RP1=1, select bank3
  3087  0990  0322               	decf	_Status1^(0+384),w
  3088  0991  0423               	iorwf	(_Status1+1)^(0+384),w
  3089  0992  1D03               	btfss	3,2
  3090  0993  2997               	goto	l7126
  3091                           
  3092                           ;SlaveLiofilizadorVer1.c: 679:               (Status1==1)) Rele1Ligado();
  3093  0994  2210  120A  158A   	fcall	_Rele1Ligado
  3094  0997                     l7126:
  3095                           
  3096                           ;SlaveLiofilizadorVer1.c: 682:          }
  3097  0997  1683               	bsf	3,5	;RP0=1, select bank1
  3098  0998  1303               	bcf	3,6	;RP1=0, select bank1
  3099  0999  300F               	movlw	15
  3100  099A  0AD7               	incf	mediatemperaturaNTC@i^(0+128),f
  3101  099B  0257               	subwf	mediatemperaturaNTC@i^(0+128),w
  3102  099C  1C03               	skipc
  3103  099D  2936               	goto	l7102
  3104  099E                     l7130:
  3105                           
  3106                           ;SlaveLiofilizadorVer1.c: 683:      if(i<10)
  3107  099E  300A               	movlw	10
  3108  099F  1683               	bsf	3,5	;RP0=1, select bank1
  3109  09A0  0257               	subwf	mediatemperaturaNTC@i^(0+128),w
  3110  09A1  1C03               	btfss	3,0
  3111  09A2  0008               	return
  3112                           
  3113                           ;SlaveLiofilizadorVer1.c: 688:      if(i==15)
  3114  09A3  300F               	movlw	15
  3115  09A4  0657               	xorwf	mediatemperaturaNTC@i^(0+128),w
  3116  09A5  1D03               	btfss	3,2
  3117  09A6  29B6               	goto	l7138
  3118                           
  3119                           ;SlaveLiofilizadorVer1.c: 689:         Temp/=(i-1);
  3120  09A7  0857               	movf	mediatemperaturaNTC@i^(0+128),w
  3121  09A8  3EFF               	addlw	255
  3122  09A9  1283               	bcf	3,5	;RP0=0, select bank0
  3123  09AA  00AA               	movwf	___xxtofl@val
  3124  09AB  30FF               	movlw	255
  3125  09AC  1803               	skipnc
  3126  09AD  3000               	movlw	0
  3127  09AE  00AB               	movwf	___xxtofl@val+1
  3128  09AF  01AC               	clrf	___xxtofl@val+2
  3129  09B0  1BAB               	btfsc	___xxtofl@val+1,7
  3130  09B1  03AC               	decf	___xxtofl@val+2,f
  3131  09B2  082C               	movf	___xxtofl@val+2,w
  3132  09B3  00AD               	movwf	___xxtofl@val+3
  3133  09B4  3001               	movlw	1
  3134  09B5  29BD               	goto	L1
  3135  09B6                     l7138:
  3136                           
  3137                           ;SlaveLiofilizadorVer1.c: 691:         Temp/=(i);
  3138  09B6  0857               	movf	mediatemperaturaNTC@i^(0+128),w
  3139  09B7  1283               	bcf	3,5	;RP0=0, select bank0
  3140  09B8  160A  158A  27FA  120A  158A  	fcall	PL84	;call to abstracted procedure
  3141  09BD                     L1:
  3142  09BD  25B5  120A  158A   	fcall	___xxtofl
  3143  09C0  2798  120A  158A   	fcall	PL20	;call to abstracted procedure
  3144  09C3  0856               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3145  09C4  00A7               	movwf	(___fldiv@b+3)^(0+128)
  3146  09C5  0855               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3147  09C6  00A6               	movwf	(___fldiv@b+2)^(0+128)
  3148  09C7  0854               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3149  09C8  00A5               	movwf	(___fldiv@b+1)^(0+128)
  3150  09C9  0853               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3151  09CA  00A4               	movwf	___fldiv@b^(0+128)
  3152  09CB  2623  120A  158A   	fcall	___fldiv
  3153  09CE  0823               	movf	(?___fldiv+3)^(0+128),w
  3154  09CF  00D6               	movwf	(mediatemperaturaNTC@Temp+3)^(0+128)
  3155  09D0  0822               	movf	(?___fldiv+2)^(0+128),w
  3156  09D1  00D5               	movwf	(mediatemperaturaNTC@Temp+2)^(0+128)
  3157  09D2  0821               	movf	(?___fldiv+1)^(0+128),w
  3158  09D3  00D4               	movwf	(mediatemperaturaNTC@Temp+1)^(0+128)
  3159  09D4  0820               	movf	?___fldiv^(0+128),w
  3160  09D5  00D3               	movwf	mediatemperaturaNTC@Temp^(0+128)
  3161                           
  3162                           ;SlaveLiofilizadorVer1.c: 693:      if(canal==0)
  3163  09D6  0852               	movf	mediatemperaturaNTC@canal^(0+128),w
  3164  09D7  1D03               	btfss	3,2
  3165  09D8  29E9               	goto	l7144
  3166                           
  3167                           ;SlaveLiofilizadorVer1.c: 694:         {;SlaveLiofilizadorVer1.c: 695:         Temperatu
      +                          ra0=Temp;
  3168  09D9  0856               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3169  09DA  1703               	bsf	3,6	;RP1=1, select bank3
  3170  09DB  0097               	movwf	(_Temperatura0+3)^(0+384)
  3171  09DC  1303               	bcf	3,6	;RP1=0, select bank1
  3172  09DD  0855               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3173  09DE  1703               	bsf	3,6	;RP1=1, select bank3
  3174  09DF  0096               	movwf	(_Temperatura0+2)^(0+384)
  3175  09E0  1303               	bcf	3,6	;RP1=0, select bank1
  3176  09E1  0854               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3177  09E2  1703               	bsf	3,6	;RP1=1, select bank3
  3178  09E3  0095               	movwf	(_Temperatura0+1)^(0+384)
  3179  09E4  1303               	bcf	3,6	;RP1=0, select bank1
  3180  09E5  0853               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3181  09E6  1703               	bsf	3,6	;RP1=1, select bank3
  3182  09E7  0094               	movwf	_Temperatura0^(0+384)
  3183                           
  3184                           ;SlaveLiofilizadorVer1.c: 696:         }
  3185  09E8  0008               	return
  3186  09E9                     l7144:
  3187                           
  3188                           ;SlaveLiofilizadorVer1.c: 698:         {;SlaveLiofilizadorVer1.c: 699:         Temperatu
      +                          ra1=Temp;
  3189  09E9  0856               	movf	(mediatemperaturaNTC@Temp+3)^(0+128),w
  3190  09EA  1703               	bsf	3,6	;RP1=1, select bank3
  3191  09EB  0093               	movwf	(_Temperatura1+3)^(0+384)
  3192  09EC  1303               	bcf	3,6	;RP1=0, select bank1
  3193  09ED  0855               	movf	(mediatemperaturaNTC@Temp+2)^(0+128),w
  3194  09EE  1703               	bsf	3,6	;RP1=1, select bank3
  3195  09EF  0092               	movwf	(_Temperatura1+2)^(0+384)
  3196  09F0  1303               	bcf	3,6	;RP1=0, select bank1
  3197  09F1  0854               	movf	(mediatemperaturaNTC@Temp+1)^(0+128),w
  3198  09F2  1703               	bsf	3,6	;RP1=1, select bank3
  3199  09F3  0091               	movwf	(_Temperatura1+1)^(0+384)
  3200  09F4  1303               	bcf	3,6	;RP1=0, select bank1
  3201  09F5  0853               	movf	mediatemperaturaNTC@Temp^(0+128),w
  3202  09F6  1703               	bsf	3,6	;RP1=1, select bank3
  3203  09F7  0090               	movwf	_Temperatura1^(0+384)
  3204  09F8  0008               	return
  3205  09F9                     __end_of_mediatemperaturaNTC:
  3206  09F9                     __ptext66:	
  3207 ;; *************** function _Rele0Ligado *****************
  3208 ;; Defined at:
  3209 ;;		line 937 in file "SlaveLiofilizadorVer1.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;		None
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;		None
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  1    wreg      void 
  3216 ;; Registers used:
  3217 ;;		wreg, status,2, status,0
  3218 ;; Tracked objects:
  3219 ;;		On entry : 100/300
  3220 ;;		On exit  : 200/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3223 ;;      Params:         0       0       0       0       0
  3224 ;;      Locals:         0       0       0       0       0
  3225 ;;      Temps:          0       0       0       0       0
  3226 ;;      Totals:         0       0       0       0       0
  3227 ;;Total ram usage:        0 bytes
  3228 ;; Hardware stack levels used: 1
  3229 ;; Hardware stack levels required when called: 1
  3230 ;; This function calls:
  3231 ;;		Nothing
  3232 ;; This function is called by:
  3233 ;;		_mediatemperaturaNTC
  3234 ;;		_Auto_Relay0
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           
  3239                           ;psect for function _Rele0Ligado
  3240  09F9                     _Rele0Ligado:
  3241  09F9                     l6958:	
  3242                           ;incstack = 0
  3243                           ; Regs used in _Rele0Ligado: [wreg+status,2+status,0]
  3244                           
  3245                           
  3246                           ;SlaveLiofilizadorVer1.c: 940:         if(TempoCNT_0==0)
  3247  09F9  1303               	bcf	3,6	;RP1=0, select bank1
  3248  09FA  0869               	movf	_TempoCNT_0^(0+128),w	;volatile
  3249  09FB  1D03               	btfss	3,2
  3250  09FC  0008               	return
  3251                           
  3252                           ;SlaveLiofilizadorVer1.c: 941:             {;SlaveLiofilizadorVer1.c: 944:             i
      +                          f(PORTCbits.RC0==0)
  3253  09FD  1283               	bcf	3,5	;RP0=0, select bank0
  3254  09FE  1807               	btfsc	7,0	;volatile
  3255  09FF  2A08               	goto	l6968
  3256                           
  3257                           ;SlaveLiofilizadorVer1.c: 945:               {;SlaveLiofilizadorVer1.c: 946:            
      +                             if(TempoON_0!=0)
  3258  0A00  1683               	bsf	3,5	;RP0=1, select bank1
  3259  0A01  086B               	movf	_TempoON_0^(0+128),w
  3260  0A02  1903               	btfsc	3,2
  3261  0A03  0008               	return
  3262                           
  3263                           ;SlaveLiofilizadorVer1.c: 947:                  {;SlaveLiofilizadorVer1.c: 948:         
      +                                   TempoCNT_0=TempoON_0;
  3264  0A04  00E9               	movwf	_TempoCNT_0^(0+128)	;volatile
  3265                           
  3266                           ;SlaveLiofilizadorVer1.c: 949:                  PORTCbits.RC0=1;
  3267  0A05  1283               	bcf	3,5	;RP0=0, select bank0
  3268  0A06  1407               	bsf	7,0	;volatile
  3269  0A07  0008               	return
  3270  0A08                     l6968:
  3271                           
  3272                           ;SlaveLiofilizadorVer1.c: 953:               {;SlaveLiofilizadorVer1.c: 954:            
      +                             if(TempoOFF_0!=0)
  3273  0A08  1683               	bsf	3,5	;RP0=1, select bank1
  3274  0A09  086A               	movf	_TempoOFF_0^(0+128),w
  3275  0A0A  1903               	btfsc	3,2
  3276  0A0B  0008               	return
  3277                           
  3278                           ;SlaveLiofilizadorVer1.c: 955:                  {;SlaveLiofilizadorVer1.c: 956:         
      +                                   TempoCNT_0=TempoOFF_0;
  3279  0A0C  00E9               	movwf	_TempoCNT_0^(0+128)	;volatile
  3280                           
  3281                           ;SlaveLiofilizadorVer1.c: 957:                  PORTCbits.RC0=0;
  3282  0A0D  1283               	bcf	3,5	;RP0=0, select bank0
  3283  0A0E  1007               	bcf	7,0	;volatile
  3284  0A0F  0008               	return
  3285  0A10                     __end_of_Rele0Ligado:
  3286  0A10                     __ptext60:	
  3287 ;; *************** function _Rele1Ligado *****************
  3288 ;; Defined at:
  3289 ;;		line 964 in file "SlaveLiofilizadorVer1.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;		None
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;		None
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  1    wreg      void 
  3296 ;; Registers used:
  3297 ;;		wreg, status,2, status,0
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/300
  3300 ;;		On exit  : 200/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3303 ;;      Params:         0       0       0       0       0
  3304 ;;      Locals:         0       0       0       0       0
  3305 ;;      Temps:          0       0       0       0       0
  3306 ;;      Totals:         0       0       0       0       0
  3307 ;;Total ram usage:        0 bytes
  3308 ;; Hardware stack levels used: 1
  3309 ;; Hardware stack levels required when called: 1
  3310 ;; This function calls:
  3311 ;;		Nothing
  3312 ;; This function is called by:
  3313 ;;		_mediatemperaturaNTC
  3314 ;;		_Auto_Relay1
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318                           
  3319                           ;psect for function _Rele1Ligado
  3320  0A10                     _Rele1Ligado:
  3321  0A10                     l6974:	
  3322                           ;incstack = 0
  3323                           ; Regs used in _Rele1Ligado: [wreg+status,2+status,0]
  3324                           
  3325                           
  3326                           ;SlaveLiofilizadorVer1.c: 967:         if(TempoCNT_1==0)
  3327  0A10  1683               	bsf	3,5	;RP0=1, select bank1
  3328  0A11  1303               	bcf	3,6	;RP1=0, select bank1
  3329  0A12  0866               	movf	_TempoCNT_1^(0+128),w	;volatile
  3330  0A13  1D03               	btfss	3,2
  3331  0A14  0008               	return
  3332                           
  3333                           ;SlaveLiofilizadorVer1.c: 968:             {;SlaveLiofilizadorVer1.c: 971:             i
      +                          f(PORTCbits.RC1==0)
  3334  0A15  1283               	bcf	3,5	;RP0=0, select bank0
  3335  0A16  1887               	btfsc	7,1	;volatile
  3336  0A17  2A20               	goto	l6984
  3337                           
  3338                           ;SlaveLiofilizadorVer1.c: 972:               {;SlaveLiofilizadorVer1.c: 973:            
      +                             if(TempoON_1!=0)
  3339  0A18  1683               	bsf	3,5	;RP0=1, select bank1
  3340  0A19  0868               	movf	_TempoON_1^(0+128),w
  3341  0A1A  1903               	btfsc	3,2
  3342  0A1B  0008               	return
  3343                           
  3344                           ;SlaveLiofilizadorVer1.c: 974:                  {;SlaveLiofilizadorVer1.c: 975:         
      +                                   TempoCNT_1=TempoON_1;
  3345  0A1C  00E6               	movwf	_TempoCNT_1^(0+128)	;volatile
  3346                           
  3347                           ;SlaveLiofilizadorVer1.c: 976:                  PORTCbits.RC1=1;
  3348  0A1D  1283               	bcf	3,5	;RP0=0, select bank0
  3349  0A1E  1487               	bsf	7,1	;volatile
  3350  0A1F  0008               	return
  3351  0A20                     l6984:
  3352                           
  3353                           ;SlaveLiofilizadorVer1.c: 980:               {;SlaveLiofilizadorVer1.c: 981:            
      +                             if(TempoOFF_1!=0)
  3354  0A20  1683               	bsf	3,5	;RP0=1, select bank1
  3355  0A21  0867               	movf	_TempoOFF_1^(0+128),w
  3356  0A22  1903               	btfsc	3,2
  3357  0A23  0008               	return
  3358                           
  3359                           ;SlaveLiofilizadorVer1.c: 982:                  {;SlaveLiofilizadorVer1.c: 983:         
      +                                   TempoCNT_1=TempoOFF_1;
  3360  0A24  00E6               	movwf	_TempoCNT_1^(0+128)	;volatile
  3361                           
  3362                           ;SlaveLiofilizadorVer1.c: 984:                  PORTCbits.RC1=0;
  3363  0A25  1283               	bcf	3,5	;RP0=0, select bank0
  3364  0A26  1087               	bcf	7,1	;volatile
  3365  0A27  0008               	return
  3366  0A28                     __end_of_Rele1Ligado:
  3367  0A28                     __ptext8:	
  3368 ;; *************** function _eval_poly *****************
  3369 ;; Defined at:
  3370 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\evalpoly.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;  x               4    0[BANK1 ] PTR int 
  3373 ;;  d               1    4[BANK1 ] PTR const 
  3374 ;;		 -> log@coeff(36), 
  3375 ;;  n               2    5[BANK1 ] int 
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;  res             4   12[BANK1 ] int 
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  4    0[BANK1 ] int 
  3380 ;; Registers used:
  3381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3382 ;; Tracked objects:
  3383 ;;		On entry : 300/100
  3384 ;;		On exit  : 300/100
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3387 ;;      Params:         0       0       7       0       0
  3388 ;;      Locals:         0       0       4       0       0
  3389 ;;      Temps:          0       0       5       0       0
  3390 ;;      Totals:         0       0      16       0       0
  3391 ;;Total ram usage:       16 bytes
  3392 ;; Hardware stack levels used: 1
  3393 ;; Hardware stack levels required when called: 3
  3394 ;; This function calls:
  3395 ;;		___fladd
  3396 ;;		___flmul
  3397 ;; This function is called by:
  3398 ;;		_log
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401                           
  3402                           
  3403                           ;psect for function _eval_poly
  3404  0A28                     _eval_poly:
  3405                           
  3406                           ;incstack = 0
  3407                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3408  0A28  0825               	movf	eval_poly@n^(0+128),w
  3409  0A29  00A7               	movwf	??_eval_poly^(0+128)
  3410  0A2A  3001               	movlw	1
  3411  0A2B  1003               	clrc
  3412  0A2C                     L2:
  3413  0A2C  0DA7               	rlf	??_eval_poly^(0+128),f
  3414  0A2D  3EFF               	addlw	-1
  3415  0A2E  1003               	clrc
  3416  0A2F  1D03               	skipz
  3417  0A30  2A2C               	goto	L2
  3418  0A31  0D27               	rlf	??_eval_poly^(0+128),w
  3419  0A32  0724               	addwf	eval_poly@d^(0+128),w
  3420  0A33  0084               	movwf	4
  3421  0A34  160A  118A  200A  120A  158A  	fcall	stringdir
  3422  0A39  00A8               	movwf	(??_eval_poly+1)^(0+128)
  3423  0A3A  160A  118A  200A  120A  158A  	fcall	stringdir
  3424  0A3F  00A9               	movwf	((??_eval_poly+1)^(0+128)+1)
  3425  0A40  160A  118A  200A  120A  158A  	fcall	stringdir
  3426  0A45  00AA               	movwf	((??_eval_poly+1)^(0+128)+2)
  3427  0A46  160A  118A  200A  120A  158A  	fcall	stringdir
  3428  0A4B  00AB               	movwf	((??_eval_poly+1)^(0+128)+3)
  3429  0A4C  082B               	movf	(??_eval_poly+4)^(0+128),w
  3430  0A4D  00AF               	movwf	(eval_poly@res+3)^(0+128)
  3431  0A4E  082A               	movf	(??_eval_poly+3)^(0+128),w
  3432  0A4F  00AE               	movwf	(eval_poly@res+2)^(0+128)
  3433  0A50  0829               	movf	(??_eval_poly+2)^(0+128),w
  3434  0A51  00AD               	movwf	(eval_poly@res+1)^(0+128)
  3435  0A52  0828               	movf	(??_eval_poly+1)^(0+128),w
  3436  0A53                     L4:
  3437  0A53  00AC               	movwf	eval_poly@res^(0+128)
  3438  0A54  0825               	movf	eval_poly@n^(0+128),w
  3439  0A55  0426               	iorwf	(eval_poly@n+1)^(0+128),w
  3440  0A56  1903               	btfsc	3,2
  3441  0A57  2ACB               	goto	l6324
  3442  0A58  30FF               	movlw	-1
  3443  0A59  07A5               	addwf	eval_poly@n^(0+128),f
  3444  0A5A  1C03               	skipc
  3445  0A5B  03A6               	decf	(eval_poly@n+1)^(0+128),f
  3446  0A5C  0825               	movf	eval_poly@n^(0+128),w
  3447  0A5D  00A7               	movwf	??_eval_poly^(0+128)
  3448  0A5E  3001               	movlw	1
  3449  0A5F  1003               	clrc
  3450  0A60                     L3:
  3451  0A60  0DA7               	rlf	??_eval_poly^(0+128),f
  3452  0A61  3EFF               	addlw	-1
  3453  0A62  1003               	clrc
  3454  0A63  1D03               	skipz
  3455  0A64  2A60               	goto	L3
  3456  0A65  0D27               	rlf	??_eval_poly^(0+128),w
  3457  0A66  0724               	addwf	eval_poly@d^(0+128),w
  3458  0A67  0084               	movwf	4
  3459  0A68  160A  118A  200A  120A  158A  	fcall	stringdir
  3460  0A6D  00A8               	movwf	(??_eval_poly+1)^(0+128)
  3461  0A6E  160A  118A  200A  120A  158A  	fcall	stringdir
  3462  0A73  00A9               	movwf	((??_eval_poly+1)^(0+128)+1)
  3463  0A74  160A  118A  200A  120A  158A  	fcall	stringdir
  3464  0A79  00AA               	movwf	((??_eval_poly+1)^(0+128)+2)
  3465  0A7A  160A  118A  200A  120A  158A  	fcall	stringdir
  3466  0A7F  00AB               	movwf	((??_eval_poly+1)^(0+128)+3)
  3467  0A80  082B               	movf	(??_eval_poly+4)^(0+128),w
  3468  0A81  1283               	bcf	3,5	;RP0=0, select bank0
  3469  0A82  00BB               	movwf	___fladd@b+3
  3470  0A83  1683               	bsf	3,5	;RP0=1, select bank1
  3471  0A84  082A               	movf	(??_eval_poly+3)^(0+128),w
  3472  0A85  1283               	bcf	3,5	;RP0=0, select bank0
  3473  0A86  00BA               	movwf	___fladd@b+2
  3474  0A87  1683               	bsf	3,5	;RP0=1, select bank1
  3475  0A88  0829               	movf	(??_eval_poly+2)^(0+128),w
  3476  0A89  1283               	bcf	3,5	;RP0=0, select bank0
  3477  0A8A  00B9               	movwf	___fladd@b+1
  3478  0A8B  1683               	bsf	3,5	;RP0=1, select bank1
  3479  0A8C  0828               	movf	(??_eval_poly+1)^(0+128),w
  3480  0A8D  1283               	bcf	3,5	;RP0=0, select bank0
  3481  0A8E  00B8               	movwf	___fladd@b
  3482  0A8F  1683               	bsf	3,5	;RP0=1, select bank1
  3483  0A90  082F               	movf	(eval_poly@res+3)^(0+128),w
  3484  0A91  1283               	bcf	3,5	;RP0=0, select bank0
  3485  0A92  00D7               	movwf	___flmul@b+3
  3486  0A93  1683               	bsf	3,5	;RP0=1, select bank1
  3487  0A94  082E               	movf	(eval_poly@res+2)^(0+128),w
  3488  0A95  1283               	bcf	3,5	;RP0=0, select bank0
  3489  0A96  00D6               	movwf	___flmul@b+2
  3490  0A97  1683               	bsf	3,5	;RP0=1, select bank1
  3491  0A98  082D               	movf	(eval_poly@res+1)^(0+128),w
  3492  0A99  1283               	bcf	3,5	;RP0=0, select bank0
  3493  0A9A  00D5               	movwf	___flmul@b+1
  3494  0A9B  1683               	bsf	3,5	;RP0=1, select bank1
  3495  0A9C  082C               	movf	eval_poly@res^(0+128),w
  3496  0A9D  1283               	bcf	3,5	;RP0=0, select bank0
  3497  0A9E  00D4               	movwf	___flmul@b
  3498  0A9F  1683               	bsf	3,5	;RP0=1, select bank1
  3499  0AA0  0823               	movf	(eval_poly@x+3)^(0+128),w
  3500  0AA1  1283               	bcf	3,5	;RP0=0, select bank0
  3501  0AA2  00DB               	movwf	___flmul@a+3
  3502  0AA3  1683               	bsf	3,5	;RP0=1, select bank1
  3503  0AA4  0822               	movf	(eval_poly@x+2)^(0+128),w
  3504  0AA5  1283               	bcf	3,5	;RP0=0, select bank0
  3505  0AA6  00DA               	movwf	___flmul@a+2
  3506  0AA7  1683               	bsf	3,5	;RP0=1, select bank1
  3507  0AA8  0821               	movf	(eval_poly@x+1)^(0+128),w
  3508  0AA9  1283               	bcf	3,5	;RP0=0, select bank0
  3509  0AAA  00D9               	movwf	___flmul@a+1
  3510  0AAB  1683               	bsf	3,5	;RP0=1, select bank1
  3511  0AAC  0820               	movf	eval_poly@x^(0+128),w
  3512  0AAD  1283               	bcf	3,5	;RP0=0, select bank0
  3513  0AAE  00D8               	movwf	___flmul@a
  3514  0AAF  120A  118A  23C3  120A  158A  	fcall	___flmul
  3515  0AB4  160A  158A  27DD  120A  158A  	fcall	PL36	;call to abstracted procedure
  3516  0AB9  22D4  120A  158A   	fcall	___fladd
  3517  0ABC  083B               	movf	?___fladd+3,w
  3518  0ABD  1683               	bsf	3,5	;RP0=1, select bank1
  3519  0ABE  00AF               	movwf	(eval_poly@res+3)^(0+128)
  3520  0ABF  1283               	bcf	3,5	;RP0=0, select bank0
  3521  0AC0  083A               	movf	?___fladd+2,w
  3522  0AC1  1683               	bsf	3,5	;RP0=1, select bank1
  3523  0AC2  00AE               	movwf	(eval_poly@res+2)^(0+128)
  3524  0AC3  1283               	bcf	3,5	;RP0=0, select bank0
  3525  0AC4  0839               	movf	?___fladd+1,w
  3526  0AC5  1683               	bsf	3,5	;RP0=1, select bank1
  3527  0AC6  00AD               	movwf	(eval_poly@res+1)^(0+128)
  3528  0AC7  1283               	bcf	3,5	;RP0=0, select bank0
  3529  0AC8  0838               	movf	?___fladd,w
  3530  0AC9  1683               	bsf	3,5	;RP0=1, select bank1
  3531  0ACA  2A53               	goto	L4
  3532  0ACB                     l6324:
  3533  0ACB  082F               	movf	(eval_poly@res+3)^(0+128),w
  3534  0ACC  00A3               	movwf	(?_eval_poly+3)^(0+128)
  3535  0ACD  082E               	movf	(eval_poly@res+2)^(0+128),w
  3536  0ACE  00A2               	movwf	(?_eval_poly+2)^(0+128)
  3537  0ACF  082D               	movf	(eval_poly@res+1)^(0+128),w
  3538  0AD0  00A1               	movwf	(?_eval_poly+1)^(0+128)
  3539  0AD1  082C               	movf	eval_poly@res^(0+128),w
  3540  0AD2  00A0               	movwf	?_eval_poly^(0+128)
  3541  0AD3  0008               	return
  3542  0AD4                     __end_of_eval_poly:
  3543  0AD4                     __ptext64:	
  3544 ;; *************** function ___fladd *****************
  3545 ;; Defined at:
  3546 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;  b               4   24[BANK0 ] void 
  3549 ;;  a               4   28[BANK0 ] void 
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;  grs             1   43[BANK0 ] unsigned char 
  3552 ;;  bexp            1   42[BANK0 ] unsigned char 
  3553 ;;  aexp            1   41[BANK0 ] unsigned char 
  3554 ;;  signs           1   40[BANK0 ] unsigned char 
  3555 ;; Return value:  Size  Location     Type
  3556 ;;                  4   24[BANK0 ] unsigned char 
  3557 ;; Registers used:
  3558 ;;		wreg, status,2, status,0, btemp+1
  3559 ;; Tracked objects:
  3560 ;;		On entry : 300/0
  3561 ;;		On exit  : 300/0
  3562 ;;		Unchanged: 0/0
  3563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3564 ;;      Params:         0       8       0       0       0
  3565 ;;      Locals:         0       4       0       0       0
  3566 ;;      Temps:          0       8       0       0       0
  3567 ;;      Totals:         0      20       0       0       0
  3568 ;;Total ram usage:       20 bytes
  3569 ;; Hardware stack levels used: 1
  3570 ;; Hardware stack levels required when called: 1
  3571 ;; This function calls:
  3572 ;;		Nothing
  3573 ;; This function is called by:
  3574 ;;		_mediatemperaturaNTC
  3575 ;;		_ADC_Read_NTC
  3576 ;;		___flsub
  3577 ;;		_log
  3578 ;;		_eval_poly
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           
  3583                           ;psect for function ___fladd
  3584  0AD4                     ___fladd:
  3585                           
  3586                           ;incstack = 0
  3587                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3588  0AD4  083B               	movf	___fladd@b+3,w
  3589  0AD5  00C8               	movwf	___fladd@signs
  3590  0AD6  3080               	movlw	128
  3591  0AD7  05C8               	andwf	___fladd@signs,f
  3592  0AD8  1003               	clrc
  3593  0AD9  0D3B               	rlf	___fladd@b+3,w
  3594  0ADA  00CA               	movwf	___fladd@bexp
  3595  0ADB  1BBA               	btfsc	___fladd@b+2,7
  3596  0ADC  144A               	bsf	___fladd@bexp,0
  3597  0ADD  084A               	movf	___fladd@bexp,w
  3598  0ADE  1903               	btfsc	3,2
  3599  0ADF  2AE8               	goto	l1348
  3600  0AE0  0F4A               	incfsz	___fladd@bexp,w
  3601  0AE1  2AE6               	goto	l1349
  3602  0AE2  01B8               	clrf	___fladd@b
  3603  0AE3  01B9               	clrf	___fladd@b+1
  3604  0AE4  01BA               	clrf	___fladd@b+2
  3605  0AE5  01BB               	clrf	___fladd@b+3
  3606  0AE6                     l1349:
  3607  0AE6  17BA               	bsf	___fladd@b+2,7
  3608  0AE7  2AEB               	goto	L18
  3609  0AE8                     l1348:
  3610  0AE8  01B8               	clrf	___fladd@b
  3611  0AE9  01B9               	clrf	___fladd@b+1
  3612  0AEA  01BA               	clrf	___fladd@b+2
  3613  0AEB                     L18:
  3614  0AEB  01BB               	clrf	___fladd@b+3
  3615  0AEC  083F               	movf	___fladd@a+3,w
  3616  0AED  00C9               	movwf	___fladd@aexp
  3617  0AEE  3080               	movlw	128
  3618  0AEF  05C9               	andwf	___fladd@aexp,f
  3619  0AF0  0849               	movf	___fladd@aexp,w
  3620  0AF1  0648               	xorwf	___fladd@signs,w
  3621  0AF2  1D03               	btfss	3,2
  3622  0AF3  1748               	bsf	___fladd@signs,6
  3623  0AF4  1003               	clrc
  3624  0AF5  0D3F               	rlf	___fladd@a+3,w
  3625  0AF6  00C9               	movwf	___fladd@aexp
  3626  0AF7  1BBE               	btfsc	___fladd@a+2,7
  3627  0AF8  1449               	bsf	___fladd@aexp,0
  3628  0AF9  0849               	movf	___fladd@aexp,w
  3629  0AFA  1903               	btfsc	3,2
  3630  0AFB  2B04               	goto	l1353
  3631  0AFC  0F49               	incfsz	___fladd@aexp,w
  3632  0AFD  2B02               	goto	l1354
  3633  0AFE  01BC               	clrf	___fladd@a
  3634  0AFF  01BD               	clrf	___fladd@a+1
  3635  0B00  01BE               	clrf	___fladd@a+2
  3636  0B01  01BF               	clrf	___fladd@a+3
  3637  0B02                     l1354:
  3638  0B02  17BE               	bsf	___fladd@a+2,7
  3639  0B03  2B07               	goto	L19
  3640  0B04                     l1353:
  3641  0B04  01BC               	clrf	___fladd@a
  3642  0B05  01BD               	clrf	___fladd@a+1
  3643  0B06  01BE               	clrf	___fladd@a+2
  3644  0B07                     L19:
  3645  0B07  01BF               	clrf	___fladd@a+3
  3646  0B08  084A               	movf	___fladd@bexp,w
  3647  0B09  0249               	subwf	___fladd@aexp,w
  3648  0B0A  1803               	skipnc
  3649  0B0B  2B2E               	goto	l3996
  3650  0B0C  1F48               	btfss	___fladd@signs,6
  3651  0B0D  2B10               	goto	l3966
  3652  0B0E  3080               	movlw	128
  3653  0B0F  06C8               	xorwf	___fladd@signs,f
  3654  0B10                     l3966:
  3655  0B10  084A               	movf	___fladd@bexp,w
  3656  0B11  00CB               	movwf	___fladd@grs
  3657  0B12  0849               	movf	___fladd@aexp,w
  3658  0B13  00CA               	movwf	___fladd@bexp
  3659  0B14  084B               	movf	___fladd@grs,w
  3660  0B15  00C9               	movwf	___fladd@aexp
  3661  0B16  0838               	movf	___fladd@b,w
  3662  0B17  00CB               	movwf	___fladd@grs
  3663  0B18  083C               	movf	___fladd@a,w
  3664  0B19  00B8               	movwf	___fladd@b
  3665  0B1A  084B               	movf	___fladd@grs,w
  3666  0B1B  00BC               	movwf	___fladd@a
  3667  0B1C  0839               	movf	___fladd@b+1,w
  3668  0B1D  00CB               	movwf	___fladd@grs
  3669  0B1E  083D               	movf	___fladd@a+1,w
  3670  0B1F  00B9               	movwf	___fladd@b+1
  3671  0B20  084B               	movf	___fladd@grs,w
  3672  0B21  00BD               	movwf	___fladd@a+1
  3673  0B22  083A               	movf	___fladd@b+2,w
  3674  0B23  00CB               	movwf	___fladd@grs
  3675  0B24  083E               	movf	___fladd@a+2,w
  3676  0B25  00BA               	movwf	___fladd@b+2
  3677  0B26  084B               	movf	___fladd@grs,w
  3678  0B27  00BE               	movwf	___fladd@a+2
  3679  0B28  083B               	movf	___fladd@b+3,w
  3680  0B29  00CB               	movwf	___fladd@grs
  3681  0B2A  083F               	movf	___fladd@a+3,w
  3682  0B2B  00BB               	movwf	___fladd@b+3
  3683  0B2C  084B               	movf	___fladd@grs,w
  3684  0B2D  00BF               	movwf	___fladd@a+3
  3685  0B2E                     l3996:
  3686  0B2E  01CB               	clrf	___fladd@grs
  3687  0B2F  0849               	movf	___fladd@aexp,w
  3688  0B30  00C0               	movwf	??___fladd
  3689  0B31  01C1               	clrf	??___fladd+1
  3690  0B32  0841               	movf	??___fladd+1,w
  3691  0B33  00C3               	movwf	??___fladd+3
  3692  0B34  084A               	movf	___fladd@bexp,w
  3693  0B35  0240               	subwf	??___fladd,w
  3694  0B36  00C2               	movwf	??___fladd+2
  3695  0B37  1C03               	skipc
  3696  0B38  03C3               	decf	??___fladd+3,f
  3697  0B39  0843               	movf	??___fladd+3,w
  3698  0B3A  3A80               	xorlw	128
  3699  0B3B  00FF               	movwf	127
  3700  0B3C  3080               	movlw	128
  3701  0B3D  027F               	subwf	127,w
  3702  0B3E  1D03               	skipz
  3703  0B3F  2B42               	goto	u2835
  3704  0B40  301A               	movlw	26
  3705  0B41  0242               	subwf	??___fladd+2,w
  3706  0B42                     u2835:
  3707  0B42  1C03               	skipc
  3708  0B43  2B63               	goto	l4012
  3709  0B44  1283               	bcf	3,5	;RP0=0, select bank0
  3710  0B45  1303               	bcf	3,6	;RP1=0, select bank0
  3711  0B46  083B               	movf	___fladd@b+3,w
  3712  0B47  043A               	iorwf	___fladd@b+2,w
  3713  0B48  0439               	iorwf	___fladd@b+1,w
  3714  0B49  0438               	iorwf	___fladd@b,w
  3715  0B4A  1903               	btfsc	3,2
  3716  0B4B  2B4E               	goto	u2840
  3717  0B4C  3001               	movlw	1
  3718  0B4D  2B4F               	goto	u2850
  3719  0B4E                     u2840:
  3720  0B4E  3000               	movlw	0
  3721  0B4F                     u2850:
  3722  0B4F  00CB               	movwf	___fladd@grs
  3723  0B50  01B8               	clrf	___fladd@b
  3724  0B51  01B9               	clrf	___fladd@b+1
  3725  0B52  01BA               	clrf	___fladd@b+2
  3726  0B53  01BB               	clrf	___fladd@b+3
  3727  0B54  0849               	movf	___fladd@aexp,w
  3728  0B55  00CA               	movwf	___fladd@bexp
  3729  0B56  2B69               	goto	l1359
  3730  0B57                     l1361:
  3731  0B57  1C4B               	btfss	___fladd@grs,0
  3732  0B58  2B5E               	goto	l1362
  3733  0B59  1003               	clrc
  3734  0B5A  0C4B               	rrf	___fladd@grs,w
  3735  0B5B  3801               	iorlw	1
  3736  0B5C  00CB               	movwf	___fladd@grs
  3737  0B5D  2B60               	goto	l1363
  3738  0B5E                     l1362:
  3739  0B5E  1003               	clrc
  3740  0B5F  0CCB               	rrf	___fladd@grs,f
  3741  0B60                     l1363:
  3742  0B60  27CD  120A  158A   	fcall	PL58	;call to abstracted procedure
  3743  0B63                     l4012:
  3744  0B63  1283               	bcf	3,5	;RP0=0, select bank0
  3745  0B64  1303               	bcf	3,6	;RP1=0, select bank0
  3746  0B65  0849               	movf	___fladd@aexp,w
  3747  0B66  024A               	subwf	___fladd@bexp,w
  3748  0B67  1C03               	skipc
  3749  0B68  2B57               	goto	l1361
  3750  0B69                     l1359:
  3751  0B69  1B48               	btfsc	___fladd@signs,6
  3752  0B6A  2B92               	goto	l4032
  3753  0B6B  084A               	movf	___fladd@bexp,w
  3754  0B6C  1D03               	btfss	3,2
  3755  0B6D  2B6F               	goto	l4018
  3756  0B6E  2FE3               	ljmp	PL80	;call to abstracted procedure
  3757  0B6F                     l4018:
  3758  0B6F  083C               	movf	___fladd@a,w
  3759  0B70  07B8               	addwf	___fladd@b,f
  3760  0B71  083D               	movf	___fladd@a+1,w
  3761  0B72  1103               	clrz
  3762  0B73  1803               	skipnc
  3763  0B74  3E01               	addlw	1
  3764  0B75  1D03               	btfss	3,2
  3765  0B76  07B9               	addwf	___fladd@b+1,f
  3766  0B77  083E               	movf	___fladd@a+2,w
  3767  0B78  1103               	clrz
  3768  0B79  1803               	skipnc
  3769  0B7A  3E01               	addlw	1
  3770  0B7B  1D03               	btfss	3,2
  3771  0B7C  07BA               	addwf	___fladd@b+2,f
  3772  0B7D  083F               	movf	___fladd@a+3,w
  3773  0B7E  1103               	clrz
  3774  0B7F  1803               	skipnc
  3775  0B80  3E01               	addlw	1
  3776  0B81  1D03               	btfss	3,2
  3777  0B82  07BB               	addwf	___fladd@b+3,f
  3778  0B83  1C3B               	btfss	___fladd@b+3,0
  3779  0B84  2C0E               	goto	l4062
  3780  0B85  1C4B               	btfss	___fladd@grs,0
  3781  0B86  2B8C               	goto	l1370
  3782  0B87  1003               	clrc
  3783  0B88  0C4B               	rrf	___fladd@grs,w
  3784  0B89  3801               	iorlw	1
  3785  0B8A  00CB               	movwf	___fladd@grs
  3786  0B8B  2B8E               	goto	l1371
  3787  0B8C                     l1370:
  3788  0B8C  1003               	clrc
  3789  0B8D  0CCB               	rrf	___fladd@grs,f
  3790  0B8E                     l1371:
  3791  0B8E  27CD  120A  158A   	fcall	PL58	;call to abstracted procedure
  3792  0B91  2C0E               	goto	l4062
  3793  0B92                     l4032:
  3794  0B92  083B               	movf	___fladd@b+3,w
  3795  0B93  3A80               	xorlw	128
  3796  0B94  00FF               	movwf	127
  3797  0B95  083F               	movf	___fladd@a+3,w
  3798  0B96  3A80               	xorlw	128
  3799  0B97  027F               	subwf	127,w
  3800  0B98  1D03               	skipz
  3801  0B99  2BA4               	goto	u2953
  3802  0B9A  083E               	movf	___fladd@a+2,w
  3803  0B9B  023A               	subwf	___fladd@b+2,w
  3804  0B9C  1D03               	skipz
  3805  0B9D  2BA4               	goto	u2953
  3806  0B9E  083D               	movf	___fladd@a+1,w
  3807  0B9F  0239               	subwf	___fladd@b+1,w
  3808  0BA0  1D03               	skipz
  3809  0BA1  2BA4               	goto	u2953
  3810  0BA2  083C               	movf	___fladd@a,w
  3811  0BA3  0238               	subwf	___fladd@b,w
  3812  0BA4                     u2953:
  3813  0BA4  1803               	skipnc
  3814  0BA5  2BE4               	goto	l4042
  3815  0BA6  30FF               	movlw	255
  3816  0BA7  00C0               	movwf	??___fladd
  3817  0BA8  00C1               	movwf	??___fladd+1
  3818  0BA9  00C2               	movwf	??___fladd+2
  3819  0BAA  00C3               	movwf	??___fladd+3
  3820  0BAB  083C               	movf	___fladd@a,w
  3821  0BAC  00C4               	movwf	??___fladd+4
  3822  0BAD  083D               	movf	___fladd@a+1,w
  3823  0BAE  00C5               	movwf	??___fladd+5
  3824  0BAF  083E               	movf	___fladd@a+2,w
  3825  0BB0  00C6               	movwf	??___fladd+6
  3826  0BB1  083F               	movf	___fladd@a+3,w
  3827  0BB2  00C7               	movwf	??___fladd+7
  3828  0BB3  0838               	movf	___fladd@b,w
  3829  0BB4  02C4               	subwf	??___fladd+4,f
  3830  0BB5  0839               	movf	___fladd@b+1,w
  3831  0BB6  1C03               	skipc
  3832  0BB7  0F39               	incfsz	___fladd@b+1,w
  3833  0BB8  02C5               	subwf	??___fladd+5,f
  3834  0BB9  083A               	movf	___fladd@b+2,w
  3835  0BBA  1C03               	skipc
  3836  0BBB  0F3A               	incfsz	___fladd@b+2,w
  3837  0BBC  02C6               	subwf	??___fladd+6,f
  3838  0BBD  083B               	movf	___fladd@b+3,w
  3839  0BBE  1C03               	skipc
  3840  0BBF  0F3B               	incfsz	___fladd@b+3,w
  3841  0BC0  02C7               	subwf	??___fladd+7,f
  3842  0BC1  0844               	movf	??___fladd+4,w
  3843  0BC2  07C0               	addwf	??___fladd,f
  3844  0BC3  0845               	movf	??___fladd+5,w
  3845  0BC4  1803               	skipnc
  3846  0BC5  0F45               	incfsz	??___fladd+5,w
  3847  0BC6  07C1               	addwf	??___fladd+1,f
  3848  0BC7  0846               	movf	??___fladd+6,w
  3849  0BC8  1803               	skipnc
  3850  0BC9  0F46               	incfsz	??___fladd+6,w
  3851  0BCA  07C2               	addwf	??___fladd+2,f
  3852  0BCB  0847               	movf	??___fladd+7,w
  3853  0BCC  1803               	skipnc
  3854  0BCD  0A47               	incf	??___fladd+7,w
  3855  0BCE  07C3               	addwf	??___fladd+3,f
  3856  0BCF  0843               	movf	??___fladd+3,w
  3857  0BD0  00BB               	movwf	___fladd@b+3
  3858  0BD1  0842               	movf	??___fladd+2,w
  3859  0BD2  00BA               	movwf	___fladd@b+2
  3860  0BD3  0841               	movf	??___fladd+1,w
  3861  0BD4  00B9               	movwf	___fladd@b+1
  3862  0BD5  0840               	movf	??___fladd,w
  3863  0BD6  00B8               	movwf	___fladd@b
  3864  0BD7  3080               	movlw	128
  3865  0BD8  06C8               	xorwf	___fladd@signs,f
  3866  0BD9  09CB               	comf	___fladd@grs,f
  3867  0BDA  0FCB               	incfsz	___fladd@grs,f
  3868  0BDB  2BF2               	goto	l1376
  3869  0BDC  0AB8               	incf	___fladd@b,f
  3870  0BDD  1903               	skipnz
  3871  0BDE  0AB9               	incf	___fladd@b+1,f
  3872  0BDF  1903               	skipnz
  3873  0BE0  0ABA               	incf	___fladd@b+2,f
  3874  0BE1  1903               	skipnz
  3875  0BE2  0ABB               	incf	___fladd@b+3,f
  3876  0BE3  2BF2               	goto	l1376
  3877  0BE4                     l4042:
  3878  0BE4  083C               	movf	___fladd@a,w
  3879  0BE5  02B8               	subwf	___fladd@b,f
  3880  0BE6  083D               	movf	___fladd@a+1,w
  3881  0BE7  1C03               	skipc
  3882  0BE8  0F3D               	incfsz	___fladd@a+1,w
  3883  0BE9  02B9               	subwf	___fladd@b+1,f
  3884  0BEA  083E               	movf	___fladd@a+2,w
  3885  0BEB  1C03               	skipc
  3886  0BEC  0F3E               	incfsz	___fladd@a+2,w
  3887  0BED  02BA               	subwf	___fladd@b+2,f
  3888  0BEE  083F               	movf	___fladd@a+3,w
  3889  0BEF  1C03               	skipc
  3890  0BF0  0F3F               	incfsz	___fladd@a+3,w
  3891  0BF1  02BB               	subwf	___fladd@b+3,f
  3892  0BF2                     l1376:
  3893  0BF2  083B               	movf	___fladd@b+3,w
  3894  0BF3  043A               	iorwf	___fladd@b+2,w
  3895  0BF4  0439               	iorwf	___fladd@b+1,w
  3896  0BF5  0438               	iorwf	___fladd@b,w
  3897  0BF6  1D03               	skipz
  3898  0BF7  2C0C               	goto	l4060
  3899  0BF8  084B               	movf	___fladd@grs,w
  3900  0BF9  1D03               	btfss	3,2
  3901  0BFA  2C0C               	goto	l4060
  3902  0BFB  2FE3               	ljmp	PL80	;call to abstracted procedure
  3903  0BFC                     l4048:
  3904  0BFC  1003               	clrc
  3905  0BFD  0DB8               	rlf	___fladd@b,f
  3906  0BFE  0DB9               	rlf	___fladd@b+1,f
  3907  0BFF  0DBA               	rlf	___fladd@b+2,f
  3908  0C00  0DBB               	rlf	___fladd@b+3,f
  3909  0C01  1BCB               	btfsc	___fladd@grs,7
  3910  0C02  1438               	bsf	___fladd@b,0
  3911  0C03  1C4B               	btfss	___fladd@grs,0
  3912  0C04  2C07               	goto	l1381
  3913  0C05  1403               	setc
  3914  0C06  2C08               	goto	L20
  3915  0C07                     l1381:
  3916  0C07  1003               	clrc
  3917  0C08                     L20:
  3918  0C08  0DCB               	rlf	___fladd@grs,f
  3919  0C09  084A               	movf	___fladd@bexp,w
  3920  0C0A  1D03               	btfss	3,2
  3921  0C0B  03CA               	decf	___fladd@bexp,f
  3922  0C0C                     l4060:
  3923  0C0C  1FBA               	btfss	___fladd@b+2,7
  3924  0C0D  2BFC               	goto	l4048
  3925  0C0E                     l4062:
  3926  0C0E  01C9               	clrf	___fladd@aexp
  3927  0C0F  1FCB               	btfss	___fladd@grs,7
  3928  0C10  2C19               	goto	l4072
  3929  0C11  084B               	movf	___fladd@grs,w
  3930  0C12  397F               	andlw	127
  3931  0C13  1903               	btfsc	3,2
  3932  0C14  1838               	btfsc	___fladd@b,0
  3933  0C15  2C17               	goto	l4068
  3934  0C16  2C19               	goto	l4072
  3935  0C17                     l4068:
  3936  0C17  01C9               	clrf	___fladd@aexp
  3937  0C18  0AC9               	incf	___fladd@aexp,f
  3938  0C19                     l4072:
  3939  0C19  0849               	movf	___fladd@aexp,w
  3940  0C1A  1903               	btfsc	3,2
  3941  0C1B  2C2C               	goto	l4084
  3942  0C1C  0AB8               	incf	___fladd@b,f
  3943  0C1D  1903               	skipnz
  3944  0C1E  0AB9               	incf	___fladd@b+1,f
  3945  0C1F  1903               	skipnz
  3946  0C20  0ABA               	incf	___fladd@b+2,f
  3947  0C21  1903               	skipnz
  3948  0C22  0ABB               	incf	___fladd@b+3,f
  3949  0C23  1C3B               	btfss	___fladd@b+3,0
  3950  0C24  2C2C               	goto	l4084
  3951  0C25  0D3B               	rlf	___fladd@b+3,w
  3952  0C26  0CBB               	rrf	___fladd@b+3,f
  3953  0C27  0CBA               	rrf	___fladd@b+2,f
  3954  0C28  0CB9               	rrf	___fladd@b+1,f
  3955  0C29  0CB8               	rrf	___fladd@b,f
  3956  0C2A  0F4A               	incfsz	___fladd@bexp,w
  3957  0C2B  0ACA               	incf	___fladd@bexp,f
  3958  0C2C                     l4084:
  3959  0C2C  0A4A               	incf	___fladd@bexp,w
  3960  0C2D  1D03               	btfss	3,2
  3961  0C2E  084A               	movf	___fladd@bexp,w
  3962  0C2F  1D03               	btfss	3,2
  3963  0C30  2C38               	goto	l4092
  3964  0C31  01B8               	clrf	___fladd@b
  3965  0C32  01B9               	clrf	___fladd@b+1
  3966  0C33  01BA               	clrf	___fladd@b+2
  3967  0C34  01BB               	clrf	___fladd@b+3
  3968  0C35  084A               	movf	___fladd@bexp,w
  3969  0C36  1903               	btfsc	3,2
  3970  0C37  01C8               	clrf	___fladd@signs
  3971  0C38                     l4092:
  3972  0C38  1C4A               	btfss	___fladd@bexp,0
  3973  0C39  2C3C               	goto	l1396
  3974  0C3A  17BA               	bsf	___fladd@b+2,7
  3975  0C3B  2C3D               	goto	l4096
  3976  0C3C                     l1396:
  3977  0C3C  13BA               	bcf	___fladd@b+2,7
  3978  0C3D                     l4096:
  3979  0C3D  1003               	clrc
  3980  0C3E  0C4A               	rrf	___fladd@bexp,w
  3981  0C3F  00BB               	movwf	___fladd@b+3
  3982  0C40  1BC8               	btfsc	___fladd@signs,7
  3983  0C41  17BB               	bsf	___fladd@b+3,7
  3984  0C42  0008               	return
  3985  0C43                     __end_of___fladd:
  3986  0C43                     __ptext4:	
  3987 ;; *************** function _ADC_Read_NTC *****************
  3988 ;; Defined at:
  3989 ;;		line 73 in file "adc.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;  canal           1    wreg     unsigned char 
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  canal           1    0[COMMON] unsigned char 
  3994 ;;  temperatura     4   42[BANK1 ] float 
  3995 ;;  resistencia     4   35[BANK1 ] float 
  3996 ;;  calc            4   29[BANK1 ] float 
  3997 ;;  value           2   40[BANK1 ] unsigned int 
  3998 ;;  B               2   33[BANK1 ] int 
  3999 ;;  i               1   39[BANK1 ] unsigned char 
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  4   25[BANK1 ] float 
  4002 ;; Registers used:
  4003 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4004 ;; Tracked objects:
  4005 ;;		On entry : 300/100
  4006 ;;		On exit  : 300/100
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4009 ;;      Params:         0       0       4       0       0
  4010 ;;      Locals:         0       0      17       0       0
  4011 ;;      Temps:          0       0       0       0       0
  4012 ;;      Totals:         0       0      21       0       0
  4013 ;;Total ram usage:       21 bytes
  4014 ;; Hardware stack levels used: 1
  4015 ;; Hardware stack levels required when called: 5
  4016 ;; This function calls:
  4017 ;;		___fladd
  4018 ;;		___fldiv
  4019 ;;		___flmul
  4020 ;;		___flsub
  4021 ;;		___lwdiv
  4022 ;;		___xxtofl
  4023 ;;		_captura
  4024 ;;		_log
  4025 ;; This function is called by:
  4026 ;;		_mediatemperaturaNTC
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           
  4031                           ;psect for function _ADC_Read_NTC
  4032  0C43                     _ADC_Read_NTC:
  4033                           
  4034                           ;adc.c: 74:     int B = 3975;
  4035                           
  4036                           ;incstack = 0
  4037                           ; Regs used in _ADC_Read_NTC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4038  0C43  3087               	movlw	135
  4039  0C44  00C1               	movwf	ADC_Read_NTC@B^(0+128)
  4040  0C45  300F               	movlw	15
  4041  0C46  00C2               	movwf	(ADC_Read_NTC@B^(0+128)+1)
  4042                           
  4043                           ;adc.c: 75:     float resistencia;;adc.c: 76:     float temperatura;;adc.c: 77:     floa
      +                          t calc;;adc.c: 78:     unsigned int value;;adc.c: 79:     unsigned char i;;adc.c: 81:   
      +                            value=0;
  4044  0C47  01C8               	clrf	ADC_Read_NTC@value^(0+128)
  4045  0C48  01C9               	clrf	(ADC_Read_NTC@value+1)^(0+128)
  4046                           
  4047                           ;adc.c: 82:     for(i=1;i<=50;i++)
  4048  0C49  01C7               	clrf	ADC_Read_NTC@i^(0+128)
  4049  0C4A  0AC7               	incf	ADC_Read_NTC@i^(0+128),f
  4050  0C4B                     l6928:
  4051                           
  4052                           ;adc.c: 83:         value+=captura();
  4053  0C4B  278A  120A  158A   	fcall	_captura
  4054  0C4E  0820               	movf	?_captura,w
  4055  0C4F  1683               	bsf	3,5	;RP0=1, select bank1
  4056  0C50  07C8               	addwf	ADC_Read_NTC@value^(0+128),f
  4057  0C51  1803               	skipnc
  4058  0C52  0AC9               	incf	(ADC_Read_NTC@value+1)^(0+128),f
  4059  0C53  1283               	bcf	3,5	;RP0=0, select bank0
  4060  0C54  0821               	movf	?_captura+1,w
  4061  0C55  1683               	bsf	3,5	;RP0=1, select bank1
  4062  0C56  07C9               	addwf	(ADC_Read_NTC@value+1)^(0+128),f
  4063  0C57  3033               	movlw	51
  4064  0C58  0AC7               	incf	ADC_Read_NTC@i^(0+128),f
  4065  0C59  0247               	subwf	ADC_Read_NTC@i^(0+128),w
  4066  0C5A  1C03               	skipc
  4067  0C5B  2C4B               	goto	l6928
  4068                           
  4069                           ;adc.c: 84:     value/=(i-1);
  4070  0C5C  0847               	movf	ADC_Read_NTC@i^(0+128),w
  4071  0C5D  1283               	bcf	3,5	;RP0=0, select bank0
  4072  0C5E  00A0               	movwf	___lwdiv@divisor
  4073  0C5F  30FF               	movlw	255
  4074  0C60  01A1               	clrf	___lwdiv@divisor+1
  4075  0C61  07A0               	addwf	___lwdiv@divisor,f
  4076  0C62  1803               	skipnc
  4077  0C63  0AA1               	incf	___lwdiv@divisor+1,f
  4078  0C64  07A1               	addwf	___lwdiv@divisor+1,f
  4079  0C65  1683               	bsf	3,5	;RP0=1, select bank1
  4080  0C66  0849               	movf	(ADC_Read_NTC@value+1)^(0+128),w
  4081  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4082  0C68  00A3               	movwf	___lwdiv@dividend+1
  4083  0C69  1683               	bsf	3,5	;RP0=1, select bank1
  4084  0C6A  0848               	movf	ADC_Read_NTC@value^(0+128),w
  4085  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  4086  0C6C  00A2               	movwf	___lwdiv@dividend
  4087  0C6D  2760  120A  158A   	fcall	___lwdiv
  4088  0C70  0821               	movf	?___lwdiv+1,w
  4089  0C71  1683               	bsf	3,5	;RP0=1, select bank1
  4090  0C72  00C9               	movwf	(ADC_Read_NTC@value+1)^(0+128)
  4091  0C73  1283               	bcf	3,5	;RP0=0, select bank0
  4092  0C74  0820               	movf	?___lwdiv,w
  4093  0C75  1683               	bsf	3,5	;RP0=1, select bank1
  4094  0C76  00C8               	movwf	ADC_Read_NTC@value^(0+128)
  4095                           
  4096                           ;adc.c: 85:     resistencia =(1023.0-value);
  4097  0C77  27A8  120A  158A   	fcall	PL24	;call to abstracted procedure
  4098  0C7A  25B5  120A  158A   	fcall	___xxtofl
  4099  0C7D  27B2  120A  158A   	fcall	PL32	;call to abstracted procedure
  4100  0C80  3044               	movlw	68
  4101  0C81  00D3               	movwf	___flsub@b+3
  4102  0C82  307F               	movlw	127
  4103  0C83  00D2               	movwf	___flsub@b+2
  4104  0C84  30C0               	movlw	192
  4105  0C85  00D1               	movwf	___flsub@b+1
  4106  0C86  01D0               	clrf	___flsub@b
  4107  0C87  2744  120A  158A   	fcall	___flsub
  4108  0C8A  084F               	movf	?___flsub+3,w
  4109  0C8B  1683               	bsf	3,5	;RP0=1, select bank1
  4110  0C8C  00C6               	movwf	(ADC_Read_NTC@resistencia+3)^(0+128)
  4111  0C8D  1283               	bcf	3,5	;RP0=0, select bank0
  4112  0C8E  084E               	movf	?___flsub+2,w
  4113  0C8F  1683               	bsf	3,5	;RP0=1, select bank1
  4114  0C90  00C5               	movwf	(ADC_Read_NTC@resistencia+2)^(0+128)
  4115  0C91  1283               	bcf	3,5	;RP0=0, select bank0
  4116  0C92  084D               	movf	?___flsub+1,w
  4117  0C93  1683               	bsf	3,5	;RP0=1, select bank1
  4118  0C94  00C4               	movwf	(ADC_Read_NTC@resistencia+1)^(0+128)
  4119  0C95  1283               	bcf	3,5	;RP0=0, select bank0
  4120  0C96  084C               	movf	?___flsub,w
  4121  0C97  1683               	bsf	3,5	;RP0=1, select bank1
  4122  0C98  00C3               	movwf	ADC_Read_NTC@resistencia^(0+128)
  4123                           
  4124                           ;adc.c: 86:     resistencia*=(10000.0-value);
  4125  0C99  3046               	movlw	70
  4126  0C9A  1283               	bcf	3,5	;RP0=0, select bank0
  4127  0C9B  00D3               	movwf	___flsub@b+3
  4128  0C9C  301C               	movlw	28
  4129  0C9D  00D2               	movwf	___flsub@b+2
  4130  0C9E  3040               	movlw	64
  4131  0C9F  00D1               	movwf	___flsub@b+1
  4132  0CA0  01D0               	clrf	___flsub@b
  4133  0CA1  1683               	bsf	3,5	;RP0=1, select bank1
  4134  0CA2  0848               	movf	ADC_Read_NTC@value^(0+128),w
  4135  0CA3  27A8  120A  158A   	fcall	PL24	;call to abstracted procedure
  4136  0CA6  25B5  120A  158A   	fcall	___xxtofl
  4137  0CA9  27B2  120A  158A   	fcall	PL32	;call to abstracted procedure
  4138  0CAC  2744               	fcall	___flsub
  4139  0CAD  084F               	movf	?___flsub+3,w
  4140  0CAE  00D7               	movwf	___flmul@b+3
  4141  0CAF  084E               	movf	?___flsub+2,w
  4142  0CB0  00D6               	movwf	___flmul@b+2
  4143  0CB1  084D               	movf	?___flsub+1,w
  4144  0CB2  00D5               	movwf	___flmul@b+1
  4145  0CB3  084C               	movf	?___flsub,w
  4146  0CB4  00D4               	movwf	___flmul@b
  4147  0CB5  1683               	bsf	3,5	;RP0=1, select bank1
  4148  0CB6  0846               	movf	(ADC_Read_NTC@resistencia+3)^(0+128),w
  4149  0CB7  1283               	bcf	3,5	;RP0=0, select bank0
  4150  0CB8  00DB               	movwf	___flmul@a+3
  4151  0CB9  1683               	bsf	3,5	;RP0=1, select bank1
  4152  0CBA  0845               	movf	(ADC_Read_NTC@resistencia+2)^(0+128),w
  4153  0CBB  1283               	bcf	3,5	;RP0=0, select bank0
  4154  0CBC  00DA               	movwf	___flmul@a+2
  4155  0CBD  1683               	bsf	3,5	;RP0=1, select bank1
  4156  0CBE  0844               	movf	(ADC_Read_NTC@resistencia+1)^(0+128),w
  4157  0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  4158  0CC0  00D9               	movwf	___flmul@a+1
  4159  0CC1  1683               	bsf	3,5	;RP0=1, select bank1
  4160  0CC2  0843               	movf	ADC_Read_NTC@resistencia^(0+128),w
  4161  0CC3  1283               	bcf	3,5	;RP0=0, select bank0
  4162  0CC4  00D8               	movwf	___flmul@a
  4163  0CC5  120A  118A  23C3  120A  158A  	fcall	___flmul
  4164  0CCA  0857               	movf	?___flmul+3,w
  4165  0CCB  1683               	bsf	3,5	;RP0=1, select bank1
  4166  0CCC  00C6               	movwf	(ADC_Read_NTC@resistencia+3)^(0+128)
  4167  0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  4168  0CCE  0856               	movf	?___flmul+2,w
  4169  0CCF  1683               	bsf	3,5	;RP0=1, select bank1
  4170  0CD0  00C5               	movwf	(ADC_Read_NTC@resistencia+2)^(0+128)
  4171  0CD1  1283               	bcf	3,5	;RP0=0, select bank0
  4172  0CD2  0855               	movf	?___flmul+1,w
  4173  0CD3  1683               	bsf	3,5	;RP0=1, select bank1
  4174  0CD4  00C4               	movwf	(ADC_Read_NTC@resistencia+1)^(0+128)
  4175  0CD5  1283               	bcf	3,5	;RP0=0, select bank0
  4176  0CD6  0854               	movf	?___flmul,w
  4177  0CD7  1683               	bsf	3,5	;RP0=1, select bank1
  4178  0CD8  00C3               	movwf	ADC_Read_NTC@resistencia^(0+128)
  4179                           
  4180                           ;adc.c: 87:     temperatura =value*10000.0/resistencia;
  4181  0CD9  0846               	movf	(ADC_Read_NTC@resistencia+3)^(0+128),w
  4182  0CDA  00A3               	movwf	(___fldiv@a+3)^(0+128)
  4183  0CDB  0845               	movf	(ADC_Read_NTC@resistencia+2)^(0+128),w
  4184  0CDC  00A2               	movwf	(___fldiv@a+2)^(0+128)
  4185  0CDD  0844               	movf	(ADC_Read_NTC@resistencia+1)^(0+128),w
  4186  0CDE  00A1               	movwf	(___fldiv@a+1)^(0+128)
  4187  0CDF  0843               	movf	ADC_Read_NTC@resistencia^(0+128),w
  4188  0CE0  00A0               	movwf	___fldiv@a^(0+128)
  4189  0CE1  3046               	movlw	70
  4190  0CE2  1283               	bcf	3,5	;RP0=0, select bank0
  4191  0CE3  00D7               	movwf	___flmul@b+3
  4192  0CE4  301C               	movlw	28
  4193  0CE5  00D6               	movwf	___flmul@b+2
  4194  0CE6  3040               	movlw	64
  4195  0CE7  00D5               	movwf	___flmul@b+1
  4196  0CE8  01D4               	clrf	___flmul@b
  4197  0CE9  1683               	bsf	3,5	;RP0=1, select bank1
  4198  0CEA  0848               	movf	ADC_Read_NTC@value^(0+128),w
  4199  0CEB  27A8  120A  158A   	fcall	PL24	;call to abstracted procedure
  4200  0CEE  25B5  120A  158A   	fcall	___xxtofl
  4201  0CF1  27C4               	fcall	PL56	;call to abstracted procedure
  4202  0CF2  120A  118A  23C3  120A  158A  	fcall	___flmul
  4203  0CF7  0857               	movf	?___flmul+3,w
  4204  0CF8  1683               	bsf	3,5	;RP0=1, select bank1
  4205  0CF9  00A7               	movwf	(___fldiv@b+3)^(0+128)
  4206  0CFA  1283               	bcf	3,5	;RP0=0, select bank0
  4207  0CFB  0856               	movf	?___flmul+2,w
  4208  0CFC  1683               	bsf	3,5	;RP0=1, select bank1
  4209  0CFD  00A6               	movwf	(___fldiv@b+2)^(0+128)
  4210  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  4211  0CFF  0855               	movf	?___flmul+1,w
  4212  0D00  1683               	bsf	3,5	;RP0=1, select bank1
  4213  0D01  00A5               	movwf	(___fldiv@b+1)^(0+128)
  4214  0D02  1283               	bcf	3,5	;RP0=0, select bank0
  4215  0D03  0854               	movf	?___flmul,w
  4216  0D04  1683               	bsf	3,5	;RP0=1, select bank1
  4217  0D05  00A4               	movwf	___fldiv@b^(0+128)
  4218  0D06  2623  120A  158A   	fcall	___fldiv
  4219  0D09  27BB               	fcall	PL34	;call to abstracted procedure
  4220                           
  4221                           ;adc.c: 88:     calc=temperatura;
  4222  0D0A  084D               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4223  0D0B  00C0               	movwf	(ADC_Read_NTC@calc+3)^(0+128)
  4224  0D0C  084C               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4225  0D0D  00BF               	movwf	(ADC_Read_NTC@calc+2)^(0+128)
  4226  0D0E  084B               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4227  0D0F  00BE               	movwf	(ADC_Read_NTC@calc+1)^(0+128)
  4228  0D10  084A               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4229  0D11  00BD               	movwf	ADC_Read_NTC@calc^(0+128)
  4230                           
  4231                           ;adc.c: 89:     temperatura =log(calc);
  4232  0D12  0840               	movf	(ADC_Read_NTC@calc+3)^(0+128),w
  4233  0D13  00B3               	movwf	(log@x+3)^(0+128)
  4234  0D14  083F               	movf	(ADC_Read_NTC@calc+2)^(0+128),w
  4235  0D15  00B2               	movwf	(log@x+2)^(0+128)
  4236  0D16  083E               	movf	(ADC_Read_NTC@calc+1)^(0+128),w
  4237  0D17  00B1               	movwf	(log@x+1)^(0+128)
  4238  0D18  083D               	movf	ADC_Read_NTC@calc^(0+128),w
  4239  0D19  00B0               	movwf	log@x^(0+128)
  4240  0D1A  160A  158A  25C3  120A  158A  	fcall	_log
  4241  0D1F  0833               	movf	(?_log+3)^(0+128),w
  4242  0D20  00CD               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  4243  0D21  0832               	movf	(?_log+2)^(0+128),w
  4244  0D22  00CC               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  4245  0D23  0831               	movf	(?_log+1)^(0+128),w
  4246  0D24  00CB               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  4247  0D25  0830               	movf	?_log^(0+128),w
  4248  0D26  00CA               	movwf	ADC_Read_NTC@temperatura^(0+128)
  4249                           
  4250                           ;adc.c: 90:     temperatura/=B;
  4251  0D27  0841               	movf	ADC_Read_NTC@B^(0+128),w
  4252  0D28  1283               	bcf	3,5	;RP0=0, select bank0
  4253  0D29  00AA               	movwf	___xxtofl@val
  4254  0D2A  1683               	bsf	3,5	;RP0=1, select bank1
  4255  0D2B  0842               	movf	(ADC_Read_NTC@B+1)^(0+128),w
  4256  0D2C  1283               	bcf	3,5	;RP0=0, select bank0
  4257  0D2D  27D6  120A  158A   	fcall	PL60	;call to abstracted procedure
  4258  0D30  25B5  120A  158A   	fcall	___xxtofl
  4259  0D33  2798  120A  158A   	fcall	PL20	;call to abstracted procedure
  4260  0D36  084D               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4261  0D37  00A7               	movwf	(___fldiv@b+3)^(0+128)
  4262  0D38  084C               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4263  0D39  00A6               	movwf	(___fldiv@b+2)^(0+128)
  4264  0D3A  084B               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4265  0D3B  00A5               	movwf	(___fldiv@b+1)^(0+128)
  4266  0D3C  084A               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4267  0D3D  00A4               	movwf	___fldiv@b^(0+128)
  4268  0D3E  2623  120A  158A   	fcall	___fldiv
  4269  0D41  27BB  120A  158A   	fcall	PL34	;call to abstracted procedure
  4270                           
  4271                           ;adc.c: 91:     temperatura+=1/(25+273.15);
  4272  0D44  303B               	movlw	59
  4273  0D45  1283               	bcf	3,5	;RP0=0, select bank0
  4274  0D46  00BB               	movwf	___fladd@b+3
  4275  0D47  305B               	movlw	91
  4276  0D48  00BA               	movwf	___fladd@b+2
  4277  0D49  30CF               	movlw	207
  4278  0D4A  00B9               	movwf	___fladd@b+1
  4279  0D4B  300F               	movlw	15
  4280  0D4C  00B8               	movwf	___fladd@b
  4281  0D4D  1683               	bsf	3,5	;RP0=1, select bank1
  4282  0D4E  084D               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4283  0D4F  1283               	bcf	3,5	;RP0=0, select bank0
  4284  0D50  00BF               	movwf	___fladd@a+3
  4285  0D51  1683               	bsf	3,5	;RP0=1, select bank1
  4286  0D52  084C               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4287  0D53  1283               	bcf	3,5	;RP0=0, select bank0
  4288  0D54  00BE               	movwf	___fladd@a+2
  4289  0D55  1683               	bsf	3,5	;RP0=1, select bank1
  4290  0D56  084B               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4291  0D57  1283               	bcf	3,5	;RP0=0, select bank0
  4292  0D58  00BD               	movwf	___fladd@a+1
  4293  0D59  1683               	bsf	3,5	;RP0=1, select bank1
  4294  0D5A  084A               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4295  0D5B  1283               	bcf	3,5	;RP0=0, select bank0
  4296  0D5C  00BC               	movwf	___fladd@a
  4297  0D5D  22D4  120A  158A   	fcall	___fladd
  4298  0D60  083B               	movf	?___fladd+3,w
  4299  0D61  1683               	bsf	3,5	;RP0=1, select bank1
  4300  0D62  00CD               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  4301  0D63  1283               	bcf	3,5	;RP0=0, select bank0
  4302  0D64  083A               	movf	?___fladd+2,w
  4303  0D65  1683               	bsf	3,5	;RP0=1, select bank1
  4304  0D66  00CC               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  4305  0D67  1283               	bcf	3,5	;RP0=0, select bank0
  4306  0D68  0839               	movf	?___fladd+1,w
  4307  0D69  1683               	bsf	3,5	;RP0=1, select bank1
  4308  0D6A  00CB               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  4309  0D6B  1283               	bcf	3,5	;RP0=0, select bank0
  4310  0D6C  0838               	movf	?___fladd,w
  4311  0D6D  1683               	bsf	3,5	;RP0=1, select bank1
  4312  0D6E  00CA               	movwf	ADC_Read_NTC@temperatura^(0+128)
  4313                           
  4314                           ;adc.c: 92:     temperatura =1/temperatura;
  4315  0D6F  084D               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4316  0D70  00A3               	movwf	(___fldiv@a+3)^(0+128)
  4317  0D71  084C               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4318  0D72  00A2               	movwf	(___fldiv@a+2)^(0+128)
  4319  0D73  084B               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4320  0D74  00A1               	movwf	(___fldiv@a+1)^(0+128)
  4321  0D75  084A               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4322  0D76  00A0               	movwf	___fldiv@a^(0+128)
  4323  0D77  303F               	movlw	63
  4324  0D78  00A7               	movwf	(___fldiv@b+3)^(0+128)
  4325  0D79  3080               	movlw	128
  4326  0D7A  00A6               	movwf	(___fldiv@b+2)^(0+128)
  4327  0D7B  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4328  0D7C  01A4               	clrf	___fldiv@b^(0+128)
  4329  0D7D  2623  120A  158A   	fcall	___fldiv
  4330  0D80  27BB  120A  158A   	fcall	PL34	;call to abstracted procedure
  4331                           
  4332                           ;adc.c: 93:     temperatura-=273.15;
  4333  0D83  3043               	movlw	67
  4334  0D84  1283               	bcf	3,5	;RP0=0, select bank0
  4335  0D85  00CF               	movwf	___flsub@a+3
  4336  0D86  3088               	movlw	136
  4337  0D87  00CE               	movwf	___flsub@a+2
  4338  0D88  3093               	movlw	147
  4339  0D89  00CD               	movwf	___flsub@a+1
  4340  0D8A  3033               	movlw	51
  4341  0D8B  00CC               	movwf	___flsub@a
  4342  0D8C  1683               	bsf	3,5	;RP0=1, select bank1
  4343  0D8D  084D               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4344  0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  4345  0D8F  00D3               	movwf	___flsub@b+3
  4346  0D90  1683               	bsf	3,5	;RP0=1, select bank1
  4347  0D91  084C               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4348  0D92  1283               	bcf	3,5	;RP0=0, select bank0
  4349  0D93  00D2               	movwf	___flsub@b+2
  4350  0D94  1683               	bsf	3,5	;RP0=1, select bank1
  4351  0D95  084B               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4352  0D96  1283               	bcf	3,5	;RP0=0, select bank0
  4353  0D97  00D1               	movwf	___flsub@b+1
  4354  0D98  1683               	bsf	3,5	;RP0=1, select bank1
  4355  0D99  084A               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4356  0D9A  1283               	bcf	3,5	;RP0=0, select bank0
  4357  0D9B  00D0               	movwf	___flsub@b
  4358  0D9C  2744               	fcall	___flsub
  4359  0D9D  084F               	movf	?___flsub+3,w
  4360  0D9E  1683               	bsf	3,5	;RP0=1, select bank1
  4361  0D9F  00CD               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  4362  0DA0  1283               	bcf	3,5	;RP0=0, select bank0
  4363  0DA1  084E               	movf	?___flsub+2,w
  4364  0DA2  1683               	bsf	3,5	;RP0=1, select bank1
  4365  0DA3  00CC               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  4366  0DA4  1283               	bcf	3,5	;RP0=0, select bank0
  4367  0DA5  084D               	movf	?___flsub+1,w
  4368  0DA6  1683               	bsf	3,5	;RP0=1, select bank1
  4369  0DA7  00CB               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  4370  0DA8  1283               	bcf	3,5	;RP0=0, select bank0
  4371  0DA9  084C               	movf	?___flsub,w
  4372  0DAA  1683               	bsf	3,5	;RP0=1, select bank1
  4373  0DAB  00CA               	movwf	ADC_Read_NTC@temperatura^(0+128)
  4374                           
  4375                           ;adc.c: 95:     return temperatura;
  4376  0DAC  084D               	movf	(ADC_Read_NTC@temperatura+3)^(0+128),w
  4377  0DAD  00BC               	movwf	(?_ADC_Read_NTC+3)^(0+128)
  4378  0DAE  084C               	movf	(ADC_Read_NTC@temperatura+2)^(0+128),w
  4379  0DAF  00BB               	movwf	(?_ADC_Read_NTC+2)^(0+128)
  4380  0DB0  084B               	movf	(ADC_Read_NTC@temperatura+1)^(0+128),w
  4381  0DB1  00BA               	movwf	(?_ADC_Read_NTC+1)^(0+128)
  4382  0DB2  084A               	movf	ADC_Read_NTC@temperatura^(0+128),w
  4383  0DB3  00B9               	movwf	?_ADC_Read_NTC^(0+128)
  4384  0DB4  0008               	return
  4385  0DB5                     __end_of_ADC_Read_NTC:
  4386  0DB5                     __ptext59:	
  4387 ;; *************** function ___xxtofl *****************
  4388 ;; Defined at:
  4389 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;  sign            1    wreg     unsigned char 
  4392 ;;  val             4   10[BANK0 ] long 
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;  sign            1   18[BANK0 ] unsigned char 
  4395 ;;  arg             4   20[BANK0 ] unsigned long 
  4396 ;;  exp             1   19[BANK0 ] unsigned char 
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  4   10[BANK0 ] unsigned char 
  4399 ;; Registers used:
  4400 ;;		wreg, status,2, status,0
  4401 ;; Tracked objects:
  4402 ;;		On entry : 300/0
  4403 ;;		On exit  : 300/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4406 ;;      Params:         0       4       0       0       0
  4407 ;;      Locals:         0       6       0       0       0
  4408 ;;      Temps:          0       4       0       0       0
  4409 ;;      Totals:         0      14       0       0       0
  4410 ;;Total ram usage:       14 bytes
  4411 ;; Hardware stack levels used: 1
  4412 ;; Hardware stack levels required when called: 1
  4413 ;; This function calls:
  4414 ;;		Nothing
  4415 ;; This function is called by:
  4416 ;;		_mediatemperaturaNTC
  4417 ;;		_Auto_Relay1
  4418 ;;		_Load_Work
  4419 ;;		_ADC_Read_NTC
  4420 ;;		_log
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           
  4425                           ;psect for function ___xxtofl
  4426  0DB5                     ___xxtofl:
  4427                           
  4428                           ;incstack = 0
  4429                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4430                           ;___xxtofl@sign stored from wreg
  4431  0DB5  00B2               	movwf	___xxtofl@sign
  4432  0DB6  0832               	movf	___xxtofl@sign,w
  4433  0DB7  1D03               	btfss	3,2
  4434  0DB8  1FAD               	btfss	___xxtofl@val+3,7
  4435  0DB9  2DCA               	goto	l4388
  4436  0DBA  092A               	comf	___xxtofl@val,w
  4437  0DBB  00B4               	movwf	___xxtofl@arg
  4438  0DBC  092B               	comf	___xxtofl@val+1,w
  4439  0DBD  00B5               	movwf	___xxtofl@arg+1
  4440  0DBE  092C               	comf	___xxtofl@val+2,w
  4441  0DBF  00B6               	movwf	___xxtofl@arg+2
  4442  0DC0  092D               	comf	___xxtofl@val+3,w
  4443  0DC1  00B7               	movwf	___xxtofl@arg+3
  4444  0DC2  0AB4               	incf	___xxtofl@arg,f
  4445  0DC3  1903               	skipnz
  4446  0DC4  0AB5               	incf	___xxtofl@arg+1,f
  4447  0DC5  1903               	skipnz
  4448  0DC6  0AB6               	incf	___xxtofl@arg+2,f
  4449  0DC7  1903               	skipnz
  4450  0DC8  0AB7               	incf	___xxtofl@arg+3,f
  4451  0DC9  2DD2               	goto	l1495
  4452  0DCA                     l4388:
  4453  0DCA  082D               	movf	___xxtofl@val+3,w
  4454  0DCB  00B7               	movwf	___xxtofl@arg+3
  4455  0DCC  082C               	movf	___xxtofl@val+2,w
  4456  0DCD  00B6               	movwf	___xxtofl@arg+2
  4457  0DCE  082B               	movf	___xxtofl@val+1,w
  4458  0DCF  00B5               	movwf	___xxtofl@arg+1
  4459  0DD0  082A               	movf	___xxtofl@val,w
  4460  0DD1  00B4               	movwf	___xxtofl@arg
  4461  0DD2                     l1495:
  4462  0DD2  082D               	movf	___xxtofl@val+3,w
  4463  0DD3  042C               	iorwf	___xxtofl@val+2,w
  4464  0DD4  042B               	iorwf	___xxtofl@val+1,w
  4465  0DD5  042A               	iorwf	___xxtofl@val,w
  4466  0DD6  1D03               	skipz
  4467  0DD7  2DDD               	goto	l4392
  4468  0DD8  01AA               	clrf	?___xxtofl
  4469  0DD9  01AB               	clrf	?___xxtofl+1
  4470  0DDA  01AC               	clrf	?___xxtofl+2
  4471  0DDB  01AD               	clrf	?___xxtofl+3
  4472  0DDC  0008               	return
  4473  0DDD                     l4392:
  4474  0DDD  3096               	movlw	150
  4475  0DDE  00B3               	movwf	___xxtofl@exp
  4476  0DDF                     l4396:
  4477  0DDF  30FE               	movlw	254
  4478  0DE0  0537               	andwf	___xxtofl@arg+3,w
  4479  0DE1  1903               	btfsc	3,2
  4480  0DE2  2DF3               	goto	l4400
  4481  0DE3  0AB3               	incf	___xxtofl@exp,f
  4482  0DE4  27DD  120A  158A   	fcall	PL78	;call to abstracted procedure
  4483  0DE7  2DDF               	goto	l4396
  4484  0DE8                     l4398:
  4485  0DE8  0AB3               	incf	___xxtofl@exp,f
  4486  0DE9  0AB4               	incf	___xxtofl@arg,f
  4487  0DEA  1903               	skipnz
  4488  0DEB  0AB5               	incf	___xxtofl@arg+1,f
  4489  0DEC  1903               	skipnz
  4490  0DED  0AB6               	incf	___xxtofl@arg+2,f
  4491  0DEE  1903               	skipnz
  4492  0DEF  0AB7               	incf	___xxtofl@arg+3,f
  4493  0DF0  27DD  120A  158A   	fcall	PL78	;call to abstracted procedure
  4494  0DF3                     l4400:
  4495  0DF3  30FF               	movlw	255
  4496  0DF4  0537               	andwf	___xxtofl@arg+3,w
  4497  0DF5  1903               	btfsc	3,2
  4498  0DF6  2E02               	goto	l4404
  4499  0DF7  2DE8               	goto	l4398
  4500  0DF8                     l4406:
  4501  0DF8  3002               	movlw	2
  4502  0DF9  0233               	subwf	___xxtofl@exp,w
  4503  0DFA  1C03               	btfss	3,0
  4504  0DFB  2E04               	goto	l1508
  4505  0DFC  03B3               	decf	___xxtofl@exp,f
  4506  0DFD  1003               	clrc
  4507  0DFE  0DB4               	rlf	___xxtofl@arg,f
  4508  0DFF  0DB5               	rlf	___xxtofl@arg+1,f
  4509  0E00  0DB6               	rlf	___xxtofl@arg+2,f
  4510  0E01  0DB7               	rlf	___xxtofl@arg+3,f
  4511  0E02                     l4404:
  4512  0E02  1FB6               	btfss	___xxtofl@arg+2,7
  4513  0E03  2DF8               	goto	l4406
  4514  0E04                     l1508:
  4515  0E04  1C33               	btfss	___xxtofl@exp,0
  4516  0E05  13B6               	bcf	___xxtofl@arg+2,7
  4517  0E06  1003               	clrc
  4518  0E07  0CB3               	rrf	___xxtofl@exp,f
  4519  0E08  0833               	movf	___xxtofl@exp,w
  4520  0E09  00B1               	movwf	??___xxtofl+3
  4521  0E0A  01B0               	clrf	??___xxtofl+2
  4522  0E0B  01AF               	clrf	??___xxtofl+1
  4523  0E0C  01AE               	clrf	??___xxtofl
  4524  0E0D  082E               	movf	??___xxtofl,w
  4525  0E0E  04B4               	iorwf	___xxtofl@arg,f
  4526  0E0F  082F               	movf	??___xxtofl+1,w
  4527  0E10  04B5               	iorwf	___xxtofl@arg+1,f
  4528  0E11  0830               	movf	??___xxtofl+2,w
  4529  0E12  04B6               	iorwf	___xxtofl@arg+2,f
  4530  0E13  0831               	movf	??___xxtofl+3,w
  4531  0E14  04B7               	iorwf	___xxtofl@arg+3,f
  4532  0E15  0832               	movf	___xxtofl@sign,w
  4533  0E16  1D03               	btfss	3,2
  4534  0E17  1FAD               	btfss	___xxtofl@val+3,7
  4535  0E18  2E1A               	goto	l4418
  4536  0E19  17B7               	bsf	___xxtofl@arg+3,7
  4537  0E1A                     l4418:
  4538  0E1A  0837               	movf	___xxtofl@arg+3,w
  4539  0E1B  00AD               	movwf	?___xxtofl+3
  4540  0E1C  0836               	movf	___xxtofl@arg+2,w
  4541  0E1D  00AC               	movwf	?___xxtofl+2
  4542  0E1E  0835               	movf	___xxtofl@arg+1,w
  4543  0E1F  00AB               	movwf	?___xxtofl+1
  4544  0E20  0834               	movf	___xxtofl@arg,w
  4545  0E21  00AA               	movwf	?___xxtofl
  4546  0E22  0008               	return
  4547  0E23                     __end_of___xxtofl:
  4548  0E23                     __ptext33:	
  4549 ;; *************** function ___fldiv *****************
  4550 ;; Defined at:
  4551 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;  a               4    0[BANK1 ] void 
  4554 ;;  b               4    4[BANK1 ] void 
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;  grs             4   19[BANK1 ] unsigned long 
  4557 ;;  rem             4   12[BANK1 ] unsigned long 
  4558 ;;  new_exp         2   17[BANK1 ] int 
  4559 ;;  aexp            1   24[BANK1 ] unsigned char 
  4560 ;;  bexp            1   23[BANK1 ] unsigned char 
  4561 ;;  sign            1   16[BANK1 ] unsigned char 
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  4    0[BANK1 ] unsigned char 
  4564 ;; Registers used:
  4565 ;;		wreg, status,2, status,0, btemp+1
  4566 ;; Tracked objects:
  4567 ;;		On entry : 300/100
  4568 ;;		On exit  : 300/100
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4571 ;;      Params:         0       0       8       0       0
  4572 ;;      Locals:         0       0      13       0       0
  4573 ;;      Temps:          0       0       4       0       0
  4574 ;;      Totals:         0       0      25       0       0
  4575 ;;Total ram usage:       25 bytes
  4576 ;; Hardware stack levels used: 1
  4577 ;; Hardware stack levels required when called: 1
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_mediatemperaturaNTC
  4582 ;;		_Load_Work
  4583 ;;		_ADC_Read_NTC
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587                           
  4588                           ;psect for function ___fldiv
  4589  0E23                     ___fldiv:
  4590                           
  4591                           ;incstack = 0
  4592                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4593  0E23  0827               	movf	(___fldiv@b^(0+128)+3),w
  4594  0E24  00B0               	movwf	___fldiv@sign^(0+128)
  4595  0E25  3080               	movlw	128
  4596  0E26  05B0               	andwf	___fldiv@sign^(0+128),f
  4597  0E27  1003               	clrc
  4598  0E28  0D27               	rlf	(___fldiv@b^(0+128)+3),w
  4599  0E29  00B7               	movwf	___fldiv@bexp^(0+128)
  4600  0E2A  1BA6               	btfsc	(___fldiv@b^(0+128)+2),7
  4601  0E2B  1437               	bsf	___fldiv@bexp^(0+128),0
  4602  0E2C  0837               	movf	___fldiv@bexp^(0+128),w
  4603  0E2D  1903               	btfsc	3,2
  4604  0E2E  2E38               	goto	l1405
  4605  0E2F  0F37               	incfsz	___fldiv@bexp^(0+128),w
  4606  0E30  2E35               	goto	l1406
  4607  0E31  01A4               	clrf	___fldiv@b^(0+128)
  4608  0E32  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4609  0E33  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4610  0E34  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4611  0E35                     l1406:
  4612  0E35  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  4613  0E36  01A7               	clrf	(___fldiv@b^(0+128)+3)
  4614  0E37  2E3C               	goto	l4764
  4615  0E38                     l1405:
  4616  0E38  01A4               	clrf	___fldiv@b^(0+128)
  4617  0E39  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4618  0E3A  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4619  0E3B  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4620  0E3C                     l4764:
  4621  0E3C  0823               	movf	(___fldiv@a^(0+128)+3),w
  4622  0E3D  3980               	andlw	128
  4623  0E3E  06B0               	xorwf	___fldiv@sign^(0+128),f
  4624  0E3F  1003               	clrc
  4625  0E40  0D23               	rlf	(___fldiv@a^(0+128)+3),w
  4626  0E41  00B8               	movwf	___fldiv@aexp^(0+128)
  4627  0E42  1BA2               	btfsc	(___fldiv@a^(0+128)+2),7
  4628  0E43  1438               	bsf	___fldiv@aexp^(0+128),0
  4629  0E44  0838               	movf	___fldiv@aexp^(0+128),w
  4630  0E45  1903               	btfsc	3,2
  4631  0E46  2E50               	goto	l1409
  4632  0E47  0F38               	incfsz	___fldiv@aexp^(0+128),w
  4633  0E48  2E4D               	goto	l1410
  4634  0E49  01A0               	clrf	___fldiv@a^(0+128)
  4635  0E4A  01A1               	clrf	(___fldiv@a+1)^(0+128)
  4636  0E4B  01A2               	clrf	(___fldiv@a+2)^(0+128)
  4637  0E4C  01A3               	clrf	(___fldiv@a+3)^(0+128)
  4638  0E4D                     l1410:
  4639  0E4D  17A2               	bsf	(___fldiv@a^(0+128)+2),7
  4640  0E4E  01A3               	clrf	(___fldiv@a^(0+128)+3)
  4641  0E4F  2E54               	goto	l4778
  4642  0E50                     l1409:
  4643  0E50  01A0               	clrf	___fldiv@a^(0+128)
  4644  0E51  01A1               	clrf	(___fldiv@a+1)^(0+128)
  4645  0E52  01A2               	clrf	(___fldiv@a+2)^(0+128)
  4646  0E53  01A3               	clrf	(___fldiv@a+3)^(0+128)
  4647  0E54                     l4778:
  4648  0E54  0823               	movf	(___fldiv@a+3)^(0+128),w
  4649  0E55  0422               	iorwf	(___fldiv@a+2)^(0+128),w
  4650  0E56  0421               	iorwf	(___fldiv@a+1)^(0+128),w
  4651  0E57  0420               	iorwf	___fldiv@a^(0+128),w
  4652  0E58  1D03               	skipz
  4653  0E59  2E6D               	goto	l4790
  4654  0E5A  3080               	movlw	128
  4655  0E5B  01A4               	clrf	___fldiv@b^(0+128)
  4656  0E5C  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4657  0E5D  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4658  0E5E  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4659  0E5F  04A6               	iorwf	(___fldiv@b^(0+128)+2),f
  4660  0E60  307F               	movlw	127
  4661  0E61  04A7               	iorwf	((___fldiv@b+1)^(0+128)+2),f
  4662  0E62                     L16:
  4663  0E62  0830               	movf	___fldiv@sign^(0+128),w
  4664  0E63  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
  4665  0E64  0827               	movf	(___fldiv@b+3)^(0+128),w
  4666  0E65  00A3               	movwf	(?___fldiv+3)^(0+128)
  4667  0E66  0826               	movf	(___fldiv@b+2)^(0+128),w
  4668  0E67  00A2               	movwf	(?___fldiv+2)^(0+128)
  4669  0E68  0825               	movf	(___fldiv@b+1)^(0+128),w
  4670  0E69  00A1               	movwf	(?___fldiv+1)^(0+128)
  4671  0E6A  0824               	movf	___fldiv@b^(0+128),w
  4672  0E6B  00A0               	movwf	?___fldiv^(0+128)
  4673  0E6C  0008               	return
  4674  0E6D                     l4790:
  4675  0E6D  0837               	movf	___fldiv@bexp^(0+128),w
  4676  0E6E  1D03               	btfss	3,2
  4677  0E6F  2E75               	goto	l4798
  4678  0E70  01A0               	clrf	?___fldiv^(0+128)
  4679  0E71  01A1               	clrf	(?___fldiv+1)^(0+128)
  4680  0E72  01A2               	clrf	(?___fldiv+2)^(0+128)
  4681  0E73  01A3               	clrf	(?___fldiv+3)^(0+128)
  4682  0E74  0008               	return
  4683  0E75                     l4798:
  4684  0E75  0837               	movf	___fldiv@bexp^(0+128),w
  4685  0E76  00B1               	movwf	___fldiv@new_exp^(0+128)
  4686  0E77  01B2               	clrf	(___fldiv@new_exp+1)^(0+128)
  4687  0E78  0838               	movf	___fldiv@aexp^(0+128),w
  4688  0E79  02B1               	subwf	___fldiv@new_exp^(0+128),f
  4689  0E7A  1C03               	skipc
  4690  0E7B  03B2               	decf	(___fldiv@new_exp+1)^(0+128),f
  4691  0E7C  307F               	movlw	127
  4692  0E7D  07B1               	addwf	___fldiv@new_exp^(0+128),f
  4693  0E7E  1803               	skipnc
  4694  0E7F  0AB2               	incf	(___fldiv@new_exp+1)^(0+128),f
  4695  0E80  0827               	movf	(___fldiv@b+3)^(0+128),w
  4696  0E81  00AF               	movwf	(___fldiv@rem+3)^(0+128)
  4697  0E82  0826               	movf	(___fldiv@b+2)^(0+128),w
  4698  0E83  00AE               	movwf	(___fldiv@rem+2)^(0+128)
  4699  0E84  0825               	movf	(___fldiv@b+1)^(0+128),w
  4700  0E85  00AD               	movwf	(___fldiv@rem+1)^(0+128)
  4701  0E86  0824               	movf	___fldiv@b^(0+128),w
  4702  0E87  00AC               	movwf	___fldiv@rem^(0+128)
  4703  0E88  01A4               	clrf	___fldiv@b^(0+128)
  4704  0E89  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4705  0E8A  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4706  0E8B  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4707  0E8C  01B3               	clrf	___fldiv@grs^(0+128)
  4708  0E8D  01B4               	clrf	(___fldiv@grs+1)^(0+128)
  4709  0E8E  01B5               	clrf	(___fldiv@grs+2)^(0+128)
  4710  0E8F  01B6               	clrf	(___fldiv@grs+3)^(0+128)
  4711  0E90  01B8               	clrf	___fldiv@aexp^(0+128)
  4712  0E91                     l4824:
  4713  0E91  301A               	movlw	26
  4714  0E92  0238               	subwf	___fldiv@aexp^(0+128),w
  4715  0E93  1803               	btfsc	3,0
  4716  0E94  2ECA               	goto	l4826
  4717  0E95  0838               	movf	___fldiv@aexp^(0+128),w
  4718  0E96  1903               	btfsc	3,2
  4719  0E97  2EA9               	goto	l4816
  4720  0E98  1003               	clrc
  4721  0E99  0DAC               	rlf	___fldiv@rem^(0+128),f
  4722  0E9A  0DAD               	rlf	(___fldiv@rem+1)^(0+128),f
  4723  0E9B  0DAE               	rlf	(___fldiv@rem+2)^(0+128),f
  4724  0E9C  0DAF               	rlf	(___fldiv@rem+3)^(0+128),f
  4725  0E9D  1003               	clrc
  4726  0E9E  0DA4               	rlf	___fldiv@b^(0+128),f
  4727  0E9F  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  4728  0EA0  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  4729  0EA1  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  4730  0EA2  1BB6               	btfsc	(___fldiv@grs+3)^(0+128),7
  4731  0EA3  1424               	bsf	___fldiv@b^(0+128),0
  4732  0EA4  1003               	clrc
  4733  0EA5  0DB3               	rlf	___fldiv@grs^(0+128),f
  4734  0EA6  0DB4               	rlf	(___fldiv@grs+1)^(0+128),f
  4735  0EA7  0DB5               	rlf	(___fldiv@grs+2)^(0+128),f
  4736  0EA8  0DB6               	rlf	(___fldiv@grs+3)^(0+128),f
  4737  0EA9                     l4816:
  4738  0EA9  0823               	movf	(___fldiv@a+3)^(0+128),w
  4739  0EAA  022F               	subwf	(___fldiv@rem+3)^(0+128),w
  4740  0EAB  1D03               	skipz
  4741  0EAC  2EB7               	goto	u4145
  4742  0EAD  0822               	movf	(___fldiv@a+2)^(0+128),w
  4743  0EAE  022E               	subwf	(___fldiv@rem+2)^(0+128),w
  4744  0EAF  1D03               	skipz
  4745  0EB0  2EB7               	goto	u4145
  4746  0EB1  0821               	movf	(___fldiv@a+1)^(0+128),w
  4747  0EB2  022D               	subwf	(___fldiv@rem+1)^(0+128),w
  4748  0EB3  1D03               	skipz
  4749  0EB4  2EB7               	goto	u4145
  4750  0EB5  0820               	movf	___fldiv@a^(0+128),w
  4751  0EB6  022C               	subwf	___fldiv@rem^(0+128),w
  4752  0EB7                     u4145:
  4753  0EB7  1C03               	skipc
  4754  0EB8  2EC8               	goto	l4822
  4755  0EB9  1736               	bsf	(___fldiv@grs^(0+128)+3),6
  4756  0EBA  0820               	movf	___fldiv@a^(0+128),w
  4757  0EBB  02AC               	subwf	___fldiv@rem^(0+128),f
  4758  0EBC  0821               	movf	(___fldiv@a+1)^(0+128),w
  4759  0EBD  1C03               	skipc
  4760  0EBE  0F21               	incfsz	(___fldiv@a+1)^(0+128),w
  4761  0EBF  02AD               	subwf	(___fldiv@rem+1)^(0+128),f
  4762  0EC0  0822               	movf	(___fldiv@a+2)^(0+128),w
  4763  0EC1  1C03               	skipc
  4764  0EC2  0F22               	incfsz	(___fldiv@a+2)^(0+128),w
  4765  0EC3  02AE               	subwf	(___fldiv@rem+2)^(0+128),f
  4766  0EC4  0823               	movf	(___fldiv@a+3)^(0+128),w
  4767  0EC5  1C03               	skipc
  4768  0EC6  0F23               	incfsz	(___fldiv@a+3)^(0+128),w
  4769  0EC7  02AF               	subwf	(___fldiv@rem+3)^(0+128),f
  4770  0EC8                     l4822:
  4771  0EC8  0AB8               	incf	___fldiv@aexp^(0+128),f
  4772  0EC9  2E91               	goto	l4824
  4773  0ECA                     l4826:
  4774  0ECA  082F               	movf	(___fldiv@rem+3)^(0+128),w
  4775  0ECB  042E               	iorwf	(___fldiv@rem+2)^(0+128),w
  4776  0ECC  042D               	iorwf	(___fldiv@rem+1)^(0+128),w
  4777  0ECD  042C               	iorwf	___fldiv@rem^(0+128),w
  4778  0ECE  1D03               	btfss	3,2
  4779  0ECF  1433               	bsf	___fldiv@grs^(0+128),0
  4780  0ED0                     l4840:
  4781  0ED0  1BA6               	btfsc	(___fldiv@b+2)^(0+128),7
  4782  0ED1  2EE3               	goto	l4842
  4783  0ED2  1003               	clrc
  4784  0ED3  0DA4               	rlf	___fldiv@b^(0+128),f
  4785  0ED4  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  4786  0ED5  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  4787  0ED6  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  4788  0ED7  1BB6               	btfsc	(___fldiv@grs+3)^(0+128),7
  4789  0ED8  1424               	bsf	___fldiv@b^(0+128),0
  4790  0ED9  30FF               	movlw	-1
  4791  0EDA  1003               	clrc
  4792  0EDB  0DB3               	rlf	___fldiv@grs^(0+128),f
  4793  0EDC  0DB4               	rlf	(___fldiv@grs+1)^(0+128),f
  4794  0EDD  0DB5               	rlf	(___fldiv@grs+2)^(0+128),f
  4795  0EDE  0DB6               	rlf	(___fldiv@grs+3)^(0+128),f
  4796  0EDF  07B1               	addwf	___fldiv@new_exp^(0+128),f
  4797  0EE0  1C03               	skipc
  4798  0EE1  03B2               	decf	(___fldiv@new_exp+1)^(0+128),f
  4799  0EE2  2ED0               	goto	l4840
  4800  0EE3                     l4842:
  4801  0EE3  01B8               	clrf	___fldiv@aexp^(0+128)
  4802  0EE4  1FB6               	btfss	(___fldiv@grs+3)^(0+128),7
  4803  0EE5  2EF9               	goto	l4852
  4804  0EE6  0833               	movf	___fldiv@grs^(0+128),w
  4805  0EE7  00A8               	movwf	??___fldiv^(0+128)
  4806  0EE8  0834               	movf	(___fldiv@grs+1)^(0+128),w
  4807  0EE9  00A9               	movwf	(??___fldiv^(0+128)+1)
  4808  0EEA  0835               	movf	(___fldiv@grs+2)^(0+128),w
  4809  0EEB  00AA               	movwf	(??___fldiv^(0+128)+2)
  4810  0EEC  307F               	movlw	127
  4811  0EED  0536               	andwf	(___fldiv@grs+3)^(0+128),w
  4812  0EEE  00AB               	movwf	(??___fldiv^(0+128)+3)
  4813  0EEF  082B               	movf	(??___fldiv+3)^(0+128),w
  4814  0EF0  042A               	iorwf	(??___fldiv+2)^(0+128),w
  4815  0EF1  0429               	iorwf	(??___fldiv+1)^(0+128),w
  4816  0EF2  0428               	iorwf	??___fldiv^(0+128),w
  4817  0EF3  1903               	skipnz
  4818  0EF4  1824               	btfsc	___fldiv@b^(0+128),0
  4819  0EF5  2EF7               	goto	l4848
  4820  0EF6  2EF9               	goto	l4852
  4821  0EF7                     l4848:
  4822  0EF7  01B8               	clrf	___fldiv@aexp^(0+128)
  4823  0EF8  0AB8               	incf	___fldiv@aexp^(0+128),f
  4824  0EF9                     l4852:
  4825  0EF9  0838               	movf	___fldiv@aexp^(0+128),w
  4826  0EFA  1903               	btfsc	3,2
  4827  0EFB  2F0D               	goto	l4862
  4828  0EFC  0AA4               	incf	___fldiv@b^(0+128),f
  4829  0EFD  1903               	skipnz
  4830  0EFE  0AA5               	incf	(___fldiv@b+1)^(0+128),f
  4831  0EFF  1903               	skipnz
  4832  0F00  0AA6               	incf	(___fldiv@b+2)^(0+128),f
  4833  0F01  1903               	skipnz
  4834  0F02  0AA7               	incf	(___fldiv@b+3)^(0+128),f
  4835  0F03  1C27               	btfss	(___fldiv@b+3)^(0+128),0
  4836  0F04  2F0D               	goto	l4862
  4837  0F05  0D27               	rlf	(___fldiv@b+3)^(0+128),w
  4838  0F06  0CA7               	rrf	(___fldiv@b+3)^(0+128),f
  4839  0F07  0CA6               	rrf	(___fldiv@b+2)^(0+128),f
  4840  0F08  0CA5               	rrf	(___fldiv@b+1)^(0+128),f
  4841  0F09  0CA4               	rrf	___fldiv@b^(0+128),f
  4842  0F0A  0AB1               	incf	___fldiv@new_exp^(0+128),f
  4843  0F0B  1903               	skipnz
  4844  0F0C  0AB2               	incf	(___fldiv@new_exp+1)^(0+128),f
  4845  0F0D                     l4862:
  4846  0F0D  0832               	movf	(___fldiv@new_exp+1)^(0+128),w
  4847  0F0E  3A80               	xorlw	128
  4848  0F0F  00FF               	movwf	127
  4849  0F10  3080               	movlw	128
  4850  0F11  027F               	subwf	127,w
  4851  0F12  1D03               	skipz
  4852  0F13  2F16               	goto	u4245
  4853  0F14  30FF               	movlw	255
  4854  0F15  0231               	subwf	___fldiv@new_exp^(0+128),w
  4855  0F16                     u4245:
  4856  0F16  1C03               	skipc
  4857  0F17  2F21               	goto	l4868
  4858  0F18  30FF               	movlw	255
  4859  0F19  1683               	bsf	3,5	;RP0=1, select bank1
  4860  0F1A  1303               	bcf	3,6	;RP1=0, select bank1
  4861  0F1B  00B1               	movwf	___fldiv@new_exp^(0+128)
  4862  0F1C  01B2               	clrf	(___fldiv@new_exp+1)^(0+128)
  4863  0F1D  01A4               	clrf	___fldiv@b^(0+128)
  4864  0F1E  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4865  0F1F  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4866  0F20  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4867  0F21                     l4868:
  4868  0F21  1683               	bsf	3,5	;RP0=1, select bank1
  4869  0F22  1303               	bcf	3,6	;RP1=0, select bank1
  4870  0F23  0832               	movf	(___fldiv@new_exp+1)^(0+128),w
  4871  0F24  3A80               	xorlw	128
  4872  0F25  00FF               	movwf	127
  4873  0F26  3080               	movlw	128
  4874  0F27  027F               	subwf	127,w
  4875  0F28  1D03               	skipz
  4876  0F29  2F2C               	goto	u4255
  4877  0F2A  3001               	movlw	1
  4878  0F2B  0231               	subwf	___fldiv@new_exp^(0+128),w
  4879  0F2C                     u4255:
  4880  0F2C  1803               	skipnc
  4881  0F2D  2F37               	goto	l4874
  4882  0F2E  1683               	bsf	3,5	;RP0=1, select bank1
  4883  0F2F  1303               	bcf	3,6	;RP1=0, select bank1
  4884  0F30  01B1               	clrf	___fldiv@new_exp^(0+128)
  4885  0F31  01B2               	clrf	(___fldiv@new_exp+1)^(0+128)
  4886  0F32  01A4               	clrf	___fldiv@b^(0+128)
  4887  0F33  01A5               	clrf	(___fldiv@b+1)^(0+128)
  4888  0F34  01A6               	clrf	(___fldiv@b+2)^(0+128)
  4889  0F35  01A7               	clrf	(___fldiv@b+3)^(0+128)
  4890  0F36  01B0               	clrf	___fldiv@sign^(0+128)
  4891  0F37                     l4874:
  4892  0F37  1683               	bsf	3,5	;RP0=1, select bank1
  4893  0F38  1303               	bcf	3,6	;RP1=0, select bank1
  4894  0F39  0831               	movf	___fldiv@new_exp^(0+128),w
  4895  0F3A  00B7               	movwf	___fldiv@bexp^(0+128)
  4896  0F3B  1C37               	btfss	___fldiv@bexp^(0+128),0
  4897  0F3C  2F3F               	goto	l1434
  4898  0F3D  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  4899  0F3E  2F40               	goto	l4880
  4900  0F3F                     l1434:
  4901  0F3F  13A6               	bcf	(___fldiv@b^(0+128)+2),7
  4902  0F40                     l4880:
  4903  0F40  1003               	clrc
  4904  0F41  0C37               	rrf	___fldiv@bexp^(0+128),w
  4905  0F42  00A7               	movwf	(___fldiv@b^(0+128)+3)
  4906  0F43  2E62               	goto	L16
  4907  0F44                     __end_of___fldiv:
  4908  0F44                     __ptext63:	
  4909 ;; *************** function ___flsub *****************
  4910 ;; Defined at:
  4911 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  4912 ;; Parameters:    Size  Location     Type
  4913 ;;  a               4   44[BANK0 ] void 
  4914 ;;  b               4   48[BANK0 ] void 
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;		None
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  4   44[BANK0 ] void 
  4919 ;; Registers used:
  4920 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4921 ;; Tracked objects:
  4922 ;;		On entry : 300/0
  4923 ;;		On exit  : 300/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4926 ;;      Params:         0       8       0       0       0
  4927 ;;      Locals:         0       0       0       0       0
  4928 ;;      Temps:          0       0       0       0       0
  4929 ;;      Totals:         0       8       0       0       0
  4930 ;;Total ram usage:        8 bytes
  4931 ;; Hardware stack levels used: 1
  4932 ;; Hardware stack levels required when called: 2
  4933 ;; This function calls:
  4934 ;;		___fladd
  4935 ;; This function is called by:
  4936 ;;		_Auto_Relay0
  4937 ;;		_Auto_Relay1
  4938 ;;		_ADC_Read_NTC
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           
  4943                           ;psect for function ___flsub
  4944  0F44                     ___flsub:
  4945                           
  4946                           ;incstack = 0
  4947                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4948  0F44  3080               	movlw	128
  4949  0F45  06CF               	xorwf	___flsub@a+3,f
  4950  0F46  0853               	movf	___flsub@b+3,w
  4951  0F47  00BB               	movwf	___fladd@b+3
  4952  0F48  0852               	movf	___flsub@b+2,w
  4953  0F49  00BA               	movwf	___fladd@b+2
  4954  0F4A  0851               	movf	___flsub@b+1,w
  4955  0F4B  00B9               	movwf	___fladd@b+1
  4956  0F4C  0850               	movf	___flsub@b,w
  4957  0F4D  00B8               	movwf	___fladd@b
  4958  0F4E  084F               	movf	___flsub@a+3,w
  4959  0F4F  00BF               	movwf	___fladd@a+3
  4960  0F50  084E               	movf	___flsub@a+2,w
  4961  0F51  00BE               	movwf	___fladd@a+2
  4962  0F52  084D               	movf	___flsub@a+1,w
  4963  0F53  00BD               	movwf	___fladd@a+1
  4964  0F54  084C               	movf	___flsub@a,w
  4965  0F55  00BC               	movwf	___fladd@a
  4966  0F56  22D4               	fcall	___fladd
  4967  0F57  083B               	movf	?___fladd+3,w
  4968  0F58  00CF               	movwf	?___flsub+3
  4969  0F59  083A               	movf	?___fladd+2,w
  4970  0F5A  00CE               	movwf	?___flsub+2
  4971  0F5B  0839               	movf	?___fladd+1,w
  4972  0F5C  00CD               	movwf	?___flsub+1
  4973  0F5D  0838               	movf	?___fladd,w
  4974  0F5E  00CC               	movwf	?___flsub
  4975  0F5F  0008               	return
  4976  0F60                     __end_of___flsub:
  4977  0F60                     __ptext28:	
  4978 ;; *************** function ___lwdiv *****************
  4979 ;; Defined at:
  4980 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;  divisor         2    0[BANK0 ] unsigned int 
  4983 ;;  dividend        2    2[BANK0 ] unsigned int 
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;  quotient        2    5[BANK0 ] unsigned int 
  4986 ;;  counter         1    4[BANK0 ] unsigned char 
  4987 ;; Return value:  Size  Location     Type
  4988 ;;                  2    0[BANK0 ] unsigned int 
  4989 ;; Registers used:
  4990 ;;		wreg, status,2, status,0
  4991 ;; Tracked objects:
  4992 ;;		On entry : 300/0
  4993 ;;		On exit  : 300/0
  4994 ;;		Unchanged: 0/0
  4995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4996 ;;      Params:         0       4       0       0       0
  4997 ;;      Locals:         0       3       0       0       0
  4998 ;;      Temps:          0       0       0       0       0
  4999 ;;      Totals:         0       7       0       0       0
  5000 ;;Total ram usage:        7 bytes
  5001 ;; Hardware stack levels used: 1
  5002 ;; Hardware stack levels required when called: 1
  5003 ;; This function calls:
  5004 ;;		Nothing
  5005 ;; This function is called by:
  5006 ;;		_ADC_Read_NTC
  5007 ;;		_PROCULUS_Buzzer
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           
  5012                           ;psect for function ___lwdiv
  5013  0F60                     ___lwdiv:
  5014                           
  5015                           ;incstack = 0
  5016                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5017  0F60  01A5               	clrf	___lwdiv@quotient
  5018  0F61  01A6               	clrf	___lwdiv@quotient+1
  5019  0F62  0820               	movf	___lwdiv@divisor,w
  5020  0F63  0421               	iorwf	___lwdiv@divisor+1,w
  5021  0F64  1903               	btfsc	3,2
  5022  0F65  2F85               	goto	l6550
  5023  0F66  01A4               	clrf	___lwdiv@counter
  5024  0F67                     L14:
  5025  0F67  0AA4               	incf	___lwdiv@counter,f
  5026  0F68  1BA1               	btfsc	___lwdiv@divisor+1,7
  5027  0F69  2F6E               	goto	l6538
  5028  0F6A  1003               	clrc
  5029  0F6B  0DA0               	rlf	___lwdiv@divisor,f
  5030  0F6C  0DA1               	rlf	___lwdiv@divisor+1,f
  5031  0F6D  2F67               	goto	L14
  5032  0F6E                     l6538:
  5033  0F6E  1003               	clrc
  5034  0F6F  0DA5               	rlf	___lwdiv@quotient,f
  5035  0F70  0DA6               	rlf	___lwdiv@quotient+1,f
  5036  0F71  0821               	movf	___lwdiv@divisor+1,w
  5037  0F72  0223               	subwf	___lwdiv@dividend+1,w
  5038  0F73  1D03               	skipz
  5039  0F74  2F77               	goto	u5875
  5040  0F75  0820               	movf	___lwdiv@divisor,w
  5041  0F76  0222               	subwf	___lwdiv@dividend,w
  5042  0F77                     u5875:
  5043  0F77  1C03               	skipc
  5044  0F78  2F81               	goto	L15
  5045  0F79  0820               	movf	___lwdiv@divisor,w
  5046  0F7A  02A2               	subwf	___lwdiv@dividend,f
  5047  0F7B  0821               	movf	___lwdiv@divisor+1,w
  5048  0F7C  1C03               	skipc
  5049  0F7D  03A3               	decf	___lwdiv@dividend+1,f
  5050  0F7E  02A3               	subwf	___lwdiv@dividend+1,f
  5051  0F7F  1425               	bsf	___lwdiv@quotient,0
  5052  0F80  1003               	clrc
  5053  0F81                     L15:
  5054  0F81  0CA1               	rrf	___lwdiv@divisor+1,f
  5055  0F82  0CA0               	rrf	___lwdiv@divisor,f
  5056  0F83  0BA4               	decfsz	___lwdiv@counter,f
  5057  0F84  2F6E               	goto	l6538
  5058  0F85                     l6550:
  5059  0F85  0826               	movf	___lwdiv@quotient+1,w
  5060  0F86  00A1               	movwf	?___lwdiv+1
  5061  0F87  0825               	movf	___lwdiv@quotient,w
  5062  0F88  00A0               	movwf	?___lwdiv
  5063  0F89  0008               	return
  5064  0F8A                     __end_of___lwdiv:
  5065  0F8A                     __ptext9:	
  5066 ;; *************** function _captura *****************
  5067 ;; Defined at:
  5068 ;;		line 140 in file "adc.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;		None
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;		None
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  2    0[BANK0 ] unsigned int 
  5075 ;; Registers used:
  5076 ;;		wreg
  5077 ;; Tracked objects:
  5078 ;;		On entry : 300/100
  5079 ;;		On exit  : 300/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5082 ;;      Params:         0       2       0       0       0
  5083 ;;      Locals:         0       0       0       0       0
  5084 ;;      Temps:          0       0       0       0       0
  5085 ;;      Totals:         0       2       0       0       0
  5086 ;;Total ram usage:        2 bytes
  5087 ;; Hardware stack levels used: 1
  5088 ;; Hardware stack levels required when called: 1
  5089 ;; This function calls:
  5090 ;;		Nothing
  5091 ;; This function is called by:
  5092 ;;		_ADC_Read_NTC
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096                           
  5097                           ;psect for function _captura
  5098  0F8A                     _captura:
  5099                           
  5100                           ;adc.c: 141:     ADCON0bits.GO=1;
  5101                           
  5102                           ;incstack = 0
  5103                           ; Regs used in _captura: [wreg]
  5104  0F8A  1283               	bcf	3,5	;RP0=0, select bank0
  5105  0F8B  149F               	bsf	31,1	;volatile
  5106  0F8C                     l606:	
  5107                           ;adc.c: 145:           }
  5108                           
  5109                           
  5110                           ;adc.c: 142:     while(ADCON0bits.GO)
  5111  0F8C  189F               	btfsc	31,1	;volatile
  5112  0F8D  2F8C               	goto	l606
  5113                           
  5114                           ;adc.c: 146:     return ((ADRESH<<8)+ADRESL);
  5115  0F8E  081E               	movf	30,w	;volatile
  5116  0F8F  00A1               	movwf	?_captura+1
  5117  0F90  01A0               	clrf	?_captura
  5118  0F91  1683               	bsf	3,5	;RP0=1, select bank1
  5119  0F92  081E               	movf	30,w	;volatile
  5120  0F93  1283               	bcf	3,5	;RP0=0, select bank0
  5121  0F94  07A0               	addwf	?_captura,f
  5122  0F95  1803               	skipnc
  5123  0F96  0AA1               	incf	?_captura+1,f
  5124  0F97  0008               	return
  5125  0F98                     __end_of_captura:
  5126  0F98                     PL20:
  5127  0F98  082D               	movf	?___xxtofl+3,w
  5128  0F99  1683               	bsf	3,5	;RP0=1, select bank1
  5129  0F9A  00A3               	movwf	(___fldiv@a+3)^(0+128)
  5130  0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  5131  0F9C  082C               	movf	?___xxtofl+2,w
  5132  0F9D  1683               	bsf	3,5	;RP0=1, select bank1
  5133  0F9E  00A2               	movwf	(___fldiv@a+2)^(0+128)
  5134  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  5135  0FA0  082B               	movf	?___xxtofl+1,w
  5136  0FA1  1683               	bsf	3,5	;RP0=1, select bank1
  5137  0FA2  00A1               	movwf	(___fldiv@a+1)^(0+128)
  5138  0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  5139  0FA4  082A               	movf	?___xxtofl,w
  5140  0FA5  1683               	bsf	3,5	;RP0=1, select bank1
  5141  0FA6  00A0               	movwf	___fldiv@a^(0+128)
  5142  0FA7  0008               	return
  5143  0FA8                     __end_ofPL20:
  5144  0FA8                     PL24:
  5145  0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  5146  0FA9  00AA               	movwf	___xxtofl@val
  5147  0FAA  1683               	bsf	3,5	;RP0=1, select bank1
  5148  0FAB  0849               	movf	(ADC_Read_NTC@value+1)^(0+128),w
  5149  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  5150  0FAD  00AB               	movwf	___xxtofl@val+1
  5151  0FAE  3000               	movlw	0
  5152  0FAF  01AC               	clrf	___xxtofl@val+2
  5153  0FB0  01AD               	clrf	___xxtofl@val+3
  5154  0FB1  0008               	return
  5155  0FB2                     __end_ofPL24:
  5156  0FB2                     PL32:
  5157  0FB2  082D               	movf	?___xxtofl+3,w
  5158  0FB3  00CF               	movwf	___flsub@a+3
  5159  0FB4  082C               	movf	?___xxtofl+2,w
  5160  0FB5  00CE               	movwf	___flsub@a+2
  5161  0FB6  082B               	movf	?___xxtofl+1,w
  5162  0FB7  00CD               	movwf	___flsub@a+1
  5163  0FB8  082A               	movf	?___xxtofl,w
  5164  0FB9  00CC               	movwf	___flsub@a
  5165  0FBA  0008               	return
  5166  0FBB                     __end_ofPL32:
  5167  0FBB                     PL34:
  5168  0FBB  0823               	movf	(?___fldiv+3)^(0+128),w
  5169  0FBC  00CD               	movwf	(ADC_Read_NTC@temperatura+3)^(0+128)
  5170  0FBD  0822               	movf	(?___fldiv+2)^(0+128),w
  5171  0FBE  00CC               	movwf	(ADC_Read_NTC@temperatura+2)^(0+128)
  5172  0FBF  0821               	movf	(?___fldiv+1)^(0+128),w
  5173  0FC0  00CB               	movwf	(ADC_Read_NTC@temperatura+1)^(0+128)
  5174  0FC1  0820               	movf	?___fldiv^(0+128),w
  5175  0FC2  00CA               	movwf	ADC_Read_NTC@temperatura^(0+128)
  5176  0FC3  0008               	return
  5177  0FC4                     __end_ofPL34:
  5178  0FC4                     PL56:
  5179  0FC4  082D               	movf	?___xxtofl+3,w
  5180  0FC5  00DB               	movwf	___flmul@a+3
  5181  0FC6  082C               	movf	?___xxtofl+2,w
  5182  0FC7  00DA               	movwf	___flmul@a+2
  5183  0FC8  082B               	movf	?___xxtofl+1,w
  5184  0FC9  00D9               	movwf	___flmul@a+1
  5185  0FCA  082A               	movf	?___xxtofl,w
  5186  0FCB  00D8               	movwf	___flmul@a
  5187  0FCC  0008               	return
  5188  0FCD                     __end_ofPL56:
  5189  0FCD                     PL58:
  5190  0FCD  1838               	btfsc	___fladd@b,0
  5191  0FCE  17CB               	bsf	___fladd@grs,7
  5192  0FCF  0D3B               	rlf	___fladd@b+3,w
  5193  0FD0  0CBB               	rrf	___fladd@b+3,f
  5194  0FD1  0CBA               	rrf	___fladd@b+2,f
  5195  0FD2  0CB9               	rrf	___fladd@b+1,f
  5196  0FD3  0CB8               	rrf	___fladd@b,f
  5197  0FD4  0ACA               	incf	___fladd@bexp,f
  5198  0FD5  0008               	return
  5199  0FD6                     __end_ofPL58:
  5200  0FD6                     PL60:
  5201  0FD6  00AB               	movwf	___xxtofl@val+1
  5202  0FD7  3000               	movlw	0
  5203  0FD8  1BAB               	btfsc	___xxtofl@val+1,7
  5204  0FD9  30FF               	movlw	255
  5205  0FDA  00AC               	movwf	___xxtofl@val+2
  5206  0FDB  00AD               	movwf	___xxtofl@val+3
  5207  0FDC  3401               	retlw	1
  5208  0FDD                     __end_ofPL60:
  5209  0FDD                     PL78:
  5210  0FDD  1003               	clrc
  5211  0FDE  0CB7               	rrf	___xxtofl@arg+3,f
  5212  0FDF  0CB6               	rrf	___xxtofl@arg+2,f
  5213  0FE0  0CB5               	rrf	___xxtofl@arg+1,f
  5214  0FE1  0CB4               	rrf	___xxtofl@arg,f
  5215  0FE2  0008               	return
  5216  0FE3                     __end_ofPL78:
  5217  0FE3                     PL80:
  5218  0FE3  01B8               	clrf	?___fladd
  5219  0FE4  01B9               	clrf	?___fladd+1
  5220  0FE5  01BA               	clrf	?___fladd+2
  5221  0FE6  01BB               	clrf	?___fladd+3
  5222  0FE7  0008               	return
  5223  0FE8                     __end_ofPL80:
  5224  0FE8                     __ptext3:	
  5225 ;; *************** function _Package_Usart_is_for_me *****************
  5226 ;; Defined at:
  5227 ;;		line 8 in file "protocolo.c"
  5228 ;; Parameters:    Size  Location     Type
  5229 ;;		None
  5230 ;; Auto vars:     Size  Location     Type
  5231 ;;  retorno         1    0[BANK0 ] unsigned char 
  5232 ;; Return value:  Size  Location     Type
  5233 ;;                  1    wreg      unsigned char 
  5234 ;; Registers used:
  5235 ;;		wreg, status,2, status,0
  5236 ;; Tracked objects:
  5237 ;;		On entry : 300/100
  5238 ;;		On exit  : 300/0
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5241 ;;      Params:         0       0       0       0       0
  5242 ;;      Locals:         0       1       0       0       0
  5243 ;;      Temps:          0       0       0       0       0
  5244 ;;      Totals:         0       1       0       0       0
  5245 ;;Total ram usage:        1 bytes
  5246 ;; Hardware stack levels used: 1
  5247 ;; Hardware stack levels required when called: 1
  5248 ;; This function calls:
  5249 ;;		Nothing
  5250 ;; This function is called by:
  5251 ;;		_mediatemperaturaNTC
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           
  5256                           ;psect for function _Package_Usart_is_for_me
  5257  0FE8                     _Package_Usart_is_for_me:
  5258                           
  5259                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  5260                           
  5261                           ;incstack = 0
  5262                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  5263  0FE8  1C6C               	btfss	_generic_status^(0+128),0
  5264  0FE9  2FFB               	goto	l5344
  5265                           
  5266                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  5267  0FEA  1283               	bcf	3,5	;RP0=0, select bank2
  5268  0FEB  1703               	bsf	3,6	;RP1=1, select bank2
  5269  0FEC  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  5270  0FED  1683               	bsf	3,5	;RP0=1, select bank1
  5271  0FEE  1303               	bcf	3,6	;RP1=0, select bank1
  5272  0FEF  0665               	xorwf	_Board_Number^(0+128),w
  5273  0FF0  1903               	skipnz
  5274  0FF1  2FF6               	goto	l894
  5275  0FF2  1283               	bcf	3,5	;RP0=0, select bank2
  5276  0FF3  1703               	bsf	3,6	;RP1=1, select bank2
  5277  0FF4  0F13               	incfsz	(_usart_buffer^(0+256)+3),w	;volatile
  5278  0FF5  2FFB               	goto	l5344
  5279  0FF6                     l894:
  5280                           
  5281                           ;protocolo.c: 13:             retorno=1;
  5282  0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  5283  0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  5284  0FF8  01A0               	clrf	Package_Usart_is_for_me@retorno
  5285  0FF9  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  5286  0FFA  2FFE               	goto	l5348
  5287  0FFB                     l5344:
  5288                           
  5289                           ;protocolo.c: 15:             retorno=0;
  5290  0FFB  1283               	bcf	3,5	;RP0=0, select bank0
  5291  0FFC  1303               	bcf	3,6	;RP1=0, select bank0
  5292  0FFD  01A0               	clrf	Package_Usart_is_for_me@retorno
  5293  0FFE                     l5348:
  5294                           
  5295                           ;protocolo.c: 21:      return retorno;
  5296  0FFE  0820               	movf	Package_Usart_is_for_me@retorno,w
  5297  0FFF  0008               	return
  5298  1000                     __end_of_Package_Usart_is_for_me:
  5299                           
  5300                           	psect	text2
  5301  105D                     __ptext2:	
  5302 ;; *************** function _my_delay_ms *****************
  5303 ;; Defined at:
  5304 ;;		line 5 in file "my_delay.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;  time            4    0[BANK0 ] long 
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;  i               4    6[BANK0 ] long 
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  1    wreg      void 
  5311 ;; Registers used:
  5312 ;;		wreg, status,2, status,0, btemp+1
  5313 ;; Tracked objects:
  5314 ;;		On entry : 300/0
  5315 ;;		On exit  : 300/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5318 ;;      Params:         0       4       0       0       0
  5319 ;;      Locals:         0       4       0       0       0
  5320 ;;      Temps:          0       2       0       0       0
  5321 ;;      Totals:         0      10       0       0       0
  5322 ;;Total ram usage:       10 bytes
  5323 ;; Hardware stack levels used: 1
  5324 ;; Hardware stack levels required when called: 1
  5325 ;; This function calls:
  5326 ;;		Nothing
  5327 ;; This function is called by:
  5328 ;;		_mediatemperaturaNTC
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           
  5333                           ;psect for function _my_delay_ms
  5334  105D                     _my_delay_ms:
  5335                           
  5336                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  5337                           
  5338                           ;incstack = 0
  5339                           ; Regs used in _my_delay_ms: [wreg+status,2+status,0+btemp+1]
  5340  105D  01A6               	clrf	my_delay_ms@i
  5341  105E  01A7               	clrf	my_delay_ms@i+1
  5342  105F  01A8               	clrf	my_delay_ms@i+2
  5343  1060  01A9               	clrf	my_delay_ms@i+3
  5344  1061                     l5294:
  5345  1061  0829               	movf	my_delay_ms@i+3,w
  5346  1062  3A80               	xorlw	128
  5347  1063  00FF               	movwf	127
  5348  1064  0823               	movf	my_delay_ms@time+3,w
  5349  1065  3A80               	xorlw	128
  5350  1066  027F               	subwf	127,w
  5351  1067  1D03               	skipz
  5352  1068  2873               	goto	u4523
  5353  1069  0822               	movf	my_delay_ms@time+2,w
  5354  106A  0228               	subwf	my_delay_ms@i+2,w
  5355  106B  1D03               	skipz
  5356  106C  2873               	goto	u4523
  5357  106D  0821               	movf	my_delay_ms@time+1,w
  5358  106E  0227               	subwf	my_delay_ms@i+1,w
  5359  106F  1D03               	skipz
  5360  1070  2873               	goto	u4523
  5361  1071  0820               	movf	my_delay_ms@time,w
  5362  1072  0226               	subwf	my_delay_ms@i,w
  5363  1073                     u4523:
  5364  1073  1803               	btfsc	3,0
  5365  1074  0008               	return
  5366                           
  5367                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  5368  1075  3003               	movlw	3
  5369  1076  1283               	bcf	3,5	;RP0=0, select bank0
  5370  1077  1303               	bcf	3,6	;RP1=0, select bank0
  5371  1078  00A5               	movwf	??_my_delay_ms+1
  5372  1079  3097               	movlw	151
  5373  107A  00A4               	movwf	??_my_delay_ms
  5374  107B                     u6667:
  5375  107B  0BA4               	decfsz	??_my_delay_ms,f
  5376  107C  287B               	goto	u6667
  5377  107D  0BA5               	decfsz	??_my_delay_ms+1,f
  5378  107E  287B               	goto	u6667
  5379                           
  5380                           ;my_delay.c: 10:             }
  5381  107F  1283               	bcf	3,5	;RP0=0, select bank0
  5382  1080  1303               	bcf	3,6	;RP1=0, select bank0
  5383  1081  0AA6               	incf	my_delay_ms@i,f
  5384  1082  1903               	skipnz
  5385  1083  0AA7               	incf	my_delay_ms@i+1,f
  5386  1084  1903               	skipnz
  5387  1085  0AA8               	incf	my_delay_ms@i+2,f
  5388  1086  1903               	skipnz
  5389  1087  0AA9               	incf	my_delay_ms@i+3,f
  5390  1088  2861               	goto	l5294
  5391  1089                     __end_of_my_delay_ms:
  5392                           
  5393                           	psect	text10
  5394  1089                     __ptext10:	
  5395 ;; *************** function _USART_init *****************
  5396 ;; Defined at:
  5397 ;;		line 18 in file "usart.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;  baudrate        4    0[BANK0 ] unsigned long 
  5400 ;; Auto vars:     Size  Location     Type
  5401 ;;  i               1    4[BANK0 ] unsigned char 
  5402 ;;  erro            1    0        unsigned char 
  5403 ;; Return value:  Size  Location     Type
  5404 ;;                  1    wreg      void 
  5405 ;; Registers used:
  5406 ;;		wreg, status,2, status,0
  5407 ;; Tracked objects:
  5408 ;;		On entry : 300/0
  5409 ;;		On exit  : 300/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5412 ;;      Params:         0       4       0       0       0
  5413 ;;      Locals:         0       1       0       0       0
  5414 ;;      Temps:          0       0       0       0       0
  5415 ;;      Totals:         0       5       0       0       0
  5416 ;;Total ram usage:        5 bytes
  5417 ;; Hardware stack levels used: 1
  5418 ;; Hardware stack levels required when called: 1
  5419 ;; This function calls:
  5420 ;;		Nothing
  5421 ;; This function is called by:
  5422 ;;		_main
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           
  5426                           
  5427                           ;psect for function _USART_init
  5428  1089                     _USART_init:
  5429                           
  5430                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  5431                           
  5432                           ;incstack = 0
  5433                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  5434  1089  304B               	movlw	75
  5435  108A  0621               	xorwf	USART_init@baudrate+1,w
  5436  108B  0420               	iorwf	USART_init@baudrate,w
  5437  108C  0422               	iorwf	USART_init@baudrate+2,w
  5438  108D  0423               	iorwf	USART_init@baudrate+3,w
  5439  108E  1D03               	btfss	3,2
  5440  108F  289C               	goto	l7050
  5441                           
  5442                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  5443  1090  1283               	bcf	3,5	;RP0=0, select bank0
  5444  1091  1303               	bcf	3,6	;RP1=0, select bank0
  5445  1092  1798               	bsf	24,7	;volatile
  5446                           
  5447                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  5448  1093  1618               	bsf	24,4	;volatile
  5449                           
  5450                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  5451  1094  1683               	bsf	3,5	;RP0=1, select bank1
  5452  1095  1518               	bsf	24,2	;volatile
  5453                           
  5454                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  5455  1096  1218               	bcf	24,4	;volatile
  5456                           
  5457                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  5458  1097  1318               	bcf	24,6	;volatile
  5459                           
  5460                           ;usart.c: 32:           SPBRG =12;
  5461  1098  300C               	movlw	12
  5462  1099  0099               	movwf	25	;volatile
  5463                           
  5464                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  5465  109A  170B               	bsf	11,6	;volatile
  5466  109B  28B8               	goto	L5
  5467  109C                     l7050:	
  5468                           ;usart.c: 35:           }
  5469                           
  5470                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  5471                           
  5472  109C  30C2               	movlw	194
  5473  109D  1283               	bcf	3,5	;RP0=0, select bank0
  5474  109E  1303               	bcf	3,6	;RP1=0, select bank0
  5475  109F  0621               	xorwf	USART_init@baudrate+1,w
  5476  10A0  1D03               	skipz
  5477  10A1  28B9               	goto	l7070
  5478  10A2  0322               	decf	USART_init@baudrate+2,w
  5479  10A3  0420               	iorwf	USART_init@baudrate,w
  5480  10A4  0423               	iorwf	USART_init@baudrate+3,w
  5481  10A5  1D03               	btfss	3,2
  5482  10A6  28B9               	goto	l7070
  5483                           
  5484                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  5485  10A7  3010               	movlw	16
  5486  10A8  1683               	bsf	3,5	;RP0=1, select bank1
  5487  10A9  1303               	bcf	3,6	;RP1=0, select bank1
  5488  10AA  0099               	movwf	25	;volatile
  5489                           
  5490                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  5491  10AB  1703               	bsf	3,6	;RP1=1, select bank3
  5492  10AC  1587               	bsf	7,3	;volatile
  5493                           
  5494                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  5495  10AD  1303               	bcf	3,6	;RP1=0, select bank1
  5496  10AE  1518               	bsf	24,2	;volatile
  5497                           
  5498                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  5499  10AF  1283               	bcf	3,5	;RP0=0, select bank0
  5500  10B0  1798               	bsf	24,7	;volatile
  5501                           
  5502                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  5503  10B1  1683               	bsf	3,5	;RP0=1, select bank1
  5504  10B2  1218               	bcf	24,4	;volatile
  5505                           
  5506                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  5507  10B3  1318               	bcf	24,6	;volatile
  5508                           
  5509                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  5510  10B4  1283               	bcf	3,5	;RP0=0, select bank0
  5511  10B5  1618               	bsf	24,4	;volatile
  5512                           
  5513                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  5514  10B6  170B               	bsf	11,6	;volatile
  5515                           
  5516                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  5517  10B7  1683               	bsf	3,5	;RP0=1, select bank1
  5518  10B8                     L5:
  5519  10B8  168C               	bsf	12,5	;volatile
  5520  10B9                     l7070:
  5521                           
  5522                           ;usart.c: 68:      TRISC6= 1;
  5523  10B9  1683               	bsf	3,5	;RP0=1, select bank1
  5524  10BA  1303               	bcf	3,6	;RP1=0, select bank1
  5525  10BB  1707               	bsf	7,6	;volatile
  5526                           
  5527                           ;usart.c: 69:      TRISC7= 1;
  5528  10BC  1787               	bsf	7,7	;volatile
  5529                           
  5530                           ;usart.c: 71:      CREN=0;
  5531  10BD  1283               	bcf	3,5	;RP0=0, select bank0
  5532  10BE  1218               	bcf	24,4	;volatile
  5533                           
  5534                           ;usart.c: 72:      CREN=1;
  5535  10BF  1618               	bsf	24,4	;volatile
  5536                           
  5537                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  5538  10C0  01A4               	clrf	USART_init@i
  5539  10C1                     l7084:
  5540  10C1  081A               	movf	26,w	;volatile
  5541  10C2  300F               	movlw	15
  5542  10C3  0AA4               	incf	USART_init@i,f
  5543  10C4  0224               	subwf	USART_init@i,w
  5544  10C5  1803               	btfsc	3,0
  5545  10C6  0008               	return
  5546  10C7  28C1               	goto	l7084
  5547  10C8                     __end_of_USART_init:
  5548                           
  5549                           	psect	text11
  5550  072F                     __ptext11:	
  5551 ;; *************** function _I2C_Master_Init *****************
  5552 ;; Defined at:
  5553 ;;		line 7 in file "I2C.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;  c               4   13[BANK0 ] const unsigned long 
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;		None
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  1    wreg      void 
  5560 ;; Registers used:
  5561 ;;		wreg, status,2, status,0, pclath, cstack
  5562 ;; Tracked objects:
  5563 ;;		On entry : 300/0
  5564 ;;		On exit  : 300/100
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5567 ;;      Params:         0       4       0       0       0
  5568 ;;      Locals:         0       0       0       0       0
  5569 ;;      Temps:          0       4       0       0       0
  5570 ;;      Totals:         0       8       0       0       0
  5571 ;;Total ram usage:        8 bytes
  5572 ;; Hardware stack levels used: 1
  5573 ;; Hardware stack levels required when called: 2
  5574 ;; This function calls:
  5575 ;;		___lldiv
  5576 ;; This function is called by:
  5577 ;;		_main
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           
  5582                           ;psect for function _I2C_Master_Init
  5583  072F                     _I2C_Master_Init:
  5584                           
  5585                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  5586                           
  5587                           ;incstack = 0
  5588                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  5589  072F  3028               	movlw	40
  5590  0730  0094               	movwf	20	;volatile
  5591                           
  5592                           ;I2C.c: 11:   SSPCON2 = 0;
  5593  0731  1683               	bsf	3,5	;RP0=1, select bank1
  5594  0732  0191               	clrf	17	;volatile
  5595                           
  5596                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  5597  0733  1283               	bcf	3,5	;RP0=0, select bank0
  5598  0734  082D               	movf	I2C_Master_Init@c,w
  5599  0735  00B1               	movwf	??_I2C_Master_Init
  5600  0736  082E               	movf	I2C_Master_Init@c+1,w
  5601  0737  00B2               	movwf	??_I2C_Master_Init+1
  5602  0738  082F               	movf	I2C_Master_Init@c+2,w
  5603  0739  00B3               	movwf	??_I2C_Master_Init+2
  5604  073A  0830               	movf	I2C_Master_Init@c+3,w
  5605  073B  00B4               	movwf	??_I2C_Master_Init+3
  5606  073C  3002               	movlw	2
  5607  073D                     u6245:
  5608  073D  1003               	clrc
  5609  073E  0DB1               	rlf	??_I2C_Master_Init,f
  5610  073F  0DB2               	rlf	??_I2C_Master_Init+1,f
  5611  0740  0DB3               	rlf	??_I2C_Master_Init+2,f
  5612  0741  0DB4               	rlf	??_I2C_Master_Init+3,f
  5613  0742  3EFF               	addlw	-1
  5614  0743  1D03               	skipz
  5615  0744  2F3D               	goto	u6245
  5616  0745  0834               	movf	??_I2C_Master_Init+3,w
  5617  0746  00A3               	movwf	___lldiv@divisor+3
  5618  0747  0833               	movf	??_I2C_Master_Init+2,w
  5619  0748  00A2               	movwf	___lldiv@divisor+2
  5620  0749  0832               	movf	??_I2C_Master_Init+1,w
  5621  074A  00A1               	movwf	___lldiv@divisor+1
  5622  074B  0831               	movf	??_I2C_Master_Init,w
  5623  074C  00A0               	movwf	___lldiv@divisor
  5624  074D  307A               	movlw	122
  5625  074E  01A7               	clrf	___lldiv@dividend+3
  5626  074F  00A6               	movwf	___lldiv@dividend+2
  5627  0750  3012               	movlw	18
  5628  0751  00A5               	movwf	___lldiv@dividend+1
  5629  0752  01A4               	clrf	___lldiv@dividend
  5630  0753  275C               	fcall	___lldiv
  5631  0754  0820               	movf	?___lldiv,w
  5632  0755  3EFF               	addlw	255
  5633  0756  1683               	bsf	3,5	;RP0=1, select bank1
  5634  0757  0093               	movwf	19	;volatile
  5635                           
  5636                           ;I2C.c: 13:   SSPSTAT = 0;
  5637  0758  0194               	clrf	20	;volatile
  5638                           
  5639                           ;I2C.c: 14:   TRISC3 = 1;
  5640  0759  1587               	bsf	7,3	;volatile
  5641                           
  5642                           ;I2C.c: 15:   TRISC4 = 1;
  5643  075A  1607               	bsf	7,4	;volatile
  5644  075B  0008               	return
  5645  075C                     __end_of_I2C_Master_Init:
  5646  075C                     __ptext12:	
  5647 ;; *************** function ___lldiv *****************
  5648 ;; Defined at:
  5649 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;  divisor         4    0[BANK0 ] unsigned long 
  5652 ;;  dividend        4    4[BANK0 ] unsigned long 
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;  quotient        4    8[BANK0 ] unsigned long 
  5655 ;;  counter         1   12[BANK0 ] unsigned char 
  5656 ;; Return value:  Size  Location     Type
  5657 ;;                  4    0[BANK0 ] unsigned long 
  5658 ;; Registers used:
  5659 ;;		wreg, status,2, status,0
  5660 ;; Tracked objects:
  5661 ;;		On entry : 300/0
  5662 ;;		On exit  : 300/0
  5663 ;;		Unchanged: 0/0
  5664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5665 ;;      Params:         0       8       0       0       0
  5666 ;;      Locals:         0       5       0       0       0
  5667 ;;      Temps:          0       0       0       0       0
  5668 ;;      Totals:         0      13       0       0       0
  5669 ;;Total ram usage:       13 bytes
  5670 ;; Hardware stack levels used: 1
  5671 ;; Hardware stack levels required when called: 1
  5672 ;; This function calls:
  5673 ;;		Nothing
  5674 ;; This function is called by:
  5675 ;;		_I2C_Master_Init
  5676 ;; This function uses a non-reentrant model
  5677 ;;
  5678                           
  5679                           
  5680                           ;psect for function ___lldiv
  5681  075C                     ___lldiv:
  5682                           
  5683                           ;incstack = 0
  5684                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5685  075C  01A8               	clrf	___lldiv@quotient
  5686  075D  01A9               	clrf	___lldiv@quotient+1
  5687  075E  01AA               	clrf	___lldiv@quotient+2
  5688  075F  01AB               	clrf	___lldiv@quotient+3
  5689  0760  0823               	movf	___lldiv@divisor+3,w
  5690  0761  0422               	iorwf	___lldiv@divisor+2,w
  5691  0762  0421               	iorwf	___lldiv@divisor+1,w
  5692  0763  0420               	iorwf	___lldiv@divisor,w
  5693  0764  1903               	skipnz
  5694  0765  2F9B               	goto	l7016
  5695  0766  01AC               	clrf	___lldiv@counter
  5696  0767                     L6:
  5697  0767  0AAC               	incf	___lldiv@counter,f
  5698  0768  1BA3               	btfsc	___lldiv@divisor+3,7
  5699  0769  2F70               	goto	l7004
  5700  076A  1003               	clrc
  5701  076B  0DA0               	rlf	___lldiv@divisor,f
  5702  076C  0DA1               	rlf	___lldiv@divisor+1,f
  5703  076D  0DA2               	rlf	___lldiv@divisor+2,f
  5704  076E  0DA3               	rlf	___lldiv@divisor+3,f
  5705  076F  2F67               	goto	L6
  5706  0770                     l7004:
  5707  0770  1003               	clrc
  5708  0771  0DA8               	rlf	___lldiv@quotient,f
  5709  0772  0DA9               	rlf	___lldiv@quotient+1,f
  5710  0773  0DAA               	rlf	___lldiv@quotient+2,f
  5711  0774  0DAB               	rlf	___lldiv@quotient+3,f
  5712  0775  0823               	movf	___lldiv@divisor+3,w
  5713  0776  0227               	subwf	___lldiv@dividend+3,w
  5714  0777  1D03               	skipz
  5715  0778  2F83               	goto	u6225
  5716  0779  0822               	movf	___lldiv@divisor+2,w
  5717  077A  0226               	subwf	___lldiv@dividend+2,w
  5718  077B  1D03               	skipz
  5719  077C  2F83               	goto	u6225
  5720  077D  0821               	movf	___lldiv@divisor+1,w
  5721  077E  0225               	subwf	___lldiv@dividend+1,w
  5722  077F  1D03               	skipz
  5723  0780  2F83               	goto	u6225
  5724  0781  0820               	movf	___lldiv@divisor,w
  5725  0782  0224               	subwf	___lldiv@dividend,w
  5726  0783                     u6225:
  5727  0783  1C03               	skipc
  5728  0784  2F95               	goto	L7
  5729  0785  0820               	movf	___lldiv@divisor,w
  5730  0786  02A4               	subwf	___lldiv@dividend,f
  5731  0787  0821               	movf	___lldiv@divisor+1,w
  5732  0788  1C03               	skipc
  5733  0789  0F21               	incfsz	___lldiv@divisor+1,w
  5734  078A  02A5               	subwf	___lldiv@dividend+1,f
  5735  078B  0822               	movf	___lldiv@divisor+2,w
  5736  078C  1C03               	skipc
  5737  078D  0F22               	incfsz	___lldiv@divisor+2,w
  5738  078E  02A6               	subwf	___lldiv@dividend+2,f
  5739  078F  0823               	movf	___lldiv@divisor+3,w
  5740  0790  1C03               	skipc
  5741  0791  0F23               	incfsz	___lldiv@divisor+3,w
  5742  0792  02A7               	subwf	___lldiv@dividend+3,f
  5743  0793  1428               	bsf	___lldiv@quotient,0
  5744  0794  1003               	clrc
  5745  0795                     L7:
  5746  0795  0CA3               	rrf	___lldiv@divisor+3,f
  5747  0796  0CA2               	rrf	___lldiv@divisor+2,f
  5748  0797  0CA1               	rrf	___lldiv@divisor+1,f
  5749  0798  0CA0               	rrf	___lldiv@divisor,f
  5750  0799  0BAC               	decfsz	___lldiv@counter,f
  5751  079A  2F70               	goto	l7004
  5752  079B                     l7016:
  5753  079B  082B               	movf	___lldiv@quotient+3,w
  5754  079C  00A3               	movwf	?___lldiv+3
  5755  079D  082A               	movf	___lldiv@quotient+2,w
  5756  079E  00A2               	movwf	?___lldiv+2
  5757  079F  0829               	movf	___lldiv@quotient+1,w
  5758  07A0  00A1               	movwf	?___lldiv+1
  5759  07A1  0828               	movf	___lldiv@quotient,w
  5760  07A2  00A0               	movwf	?___lldiv
  5761  07A3  0008               	return
  5762  07A4                     __end_of___lldiv:
  5763                           
  5764                           	psect	text14
  5765  0808                     __ptext14:	
  5766 ;; *************** function _strcpy *****************
  5767 ;; Defined at:
  5768 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strcpy.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;  to              1    wreg     PTR unsigned char 
  5771 ;;		 -> buffer(33), 
  5772 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  5773 ;;		 -> STR_1(8), 
  5774 ;; Auto vars:     Size  Location     Type
  5775 ;;  to              1    2[BANK0 ] PTR unsigned char 
  5776 ;;		 -> buffer(33), 
  5777 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  5778 ;;		 -> buffer(33), 
  5779 ;; Return value:  Size  Location     Type
  5780 ;;                  1    wreg      PTR unsigned char 
  5781 ;; Registers used:
  5782 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5783 ;; Tracked objects:
  5784 ;;		On entry : 300/0
  5785 ;;		On exit  : B00/800
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5788 ;;      Params:         0       1       0       0       0
  5789 ;;      Locals:         0       2       0       0       0
  5790 ;;      Temps:          0       1       0       0       0
  5791 ;;      Totals:         0       4       0       0       0
  5792 ;;Total ram usage:        4 bytes
  5793 ;; Hardware stack levels used: 2
  5794 ;; Hardware stack levels required when called: 1
  5795 ;; This function calls:
  5796 ;;		Nothing
  5797 ;; This function is called by:
  5798 ;;		_Decodify_Command
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           
  5803                           ;psect for function _strcpy
  5804  0808                     _strcpy:
  5805                           
  5806                           ;incstack = 0
  5807                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  5808                           ;strcpy@to stored from wreg
  5809  0808  00A2               	movwf	strcpy@to
  5810  0809  00A3               	movwf	strcpy@cp
  5811  080A                     l5244:
  5812  080A  0820               	movf	strcpy@from,w
  5813  080B  0084               	movwf	4
  5814  080C  160A  118A  200A  120A  158A  	fcall	stringdir
  5815  0811  00A1               	movwf	??_strcpy
  5816  0812  0823               	movf	strcpy@cp,w
  5817  0813  0084               	movwf	4
  5818  0814  0821               	movf	??_strcpy,w
  5819  0815  1783               	bsf	3,7	;select IRP bank2
  5820  0816  0080               	movwf	0
  5821  0817  0800               	movf	0,w
  5822  0818  1903               	btfsc	3,2
  5823  0819  0008               	return
  5824  081A  0AA3               	incf	strcpy@cp,f
  5825  081B  0AA0               	incf	strcpy@from,f
  5826  081C  280A               	goto	l5244
  5827  081D                     __end_of_strcpy:
  5828                           
  5829                           	psect	text15
  5830  07A4                     __ptext15:	
  5831 ;; *************** function _USART_to_Protocol *****************
  5832 ;; Defined at:
  5833 ;;		line 77 in file "usart.c"
  5834 ;; Parameters:    Size  Location     Type
  5835 ;;  usart_protoc    1    wreg     PTR struct .
  5836 ;;		 -> usart_protocol(58), 
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  5839 ;;		 -> usart_protocol(58), 
  5840 ;;  i               2    2[BANK0 ] int 
  5841 ;; Return value:  Size  Location     Type
  5842 ;;                  1    wreg      void 
  5843 ;; Registers used:
  5844 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5845 ;; Tracked objects:
  5846 ;;		On entry : 300/300
  5847 ;;		On exit  : 0/0
  5848 ;;		Unchanged: 0/0
  5849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5850 ;;      Params:         0       0       0       0       0
  5851 ;;      Locals:         0       3       0       0       0
  5852 ;;      Temps:          0       2       0       0       0
  5853 ;;      Totals:         0       5       0       0       0
  5854 ;;Total ram usage:        5 bytes
  5855 ;; Hardware stack levels used: 1
  5856 ;; Hardware stack levels required when called: 1
  5857 ;; This function calls:
  5858 ;;		Nothing
  5859 ;; This function is called by:
  5860 ;;		_Decodify_Command
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           
  5865                           ;psect for function _USART_to_Protocol
  5866  07A4                     _USART_to_Protocol:
  5867                           
  5868                           ;incstack = 0
  5869                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  5870                           ;USART_to_Protocol@usart_protocol stored from wreg
  5871  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  5872  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  5873  07A6  00A4               	movwf	USART_to_Protocol@usart_protocol
  5874                           
  5875                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  5876  07A7  0084               	movwf	4
  5877  07A8  1703               	bsf	3,6	;RP1=1, select bank2
  5878  07A9  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  5879  07AA  1783               	bsf	3,7	;select IRP bank2
  5880  07AB  0080               	movwf	0
  5881  07AC  0A84               	incf	4,f
  5882  07AD  0810               	movf	_usart_buffer^(0+256),w	;volatile
  5883  07AE  0080               	movwf	0
  5884                           
  5885                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  5886  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  5887  07B0  0824               	movf	USART_to_Protocol@usart_protocol,w
  5888  07B1  3E02               	addlw	2
  5889  07B2  0084               	movwf	4
  5890  07B3  1703               	bsf	3,6	;RP1=1, select bank2
  5891  07B4  0812               	movf	(_usart_buffer^(0+256)+2),w	;volatile
  5892  07B5  0080               	movwf	0
  5893                           
  5894                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  5895  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  5896  07B7  0824               	movf	USART_to_Protocol@usart_protocol,w
  5897  07B8  3E03               	addlw	3
  5898  07B9  0084               	movwf	4
  5899  07BA  1703               	bsf	3,6	;RP1=1, select bank2
  5900  07BB  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  5901  07BC  0080               	movwf	0
  5902                           
  5903                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  5904  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  5905  07BE  0824               	movf	USART_to_Protocol@usart_protocol,w
  5906  07BF  3E04               	addlw	4
  5907  07C0  0084               	movwf	4
  5908  07C1  1703               	bsf	3,6	;RP1=1, select bank2
  5909  07C2  0814               	movf	(_usart_buffer^(0+256)+4),w	;volatile
  5910  07C3  0080               	movwf	0
  5911                           
  5912                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  5913  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  5914  07C5  0824               	movf	USART_to_Protocol@usart_protocol,w
  5915  07C6  3E05               	addlw	5
  5916  07C7  0084               	movwf	4
  5917  07C8  1703               	bsf	3,6	;RP1=1, select bank2
  5918  07C9  0815               	movf	(_usart_buffer^(0+256)+5),w	;volatile
  5919  07CA  0080               	movwf	0
  5920                           
  5921                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  5922  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  5923  07CC  01A2               	clrf	USART_to_Protocol@i
  5924  07CD  01A3               	clrf	USART_to_Protocol@i+1
  5925  07CE                     l5238:
  5926  07CE  0824               	movf	USART_to_Protocol@usart_protocol,w
  5927  07CF  3E05               	addlw	5
  5928  07D0  0084               	movwf	4
  5929  07D1  0823               	movf	USART_to_Protocol@i+1,w
  5930  07D2  3A80               	xorlw	128
  5931  07D3  00A0               	movwf	??_USART_to_Protocol
  5932  07D4  3080               	movlw	128
  5933  07D5  0220               	subwf	??_USART_to_Protocol,w
  5934  07D6  1D03               	skipz
  5935  07D7  2FDA               	goto	u4485
  5936  07D8  0800               	movf	0,w
  5937  07D9  0222               	subwf	USART_to_Protocol@i,w
  5938  07DA                     u4485:
  5939  07DA  1803               	btfsc	3,0
  5940  07DB  0008               	return
  5941                           
  5942                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  5943  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  5944  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  5945  07DE  0822               	movf	USART_to_Protocol@i,w
  5946  07DF  3E16               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  5947  07E0  0084               	movwf	4
  5948  07E1  1783               	bsf	3,7	;select IRP bank2
  5949  07E2  0800               	movf	0,w
  5950  07E3  00A0               	movwf	??_USART_to_Protocol
  5951  07E4  0822               	movf	USART_to_Protocol@i,w
  5952  07E5  0724               	addwf	USART_to_Protocol@usart_protocol,w
  5953  07E6  00A1               	movwf	??_USART_to_Protocol+1
  5954  07E7  3E06               	addlw	6
  5955  07E8  0084               	movwf	4
  5956  07E9  0820               	movf	??_USART_to_Protocol,w
  5957  07EA  0080               	movwf	0
  5958  07EB  0AA2               	incf	USART_to_Protocol@i,f
  5959  07EC  1903               	skipnz
  5960  07ED  0AA3               	incf	USART_to_Protocol@i+1,f
  5961  07EE  2FCE               	goto	l5238
  5962  07EF                     __end_of_USART_to_Protocol:
  5963                           
  5964                           	psect	text19
  5965  1C38                     __ptext19:	
  5966 ;; *************** function _Save_Log *****************
  5967 ;; Defined at:
  5968 ;;		line 1017 in file "SlaveLiofilizadorVer1.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;  add_datalog     4   17[BANK1 ] unsigned long 
  5971 ;; Auto vars:     Size  Location     Type
  5972 ;;		None
  5973 ;; Return value:  Size  Location     Type
  5974 ;;                  1    wreg      void 
  5975 ;; Registers used:
  5976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5977 ;; Tracked objects:
  5978 ;;		On entry : 300/100
  5979 ;;		On exit  : 0/0
  5980 ;;		Unchanged: 0/0
  5981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5982 ;;      Params:         0       0       4       0       0
  5983 ;;      Locals:         0       0       0       0       0
  5984 ;;      Temps:          0       0       0       0       0
  5985 ;;      Totals:         0       0       4       0       0
  5986 ;;Total ram usage:        4 bytes
  5987 ;; Hardware stack levels used: 1
  5988 ;; Hardware stack levels required when called: 5
  5989 ;; This function calls:
  5990 ;;		_EEPROM_24C1025_Write_Int
  5991 ;;		___flmul
  5992 ;;		___fltol
  5993 ;; This function is called by:
  5994 ;;		_Decodify_Command
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           
  5999                           ;psect for function _Save_Log
  6000  1C38                     _Save_Log:
  6001                           
  6002                           ;SlaveLiofilizadorVer1.c: 1018:      EEPROM_24C1025_Write_Int(0x00, add_datalog, Tempera
      +                          tura0*10.0);
  6003                           
  6004                           ;incstack = 0
  6005                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6006  1C38  2502  160A  158A   	fcall	PL46	;call to abstracted procedure
  6007  1C3B  0817               	movf	(_Temperatura0+3)^(0+384),w
  6008  1C3C  1283               	bcf	3,5	;RP0=0, select bank0
  6009  1C3D  1303               	bcf	3,6	;RP1=0, select bank0
  6010  1C3E  00DB               	movwf	___flmul@a+3
  6011  1C3F  1683               	bsf	3,5	;RP0=1, select bank3
  6012  1C40  1703               	bsf	3,6	;RP1=1, select bank3
  6013  1C41  0816               	movf	(_Temperatura0+2)^(0+384),w
  6014  1C42  1283               	bcf	3,5	;RP0=0, select bank0
  6015  1C43  1303               	bcf	3,6	;RP1=0, select bank0
  6016  1C44  00DA               	movwf	___flmul@a+2
  6017  1C45  1683               	bsf	3,5	;RP0=1, select bank3
  6018  1C46  1703               	bsf	3,6	;RP1=1, select bank3
  6019  1C47  0815               	movf	(_Temperatura0+1)^(0+384),w
  6020  1C48  1283               	bcf	3,5	;RP0=0, select bank0
  6021  1C49  1303               	bcf	3,6	;RP1=0, select bank0
  6022  1C4A  00D9               	movwf	___flmul@a+1
  6023  1C4B  1683               	bsf	3,5	;RP0=1, select bank3
  6024  1C4C  1703               	bsf	3,6	;RP1=1, select bank3
  6025  1C4D  0814               	movf	_Temperatura0^(0+384),w
  6026  1C4E  24F8               	fcall	PL44	;call to abstracted procedure
  6027  1C4F  120A  118A  23C3  160A  158A  	fcall	___flmul
  6028  1C54  24E8  160A  158A   	fcall	PL22	;call to abstracted procedure
  6029  1C57  248E               	fcall	___fltol
  6030  1C58  1683               	bsf	3,5	;RP0=1, select bank1
  6031  1C59  0821               	movf	(?___fltol+1)^(0+128),w
  6032  1C5A  00AD               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  6033  1C5B  0820               	movf	?___fltol^(0+128),w
  6034  1C5C  00AC               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  6035  1C5D  3000               	movlw	0
  6036  1C5E  120A  118A  2532  160A  158A  	fcall	_EEPROM_24C1025_Write_Int
  6037                           
  6038                           ;SlaveLiofilizadorVer1.c: 1019:      EEPROM_24C1025_Write_Int(0x01, add_datalog, Tempera
      +                          tura1*10.0);
  6039  1C63  1683               	bsf	3,5	;RP0=1, select bank1
  6040  1C64  1303               	bcf	3,6	;RP1=0, select bank1
  6041  1C65  2502  160A  158A   	fcall	PL46	;call to abstracted procedure
  6042  1C68  0813               	movf	(_Temperatura1+3)^(0+384),w
  6043  1C69  1283               	bcf	3,5	;RP0=0, select bank0
  6044  1C6A  1303               	bcf	3,6	;RP1=0, select bank0
  6045  1C6B  00DB               	movwf	___flmul@a+3
  6046  1C6C  1683               	bsf	3,5	;RP0=1, select bank3
  6047  1C6D  1703               	bsf	3,6	;RP1=1, select bank3
  6048  1C6E  0812               	movf	(_Temperatura1+2)^(0+384),w
  6049  1C6F  1283               	bcf	3,5	;RP0=0, select bank0
  6050  1C70  1303               	bcf	3,6	;RP1=0, select bank0
  6051  1C71  00DA               	movwf	___flmul@a+2
  6052  1C72  1683               	bsf	3,5	;RP0=1, select bank3
  6053  1C73  1703               	bsf	3,6	;RP1=1, select bank3
  6054  1C74  0811               	movf	(_Temperatura1+1)^(0+384),w
  6055  1C75  1283               	bcf	3,5	;RP0=0, select bank0
  6056  1C76  1303               	bcf	3,6	;RP1=0, select bank0
  6057  1C77  00D9               	movwf	___flmul@a+1
  6058  1C78  1683               	bsf	3,5	;RP0=1, select bank3
  6059  1C79  1703               	bsf	3,6	;RP1=1, select bank3
  6060  1C7A  0810               	movf	_Temperatura1^(0+384),w
  6061  1C7B  24F8               	fcall	PL44	;call to abstracted procedure
  6062  1C7C  120A  118A  23C3  160A  158A  	fcall	___flmul
  6063  1C81  24E8  160A  158A   	fcall	PL22	;call to abstracted procedure
  6064  1C84  248E               	fcall	___fltol
  6065  1C85  1683               	bsf	3,5	;RP0=1, select bank1
  6066  1C86  0821               	movf	(?___fltol+1)^(0+128),w
  6067  1C87  00AD               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  6068  1C88  0820               	movf	?___fltol^(0+128),w
  6069  1C89  00AC               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  6070  1C8A  3001               	movlw	1
  6071  1C8B  120A  118A  2D32   	ljmp	_EEPROM_24C1025_Write_Int
  6072  1C8E                     __end_of_Save_Log:
  6073  1C8E                     __ptext20:	
  6074 ;; *************** function ___fltol *****************
  6075 ;; Defined at:
  6076 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  6077 ;; Parameters:    Size  Location     Type
  6078 ;;  f1              4    0[BANK1 ] void 
  6079 ;; Auto vars:     Size  Location     Type
  6080 ;;  exp1            1   78[BANK0 ] unsigned char 
  6081 ;;  sign1           1   77[BANK0 ] unsigned char 
  6082 ;; Return value:  Size  Location     Type
  6083 ;;                  4    0[BANK1 ] long 
  6084 ;; Registers used:
  6085 ;;		wreg, status,2, status,0
  6086 ;; Tracked objects:
  6087 ;;		On entry : 300/100
  6088 ;;		On exit  : 200/0
  6089 ;;		Unchanged: 0/0
  6090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6091 ;;      Params:         0       0       4       0       0
  6092 ;;      Locals:         0       2       0       0       0
  6093 ;;      Temps:          0       0       4       0       0
  6094 ;;      Totals:         0       2       8       0       0
  6095 ;;Total ram usage:       10 bytes
  6096 ;; Hardware stack levels used: 1
  6097 ;; Hardware stack levels required when called: 1
  6098 ;; This function calls:
  6099 ;;		Nothing
  6100 ;; This function is called by:
  6101 ;;		_Decodify_Command
  6102 ;;		_Save_Log
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           
  6107                           ;psect for function ___fltol
  6108  1C8E                     ___fltol:
  6109                           
  6110                           ;incstack = 0
  6111                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6112  1C8E  1003               	clrc
  6113  1C8F  0D22               	rlf	(___fltol@f1+2)^(0+128),w
  6114  1C90  0D23               	rlf	(___fltol@f1+3)^(0+128),w
  6115  1C91  1283               	bcf	3,5	;RP0=0, select bank0
  6116  1C92  00EE               	movwf	___fltol@exp1
  6117  1C93  086E               	movf	___fltol@exp1,w
  6118  1C94  1D03               	btfss	3,2
  6119  1C95  2C9C               	goto	l4684
  6120  1C96                     l4682:
  6121  1C96  1683               	bsf	3,5	;RP0=1, select bank1
  6122  1C97  01A0               	clrf	?___fltol^(0+128)
  6123  1C98  01A1               	clrf	(?___fltol+1)^(0+128)
  6124  1C99  01A2               	clrf	(?___fltol+2)^(0+128)
  6125  1C9A  01A3               	clrf	(?___fltol+3)^(0+128)
  6126  1C9B  0008               	return
  6127  1C9C                     l4684:
  6128  1C9C  1683               	bsf	3,5	;RP0=1, select bank1
  6129  1C9D  0820               	movf	___fltol@f1^(0+128),w
  6130  1C9E  00A4               	movwf	??___fltol^(0+128)
  6131  1C9F  0821               	movf	(___fltol@f1+1)^(0+128),w
  6132  1CA0  00A5               	movwf	(??___fltol^(0+128)+1)
  6133  1CA1  0822               	movf	(___fltol@f1+2)^(0+128),w
  6134  1CA2  00A6               	movwf	(??___fltol^(0+128)+2)
  6135  1CA3  0823               	movf	(___fltol@f1+3)^(0+128),w
  6136  1CA4  00A7               	movwf	(??___fltol^(0+128)+3)
  6137  1CA5  301F               	movlw	31
  6138  1CA6                     u3935:
  6139  1CA6  1003               	clrc
  6140  1CA7  0CA7               	rrf	(??___fltol^(0+128)+3),f
  6141  1CA8  0CA6               	rrf	(??___fltol^(0+128)+2),f
  6142  1CA9  0CA5               	rrf	(??___fltol^(0+128)+1),f
  6143  1CAA  0CA4               	rrf	??___fltol^(0+128),f
  6144  1CAB  3EFF               	addlw	-1
  6145  1CAC  1D03               	skipz
  6146  1CAD  2CA6               	goto	u3935
  6147  1CAE  0824               	movf	??___fltol^(0+128),w
  6148  1CAF  1283               	bcf	3,5	;RP0=0, select bank0
  6149  1CB0  00ED               	movwf	___fltol@sign1
  6150  1CB1  1683               	bsf	3,5	;RP0=1, select bank1
  6151  1CB2  3096               	movlw	150
  6152  1CB3  17A2               	bsf	(___fltol@f1^(0+128)+2),7
  6153  1CB4  01A3               	clrf	(___fltol@f1+3)^(0+128)
  6154  1CB5  1283               	bcf	3,5	;RP0=0, select bank0
  6155  1CB6  02EE               	subwf	___fltol@exp1,f
  6156  1CB7  1FEE               	btfss	___fltol@exp1,7
  6157  1CB8  2CC8               	goto	l4702
  6158  1CB9  086E               	movf	___fltol@exp1,w
  6159  1CBA  3A80               	xorlw	128
  6160  1CBB  3E97               	addlw	151
  6161  1CBC  1C03               	btfss	3,0
  6162  1CBD  2C96               	goto	l4682
  6163  1CBE                     l4698:
  6164  1CBE  1003               	clrc
  6165  1CBF  1683               	bsf	3,5	;RP0=1, select bank1
  6166  1CC0  0CA3               	rrf	(___fltol@f1+3)^(0+128),f
  6167  1CC1  0CA2               	rrf	(___fltol@f1+2)^(0+128),f
  6168  1CC2  0CA1               	rrf	(___fltol@f1+1)^(0+128),f
  6169  1CC3  0CA0               	rrf	___fltol@f1^(0+128),f
  6170  1CC4  1283               	bcf	3,5	;RP0=0, select bank0
  6171  1CC5  0FEE               	incfsz	___fltol@exp1,f
  6172  1CC6  2CBE               	goto	l4698
  6173  1CC7  2CD8               	goto	l4710
  6174  1CC8                     l4702:
  6175  1CC8  3020               	movlw	32
  6176  1CC9  026E               	subwf	___fltol@exp1,w
  6177  1CCA  1803               	btfsc	3,0
  6178  1CCB  2C96               	goto	l4682
  6179  1CCC                     l4708:
  6180  1CCC  086E               	movf	___fltol@exp1,w
  6181  1CCD  1903               	btfsc	3,2
  6182  1CCE  2CD8               	goto	l4710
  6183  1CCF  1003               	clrc
  6184  1CD0  1683               	bsf	3,5	;RP0=1, select bank1
  6185  1CD1  0DA0               	rlf	___fltol@f1^(0+128),f
  6186  1CD2  0DA1               	rlf	(___fltol@f1+1)^(0+128),f
  6187  1CD3  0DA2               	rlf	(___fltol@f1+2)^(0+128),f
  6188  1CD4  0DA3               	rlf	(___fltol@f1+3)^(0+128),f
  6189  1CD5  1283               	bcf	3,5	;RP0=0, select bank0
  6190  1CD6  03EE               	decf	___fltol@exp1,f
  6191  1CD7  2CCC               	goto	l4708
  6192  1CD8                     l4710:
  6193  1CD8  086D               	movf	___fltol@sign1,w
  6194  1CD9  1903               	btfsc	3,2
  6195  1CDA  0008               	return
  6196  1CDB  1683               	bsf	3,5	;RP0=1, select bank1
  6197  1CDC  09A0               	comf	___fltol@f1^(0+128),f
  6198  1CDD  09A1               	comf	(___fltol@f1+1)^(0+128),f
  6199  1CDE  09A2               	comf	(___fltol@f1+2)^(0+128),f
  6200  1CDF  09A3               	comf	(___fltol@f1+3)^(0+128),f
  6201  1CE0  0AA0               	incf	___fltol@f1^(0+128),f
  6202  1CE1  1903               	skipnz
  6203  1CE2  0AA1               	incf	(___fltol@f1+1)^(0+128),f
  6204  1CE3  1903               	skipnz
  6205  1CE4  0AA2               	incf	(___fltol@f1+2)^(0+128),f
  6206  1CE5  1903               	skipnz
  6207  1CE6  0AA3               	incf	(___fltol@f1+3)^(0+128),f
  6208  1CE7  0008               	return
  6209  1CE8                     __end_of___fltol:
  6210  1CE8                     PL22:
  6211  1CE8  0857               	movf	?___flmul+3,w
  6212  1CE9  1683               	bsf	3,5	;RP0=1, select bank1
  6213  1CEA  00A3               	movwf	(___fltol@f1+3)^(0+128)
  6214  1CEB  1283               	bcf	3,5	;RP0=0, select bank0
  6215  1CEC  0856               	movf	?___flmul+2,w
  6216  1CED  1683               	bsf	3,5	;RP0=1, select bank1
  6217  1CEE  00A2               	movwf	(___fltol@f1+2)^(0+128)
  6218  1CEF  1283               	bcf	3,5	;RP0=0, select bank0
  6219  1CF0  0855               	movf	?___flmul+1,w
  6220  1CF1  1683               	bsf	3,5	;RP0=1, select bank1
  6221  1CF2  00A1               	movwf	(___fltol@f1+1)^(0+128)
  6222  1CF3  1283               	bcf	3,5	;RP0=0, select bank0
  6223  1CF4  0854               	movf	?___flmul,w
  6224  1CF5  1683               	bsf	3,5	;RP0=1, select bank1
  6225  1CF6  00A0               	movwf	___fltol@f1^(0+128)
  6226  1CF7  0008               	return
  6227  1CF8                     __end_ofPL22:
  6228  1CF8                     PL44:
  6229  1CF8  1283               	bcf	3,5	;RP0=0, select bank0
  6230  1CF9  1303               	bcf	3,6	;RP1=0, select bank0
  6231  1CFA  00D8               	movwf	___flmul@a
  6232  1CFB  3041               	movlw	65
  6233  1CFC  00D7               	movwf	___flmul@b+3
  6234  1CFD  3020               	movlw	32
  6235  1CFE  00D6               	movwf	___flmul@b+2
  6236  1CFF  01D5               	clrf	___flmul@b+1
  6237  1D00  01D4               	clrf	___flmul@b
  6238  1D01  0008               	return
  6239  1D02                     __end_ofPL44:
  6240  1D02                     PL46:
  6241  1D02  0834               	movf	(Save_Log@add_datalog+3)^(0+128),w
  6242  1D03  00AB               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
  6243  1D04  0833               	movf	(Save_Log@add_datalog+2)^(0+128),w
  6244  1D05  00AA               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
  6245  1D06  0832               	movf	(Save_Log@add_datalog+1)^(0+128),w
  6246  1D07  00A9               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
  6247  1D08  0831               	movf	Save_Log@add_datalog^(0+128),w
  6248  1D09  00A8               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
  6249  1D0A  1703               	bsf	3,6	;RP1=1, select bank3
  6250  1D0B  0008               	return
  6251  1D0C                     __end_ofPL46:
  6252                           
  6253                           	psect	text25
  6254  003B                     __ptext25:	
  6255 ;; *************** function _PROCULUS_VP_Write *****************
  6256 ;; Defined at:
  6257 ;;		line 40 in file "proculus.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;  vp              2   10[BANK1 ] unsigned int 
  6260 ;;  vetor           2   12[BANK1 ] PTR unsigned char 
  6261 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  6262 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(52), usart_protocol(58), 
  6263 ;;  size            1   14[BANK1 ] unsigned char 
  6264 ;; Auto vars:     Size  Location     Type
  6265 ;;  i               1   17[BANK1 ] unsigned char 
  6266 ;; Return value:  Size  Location     Type
  6267 ;;                  1    wreg      void 
  6268 ;; Registers used:
  6269 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6270 ;; Tracked objects:
  6271 ;;		On entry : B00/900
  6272 ;;		On exit  : 300/0
  6273 ;;		Unchanged: 0/0
  6274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6275 ;;      Params:         0       0       5       0       0
  6276 ;;      Locals:         0       0       1       0       0
  6277 ;;      Temps:          0       0       2       0       0
  6278 ;;      Totals:         0       0       8       0       0
  6279 ;;Total ram usage:        8 bytes
  6280 ;; Hardware stack levels used: 1
  6281 ;; Hardware stack levels required when called: 3
  6282 ;; This function calls:
  6283 ;;		_PROCULUS_Delay
  6284 ;;		_USART_put_int
  6285 ;;		_USART_putc
  6286 ;; This function is called by:
  6287 ;;		_PROCULUS_VP_Write_String
  6288 ;; This function uses a non-reentrant model
  6289 ;;
  6290                           
  6291                           
  6292                           ;psect for function _PROCULUS_VP_Write
  6293  003B                     _PROCULUS_VP_Write:
  6294  003B                     l6512:	
  6295                           ;incstack = 0
  6296                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6297                           
  6298                           
  6299                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  6300  003B  30A5               	movlw	165
  6301  003C  00A8               	movwf	USART_put_int@value^(0+128)
  6302  003D  305A               	movlw	90
  6303  003E  00A9               	movwf	(USART_put_int@value^(0+128)+1)
  6304  003F  23A2  120A  118A   	fcall	_USART_put_int
  6305                           
  6306                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  6307  0042  082E               	movf	PROCULUS_VP_Write@size^(0+128),w
  6308  0043  3E03               	addlw	3
  6309  0044  2391  120A  118A   	fcall	_USART_putc
  6310                           
  6311                           ;proculus.c: 43:      USART_putc(0x82);
  6312  0047  3082               	movlw	130
  6313  0048  2391  120A  118A   	fcall	_USART_putc
  6314                           
  6315                           ;proculus.c: 44:      USART_put_int(vp);
  6316  004B  082B               	movf	(PROCULUS_VP_Write@vp+1)^(0+128),w
  6317  004C  00A9               	movwf	(USART_put_int@value+1)^(0+128)
  6318  004D  082A               	movf	PROCULUS_VP_Write@vp^(0+128),w
  6319  004E  00A8               	movwf	USART_put_int@value^(0+128)
  6320  004F  23A2  120A  118A   	fcall	_USART_put_int
  6321                           
  6322                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  6323  0052  01B1               	clrf	PROCULUS_VP_Write@i^(0+128)
  6324  0053                     l6524:
  6325  0053  082E               	movf	PROCULUS_VP_Write@size^(0+128),w
  6326  0054  0231               	subwf	PROCULUS_VP_Write@i^(0+128),w
  6327  0055  1803               	btfsc	3,0
  6328  0056  2869               	goto	l6526
  6329                           
  6330                           ;proculus.c: 46:          USART_putc(vetor[i]);
  6331  0057  0831               	movf	PROCULUS_VP_Write@i^(0+128),w
  6332  0058  072C               	addwf	PROCULUS_VP_Write@vetor^(0+128),w
  6333  0059  00AF               	movwf	??_PROCULUS_VP_Write^(0+128)
  6334  005A  082D               	movf	(PROCULUS_VP_Write@vetor+1)^(0+128),w
  6335  005B  1803               	skipnc
  6336  005C  3E01               	addlw	1
  6337  005D  00B0               	movwf	(??_PROCULUS_VP_Write^(0+128)+1)
  6338  005E  082F               	movf	??_PROCULUS_VP_Write^(0+128),w
  6339  005F  0084               	movwf	4
  6340  0060  1783               	bsf	3,7
  6341  0061  1C30               	btfss	(??_PROCULUS_VP_Write+1)^(0+128),0
  6342  0062  1383               	bcf	3,7
  6343  0063  0800               	movf	0,w
  6344  0064  2391  120A  118A   	fcall	_USART_putc
  6345  0067  0AB1               	incf	PROCULUS_VP_Write@i^(0+128),f
  6346  0068  2853               	goto	l6524
  6347  0069                     l6526:
  6348                           
  6349                           ;proculus.c: 48:      PROCULUS_Delay(1);
  6350  0069  1283               	bcf	3,5	;RP0=0, select bank0
  6351  006A  01A0               	clrf	PROCULUS_Delay@tempo_ms
  6352  006B  0AA0               	incf	PROCULUS_Delay@tempo_ms,f
  6353  006C  01A1               	clrf	PROCULUS_Delay@tempo_ms+1
  6354  006D  286E               	ljmp	l4354
  6355  006E                     __end_of_PROCULUS_VP_Write:
  6356  006E                     __ptext31:	
  6357 ;; *************** function _PROCULUS_Delay *****************
  6358 ;; Defined at:
  6359 ;;		line 267 in file "proculus.c"
  6360 ;; Parameters:    Size  Location     Type
  6361 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
  6362 ;; Auto vars:     Size  Location     Type
  6363 ;;  i               2    4[BANK0 ] unsigned int 
  6364 ;; Return value:  Size  Location     Type
  6365 ;;                  1    wreg      void 
  6366 ;; Registers used:
  6367 ;;		wreg, status,2, status,0
  6368 ;; Tracked objects:
  6369 ;;		On entry : 300/800
  6370 ;;		On exit  : 300/0
  6371 ;;		Unchanged: 0/0
  6372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6373 ;;      Params:         0       2       0       0       0
  6374 ;;      Locals:         0       2       0       0       0
  6375 ;;      Temps:          0       2       0       0       0
  6376 ;;      Totals:         0       6       0       0       0
  6377 ;;Total ram usage:        6 bytes
  6378 ;; Hardware stack levels used: 1
  6379 ;; Hardware stack levels required when called: 1
  6380 ;; This function calls:
  6381 ;;		Nothing
  6382 ;; This function is called by:
  6383 ;;		_PROCULUS_Control_Register_Write
  6384 ;;		_PROCULUS_VP_Write
  6385 ;; This function uses a non-reentrant model
  6386 ;;
  6387                           
  6388                           
  6389                           ;psect for function _PROCULUS_Delay
  6390  006E                     _PROCULUS_Delay:
  6391  006E                     l4354:	
  6392                           ;incstack = 0
  6393                           ; Regs used in _PROCULUS_Delay: [wreg+status,2+status,0]
  6394                           
  6395                           
  6396                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
  6397  006E  01A4               	clrf	PROCULUS_Delay@i
  6398  006F  01A5               	clrf	PROCULUS_Delay@i+1
  6399  0070                     l4360:
  6400  0070  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
  6401  0071  0225               	subwf	PROCULUS_Delay@i+1,w
  6402  0072  1D03               	skipz
  6403  0073  2876               	goto	u3535
  6404  0074  0820               	movf	PROCULUS_Delay@tempo_ms,w
  6405  0075  0224               	subwf	PROCULUS_Delay@i,w
  6406  0076                     u3535:
  6407  0076  1803               	btfsc	3,0
  6408  0077  0008               	return
  6409                           
  6410                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
  6411  0078  3003               	movlw	3
  6412  0079  1283               	bcf	3,5	;RP0=0, select bank0
  6413  007A  1303               	bcf	3,6	;RP1=0, select bank0
  6414  007B  00A3               	movwf	??_PROCULUS_Delay+1
  6415  007C  3097               	movlw	151
  6416  007D  00A2               	movwf	??_PROCULUS_Delay
  6417  007E                     u6677:
  6418  007E  0BA2               	decfsz	??_PROCULUS_Delay,f
  6419  007F  287E               	goto	u6677
  6420  0080  0BA3               	decfsz	??_PROCULUS_Delay+1,f
  6421  0081  287E               	goto	u6677
  6422                           
  6423                           ;proculus.c: 270:     }
  6424  0082  1283               	bcf	3,5	;RP0=0, select bank0
  6425  0083  1303               	bcf	3,6	;RP1=0, select bank0
  6426  0084  0AA4               	incf	PROCULUS_Delay@i,f
  6427  0085  1903               	skipnz
  6428  0086  0AA5               	incf	PROCULUS_Delay@i+1,f
  6429  0087  2870               	goto	l4360
  6430  0088                     __end_of_PROCULUS_Delay:
  6431  0088                     __ptext29:	
  6432 ;; *************** function _PROCULUS_Control_Register_Write *****************
  6433 ;; Defined at:
  6434 ;;		line 13 in file "proculus.c"
  6435 ;; Parameters:    Size  Location     Type
  6436 ;;  vetor           1    wreg     PTR unsigned char 
  6437 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  6438 ;;  size            1   10[BANK1 ] unsigned char 
  6439 ;; Auto vars:     Size  Location     Type
  6440 ;;  vetor           1   12[BANK1 ] PTR unsigned char 
  6441 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  6442 ;;  i               1   13[BANK1 ] unsigned char 
  6443 ;; Return value:  Size  Location     Type
  6444 ;;                  1    wreg      void 
  6445 ;; Registers used:
  6446 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6447 ;; Tracked objects:
  6448 ;;		On entry : 300/100
  6449 ;;		On exit  : 300/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6452 ;;      Params:         0       0       1       0       0
  6453 ;;      Locals:         0       0       2       0       0
  6454 ;;      Temps:          0       0       1       0       0
  6455 ;;      Totals:         0       0       4       0       0
  6456 ;;Total ram usage:        4 bytes
  6457 ;; Hardware stack levels used: 1
  6458 ;; Hardware stack levels required when called: 3
  6459 ;; This function calls:
  6460 ;;		_PROCULUS_Delay
  6461 ;;		_USART_put_int
  6462 ;;		_USART_putc
  6463 ;; This function is called by:
  6464 ;;		_PROCULUS_Buzzer
  6465 ;;		_PROCULUS_Show_Screen
  6466 ;; This function uses a non-reentrant model
  6467 ;;
  6468                           
  6469                           
  6470                           ;psect for function _PROCULUS_Control_Register_Write
  6471  0088                     _PROCULUS_Control_Register_Write:
  6472                           
  6473                           ;incstack = 0
  6474                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
  6475                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
  6476  0088  00AC               	movwf	PROCULUS_Control_Register_Write@vetor^(0+128)
  6477                           
  6478                           ;proculus.c: 14:      USART_put_int(0x5AA5);
  6479  0089  30A5               	movlw	165
  6480  008A  00A8               	movwf	USART_put_int@value^(0+128)
  6481  008B  305A               	movlw	90
  6482  008C  00A9               	movwf	(USART_put_int@value^(0+128)+1)
  6483  008D  23A2  120A  118A   	fcall	_USART_put_int
  6484                           
  6485                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
  6486  0090  082A               	movf	PROCULUS_Control_Register_Write@size^(0+128),w
  6487  0091  3E01               	addlw	1
  6488  0092  2391  120A  118A   	fcall	_USART_putc
  6489                           
  6490                           ;proculus.c: 16:      USART_putc(0x80);
  6491  0095  3080               	movlw	128
  6492  0096  2391  120A  118A   	fcall	_USART_putc
  6493                           
  6494                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
  6495  0099  01AD               	clrf	PROCULUS_Control_Register_Write@i^(0+128)
  6496  009A                     l6508:
  6497  009A  082A               	movf	PROCULUS_Control_Register_Write@size^(0+128),w
  6498  009B  022D               	subwf	PROCULUS_Control_Register_Write@i^(0+128),w
  6499  009C  1803               	btfsc	3,0
  6500  009D  28A9               	goto	l6510
  6501                           
  6502                           ;proculus.c: 18:          USART_putc(vetor[i]);
  6503  009E  082D               	movf	PROCULUS_Control_Register_Write@i^(0+128),w
  6504  009F  072C               	addwf	PROCULUS_Control_Register_Write@vetor^(0+128),w
  6505  00A0  00AB               	movwf	??_PROCULUS_Control_Register_Write^(0+128)
  6506  00A1  0084               	movwf	4
  6507  00A2  1383               	bcf	3,7	;select IRP bank0
  6508  00A3  0800               	movf	0,w
  6509  00A4  2391  120A  118A   	fcall	_USART_putc
  6510  00A7  0AAD               	incf	PROCULUS_Control_Register_Write@i^(0+128),f
  6511  00A8  289A               	goto	l6508
  6512  00A9                     l6510:
  6513                           
  6514                           ;proculus.c: 19:      PROCULUS_Delay(1);
  6515  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  6516  00AA  01A0               	clrf	PROCULUS_Delay@tempo_ms
  6517  00AB  0AA0               	incf	PROCULUS_Delay@tempo_ms,f
  6518  00AC  01A1               	clrf	PROCULUS_Delay@tempo_ms+1
  6519  00AD  286E               	ljmp	l4354
  6520  00AE                     __end_of_PROCULUS_Control_Register_Write:
  6521  00AE                     __ptext13:	
  6522 ;; *************** function _Decodify_Command *****************
  6523 ;; Defined at:
  6524 ;;		line 308 in file "SlaveLiofilizadorVer1.c"
  6525 ;; Parameters:    Size  Location     Type
  6526 ;;		None
  6527 ;; Auto vars:     Size  Location     Type
  6528 ;;  modoAutonomo    1    0        unsigned char 
  6529 ;;  sizedata        1   34[BANK1 ] unsigned char 
  6530 ;;  add             1   33[BANK1 ] unsigned char 
  6531 ;;  add_24LCxxxx    4   42[BANK1 ] unsigned long 
  6532 ;;  OutPut          4   37[BANK1 ] float 
  6533 ;;  tempint         2   35[BANK1 ] int 
  6534 ;;  dados           2   31[BANK1 ] int 
  6535 ;;  tempchar        1   41[BANK1 ] unsigned char 
  6536 ;; Return value:  Size  Location     Type
  6537 ;;                  1    wreg      void 
  6538 ;; Registers used:
  6539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6540 ;; Tracked objects:
  6541 ;;		On entry : 300/300
  6542 ;;		On exit  : 0/0
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6545 ;;      Params:         0       0       0       0       0
  6546 ;;      Locals:         0       0      15       0       0
  6547 ;;      Temps:          0       0       2       0       0
  6548 ;;      Totals:         0       0      17       0       0
  6549 ;;Total ram usage:       17 bytes
  6550 ;; Hardware stack levels used: 1
  6551 ;; Hardware stack levels required when called: 6
  6552 ;; This function calls:
  6553 ;;		_EEPROM_24C1025_Fill_All
  6554 ;;		_EEPROM_24C1025_Read_Buffer_USART
  6555 ;;		_EEPROM_24C1025_Read_Byte
  6556 ;;		_EEPROM_24C1025_Read_Int
  6557 ;;		_EEPROM_24C1025_Read_Str
  6558 ;;		_EEPROM_24C1025_Write_Buffer
  6559 ;;		_EEPROM_24C1025_Write_Byte
  6560 ;;		_EEPROM_24C1025_Write_Int
  6561 ;;		_EEPROM_24C1025_Write_Str
  6562 ;;		_EEPROM_Read_Byte
  6563 ;;		_EEPROM_Read_Integer
  6564 ;;		_EEPROM_Read_String
  6565 ;;		_EEPROM_Write_Byte
  6566 ;;		_EEPROM_Write_Integer
  6567 ;;		_EEPROM_Write_String
  6568 ;;		_Load_Work
  6569 ;;		_PROCULUS_Buzzer
  6570 ;;		_PROCULUS_Show_Screen
  6571 ;;		_PROCULUS_VP_Write_String
  6572 ;;		_Save_Log
  6573 ;;		_Send_Reply_OK
  6574 ;;		_Send_To_MB
  6575 ;;		_USART_put_int
  6576 ;;		_USART_put_string
  6577 ;;		_USART_putc
  6578 ;;		_USART_to_Protocol
  6579 ;;		___flmul
  6580 ;;		___fltol
  6581 ;;		_strcpy
  6582 ;;		_strlen
  6583 ;; This function is called by:
  6584 ;;		_main
  6585 ;; This function uses a non-reentrant model
  6586 ;;
  6587                           
  6588                           
  6589                           ;psect for function _Decodify_Command
  6590  00AE                     _Decodify_Command:
  6591                           
  6592                           ;SlaveLiofilizadorVer1.c: 310:     int dados;;SlaveLiofilizadorVer1.c: 311:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 312:     int tempint;;SlaveLiofilizadorVer1.c: 313:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 314:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 326:     USART_to_Protocol(&usart_protocol);
  6593                           
  6594                           ;incstack = 0
  6595                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6596  00AE  30B0               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  6597  00AF  120A  118A  27A4  120A  118A  	fcall	_USART_to_Protocol
  6598                           
  6599                           ;SlaveLiofilizadorVer1.c: 328:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  6600  00B4  1683               	bsf	3,5	;RP0=1, select bank3
  6601  00B5  1703               	bsf	3,6	;RP1=1, select bank3
  6602  00B6  0837               	movf	(_usart_protocol^(0+384)+7),w
  6603  00B7  1303               	bcf	3,6	;RP1=0, select bank1
  6604  00B8  00CD               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6605                           
  6606                           ;SlaveLiofilizadorVer1.c: 329:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  6607  00B9  1703               	bsf	3,6	;RP1=1, select bank3
  6608  00BA  0838               	movf	(_usart_protocol^(0+384)+8),w
  6609  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  6610  00BC  00CC               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6611                           
  6612                           ;SlaveLiofilizadorVer1.c: 330:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  6613  00BD  1703               	bsf	3,6	;RP1=1, select bank3
  6614  00BE  0839               	movf	(_usart_protocol^(0+384)+9),w
  6615  00BF  1303               	bcf	3,6	;RP1=0, select bank1
  6616  00C0  00CB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6617                           
  6618                           ;SlaveLiofilizadorVer1.c: 331:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  6619  00C1  1703               	bsf	3,6	;RP1=1, select bank3
  6620  00C2  083A               	movf	(_usart_protocol^(0+384)+10),w
  6621  00C3  1303               	bcf	3,6	;RP1=0, select bank1
  6622  00C4  00CA               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6623                           
  6624                           ;SlaveLiofilizadorVer1.c: 338:     switch(usart_protocol.command){
  6625  00C5  2B1B               	goto	l7398
  6626  00C6                     l7206:
  6627                           
  6628                           ;SlaveLiofilizadorVer1.c: 347:              strcpy(buffer,"v1.0.24");
  6629  00C6  302D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  6630  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  6631  00C8  00A0               	movwf	strcpy@from
  6632  00C9  3044               	movlw	(low (_buffer| (0+256)))& (0+255)
  6633  00CA  120A  158A  2008  120A  118A  	fcall	_strcpy
  6634                           
  6635                           ;SlaveLiofilizadorVer1.c: 348:              Send_To_MB(11);
  6636  00CF  300B               	movlw	11
  6637  00D0                     L10:
  6638  00D0  2376  120A  118A   	fcall	_Send_To_MB
  6639                           
  6640                           ;SlaveLiofilizadorVer1.c: 349:              USART_put_string(buffer);
  6641  00D3  3044               	movlw	(low (_buffer| (0+256)))& (0+255)
  6642  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  6643  00D5  00A1               	movwf	USART_put_string@vetor
  6644  00D6  3001               	movlw	1
  6645  00D7  00A2               	movwf	USART_put_string@vetor+1
  6646  00D8  2F04               	ljmp	l6452
  6647  00D9                     l7212:	
  6648                           ;SlaveLiofilizadorVer1.c: 350:              break;
  6649                           
  6650                           
  6651                           ;SlaveLiofilizadorVer1.c: 353:              if(usart_protocol.value[0]==0)
  6652  00D9  1703               	bsf	3,6	;RP1=1, select bank3
  6653  00DA  0836               	movf	(_usart_protocol^(0+384)+6),w
  6654  00DB  1D03               	btfss	3,2
  6655  00DC  28EB               	goto	l7216
  6656                           
  6657                           ;SlaveLiofilizadorVer1.c: 354:                 OutPut=Temperatura0;
  6658  00DD  0817               	movf	(_Temperatura0+3)^(0+384),w
  6659  00DE  1303               	bcf	3,6	;RP1=0, select bank1
  6660  00DF  00C8               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6661  00E0  1703               	bsf	3,6	;RP1=1, select bank3
  6662  00E1  0816               	movf	(_Temperatura0+2)^(0+384),w
  6663  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  6664  00E3  00C7               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6665  00E4  1703               	bsf	3,6	;RP1=1, select bank3
  6666  00E5  0815               	movf	(_Temperatura0+1)^(0+384),w
  6667  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  6668  00E7  00C6               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6669  00E8  1703               	bsf	3,6	;RP1=1, select bank3
  6670  00E9  0814               	movf	_Temperatura0^(0+384),w
  6671  00EA  28F8               	goto	L8
  6672  00EB                     l7216:
  6673                           
  6674                           ;SlaveLiofilizadorVer1.c: 356:                 OutPut=Temperatura1;
  6675  00EB  0813               	movf	(_Temperatura1+3)^(0+384),w
  6676  00EC  1303               	bcf	3,6	;RP1=0, select bank1
  6677  00ED  00C8               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6678  00EE  1703               	bsf	3,6	;RP1=1, select bank3
  6679  00EF  0812               	movf	(_Temperatura1+2)^(0+384),w
  6680  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  6681  00F1  00C7               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6682  00F2  1703               	bsf	3,6	;RP1=1, select bank3
  6683  00F3  0811               	movf	(_Temperatura1+1)^(0+384),w
  6684  00F4  1303               	bcf	3,6	;RP1=0, select bank1
  6685  00F5  00C6               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6686  00F6  1703               	bsf	3,6	;RP1=1, select bank3
  6687  00F7  0810               	movf	_Temperatura1^(0+384),w
  6688  00F8                     L8:
  6689  00F8  1303               	bcf	3,6	;RP1=0, select bank1
  6690  00F9  00C5               	movwf	Decodify_Command@OutPut^(0+128)
  6691                           
  6692                           ;SlaveLiofilizadorVer1.c: 374:              OutPut*=10.0;
  6693  00FA  3041               	movlw	65
  6694  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  6695  00FC  00D7               	movwf	___flmul@b+3
  6696  00FD  3020               	movlw	32
  6697  00FE  00D6               	movwf	___flmul@b+2
  6698  00FF  01D5               	clrf	___flmul@b+1
  6699  0100  01D4               	clrf	___flmul@b
  6700  0101  1683               	bsf	3,5	;RP0=1, select bank1
  6701  0102  0848               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6702  0103  1283               	bcf	3,5	;RP0=0, select bank0
  6703  0104  00DB               	movwf	___flmul@a+3
  6704  0105  1683               	bsf	3,5	;RP0=1, select bank1
  6705  0106  0847               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6706  0107  1283               	bcf	3,5	;RP0=0, select bank0
  6707  0108  00DA               	movwf	___flmul@a+2
  6708  0109  1683               	bsf	3,5	;RP0=1, select bank1
  6709  010A  0846               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6710  010B  1283               	bcf	3,5	;RP0=0, select bank0
  6711  010C  00D9               	movwf	___flmul@a+1
  6712  010D  1683               	bsf	3,5	;RP0=1, select bank1
  6713  010E  0845               	movf	Decodify_Command@OutPut^(0+128),w
  6714  010F  1283               	bcf	3,5	;RP0=0, select bank0
  6715  0110  00D8               	movwf	___flmul@a
  6716  0111  23C3  120A  118A   	fcall	___flmul
  6717  0114  0857               	movf	?___flmul+3,w
  6718  0115  1683               	bsf	3,5	;RP0=1, select bank1
  6719  0116  00C8               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6720  0117  1283               	bcf	3,5	;RP0=0, select bank0
  6721  0118  0856               	movf	?___flmul+2,w
  6722  0119  1683               	bsf	3,5	;RP0=1, select bank1
  6723  011A  00C7               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6724  011B  1283               	bcf	3,5	;RP0=0, select bank0
  6725  011C  0855               	movf	?___flmul+1,w
  6726  011D  1683               	bsf	3,5	;RP0=1, select bank1
  6727  011E  00C6               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6728  011F  1283               	bcf	3,5	;RP0=0, select bank0
  6729  0120  0854               	movf	?___flmul,w
  6730  0121  1683               	bsf	3,5	;RP0=1, select bank1
  6731  0122  00C5               	movwf	Decodify_Command@OutPut^(0+128)
  6732                           
  6733                           ;SlaveLiofilizadorVer1.c: 376:              INTCONbits.GIE=0;
  6734  0123  138B               	bcf	11,7	;volatile
  6735                           
  6736                           ;SlaveLiofilizadorVer1.c: 377:              Send_To_MB(2);
  6737  0124  3002               	movlw	2
  6738  0125  2376               	fcall	_Send_To_MB
  6739                           
  6740                           ;SlaveLiofilizadorVer1.c: 378:              USART_put_int(OutPut);
  6741  0126  0848               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6742  0127  00A3               	movwf	(___fltol@f1+3)^(0+128)
  6743  0128  0847               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6744  0129  00A2               	movwf	(___fltol@f1+2)^(0+128)
  6745  012A  0846               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6746  012B  00A1               	movwf	(___fltol@f1+1)^(0+128)
  6747  012C  0845               	movf	Decodify_Command@OutPut^(0+128),w
  6748  012D  00A0               	movwf	___fltol@f1^(0+128)
  6749  012E  160A  158A  248E  120A  118A  	fcall	___fltol
  6750  0133  1683               	bsf	3,5	;RP0=1, select bank1
  6751  0134  0821               	movf	(?___fltol+1)^(0+128),w
  6752  0135  00A9               	movwf	(USART_put_int@value+1)^(0+128)
  6753  0136  0820               	movf	?___fltol^(0+128),w
  6754  0137  00A8               	movwf	USART_put_int@value^(0+128)
  6755  0138  23A2               	fcall	_USART_put_int
  6756                           
  6757                           ;SlaveLiofilizadorVer1.c: 379:              INTCONbits.GIE=1;
  6758  0139  178B               	bsf	11,7	;volatile
  6759                           
  6760                           ;SlaveLiofilizadorVer1.c: 380:              break;
  6761  013A  0008               	return
  6762  013B                     l7228:
  6763                           
  6764                           ;SlaveLiofilizadorVer1.c: 385:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  6765  013B  1703               	bsf	3,6	;RP1=1, select bank3
  6766  013C  0836               	movf	(_usart_protocol^(0+384)+6),w
  6767  013D  1303               	bcf	3,6	;RP1=0, select bank1
  6768  013E  00CD               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6769                           
  6770                           ;SlaveLiofilizadorVer1.c: 386:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  6771  013F  1703               	bsf	3,6	;RP1=1, select bank3
  6772  0140  0837               	movf	(_usart_protocol^(0+384)+7),w
  6773  0141  1303               	bcf	3,6	;RP1=0, select bank1
  6774  0142  00CC               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6775                           
  6776                           ;SlaveLiofilizadorVer1.c: 387:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  6777  0143  1703               	bsf	3,6	;RP1=1, select bank3
  6778  0144  0838               	movf	(_usart_protocol^(0+384)+8),w
  6779  0145  1303               	bcf	3,6	;RP1=0, select bank1
  6780  0146  00CB               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6781                           
  6782                           ;SlaveLiofilizadorVer1.c: 388:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  6783  0147  1703               	bsf	3,6	;RP1=1, select bank3
  6784  0148  0839               	movf	(_usart_protocol^(0+384)+9),w
  6785  0149  1303               	bcf	3,6	;RP1=0, select bank1
  6786  014A  00CA               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6787                           
  6788                           ;SlaveLiofilizadorVer1.c: 389:              Save_Log(add_24LCxxxx);
  6789  014B  084D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6790  014C  00B4               	movwf	(Save_Log@add_datalog+3)^(0+128)
  6791  014D  084C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6792  014E  00B3               	movwf	(Save_Log@add_datalog+2)^(0+128)
  6793  014F  084B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6794  0150  00B2               	movwf	(Save_Log@add_datalog+1)^(0+128)
  6795  0151  084A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6796  0152  00B1               	movwf	Save_Log@add_datalog^(0+128)
  6797  0153  160A  158A  2438   	fcall	_Save_Log
  6798                           
  6799                           ;SlaveLiofilizadorVer1.c: 390:              Delay_Led_Tmr0=0;
  6800  0156  1683               	bsf	3,5	;RP0=1, select bank3
  6801  0157  1703               	bsf	3,6	;RP1=1, select bank3
  6802  0158  01AA               	clrf	_Delay_Led_Tmr0^(0+384)	;volatile
  6803  0159  01AB               	clrf	(_Delay_Led_Tmr0+1)^(0+384)	;volatile
  6804                           
  6805                           ;SlaveLiofilizadorVer1.c: 391:              milisegundo=0;
  6806  015A  01A6               	clrf	_milisegundo^(0+384)	;volatile
  6807  015B  01A7               	clrf	(_milisegundo+1)^(0+384)	;volatile
  6808                           
  6809                           ;SlaveLiofilizadorVer1.c: 392:              break;
  6810  015C  0008               	return
  6811  015D                     l7236:
  6812                           
  6813                           ;SlaveLiofilizadorVer1.c: 396:              if(usart_protocol.value[0]==0)
  6814  015D  1703               	bsf	3,6	;RP1=1, select bank3
  6815  015E  0836               	movf	(_usart_protocol^(0+384)+6),w
  6816  015F  1D03               	btfss	3,2
  6817  0160  2964               	goto	l454
  6818                           
  6819                           ;SlaveLiofilizadorVer1.c: 397:                 generic_status.flag_global_hot=0;
  6820  0161  1303               	bcf	3,6	;RP1=0, select bank1
  6821  0162  136C               	bcf	_generic_status^(0+128),6
  6822  0163  0008               	return
  6823  0164                     l454:	
  6824                           ;SlaveLiofilizadorVer1.c: 398:              else
  6825                           
  6826                           
  6827                           ;SlaveLiofilizadorVer1.c: 399:                 generic_status.flag_global_hot=1;
  6828  0164  1303               	bcf	3,6	;RP1=0, select bank1
  6829  0165  176C               	bsf	_generic_status^(0+128),6
  6830  0166  0008               	return
  6831  0167                     l7240:
  6832                           
  6833                           ;SlaveLiofilizadorVer1.c: 404:              Send_To_MB(2);
  6834  0167  3002               	movlw	2
  6835  0168  2376  120A  118A   	fcall	_Send_To_MB
  6836                           
  6837                           ;SlaveLiofilizadorVer1.c: 414:              USART_put_int(3);
  6838  016B  3003               	movlw	3
  6839  016C  00A8               	movwf	USART_put_int@value^(0+128)
  6840  016D  01A9               	clrf	(USART_put_int@value+1)^(0+128)
  6841  016E  2BA2               	ljmp	l6312
  6842  016F                     l7244:	
  6843                           ;SlaveLiofilizadorVer1.c: 416:              break;
  6844                           
  6845                           
  6846                           ;SlaveLiofilizadorVer1.c: 425:              Send_To_MB(3);
  6847  016F  3003               	movlw	3
  6848  0170  2376  120A  118A   	fcall	_Send_To_MB
  6849                           
  6850                           ;SlaveLiofilizadorVer1.c: 426:              Send_Reply_OK();
  6851  0173  23B2               	fcall	_Send_Reply_OK
  6852                           
  6853                           ;SlaveLiofilizadorVer1.c: 427:              Load_Work();
  6854  0174  160A  118A  29A6   	ljmp	l6850
  6855  0177                     l7250:	
  6856                           ;SlaveLiofilizadorVer1.c: 428:              break;
  6857                           
  6858                           
  6859                           ;SlaveLiofilizadorVer1.c: 433:              EEPROM_Write_Byte(usart_protocol.value[0],
  6860  0177  1703               	bsf	3,6	;RP1=1, select bank3
  6861  0178  0837               	movf	(_usart_protocol^(0+384)+7),w
  6862  0179  1283               	bcf	3,5	;RP0=0, select bank0
  6863  017A  1303               	bcf	3,6	;RP1=0, select bank0
  6864  017B  00A0               	movwf	EEPROM_Write_Byte@dado
  6865  017C  1683               	bsf	3,5	;RP0=1, select bank3
  6866  017D  1703               	bsf	3,6	;RP1=1, select bank3
  6867  017E  0836               	movf	(_usart_protocol^(0+384)+6),w
  6868  017F  25DF  120A  118A   	fcall	_EEPROM_Write_Byte
  6869  0182                     L9:
  6870                           
  6871                           ;SlaveLiofilizadorVer1.c: 435:              Send_To_MB(3);
  6872  0182  3003               	movlw	3
  6873  0183  2376  120A  118A   	fcall	_Send_To_MB
  6874                           
  6875                           ;SlaveLiofilizadorVer1.c: 436:              Send_Reply_OK();
  6876  0186  2BB2               	ljmp	l6880
  6877  0187                     l7254:	
  6878                           ;SlaveLiofilizadorVer1.c: 437:              break;
  6879                           
  6880                           
  6881                           ;SlaveLiofilizadorVer1.c: 439:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  6882  0187  1703               	bsf	3,6	;RP1=1, select bank3
  6883  0188  0836               	movf	(_usart_protocol^(0+384)+6),w
  6884  0189  160A  118A  2266  120A  118A  	fcall	_EEPROM_Read_Byte
  6885  018E  1683               	bsf	3,5	;RP0=1, select bank1
  6886  018F  1303               	bcf	3,6	;RP1=0, select bank1
  6887  0190  00C9               	movwf	Decodify_Command@tempchar^(0+128)
  6888                           
  6889                           ;SlaveLiofilizadorVer1.c: 440:              Send_To_MB(1);;
  6890  0191  3001               	movlw	1
  6891  0192  2376  120A  118A   	fcall	_Send_To_MB
  6892                           
  6893                           ;SlaveLiofilizadorVer1.c: 441:              USART_putc(tempchar);
  6894  0195  0849               	movf	Decodify_Command@tempchar^(0+128),w
  6895  0196  2B91               	ljmp	_USART_putc
  6896  0197                     l7260:	
  6897                           ;SlaveLiofilizadorVer1.c: 442:              break;
  6898                           
  6899                           
  6900                           ;SlaveLiofilizadorVer1.c: 444:              {;SlaveLiofilizadorVer1.c: 445:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 446:              add=usart_protocol.value[
      +                          0];
  6901  0197  1703               	bsf	3,6	;RP1=1, select bank3
  6902  0198  0836               	movf	(_usart_protocol^(0+384)+6),w
  6903  0199  1303               	bcf	3,6	;RP1=0, select bank1
  6904  019A  00C1               	movwf	Decodify_Command@add^(0+128)
  6905                           
  6906                           ;SlaveLiofilizadorVer1.c: 447:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  6907  019B  1703               	bsf	3,6	;RP1=1, select bank3
  6908  019C  0837               	movf	(_usart_protocol^(0+384)+7),w
  6909  019D  1303               	bcf	3,6	;RP1=0, select bank1
  6910  019E  00C0               	movwf	(Decodify_Command@dados+1)^(0+128)
  6911  019F  1703               	bsf	3,6	;RP1=1, select bank3
  6912  01A0  0838               	movf	(_usart_protocol^(0+384)+8),w
  6913  01A1  1303               	bcf	3,6	;RP1=0, select bank1
  6914  01A2  00BF               	movwf	Decodify_Command@dados^(0+128)
  6915                           
  6916                           ;SlaveLiofilizadorVer1.c: 448:              EEPROM_Write_Integer(add,dados);
  6917  01A3  0840               	movf	(Decodify_Command@dados+1)^(0+128),w
  6918  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  6919  01A5  00A6               	movwf	EEPROM_Write_Integer@dado+1
  6920  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  6921  01A7  083F               	movf	Decodify_Command@dados^(0+128),w
  6922  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  6923  01A9  00A5               	movwf	EEPROM_Write_Integer@dado
  6924  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  6925  01AB  0841               	movf	Decodify_Command@add^(0+128),w
  6926  01AC  261A  120A  118A   	fcall	_EEPROM_Write_Integer
  6927  01AF  2982               	goto	L9
  6928  01B0                     l7268:	
  6929                           ;SlaveLiofilizadorVer1.c: 449:              Send_To_MB(3);
  6930                           
  6931                           
  6932                           ;SlaveLiofilizadorVer1.c: 454:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  6933  01B0  1703               	bsf	3,6	;RP1=1, select bank3
  6934  01B1  0836               	movf	(_usart_protocol^(0+384)+6),w
  6935  01B2  160A  118A  2287  120A  118A  	fcall	_EEPROM_Read_Integer
  6936  01B7  0824               	movf	?_EEPROM_Read_Integer+1,w
  6937  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  6938  01B9  00C4               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6939  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  6940  01BB  0823               	movf	?_EEPROM_Read_Integer,w
  6941  01BC                     L11:
  6942  01BC  1683               	bsf	3,5	;RP0=1, select bank1
  6943  01BD  00C3               	movwf	Decodify_Command@tempint^(0+128)
  6944                           
  6945                           ;SlaveLiofilizadorVer1.c: 455:              Send_To_MB(2);
  6946  01BE  3002               	movlw	2
  6947  01BF  2376  120A  118A   	fcall	_Send_To_MB
  6948                           
  6949                           ;SlaveLiofilizadorVer1.c: 456:              USART_put_int(tempint);
  6950  01C2  0844               	movf	(Decodify_Command@tempint+1)^(0+128),w
  6951  01C3  00A9               	movwf	(USART_put_int@value+1)^(0+128)
  6952  01C4  0843               	movf	Decodify_Command@tempint^(0+128),w
  6953  01C5  00A8               	movwf	USART_put_int@value^(0+128)
  6954  01C6  2BA2               	ljmp	l6312
  6955  01C7                     l7274:	
  6956                           ;SlaveLiofilizadorVer1.c: 457:              break;
  6957                           
  6958                           
  6959                           ;SlaveLiofilizadorVer1.c: 460:              EEPROM_Write_String(usart_protocol.value[0],
  6960  01C7  30B7               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  6961  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  6962  01C9  00A5               	movwf	EEPROM_Write_String@dado
  6963  01CA  1683               	bsf	3,5	;RP0=1, select bank3
  6964  01CB  1703               	bsf	3,6	;RP1=1, select bank3
  6965  01CC  0836               	movf	(_usart_protocol^(0+384)+6),w
  6966  01CD  26B5  120A  118A   	fcall	_EEPROM_Write_String
  6967  01D0  2982               	goto	L9
  6968  01D1                     l7280:	
  6969                           ;SlaveLiofilizadorVer1.c: 462:              Send_To_MB(3);
  6970                           
  6971                           
  6972                           ;SlaveLiofilizadorVer1.c: 466:              {;SlaveLiofilizadorVer1.c: 467:             
      +                           EEPROM_Read_String(usart_protocol.value[0],buffer);
  6973  01D1  3044               	movlw	(low (_buffer| (0+256)))& (0+255)
  6974  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  6975  01D3  00A3               	movwf	EEPROM_Read_String@dado
  6976  01D4  1683               	bsf	3,5	;RP0=1, select bank3
  6977  01D5  1703               	bsf	3,6	;RP1=1, select bank3
  6978  01D6  0836               	movf	(_usart_protocol^(0+384)+6),w
  6979  01D7  25C9  120A  118A   	fcall	_EEPROM_Read_String
  6980                           
  6981                           ;SlaveLiofilizadorVer1.c: 468:              Send_To_MB(sizeof(buffer));
  6982  01DA  3021               	movlw	33
  6983  01DB  28D0               	goto	L10
  6984  01DC                     l7286:
  6985                           
  6986                           ;SlaveLiofilizadorVer1.c: 475:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  6987  01DC  084D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6988  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  6989  01DE  00BA               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  6990  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  6991  01E0  084C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6992  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  6993  01E2  00B9               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  6994  01E3  1683               	bsf	3,5	;RP0=1, select bank1
  6995  01E4  084B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6996  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  6997  01E6  00B8               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  6998  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  6999  01E8  084A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7000  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  7001  01EA  00B7               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  7002  01EB  1683               	bsf	3,5	;RP0=1, select bank3
  7003  01EC  1703               	bsf	3,6	;RP1=1, select bank3
  7004  01ED  083B               	movf	(_usart_protocol^(0+384)+11),w
  7005  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  7006  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  7007  01F0  00BB               	movwf	EEPROM_24C1025_Write_Byte@data
  7008  01F1  1683               	bsf	3,5	;RP0=1, select bank3
  7009  01F2  1703               	bsf	3,6	;RP1=1, select bank3
  7010  01F3  0836               	movf	(_usart_protocol^(0+384)+6),w
  7011  01F4  25B5  120A  118A   	fcall	_EEPROM_24C1025_Write_Byte
  7012  01F7  2982               	goto	L9
  7013  01F8                     l7292:	
  7014                           ;SlaveLiofilizadorVer1.c: 478:              Send_To_MB(3);
  7015                           
  7016                           
  7017                           ;SlaveLiofilizadorVer1.c: 482:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  7018  01F8  084D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7019  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  7020  01FA  00B8               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  7021  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  7022  01FC  084C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7023  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  7024  01FE  00B7               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  7025  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  7026  0200  084B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7027  0201  1283               	bcf	3,5	;RP0=0, select bank0
  7028  0202  00B6               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  7029  0203  1683               	bsf	3,5	;RP0=1, select bank1
  7030  0204  084A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7031  0205  1283               	bcf	3,5	;RP0=0, select bank0
  7032  0206  00B5               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  7033  0207  1683               	bsf	3,5	;RP0=1, select bank3
  7034  0208  1703               	bsf	3,6	;RP1=1, select bank3
  7035  0209  0836               	movf	(_usart_protocol^(0+384)+6),w
  7036  020A  2584  120A  118A   	fcall	_EEPROM_24C1025_Read_Byte
  7037  020D  1683               	bsf	3,5	;RP0=1, select bank1
  7038  020E  00C9               	movwf	Decodify_Command@tempchar^(0+128)
  7039                           
  7040                           ;SlaveLiofilizadorVer1.c: 486:              Send_To_MB(1);
  7041  020F  3001               	movlw	1
  7042  0210  2376  120A  118A   	fcall	_Send_To_MB
  7043                           
  7044                           ;SlaveLiofilizadorVer1.c: 487:              USART_putc(tempchar);
  7045  0213  0849               	movf	Decodify_Command@tempchar^(0+128),w
  7046  0214  2B91               	ljmp	_USART_putc
  7047  0215                     l7298:	
  7048                           ;SlaveLiofilizadorVer1.c: 488:              break;
  7049                           
  7050                           
  7051                           ;SlaveLiofilizadorVer1.c: 490:              {;SlaveLiofilizadorVer1.c: 491:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  7052  0215  084D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7053  0216  00AB               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
  7054  0217  084C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7055  0218  00AA               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
  7056  0219  084B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7057  021A  00A9               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
  7058  021B  084A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7059  021C  00A8               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
  7060  021D  1703               	bsf	3,6	;RP1=1, select bank3
  7061  021E  083B               	movf	(_usart_protocol^(0+384)+11),w
  7062  021F  1303               	bcf	3,6	;RP1=0, select bank1
  7063  0220  00AD               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  7064  0221  1703               	bsf	3,6	;RP1=1, select bank3
  7065  0222  083C               	movf	(_usart_protocol^(0+384)+12),w
  7066  0223  1303               	bcf	3,6	;RP1=0, select bank1
  7067  0224  00AC               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  7068  0225  1703               	bsf	3,6	;RP1=1, select bank3
  7069  0226  0836               	movf	(_usart_protocol^(0+384)+6),w
  7070  0227  2532  120A  118A   	fcall	_EEPROM_24C1025_Write_Int
  7071  022A  2982               	goto	L9
  7072  022B                     l7304:	
  7073                           ;SlaveLiofilizadorVer1.c: 496:              Send_To_MB(3);
  7074                           
  7075                           
  7076                           ;SlaveLiofilizadorVer1.c: 501:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  7077  022B  084D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7078  022C  1283               	bcf	3,5	;RP0=0, select bank0
  7079  022D  00B8               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  7080  022E  1683               	bsf	3,5	;RP0=1, select bank1
  7081  022F  084C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7082  0230  1283               	bcf	3,5	;RP0=0, select bank0
  7083  0231  00B7               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  7084  0232  1683               	bsf	3,5	;RP0=1, select bank1
  7085  0233  084B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7086  0234  1283               	bcf	3,5	;RP0=0, select bank0
  7087  0235  00B6               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  7088  0236  1683               	bsf	3,5	;RP0=1, select bank1
  7089  0237  084A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7090  0238  1283               	bcf	3,5	;RP0=0, select bank0
  7091  0239  00B5               	movwf	EEPROM_24C1025_Read_Int@mem_add
  7092  023A  1683               	bsf	3,5	;RP0=1, select bank3
  7093  023B  1703               	bsf	3,6	;RP1=1, select bank3
  7094  023C  0836               	movf	(_usart_protocol^(0+384)+6),w
  7095  023D  259B  120A  118A   	fcall	_EEPROM_24C1025_Read_Int
  7096  0240  0836               	movf	?_EEPROM_24C1025_Read_Int+1,w
  7097  0241  1683               	bsf	3,5	;RP0=1, select bank1
  7098  0242  00C4               	movwf	(Decodify_Command@tempint+1)^(0+128)
  7099  0243  1283               	bcf	3,5	;RP0=0, select bank0
  7100  0244  0835               	movf	?_EEPROM_24C1025_Read_Int,w
  7101  0245  29BC               	goto	L11
  7102  0246                     l7310:	
  7103                           ;SlaveLiofilizadorVer1.c: 503:              Send_To_MB(2);
  7104                           
  7105                           
  7106                           ;SlaveLiofilizadorVer1.c: 509:              {;SlaveLiofilizadorVer1.c: 510:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 511:              sizedata=usart_protocol.value
      +                          [5];
  7107  0246  1703               	bsf	3,6	;RP1=1, select bank3
  7108  0247  083B               	movf	(_usart_protocol^(0+384)+11),w
  7109  0248  1303               	bcf	3,6	;RP1=0, select bank1
  7110  0249  00C2               	movwf	Decodify_Command@sizedata^(0+128)
  7111                           
  7112                           ;SlaveLiofilizadorVer1.c: 512:              Send_To_MB(sizedata);
  7113  024A  2376               	fcall	_Send_To_MB
  7114                           
  7115                           ;SlaveLiofilizadorVer1.c: 513:              EEPROM_24C1025_Read_Buffer_USART(usart_proto
      +                          col.value[0],
  7116  024B  084D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7117  024C  1283               	bcf	3,5	;RP0=0, select bank0
  7118  024D  00AA               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3
  7119  024E  1683               	bsf	3,5	;RP0=1, select bank1
  7120  024F  084C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7121  0250  1283               	bcf	3,5	;RP0=0, select bank0
  7122  0251  00A9               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2
  7123  0252  1683               	bsf	3,5	;RP0=1, select bank1
  7124  0253  084B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7125  0254  1283               	bcf	3,5	;RP0=0, select bank0
  7126  0255  00A8               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1
  7127  0256  1683               	bsf	3,5	;RP0=1, select bank1
  7128  0257  084A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7129  0258  1283               	bcf	3,5	;RP0=0, select bank0
  7130  0259  00A7               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add
  7131  025A  1683               	bsf	3,5	;RP0=1, select bank1
  7132  025B  0842               	movf	Decodify_Command@sizedata^(0+128),w
  7133  025C  1283               	bcf	3,5	;RP0=0, select bank0
  7134  025D  00AB               	movwf	EEPROM_24C1025_Read_Buffer_USART@sizedata
  7135  025E  3044               	movlw	(low (_buffer| (0+256)))& (0+255)
  7136  025F  00AC               	movwf	EEPROM_24C1025_Read_Buffer_USART@data
  7137  0260  1683               	bsf	3,5	;RP0=1, select bank3
  7138  0261  1703               	bsf	3,6	;RP1=1, select bank3
  7139  0262  0836               	movf	(_usart_protocol^(0+384)+6),w
  7140  0263  160A  118A  2D93   	ljmp	_EEPROM_24C1025_Read_Buffer_USART
  7141  0266                     l7316:	
  7142                           ;SlaveLiofilizadorVer1.c: 518:              };SlaveLiofilizadorVer1.c: 519:             
      +                           break;
  7143                           
  7144                           
  7145                           ;SlaveLiofilizadorVer1.c: 522:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  7146  0266  084D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7147  0267  1283               	bcf	3,5	;RP0=0, select bank0
  7148  0268  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  7149  0269  1683               	bsf	3,5	;RP0=1, select bank1
  7150  026A  084C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7151  026B  1283               	bcf	3,5	;RP0=0, select bank0
  7152  026C  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  7153  026D  1683               	bsf	3,5	;RP0=1, select bank1
  7154  026E  084B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7155  026F  1283               	bcf	3,5	;RP0=0, select bank0
  7156  0270  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  7157  0271  1683               	bsf	3,5	;RP0=1, select bank1
  7158  0272  084A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7159  0273  1283               	bcf	3,5	;RP0=0, select bank0
  7160  0274  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  7161  0275  1683               	bsf	3,5	;RP0=1, select bank3
  7162  0276  1703               	bsf	3,6	;RP1=1, select bank3
  7163  0277  083B               	movf	(_usart_protocol^(0+384)+11),w
  7164  0278  1283               	bcf	3,5	;RP0=0, select bank0
  7165  0279  1303               	bcf	3,6	;RP1=0, select bank0
  7166  027A  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  7167  027B  30BC               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  7168  027C  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  7169  027D  3001               	movlw	1
  7170  027E  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  7171  027F  1683               	bsf	3,5	;RP0=1, select bank3
  7172  0280  1703               	bsf	3,6	;RP1=1, select bank3
  7173  0281  0836               	movf	(_usart_protocol^(0+384)+6),w
  7174  0282  160A  118A  2687  120A  118A  	fcall	_EEPROM_24C1025_Write_Buffer
  7175  0287  2982               	goto	L9
  7176  0288                     l7322:	
  7177                           ;SlaveLiofilizadorVer1.c: 527:              Send_To_MB(3);
  7178                           
  7179                           
  7180                           ;SlaveLiofilizadorVer1.c: 532:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  7181  0288  084D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7182  0289  1283               	bcf	3,5	;RP0=0, select bank0
  7183  028A  00AD               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  7184  028B  1683               	bsf	3,5	;RP0=1, select bank1
  7185  028C  084C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7186  028D  1283               	bcf	3,5	;RP0=0, select bank0
  7187  028E  00AC               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  7188  028F  1683               	bsf	3,5	;RP0=1, select bank1
  7189  0290  084B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7190  0291  1283               	bcf	3,5	;RP0=0, select bank0
  7191  0292  00AB               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  7192  0293  1683               	bsf	3,5	;RP0=1, select bank1
  7193  0294  084A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7194  0295  1283               	bcf	3,5	;RP0=0, select bank0
  7195  0296  00AA               	movwf	EEPROM_24C1025_Write_Str@mem_add
  7196  0297  30BB               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  7197  0298  00AE               	movwf	EEPROM_24C1025_Write_Str@data
  7198  0299  1683               	bsf	3,5	;RP0=1, select bank3
  7199  029A  1703               	bsf	3,6	;RP1=1, select bank3
  7200  029B  0836               	movf	(_usart_protocol^(0+384)+6),w
  7201  029C  160A  118A  22C2  120A  118A  	fcall	_EEPROM_24C1025_Write_Str
  7202  02A1  2982               	goto	L9
  7203  02A2                     l7328:	
  7204                           ;SlaveLiofilizadorVer1.c: 535:              Send_To_MB(3);
  7205                           
  7206                           
  7207                           ;SlaveLiofilizadorVer1.c: 539:              {;SlaveLiofilizadorVer1.c: 540:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  7208  02A2  084D               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  7209  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  7210  02A4  00AA               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  7211  02A5  1683               	bsf	3,5	;RP0=1, select bank1
  7212  02A6  084C               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  7213  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  7214  02A8  00A9               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  7215  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  7216  02AA  084B               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  7217  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  7218  02AC  00A8               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  7219  02AD  1683               	bsf	3,5	;RP0=1, select bank1
  7220  02AE  084A               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  7221  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  7222  02B0  00A7               	movwf	EEPROM_24C1025_Read_Str@mem_add
  7223  02B1  3044               	movlw	(low (_buffer| (0+256)))& (0+255)
  7224  02B2  00AB               	movwf	EEPROM_24C1025_Read_Str@buffer
  7225  02B3  1683               	bsf	3,5	;RP0=1, select bank3
  7226  02B4  1703               	bsf	3,6	;RP1=1, select bank3
  7227  02B5  0836               	movf	(_usart_protocol^(0+384)+6),w
  7228  02B6  160A  118A  235D  120A  118A  	fcall	_EEPROM_24C1025_Read_Str
  7229                           
  7230                           ;SlaveLiofilizadorVer1.c: 544:              Send_To_MB(strlen(buffer)+1);
  7231  02BB  3044               	movlw	(low (_buffer| (0+256)))& (0+255)
  7232  02BC  263D  120A  118A   	fcall	_strlen
  7233  02BF  0820               	movf	?_strlen,w
  7234  02C0  3E01               	addlw	1
  7235  02C1  28D0               	goto	L10
  7236  02C2                     l7332:
  7237                           
  7238                           ;SlaveLiofilizadorVer1.c: 550:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  7239  02C2  1703               	bsf	3,6	;RP1=1, select bank3
  7240  02C3  0837               	movf	(_usart_protocol^(0+384)+7),w
  7241  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  7242  02C5  00B1               	movwf	EEPROM_24C1025_Fill_All@value^(0+128)
  7243  02C6  01B2               	clrf	(EEPROM_24C1025_Fill_All@value+1)^(0+128)
  7244  02C7  1703               	bsf	3,6	;RP1=1, select bank3
  7245  02C8  0836               	movf	(_usart_protocol^(0+384)+6),w
  7246  02C9  2551  120A  118A   	fcall	_EEPROM_24C1025_Fill_All
  7247  02CC  2982               	goto	L9
  7248  02CD                     l7338:	
  7249                           ;SlaveLiofilizadorVer1.c: 552:              Send_To_MB(3);
  7250                           
  7251                           
  7252                           ;SlaveLiofilizadorVer1.c: 557:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  7253  02CD  1703               	bsf	3,6	;RP1=1, select bank3
  7254  02CE  0836               	movf	(_usart_protocol^(0+384)+6),w
  7255  02CF  1303               	bcf	3,6	;RP1=0, select bank1
  7256  02D0  00AE               	movwf	PROCULUS_Show_Screen@screen^(0+128)
  7257  02D1  01AF               	clrf	(PROCULUS_Show_Screen@screen+1)^(0+128)
  7258  02D2  23B9  120A  118A   	fcall	_PROCULUS_Show_Screen
  7259  02D5  2982               	goto	L9
  7260  02D6                     l7344:	
  7261                           ;SlaveLiofilizadorVer1.c: 558:              Send_To_MB(3);
  7262                           
  7263                           
  7264                           ;SlaveLiofilizadorVer1.c: 563:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  7265  02D6  1703               	bsf	3,6	;RP1=1, select bank3
  7266  02D7  0836               	movf	(_usart_protocol^(0+384)+6),w
  7267  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  7268  02D9  00AF               	movwf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128)
  7269  02DA  1703               	bsf	3,6	;RP1=1, select bank3
  7270  02DB  0837               	movf	(_usart_protocol^(0+384)+7),w
  7271  02DC  1303               	bcf	3,6	;RP1=0, select bank1
  7272  02DD  00AE               	movwf	PROCULUS_Buzzer@time_ms_x_10^(0+128)
  7273  02DE  26D3  120A  118A   	fcall	_PROCULUS_Buzzer
  7274  02E1  2982               	goto	L9
  7275  02E2                     l7350:	
  7276                           ;SlaveLiofilizadorVer1.c: 565:              Send_To_MB(3);
  7277                           
  7278                           
  7279                           ;SlaveLiofilizadorVer1.c: 569:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  7280  02E2  1703               	bsf	3,6	;RP1=1, select bank3
  7281  02E3  0836               	movf	(_usart_protocol^(0+384)+6),w
  7282  02E4  1303               	bcf	3,6	;RP1=0, select bank1
  7283  02E5  00B3               	movwf	(PROCULUS_VP_Write_String@vp+1)^(0+128)
  7284  02E6  1703               	bsf	3,6	;RP1=1, select bank3
  7285  02E7  0837               	movf	(_usart_protocol^(0+384)+7),w
  7286  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  7287  02E9  00B2               	movwf	PROCULUS_VP_Write_String@vp^(0+128)
  7288  02EA  30B8               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  7289  02EB  00B4               	movwf	PROCULUS_VP_Write_String@text^(0+128)
  7290  02EC  26F3  120A  118A   	fcall	_PROCULUS_VP_Write_String
  7291  02EF  2982               	goto	L9
  7292  02F0                     l7356:	
  7293                           ;SlaveLiofilizadorVer1.c: 572:              Send_To_MB(3);
  7294                           
  7295                           
  7296                           ;SlaveLiofilizadorVer1.c: 579:                 {;SlaveLiofilizadorVer1.c: 580:          
      +                                 unsigned char modoAutonomo0=1;
  7297  02F0  1703               	bsf	3,6	;RP1=1, select bank3
  7298  02F1  0836               	movf	(_usart_protocol^(0+384)+6),w
  7299  02F2  1D03               	btfss	3,2
  7300  02F3  2AFF               	goto	l7362
  7301                           
  7302                           ;SlaveLiofilizadorVer1.c: 581:                 if(!usart_protocol.value[1])
  7303  02F4  0837               	movf	(_usart_protocol^(0+384)+7),w
  7304  02F5  1D03               	btfss	3,2
  7305  02F6  2AFB               	goto	l478
  7306                           
  7307                           ;SlaveLiofilizadorVer1.c: 582:                    PORTCbits.RC0=0;
  7308  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  7309  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  7310  02F9  1007               	bcf	7,0	;volatile
  7311  02FA  2982               	goto	L9
  7312  02FB                     l478:	
  7313                           ;SlaveLiofilizadorVer1.c: 583:                 else
  7314                           
  7315                           
  7316                           ;SlaveLiofilizadorVer1.c: 584:                    PORTCbits.RC0=1;
  7317  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  7318  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  7319  02FD  1407               	bsf	7,0	;volatile
  7320  02FE  2982               	goto	L9
  7321  02FF                     l7362:
  7322  02FF  0B36               	decfsz	(_usart_protocol^(0+384)+6),w
  7323  0300  2982               	goto	L9
  7324                           
  7325                           ;SlaveLiofilizadorVer1.c: 587:                      {;SlaveLiofilizadorVer1.c: 588:     
      +                                            modoAutonomo1=1;
  7326  0301  01AF               	clrf	_modoAutonomo1^(0+384)
  7327  0302  0AAF               	incf	_modoAutonomo1^(0+384),f
  7328                           
  7329                           ;SlaveLiofilizadorVer1.c: 589:                       if(!usart_protocol.value[1])
  7330  0303  0837               	movf	(_usart_protocol^(0+384)+7),w
  7331  0304  1D03               	btfss	3,2
  7332  0305  2B0A               	goto	l482
  7333                           
  7334                           ;SlaveLiofilizadorVer1.c: 590:                          PORTCbits.RC1=0;
  7335  0306  1283               	bcf	3,5	;RP0=0, select bank0
  7336  0307  1303               	bcf	3,6	;RP1=0, select bank0
  7337  0308  1087               	bcf	7,1	;volatile
  7338  0309  2982               	goto	L9
  7339  030A                     l482:	
  7340                           ;SlaveLiofilizadorVer1.c: 591:                       else
  7341                           
  7342                           
  7343                           ;SlaveLiofilizadorVer1.c: 592:                          PORTCbits.RC1=1;
  7344  030A  1283               	bcf	3,5	;RP0=0, select bank0
  7345  030B  1303               	bcf	3,6	;RP1=0, select bank0
  7346  030C  1487               	bsf	7,1	;volatile
  7347  030D  2982               	goto	L9
  7348  030E                     l7374:	
  7349                           ;SlaveLiofilizadorVer1.c: 594:              Send_To_MB(3);
  7350                           
  7351                           
  7352                           ;SlaveLiofilizadorVer1.c: 598:              if(usart_protocol.value[0]==0)
  7353  030E  1703               	bsf	3,6	;RP1=1, select bank3
  7354  030F  0836               	movf	(_usart_protocol^(0+384)+6),w
  7355  0310  30C2               	movlw	194
  7356  0311  1D03               	btfss	3,2
  7357  0312  2B17               	goto	L12
  7358                           
  7359                           ;SlaveLiofilizadorVer1.c: 599:                {;SlaveLiofilizadorVer1.c: 600:           
      +                               Status1=1;
  7360                           
  7361                           ;SlaveLiofilizadorVer1.c: 601:                SetPoint1=-100;
  7362                           
  7363                           ;SlaveLiofilizadorVer1.c: 602:                Histerese1=1;
  7364  0313  26A1               	fcall	PL28	;call to abstracted procedure
  7365                           
  7366                           ;SlaveLiofilizadorVer1.c: 603:                TempoON_1 =0;
  7367  0314  01E8               	clrf	_TempoON_1^(0+128)
  7368                           
  7369                           ;SlaveLiofilizadorVer1.c: 604:                TempoOFF_1=10;
  7370  0315  00E7               	movwf	_TempoOFF_1^(0+128)
  7371                           
  7372                           ;SlaveLiofilizadorVer1.c: 605:                }
  7373  0316  0008               	return
  7374  0317                     L12:
  7375                           
  7376                           ;SlaveLiofilizadorVer1.c: 607:                {;SlaveLiofilizadorVer1.c: 608:           
      +                               Status1=1;
  7377                           
  7378                           ;SlaveLiofilizadorVer1.c: 609:                SetPoint1=-100;
  7379                           
  7380                           ;SlaveLiofilizadorVer1.c: 610:                Histerese1=1;
  7381  0317  26A1               	fcall	PL28	;call to abstracted procedure
  7382                           
  7383                           ;SlaveLiofilizadorVer1.c: 611:                TempoON_1 =10;
  7384  0318  00E8               	movwf	_TempoON_1^(0+128)
  7385                           
  7386                           ;SlaveLiofilizadorVer1.c: 612:                TempoOFF_1=0;
  7387  0319  01E7               	clrf	_TempoOFF_1^(0+128)
  7388  031A  0008               	return
  7389  031B                     l7398:
  7390  031B  1703               	bsf	3,6	;RP1=1, select bank3
  7391  031C  0834               	movf	(_usart_protocol^(0+384)+4),w
  7392  031D  1303               	bcf	3,6	;RP1=0, select bank1
  7393  031E  00BD               	movwf	??_Decodify_Command^(0+128)
  7394  031F  01BE               	clrf	(??_Decodify_Command^(0+128)+1)
  7395                           
  7396                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7397                           ; Switch size 1, requested type "space"
  7398                           ; Number of cases is 1, Range of values is 0 to 0
  7399                           ; switch strategies available:
  7400                           ; Name         Instructions Cycles
  7401                           ; simple_byte            4     3 (average)
  7402                           ; direct_byte           11     8 (fixed)
  7403                           ; jumptable            260     6 (fixed)
  7404                           ;	Chosen strategy is simple_byte
  7405  0320  083E               	movf	(??_Decodify_Command+1)^(0+128),w
  7406  0321  3A00               	xorlw	0	; case 0
  7407  0322  1903               	skipnz
  7408  0323  2B25               	goto	l7562
  7409  0324  2B75               	goto	l487
  7410  0325                     l7562:
  7411                           
  7412                           ; Switch size 1, requested type "space"
  7413                           ; Number of cases is 26, Range of values is 1 to 80
  7414                           ; switch strategies available:
  7415                           ; Name         Instructions Cycles
  7416                           ; simple_byte           79    40 (average)
  7417                           ; direct_byte          251    11 (fixed)
  7418                           ; jumptable            263     9 (fixed)
  7419                           ;	Chosen strategy is simple_byte
  7420  0325  083D               	movf	??_Decodify_Command^(0+128),w
  7421  0326  3A01               	xorlw	1	; case 1
  7422  0327  1903               	skipnz
  7423  0328  296F               	goto	l7244
  7424  0329  3A03               	xorlw	3	; case 2
  7425  032A  1903               	skipnz
  7426  032B  293B               	goto	l7228
  7427  032C  3A01               	xorlw	1	; case 3
  7428  032D  1903               	skipnz
  7429  032E  2967               	goto	l7240
  7430  032F  3A0B               	xorlw	11	; case 8
  7431  0330  1903               	skipnz
  7432  0331  2977               	goto	l7250
  7433  0332  3A01               	xorlw	1	; case 9
  7434  0333  1903               	skipnz
  7435  0334  2987               	goto	l7254
  7436  0335  3A03               	xorlw	3	; case 10
  7437  0336  1903               	skipnz
  7438  0337  2997               	goto	l7260
  7439  0338  3A01               	xorlw	1	; case 11
  7440  0339  1903               	skipnz
  7441  033A  29B0               	goto	l7268
  7442  033B  3A07               	xorlw	7	; case 12
  7443  033C  1903               	skipnz
  7444  033D  29C7               	goto	l7274
  7445  033E  3A01               	xorlw	1	; case 13
  7446  033F  1903               	skipnz
  7447  0340  29D1               	goto	l7280
  7448  0341  3A1C               	xorlw	28	; case 17
  7449  0342  1903               	skipnz
  7450  0343  29DC               	goto	l7286
  7451  0344  3A03               	xorlw	3	; case 18
  7452  0345  1903               	skipnz
  7453  0346  29F8               	goto	l7292
  7454  0347  3A01               	xorlw	1	; case 19
  7455  0348  1903               	skipnz
  7456  0349  2A15               	goto	l7298
  7457  034A  3A07               	xorlw	7	; case 20
  7458  034B  1903               	skipnz
  7459  034C  2A2B               	goto	l7304
  7460  034D  3A01               	xorlw	1	; case 21
  7461  034E  1903               	skipnz
  7462  034F  2A88               	goto	l7322
  7463  0350  3A03               	xorlw	3	; case 22
  7464  0351  1903               	skipnz
  7465  0352  2AA2               	goto	l7328
  7466  0353  3A01               	xorlw	1	; case 23
  7467  0354  1903               	skipnz
  7468  0355  2A66               	goto	l7316
  7469  0356  3A0F               	xorlw	15	; case 24
  7470  0357  1903               	skipnz
  7471  0358  2A46               	goto	l7310
  7472  0359  3A01               	xorlw	1	; case 25
  7473  035A  1903               	skipnz
  7474  035B  2AC2               	goto	l7332
  7475  035C  3A03               	xorlw	3	; case 26
  7476  035D  1903               	skipnz
  7477  035E  28D9               	goto	l7212
  7478  035F  3A38               	xorlw	56	; case 34
  7479  0360  1903               	skipnz
  7480  0361  2AE2               	goto	l7350
  7481  0362  3A06               	xorlw	6	; case 36
  7482  0363  1903               	skipnz
  7483  0364  2AD6               	goto	l7344
  7484  0365  3A01               	xorlw	1	; case 37
  7485  0366  1903               	skipnz
  7486  0367  2ACD               	goto	l7338
  7487  0368  3A15               	xorlw	21	; case 48
  7488  0369  1903               	skipnz
  7489  036A  2AF0               	goto	l7356
  7490  036B  3A70               	xorlw	112	; case 64
  7491  036C  1903               	skipnz
  7492  036D  295D               	goto	l7236
  7493  036E  3A01               	xorlw	1	; case 65
  7494  036F  1903               	skipnz
  7495  0370  28C6               	goto	l7206
  7496  0371  3A11               	xorlw	17	; case 80
  7497  0372  1903               	skipnz
  7498  0373  2B0E               	goto	l7374
  7499  0374  2B75               	goto	l487
  7500  0375                     l487:
  7501  0375  0008               	return
  7502  0376                     __end_of_Decodify_Command:
  7503  0376                     __ptext16:	
  7504 ;; *************** function _Send_To_MB *****************
  7505 ;; Defined at:
  7506 ;;		line 621 in file "SlaveLiofilizadorVer1.c"
  7507 ;; Parameters:    Size  Location     Type
  7508 ;;  size            1    wreg     unsigned char 
  7509 ;; Auto vars:     Size  Location     Type
  7510 ;;  size            1    1[BANK0 ] unsigned char 
  7511 ;; Return value:  Size  Location     Type
  7512 ;;                  1    wreg      void 
  7513 ;; Registers used:
  7514 ;;		wreg, status,2, status,0, pclath, cstack
  7515 ;; Tracked objects:
  7516 ;;		On entry : 0/800
  7517 ;;		On exit  : 300/100
  7518 ;;		Unchanged: 0/0
  7519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7520 ;;      Params:         0       0       0       0       0
  7521 ;;      Locals:         0       1       0       0       0
  7522 ;;      Temps:          0       0       0       0       0
  7523 ;;      Totals:         0       1       0       0       0
  7524 ;;Total ram usage:        1 bytes
  7525 ;; Hardware stack levels used: 1
  7526 ;; Hardware stack levels required when called: 2
  7527 ;; This function calls:
  7528 ;;		_USART_putc
  7529 ;; This function is called by:
  7530 ;;		_Decodify_Command
  7531 ;; This function uses a non-reentrant model
  7532 ;;
  7533                           
  7534                           
  7535                           ;psect for function _Send_To_MB
  7536  0376                     _Send_To_MB:
  7537                           
  7538                           ;incstack = 0
  7539                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  7540                           ;Send_To_MB@size stored from wreg
  7541  0376  1283               	bcf	3,5	;RP0=0, select bank0
  7542  0377  1303               	bcf	3,6	;RP1=0, select bank0
  7543  0378  00A1               	movwf	Send_To_MB@size
  7544                           
  7545                           ;SlaveLiofilizadorVer1.c: 623:      USART_putc(0xAA);
  7546  0379  30AA               	movlw	170
  7547  037A  2391  120A  118A   	fcall	_USART_putc
  7548                           
  7549                           ;SlaveLiofilizadorVer1.c: 624:      USART_putc(0xBB);
  7550  037D  30BB               	movlw	187
  7551  037E  2391  120A  118A   	fcall	_USART_putc
  7552                           
  7553                           ;SlaveLiofilizadorVer1.c: 625:      USART_putc(Board_Number);
  7554  0381  0865               	movf	_Board_Number^(0+128),w
  7555  0382  2391  120A  118A   	fcall	_USART_putc
  7556                           
  7557                           ;SlaveLiofilizadorVer1.c: 626:      USART_putc(0x00);
  7558  0385  3000               	movlw	0
  7559  0386  2391  120A  118A   	fcall	_USART_putc
  7560                           
  7561                           ;SlaveLiofilizadorVer1.c: 627:      USART_putc(usart_protocol.command);
  7562  0389  1703               	bsf	3,6	;RP1=1, select bank3
  7563  038A  0834               	movf	(_usart_protocol^(0+384)+4),w
  7564  038B  2391  120A  118A   	fcall	_USART_putc
  7565                           
  7566                           ;SlaveLiofilizadorVer1.c: 628:      USART_putc(size);
  7567  038E  1283               	bcf	3,5	;RP0=0, select bank0
  7568  038F  0821               	movf	Send_To_MB@size,w
  7569  0390  2B91               	ljmp	_USART_putc
  7570  0391                     __end_of_Send_To_MB:
  7571  0391                     __ptext47:	
  7572 ;; *************** function _USART_putc *****************
  7573 ;; Defined at:
  7574 ;;		line 89 in file "usart.c"
  7575 ;; Parameters:    Size  Location     Type
  7576 ;;  value           1    wreg     unsigned char 
  7577 ;; Auto vars:     Size  Location     Type
  7578 ;;  value           1    0[BANK0 ] unsigned char 
  7579 ;; Return value:  Size  Location     Type
  7580 ;;                  1    wreg      void 
  7581 ;; Registers used:
  7582 ;;		wreg
  7583 ;; Tracked objects:
  7584 ;;		On entry : 0/100
  7585 ;;		On exit  : 300/100
  7586 ;;		Unchanged: 0/0
  7587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7588 ;;      Params:         0       0       0       0       0
  7589 ;;      Locals:         0       1       0       0       0
  7590 ;;      Temps:          0       0       0       0       0
  7591 ;;      Totals:         0       1       0       0       0
  7592 ;;Total ram usage:        1 bytes
  7593 ;; Hardware stack levels used: 1
  7594 ;; Hardware stack levels required when called: 1
  7595 ;; This function calls:
  7596 ;;		Nothing
  7597 ;; This function is called by:
  7598 ;;		_EEPROM_24C1025_Read_Buffer_USART
  7599 ;;		_Decodify_Command
  7600 ;;		_Send_To_MB
  7601 ;;		_PROCULUS_Control_Register_Write
  7602 ;;		_PROCULUS_VP_Write
  7603 ;;		_USART_put_int
  7604 ;;		_USART_put_string
  7605 ;; This function uses a non-reentrant model
  7606 ;;
  7607                           
  7608                           
  7609                           ;psect for function _USART_putc
  7610  0391                     _USART_putc:
  7611                           
  7612                           ;incstack = 0
  7613                           ; Regs used in _USART_putc: [wreg]
  7614                           ;USART_putc@value stored from wreg
  7615  0391  1283               	bcf	3,5	;RP0=0, select bank0
  7616  0392  1303               	bcf	3,6	;RP1=0, select bank0
  7617  0393  00A0               	movwf	USART_putc@value
  7618                           
  7619                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
  7620  0394  3014               	movlw	20
  7621  0395  1683               	bsf	3,5	;RP0=1, select bank3
  7622  0396  1703               	bsf	3,6	;RP1=1, select bank3
  7623  0397  00A8               	movwf	_Delay_Led_Usart^(0+384)	;volatile
  7624  0398  01A9               	clrf	(_Delay_Led_Usart+1)^(0+384)	;volatile
  7625  0399                     l952:	
  7626                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
  7627                           
  7628  0399  1303               	bcf	3,6	;RP1=0, select bank1
  7629  039A  1C98               	btfss	24,1	;volatile
  7630  039B  2B99               	goto	l952
  7631                           
  7632                           ;usart.c: 93:     TXREG=value;
  7633  039C  1283               	bcf	3,5	;RP0=0, select bank0
  7634  039D  0820               	movf	USART_putc@value,w
  7635  039E  0099               	movwf	25	;volatile
  7636                           
  7637                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
  7638  039F  1683               	bsf	3,5	;RP0=1, select bank1
  7639  03A0  1698               	bsf	24,5	;volatile
  7640  03A1  0008               	return
  7641  03A2                     __end_of_USART_putc:
  7642  03A2                     __ptext30:	
  7643 ;; *************** function _USART_put_int *****************
  7644 ;; Defined at:
  7645 ;;		line 137 in file "usart.c"
  7646 ;; Parameters:    Size  Location     Type
  7647 ;;  value           2    8[BANK1 ] int 
  7648 ;; Auto vars:     Size  Location     Type
  7649 ;;  dado            1   79[BANK0 ] PTR unsigned char 
  7650 ;;		 -> USART_put_int@value(2), 
  7651 ;; Return value:  Size  Location     Type
  7652 ;;                  1    wreg      void 
  7653 ;; Registers used:
  7654 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7655 ;; Tracked objects:
  7656 ;;		On entry : 300/100
  7657 ;;		On exit  : 300/100
  7658 ;;		Unchanged: 0/0
  7659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7660 ;;      Params:         0       0       2       0       0
  7661 ;;      Locals:         0       1       0       0       0
  7662 ;;      Temps:          0       0       0       0       0
  7663 ;;      Totals:         0       1       2       0       0
  7664 ;;Total ram usage:        3 bytes
  7665 ;; Hardware stack levels used: 1
  7666 ;; Hardware stack levels required when called: 2
  7667 ;; This function calls:
  7668 ;;		_USART_putc
  7669 ;; This function is called by:
  7670 ;;		_Decodify_Command
  7671 ;;		_PROCULUS_Control_Register_Write
  7672 ;;		_PROCULUS_VP_Write
  7673 ;; This function uses a non-reentrant model
  7674 ;;
  7675                           
  7676                           
  7677                           ;psect for function _USART_put_int
  7678  03A2                     _USART_put_int:
  7679  03A2                     l6312:	
  7680                           ;incstack = 0
  7681                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7682                           
  7683                           
  7684                           ;usart.c: 138:      char *dado;;usart.c: 139:      dado=(char*)&value;
  7685  03A2  30A8               	movlw	(low (USART_put_int@value| 0))& (0+255)
  7686  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  7687  03A4  00EF               	movwf	USART_put_int@dado
  7688                           
  7689                           ;usart.c: 140:      USART_putc(*(dado+1));
  7690  03A5  0A6F               	incf	USART_put_int@dado,w
  7691  03A6  0084               	movwf	4
  7692  03A7  1383               	bcf	3,7	;select IRP bank0
  7693  03A8  0800               	movf	0,w
  7694  03A9  2391  120A  118A   	fcall	_USART_putc
  7695                           
  7696                           ;usart.c: 141:      USART_putc(*dado);
  7697  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  7698  03AD  086F               	movf	USART_put_int@dado,w
  7699  03AE  0084               	movwf	4
  7700  03AF  1383               	bcf	3,7	;select IRP bank0
  7701  03B0  0800               	movf	0,w
  7702  03B1  2B91               	ljmp	_USART_putc
  7703  03B2                     __end_of_USART_put_int:
  7704  03B2                     __ptext17:	
  7705 ;; *************** function _Send_Reply_OK *****************
  7706 ;; Defined at:
  7707 ;;		line 632 in file "SlaveLiofilizadorVer1.c"
  7708 ;; Parameters:    Size  Location     Type
  7709 ;;		None
  7710 ;; Auto vars:     Size  Location     Type
  7711 ;;		None
  7712 ;; Return value:  Size  Location     Type
  7713 ;;                  1    wreg      void 
  7714 ;; Registers used:
  7715 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7716 ;; Tracked objects:
  7717 ;;		On entry : 100/100
  7718 ;;		On exit  : 300/100
  7719 ;;		Unchanged: 0/0
  7720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7721 ;;      Params:         0       0       0       0       0
  7722 ;;      Locals:         0       0       0       0       0
  7723 ;;      Temps:          0       0       0       0       0
  7724 ;;      Totals:         0       0       0       0       0
  7725 ;;Total ram usage:        0 bytes
  7726 ;; Hardware stack levels used: 1
  7727 ;; Hardware stack levels required when called: 3
  7728 ;; This function calls:
  7729 ;;		_USART_put_string
  7730 ;; This function is called by:
  7731 ;;		_Decodify_Command
  7732 ;; This function uses a non-reentrant model
  7733 ;;
  7734                           
  7735                           
  7736                           ;psect for function _Send_Reply_OK
  7737  03B2                     _Send_Reply_OK:
  7738  03B2                     l6880:	
  7739                           ;incstack = 0
  7740                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7741                           
  7742                           
  7743                           ;SlaveLiofilizadorVer1.c: 633:      USART_put_string("OK");
  7744  03B2  3035               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  7745  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  7746  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  7747  03B5  00A1               	movwf	USART_put_string@vetor
  7748  03B6  3080               	movlw	128
  7749  03B7  00A2               	movwf	USART_put_string@vetor+1
  7750  03B8  2F04               	ljmp	l6452
  7751  03B9                     __end_of_Send_Reply_OK:
  7752  03B9                     __ptext26:	
  7753 ;; *************** function _PROCULUS_Show_Screen *****************
  7754 ;; Defined at:
  7755 ;;		line 243 in file "proculus.c"
  7756 ;; Parameters:    Size  Location     Type
  7757 ;;  screen          2   14[BANK1 ] unsigned int 
  7758 ;; Auto vars:     Size  Location     Type
  7759 ;;  vetor           3   16[BANK1 ] unsigned char [3]
  7760 ;; Return value:  Size  Location     Type
  7761 ;;                  1    wreg      void 
  7762 ;; Registers used:
  7763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7764 ;; Tracked objects:
  7765 ;;		On entry : 300/100
  7766 ;;		On exit  : 300/0
  7767 ;;		Unchanged: 0/0
  7768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7769 ;;      Params:         0       0       2       0       0
  7770 ;;      Locals:         0       0       3       0       0
  7771 ;;      Temps:          0       0       0       0       0
  7772 ;;      Totals:         0       0       5       0       0
  7773 ;;Total ram usage:        5 bytes
  7774 ;; Hardware stack levels used: 1
  7775 ;; Hardware stack levels required when called: 4
  7776 ;; This function calls:
  7777 ;;		_PROCULUS_Control_Register_Write
  7778 ;; This function is called by:
  7779 ;;		_Decodify_Command
  7780 ;; This function uses a non-reentrant model
  7781 ;;
  7782                           
  7783                           
  7784                           ;psect for function _PROCULUS_Show_Screen
  7785  03B9                     _PROCULUS_Show_Screen:
  7786                           
  7787                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  7788                           
  7789                           ;incstack = 0
  7790                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7791  03B9  3003               	movlw	3
  7792  03BA  00B0               	movwf	PROCULUS_Show_Screen@vetor^(0+128)
  7793                           
  7794                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  7795  03BB  082F               	movf	(PROCULUS_Show_Screen@screen^(0+128)+1),w
  7796  03BC  00B1               	movwf	(PROCULUS_Show_Screen@vetor^(0+128)+1)
  7797                           
  7798                           ;proculus.c: 247:      vetor[2] = (char) screen;
  7799  03BD  082E               	movf	PROCULUS_Show_Screen@screen^(0+128),w
  7800  03BE  00B2               	movwf	(PROCULUS_Show_Screen@vetor^(0+128)+2)
  7801                           
  7802                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  7803  03BF  3003               	movlw	3
  7804  03C0  00AA               	movwf	PROCULUS_Control_Register_Write@size^(0+128)
  7805  03C1  30B0               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  7806  03C2  2888               	ljmp	_PROCULUS_Control_Register_Write
  7807  03C3                     __end_of_PROCULUS_Show_Screen:
  7808  03C3                     __ptext21:	
  7809 ;; *************** function ___flmul *****************
  7810 ;; Defined at:
  7811 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  7812 ;; Parameters:    Size  Location     Type
  7813 ;;  b               4   52[BANK0 ] long 
  7814 ;;  a               4   56[BANK0 ] long 
  7815 ;; Auto vars:     Size  Location     Type
  7816 ;;  prod            4   71[BANK0 ] struct .
  7817 ;;  grs             4   67[BANK0 ] unsigned long 
  7818 ;;  temp            2   75[BANK0 ] struct .
  7819 ;;  bexp            1   66[BANK0 ] unsigned char 
  7820 ;;  aexp            1   65[BANK0 ] unsigned char 
  7821 ;;  sign            1   64[BANK0 ] unsigned char 
  7822 ;; Return value:  Size  Location     Type
  7823 ;;                  4   52[BANK0 ] unsigned char 
  7824 ;; Registers used:
  7825 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7826 ;; Tracked objects:
  7827 ;;		On entry : 300/0
  7828 ;;		On exit  : 300/0
  7829 ;;		Unchanged: 0/0
  7830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7831 ;;      Params:         0       8       0       0       0
  7832 ;;      Locals:         0      13       0       0       0
  7833 ;;      Temps:          0       4       0       0       0
  7834 ;;      Totals:         0      25       0       0       0
  7835 ;;Total ram usage:       25 bytes
  7836 ;; Hardware stack levels used: 1
  7837 ;; Hardware stack levels required when called: 2
  7838 ;; This function calls:
  7839 ;;		__Umul8_16
  7840 ;; This function is called by:
  7841 ;;		_Decodify_Command
  7842 ;;		_Save_Log
  7843 ;;		_ADC_Read_NTC
  7844 ;;		_log
  7845 ;;		_eval_poly
  7846 ;; This function uses a non-reentrant model
  7847 ;;
  7848                           
  7849                           
  7850                           ;psect for function ___flmul
  7851  03C3                     ___flmul:
  7852                           
  7853                           ;incstack = 0
  7854                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7855  03C3  0857               	movf	___flmul@b+3,w
  7856  03C4  00E0               	movwf	___flmul@sign
  7857  03C5  3080               	movlw	128
  7858  03C6  05E0               	andwf	___flmul@sign,f
  7859  03C7  1003               	clrc
  7860  03C8  0D57               	rlf	___flmul@b+3,w
  7861  03C9  00E2               	movwf	___flmul@bexp
  7862  03CA  1BD6               	btfsc	___flmul@b+2,7
  7863  03CB  1462               	bsf	___flmul@bexp,0
  7864  03CC  0862               	movf	___flmul@bexp,w
  7865  03CD  1903               	btfsc	3,2
  7866  03CE  2BD7               	goto	l1441
  7867  03CF  0F62               	incfsz	___flmul@bexp,w
  7868  03D0  2BD5               	goto	l1442
  7869  03D1  01D4               	clrf	___flmul@b
  7870  03D2  01D5               	clrf	___flmul@b+1
  7871  03D3  01D6               	clrf	___flmul@b+2
  7872  03D4  01D7               	clrf	___flmul@b+3
  7873  03D5                     l1442:
  7874  03D5  17D6               	bsf	___flmul@b+2,7
  7875  03D6  2BDB               	goto	l6092
  7876  03D7                     l1441:
  7877  03D7  01D4               	clrf	___flmul@b
  7878  03D8  01D5               	clrf	___flmul@b+1
  7879  03D9  01D6               	clrf	___flmul@b+2
  7880  03DA  01D7               	clrf	___flmul@b+3
  7881  03DB                     l6092:
  7882  03DB  085B               	movf	___flmul@a+3,w
  7883  03DC  3980               	andlw	128
  7884  03DD  06E0               	xorwf	___flmul@sign,f
  7885  03DE  1003               	clrc
  7886  03DF  0D5B               	rlf	___flmul@a+3,w
  7887  03E0  00E1               	movwf	___flmul@aexp
  7888  03E1  1BDA               	btfsc	___flmul@a+2,7
  7889  03E2  1461               	bsf	___flmul@aexp,0
  7890  03E3  0861               	movf	___flmul@aexp,w
  7891  03E4  1903               	btfsc	3,2
  7892  03E5  2BEE               	goto	l1445
  7893  03E6  0F61               	incfsz	___flmul@aexp,w
  7894  03E7  2BEC               	goto	l1446
  7895  03E8  01D8               	clrf	___flmul@a
  7896  03E9  01D9               	clrf	___flmul@a+1
  7897  03EA  01DA               	clrf	___flmul@a+2
  7898  03EB  01DB               	clrf	___flmul@a+3
  7899  03EC                     l1446:
  7900  03EC  17DA               	bsf	___flmul@a+2,7
  7901  03ED  2BF2               	goto	l6104
  7902  03EE                     l1445:
  7903  03EE  01D8               	clrf	___flmul@a
  7904  03EF  01D9               	clrf	___flmul@a+1
  7905  03F0  01DA               	clrf	___flmul@a+2
  7906  03F1  01DB               	clrf	___flmul@a+3
  7907  03F2                     l6104:
  7908  03F2  0861               	movf	___flmul@aexp,w
  7909  03F3  1D03               	btfss	3,2
  7910  03F4  0862               	movf	___flmul@bexp,w
  7911  03F5  1D03               	btfss	3,2
  7912  03F6  2BFC               	goto	l6108
  7913  03F7  01D4               	clrf	?___flmul
  7914  03F8  01D5               	clrf	?___flmul+1
  7915  03F9  01D6               	clrf	?___flmul+2
  7916  03FA  01D7               	clrf	?___flmul+3
  7917  03FB  0008               	return
  7918  03FC                     l6108:
  7919  03FC  0854               	movf	___flmul@b,w
  7920  03FD  00A0               	movwf	__Umul8_16@multiplicand
  7921  03FE  085A               	movf	___flmul@a+2,w
  7922  03FF  2517  120A  118A   	fcall	__Umul8_16
  7923  0402  0821               	movf	?__Umul8_16+1,w
  7924  0403  00EC               	movwf	___flmul@temp+1
  7925  0404  0820               	movf	?__Umul8_16,w
  7926  0405  00EB               	movwf	___flmul@temp
  7927  0406  00E3               	movwf	___flmul@grs
  7928  0407  01E4               	clrf	___flmul@grs+1
  7929  0408  01E5               	clrf	___flmul@grs+2
  7930  0409  01E6               	clrf	___flmul@grs+3
  7931  040A  086C               	movf	___flmul@temp+1,w
  7932  040B  00E7               	movwf	___flmul@prod
  7933  040C  01E8               	clrf	___flmul@prod+1
  7934  040D  01E9               	clrf	___flmul@prod+2
  7935  040E  01EA               	clrf	___flmul@prod+3
  7936  040F  0855               	movf	___flmul@b+1,w
  7937  0410  00A0               	movwf	__Umul8_16@multiplicand
  7938  0411  0859               	movf	___flmul@a+1,w
  7939  0412  2517  120A  118A   	fcall	__Umul8_16
  7940  0415  2684  120A  118A   	fcall	PL18	;call to abstracted procedure
  7941  0418  1803               	skipnc
  7942  0419  07E8               	addwf	___flmul@prod+1,f
  7943  041A  1803               	skipnc
  7944  041B  07E9               	addwf	___flmul@prod+2,f
  7945  041C  1803               	skipnc
  7946  041D  07EA               	addwf	___flmul@prod+3,f
  7947  041E  0856               	movf	___flmul@b+2,w
  7948  041F  00A0               	movwf	__Umul8_16@multiplicand
  7949  0420  0858               	movf	___flmul@a,w
  7950  0421  2517  120A  118A   	fcall	__Umul8_16
  7951  0424  2684  120A  118A   	fcall	PL18	;call to abstracted procedure
  7952  0427  2693  120A  118A   	fcall	PL26	;call to abstracted procedure
  7953  042A  0855               	movf	___flmul@b+1,w
  7954  042B  00A0               	movwf	__Umul8_16@multiplicand
  7955  042C  0858               	movf	___flmul@a,w
  7956  042D  2517  120A  118A   	fcall	__Umul8_16
  7957  0430  2650  120A  118A   	fcall	PL4	;call to abstracted procedure
  7958  0433  1803               	skipnc
  7959  0434  3E01               	addlw	1
  7960  0435  1D03               	btfss	3,2
  7961  0436  07E6               	addwf	___flmul@grs+3,f
  7962  0437  0854               	movf	___flmul@b,w
  7963  0438  00A0               	movwf	__Umul8_16@multiplicand
  7964  0439  0859               	movf	___flmul@a+1,w
  7965  043A  2517  120A  118A   	fcall	__Umul8_16
  7966  043D  2650  120A  118A   	fcall	PL4	;call to abstracted procedure
  7967  0440  1803               	skipnc
  7968  0441  3E01               	addlw	1
  7969  0442  1D03               	btfss	3,2
  7970  0443  07E6               	addwf	___flmul@grs+3,f
  7971  0444  0865               	movf	___flmul@grs+2,w
  7972  0445  00E6               	movwf	___flmul@grs+3
  7973  0446  0864               	movf	___flmul@grs+1,w
  7974  0447  00E5               	movwf	___flmul@grs+2
  7975  0448  0863               	movf	___flmul@grs,w
  7976  0449  00E4               	movwf	___flmul@grs+1
  7977  044A  01E3               	clrf	___flmul@grs
  7978  044B  0854               	movf	___flmul@b,w
  7979  044C  00A0               	movwf	__Umul8_16@multiplicand
  7980  044D  0858               	movf	___flmul@a,w
  7981  044E  2517  120A  118A   	fcall	__Umul8_16
  7982  0451  2650  120A  118A   	fcall	PL4	;call to abstracted procedure
  7983  0454  1803               	skipnc
  7984  0455  3E01               	addlw	1
  7985  0456  1D03               	btfss	3,2
  7986  0457  07E6               	addwf	___flmul@grs+3,f
  7987  0458  0855               	movf	___flmul@b+1,w
  7988  0459  00A0               	movwf	__Umul8_16@multiplicand
  7989  045A  085A               	movf	___flmul@a+2,w
  7990  045B  2517  120A  118A   	fcall	__Umul8_16
  7991  045E  0821               	movf	?__Umul8_16+1,w
  7992  045F  266A  120A  118A   	fcall	PL8	;call to abstracted procedure
  7993  0462  2673  120A  118A   	fcall	PL14	;call to abstracted procedure
  7994  0465  26AE  120A  118A   	fcall	PL66	;call to abstracted procedure
  7995  0468  0859               	movf	___flmul@a+1,w
  7996  0469  2517  120A  118A   	fcall	__Umul8_16
  7997  046C  0821               	movf	?__Umul8_16+1,w
  7998  046D  266A  120A  118A   	fcall	PL8	;call to abstracted procedure
  7999  0470  2673  120A  118A   	fcall	PL14	;call to abstracted procedure
  8000  0473  26AE  120A  118A   	fcall	PL66	;call to abstracted procedure
  8001  0476  085A               	movf	___flmul@a+2,w
  8002  0477  2517  120A  118A   	fcall	__Umul8_16
  8003  047A  0821               	movf	?__Umul8_16+1,w
  8004  047B  266A  120A  118A   	fcall	PL8	;call to abstracted procedure
  8005  047E  085E               	movf	??___flmul+2,w
  8006  047F  00DF               	movwf	??___flmul+3
  8007  0480  085D               	movf	??___flmul+1,w
  8008  0481  00DE               	movwf	??___flmul+2
  8009  0482  085C               	movf	??___flmul,w
  8010  0483  00DD               	movwf	??___flmul+1
  8011  0484  01DC               	clrf	??___flmul
  8012  0485  2673  120A  118A   	fcall	PL14	;call to abstracted procedure
  8013  0488  1803               	skipnc
  8014  0489  3E01               	addlw	1
  8015  048A  1D03               	btfss	3,2
  8016  048B  07EA               	addwf	___flmul@prod+3,f
  8017  048C  0866               	movf	___flmul@grs+3,w
  8018  048D  07E7               	addwf	___flmul@prod,f
  8019  048E  3001               	movlw	1
  8020  048F  2693  120A  118A   	fcall	PL26	;call to abstracted procedure
  8021  0492  0862               	movf	___flmul@bexp,w
  8022  0493  00EB               	movwf	___flmul@temp
  8023  0494  01EC               	clrf	___flmul@temp+1
  8024  0495  0861               	movf	___flmul@aexp,w
  8025  0496  07EB               	addwf	___flmul@temp,f
  8026  0497  1803               	skipnc
  8027  0498  0AEC               	incf	___flmul@temp+1,f
  8028  0499  3082               	movlw	-126
  8029  049A                     L13:
  8030  049A  07EB               	addwf	___flmul@temp,f
  8031  049B  1C03               	skipc
  8032  049C  03EC               	decf	___flmul@temp+1,f
  8033  049D  1BE9               	btfsc	___flmul@prod+2,7
  8034  049E  2CAD               	goto	l6156
  8035  049F  1003               	clrc
  8036  04A0  0DE7               	rlf	___flmul@prod,f
  8037  04A1  0DE8               	rlf	___flmul@prod+1,f
  8038  04A2  0DE9               	rlf	___flmul@prod+2,f
  8039  04A3  0DEA               	rlf	___flmul@prod+3,f
  8040  04A4  1BE6               	btfsc	___flmul@grs+3,7
  8041  04A5  1467               	bsf	___flmul@prod,0
  8042  04A6  30FF               	movlw	-1
  8043  04A7  1003               	clrc
  8044  04A8  0DE3               	rlf	___flmul@grs,f
  8045  04A9  0DE4               	rlf	___flmul@grs+1,f
  8046  04AA  0DE5               	rlf	___flmul@grs+2,f
  8047  04AB  0DE6               	rlf	___flmul@grs+3,f
  8048  04AC  2C9A               	goto	L13
  8049  04AD                     l6156:
  8050  04AD  01E1               	clrf	___flmul@aexp
  8051  04AE  1FE6               	btfss	___flmul@grs+3,7
  8052  04AF  2CC2               	goto	l6166
  8053  04B0  0863               	movf	___flmul@grs,w
  8054  04B1  00DC               	movwf	??___flmul
  8055  04B2  0864               	movf	___flmul@grs+1,w
  8056  04B3  00DD               	movwf	??___flmul+1
  8057  04B4  0865               	movf	___flmul@grs+2,w
  8058  04B5  00DE               	movwf	??___flmul+2
  8059  04B6  307F               	movlw	127
  8060  04B7  0566               	andwf	___flmul@grs+3,w
  8061  04B8  00DF               	movwf	??___flmul+3
  8062  04B9  045E               	iorwf	??___flmul+2,w
  8063  04BA  045D               	iorwf	??___flmul+1,w
  8064  04BB  045C               	iorwf	??___flmul,w
  8065  04BC  1903               	skipnz
  8066  04BD  1867               	btfsc	___flmul@prod,0
  8067  04BE  2CC0               	goto	l6162
  8068  04BF  2CC2               	goto	l6166
  8069  04C0                     l6162:
  8070  04C0  01E1               	clrf	___flmul@aexp
  8071  04C1  0AE1               	incf	___flmul@aexp,f
  8072  04C2                     l6166:
  8073  04C2  0861               	movf	___flmul@aexp,w
  8074  04C3  1903               	btfsc	3,2
  8075  04C4  2CD6               	goto	l6176
  8076  04C5  0AE7               	incf	___flmul@prod,f
  8077  04C6  1903               	skipnz
  8078  04C7  0AE8               	incf	___flmul@prod+1,f
  8079  04C8  1903               	skipnz
  8080  04C9  0AE9               	incf	___flmul@prod+2,f
  8081  04CA  1903               	skipnz
  8082  04CB  0AEA               	incf	___flmul@prod+3,f
  8083  04CC  1C6A               	btfss	___flmul@prod+3,0
  8084  04CD  2CD6               	goto	l6176
  8085  04CE  0D6A               	rlf	___flmul@prod+3,w
  8086  04CF  0CEA               	rrf	___flmul@prod+3,f
  8087  04D0  0CE9               	rrf	___flmul@prod+2,f
  8088  04D1  0CE8               	rrf	___flmul@prod+1,f
  8089  04D2  0CE7               	rrf	___flmul@prod,f
  8090  04D3  0AEB               	incf	___flmul@temp,f
  8091  04D4  1903               	skipnz
  8092  04D5  0AEC               	incf	___flmul@temp+1,f
  8093  04D6                     l6176:
  8094  04D6  086C               	movf	___flmul@temp+1,w
  8095  04D7  3A80               	xorlw	128
  8096  04D8  00FF               	movwf	127
  8097  04D9  3080               	movlw	128
  8098  04DA  027F               	subwf	127,w
  8099  04DB  1D03               	skipz
  8100  04DC  2CDF               	goto	u5535
  8101  04DD  30FF               	movlw	255
  8102  04DE  026B               	subwf	___flmul@temp,w
  8103  04DF                     u5535:
  8104  04DF  1C03               	skipc
  8105  04E0  2CEA               	goto	l6180
  8106  04E1  307F               	movlw	127
  8107  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  8108  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  8109  04E4  00EA               	movwf	___flmul@prod+3
  8110  04E5  3080               	movlw	128
  8111  04E6  00E9               	movwf	___flmul@prod+2
  8112  04E7  01E8               	clrf	___flmul@prod+1
  8113  04E8  01E7               	clrf	___flmul@prod
  8114  04E9  2D0C               	goto	l1463
  8115  04EA                     l6180:
  8116  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  8117  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  8118  04EC  086C               	movf	___flmul@temp+1,w
  8119  04ED  3A80               	xorlw	128
  8120  04EE  00FF               	movwf	127
  8121  04EF  3080               	movlw	128
  8122  04F0  027F               	subwf	127,w
  8123  04F1  1D03               	skipz
  8124  04F2  2CF5               	goto	u5545
  8125  04F3  3001               	movlw	1
  8126  04F4  026B               	subwf	___flmul@temp,w
  8127  04F5                     u5545:
  8128  04F5  1803               	skipnc
  8129  04F6  2CFF               	goto	l6186
  8130  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  8131  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  8132  04F9  01E7               	clrf	___flmul@prod
  8133  04FA  01E8               	clrf	___flmul@prod+1
  8134  04FB  01E9               	clrf	___flmul@prod+2
  8135  04FC  01EA               	clrf	___flmul@prod+3
  8136  04FD  01E0               	clrf	___flmul@sign
  8137  04FE  2D0C               	goto	l1463
  8138  04FF                     l6186:
  8139  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  8140  0500  1303               	bcf	3,6	;RP1=0, select bank0
  8141  0501  086B               	movf	___flmul@temp,w
  8142  0502  00E2               	movwf	___flmul@bexp
  8143  0503  307F               	movlw	127
  8144  0504  05E9               	andwf	___flmul@prod+2,f
  8145  0505  3000               	movlw	0
  8146  0506  01EA               	clrf	___flmul@prod+3
  8147  0507  1862               	btfsc	___flmul@bexp,0
  8148  0508  17E9               	bsf	___flmul@prod+2,7
  8149  0509  1003               	clrc
  8150  050A  0C62               	rrf	___flmul@bexp,w
  8151  050B  00EA               	movwf	___flmul@prod+3
  8152  050C                     l1463:
  8153  050C  0860               	movf	___flmul@sign,w
  8154  050D  04EA               	iorwf	___flmul@prod+3,f
  8155  050E  086A               	movf	___flmul@prod+3,w
  8156  050F  00D7               	movwf	?___flmul+3
  8157  0510  0869               	movf	___flmul@prod+2,w
  8158  0511  00D6               	movwf	?___flmul+2
  8159  0512  0868               	movf	___flmul@prod+1,w
  8160  0513  00D5               	movwf	?___flmul+1
  8161  0514  0867               	movf	___flmul@prod,w
  8162  0515  00D4               	movwf	?___flmul
  8163  0516  0008               	return
  8164  0517                     __end_of___flmul:
  8165  0517                     __ptext22:	
  8166 ;; *************** function __Umul8_16 *****************
  8167 ;; Defined at:
  8168 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  8169 ;; Parameters:    Size  Location     Type
  8170 ;;  multiplier      1    wreg     unsigned char 
  8171 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8172 ;; Auto vars:     Size  Location     Type
  8173 ;;  multiplier      1    6[BANK0 ] unsigned char 
  8174 ;;  word_mpld       2    4[BANK0 ] unsigned int 
  8175 ;;  product         2    2[BANK0 ] unsigned int 
  8176 ;; Return value:  Size  Location     Type
  8177 ;;                  2    0[BANK0 ] unsigned int 
  8178 ;; Registers used:
  8179 ;;		wreg, status,2, status,0
  8180 ;; Tracked objects:
  8181 ;;		On entry : 300/0
  8182 ;;		On exit  : 300/0
  8183 ;;		Unchanged: 0/0
  8184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8185 ;;      Params:         0       2       0       0       0
  8186 ;;      Locals:         0       5       0       0       0
  8187 ;;      Temps:          0       0       0       0       0
  8188 ;;      Totals:         0       7       0       0       0
  8189 ;;Total ram usage:        7 bytes
  8190 ;; Hardware stack levels used: 1
  8191 ;; Hardware stack levels required when called: 1
  8192 ;; This function calls:
  8193 ;;		Nothing
  8194 ;; This function is called by:
  8195 ;;		___flmul
  8196 ;; This function uses a non-reentrant model
  8197 ;;
  8198                           
  8199                           
  8200                           ;psect for function __Umul8_16
  8201  0517                     __Umul8_16:
  8202                           
  8203                           ;incstack = 0
  8204                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8205                           ;__Umul8_16@multiplier stored from wreg
  8206  0517  00A6               	movwf	__Umul8_16@multiplier
  8207  0518  01A2               	clrf	__Umul8_16@product
  8208  0519  01A3               	clrf	__Umul8_16@product+1
  8209  051A  0820               	movf	__Umul8_16@multiplicand,w
  8210  051B  00A4               	movwf	__Umul8_16@word_mpld
  8211  051C  01A5               	clrf	__Umul8_16@word_mpld+1
  8212  051D                     l6056:
  8213  051D  1C26               	btfss	__Umul8_16@multiplier,0
  8214  051E  2D25               	goto	l6060
  8215  051F  0824               	movf	__Umul8_16@word_mpld,w
  8216  0520  07A2               	addwf	__Umul8_16@product,f
  8217  0521  1803               	skipnc
  8218  0522  0AA3               	incf	__Umul8_16@product+1,f
  8219  0523  0825               	movf	__Umul8_16@word_mpld+1,w
  8220  0524  07A3               	addwf	__Umul8_16@product+1,f
  8221  0525                     l6060:
  8222  0525  1003               	clrc
  8223  0526  0DA4               	rlf	__Umul8_16@word_mpld,f
  8224  0527  0DA5               	rlf	__Umul8_16@word_mpld+1,f
  8225  0528  1003               	clrc
  8226  0529  0CA6               	rrf	__Umul8_16@multiplier,f
  8227  052A  0826               	movf	__Umul8_16@multiplier,w
  8228  052B  1D03               	btfss	3,2
  8229  052C  2D1D               	goto	l6056
  8230  052D  0823               	movf	__Umul8_16@product+1,w
  8231  052E  00A1               	movwf	?__Umul8_16+1
  8232  052F  0822               	movf	__Umul8_16@product,w
  8233  0530  00A0               	movwf	?__Umul8_16
  8234  0531  0008               	return
  8235  0532                     __end_of__Umul8_16:
  8236  0532                     __ptext51:	
  8237 ;; *************** function _EEPROM_24C1025_Write_Int *****************
  8238 ;; Defined at:
  8239 ;;		line 352 in file "EEPROM_24C1025.c"
  8240 ;; Parameters:    Size  Location     Type
  8241 ;;  chip_add        1    wreg     unsigned char 
  8242 ;;  mem_add         4    8[BANK1 ] unsigned long 
  8243 ;;  data            2   12[BANK1 ] int 
  8244 ;; Auto vars:     Size  Location     Type
  8245 ;;  chip_add        1   14[BANK1 ] unsigned char 
  8246 ;;  local           2   15[BANK1 ] unsigned char [2]
  8247 ;; Return value:  Size  Location     Type
  8248 ;;                  1    wreg      void 
  8249 ;; Registers used:
  8250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8251 ;; Tracked objects:
  8252 ;;		On entry : 100/300
  8253 ;;		On exit  : 0/0
  8254 ;;		Unchanged: 0/0
  8255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8256 ;;      Params:         0       0       6       0       0
  8257 ;;      Locals:         0       0       3       0       0
  8258 ;;      Temps:          0       0       0       0       0
  8259 ;;      Totals:         0       0       9       0       0
  8260 ;;Total ram usage:        9 bytes
  8261 ;; Hardware stack levels used: 1
  8262 ;; Hardware stack levels required when called: 4
  8263 ;; This function calls:
  8264 ;;		_EEPROM_24C1025_Write_Buffer
  8265 ;; This function is called by:
  8266 ;;		_EEPROM_24C1025_Fill_All
  8267 ;;		_Decodify_Command
  8268 ;;		_Save_Log
  8269 ;; This function uses a non-reentrant model
  8270 ;;
  8271                           
  8272                           
  8273                           ;psect for function _EEPROM_24C1025_Write_Int
  8274  0532                     _EEPROM_24C1025_Write_Int:
  8275                           
  8276                           ;incstack = 0
  8277                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  8278                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
  8279  0532  1303               	bcf	3,6	;RP1=0, select bank1
  8280  0533  00AE               	movwf	EEPROM_24C1025_Write_Int@chip_add^(0+128)
  8281                           
  8282                           ;EEPROM_24C1025.c: 353:      char local[2];;EEPROM_24C1025.c: 354:      local[0]=((char 
      +                          *)&data)[1];
  8283  0534  082D               	movf	(EEPROM_24C1025_Write_Int@data^(0+128)+1),w
  8284  0535  00AF               	movwf	EEPROM_24C1025_Write_Int@local^(0+128)
  8285                           
  8286                           ;EEPROM_24C1025.c: 355:      local[1]=((char *)&data)[0];
  8287  0536  082C               	movf	EEPROM_24C1025_Write_Int@data^(0+128),w
  8288  0537  00B0               	movwf	(EEPROM_24C1025_Write_Int@local^(0+128)+1)
  8289                           
  8290                           ;EEPROM_24C1025.c: 356:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
  8291  0538  082B               	movf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128),w
  8292  0539  1283               	bcf	3,5	;RP0=0, select bank0
  8293  053A  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  8294  053B  1683               	bsf	3,5	;RP0=1, select bank1
  8295  053C  082A               	movf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128),w
  8296  053D  1283               	bcf	3,5	;RP0=0, select bank0
  8297  053E  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  8298  053F  1683               	bsf	3,5	;RP0=1, select bank1
  8299  0540  0829               	movf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128),w
  8300  0541  1283               	bcf	3,5	;RP0=0, select bank0
  8301  0542  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  8302  0543  1683               	bsf	3,5	;RP0=1, select bank1
  8303  0544  0828               	movf	EEPROM_24C1025_Write_Int@mem_add^(0+128),w
  8304  0545  1283               	bcf	3,5	;RP0=0, select bank0
  8305  0546  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  8306  0547  3002               	movlw	2
  8307  0548  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  8308  0549  30AF               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
  8309  054A  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  8310  054B  01B0               	clrf	EEPROM_24C1025_Write_Buffer@data+1
  8311  054C  1683               	bsf	3,5	;RP0=1, select bank1
  8312  054D  082E               	movf	EEPROM_24C1025_Write_Int@chip_add^(0+128),w
  8313  054E  160A  118A  2E87   	ljmp	_EEPROM_24C1025_Write_Buffer
  8314  0551                     __end_of_EEPROM_24C1025_Write_Int:
  8315  0551                     __ptext50:	
  8316 ;; *************** function _EEPROM_24C1025_Fill_All *****************
  8317 ;; Defined at:
  8318 ;;		line 367 in file "EEPROM_24C1025.c"
  8319 ;; Parameters:    Size  Location     Type
  8320 ;;  chip_add        1    wreg     unsigned char 
  8321 ;;  value           2   17[BANK1 ] unsigned int 
  8322 ;; Auto vars:     Size  Location     Type
  8323 ;;  chip_add        1   19[BANK1 ] unsigned char 
  8324 ;;  mem_add         4   20[BANK1 ] unsigned long 
  8325 ;; Return value:  Size  Location     Type
  8326 ;;                  1    wreg      void 
  8327 ;; Registers used:
  8328 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8329 ;; Tracked objects:
  8330 ;;		On entry : 300/300
  8331 ;;		On exit  : 0/0
  8332 ;;		Unchanged: 0/0
  8333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8334 ;;      Params:         0       0       2       0       0
  8335 ;;      Locals:         0       0       5       0       0
  8336 ;;      Temps:          0       0       0       0       0
  8337 ;;      Totals:         0       0       7       0       0
  8338 ;;Total ram usage:        7 bytes
  8339 ;; Hardware stack levels used: 1
  8340 ;; Hardware stack levels required when called: 5
  8341 ;; This function calls:
  8342 ;;		_EEPROM_24C1025_Write_Int
  8343 ;; This function is called by:
  8344 ;;		_Decodify_Command
  8345 ;; This function uses a non-reentrant model
  8346 ;;
  8347                           
  8348                           
  8349                           ;psect for function _EEPROM_24C1025_Fill_All
  8350  0551                     _EEPROM_24C1025_Fill_All:
  8351                           
  8352                           ;incstack = 0
  8353                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  8354                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
  8355  0551  1303               	bcf	3,6	;RP1=0, select bank1
  8356  0552  00B3               	movwf	EEPROM_24C1025_Fill_All@chip_add^(0+128)
  8357                           
  8358                           ;EEPROM_24C1025.c: 368:      unsigned long mem_add;;EEPROM_24C1025.c: 369:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
  8359  0553  01B4               	clrf	EEPROM_24C1025_Fill_All@mem_add^(0+128)
  8360  0554  01B5               	clrf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128)
  8361  0555  01B6               	clrf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128)
  8362  0556  01B7               	clrf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128)
  8363  0557                     l6844:
  8364                           
  8365                           ;EEPROM_24C1025.c: 370:         {;EEPROM_24C1025.c: 371:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
  8366  0557  1683               	bsf	3,5	;RP0=1, select bank1
  8367  0558  1303               	bcf	3,6	;RP1=0, select bank1
  8368  0559  0837               	movf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),w
  8369  055A  00AB               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
  8370  055B  0836               	movf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),w
  8371  055C  00AA               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
  8372  055D  0835               	movf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),w
  8373  055E  00A9               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
  8374  055F  0834               	movf	EEPROM_24C1025_Fill_All@mem_add^(0+128),w
  8375  0560  00A8               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
  8376  0561  0832               	movf	(EEPROM_24C1025_Fill_All@value+1)^(0+128),w
  8377  0562  00AD               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  8378  0563  0831               	movf	EEPROM_24C1025_Fill_All@value^(0+128),w
  8379  0564  00AC               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  8380  0565  0833               	movf	EEPROM_24C1025_Fill_All@chip_add^(0+128),w
  8381  0566  2532  120A  118A   	fcall	_EEPROM_24C1025_Write_Int
  8382  0569  0064               	clrwdt	;# 
  8383                           
  8384                           ;EEPROM_24C1025.c: 373:         }
  8385  056A  3002               	movlw	2
  8386  056B  1683               	bsf	3,5	;RP0=1, select bank1
  8387  056C  1303               	bcf	3,6	;RP1=0, select bank1
  8388  056D  07B4               	addwf	EEPROM_24C1025_Fill_All@mem_add^(0+128),f
  8389  056E  3001               	movlw	1
  8390  056F  1803               	skipnc
  8391  0570  07B5               	addwf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),f
  8392  0571  1803               	skipnc
  8393  0572  07B6               	addwf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),f
  8394  0573  1803               	skipnc
  8395  0574  07B7               	addwf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),f
  8396  0575  0837               	movf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),w
  8397  0576  1D03               	btfss	3,2
  8398  0577  0008               	return
  8399  0578  0836               	movf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),w
  8400  0579  1D03               	btfss	3,2
  8401  057A  0008               	return
  8402  057B  3004               	movlw	4
  8403  057C  0235               	subwf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),w
  8404  057D  1D03               	skipz
  8405  057E  2D81               	goto	u6083
  8406  057F  3000               	movlw	0
  8407  0580  0234               	subwf	EEPROM_24C1025_Fill_All@mem_add^(0+128),w
  8408  0581                     u6083:
  8409  0581  1803               	btfsc	3,0
  8410  0582  0008               	return
  8411  0583  2D57               	goto	l6844
  8412  0584                     __end_of_EEPROM_24C1025_Fill_All:
  8413  0584                     __ptext44:	
  8414 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
  8415 ;; Defined at:
  8416 ;;		line 346 in file "EEPROM_24C1025.c"
  8417 ;; Parameters:    Size  Location     Type
  8418 ;;  chip_add        1    wreg     unsigned char 
  8419 ;;  mem_add         4   21[BANK0 ] unsigned long 
  8420 ;; Auto vars:     Size  Location     Type
  8421 ;;  chip_add        1   25[BANK0 ] unsigned char 
  8422 ;;  data            1   26[BANK0 ] unsigned char 
  8423 ;; Return value:  Size  Location     Type
  8424 ;;                  1    wreg      unsigned char 
  8425 ;; Registers used:
  8426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8427 ;; Tracked objects:
  8428 ;;		On entry : 300/300
  8429 ;;		On exit  : 300/0
  8430 ;;		Unchanged: 0/0
  8431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8432 ;;      Params:         0       4       0       0       0
  8433 ;;      Locals:         0       2       0       0       0
  8434 ;;      Temps:          0       0       0       0       0
  8435 ;;      Totals:         0       6       0       0       0
  8436 ;;Total ram usage:        6 bytes
  8437 ;; Hardware stack levels used: 1
  8438 ;; Hardware stack levels required when called: 4
  8439 ;; This function calls:
  8440 ;;		_EEPROM_24C1025_Read_Buffer
  8441 ;; This function is called by:
  8442 ;;		_Decodify_Command
  8443 ;; This function uses a non-reentrant model
  8444 ;;
  8445                           
  8446                           
  8447                           ;psect for function _EEPROM_24C1025_Read_Byte
  8448  0584                     _EEPROM_24C1025_Read_Byte:
  8449                           
  8450                           ;incstack = 0
  8451                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  8452                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
  8453  0584  1283               	bcf	3,5	;RP0=0, select bank0
  8454  0585  1303               	bcf	3,6	;RP1=0, select bank0
  8455  0586  00B9               	movwf	EEPROM_24C1025_Read_Byte@chip_add
  8456                           
  8457                           ;EEPROM_24C1025.c: 347:     char data;;EEPROM_24C1025.c: 348:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
  8458  0587  0838               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
  8459  0588  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
  8460  0589  0837               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
  8461  058A  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
  8462  058B  0836               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
  8463  058C  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
  8464  058D  0835               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
  8465  058E  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
  8466  058F  303A               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
  8467  0590  01AE               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
  8468  0591  0AAE               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
  8469  0592  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
  8470  0593  0839               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
  8471  0594  160A  118A  24A9   	fcall	_EEPROM_24C1025_Read_Buffer
  8472                           
  8473                           ;EEPROM_24C1025.c: 349:     return data;
  8474  0597  1283               	bcf	3,5	;RP0=0, select bank0
  8475  0598  1303               	bcf	3,6	;RP1=0, select bank0
  8476  0599  083A               	movf	EEPROM_24C1025_Read_Byte@data,w
  8477  059A  0008               	return
  8478  059B                     __end_of_EEPROM_24C1025_Read_Byte:
  8479  059B                     __ptext43:	
  8480 ;; *************** function _EEPROM_24C1025_Read_Int *****************
  8481 ;; Defined at:
  8482 ;;		line 360 in file "EEPROM_24C1025.c"
  8483 ;; Parameters:    Size  Location     Type
  8484 ;;  chip_add        1    wreg     unsigned char 
  8485 ;;  mem_add         4   21[BANK0 ] unsigned long 
  8486 ;; Auto vars:     Size  Location     Type
  8487 ;;  chip_add        1   25[BANK0 ] unsigned char 
  8488 ;;  data            2   26[BANK0 ] unsigned char [2]
  8489 ;; Return value:  Size  Location     Type
  8490 ;;                  2   21[BANK0 ] unsigned int 
  8491 ;; Registers used:
  8492 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8493 ;; Tracked objects:
  8494 ;;		On entry : 300/300
  8495 ;;		On exit  : 300/0
  8496 ;;		Unchanged: 0/0
  8497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8498 ;;      Params:         0       4       0       0       0
  8499 ;;      Locals:         0       3       0       0       0
  8500 ;;      Temps:          0       0       0       0       0
  8501 ;;      Totals:         0       7       0       0       0
  8502 ;;Total ram usage:        7 bytes
  8503 ;; Hardware stack levels used: 1
  8504 ;; Hardware stack levels required when called: 4
  8505 ;; This function calls:
  8506 ;;		_EEPROM_24C1025_Read_Buffer
  8507 ;; This function is called by:
  8508 ;;		_Decodify_Command
  8509 ;; This function uses a non-reentrant model
  8510 ;;
  8511                           
  8512                           
  8513                           ;psect for function _EEPROM_24C1025_Read_Int
  8514  059B                     _EEPROM_24C1025_Read_Int:
  8515                           
  8516                           ;incstack = 0
  8517                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  8518                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
  8519  059B  1283               	bcf	3,5	;RP0=0, select bank0
  8520  059C  1303               	bcf	3,6	;RP1=0, select bank0
  8521  059D  00B9               	movwf	EEPROM_24C1025_Read_Int@chip_add
  8522                           
  8523                           ;EEPROM_24C1025.c: 361:     char data[2];;EEPROM_24C1025.c: 362:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
  8524  059E  0838               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
  8525  059F  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
  8526  05A0  0837               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
  8527  05A1  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
  8528  05A2  0836               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
  8529  05A3  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
  8530  05A4  0835               	movf	EEPROM_24C1025_Read_Int@mem_add,w
  8531  05A5  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
  8532  05A6  3002               	movlw	2
  8533  05A7  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
  8534  05A8  303A               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
  8535  05A9  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
  8536  05AA  0839               	movf	EEPROM_24C1025_Read_Int@chip_add,w
  8537  05AB  160A  118A  24A9   	fcall	_EEPROM_24C1025_Read_Buffer
  8538                           
  8539                           ;EEPROM_24C1025.c: 363:     return (data[0]<<8)+data[1];
  8540  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  8541  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  8542  05B0  083A               	movf	EEPROM_24C1025_Read_Int@data,w
  8543  05B1  00B6               	movwf	?_EEPROM_24C1025_Read_Int+1
  8544  05B2  083B               	movf	EEPROM_24C1025_Read_Int@data+1,w
  8545  05B3  00B5               	movwf	?_EEPROM_24C1025_Read_Int
  8546  05B4  0008               	return
  8547  05B5                     __end_of_EEPROM_24C1025_Read_Int:
  8548  05B5                     __ptext41:	
  8549 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
  8550 ;; Defined at:
  8551 ;;		line 341 in file "EEPROM_24C1025.c"
  8552 ;; Parameters:    Size  Location     Type
  8553 ;;  chip_add        1    wreg     unsigned char 
  8554 ;;  mem_add         4   23[BANK0 ] unsigned long 
  8555 ;;  data            1   27[BANK0 ] unsigned char 
  8556 ;; Auto vars:     Size  Location     Type
  8557 ;;  chip_add        1   28[BANK0 ] unsigned char 
  8558 ;; Return value:  Size  Location     Type
  8559 ;;                  1    wreg      void 
  8560 ;; Registers used:
  8561 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8562 ;; Tracked objects:
  8563 ;;		On entry : 300/300
  8564 ;;		On exit  : 0/0
  8565 ;;		Unchanged: 0/0
  8566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8567 ;;      Params:         0       5       0       0       0
  8568 ;;      Locals:         0       1       0       0       0
  8569 ;;      Temps:          0       0       0       0       0
  8570 ;;      Totals:         0       6       0       0       0
  8571 ;;Total ram usage:        6 bytes
  8572 ;; Hardware stack levels used: 1
  8573 ;; Hardware stack levels required when called: 4
  8574 ;; This function calls:
  8575 ;;		_EEPROM_24C1025_Write_Buffer
  8576 ;; This function is called by:
  8577 ;;		_Decodify_Command
  8578 ;; This function uses a non-reentrant model
  8579 ;;
  8580                           
  8581                           
  8582                           ;psect for function _EEPROM_24C1025_Write_Byte
  8583  05B5                     _EEPROM_24C1025_Write_Byte:
  8584                           
  8585                           ;incstack = 0
  8586                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  8587                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
  8588  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  8589  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  8590  05B7  00BC               	movwf	EEPROM_24C1025_Write_Byte@chip_add
  8591                           
  8592                           ;EEPROM_24C1025.c: 342:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
  8593  05B8  083A               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
  8594  05B9  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  8595  05BA  0839               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
  8596  05BB  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  8597  05BC  0838               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
  8598  05BD  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  8599  05BE  0837               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
  8600  05BF  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  8601  05C0  303B               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
  8602  05C1  01AE               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
  8603  05C2  0AAE               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
  8604  05C3  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  8605  05C4  01B0               	clrf	EEPROM_24C1025_Write_Buffer@data+1
  8606  05C5  083C               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
  8607  05C6  160A  118A  2E87   	ljmp	_EEPROM_24C1025_Write_Buffer
  8608  05C9                     __end_of_EEPROM_24C1025_Write_Byte:
  8609  05C9                     __ptext38:	
  8610 ;; *************** function _EEPROM_Read_String *****************
  8611 ;; Defined at:
  8612 ;;		line 109 in file "eeprom.c"
  8613 ;; Parameters:    Size  Location     Type
  8614 ;;  addr            1    wreg     unsigned char 
  8615 ;;  dado            1    3[BANK0 ] PTR unsigned char 
  8616 ;;		 -> buffer(33), 
  8617 ;; Auto vars:     Size  Location     Type
  8618 ;;  addr            1    4[BANK0 ] unsigned char 
  8619 ;;  c               1    5[BANK0 ] unsigned char 
  8620 ;; Return value:  Size  Location     Type
  8621 ;;                  1    wreg      void 
  8622 ;; Registers used:
  8623 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8624 ;; Tracked objects:
  8625 ;;		On entry : 300/300
  8626 ;;		On exit  : B00/800
  8627 ;;		Unchanged: 0/0
  8628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8629 ;;      Params:         0       1       0       0       0
  8630 ;;      Locals:         0       2       0       0       0
  8631 ;;      Temps:          0       0       0       0       0
  8632 ;;      Totals:         0       3       0       0       0
  8633 ;;Total ram usage:        3 bytes
  8634 ;; Hardware stack levels used: 1
  8635 ;; Hardware stack levels required when called: 2
  8636 ;; This function calls:
  8637 ;;		_EEPROM_Read_Byte
  8638 ;; This function is called by:
  8639 ;;		_Decodify_Command
  8640 ;; This function uses a non-reentrant model
  8641 ;;
  8642                           
  8643                           
  8644                           ;psect for function _EEPROM_Read_String
  8645  05C9                     _EEPROM_Read_String:
  8646                           
  8647                           ;incstack = 0
  8648                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8649                           ;EEPROM_Read_String@addr stored from wreg
  8650  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  8651  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  8652  05CB  00A4               	movwf	EEPROM_Read_String@addr
  8653  05CC                     l662:	
  8654                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
  8655                           
  8656                           
  8657                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
  8658  05CC  0824               	movf	EEPROM_Read_String@addr,w
  8659  05CD  160A  118A  2266  120A  118A  	fcall	_EEPROM_Read_Byte
  8660  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  8661  05D3  00A5               	movwf	EEPROM_Read_String@c
  8662  05D4  0AA4               	incf	EEPROM_Read_String@addr,f
  8663                           
  8664                           ;eeprom.c: 114:         *(dado++)=c;
  8665  05D5  0823               	movf	EEPROM_Read_String@dado,w
  8666  05D6  0084               	movwf	4
  8667  05D7  0825               	movf	EEPROM_Read_String@c,w
  8668  05D8  1783               	bsf	3,7	;select IRP bank2
  8669  05D9  0080               	movwf	0
  8670  05DA  0AA3               	incf	EEPROM_Read_String@dado,f
  8671                           
  8672                           ;eeprom.c: 116:       }while(c);
  8673  05DB  0825               	movf	EEPROM_Read_String@c,w
  8674  05DC  1903               	btfsc	3,2
  8675  05DD  0008               	return
  8676  05DE  2DCC               	goto	l662
  8677  05DF                     __end_of_EEPROM_Read_String:
  8678  05DF                     __ptext37:	
  8679 ;; *************** function _EEPROM_Write_Byte *****************
  8680 ;; Defined at:
  8681 ;;		line 21 in file "eeprom.c"
  8682 ;; Parameters:    Size  Location     Type
  8683 ;;  addr            1    wreg     unsigned char 
  8684 ;;  dado            1    0[BANK0 ] unsigned char 
  8685 ;; Auto vars:     Size  Location     Type
  8686 ;;  addr            1    3[BANK0 ] unsigned char 
  8687 ;;  last_GIE        1    4[BANK0 ] unsigned char 
  8688 ;; Return value:  Size  Location     Type
  8689 ;;                  1    wreg      void 
  8690 ;; Registers used:
  8691 ;;		wreg, status,2, status,0
  8692 ;; Tracked objects:
  8693 ;;		On entry : 0/300
  8694 ;;		On exit  : 0/0
  8695 ;;		Unchanged: 0/0
  8696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8697 ;;      Params:         0       1       0       0       0
  8698 ;;      Locals:         0       2       0       0       0
  8699 ;;      Temps:          0       2       0       0       0
  8700 ;;      Totals:         0       5       0       0       0
  8701 ;;Total ram usage:        5 bytes
  8702 ;; Hardware stack levels used: 1
  8703 ;; Hardware stack levels required when called: 1
  8704 ;; This function calls:
  8705 ;;		Nothing
  8706 ;; This function is called by:
  8707 ;;		_Decodify_Command
  8708 ;;		_EEPROM_Write_Integer
  8709 ;;		_EEPROM_Write_String
  8710 ;; This function uses a non-reentrant model
  8711 ;;
  8712                           
  8713                           
  8714                           ;psect for function _EEPROM_Write_Byte
  8715  05DF                     _EEPROM_Write_Byte:
  8716                           
  8717                           ;incstack = 0
  8718                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
  8719                           ;EEPROM_Write_Byte@addr stored from wreg
  8720  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  8721  05E0  1303               	bcf	3,6	;RP1=0, select bank0
  8722  05E1  00A3               	movwf	EEPROM_Write_Byte@addr
  8723                           
  8724                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
  8725  05E2  3014               	movlw	20
  8726  05E3  1683               	bsf	3,5	;RP0=1, select bank3
  8727  05E4  1703               	bsf	3,6	;RP1=1, select bank3
  8728  05E5  00AC               	movwf	_Delay_Led_Memory^(0+384)	;volatile
  8729  05E6  01AD               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
  8730  05E7                     l630:	
  8731                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
  8732                           
  8733  05E7  188C               	btfsc	12,1	;volsfr
  8734  05E8  2DE7               	goto	l630
  8735                           
  8736                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
  8737  05E9  1F8B               	btfss	11,7	;volatile
  8738  05EA  2DF0               	goto	l4590
  8739                           
  8740                           ;eeprom.c: 28:           last_GIE=1;
  8741  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  8742  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  8743  05ED  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  8744  05EE  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
  8745  05EF  2DF3               	goto	l4592
  8746  05F0                     l4590:
  8747                           
  8748                           ;eeprom.c: 30:           last_GIE=0;
  8749  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  8750  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  8751  05F2  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  8752  05F3                     l4592:
  8753                           
  8754                           ;eeprom.c: 32:        EEADR=addr;
  8755  05F3  0823               	movf	EEPROM_Write_Byte@addr,w
  8756  05F4  1703               	bsf	3,6	;RP1=1, select bank2
  8757  05F5  008D               	movwf	13	;volatile
  8758                           
  8759                           ;eeprom.c: 33:        EEDATA=dado;
  8760  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  8761  05F7  0820               	movf	EEPROM_Write_Byte@dado,w
  8762  05F8  1703               	bsf	3,6	;RP1=1, select bank2
  8763  05F9  008C               	movwf	12	;volatile
  8764                           
  8765                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
  8766  05FA  1683               	bsf	3,5	;RP0=1, select bank3
  8767  05FB  138C               	bcf	12,7	;volsfr
  8768                           
  8769                           ;eeprom.c: 35:        EECON1bits.WREN=1;
  8770  05FC  150C               	bsf	12,2	;volsfr
  8771                           
  8772                           ;eeprom.c: 36:        INTCONbits.GIE=0;
  8773  05FD  138B               	bcf	11,7	;volatile
  8774                           
  8775                           ;eeprom.c: 37:        EECON2=0x55;
  8776  05FE  3055               	movlw	85
  8777  05FF  008D               	movwf	13	;volsfr
  8778                           
  8779                           ;eeprom.c: 38:        EECON2=0xAA;
  8780  0600  30AA               	movlw	170
  8781  0601  008D               	movwf	13	;volsfr
  8782                           
  8783                           ;eeprom.c: 39:        EECON1bits.WR=1;
  8784  0602  148C               	bsf	12,1	;volsfr
  8785                           
  8786                           ;eeprom.c: 41:        if(last_GIE==1)
  8787  0603  1283               	bcf	3,5	;RP0=0, select bank0
  8788  0604  1303               	bcf	3,6	;RP1=0, select bank0
  8789  0605  0324               	decf	EEPROM_Write_Byte@last_GIE,w
  8790  0606  1D03               	btfss	3,2
  8791  0607  2E0A               	goto	l635
  8792                           
  8793                           ;eeprom.c: 42:           INTCONbits.GIE=1;
  8794  0608  178B               	bsf	11,7	;volatile
  8795  0609  2E0B               	goto	l636
  8796  060A                     l635:	
  8797                           ;eeprom.c: 43:        else
  8798                           
  8799                           
  8800                           ;eeprom.c: 44:           INTCONbits.GIE=0;
  8801  060A  138B               	bcf	11,7	;volatile
  8802  060B                     l636:
  8803                           
  8804                           ;eeprom.c: 46:        EECON1bits.WREN=0;
  8805  060B  1683               	bsf	3,5	;RP0=1, select bank3
  8806  060C  1703               	bsf	3,6	;RP1=1, select bank3
  8807  060D  110C               	bcf	12,2	;volsfr
  8808                           
  8809                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
  8810  060E  304E               	movlw	78
  8811  060F  1283               	bcf	3,5	;RP0=0, select bank0
  8812  0610  1303               	bcf	3,6	;RP1=0, select bank0
  8813  0611  00A2               	movwf	??_EEPROM_Write_Byte+1
  8814  0612  30EA               	movlw	234
  8815  0613  00A1               	movwf	??_EEPROM_Write_Byte
  8816  0614                     u6697:
  8817  0614  0BA1               	decfsz	??_EEPROM_Write_Byte,f
  8818  0615  2E14               	goto	u6697
  8819  0616  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
  8820  0617  2E14               	goto	u6697
  8821  0618  0000               	nop
  8822  0619  0008               	return
  8823  061A                     __end_of_EEPROM_Write_Byte:
  8824  061A                     __ptext36:	
  8825 ;; *************** function _EEPROM_Write_Integer *****************
  8826 ;; Defined at:
  8827 ;;		line 68 in file "eeprom.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;  addr            1    wreg     unsigned char 
  8830 ;;  dado            2    5[BANK0 ] unsigned int 
  8831 ;; Auto vars:     Size  Location     Type
  8832 ;;  addr            1    9[BANK0 ] unsigned char 
  8833 ;;  i               1   11[BANK0 ] unsigned char 
  8834 ;;  ptr             1   10[BANK0 ] PTR unsigned char 
  8835 ;;		 -> EEPROM_Write_Integer@dado(2), 
  8836 ;;  addr_memo       1    0        unsigned char 
  8837 ;; Return value:  Size  Location     Type
  8838 ;;                  1    wreg      void 
  8839 ;; Registers used:
  8840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8841 ;; Tracked objects:
  8842 ;;		On entry : 200/0
  8843 ;;		On exit  : 0/0
  8844 ;;		Unchanged: 0/0
  8845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8846 ;;      Params:         0       2       0       0       0
  8847 ;;      Locals:         0       3       0       0       0
  8848 ;;      Temps:          0       2       0       0       0
  8849 ;;      Totals:         0       7       0       0       0
  8850 ;;Total ram usage:        7 bytes
  8851 ;; Hardware stack levels used: 1
  8852 ;; Hardware stack levels required when called: 2
  8853 ;; This function calls:
  8854 ;;		_EEPROM_Write_Byte
  8855 ;; This function is called by:
  8856 ;;		_main
  8857 ;;		_Decodify_Command
  8858 ;; This function uses a non-reentrant model
  8859 ;;
  8860                           
  8861                           
  8862                           ;psect for function _EEPROM_Write_Integer
  8863  061A                     _EEPROM_Write_Integer:
  8864                           
  8865                           ;incstack = 0
  8866                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8867                           ;EEPROM_Write_Integer@addr stored from wreg
  8868  061A  1283               	bcf	3,5	;RP0=0, select bank0
  8869  061B  00A9               	movwf	EEPROM_Write_Integer@addr
  8870                           
  8871                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
  8872  061C  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
  8873  061D  00AA               	movwf	EEPROM_Write_Integer@ptr
  8874                           
  8875                           ;eeprom.c: 75:       for (i=0;i<2;i++)
  8876  061E  01AB               	clrf	EEPROM_Write_Integer@i
  8877  061F                     l5184:
  8878                           
  8879                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
  8880  061F  082A               	movf	EEPROM_Write_Integer@ptr,w
  8881  0620  0084               	movwf	4
  8882  0621  1383               	bcf	3,7	;select IRP bank0
  8883  0622  0800               	movf	0,w
  8884  0623  00A0               	movwf	EEPROM_Write_Byte@dado
  8885  0624  0829               	movf	EEPROM_Write_Integer@addr,w
  8886  0625  25DF  120A  118A   	fcall	_EEPROM_Write_Byte
  8887  0628  1283               	bcf	3,5	;RP0=0, select bank0
  8888  0629  1303               	bcf	3,6	;RP1=0, select bank0
  8889  062A  3002               	movlw	2
  8890  062B  0AAA               	incf	EEPROM_Write_Integer@ptr,f
  8891  062C  0AA9               	incf	EEPROM_Write_Integer@addr,f
  8892  062D  0AAB               	incf	EEPROM_Write_Integer@i,f
  8893  062E  022B               	subwf	EEPROM_Write_Integer@i,w
  8894  062F  1C03               	skipc
  8895  0630  2E1F               	goto	l5184
  8896                           
  8897                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
  8898  0631  304E               	movlw	78
  8899  0632  1283               	bcf	3,5	;RP0=0, select bank0
  8900  0633  1303               	bcf	3,6	;RP1=0, select bank0
  8901  0634  00A8               	movwf	??_EEPROM_Write_Integer+1
  8902  0635  30EA               	movlw	234
  8903  0636  00A7               	movwf	??_EEPROM_Write_Integer
  8904  0637                     u6687:
  8905  0637  0BA7               	decfsz	??_EEPROM_Write_Integer,f
  8906  0638  2E37               	goto	u6687
  8907  0639  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
  8908  063A  2E37               	goto	u6687
  8909  063B  0000               	nop
  8910  063C  0008               	return
  8911  063D                     __end_of_EEPROM_Write_Integer:
  8912  063D                     __ptext24:	
  8913 ;; *************** function _strlen *****************
  8914 ;; Defined at:
  8915 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
  8916 ;; Parameters:    Size  Location     Type
  8917 ;;  s               1    wreg     PTR const unsigned char 
  8918 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8919 ;; Auto vars:     Size  Location     Type
  8920 ;;  s               1    2[BANK0 ] PTR const unsigned char 
  8921 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8922 ;;  cp              1    3[BANK0 ] PTR const unsigned char 
  8923 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8924 ;; Return value:  Size  Location     Type
  8925 ;;                  2    0[BANK0 ] unsigned int 
  8926 ;; Registers used:
  8927 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8928 ;; Tracked objects:
  8929 ;;		On entry : 0/300
  8930 ;;		On exit  : B00/800
  8931 ;;		Unchanged: 0/0
  8932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8933 ;;      Params:         0       2       0       0       0
  8934 ;;      Locals:         0       2       0       0       0
  8935 ;;      Temps:          0       0       0       0       0
  8936 ;;      Totals:         0       4       0       0       0
  8937 ;;Total ram usage:        4 bytes
  8938 ;; Hardware stack levels used: 1
  8939 ;; Hardware stack levels required when called: 1
  8940 ;; This function calls:
  8941 ;;		Nothing
  8942 ;; This function is called by:
  8943 ;;		_Decodify_Command
  8944 ;;		_PROCULUS_VP_Write_String
  8945 ;; This function uses a non-reentrant model
  8946 ;;
  8947                           
  8948                           
  8949                           ;psect for function _strlen
  8950  063D                     _strlen:
  8951                           
  8952                           ;incstack = 0
  8953                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  8954                           ;strlen@s stored from wreg
  8955  063D  1283               	bcf	3,5	;RP0=0, select bank0
  8956  063E  1303               	bcf	3,6	;RP1=0, select bank0
  8957  063F  00A2               	movwf	strlen@s
  8958  0640  00A3               	movwf	strlen@cp
  8959  0641                     l6466:
  8960  0641  0823               	movf	strlen@cp,w
  8961  0642  0084               	movwf	4
  8962  0643  1783               	bsf	3,7	;select IRP bank2
  8963  0644  0800               	movf	0,w
  8964  0645  1903               	btfsc	3,2
  8965  0646  2E49               	goto	l6468
  8966  0647  0AA3               	incf	strlen@cp,f
  8967  0648  2E41               	goto	l6466
  8968  0649                     l6468:
  8969  0649  0822               	movf	strlen@s,w
  8970  064A  0223               	subwf	strlen@cp,w
  8971  064B  00A0               	movwf	?_strlen
  8972  064C  01A1               	clrf	?_strlen+1
  8973  064D  1BA0               	btfsc	?_strlen,7
  8974  064E  03A1               	decf	?_strlen+1,f
  8975  064F  0008               	return
  8976  0650                     __end_of_strlen:
  8977  0650                     PL4:
  8978  0650  0821               	movf	?__Umul8_16+1,w
  8979  0651  00EC               	movwf	___flmul@temp+1
  8980  0652  0820               	movf	?__Umul8_16,w
  8981  0653  00EB               	movwf	___flmul@temp
  8982  0654  00DC               	movwf	??___flmul
  8983  0655  086C               	movf	___flmul@temp+1,w
  8984  0656  00DD               	movwf	??___flmul+1
  8985  0657  01DE               	clrf	??___flmul+2
  8986  0658  01DF               	clrf	??___flmul+3
  8987  0659  085C               	movf	??___flmul,w
  8988  065A  07E3               	addwf	___flmul@grs,f
  8989  065B  085D               	movf	??___flmul+1,w
  8990  065C  1103               	clrz
  8991  065D  1803               	skipnc
  8992  065E  3E01               	addlw	1
  8993  065F  1D03               	btfss	3,2
  8994  0660  07E4               	addwf	___flmul@grs+1,f
  8995  0661  085E               	movf	??___flmul+2,w
  8996  0662  1103               	clrz
  8997  0663  1803               	skipnc
  8998  0664  3E01               	addlw	1
  8999  0665  1D03               	btfss	3,2
  9000  0666  07E5               	addwf	___flmul@grs+2,f
  9001  0667  085F               	movf	??___flmul+3,w
  9002  0668  1103               	clrz
  9003  0669  0008               	return
  9004  066A                     __end_ofPL4:
  9005  066A                     PL8:
  9006  066A  00EC               	movwf	___flmul@temp+1
  9007  066B  0820               	movf	?__Umul8_16,w
  9008  066C  00EB               	movwf	___flmul@temp
  9009  066D  00DC               	movwf	??___flmul
  9010  066E  086C               	movf	___flmul@temp+1,w
  9011  066F  00DD               	movwf	??___flmul+1
  9012  0670  01DE               	clrf	??___flmul+2
  9013  0671  01DF               	clrf	??___flmul+3
  9014  0672  0008               	return
  9015  0673                     __end_ofPL8:
  9016  0673                     PL14:
  9017  0673  085C               	movf	??___flmul,w
  9018  0674  07E7               	addwf	___flmul@prod,f
  9019  0675  085D               	movf	??___flmul+1,w
  9020  0676  1103               	clrz
  9021  0677  1803               	skipnc
  9022  0678  3E01               	addlw	1
  9023  0679  1D03               	btfss	3,2
  9024  067A  07E8               	addwf	___flmul@prod+1,f
  9025  067B  085E               	movf	??___flmul+2,w
  9026  067C  1103               	clrz
  9027  067D  1803               	skipnc
  9028  067E  3E01               	addlw	1
  9029  067F  1D03               	btfss	3,2
  9030  0680  07E9               	addwf	___flmul@prod+2,f
  9031  0681  085F               	movf	??___flmul+3,w
  9032  0682  1103               	clrz
  9033  0683  0008               	return
  9034  0684                     __end_ofPL14:
  9035  0684                     PL18:
  9036  0684  0821               	movf	?__Umul8_16+1,w
  9037  0685  00EC               	movwf	___flmul@temp+1
  9038  0686  0820               	movf	?__Umul8_16,w
  9039  0687  00EB               	movwf	___flmul@temp
  9040  0688  07E3               	addwf	___flmul@grs,f
  9041  0689  3001               	movlw	1
  9042  068A  1803               	skipnc
  9043  068B  07E4               	addwf	___flmul@grs+1,f
  9044  068C  1803               	skipnc
  9045  068D  07E5               	addwf	___flmul@grs+2,f
  9046  068E  1803               	skipnc
  9047  068F  07E6               	addwf	___flmul@grs+3,f
  9048  0690  086C               	movf	___flmul@temp+1,w
  9049  0691  07E7               	addwf	___flmul@prod,f
  9050  0692  3401               	retlw	1
  9051  0693                     __end_ofPL18:
  9052  0693                     PL26:
  9053  0693  1803               	skipnc
  9054  0694  07E8               	addwf	___flmul@prod+1,f
  9055  0695  1803               	skipnc
  9056  0696  07E9               	addwf	___flmul@prod+2,f
  9057  0697  1803               	skipnc
  9058  0698  07EA               	addwf	___flmul@prod+3,f
  9059  0699  0865               	movf	___flmul@grs+2,w
  9060  069A  00E6               	movwf	___flmul@grs+3
  9061  069B  0864               	movf	___flmul@grs+1,w
  9062  069C  00E5               	movwf	___flmul@grs+2
  9063  069D  0863               	movf	___flmul@grs,w
  9064  069E  00E4               	movwf	___flmul@grs+1
  9065  069F  01E3               	clrf	___flmul@grs
  9066  06A0  0008               	return
  9067  06A1                     __end_ofPL26:
  9068  06A1                     PL28:
  9069  06A1  01A2               	clrf	_Status1^(0+384)
  9070  06A2  0AA2               	incf	_Status1^(0+384),f
  9071  06A3  01A3               	clrf	(_Status1+1)^(0+384)
  9072  06A4  1303               	bcf	3,6	;RP1=0, select bank1
  9073  06A5  00E0               	movwf	(_SetPoint1+3)^(0+128)	;volatile
  9074  06A6  30C8               	movlw	200
  9075  06A7  00DF               	movwf	(_SetPoint1+2)^(0+128)	;volatile
  9076  06A8  01DE               	clrf	(_SetPoint1+1)^(0+128)	;volatile
  9077  06A9  01DD               	clrf	_SetPoint1^(0+128)	;volatile
  9078  06AA  300A               	movlw	10
  9079  06AB  01F3               	clrf	_Histerese1
  9080  06AC  0AF3               	incf	_Histerese1,f
  9081  06AD  0008               	return
  9082  06AE                     __end_ofPL28:
  9083  06AE                     PL66:
  9084  06AE  1803               	skipnc
  9085  06AF  3E01               	addlw	1
  9086  06B0  1D03               	btfss	3,2
  9087  06B1  07EA               	addwf	___flmul@prod+3,f
  9088  06B2  0856               	movf	___flmul@b+2,w
  9089  06B3  00A0               	movwf	__Umul8_16@multiplicand
  9090  06B4  0008               	return
  9091  06B5                     __end_ofPL66:
  9092  06B5                     __ptext35:	
  9093 ;; *************** function _EEPROM_Write_String *****************
  9094 ;; Defined at:
  9095 ;;		line 97 in file "eeprom.c"
  9096 ;; Parameters:    Size  Location     Type
  9097 ;;  addr            1    wreg     unsigned char 
  9098 ;;  dado            1    5[BANK0 ] PTR unsigned char 
  9099 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  9100 ;; Auto vars:     Size  Location     Type
  9101 ;;  addr            1    6[BANK0 ] unsigned char 
  9102 ;; Return value:  Size  Location     Type
  9103 ;;                  1    wreg      void 
  9104 ;; Registers used:
  9105 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9106 ;; Tracked objects:
  9107 ;;		On entry : 300/300
  9108 ;;		On exit  : 0/0
  9109 ;;		Unchanged: 0/0
  9110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9111 ;;      Params:         0       1       0       0       0
  9112 ;;      Locals:         0       1       0       0       0
  9113 ;;      Temps:          0       0       0       0       0
  9114 ;;      Totals:         0       2       0       0       0
  9115 ;;Total ram usage:        2 bytes
  9116 ;; Hardware stack levels used: 1
  9117 ;; Hardware stack levels required when called: 2
  9118 ;; This function calls:
  9119 ;;		_EEPROM_Write_Byte
  9120 ;; This function is called by:
  9121 ;;		_Decodify_Command
  9122 ;; This function uses a non-reentrant model
  9123 ;;
  9124                           
  9125                           
  9126                           ;psect for function _EEPROM_Write_String
  9127  06B5                     _EEPROM_Write_String:
  9128                           
  9129                           ;incstack = 0
  9130                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9131                           ;EEPROM_Write_String@addr stored from wreg
  9132  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  9133  06B6  1303               	bcf	3,6	;RP1=0, select bank0
  9134  06B7  00A6               	movwf	EEPROM_Write_String@addr
  9135  06B8                     l6890:	
  9136                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
  9137                           
  9138                           
  9139                           ;eeprom.c: 99:     while(*dado)
  9140  06B8  0825               	movf	EEPROM_Write_String@dado,w
  9141  06B9  0084               	movwf	4
  9142  06BA  1783               	bsf	3,7	;select IRP bank2
  9143  06BB  0800               	movf	0,w
  9144  06BC  1903               	btfsc	3,2
  9145  06BD  2EC9               	goto	l6892
  9146                           
  9147                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
  9148  06BE  26CD  120A  118A   	fcall	PL82	;call to abstracted procedure
  9149  06C1  25DF  120A  118A   	fcall	_EEPROM_Write_Byte
  9150                           
  9151                           ;eeprom.c: 102:      addr++;
  9152  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  9153  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  9154  06C6  0AA6               	incf	EEPROM_Write_String@addr,f
  9155                           
  9156                           ;eeprom.c: 103:      dado++;
  9157  06C7  0AA5               	incf	EEPROM_Write_String@dado,f
  9158  06C8  2EB8               	goto	l6890
  9159  06C9                     l6892:
  9160                           
  9161                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
  9162  06C9  26CD  120A  118A   	fcall	PL82	;call to abstracted procedure
  9163  06CC  2DDF               	ljmp	_EEPROM_Write_Byte
  9164  06CD                     __end_of_EEPROM_Write_String:
  9165  06CD                     PL82:
  9166  06CD  0825               	movf	EEPROM_Write_String@dado,w
  9167  06CE  0084               	movwf	4
  9168  06CF  0800               	movf	0,w
  9169  06D0  00A0               	movwf	EEPROM_Write_Byte@dado
  9170  06D1  0826               	movf	EEPROM_Write_String@addr,w
  9171  06D2  0008               	return
  9172  06D3                     __end_ofPL82:
  9173  06D3                     __ptext27:	
  9174 ;; *************** function _PROCULUS_Buzzer *****************
  9175 ;; Defined at:
  9176 ;;		line 223 in file "proculus.c"
  9177 ;; Parameters:    Size  Location     Type
  9178 ;;  time_ms_x_10    2   14[BANK1 ] unsigned int 
  9179 ;; Auto vars:     Size  Location     Type
  9180 ;;  vetor           2   16[BANK1 ] unsigned char [2]
  9181 ;; Return value:  Size  Location     Type
  9182 ;;                  1    wreg      void 
  9183 ;; Registers used:
  9184 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9185 ;; Tracked objects:
  9186 ;;		On entry : 300/100
  9187 ;;		On exit  : 300/0
  9188 ;;		Unchanged: 0/0
  9189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9190 ;;      Params:         0       0       2       0       0
  9191 ;;      Locals:         0       0       2       0       0
  9192 ;;      Temps:          0       0       0       0       0
  9193 ;;      Totals:         0       0       4       0       0
  9194 ;;Total ram usage:        4 bytes
  9195 ;; Hardware stack levels used: 1
  9196 ;; Hardware stack levels required when called: 4
  9197 ;; This function calls:
  9198 ;;		_PROCULUS_Control_Register_Write
  9199 ;;		___lwdiv
  9200 ;; This function is called by:
  9201 ;;		_Decodify_Command
  9202 ;; This function uses a non-reentrant model
  9203 ;;
  9204                           
  9205                           
  9206                           ;psect for function _PROCULUS_Buzzer
  9207  06D3                     _PROCULUS_Buzzer:
  9208                           
  9209                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
  9210                           
  9211                           ;incstack = 0
  9212                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9213  06D3  300A               	movlw	10
  9214  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  9215  06D5  00A0               	movwf	___lwdiv@divisor
  9216  06D6  01A1               	clrf	___lwdiv@divisor+1
  9217  06D7  1683               	bsf	3,5	;RP0=1, select bank1
  9218  06D8  082F               	movf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128),w
  9219  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  9220  06DA  00A3               	movwf	___lwdiv@dividend+1
  9221  06DB  1683               	bsf	3,5	;RP0=1, select bank1
  9222  06DC  082E               	movf	PROCULUS_Buzzer@time_ms_x_10^(0+128),w
  9223  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  9224  06DE  00A2               	movwf	___lwdiv@dividend
  9225  06DF  120A  158A  2760  120A  118A  	fcall	___lwdiv
  9226  06E4  0821               	movf	?___lwdiv+1,w
  9227  06E5  1683               	bsf	3,5	;RP0=1, select bank1
  9228  06E6  00AF               	movwf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128)
  9229  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  9230  06E8  0820               	movf	?___lwdiv,w
  9231  06E9  1683               	bsf	3,5	;RP0=1, select bank1
  9232  06EA  00AE               	movwf	PROCULUS_Buzzer@time_ms_x_10^(0+128)
  9233                           
  9234                           ;proculus.c: 226:      vetor[0]=0x02;
  9235  06EB  3002               	movlw	2
  9236  06EC  00B0               	movwf	PROCULUS_Buzzer@vetor^(0+128)
  9237                           
  9238                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
  9239  06ED  082E               	movf	PROCULUS_Buzzer@time_ms_x_10^(0+128),w
  9240  06EE  00B1               	movwf	(PROCULUS_Buzzer@vetor^(0+128)+1)
  9241                           
  9242                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
  9243  06EF  3002               	movlw	2
  9244  06F0  00AA               	movwf	PROCULUS_Control_Register_Write@size^(0+128)
  9245  06F1  30B0               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
  9246  06F2  2888               	ljmp	_PROCULUS_Control_Register_Write
  9247  06F3                     __end_of_PROCULUS_Buzzer:
  9248  06F3                     __ptext23:	
  9249 ;; *************** function _PROCULUS_VP_Write_String *****************
  9250 ;; Defined at:
  9251 ;;		line 205 in file "proculus.c"
  9252 ;; Parameters:    Size  Location     Type
  9253 ;;  vp              2   18[BANK1 ] unsigned int 
  9254 ;;  text            1   20[BANK1 ] PTR unsigned char 
  9255 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  9256 ;; Auto vars:     Size  Location     Type
  9257 ;;		None
  9258 ;; Return value:  Size  Location     Type
  9259 ;;                  1    wreg      void 
  9260 ;; Registers used:
  9261 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9262 ;; Tracked objects:
  9263 ;;		On entry : 300/100
  9264 ;;		On exit  : 300/0
  9265 ;;		Unchanged: 0/0
  9266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9267 ;;      Params:         0       0       3       0       0
  9268 ;;      Locals:         0       0       0       0       0
  9269 ;;      Temps:          0       0       0       0       0
  9270 ;;      Totals:         0       0       3       0       0
  9271 ;;Total ram usage:        3 bytes
  9272 ;; Hardware stack levels used: 1
  9273 ;; Hardware stack levels required when called: 4
  9274 ;; This function calls:
  9275 ;;		_PROCULUS_VP_Write
  9276 ;;		_strlen
  9277 ;; This function is called by:
  9278 ;;		_Decodify_Command
  9279 ;; This function uses a non-reentrant model
  9280 ;;
  9281                           
  9282                           
  9283                           ;psect for function _PROCULUS_VP_Write_String
  9284  06F3                     _PROCULUS_VP_Write_String:
  9285                           
  9286                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  9287                           
  9288                           ;incstack = 0
  9289                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9290  06F3  0833               	movf	(PROCULUS_VP_Write_String@vp+1)^(0+128),w
  9291  06F4  00AB               	movwf	(PROCULUS_VP_Write@vp+1)^(0+128)
  9292  06F5  0832               	movf	PROCULUS_VP_Write_String@vp^(0+128),w
  9293  06F6  00AA               	movwf	PROCULUS_VP_Write@vp^(0+128)
  9294  06F7  0834               	movf	PROCULUS_VP_Write_String@text^(0+128),w
  9295  06F8  00AC               	movwf	PROCULUS_VP_Write@vetor^(0+128)
  9296  06F9  3001               	movlw	1
  9297  06FA  00AD               	movwf	(PROCULUS_VP_Write@vetor+1)^(0+128)
  9298  06FB  0834               	movf	PROCULUS_VP_Write_String@text^(0+128),w
  9299  06FC  263D  120A  118A   	fcall	_strlen
  9300  06FF  0820               	movf	?_strlen,w
  9301  0700  3E01               	addlw	1
  9302  0701  1683               	bsf	3,5	;RP0=1, select bank1
  9303  0702  00AE               	movwf	PROCULUS_VP_Write@size^(0+128)
  9304  0703  283B               	ljmp	l6512
  9305  0704                     __end_of_PROCULUS_VP_Write_String:
  9306  0704                     __ptext18:	
  9307 ;; *************** function _USART_put_string *****************
  9308 ;; Defined at:
  9309 ;;		line 167 in file "usart.c"
  9310 ;; Parameters:    Size  Location     Type
  9311 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  9312 ;;		 -> STR_2(3), buffer(33), 
  9313 ;; Auto vars:     Size  Location     Type
  9314 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  9315 ;;		 -> STR_2(3), buffer(33), 
  9316 ;; Return value:  Size  Location     Type
  9317 ;;                  1    wreg      void 
  9318 ;; Registers used:
  9319 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9320 ;; Tracked objects:
  9321 ;;		On entry : 300/800
  9322 ;;		On exit  : 300/100
  9323 ;;		Unchanged: 0/0
  9324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9325 ;;      Params:         0       2       0       0       0
  9326 ;;      Locals:         0       2       0       0       0
  9327 ;;      Temps:          0       0       0       0       0
  9328 ;;      Totals:         0       4       0       0       0
  9329 ;;Total ram usage:        4 bytes
  9330 ;; Hardware stack levels used: 1
  9331 ;; Hardware stack levels required when called: 2
  9332 ;; This function calls:
  9333 ;;		_USART_putc
  9334 ;; This function is called by:
  9335 ;;		_Decodify_Command
  9336 ;;		_Send_Reply_OK
  9337 ;; This function uses a non-reentrant model
  9338 ;;
  9339                           
  9340                           
  9341                           ;psect for function _USART_put_string
  9342  0704                     _USART_put_string:
  9343  0704                     l6452:	
  9344                           ;incstack = 0
  9345                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9346                           
  9347                           
  9348                           ;usart.c: 167: void USART_put_string(char *vetor);usart.c: 168: {;usart.c: 169:     char
      +                           *ptr;;usart.c: 170:     ptr=vetor;
  9349  0704  0821               	movf	USART_put_string@vetor,w
  9350  0705  00A3               	movwf	USART_put_string@ptr
  9351  0706  0822               	movf	USART_put_string@vetor+1,w
  9352  0707  00A4               	movwf	USART_put_string@ptr+1
  9353  0708                     l6458:	
  9354                           ;usart.c: 171:     while(*ptr){
  9355                           
  9356                           
  9357                           ;usart.c: 171:     while(*ptr){
  9358  0708  0824               	movf	USART_put_string@ptr+1,w
  9359  0709  00FF               	movwf	127
  9360  070A  0823               	movf	USART_put_string@ptr,w
  9361  070B  0084               	movwf	4
  9362  070C  160A  118A  2000  120A  118A  	fcall	stringtab
  9363  0711  3A00               	xorlw	0
  9364  0712  1903               	btfsc	3,2
  9365  0713  2F25               	goto	l6460
  9366                           
  9367                           ;usart.c: 172:         USART_putc(*ptr);
  9368  0714  0824               	movf	USART_put_string@ptr+1,w
  9369  0715  00FF               	movwf	127
  9370  0716  0823               	movf	USART_put_string@ptr,w
  9371  0717  0084               	movwf	4
  9372  0718  160A  118A  2000  120A  118A  	fcall	stringtab
  9373  071D  2391  120A  118A   	fcall	_USART_putc
  9374                           
  9375                           ;usart.c: 173:         ptr++;
  9376  0720  1283               	bcf	3,5	;RP0=0, select bank0
  9377  0721  0AA3               	incf	USART_put_string@ptr,f
  9378  0722  1903               	skipnz
  9379  0723  0AA4               	incf	USART_put_string@ptr+1,f
  9380  0724  2F08               	goto	l6458
  9381  0725                     l6460:
  9382                           
  9383                           ;usart.c: 175:     USART_putc(*ptr);
  9384  0725  0824               	movf	USART_put_string@ptr+1,w
  9385  0726  00FF               	movwf	127
  9386  0727  0823               	movf	USART_put_string@ptr,w
  9387  0728  0084               	movwf	4
  9388  0729  160A  118A  2000  120A  118A  	fcall	stringtab
  9389  072E  2B91               	ljmp	_USART_putc
  9390  072F                     __end_of_USART_put_string:
  9391                           
  9392                           	psect	text32
  9393  11A6                     __ptext32:	
  9394 ;; *************** function _Load_Work *****************
  9395 ;; Defined at:
  9396 ;;		line 994 in file "SlaveLiofilizadorVer1.c"
  9397 ;; Parameters:    Size  Location     Type
  9398 ;;		None
  9399 ;; Auto vars:     Size  Location     Type
  9400 ;;		None
  9401 ;; Return value:  Size  Location     Type
  9402 ;;                  1    wreg      void 
  9403 ;; Registers used:
  9404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9405 ;; Tracked objects:
  9406 ;;		On entry : 300/100
  9407 ;;		On exit  : 300/200
  9408 ;;		Unchanged: 0/0
  9409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9410 ;;      Params:         0       0       0       0       0
  9411 ;;      Locals:         0       0       0       0       0
  9412 ;;      Temps:          0       0       4       0       0
  9413 ;;      Totals:         0       0       4       0       0
  9414 ;;Total ram usage:        4 bytes
  9415 ;; Hardware stack levels used: 1
  9416 ;; Hardware stack levels required when called: 3
  9417 ;; This function calls:
  9418 ;;		_EEPROM_Read_Byte
  9419 ;;		_EEPROM_Read_Integer
  9420 ;;		___fldiv
  9421 ;;		___xxtofl
  9422 ;; This function is called by:
  9423 ;;		_main
  9424 ;;		_Decodify_Command
  9425 ;; This function uses a non-reentrant model
  9426 ;;
  9427                           
  9428                           
  9429                           ;psect for function _Load_Work
  9430  11A6                     _Load_Work:
  9431  11A6                     l6850:	
  9432                           ;incstack = 0
  9433                           ; Regs used in _Load_Work: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9434                           
  9435                           
  9436                           ;SlaveLiofilizadorVer1.c: 997:      SetPoint0 = EEPROM_Read_Integer(0);
  9437  11A6  3000               	movlw	0
  9438  11A7  2287  160A  118A   	fcall	_EEPROM_Read_Integer
  9439  11AA  22A2               	fcall	PL16	;call to abstracted procedure
  9440  11AB  120A  158A  25B5  160A  118A  	fcall	___xxtofl
  9441  11B0  082D               	movf	?___xxtofl+3,w
  9442  11B1  1683               	bsf	3,5	;RP0=1, select bank1
  9443  11B2  00E4               	movwf	(_SetPoint0+3)^(0+128)	;volatile
  9444  11B3  1283               	bcf	3,5	;RP0=0, select bank0
  9445  11B4  082C               	movf	?___xxtofl+2,w
  9446  11B5  1683               	bsf	3,5	;RP0=1, select bank1
  9447  11B6  00E3               	movwf	(_SetPoint0+2)^(0+128)	;volatile
  9448  11B7  1283               	bcf	3,5	;RP0=0, select bank0
  9449  11B8  082B               	movf	?___xxtofl+1,w
  9450  11B9  1683               	bsf	3,5	;RP0=1, select bank1
  9451  11BA  00E2               	movwf	(_SetPoint0+1)^(0+128)	;volatile
  9452  11BB  1283               	bcf	3,5	;RP0=0, select bank0
  9453  11BC  082A               	movf	?___xxtofl,w
  9454  11BD  1683               	bsf	3,5	;RP0=1, select bank1
  9455  11BE  00E1               	movwf	_SetPoint0^(0+128)	;volatile
  9456                           
  9457                           ;SlaveLiofilizadorVer1.c: 998:      SetPoint0/=10;
  9458  11BF  22BB               	fcall	PL64	;call to abstracted procedure
  9459  11C0  0864               	movf	(_SetPoint0+3)^(0+128),w	;volatile
  9460  11C1  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9461  11C2  0863               	movf	(_SetPoint0+2)^(0+128),w	;volatile
  9462  11C3  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9463  11C4  0862               	movf	(_SetPoint0+1)^(0+128),w	;volatile
  9464  11C5  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9465  11C6  0861               	movf	_SetPoint0^(0+128),w	;volatile
  9466  11C7  00A4               	movwf	___fldiv@b^(0+128)
  9467  11C8  120A  158A  2623  160A  118A  	fcall	___fldiv
  9468  11CD  0823               	movf	(?___fldiv+3)^(0+128),w
  9469  11CE  00E4               	movwf	(_SetPoint0+3)^(0+128)	;volatile
  9470  11CF  0822               	movf	(?___fldiv+2)^(0+128),w
  9471  11D0  00E3               	movwf	(_SetPoint0+2)^(0+128)	;volatile
  9472  11D1  0821               	movf	(?___fldiv+1)^(0+128),w
  9473  11D2  00E2               	movwf	(_SetPoint0+1)^(0+128)	;volatile
  9474  11D3  0820               	movf	?___fldiv^(0+128),w
  9475  11D4  00E1               	movwf	_SetPoint0^(0+128)	;volatile
  9476                           
  9477                           ;SlaveLiofilizadorVer1.c: 999:      TempoON_0 = EEPROM_Read_Byte(2);
  9478  11D5  3002               	movlw	2
  9479  11D6  2266  160A  118A   	fcall	_EEPROM_Read_Byte
  9480  11D9  1683               	bsf	3,5	;RP0=1, select bank1
  9481  11DA  1303               	bcf	3,6	;RP1=0, select bank1
  9482  11DB  00EB               	movwf	_TempoON_0^(0+128)
  9483                           
  9484                           ;SlaveLiofilizadorVer1.c: 1000:      TempoOFF_0= EEPROM_Read_Byte(3);
  9485  11DC  3003               	movlw	3
  9486  11DD  2266  160A  118A   	fcall	_EEPROM_Read_Byte
  9487  11E0  1683               	bsf	3,5	;RP0=1, select bank1
  9488  11E1  1303               	bcf	3,6	;RP1=0, select bank1
  9489  11E2  00EA               	movwf	_TempoOFF_0^(0+128)
  9490                           
  9491                           ;SlaveLiofilizadorVer1.c: 1001:      Histerese0= EEPROM_Read_Byte(4);
  9492  11E3  3004               	movlw	4
  9493  11E4  2266               	fcall	_EEPROM_Read_Byte
  9494  11E5  1303               	bcf	3,6	;RP1=0, select bank0
  9495  11E6  00AA               	movwf	___xxtofl@val
  9496  11E7  3000               	movlw	0
  9497  11E8  01AB               	clrf	___xxtofl@val+1
  9498  11E9  01AC               	clrf	___xxtofl@val+2
  9499  11EA  01AD               	clrf	___xxtofl@val+3
  9500  11EB  120A  158A  25B5  160A  118A  	fcall	___xxtofl
  9501  11F0  082D               	movf	?___xxtofl+3,w
  9502  11F1  1683               	bsf	3,5	;RP0=1, select bank3
  9503  11F2  1703               	bsf	3,6	;RP1=1, select bank3
  9504  11F3  009B               	movwf	(_Histerese0+3)^(0+384)
  9505  11F4  1283               	bcf	3,5	;RP0=0, select bank0
  9506  11F5  1303               	bcf	3,6	;RP1=0, select bank0
  9507  11F6  082C               	movf	?___xxtofl+2,w
  9508  11F7  1683               	bsf	3,5	;RP0=1, select bank3
  9509  11F8  1703               	bsf	3,6	;RP1=1, select bank3
  9510  11F9  009A               	movwf	(_Histerese0+2)^(0+384)
  9511  11FA  1283               	bcf	3,5	;RP0=0, select bank0
  9512  11FB  1303               	bcf	3,6	;RP1=0, select bank0
  9513  11FC  082B               	movf	?___xxtofl+1,w
  9514  11FD  1683               	bsf	3,5	;RP0=1, select bank3
  9515  11FE  1703               	bsf	3,6	;RP1=1, select bank3
  9516  11FF  0099               	movwf	(_Histerese0+1)^(0+384)
  9517  1200  1283               	bcf	3,5	;RP0=0, select bank0
  9518  1201  1303               	bcf	3,6	;RP1=0, select bank0
  9519  1202  082A               	movf	?___xxtofl,w
  9520  1203  1683               	bsf	3,5	;RP0=1, select bank3
  9521  1204  1703               	bsf	3,6	;RP1=1, select bank3
  9522  1205  0098               	movwf	_Histerese0^(0+384)
  9523                           
  9524                           ;SlaveLiofilizadorVer1.c: 1002:      Status0 = EEPROM_Read_Integer(5);
  9525  1206  3005               	movlw	5
  9526  1207  2287  160A  118A   	fcall	_EEPROM_Read_Integer
  9527  120A  0824               	movf	?_EEPROM_Read_Integer+1,w
  9528  120B  1683               	bsf	3,5	;RP0=1, select bank3
  9529  120C  1703               	bsf	3,6	;RP1=1, select bank3
  9530  120D  00A5               	movwf	(_Status0+1)^(0+384)
  9531  120E  1283               	bcf	3,5	;RP0=0, select bank0
  9532  120F  1303               	bcf	3,6	;RP1=0, select bank0
  9533  1210  0823               	movf	?_EEPROM_Read_Integer,w
  9534  1211  1683               	bsf	3,5	;RP0=1, select bank3
  9535  1212  1703               	bsf	3,6	;RP1=1, select bank3
  9536  1213  00A4               	movwf	_Status0^(0+384)
  9537                           
  9538                           ;SlaveLiofilizadorVer1.c: 1004:      SetPoint1 = EEPROM_Read_Integer(7);
  9539  1214  3007               	movlw	7
  9540  1215  2287  160A  118A   	fcall	_EEPROM_Read_Integer
  9541  1218  22A2               	fcall	PL16	;call to abstracted procedure
  9542  1219  120A  158A  25B5  160A  118A  	fcall	___xxtofl
  9543  121E  082D               	movf	?___xxtofl+3,w
  9544  121F  1683               	bsf	3,5	;RP0=1, select bank1
  9545  1220  00E0               	movwf	(_SetPoint1+3)^(0+128)	;volatile
  9546  1221  1283               	bcf	3,5	;RP0=0, select bank0
  9547  1222  082C               	movf	?___xxtofl+2,w
  9548  1223  1683               	bsf	3,5	;RP0=1, select bank1
  9549  1224  00DF               	movwf	(_SetPoint1+2)^(0+128)	;volatile
  9550  1225  1283               	bcf	3,5	;RP0=0, select bank0
  9551  1226  082B               	movf	?___xxtofl+1,w
  9552  1227  1683               	bsf	3,5	;RP0=1, select bank1
  9553  1228  00DE               	movwf	(_SetPoint1+1)^(0+128)	;volatile
  9554  1229  1283               	bcf	3,5	;RP0=0, select bank0
  9555  122A  082A               	movf	?___xxtofl,w
  9556  122B  1683               	bsf	3,5	;RP0=1, select bank1
  9557  122C  00DD               	movwf	_SetPoint1^(0+128)	;volatile
  9558                           
  9559                           ;SlaveLiofilizadorVer1.c: 1005:      SetPoint1/=10;
  9560  122D  22BB               	fcall	PL64	;call to abstracted procedure
  9561  122E  0860               	movf	(_SetPoint1+3)^(0+128),w	;volatile
  9562  122F  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9563  1230  085F               	movf	(_SetPoint1+2)^(0+128),w	;volatile
  9564  1231  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9565  1232  085E               	movf	(_SetPoint1+1)^(0+128),w	;volatile
  9566  1233  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9567  1234  085D               	movf	_SetPoint1^(0+128),w	;volatile
  9568  1235  00A4               	movwf	___fldiv@b^(0+128)
  9569  1236  120A  158A  2623  160A  118A  	fcall	___fldiv
  9570  123B  0823               	movf	(?___fldiv+3)^(0+128),w
  9571  123C  00E0               	movwf	(_SetPoint1+3)^(0+128)	;volatile
  9572  123D  0822               	movf	(?___fldiv+2)^(0+128),w
  9573  123E  00DF               	movwf	(_SetPoint1+2)^(0+128)	;volatile
  9574  123F  0821               	movf	(?___fldiv+1)^(0+128),w
  9575  1240  00DE               	movwf	(_SetPoint1+1)^(0+128)	;volatile
  9576  1241  0820               	movf	?___fldiv^(0+128),w
  9577  1242  00DD               	movwf	_SetPoint1^(0+128)	;volatile
  9578                           
  9579                           ;SlaveLiofilizadorVer1.c: 1006:      TempoON_1 = EEPROM_Read_Byte(9);
  9580  1243  3009               	movlw	9
  9581  1244  2266  160A  118A   	fcall	_EEPROM_Read_Byte
  9582  1247  1683               	bsf	3,5	;RP0=1, select bank1
  9583  1248  1303               	bcf	3,6	;RP1=0, select bank1
  9584  1249  00E8               	movwf	_TempoON_1^(0+128)
  9585                           
  9586                           ;SlaveLiofilizadorVer1.c: 1007:      TempoOFF_1= EEPROM_Read_Byte(10);
  9587  124A  300A               	movlw	10
  9588  124B  2266  160A  118A   	fcall	_EEPROM_Read_Byte
  9589  124E  1683               	bsf	3,5	;RP0=1, select bank1
  9590  124F  1303               	bcf	3,6	;RP1=0, select bank1
  9591  1250  00E7               	movwf	_TempoOFF_1^(0+128)
  9592                           
  9593                           ;SlaveLiofilizadorVer1.c: 1008:      Histerese1= EEPROM_Read_Byte(11);
  9594  1251  300B               	movlw	11
  9595  1252  2266  160A  118A   	fcall	_EEPROM_Read_Byte
  9596  1255  00F3               	movwf	_Histerese1
  9597                           
  9598                           ;SlaveLiofilizadorVer1.c: 1009:      Status1 = EEPROM_Read_Integer(12);
  9599  1256  300C               	movlw	12
  9600  1257  2287  160A  118A   	fcall	_EEPROM_Read_Integer
  9601  125A  0824               	movf	?_EEPROM_Read_Integer+1,w
  9602  125B  1683               	bsf	3,5	;RP0=1, select bank3
  9603  125C  1703               	bsf	3,6	;RP1=1, select bank3
  9604  125D  00A3               	movwf	(_Status1+1)^(0+384)
  9605  125E  1283               	bcf	3,5	;RP0=0, select bank0
  9606  125F  1303               	bcf	3,6	;RP1=0, select bank0
  9607  1260  0823               	movf	?_EEPROM_Read_Integer,w
  9608  1261  1683               	bsf	3,5	;RP0=1, select bank3
  9609  1262  1703               	bsf	3,6	;RP1=1, select bank3
  9610  1263  00A2               	movwf	_Status1^(0+384)
  9611                           
  9612                           ;SlaveLiofilizadorVer1.c: 1011:      statuspower.bits=EEPROM_Read_Byte(14);
  9613  1264  300E               	movlw	14
  9614  1265  2A66               	ljmp	_EEPROM_Read_Byte
  9615  1266                     __end_of_Load_Work:
  9616  1266                     __ptext39:	
  9617 ;; *************** function _EEPROM_Read_Byte *****************
  9618 ;; Defined at:
  9619 ;;		line 52 in file "eeprom.c"
  9620 ;; Parameters:    Size  Location     Type
  9621 ;;  addr            1    wreg     unsigned char 
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;  addr            1    2[BANK0 ] unsigned char 
  9624 ;; Return value:  Size  Location     Type
  9625 ;;                  1    wreg      unsigned char 
  9626 ;; Registers used:
  9627 ;;		wreg
  9628 ;; Tracked objects:
  9629 ;;		On entry : 0/300
  9630 ;;		On exit  : 300/200
  9631 ;;		Unchanged: 0/0
  9632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9633 ;;      Params:         0       0       0       0       0
  9634 ;;      Locals:         0       1       0       0       0
  9635 ;;      Temps:          0       2       0       0       0
  9636 ;;      Totals:         0       3       0       0       0
  9637 ;;Total ram usage:        3 bytes
  9638 ;; Hardware stack levels used: 1
  9639 ;; Hardware stack levels required when called: 1
  9640 ;; This function calls:
  9641 ;;		Nothing
  9642 ;; This function is called by:
  9643 ;;		_Decodify_Command
  9644 ;;		_Load_Work
  9645 ;;		_EEPROM_Read_Integer
  9646 ;;		_EEPROM_Read_String
  9647 ;; This function uses a non-reentrant model
  9648 ;;
  9649                           
  9650                           
  9651                           ;psect for function _EEPROM_Read_Byte
  9652  1266                     _EEPROM_Read_Byte:
  9653                           
  9654                           ;incstack = 0
  9655                           ; Regs used in _EEPROM_Read_Byte: [wreg]
  9656                           ;EEPROM_Read_Byte@addr stored from wreg
  9657  1266  1283               	bcf	3,5	;RP0=0, select bank0
  9658  1267  1303               	bcf	3,6	;RP1=0, select bank0
  9659  1268  00A2               	movwf	EEPROM_Read_Byte@addr
  9660                           
  9661                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
  9662  1269  3014               	movlw	20
  9663  126A  1683               	bsf	3,5	;RP0=1, select bank3
  9664  126B  1703               	bsf	3,6	;RP1=1, select bank3
  9665  126C  00AC               	movwf	_Delay_Led_Memory^(0+384)	;volatile
  9666  126D  01AD               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
  9667  126E                     l640:	
  9668                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
  9669                           
  9670  126E  188C               	btfsc	12,1	;volsfr
  9671  126F  2A6E               	goto	l640
  9672                           
  9673                           ;eeprom.c: 57:    EEADR=addr;
  9674  1270  1283               	bcf	3,5	;RP0=0, select bank0
  9675  1271  1303               	bcf	3,6	;RP1=0, select bank0
  9676  1272  0822               	movf	EEPROM_Read_Byte@addr,w
  9677  1273  1703               	bsf	3,6	;RP1=1, select bank2
  9678  1274  008D               	movwf	13	;volatile
  9679                           
  9680                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
  9681  1275  1683               	bsf	3,5	;RP0=1, select bank3
  9682  1276  138C               	bcf	12,7	;volsfr
  9683                           
  9684                           ;eeprom.c: 59:    EECON1bits.RD=1;
  9685  1277  140C               	bsf	12,0	;volsfr
  9686                           
  9687                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
  9688  1278  304E               	movlw	78
  9689  1279  1283               	bcf	3,5	;RP0=0, select bank0
  9690  127A  1303               	bcf	3,6	;RP1=0, select bank0
  9691  127B  00A1               	movwf	??_EEPROM_Read_Byte+1
  9692  127C  30EA               	movlw	234
  9693  127D  00A0               	movwf	??_EEPROM_Read_Byte
  9694  127E                     u6707:
  9695  127E  0BA0               	decfsz	??_EEPROM_Read_Byte,f
  9696  127F  2A7E               	goto	u6707
  9697  1280  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
  9698  1281  2A7E               	goto	u6707
  9699  1282  0000               	nop
  9700                           
  9701                           ;eeprom.c: 61:    return EEDATA;
  9702  1283  1283               	bcf	3,5	;RP0=0, select bank2
  9703  1284  1703               	bsf	3,6	;RP1=1, select bank2
  9704  1285  080C               	movf	12,w	;volatile
  9705  1286  0008               	return
  9706  1287                     __end_of_EEPROM_Read_Byte:
  9707  1287                     __ptext34:	
  9708 ;; *************** function _EEPROM_Read_Integer *****************
  9709 ;; Defined at:
  9710 ;;		line 81 in file "eeprom.c"
  9711 ;; Parameters:    Size  Location     Type
  9712 ;;  addr            1    wreg     unsigned char 
  9713 ;; Auto vars:     Size  Location     Type
  9714 ;;  addr            1    5[BANK0 ] unsigned char 
  9715 ;;  result          2    7[BANK0 ] unsigned int 
  9716 ;;  i               1    9[BANK0 ] unsigned char 
  9717 ;;  ptr             1    6[BANK0 ] PTR unsigned char 
  9718 ;;		 -> EEPROM_Read_Integer@result(2), 
  9719 ;; Return value:  Size  Location     Type
  9720 ;;                  2    3[BANK0 ] unsigned int 
  9721 ;; Registers used:
  9722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9723 ;; Tracked objects:
  9724 ;;		On entry : 0/0
  9725 ;;		On exit  : B00/0
  9726 ;;		Unchanged: 0/0
  9727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9728 ;;      Params:         0       2       0       0       0
  9729 ;;      Locals:         0       5       0       0       0
  9730 ;;      Temps:          0       0       0       0       0
  9731 ;;      Totals:         0       7       0       0       0
  9732 ;;Total ram usage:        7 bytes
  9733 ;; Hardware stack levels used: 1
  9734 ;; Hardware stack levels required when called: 2
  9735 ;; This function calls:
  9736 ;;		_EEPROM_Read_Byte
  9737 ;; This function is called by:
  9738 ;;		_main
  9739 ;;		_Decodify_Command
  9740 ;;		_Load_Work
  9741 ;; This function uses a non-reentrant model
  9742 ;;
  9743                           
  9744                           
  9745                           ;psect for function _EEPROM_Read_Integer
  9746  1287                     _EEPROM_Read_Integer:
  9747                           
  9748                           ;incstack = 0
  9749                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9750                           ;EEPROM_Read_Integer@addr stored from wreg
  9751  1287  1283               	bcf	3,5	;RP0=0, select bank0
  9752  1288  1303               	bcf	3,6	;RP1=0, select bank0
  9753  1289  00A5               	movwf	EEPROM_Read_Integer@addr
  9754                           
  9755                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
  9756  128A  3027               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
  9757  128B  00A6               	movwf	EEPROM_Read_Integer@ptr
  9758                           
  9759                           ;eeprom.c: 87:       for (i=0;i<2;i++)
  9760  128C  01A9               	clrf	EEPROM_Read_Integer@i
  9761  128D                     l6436:
  9762                           
  9763                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
  9764  128D  0826               	movf	EEPROM_Read_Integer@ptr,w
  9765  128E  0084               	movwf	4
  9766  128F  0825               	movf	EEPROM_Read_Integer@addr,w
  9767  1290  2266  160A  118A   	fcall	_EEPROM_Read_Byte
  9768  1293  1383               	bcf	3,7	;select IRP bank0
  9769  1294  0080               	movwf	0
  9770  1295  1303               	bcf	3,6	;RP1=0, select bank0
  9771  1296  3002               	movlw	2
  9772  1297  0AA5               	incf	EEPROM_Read_Integer@addr,f
  9773  1298  0AA6               	incf	EEPROM_Read_Integer@ptr,f
  9774  1299  0AA9               	incf	EEPROM_Read_Integer@i,f
  9775  129A  0229               	subwf	EEPROM_Read_Integer@i,w
  9776  129B  1C03               	skipc
  9777  129C  2A8D               	goto	l6436
  9778                           
  9779                           ;eeprom.c: 89:       return result;
  9780  129D  0828               	movf	EEPROM_Read_Integer@result+1,w
  9781  129E  00A4               	movwf	?_EEPROM_Read_Integer+1
  9782  129F  0827               	movf	EEPROM_Read_Integer@result,w
  9783  12A0  00A3               	movwf	?_EEPROM_Read_Integer
  9784  12A1  0008               	return
  9785  12A2                     __end_of_EEPROM_Read_Integer:
  9786  12A2                     PL16:
  9787  12A2  0823               	movf	?_EEPROM_Read_Integer,w
  9788  12A3  1683               	bsf	3,5	;RP0=1, select bank1
  9789  12A4  00B9               	movwf	??_Load_Work^(0+128)
  9790  12A5  1283               	bcf	3,5	;RP0=0, select bank0
  9791  12A6  0824               	movf	?_EEPROM_Read_Integer+1,w
  9792  12A7  1683               	bsf	3,5	;RP0=1, select bank1
  9793  12A8  00BA               	movwf	(??_Load_Work^(0+128)+1)
  9794  12A9  01BB               	clrf	(??_Load_Work^(0+128)+2)
  9795  12AA  01BC               	clrf	(??_Load_Work^(0+128)+3)
  9796  12AB  083C               	movf	(??_Load_Work+3)^(0+128),w
  9797  12AC  1283               	bcf	3,5	;RP0=0, select bank0
  9798  12AD  00AD               	movwf	___xxtofl@val+3
  9799  12AE  1683               	bsf	3,5	;RP0=1, select bank1
  9800  12AF  083B               	movf	(??_Load_Work+2)^(0+128),w
  9801  12B0  1283               	bcf	3,5	;RP0=0, select bank0
  9802  12B1  00AC               	movwf	___xxtofl@val+2
  9803  12B2  1683               	bsf	3,5	;RP0=1, select bank1
  9804  12B3  083A               	movf	(??_Load_Work+1)^(0+128),w
  9805  12B4  1283               	bcf	3,5	;RP0=0, select bank0
  9806  12B5  00AB               	movwf	___xxtofl@val+1
  9807  12B6  1683               	bsf	3,5	;RP0=1, select bank1
  9808  12B7  0839               	movf	??_Load_Work^(0+128),w
  9809  12B8  1283               	bcf	3,5	;RP0=0, select bank0
  9810  12B9  00AA               	movwf	___xxtofl@val
  9811  12BA  3400               	retlw	0
  9812  12BB                     __end_ofPL16:
  9813  12BB                     PL64:
  9814  12BB  3041               	movlw	65
  9815  12BC  00A3               	movwf	(___fldiv@a+3)^(0+128)
  9816  12BD  3020               	movlw	32
  9817  12BE  00A2               	movwf	(___fldiv@a+2)^(0+128)
  9818  12BF  01A1               	clrf	(___fldiv@a+1)^(0+128)
  9819  12C0  01A0               	clrf	___fldiv@a^(0+128)
  9820  12C1  0008               	return
  9821  12C2                     __end_ofPL64:
  9822                           
  9823                           	psect	text40
  9824  12C2                     __ptext40:	
  9825 ;; *************** function _EEPROM_24C1025_Write_Str *****************
  9826 ;; Defined at:
  9827 ;;		line 220 in file "EEPROM_24C1025.c"
  9828 ;; Parameters:    Size  Location     Type
  9829 ;;  chip_add        1    wreg     unsigned char 
  9830 ;;  mem_add         4   10[BANK0 ] unsigned long 
  9831 ;;  data            1   14[BANK0 ] PTR unsigned char 
  9832 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;  chip_add        1   15[BANK0 ] unsigned char 
  9835 ;;  ctrl            1   17[BANK0 ] unsigned char 
  9836 ;;  range           1   16[BANK0 ] unsigned char 
  9837 ;; Return value:  Size  Location     Type
  9838 ;;                  1    wreg      void 
  9839 ;; Registers used:
  9840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9841 ;; Tracked objects:
  9842 ;;		On entry : 300/300
  9843 ;;		On exit  : 0/0
  9844 ;;		Unchanged: 0/0
  9845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9846 ;;      Params:         0       5       0       0       0
  9847 ;;      Locals:         0       3       0       0       0
  9848 ;;      Temps:          0       0       0       0       0
  9849 ;;      Totals:         0       8       0       0       0
  9850 ;;Total ram usage:        8 bytes
  9851 ;; Hardware stack levels used: 1
  9852 ;; Hardware stack levels required when called: 3
  9853 ;; This function calls:
  9854 ;;		_I2C_Master_Start
  9855 ;;		_I2C_Master_Stop
  9856 ;;		_I2C_Master_Write
  9857 ;;		_my_delay_ms_WDT
  9858 ;; This function is called by:
  9859 ;;		_Decodify_Command
  9860 ;; This function uses a non-reentrant model
  9861 ;;
  9862                           
  9863                           
  9864                           ;psect for function _EEPROM_24C1025_Write_Str
  9865  12C2                     _EEPROM_24C1025_Write_Str:
  9866                           
  9867                           ;incstack = 0
  9868                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  9869                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
  9870  12C2  1283               	bcf	3,5	;RP0=0, select bank0
  9871  12C3  1303               	bcf	3,6	;RP1=0, select bank0
  9872  12C4  00AF               	movwf	EEPROM_24C1025_Write_Str@chip_add
  9873                           
  9874                           ;EEPROM_24C1025.c: 222:      unsigned char ctrl;;EEPROM_24C1025.c: 224:      if(mem_add>
      +                          0x1FFFF) return;
  9875  12C5  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  9876  12C6  1D03               	btfss	3,2
  9877  12C7  0008               	return
  9878  12C8  3002               	movlw	2
  9879  12C9  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  9880  12CA  1D03               	skipz
  9881  12CB  2AD2               	goto	u5953
  9882  12CC  3000               	movlw	0
  9883  12CD  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9884  12CE  1D03               	skipz
  9885  12CF  2AD2               	goto	u5953
  9886  12D0  3000               	movlw	0
  9887  12D1  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  9888  12D2                     u5953:
  9889  12D2  1803               	btfsc	3,0
  9890  12D3  0008               	return
  9891                           
  9892                           ;EEPROM_24C1025.c: 226:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
  9893  12D4  1283               	bcf	3,5	;RP0=0, select bank0
  9894  12D5  1303               	bcf	3,6	;RP1=0, select bank0
  9895  12D6                     L17:
  9896  12D6  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  9897  12D7  1D03               	btfss	3,2
  9898  12D8  2AE5               	goto	l6660
  9899  12D9  3001               	movlw	1
  9900  12DA  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  9901  12DB  1D03               	skipz
  9902  12DC  2AE3               	goto	u5963
  9903  12DD  3000               	movlw	0
  9904  12DE  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9905  12DF  1D03               	skipz
  9906  12E0  2AE3               	goto	u5963
  9907  12E1  3000               	movlw	0
  9908  12E2  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  9909  12E3                     u5963:
  9910  12E3  1C03               	btfss	3,0
  9911  12E4  2AEA               	goto	l6662
  9912  12E5                     l6660:
  9913  12E5  3008               	movlw	8
  9914  12E6  1283               	bcf	3,5	;RP0=0, select bank0
  9915  12E7  1303               	bcf	3,6	;RP1=0, select bank0
  9916  12E8  00B0               	movwf	EEPROM_24C1025_Write_Str@range
  9917  12E9  2AED               	goto	l6664
  9918  12EA                     l6662:
  9919  12EA  1283               	bcf	3,5	;RP0=0, select bank0
  9920  12EB  1303               	bcf	3,6	;RP1=0, select bank0
  9921  12EC  01B0               	clrf	EEPROM_24C1025_Write_Str@range
  9922  12ED                     l6664:
  9923                           
  9924                           ;EEPROM_24C1025.c: 227:      ctrl=chip_add;
  9925  12ED  082F               	movf	EEPROM_24C1025_Write_Str@chip_add,w
  9926  12EE  00B1               	movwf	EEPROM_24C1025_Write_Str@ctrl
  9927  12EF  30A0               	movlw	160
  9928                           
  9929                           ;EEPROM_24C1025.c: 228:      ctrl<<=1;
  9930  12F0  1003               	clrc
  9931  12F1  0DB1               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
  9932                           
  9933                           ;EEPROM_24C1025.c: 229:      ctrl |= 0xA0;
  9934  12F2  04B1               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
  9935                           
  9936                           ;EEPROM_24C1025.c: 230:      ctrl |= range;
  9937  12F3  0830               	movf	EEPROM_24C1025_Write_Str@range,w
  9938  12F4  04B1               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
  9939                           
  9940                           ;EEPROM_24C1025.c: 232:      I2C_Master_Start();
  9941  12F5  249A  160A  118A   	fcall	_I2C_Master_Start
  9942                           
  9943                           ;EEPROM_24C1025.c: 233:      I2C_Master_Write(ctrl);
  9944  12F8  1283               	bcf	3,5	;RP0=0, select bank0
  9945  12F9  0831               	movf	EEPROM_24C1025_Write_Str@ctrl,w
  9946  12FA  00A3               	movwf	I2C_Master_Write@d
  9947  12FB  01A4               	clrf	I2C_Master_Write@d+1
  9948  12FC  2762  160A  118A   	fcall	_I2C_Master_Write
  9949                           
  9950                           ;EEPROM_24C1025.c: 234:      I2C_Master_Write(((char *)&mem_add)[1]);
  9951  12FF  082B               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9952  1300  00A3               	movwf	I2C_Master_Write@d
  9953  1301  01A4               	clrf	I2C_Master_Write@d+1
  9954  1302  2762  160A  118A   	fcall	_I2C_Master_Write
  9955                           
  9956                           ;EEPROM_24C1025.c: 235:      I2C_Master_Write(((char *)&mem_add)[0]);
  9957  1305  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
  9958  1306  00A3               	movwf	I2C_Master_Write@d
  9959  1307  01A4               	clrf	I2C_Master_Write@d+1
  9960  1308  2762  160A  118A   	fcall	_I2C_Master_Write
  9961  130B                     l6724:	
  9962                           ;EEPROM_24C1025.c: 236:      while(*data)
  9963                           
  9964                           
  9965                           ;EEPROM_24C1025.c: 236:      while(*data)
  9966  130B  082E               	movf	EEPROM_24C1025_Write_Str@data,w
  9967  130C  0084               	movwf	4
  9968  130D  1783               	bsf	3,7	;select IRP bank2
  9969  130E  0800               	movf	0,w
  9970  130F  1903               	btfsc	3,2
  9971  1310  2B51               	goto	l6726
  9972  1311  0064               	clrwdt	;# 
  9973                           
  9974                           ;EEPROM_24C1025.c: 239:           if(mem_add>0x1FFFF) return;
  9975  1312  1283               	bcf	3,5	;RP0=0, select bank0
  9976  1313  1303               	bcf	3,6	;RP1=0, select bank0
  9977  1314  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
  9978  1315  1D03               	btfss	3,2
  9979  1316  0008               	return
  9980  1317  3002               	movlw	2
  9981  1318  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
  9982  1319  1D03               	skipz
  9983  131A  2B21               	goto	u5973
  9984  131B  3000               	movlw	0
  9985  131C  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
  9986  131D  1D03               	skipz
  9987  131E  2B21               	goto	u5973
  9988  131F  3000               	movlw	0
  9989  1320  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
  9990  1321                     u5973:
  9991  1321  1803               	btfsc	3,0
  9992  1322  0008               	return
  9993                           
  9994                           ;EEPROM_24C1025.c: 240:           if((mem_add+1)%128==0)
  9995  1323  1283               	bcf	3,5	;RP0=0, select bank0
  9996  1324  1303               	bcf	3,6	;RP1=0, select bank0
  9997  1325  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
  9998  1326  3E01               	addlw	1
  9999  1327  397F               	andlw	127
 10000  1328  1D03               	btfss	3,2
 10001  1329  2B42               	goto	l6718
 10002                           
 10003                           ;EEPROM_24C1025.c: 241:             {;EEPROM_24C1025.c: 242:             I2C_Master_Writ
      +                          e(*data);
 10004  132A  27E7  160A  118A   	fcall	PL62	;call to abstracted procedure
 10005  132D  2762  160A  118A   	fcall	_I2C_Master_Write
 10006                           
 10007                           ;EEPROM_24C1025.c: 243:             I2C_Master_Stop();
 10008  1330  276B  160A  118A   	fcall	_I2C_Master_Stop
 10009                           
 10010                           ;EEPROM_24C1025.c: 245:             my_delay_ms_WDT(5);
 10011  1333  27B1  160A  118A   	fcall	PL38	;call to abstracted procedure
 10012  1336  277B  160A  118A   	fcall	_my_delay_ms_WDT
 10013                           
 10014                           ;EEPROM_24C1025.c: 246:             mem_add++;
 10015  1339  0AAA               	incf	EEPROM_24C1025_Write_Str@mem_add,f
 10016  133A  1903               	skipnz
 10017  133B  0AAB               	incf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10018  133C  1903               	skipnz
 10019  133D  0AAC               	incf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10020  133E  1903               	skipnz
 10021  133F  0AAD               	incf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10022                           
 10023                           ;EEPROM_24C1025.c: 247:             data++;
 10024  1340  0AAE               	incf	EEPROM_24C1025_Write_Str@data,f
 10025  1341  2AD6               	goto	L17
 10026  1342                     l6718:	
 10027                           ;EEPROM_24C1025.c: 248:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10028                           
 10029                           
 10030                           ;EEPROM_24C1025.c: 260:             {;EEPROM_24C1025.c: 261:             I2C_Master_Writ
      +                          e(*data);
 10031  1342  27E7  160A  118A   	fcall	PL62	;call to abstracted procedure
 10032  1345  2762  160A  118A   	fcall	_I2C_Master_Write
 10033                           
 10034                           ;EEPROM_24C1025.c: 262:             data++;
 10035  1348  0AAE               	incf	EEPROM_24C1025_Write_Str@data,f
 10036                           
 10037                           ;EEPROM_24C1025.c: 263:             mem_add++;
 10038  1349  0AAA               	incf	EEPROM_24C1025_Write_Str@mem_add,f
 10039  134A  1903               	skipnz
 10040  134B  0AAB               	incf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10041  134C  1903               	skipnz
 10042  134D  0AAC               	incf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10043  134E  1903               	skipnz
 10044  134F  0AAD               	incf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10045  1350  2B0B               	goto	l6724
 10046  1351                     l6726:
 10047                           
 10048                           ;EEPROM_24C1025.c: 266:      I2C_Master_Write(0);
 10049  1351  01A3               	clrf	I2C_Master_Write@d
 10050  1352  01A4               	clrf	I2C_Master_Write@d+1
 10051  1353  2762  160A  118A   	fcall	_I2C_Master_Write
 10052                           
 10053                           ;EEPROM_24C1025.c: 267:      I2C_Master_Stop();
 10054  1356  276B  160A  118A   	fcall	_I2C_Master_Stop
 10055                           
 10056                           ;EEPROM_24C1025.c: 268:      my_delay_ms_WDT(5);
 10057  1359  27B1  160A  118A   	fcall	PL38	;call to abstracted procedure
 10058  135C  2F7B               	ljmp	l3890
 10059  135D                     __end_of_EEPROM_24C1025_Write_Str:
 10060  135D                     __ptext42:	
 10061 ;; *************** function _EEPROM_24C1025_Read_Str *****************
 10062 ;; Defined at:
 10063 ;;		line 275 in file "EEPROM_24C1025.c"
 10064 ;; Parameters:    Size  Location     Type
 10065 ;;  chip_add        1    wreg     unsigned char 
 10066 ;;  mem_add         4    7[BANK0 ] unsigned long 
 10067 ;;  buffer          1   11[BANK0 ] PTR unsigned char 
 10068 ;;		 -> buffer(33), 
 10069 ;; Auto vars:     Size  Location     Type
 10070 ;;  chip_add        1   15[BANK0 ] unsigned char 
 10071 ;;  ctrl            1   17[BANK0 ] unsigned char 
 10072 ;;  range           1   16[BANK0 ] unsigned char 
 10073 ;;  cnt             1   14[BANK0 ] unsigned char 
 10074 ;; Return value:  Size  Location     Type
 10075 ;;                  1    wreg      void 
 10076 ;; Registers used:
 10077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10078 ;; Tracked objects:
 10079 ;;		On entry : 300/300
 10080 ;;		On exit  : 0/0
 10081 ;;		Unchanged: 0/0
 10082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10083 ;;      Params:         0       5       0       0       0
 10084 ;;      Locals:         0       4       0       0       0
 10085 ;;      Temps:          0       2       0       0       0
 10086 ;;      Totals:         0      11       0       0       0
 10087 ;;Total ram usage:       11 bytes
 10088 ;; Hardware stack levels used: 1
 10089 ;; Hardware stack levels required when called: 3
 10090 ;; This function calls:
 10091 ;;		_I2C_Master_Read
 10092 ;;		_I2C_Master_RepeatedStart
 10093 ;;		_I2C_Master_Start
 10094 ;;		_I2C_Master_Stop
 10095 ;;		_I2C_Master_Write
 10096 ;; This function is called by:
 10097 ;;		_Decodify_Command
 10098 ;; This function uses a non-reentrant model
 10099 ;;
 10100                           
 10101                           
 10102                           ;psect for function _EEPROM_24C1025_Read_Str
 10103  135D                     _EEPROM_24C1025_Read_Str:
 10104                           
 10105                           ;incstack = 0
 10106                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10107                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
 10108  135D  1283               	bcf	3,5	;RP0=0, select bank0
 10109  135E  1303               	bcf	3,6	;RP1=0, select bank0
 10110  135F  00AF               	movwf	EEPROM_24C1025_Read_Str@chip_add
 10111                           
 10112                           ;EEPROM_24C1025.c: 277:      unsigned char range=0;
 10113  1360  01B0               	clrf	EEPROM_24C1025_Read_Str@range
 10114                           
 10115                           ;EEPROM_24C1025.c: 278:      unsigned char ctrl;;EEPROM_24C1025.c: 280:      if(mem_add>
      +                          0x1FFFF) return;
 10116  1361  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10117  1362  1D03               	btfss	3,2
 10118  1363  0008               	return
 10119  1364  3002               	movlw	2
 10120  1365  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10121  1366  1D03               	skipz
 10122  1367  2B6E               	goto	u6013
 10123  1368  3000               	movlw	0
 10124  1369  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10125  136A  1D03               	skipz
 10126  136B  2B6E               	goto	u6013
 10127  136C  3000               	movlw	0
 10128  136D  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10129  136E                     u6013:
 10130  136E  1803               	btfsc	3,0
 10131  136F  0008               	return
 10132                           
 10133                           ;EEPROM_24C1025.c: 282:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10134  1370  1283               	bcf	3,5	;RP0=0, select bank0
 10135  1371  1303               	bcf	3,6	;RP1=0, select bank0
 10136  1372  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10137  1373  1D03               	btfss	3,2
 10138  1374  2B81               	goto	l6738
 10139  1375  3001               	movlw	1
 10140  1376  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10141  1377  1D03               	skipz
 10142  1378  2B7F               	goto	u6023
 10143  1379  3000               	movlw	0
 10144  137A  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10145  137B  1D03               	skipz
 10146  137C  2B7F               	goto	u6023
 10147  137D  3000               	movlw	0
 10148  137E  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10149  137F                     u6023:
 10150  137F  1C03               	btfss	3,0
 10151  1380  2B86               	goto	l6740
 10152  1381                     l6738:
 10153  1381  3008               	movlw	8
 10154  1382  1283               	bcf	3,5	;RP0=0, select bank0
 10155  1383  1303               	bcf	3,6	;RP1=0, select bank0
 10156  1384  00B0               	movwf	EEPROM_24C1025_Read_Str@range
 10157  1385  2B89               	goto	l6742
 10158  1386                     l6740:
 10159  1386  1283               	bcf	3,5	;RP0=0, select bank0
 10160  1387  1303               	bcf	3,6	;RP1=0, select bank0
 10161  1388  01B0               	clrf	EEPROM_24C1025_Read_Str@range
 10162  1389                     l6742:
 10163                           
 10164                           ;EEPROM_24C1025.c: 283:      ctrl=chip_add;
 10165                           
 10166                           ;EEPROM_24C1025.c: 284:      ctrl<<=1;
 10167                           
 10168                           ;EEPROM_24C1025.c: 285:      ctrl |= 0xA0;
 10169                           
 10170                           ;EEPROM_24C1025.c: 286:      ctrl |= 0b00000001;
 10171                           
 10172                           ;EEPROM_24C1025.c: 287:      ctrl |= range;
 10173  1389  27C0  160A  118A   	fcall	PL48	;call to abstracted procedure
 10174                           
 10175                           ;EEPROM_24C1025.c: 289:      I2C_Master_Start();
 10176  138C  249A  160A  118A   	fcall	_I2C_Master_Start
 10177                           
 10178                           ;EEPROM_24C1025.c: 290:      I2C_Master_Write(ctrl & 0xFE);
 10179  138F  27FA  160A  118A   	fcall	PL76	;call to abstracted procedure
 10180  1392  2762  160A  118A   	fcall	_I2C_Master_Write
 10181                           
 10182                           ;EEPROM_24C1025.c: 291:      I2C_Master_Write(((char *)&mem_add)[1]);
 10183  1395  0828               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10184  1396  00A3               	movwf	I2C_Master_Write@d
 10185  1397  01A4               	clrf	I2C_Master_Write@d+1
 10186  1398  2762  160A  118A   	fcall	_I2C_Master_Write
 10187                           
 10188                           ;EEPROM_24C1025.c: 292:      I2C_Master_Write(((char *)&mem_add)[0]);
 10189  139B  0827               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10190  139C  00A3               	movwf	I2C_Master_Write@d
 10191  139D  01A4               	clrf	I2C_Master_Write@d+1
 10192  139E  2762  160A  118A   	fcall	_I2C_Master_Write
 10193                           
 10194                           ;EEPROM_24C1025.c: 293:      I2C_Master_RepeatedStart();
 10195  13A1  2772  160A  118A   	fcall	_I2C_Master_RepeatedStart
 10196                           
 10197                           ;EEPROM_24C1025.c: 294:      I2C_Master_Write(ctrl);
 10198  13A4  1283               	bcf	3,5	;RP0=0, select bank0
 10199  13A5  0831               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10200  13A6  00A3               	movwf	I2C_Master_Write@d
 10201  13A7  01A4               	clrf	I2C_Master_Write@d+1
 10202  13A8  2762  160A  118A   	fcall	_I2C_Master_Write
 10203                           
 10204                           ;EEPROM_24C1025.c: 296:      cnt=0;
 10205  13AB  01AE               	clrf	EEPROM_24C1025_Read_Str@cnt
 10206  13AC                     l6766:
 10207                           
 10208                           ;EEPROM_24C1025.c: 298:            if(mem_add>0x1FFFF) break;
 10209  13AC  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10210  13AD  1D03               	btfss	3,2
 10211  13AE  2C3C               	goto	l6820
 10212  13AF  3002               	movlw	2
 10213  13B0  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10214  13B1  1D03               	skipz
 10215  13B2  2BB9               	goto	u6033
 10216  13B3  3000               	movlw	0
 10217  13B4  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10218  13B5  1D03               	skipz
 10219  13B6  2BB9               	goto	u6033
 10220  13B7  3000               	movlw	0
 10221  13B8  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10222  13B9                     u6033:
 10223  13B9  1803               	btfsc	3,0
 10224  13BA  2C3C               	goto	l6820
 10225                           
 10226                           ;EEPROM_24C1025.c: 299:            if((mem_add+1)%128==0)
 10227  13BB  1283               	bcf	3,5	;RP0=0, select bank0
 10228  13BC  1303               	bcf	3,6	;RP1=0, select bank0
 10229  13BD  0827               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10230  13BE  3E01               	addlw	1
 10231  13BF  397F               	andlw	127
 10232  13C0  1D03               	btfss	3,2
 10233  13C1  2C1D               	goto	l6810
 10234                           
 10235                           ;EEPROM_24C1025.c: 300:              {;EEPROM_24C1025.c: 301:              (*buffer)=I2C
      +                          _Master_Read(0);
 10236  13C2  082B               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10237  13C3  0084               	movwf	4
 10238  13C4  01A3               	clrf	I2C_Master_Read@a
 10239  13C5  01A4               	clrf	I2C_Master_Read@a+1
 10240  13C6  2450  160A  118A   	fcall	_I2C_Master_Read
 10241  13C9  0823               	movf	?_I2C_Master_Read,w
 10242  13CA  1783               	bsf	3,7	;select IRP bank2
 10243  13CB  0080               	movwf	0
 10244                           
 10245                           ;EEPROM_24C1025.c: 302:              I2C_Master_Stop();
 10246  13CC  276B  160A  118A   	fcall	_I2C_Master_Stop
 10247                           
 10248                           ;EEPROM_24C1025.c: 304:              _delay((unsigned long)((5)*(8000000/4000.0)));
 10249  13CF  300D               	movlw	13
 10250  13D0  1283               	bcf	3,5	;RP0=0, select bank0
 10251  13D1  1303               	bcf	3,6	;RP1=0, select bank0
 10252  13D2  00AD               	movwf	??_EEPROM_24C1025_Read_Str+1
 10253  13D3  30FB               	movlw	251
 10254  13D4  00AC               	movwf	??_EEPROM_24C1025_Read_Str
 10255  13D5                     u6717:
 10256  13D5  0BAC               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10257  13D6  2BD5               	goto	u6717
 10258  13D7  0BAD               	decfsz	??_EEPROM_24C1025_Read_Str+1,f
 10259  13D8  2BD5               	goto	u6717
 10260                           
 10261                           ;EEPROM_24C1025.c: 305:              mem_add++;
 10262  13D9  1283               	bcf	3,5	;RP0=0, select bank0
 10263  13DA  1303               	bcf	3,6	;RP1=0, select bank0
 10264  13DB  0AA7               	incf	EEPROM_24C1025_Read_Str@mem_add,f
 10265  13DC  1903               	skipnz
 10266  13DD  0AA8               	incf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10267  13DE  1903               	skipnz
 10268  13DF  0AA9               	incf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10269  13E0  1903               	skipnz
 10270  13E1  0AAA               	incf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10271                           
 10272                           ;EEPROM_24C1025.c: 306:              buffer++;
 10273  13E2  0AAB               	incf	EEPROM_24C1025_Read_Str@buffer,f
 10274                           
 10275                           ;EEPROM_24C1025.c: 307:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10276  13E3  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10277  13E4  1D03               	btfss	3,2
 10278  13E5  2BF2               	goto	l6784
 10279  13E6  3001               	movlw	1
 10280  13E7  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10281  13E8  1D03               	skipz
 10282  13E9  2BF0               	goto	u6053
 10283  13EA  3000               	movlw	0
 10284  13EB  0228               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10285  13EC  1D03               	skipz
 10286  13ED  2BF0               	goto	u6053
 10287  13EE  3000               	movlw	0
 10288  13EF  0227               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10289  13F0                     u6053:
 10290  13F0  1C03               	btfss	3,0
 10291  13F1  2BF7               	goto	l6786
 10292  13F2                     l6784:
 10293  13F2  3008               	movlw	8
 10294  13F3  1283               	bcf	3,5	;RP0=0, select bank0
 10295  13F4  1303               	bcf	3,6	;RP1=0, select bank0
 10296  13F5  00B0               	movwf	EEPROM_24C1025_Read_Str@range
 10297  13F6  2BFA               	goto	l6788
 10298  13F7                     l6786:
 10299  13F7  1283               	bcf	3,5	;RP0=0, select bank0
 10300  13F8  1303               	bcf	3,6	;RP1=0, select bank0
 10301  13F9  01B0               	clrf	EEPROM_24C1025_Read_Str@range
 10302  13FA                     l6788:
 10303                           
 10304                           ;EEPROM_24C1025.c: 308:              ctrl=chip_add;
 10305                           
 10306                           ;EEPROM_24C1025.c: 309:              ctrl<<=1;
 10307                           
 10308                           ;EEPROM_24C1025.c: 310:              ctrl |= 0xA0;
 10309                           
 10310                           ;EEPROM_24C1025.c: 311:              ctrl |= 0b00000001;
 10311                           
 10312                           ;EEPROM_24C1025.c: 312:              ctrl |= range;
 10313  13FA  27C0  160A  118A   	fcall	PL48	;call to abstracted procedure
 10314                           
 10315                           ;EEPROM_24C1025.c: 314:              I2C_Master_Start();
 10316  13FD  249A  160A  118A   	fcall	_I2C_Master_Start
 10317                           
 10318                           ;EEPROM_24C1025.c: 315:              I2C_Master_Write(ctrl & 0xFE);
 10319  1400  27FA  160A  118A   	fcall	PL76	;call to abstracted procedure
 10320  1403  2762  160A  118A   	fcall	_I2C_Master_Write
 10321                           
 10322                           ;EEPROM_24C1025.c: 316:              I2C_Master_Write(((char *)&mem_add)[1]);
 10323  1406  0828               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10324  1407  00A3               	movwf	I2C_Master_Write@d
 10325  1408  01A4               	clrf	I2C_Master_Write@d+1
 10326  1409  2762  160A  118A   	fcall	_I2C_Master_Write
 10327                           
 10328                           ;EEPROM_24C1025.c: 317:              I2C_Master_Write(((char *)&mem_add)[0]);
 10329  140C  0827               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10330  140D  00A3               	movwf	I2C_Master_Write@d
 10331  140E  01A4               	clrf	I2C_Master_Write@d+1
 10332  140F  2762  160A  118A   	fcall	_I2C_Master_Write
 10333                           
 10334                           ;EEPROM_24C1025.c: 318:              I2C_Master_RepeatedStart();
 10335  1412  2772  160A  118A   	fcall	_I2C_Master_RepeatedStart
 10336                           
 10337                           ;EEPROM_24C1025.c: 319:              I2C_Master_Write(ctrl);
 10338  1415  1283               	bcf	3,5	;RP0=0, select bank0
 10339  1416  0831               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10340  1417  00A3               	movwf	I2C_Master_Write@d
 10341  1418  01A4               	clrf	I2C_Master_Write@d+1
 10342  1419  2762  160A  118A   	fcall	_I2C_Master_Write
 10343                           
 10344                           ;EEPROM_24C1025.c: 320:              }
 10345  141C  2C35               	goto	l6818
 10346  141D                     l6810:
 10347                           
 10348                           ;EEPROM_24C1025.c: 322:              {;EEPROM_24C1025.c: 323:              (*buffer)=I2C
      +                          _Master_Read(1);
 10349  141D  082B               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10350  141E  0084               	movwf	4
 10351  141F  01A3               	clrf	I2C_Master_Read@a
 10352  1420  0AA3               	incf	I2C_Master_Read@a,f
 10353  1421  01A4               	clrf	I2C_Master_Read@a+1
 10354  1422  2450  160A  118A   	fcall	_I2C_Master_Read
 10355  1425  0823               	movf	?_I2C_Master_Read,w
 10356  1426  1783               	bsf	3,7	;select IRP bank2
 10357  1427  0080               	movwf	0
 10358                           
 10359                           ;EEPROM_24C1025.c: 324:              if((*buffer)==0)break;
 10360  1428  082B               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10361  1429  0084               	movwf	4
 10362  142A  0800               	movf	0,w
 10363  142B  1903               	btfsc	3,2
 10364  142C  2C3C               	goto	l6820
 10365                           
 10366                           ;EEPROM_24C1025.c: 325:              buffer++;
 10367  142D  0AAB               	incf	EEPROM_24C1025_Read_Str@buffer,f
 10368                           
 10369                           ;EEPROM_24C1025.c: 326:              mem_add++;
 10370  142E  0AA7               	incf	EEPROM_24C1025_Read_Str@mem_add,f
 10371  142F  1903               	skipnz
 10372  1430  0AA8               	incf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10373  1431  1903               	skipnz
 10374  1432  0AA9               	incf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10375  1433  1903               	skipnz
 10376  1434  0AAA               	incf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10377  1435                     l6818:
 10378                           
 10379                           ;EEPROM_24C1025.c: 328:        }while((cnt++)<64);
 10380  1435  082E               	movf	EEPROM_24C1025_Read_Str@cnt,w
 10381  1436  0AAE               	incf	EEPROM_24C1025_Read_Str@cnt,f
 10382  1437  00AC               	movwf	??_EEPROM_24C1025_Read_Str
 10383  1438  3040               	movlw	64
 10384  1439  022C               	subwf	??_EEPROM_24C1025_Read_Str,w
 10385  143A  1C03               	skipc
 10386  143B  2BAC               	goto	l6766
 10387  143C                     l6820:
 10388                           
 10389                           ;EEPROM_24C1025.c: 330:      I2C_Master_Read(0);
 10390  143C  1283               	bcf	3,5	;RP0=0, select bank0
 10391  143D  1303               	bcf	3,6	;RP1=0, select bank0
 10392  143E  01A3               	clrf	I2C_Master_Read@a
 10393  143F  01A4               	clrf	I2C_Master_Read@a+1
 10394  1440  2450  160A  118A   	fcall	_I2C_Master_Read
 10395                           
 10396                           ;EEPROM_24C1025.c: 331:      I2C_Master_Stop();
 10397  1443  276B  160A  118A   	fcall	_I2C_Master_Stop
 10398                           
 10399                           ;EEPROM_24C1025.c: 332:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 10400  1446  30B9               	movlw	185
 10401  1447  1283               	bcf	3,5	;RP0=0, select bank0
 10402  1448  1303               	bcf	3,6	;RP1=0, select bank0
 10403  1449  00AC               	movwf	??_EEPROM_24C1025_Read_Str
 10404  144A                     u6727:
 10405  144A  2C4B               	nop2
 10406  144B  2C4C               	nop2
 10407  144C  0BAC               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10408  144D  2C4A               	goto	u6727
 10409  144E  2C4F               	nop2
 10410  144F  0008               	return
 10411  1450                     __end_of_EEPROM_24C1025_Read_Str:
 10412  1450                     __ptext49:	
 10413 ;; *************** function _I2C_Master_Read *****************
 10414 ;; Defined at:
 10415 ;;		line 87 in file "I2C.c"
 10416 ;; Parameters:    Size  Location     Type
 10417 ;;  a               2    3[BANK0 ] unsigned short 
 10418 ;; Auto vars:     Size  Location     Type
 10419 ;;  temp            2    5[BANK0 ] unsigned short 
 10420 ;; Return value:  Size  Location     Type
 10421 ;;                  2    3[BANK0 ] unsigned short 
 10422 ;; Registers used:
 10423 ;;		wreg, status,2, status,0, pclath, cstack
 10424 ;; Tracked objects:
 10425 ;;		On entry : 300/0
 10426 ;;		On exit  : 300/0
 10427 ;;		Unchanged: 0/0
 10428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10429 ;;      Params:         0       2       0       0       0
 10430 ;;      Locals:         0       2       0       0       0
 10431 ;;      Temps:          0       0       0       0       0
 10432 ;;      Totals:         0       4       0       0       0
 10433 ;;Total ram usage:        4 bytes
 10434 ;; Hardware stack levels used: 1
 10435 ;; Hardware stack levels required when called: 2
 10436 ;; This function calls:
 10437 ;;		_I2C_Master_Wait
 10438 ;; This function is called by:
 10439 ;;		_EEPROM_24C1025_Read_Buffer
 10440 ;;		_EEPROM_24C1025_Read_Buffer_USART
 10441 ;;		_EEPROM_24C1025_Read_Str
 10442 ;; This function uses a non-reentrant model
 10443 ;;
 10444                           
 10445                           
 10446                           ;psect for function _I2C_Master_Read
 10447  1450                     _I2C_Master_Read:
 10448                           
 10449                           ;I2C.c: 87: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 88: {;I2C.c: 89:   u
      +                          nsigned short temp;;I2C.c: 90:   if(I2C_Master_Wait())SSPCON2bits.RCEN = 1;
 10450                           
 10451                           ;incstack = 0
 10452                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 10453  1450  247B  160A  118A   	fcall	_I2C_Master_Wait
 10454  1453  3A00               	xorlw	0
 10455  1454  1683               	bsf	3,5	;RP0=1, select bank1
 10456  1455  1D03               	btfss	3,2
 10457  1456  1591               	bsf	17,3	;volatile
 10458                           
 10459                           ;I2C.c: 91:   if(I2C_Master_Wait())temp = SSPBUF;
 10460  1457  247B  160A  118A   	fcall	_I2C_Master_Wait
 10461  145A  3A00               	xorlw	0
 10462  145B  1903               	skipnz
 10463  145C  2C60               	goto	l6296
 10464  145D  0813               	movf	19,w	;volatile
 10465  145E  00A5               	movwf	I2C_Master_Read@temp
 10466  145F  01A6               	clrf	I2C_Master_Read@temp+1
 10467  1460                     l6296:
 10468                           
 10469                           ;I2C.c: 92:   if(I2C_Master_Wait())
 10470  1460  247B  160A  118A   	fcall	_I2C_Master_Wait
 10471  1463  3A00               	xorlw	0
 10472  1464  1903               	skipnz
 10473  1465  2C78               	goto	l6308
 10474                           
 10475                           ;I2C.c: 93:     {;I2C.c: 94:     SSPCON2bits.ACKDT = (a)?0:1;
 10476  1466  0823               	movf	I2C_Master_Read@a,w
 10477  1467  0424               	iorwf	I2C_Master_Read@a+1,w
 10478  1468  1D03               	btfss	3,2
 10479  1469  2C6E               	goto	u5660
 10480  146A  1683               	bsf	3,5	;RP0=1, select bank1
 10481  146B  1303               	bcf	3,6	;RP1=0, select bank1
 10482  146C  1691               	bsf	17,5	;volatile
 10483  146D  2C71               	goto	l6300
 10484  146E                     u5660:
 10485  146E  1683               	bsf	3,5	;RP0=1, select bank1
 10486  146F  1303               	bcf	3,6	;RP1=0, select bank1
 10487  1470  1291               	bcf	17,5	;volatile
 10488  1471                     l6300:
 10489                           
 10490                           ;I2C.c: 95:     SSPCON2bits.ACKEN = 1;
 10491  1471  1611               	bsf	17,4	;volatile
 10492                           
 10493                           ;I2C.c: 96:     return temp;
 10494  1472  1283               	bcf	3,5	;RP0=0, select bank0
 10495  1473  0826               	movf	I2C_Master_Read@temp+1,w
 10496  1474  00A4               	movwf	?_I2C_Master_Read+1
 10497  1475  0825               	movf	I2C_Master_Read@temp,w
 10498  1476  00A3               	movwf	?_I2C_Master_Read
 10499  1477  0008               	return
 10500  1478                     l6308:
 10501                           
 10502                           ;I2C.c: 99:     {;I2C.c: 100:     return 0x00;
 10503  1478  01A3               	clrf	?_I2C_Master_Read
 10504  1479  01A4               	clrf	?_I2C_Master_Read+1
 10505  147A  0008               	return
 10506  147B                     __end_of_I2C_Master_Read:
 10507  147B                     __ptext57:	
 10508 ;; *************** function _I2C_Master_Wait *****************
 10509 ;; Defined at:
 10510 ;;		line 37 in file "I2C.c"
 10511 ;; Parameters:    Size  Location     Type
 10512 ;;		None
 10513 ;; Auto vars:     Size  Location     Type
 10514 ;;  tempo           1    2[BANK0 ] unsigned char 
 10515 ;; Return value:  Size  Location     Type
 10516 ;;                  1    wreg      unsigned char 
 10517 ;; Registers used:
 10518 ;;		wreg, status,2, status,0
 10519 ;; Tracked objects:
 10520 ;;		On entry : 0/0
 10521 ;;		On exit  : 300/0
 10522 ;;		Unchanged: 0/0
 10523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10524 ;;      Params:         0       0       0       0       0
 10525 ;;      Locals:         0       1       0       0       0
 10526 ;;      Temps:          0       2       0       0       0
 10527 ;;      Totals:         0       3       0       0       0
 10528 ;;Total ram usage:        3 bytes
 10529 ;; Hardware stack levels used: 1
 10530 ;; Hardware stack levels required when called: 1
 10531 ;; This function calls:
 10532 ;;		Nothing
 10533 ;; This function is called by:
 10534 ;;		_I2C_Master_Start
 10535 ;;		_I2C_Master_RepeatedStart
 10536 ;;		_I2C_Master_Stop
 10537 ;;		_I2C_Master_Write
 10538 ;;		_I2C_Master_Read
 10539 ;; This function uses a non-reentrant model
 10540 ;;
 10541                           
 10542                           
 10543                           ;psect for function _I2C_Master_Wait
 10544  147B                     _I2C_Master_Wait:
 10545                           
 10546                           ;I2C.c: 39:   char tempo;;I2C.c: 40:   tempo=200;
 10547                           
 10548                           ;incstack = 0
 10549                           ; Regs used in _I2C_Master_Wait: [wreg+status,2+status,0]
 10550  147B  30C8               	movlw	200
 10551  147C  1283               	bcf	3,5	;RP0=0, select bank0
 10552  147D  1303               	bcf	3,6	;RP1=0, select bank0
 10553  147E  00A2               	movwf	I2C_Master_Wait@tempo
 10554                           
 10555                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 10556  147F  2C8B               	goto	l3850
 10557  1480                     l3846:
 10558  1480  3003               	movlw	3
 10559                           
 10560                           ;I2C.c: 44:          tempo--;
 10561  1481  03A2               	decf	I2C_Master_Wait@tempo,f
 10562                           
 10563                           ;I2C.c: 47:       _delay((unsigned long)((1)*(8000000/4000.0)));
 10564  1482  1283               	bcf	3,5	;RP0=0, select bank0
 10565  1483  1303               	bcf	3,6	;RP1=0, select bank0
 10566  1484  00A1               	movwf	??_I2C_Master_Wait+1
 10567  1485  3097               	movlw	151
 10568  1486  00A0               	movwf	??_I2C_Master_Wait
 10569  1487                     u6767:
 10570  1487  0BA0               	decfsz	??_I2C_Master_Wait,f
 10571  1488  2C87               	goto	u6767
 10572  1489  0BA1               	decfsz	??_I2C_Master_Wait+1,f
 10573  148A  2C87               	goto	u6767
 10574  148B                     l3850:
 10575                           
 10576                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 10577  148B  1683               	bsf	3,5	;RP0=1, select bank1
 10578  148C  1303               	bcf	3,6	;RP1=0, select bank1
 10579  148D  1914               	btfsc	20,2	;volatile
 10580  148E  2C93               	goto	l3844
 10581  148F  0811               	movf	17,w	;volatile
 10582  1490  391F               	andlw	31
 10583  1491  1903               	btfsc	3,2
 10584  1492  2C97               	goto	l3854
 10585  1493                     l3844:
 10586                           
 10587                           ;I2C.c: 42:       {;I2C.c: 43:       if(tempo)
 10588  1493  1283               	bcf	3,5	;RP0=0, select bank0
 10589  1494  0822               	movf	I2C_Master_Wait@tempo,w
 10590  1495  1D03               	btfss	3,2
 10591  1496  2C80               	goto	l3846
 10592  1497                     l3854:
 10593                           
 10594                           ;I2C.c: 49:   return tempo ;
 10595  1497  1283               	bcf	3,5	;RP0=0, select bank0
 10596  1498  0822               	movf	I2C_Master_Wait@tempo,w
 10597  1499  0008               	return
 10598  149A                     __end_of_I2C_Master_Wait:
 10599  149A                     __ptext56:	
 10600 ;; *************** function _I2C_Master_Start *****************
 10601 ;; Defined at:
 10602 ;;		line 52 in file "I2C.c"
 10603 ;; Parameters:    Size  Location     Type
 10604 ;;		None
 10605 ;; Auto vars:     Size  Location     Type
 10606 ;;		None
 10607 ;; Return value:  Size  Location     Type
 10608 ;;                  1    wreg      void 
 10609 ;; Registers used:
 10610 ;;		wreg, status,2, status,0, pclath, cstack
 10611 ;; Tracked objects:
 10612 ;;		On entry : 300/0
 10613 ;;		On exit  : 200/0
 10614 ;;		Unchanged: 0/0
 10615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10616 ;;      Params:         0       0       0       0       0
 10617 ;;      Locals:         0       0       0       0       0
 10618 ;;      Temps:          0       0       0       0       0
 10619 ;;      Totals:         0       0       0       0       0
 10620 ;;Total ram usage:        0 bytes
 10621 ;; Hardware stack levels used: 1
 10622 ;; Hardware stack levels required when called: 2
 10623 ;; This function calls:
 10624 ;;		_I2C_Master_Wait
 10625 ;; This function is called by:
 10626 ;;		_EEPROM_24C1025_Write_Buffer
 10627 ;;		_EEPROM_24C1025_Read_Buffer
 10628 ;;		_EEPROM_24C1025_Read_Buffer_USART
 10629 ;;		_EEPROM_24C1025_Write_Str
 10630 ;;		_EEPROM_24C1025_Read_Str
 10631 ;; This function uses a non-reentrant model
 10632 ;;
 10633                           
 10634                           
 10635                           ;psect for function _I2C_Master_Start
 10636  149A                     _I2C_Master_Start:
 10637                           
 10638                           ;I2C.c: 54:   INTCONbits.GIE=0;
 10639                           
 10640                           ;incstack = 0
 10641                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 10642  149A  138B               	bcf	11,7	;volatile
 10643                           
 10644                           ;I2C.c: 55:   Delay_Led_Memory=20;
 10645  149B  3014               	movlw	20
 10646  149C  1683               	bsf	3,5	;RP0=1, select bank3
 10647  149D  1703               	bsf	3,6	;RP1=1, select bank3
 10648  149E  00AC               	movwf	_Delay_Led_Memory^(0+384)	;volatile
 10649  149F  01AD               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
 10650                           
 10651                           ;I2C.c: 56:   if(I2C_Master_Wait())
 10652  14A0  247B  160A  118A   	fcall	_I2C_Master_Wait
 10653  14A3  3A00               	xorlw	0
 10654  14A4  1903               	skipnz
 10655  14A5  0008               	return
 10656                           
 10657                           ;I2C.c: 57:     {;I2C.c: 58:     SSPCON2bits.SEN = 1;
 10658  14A6  1683               	bsf	3,5	;RP0=1, select bank1
 10659  14A7  1411               	bsf	17,0	;volatile
 10660  14A8  0008               	return
 10661  14A9                     __end_of_I2C_Master_Start:
 10662  14A9                     __ptext45:	
 10663 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 10664 ;; Defined at:
 10665 ;;		line 77 in file "EEPROM_24C1025.c"
 10666 ;; Parameters:    Size  Location     Type
 10667 ;;  chip_add        1    wreg     unsigned char 
 10668 ;;  mem_add         4   10[BANK0 ] unsigned long 
 10669 ;;  sizedata        1   14[BANK0 ] unsigned char 
 10670 ;;  data            1   15[BANK0 ] PTR unsigned char 
 10671 ;;		 -> EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), 
 10672 ;; Auto vars:     Size  Location     Type
 10673 ;;  chip_add        1   18[BANK0 ] unsigned char 
 10674 ;;  cnt             1   17[BANK0 ] unsigned char 
 10675 ;;  ctrl            1   20[BANK0 ] unsigned char 
 10676 ;;  range           1   19[BANK0 ] unsigned char 
 10677 ;;  cnt             1    0        unsigned char 
 10678 ;; Return value:  Size  Location     Type
 10679 ;;                  1    wreg      void 
 10680 ;; Registers used:
 10681 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10682 ;; Tracked objects:
 10683 ;;		On entry : 300/0
 10684 ;;		On exit  : 0/0
 10685 ;;		Unchanged: 0/0
 10686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10687 ;;      Params:         0       6       0       0       0
 10688 ;;      Locals:         0       4       0       0       0
 10689 ;;      Temps:          0       1       0       0       0
 10690 ;;      Totals:         0      11       0       0       0
 10691 ;;Total ram usage:       11 bytes
 10692 ;; Hardware stack levels used: 1
 10693 ;; Hardware stack levels required when called: 3
 10694 ;; This function calls:
 10695 ;;		_I2C_Master_Read
 10696 ;;		_I2C_Master_RepeatedStart
 10697 ;;		_I2C_Master_Start
 10698 ;;		_I2C_Master_Stop
 10699 ;;		_I2C_Master_Write
 10700 ;;		_my_delay_ms_WDT
 10701 ;; This function is called by:
 10702 ;;		_EEPROM_24C1025_Read_Byte
 10703 ;;		_EEPROM_24C1025_Read_Int
 10704 ;; This function uses a non-reentrant model
 10705 ;;
 10706                           
 10707                           
 10708                           ;psect for function _EEPROM_24C1025_Read_Buffer
 10709  14A9                     _EEPROM_24C1025_Read_Buffer:
 10710                           
 10711                           ;incstack = 0
 10712                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
 10713                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 10714  14A9  00B2               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 10715                           
 10716                           ;EEPROM_24C1025.c: 84:      unsigned char ctrl;;EEPROM_24C1025.c: 86:      Delay_Led_Mem
      +                          ory=20;
 10717                           
 10718                           ;EEPROM_24C1025.c: 88:      if(mem_add>0x1FFFF) return;
 10719  14AA  27B8  160A  118A   	fcall	PL42	;call to abstracted procedure
 10720  14AD  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 10721  14AE  1D03               	btfss	3,2
 10722  14AF  0008               	return
 10723  14B0  3002               	movlw	2
 10724  14B1  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 10725  14B2  1D03               	skipz
 10726  14B3  2CBA               	goto	u5713
 10727  14B4  3000               	movlw	0
 10728  14B5  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10729  14B6  1D03               	skipz
 10730  14B7  2CBA               	goto	u5713
 10731  14B8  3000               	movlw	0
 10732  14B9  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10733  14BA                     u5713:
 10734  14BA  1803               	btfsc	3,0
 10735  14BB  0008               	return
 10736                           
 10737                           ;EEPROM_24C1025.c: 90:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10738  14BC  1283               	bcf	3,5	;RP0=0, select bank0
 10739  14BD  1303               	bcf	3,6	;RP1=0, select bank0
 10740  14BE  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 10741  14BF  1D03               	btfss	3,2
 10742  14C0  2CCD               	goto	l6338
 10743  14C1  3001               	movlw	1
 10744  14C2  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 10745  14C3  1D03               	skipz
 10746  14C4  2CCB               	goto	u5723
 10747  14C5  3000               	movlw	0
 10748  14C6  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10749  14C7  1D03               	skipz
 10750  14C8  2CCB               	goto	u5723
 10751  14C9  3000               	movlw	0
 10752  14CA  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10753  14CB                     u5723:
 10754  14CB  1C03               	btfss	3,0
 10755  14CC  2CD2               	goto	l6340
 10756  14CD                     l6338:
 10757  14CD  3008               	movlw	8
 10758  14CE  1283               	bcf	3,5	;RP0=0, select bank0
 10759  14CF  1303               	bcf	3,6	;RP1=0, select bank0
 10760  14D0  00B3               	movwf	EEPROM_24C1025_Read_Buffer@range
 10761  14D1  2CD5               	goto	l6342
 10762  14D2                     l6340:
 10763  14D2  1283               	bcf	3,5	;RP0=0, select bank0
 10764  14D3  1303               	bcf	3,6	;RP1=0, select bank0
 10765  14D4  01B3               	clrf	EEPROM_24C1025_Read_Buffer@range
 10766  14D5                     l6342:
 10767                           
 10768                           ;EEPROM_24C1025.c: 91:      ctrl=chip_add;
 10769                           
 10770                           ;EEPROM_24C1025.c: 92:      ctrl<<=1;
 10771                           
 10772                           ;EEPROM_24C1025.c: 93:      ctrl |= 0xA0;
 10773                           
 10774                           ;EEPROM_24C1025.c: 94:      ctrl |= 0b00000001;
 10775                           
 10776                           ;EEPROM_24C1025.c: 95:      ctrl |= range;
 10777  14D5  27CA  160A  118A   	fcall	PL50	;call to abstracted procedure
 10778                           
 10779                           ;EEPROM_24C1025.c: 97:      I2C_Master_Start();
 10780  14D8  249A  160A  118A   	fcall	_I2C_Master_Start
 10781                           
 10782                           ;EEPROM_24C1025.c: 98:      I2C_Master_Write(ctrl & 0xFE);
 10783  14DB  27F4  160A  118A   	fcall	PL74	;call to abstracted procedure
 10784  14DE  2762  160A  118A   	fcall	_I2C_Master_Write
 10785                           
 10786                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(((char *)&mem_add)[1]);
 10787  14E1  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10788  14E2  00A3               	movwf	I2C_Master_Write@d
 10789  14E3  01A4               	clrf	I2C_Master_Write@d+1
 10790  14E4  2762  160A  118A   	fcall	_I2C_Master_Write
 10791                           
 10792                           ;EEPROM_24C1025.c: 100:      I2C_Master_Write(((char *)&mem_add)[0]);
 10793  14E7  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10794  14E8  00A3               	movwf	I2C_Master_Write@d
 10795  14E9  01A4               	clrf	I2C_Master_Write@d+1
 10796  14EA  2762  160A  118A   	fcall	_I2C_Master_Write
 10797                           
 10798                           ;EEPROM_24C1025.c: 101:      I2C_Master_RepeatedStart();
 10799  14ED  2772  160A  118A   	fcall	_I2C_Master_RepeatedStart
 10800                           
 10801                           ;EEPROM_24C1025.c: 102:      I2C_Master_Write(ctrl);
 10802  14F0  1283               	bcf	3,5	;RP0=0, select bank0
 10803  14F1  0834               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 10804  14F2  00A3               	movwf	I2C_Master_Write@d
 10805  14F3  01A4               	clrf	I2C_Master_Write@d+1
 10806  14F4  2762  160A  118A   	fcall	_I2C_Master_Write
 10807                           
 10808                           ;EEPROM_24C1025.c: 104:      for(char cnt=0;cnt<(sizedata);cnt++)
 10809  14F7  01B1               	clrf	EEPROM_24C1025_Read_Buffer@cnt_108
 10810  14F8                     l6418:
 10811  14F8  082E               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 10812  14F9  0231               	subwf	EEPROM_24C1025_Read_Buffer@cnt_108,w
 10813  14FA  1803               	btfsc	3,0
 10814  14FB  2D7F               	goto	l6420
 10815  14FC  0064               	clrwdt	;# 
 10816                           
 10817                           ;EEPROM_24C1025.c: 107:            if(mem_add>0x1FFFF) break;
 10818  14FD  1283               	bcf	3,5	;RP0=0, select bank0
 10819  14FE  1303               	bcf	3,6	;RP1=0, select bank0
 10820  14FF  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 10821  1500  1D03               	btfss	3,2
 10822  1501  2D7F               	goto	l6420
 10823  1502  3002               	movlw	2
 10824  1503  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 10825  1504  1D03               	skipz
 10826  1505  2D0C               	goto	u5733
 10827  1506  3000               	movlw	0
 10828  1507  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10829  1508  1D03               	skipz
 10830  1509  2D0C               	goto	u5733
 10831  150A  3000               	movlw	0
 10832  150B  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10833  150C                     u5733:
 10834  150C  1803               	btfsc	3,0
 10835  150D  2D7F               	goto	l6420
 10836                           
 10837                           ;EEPROM_24C1025.c: 108:            if((mem_add+1)%128==0)
 10838  150E  1283               	bcf	3,5	;RP0=0, select bank0
 10839  150F  1303               	bcf	3,6	;RP1=0, select bank0
 10840  1510  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10841  1511  3E01               	addlw	1
 10842  1512  397F               	andlw	127
 10843  1513  1D03               	btfss	3,2
 10844  1514  2D6A               	goto	l6410
 10845                           
 10846                           ;EEPROM_24C1025.c: 109:              {;EEPROM_24C1025.c: 110:              (*data)=I2C_M
      +                          aster_Read(0);
 10847  1515  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 10848  1516  0084               	movwf	4
 10849  1517  01A3               	clrf	I2C_Master_Read@a
 10850  1518  01A4               	clrf	I2C_Master_Read@a+1
 10851  1519  2450  160A  118A   	fcall	_I2C_Master_Read
 10852  151C  0823               	movf	?_I2C_Master_Read,w
 10853  151D  1383               	bcf	3,7	;select IRP bank0
 10854  151E  0080               	movwf	0
 10855                           
 10856                           ;EEPROM_24C1025.c: 111:              I2C_Master_Stop();
 10857  151F  276B  160A  118A   	fcall	_I2C_Master_Stop
 10858                           
 10859                           ;EEPROM_24C1025.c: 113:              my_delay_ms_WDT(5);
 10860  1522  27B1  160A  118A   	fcall	PL38	;call to abstracted procedure
 10861  1525  277B  160A  118A   	fcall	_my_delay_ms_WDT
 10862                           
 10863                           ;EEPROM_24C1025.c: 114:              mem_add++;
 10864  1528  0AAA               	incf	EEPROM_24C1025_Read_Buffer@mem_add,f
 10865  1529  1903               	skipnz
 10866  152A  0AAB               	incf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 10867  152B  1903               	skipnz
 10868  152C  0AAC               	incf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 10869  152D  1903               	skipnz
 10870  152E  0AAD               	incf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 10871                           
 10872                           ;EEPROM_24C1025.c: 115:              data++;
 10873  152F  0AAF               	incf	EEPROM_24C1025_Read_Buffer@data,f
 10874                           
 10875                           ;EEPROM_24C1025.c: 116:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10876  1530  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 10877  1531  1D03               	btfss	3,2
 10878  1532  2D3F               	goto	l6384
 10879  1533  3001               	movlw	1
 10880  1534  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 10881  1535  1D03               	skipz
 10882  1536  2D3D               	goto	u5753
 10883  1537  3000               	movlw	0
 10884  1538  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10885  1539  1D03               	skipz
 10886  153A  2D3D               	goto	u5753
 10887  153B  3000               	movlw	0
 10888  153C  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10889  153D                     u5753:
 10890  153D  1C03               	btfss	3,0
 10891  153E  2D44               	goto	l6386
 10892  153F                     l6384:
 10893  153F  3008               	movlw	8
 10894  1540  1283               	bcf	3,5	;RP0=0, select bank0
 10895  1541  1303               	bcf	3,6	;RP1=0, select bank0
 10896  1542  00B3               	movwf	EEPROM_24C1025_Read_Buffer@range
 10897  1543  2D47               	goto	l6388
 10898  1544                     l6386:
 10899  1544  1283               	bcf	3,5	;RP0=0, select bank0
 10900  1545  1303               	bcf	3,6	;RP1=0, select bank0
 10901  1546  01B3               	clrf	EEPROM_24C1025_Read_Buffer@range
 10902  1547                     l6388:
 10903                           
 10904                           ;EEPROM_24C1025.c: 117:              ctrl=chip_add;
 10905                           
 10906                           ;EEPROM_24C1025.c: 118:              ctrl<<=1;
 10907                           
 10908                           ;EEPROM_24C1025.c: 119:              ctrl |= 0xA0;
 10909                           
 10910                           ;EEPROM_24C1025.c: 120:              ctrl |= 0b00000001;
 10911                           
 10912                           ;EEPROM_24C1025.c: 121:              ctrl |= range;
 10913  1547  27CA  160A  118A   	fcall	PL50	;call to abstracted procedure
 10914                           
 10915                           ;EEPROM_24C1025.c: 123:              I2C_Master_Start();
 10916  154A  249A  160A  118A   	fcall	_I2C_Master_Start
 10917                           
 10918                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl & 0xFE);
 10919  154D  27F4  160A  118A   	fcall	PL74	;call to abstracted procedure
 10920  1550  2762  160A  118A   	fcall	_I2C_Master_Write
 10921                           
 10922                           ;EEPROM_24C1025.c: 125:              I2C_Master_Write(((char *)&mem_add)[1]);
 10923  1553  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 10924  1554  00A3               	movwf	I2C_Master_Write@d
 10925  1555  01A4               	clrf	I2C_Master_Write@d+1
 10926  1556  2762  160A  118A   	fcall	_I2C_Master_Write
 10927                           
 10928                           ;EEPROM_24C1025.c: 126:              I2C_Master_Write(((char *)&mem_add)[0]);
 10929  1559  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 10930  155A  00A3               	movwf	I2C_Master_Write@d
 10931  155B  01A4               	clrf	I2C_Master_Write@d+1
 10932  155C  2762  160A  118A   	fcall	_I2C_Master_Write
 10933                           
 10934                           ;EEPROM_24C1025.c: 127:              I2C_Master_RepeatedStart();
 10935  155F  2772  160A  118A   	fcall	_I2C_Master_RepeatedStart
 10936                           
 10937                           ;EEPROM_24C1025.c: 128:              I2C_Master_Write(ctrl);
 10938  1562  1283               	bcf	3,5	;RP0=0, select bank0
 10939  1563  0834               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 10940  1564  00A3               	movwf	I2C_Master_Write@d
 10941  1565  01A4               	clrf	I2C_Master_Write@d+1
 10942  1566  2762  160A  118A   	fcall	_I2C_Master_Write
 10943                           
 10944                           ;EEPROM_24C1025.c: 129:              }
 10945  1569  2D7D               	goto	l6416
 10946  156A                     l6410:
 10947                           
 10948                           ;EEPROM_24C1025.c: 131:              {;EEPROM_24C1025.c: 132:              (*data)=I2C_M
      +                          aster_Read(1);
 10949  156A  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 10950  156B  0084               	movwf	4
 10951  156C  01A3               	clrf	I2C_Master_Read@a
 10952  156D  0AA3               	incf	I2C_Master_Read@a,f
 10953  156E  01A4               	clrf	I2C_Master_Read@a+1
 10954  156F  2450  160A  118A   	fcall	_I2C_Master_Read
 10955  1572  0823               	movf	?_I2C_Master_Read,w
 10956  1573  1383               	bcf	3,7	;select IRP bank0
 10957  1574  0080               	movwf	0
 10958                           
 10959                           ;EEPROM_24C1025.c: 133:              data++;
 10960  1575  0AAF               	incf	EEPROM_24C1025_Read_Buffer@data,f
 10961                           
 10962                           ;EEPROM_24C1025.c: 134:              mem_add++;
 10963  1576  0AAA               	incf	EEPROM_24C1025_Read_Buffer@mem_add,f
 10964  1577  1903               	skipnz
 10965  1578  0AAB               	incf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 10966  1579  1903               	skipnz
 10967  157A  0AAC               	incf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 10968  157B  1903               	skipnz
 10969  157C  0AAD               	incf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 10970  157D                     l6416:
 10971                           
 10972                           ;EEPROM_24C1025.c: 136:         }
 10973  157D  0AB1               	incf	EEPROM_24C1025_Read_Buffer@cnt_108,f
 10974  157E  2CF8               	goto	l6418
 10975  157F                     l6420:
 10976                           
 10977                           ;EEPROM_24C1025.c: 137:         I2C_Master_Read(0);
 10978  157F  1283               	bcf	3,5	;RP0=0, select bank0
 10979  1580  1303               	bcf	3,6	;RP1=0, select bank0
 10980  1581  01A3               	clrf	I2C_Master_Read@a
 10981  1582  01A4               	clrf	I2C_Master_Read@a+1
 10982  1583  2450  160A  118A   	fcall	_I2C_Master_Read
 10983                           
 10984                           ;EEPROM_24C1025.c: 138:         I2C_Master_Stop();
 10985  1586  276B  160A  118A   	fcall	_I2C_Master_Stop
 10986                           
 10987                           ;EEPROM_24C1025.c: 139:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 10988  1589  30B9               	movlw	185
 10989  158A  1283               	bcf	3,5	;RP0=0, select bank0
 10990  158B  1303               	bcf	3,6	;RP1=0, select bank0
 10991  158C  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 10992  158D                     u6737:
 10993  158D  2D8E               	nop2
 10994  158E  2D8F               	nop2
 10995  158F  0BB0               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 10996  1590  2D8D               	goto	u6737
 10997  1591  2D92               	nop2
 10998  1592  0008               	return
 10999  1593                     __end_of_EEPROM_24C1025_Read_Buffer:
 11000  1593                     __ptext46:	
 11001 ;; *************** function _EEPROM_24C1025_Read_Buffer_USART *****************
 11002 ;; Defined at:
 11003 ;;		line 148 in file "EEPROM_24C1025.c"
 11004 ;; Parameters:    Size  Location     Type
 11005 ;;  chip_add        1    wreg     unsigned char 
 11006 ;;  mem_add         4    7[BANK0 ] unsigned long 
 11007 ;;  sizedata        1   11[BANK0 ] unsigned char 
 11008 ;;  data            1   12[BANK0 ] PTR unsigned char 
 11009 ;;		 -> buffer(33), 
 11010 ;; Auto vars:     Size  Location     Type
 11011 ;;  chip_add        1   15[BANK0 ] unsigned char 
 11012 ;;  cnt             1   14[BANK0 ] unsigned char 
 11013 ;;  ctrl            1   17[BANK0 ] unsigned char 
 11014 ;;  range           1   16[BANK0 ] unsigned char 
 11015 ;;  cnt             1    0        unsigned char 
 11016 ;; Return value:  Size  Location     Type
 11017 ;;                  1    wreg      void 
 11018 ;; Registers used:
 11019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11020 ;; Tracked objects:
 11021 ;;		On entry : 300/300
 11022 ;;		On exit  : 0/0
 11023 ;;		Unchanged: 0/0
 11024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11025 ;;      Params:         0       6       0       0       0
 11026 ;;      Locals:         0       4       0       0       0
 11027 ;;      Temps:          0       1       0       0       0
 11028 ;;      Totals:         0      11       0       0       0
 11029 ;;Total ram usage:       11 bytes
 11030 ;; Hardware stack levels used: 1
 11031 ;; Hardware stack levels required when called: 3
 11032 ;; This function calls:
 11033 ;;		_I2C_Master_Read
 11034 ;;		_I2C_Master_RepeatedStart
 11035 ;;		_I2C_Master_Start
 11036 ;;		_I2C_Master_Stop
 11037 ;;		_I2C_Master_Write
 11038 ;;		_USART_putc
 11039 ;; This function is called by:
 11040 ;;		_Decodify_Command
 11041 ;; This function uses a non-reentrant model
 11042 ;;
 11043                           
 11044                           
 11045                           ;psect for function _EEPROM_24C1025_Read_Buffer_USART
 11046  1593                     _EEPROM_24C1025_Read_Buffer_USART:
 11047                           
 11048                           ;incstack = 0
 11049                           ; Regs used in _EEPROM_24C1025_Read_Buffer_USART: [wreg-fsr0h+status,2+status,0+pclath+c
      +                          stack]
 11050                           ;EEPROM_24C1025_Read_Buffer_USART@chip_add stored from wreg
 11051  1593  1283               	bcf	3,5	;RP0=0, select bank0
 11052  1594  1303               	bcf	3,6	;RP1=0, select bank0
 11053  1595  00AF               	movwf	EEPROM_24C1025_Read_Buffer_USART@chip_add
 11054                           
 11055                           ;EEPROM_24C1025.c: 155:      unsigned char ctrl;;EEPROM_24C1025.c: 157:      Delay_Led_M
      +                          emory=20;
 11056                           
 11057                           ;EEPROM_24C1025.c: 159:      if(mem_add>0x1FFFF) return;
 11058  1596  27B8  160A  118A   	fcall	PL42	;call to abstracted procedure
 11059  1599  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11060  159A  1D03               	btfss	3,2
 11061  159B  0008               	return
 11062  159C  3002               	movlw	2
 11063  159D  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11064  159E  1D03               	skipz
 11065  159F  2DA6               	goto	u5893
 11066  15A0  3000               	movlw	0
 11067  15A1  0228               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11068  15A2  1D03               	skipz
 11069  15A3  2DA6               	goto	u5893
 11070  15A4  3000               	movlw	0
 11071  15A5  0227               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11072  15A6                     u5893:
 11073  15A6  1803               	btfsc	3,0
 11074  15A7  0008               	return
 11075                           
 11076                           ;EEPROM_24C1025.c: 161:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11077  15A8  1283               	bcf	3,5	;RP0=0, select bank0
 11078  15A9  1303               	bcf	3,6	;RP1=0, select bank0
 11079  15AA  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11080  15AB  1D03               	btfss	3,2
 11081  15AC  2DB9               	goto	l6570
 11082  15AD  3001               	movlw	1
 11083  15AE  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11084  15AF  1D03               	skipz
 11085  15B0  2DB7               	goto	u5903
 11086  15B1  3000               	movlw	0
 11087  15B2  0228               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11088  15B3  1D03               	skipz
 11089  15B4  2DB7               	goto	u5903
 11090  15B5  3000               	movlw	0
 11091  15B6  0227               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11092  15B7                     u5903:
 11093  15B7  1C03               	btfss	3,0
 11094  15B8  2DBE               	goto	l6572
 11095  15B9                     l6570:
 11096  15B9  3008               	movlw	8
 11097  15BA  1283               	bcf	3,5	;RP0=0, select bank0
 11098  15BB  1303               	bcf	3,6	;RP1=0, select bank0
 11099  15BC  00B0               	movwf	EEPROM_24C1025_Read_Buffer_USART@range
 11100  15BD  2DC1               	goto	l6574
 11101  15BE                     l6572:
 11102  15BE  1283               	bcf	3,5	;RP0=0, select bank0
 11103  15BF  1303               	bcf	3,6	;RP1=0, select bank0
 11104  15C0  01B0               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11105  15C1                     l6574:
 11106                           
 11107                           ;EEPROM_24C1025.c: 162:      ctrl=chip_add;
 11108                           
 11109                           ;EEPROM_24C1025.c: 163:      ctrl<<=1;
 11110                           
 11111                           ;EEPROM_24C1025.c: 164:      ctrl |= 0xA0;
 11112                           
 11113                           ;EEPROM_24C1025.c: 165:      ctrl |= 0b00000001;
 11114                           
 11115                           ;EEPROM_24C1025.c: 166:      ctrl |= range;
 11116  15C1  27D4  160A  118A   	fcall	PL52	;call to abstracted procedure
 11117                           
 11118                           ;EEPROM_24C1025.c: 168:      I2C_Master_Start();
 11119  15C4  249A  160A  118A   	fcall	_I2C_Master_Start
 11120                           
 11121                           ;EEPROM_24C1025.c: 169:      I2C_Master_Write(ctrl & 0xFE);
 11122  15C7  27EE  160A  118A   	fcall	PL72	;call to abstracted procedure
 11123  15CA  2762  160A  118A   	fcall	_I2C_Master_Write
 11124                           
 11125                           ;EEPROM_24C1025.c: 170:      I2C_Master_Write(((char *)&mem_add)[1]);
 11126  15CD  0828               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11127  15CE  00A3               	movwf	I2C_Master_Write@d
 11128  15CF  01A4               	clrf	I2C_Master_Write@d+1
 11129  15D0  2762  160A  118A   	fcall	_I2C_Master_Write
 11130                           
 11131                           ;EEPROM_24C1025.c: 171:      I2C_Master_Write(((char *)&mem_add)[0]);
 11132  15D3  0827               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11133  15D4  00A3               	movwf	I2C_Master_Write@d
 11134  15D5  01A4               	clrf	I2C_Master_Write@d+1
 11135  15D6  2762  160A  118A   	fcall	_I2C_Master_Write
 11136                           
 11137                           ;EEPROM_24C1025.c: 172:      I2C_Master_RepeatedStart();
 11138  15D9  2772  160A  118A   	fcall	_I2C_Master_RepeatedStart
 11139                           
 11140                           ;EEPROM_24C1025.c: 173:      I2C_Master_Write(ctrl);
 11141  15DC  1283               	bcf	3,5	;RP0=0, select bank0
 11142  15DD  0831               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11143  15DE  00A3               	movwf	I2C_Master_Write@d
 11144  15DF  01A4               	clrf	I2C_Master_Write@d+1
 11145  15E0  2762  160A  118A   	fcall	_I2C_Master_Write
 11146                           
 11147                           ;EEPROM_24C1025.c: 175:      for(char cnt=0;cnt<(sizedata);cnt++)
 11148  15E3  01AE               	clrf	EEPROM_24C1025_Read_Buffer_USART@cnt_117
 11149  15E4                     l6646:
 11150  15E4  082B               	movf	EEPROM_24C1025_Read_Buffer_USART@sizedata,w
 11151  15E5  022E               	subwf	EEPROM_24C1025_Read_Buffer_USART@cnt_117,w
 11152  15E6  1803               	btfsc	3,0
 11153  15E7  2E73               	goto	l6648
 11154  15E8  0064               	clrwdt	;# 
 11155                           
 11156                           ;EEPROM_24C1025.c: 178:            if(mem_add>0x1FFFF) break;
 11157  15E9  1283               	bcf	3,5	;RP0=0, select bank0
 11158  15EA  1303               	bcf	3,6	;RP1=0, select bank0
 11159  15EB  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11160  15EC  1D03               	btfss	3,2
 11161  15ED  2E73               	goto	l6648
 11162  15EE  3002               	movlw	2
 11163  15EF  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11164  15F0  1D03               	skipz
 11165  15F1  2DF8               	goto	u5913
 11166  15F2  3000               	movlw	0
 11167  15F3  0228               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11168  15F4  1D03               	skipz
 11169  15F5  2DF8               	goto	u5913
 11170  15F6  3000               	movlw	0
 11171  15F7  0227               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11172  15F8                     u5913:
 11173  15F8  1803               	btfsc	3,0
 11174  15F9  2E73               	goto	l6648
 11175                           
 11176                           ;EEPROM_24C1025.c: 179:            if((mem_add+1)%128==0)
 11177  15FA  1283               	bcf	3,5	;RP0=0, select bank0
 11178  15FB  1303               	bcf	3,6	;RP1=0, select bank0
 11179  15FC  0827               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11180  15FD  3E01               	addlw	1
 11181  15FE  397F               	andlw	127
 11182  15FF  1D03               	btfss	3,2
 11183  1600  2E58               	goto	l6640
 11184                           
 11185                           ;EEPROM_24C1025.c: 180:              {;EEPROM_24C1025.c: 181:              (*data)=I2C_M
      +                          aster_Read(0);
 11186  1601  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11187  1602  0084               	movwf	4
 11188  1603  01A3               	clrf	I2C_Master_Read@a
 11189  1604  01A4               	clrf	I2C_Master_Read@a+1
 11190  1605  2450  160A  118A   	fcall	_I2C_Master_Read
 11191  1608  0823               	movf	?_I2C_Master_Read,w
 11192  1609  1783               	bsf	3,7	;select IRP bank2
 11193  160A  0080               	movwf	0
 11194                           
 11195                           ;EEPROM_24C1025.c: 182:              I2C_Master_Stop();
 11196  160B  276B               	fcall	_I2C_Master_Stop
 11197                           
 11198                           ;EEPROM_24C1025.c: 183:              USART_putc(*data);
 11199  160C  1283               	bcf	3,5	;RP0=0, select bank0
 11200  160D  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11201  160E  0084               	movwf	4
 11202  160F  1783               	bsf	3,7	;select IRP bank2
 11203  1610  0800               	movf	0,w
 11204  1611  120A  118A  2391  160A  118A  	fcall	_USART_putc
 11205                           
 11206                           ;EEPROM_24C1025.c: 186:              mem_add++;
 11207  1616  1283               	bcf	3,5	;RP0=0, select bank0
 11208  1617  0AA7               	incf	EEPROM_24C1025_Read_Buffer_USART@mem_add,f
 11209  1618  1903               	skipnz
 11210  1619  0AA8               	incf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,f
 11211  161A  1903               	skipnz
 11212  161B  0AA9               	incf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,f
 11213  161C  1903               	skipnz
 11214  161D  0AAA               	incf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,f
 11215                           
 11216                           ;EEPROM_24C1025.c: 188:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11217  161E  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11218  161F  1D03               	btfss	3,2
 11219  1620  2E2D               	goto	l6614
 11220  1621  3001               	movlw	1
 11221  1622  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11222  1623  1D03               	skipz
 11223  1624  2E2B               	goto	u5933
 11224  1625  3000               	movlw	0
 11225  1626  0228               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11226  1627  1D03               	skipz
 11227  1628  2E2B               	goto	u5933
 11228  1629  3000               	movlw	0
 11229  162A  0227               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11230  162B                     u5933:
 11231  162B  1C03               	btfss	3,0
 11232  162C  2E32               	goto	l6616
 11233  162D                     l6614:
 11234  162D  3008               	movlw	8
 11235  162E  1283               	bcf	3,5	;RP0=0, select bank0
 11236  162F  1303               	bcf	3,6	;RP1=0, select bank0
 11237  1630  00B0               	movwf	EEPROM_24C1025_Read_Buffer_USART@range
 11238  1631  2E35               	goto	l6618
 11239  1632                     l6616:
 11240  1632  1283               	bcf	3,5	;RP0=0, select bank0
 11241  1633  1303               	bcf	3,6	;RP1=0, select bank0
 11242  1634  01B0               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11243  1635                     l6618:
 11244                           
 11245                           ;EEPROM_24C1025.c: 189:              ctrl=chip_add;
 11246                           
 11247                           ;EEPROM_24C1025.c: 190:              ctrl<<=1;
 11248                           
 11249                           ;EEPROM_24C1025.c: 191:              ctrl |= 0xA0;
 11250                           
 11251                           ;EEPROM_24C1025.c: 192:              ctrl |= 0b00000001;
 11252                           
 11253                           ;EEPROM_24C1025.c: 193:              ctrl |= range;
 11254  1635  27D4  160A  118A   	fcall	PL52	;call to abstracted procedure
 11255                           
 11256                           ;EEPROM_24C1025.c: 195:              I2C_Master_Start();
 11257  1638  249A  160A  118A   	fcall	_I2C_Master_Start
 11258                           
 11259                           ;EEPROM_24C1025.c: 196:              I2C_Master_Write(ctrl & 0xFE);
 11260  163B  27EE  160A  118A   	fcall	PL72	;call to abstracted procedure
 11261  163E  2762  160A  118A   	fcall	_I2C_Master_Write
 11262                           
 11263                           ;EEPROM_24C1025.c: 197:              I2C_Master_Write(((char *)&mem_add)[1]);
 11264  1641  0828               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11265  1642  00A3               	movwf	I2C_Master_Write@d
 11266  1643  01A4               	clrf	I2C_Master_Write@d+1
 11267  1644  2762  160A  118A   	fcall	_I2C_Master_Write
 11268                           
 11269                           ;EEPROM_24C1025.c: 198:              I2C_Master_Write(((char *)&mem_add)[0]);
 11270  1647  0827               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11271  1648  00A3               	movwf	I2C_Master_Write@d
 11272  1649  01A4               	clrf	I2C_Master_Write@d+1
 11273  164A  2762  160A  118A   	fcall	_I2C_Master_Write
 11274                           
 11275                           ;EEPROM_24C1025.c: 199:              I2C_Master_RepeatedStart();
 11276  164D  2772  160A  118A   	fcall	_I2C_Master_RepeatedStart
 11277                           
 11278                           ;EEPROM_24C1025.c: 200:              I2C_Master_Write(ctrl);
 11279  1650  1283               	bcf	3,5	;RP0=0, select bank0
 11280  1651  0831               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11281  1652  00A3               	movwf	I2C_Master_Write@d
 11282  1653  01A4               	clrf	I2C_Master_Write@d+1
 11283  1654  2762  160A  118A   	fcall	_I2C_Master_Write
 11284                           
 11285                           ;EEPROM_24C1025.c: 201:              }
 11286  1657  2E71               	goto	l6644
 11287  1658                     l6640:
 11288                           
 11289                           ;EEPROM_24C1025.c: 203:              {;EEPROM_24C1025.c: 204:              (*data)=I2C_M
      +                          aster_Read(1);
 11290  1658  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11291  1659  0084               	movwf	4
 11292  165A  01A3               	clrf	I2C_Master_Read@a
 11293  165B  0AA3               	incf	I2C_Master_Read@a,f
 11294  165C  01A4               	clrf	I2C_Master_Read@a+1
 11295  165D  2450               	fcall	_I2C_Master_Read
 11296  165E  0823               	movf	?_I2C_Master_Read,w
 11297  165F  1783               	bsf	3,7	;select IRP bank2
 11298  1660  0080               	movwf	0
 11299                           
 11300                           ;EEPROM_24C1025.c: 205:              USART_putc(*data);
 11301  1661  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11302  1662  0084               	movwf	4
 11303  1663  0800               	movf	0,w
 11304  1664  120A  118A  2391  160A  118A  	fcall	_USART_putc
 11305                           
 11306                           ;EEPROM_24C1025.c: 207:              mem_add++;
 11307  1669  1283               	bcf	3,5	;RP0=0, select bank0
 11308  166A  0AA7               	incf	EEPROM_24C1025_Read_Buffer_USART@mem_add,f
 11309  166B  1903               	skipnz
 11310  166C  0AA8               	incf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,f
 11311  166D  1903               	skipnz
 11312  166E  0AA9               	incf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,f
 11313  166F  1903               	skipnz
 11314  1670  0AAA               	incf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,f
 11315  1671                     l6644:
 11316                           
 11317                           ;EEPROM_24C1025.c: 209:         }
 11318  1671  0AAE               	incf	EEPROM_24C1025_Read_Buffer_USART@cnt_117,f
 11319  1672  2DE4               	goto	l6646
 11320  1673                     l6648:
 11321                           
 11322                           ;EEPROM_24C1025.c: 210:         I2C_Master_Read(0);
 11323  1673  1283               	bcf	3,5	;RP0=0, select bank0
 11324  1674  1303               	bcf	3,6	;RP1=0, select bank0
 11325  1675  01A3               	clrf	I2C_Master_Read@a
 11326  1676  01A4               	clrf	I2C_Master_Read@a+1
 11327  1677  2450  160A  118A   	fcall	_I2C_Master_Read
 11328                           
 11329                           ;EEPROM_24C1025.c: 211:         I2C_Master_Stop();
 11330  167A  276B  160A  118A   	fcall	_I2C_Master_Stop
 11331                           
 11332                           ;EEPROM_24C1025.c: 212:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 11333  167D  30B9               	movlw	185
 11334  167E  1283               	bcf	3,5	;RP0=0, select bank0
 11335  167F  1303               	bcf	3,6	;RP1=0, select bank0
 11336  1680  00AD               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11337  1681                     u6747:
 11338  1681  2E82               	nop2
 11339  1682  2E83               	nop2
 11340  1683  0BAD               	decfsz	??_EEPROM_24C1025_Read_Buffer_USART,f
 11341  1684  2E81               	goto	u6747
 11342  1685  2E86               	nop2
 11343  1686  0008               	return
 11344  1687                     __end_of_EEPROM_24C1025_Read_Buffer_USART:
 11345  1687                     __ptext52:	
 11346 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 11347 ;; Defined at:
 11348 ;;		line 15 in file "EEPROM_24C1025.c"
 11349 ;; Parameters:    Size  Location     Type
 11350 ;;  chip_add        1    wreg     unsigned char 
 11351 ;;  mem_add         4   10[BANK0 ] unsigned long 
 11352 ;;  sizedata        1   14[BANK0 ] unsigned char 
 11353 ;;  data            2   15[BANK0 ] PTR unsigned char 
 11354 ;;		 -> usart_protocol.value(52), usart_protocol(58), EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(
      +1), 
 11355 ;; Auto vars:     Size  Location     Type
 11356 ;;  chip_add        1   20[BANK0 ] unsigned char 
 11357 ;;  ctrl            1   22[BANK0 ] unsigned char 
 11358 ;;  range           1   21[BANK0 ] unsigned char 
 11359 ;;  count           1   19[BANK0 ] unsigned char 
 11360 ;; Return value:  Size  Location     Type
 11361 ;;                  1    wreg      void 
 11362 ;; Registers used:
 11363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11364 ;; Tracked objects:
 11365 ;;		On entry : 0/300
 11366 ;;		On exit  : 0/0
 11367 ;;		Unchanged: 0/0
 11368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11369 ;;      Params:         0       7       0       0       0
 11370 ;;      Locals:         0       4       0       0       0
 11371 ;;      Temps:          0       2       0       0       0
 11372 ;;      Totals:         0      13       0       0       0
 11373 ;;Total ram usage:       13 bytes
 11374 ;; Hardware stack levels used: 1
 11375 ;; Hardware stack levels required when called: 3
 11376 ;; This function calls:
 11377 ;;		_I2C_Master_Start
 11378 ;;		_I2C_Master_Stop
 11379 ;;		_I2C_Master_Write
 11380 ;;		_my_delay_ms_WDT
 11381 ;; This function is called by:
 11382 ;;		_EEPROM_24C1025_Write_Byte
 11383 ;;		_EEPROM_24C1025_Write_Int
 11384 ;;		_Decodify_Command
 11385 ;; This function uses a non-reentrant model
 11386 ;;
 11387                           
 11388                           
 11389                           ;psect for function _EEPROM_24C1025_Write_Buffer
 11390  1687                     _EEPROM_24C1025_Write_Buffer:
 11391                           
 11392                           ;incstack = 0
 11393                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
 11394                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 11395  1687  1283               	bcf	3,5	;RP0=0, select bank0
 11396  1688  1303               	bcf	3,6	;RP1=0, select bank0
 11397  1689  00B4               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 11398                           
 11399                           ;EEPROM_24C1025.c: 21:      unsigned char ctrl;;EEPROM_24C1025.c: 22:      unsigned char
      +                           count;;EEPROM_24C1025.c: 24:      Delay_Led_Memory=20;
 11400                           
 11401                           ;EEPROM_24C1025.c: 26:      if(mem_add>0x1FFFF) return;
 11402  168A  27B8  160A  118A   	fcall	PL42	;call to abstracted procedure
 11403  168D  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11404  168E  1D03               	btfss	3,2
 11405  168F  0008               	return
 11406  1690  3002               	movlw	2
 11407  1691  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11408  1692  1D03               	skipz
 11409  1693  2E9A               	goto	u5563
 11410  1694  3000               	movlw	0
 11411  1695  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11412  1696  1D03               	skipz
 11413  1697  2E9A               	goto	u5563
 11414  1698  3000               	movlw	0
 11415  1699  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11416  169A                     u5563:
 11417  169A  1803               	btfsc	3,0
 11418  169B  0008               	return
 11419                           
 11420                           ;EEPROM_24C1025.c: 28:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11421  169C  1283               	bcf	3,5	;RP0=0, select bank0
 11422  169D  1303               	bcf	3,6	;RP1=0, select bank0
 11423  169E  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11424  169F  1D03               	btfss	3,2
 11425  16A0  2EAD               	goto	l6208
 11426  16A1  3001               	movlw	1
 11427  16A2  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11428  16A3  1D03               	skipz
 11429  16A4  2EAB               	goto	u5573
 11430  16A5  3000               	movlw	0
 11431  16A6  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11432  16A7  1D03               	skipz
 11433  16A8  2EAB               	goto	u5573
 11434  16A9  3000               	movlw	0
 11435  16AA  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11436  16AB                     u5573:
 11437  16AB  1C03               	btfss	3,0
 11438  16AC  2EB2               	goto	l6210
 11439  16AD                     l6208:
 11440  16AD  3008               	movlw	8
 11441  16AE  1283               	bcf	3,5	;RP0=0, select bank0
 11442  16AF  1303               	bcf	3,6	;RP1=0, select bank0
 11443  16B0  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 11444  16B1  2EB5               	goto	l6212
 11445  16B2                     l6210:
 11446  16B2  1283               	bcf	3,5	;RP0=0, select bank0
 11447  16B3  1303               	bcf	3,6	;RP1=0, select bank0
 11448  16B4  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 11449  16B5                     l6212:
 11450                           
 11451                           ;EEPROM_24C1025.c: 29:      ctrl=chip_add;
 11452                           
 11453                           ;EEPROM_24C1025.c: 30:      ctrl<<=1;
 11454                           
 11455                           ;EEPROM_24C1025.c: 31:      ctrl |= 0xA0;
 11456                           
 11457                           ;EEPROM_24C1025.c: 32:      ctrl |= range;
 11458  16B5  27DE  160A  118A   	fcall	PL54	;call to abstracted procedure
 11459                           
 11460                           ;EEPROM_24C1025.c: 34:      I2C_Master_Start();
 11461  16B8  249A  160A  118A   	fcall	_I2C_Master_Start
 11462                           
 11463                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(ctrl);
 11464  16BB  1283               	bcf	3,5	;RP0=0, select bank0
 11465  16BC  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 11466  16BD  00A3               	movwf	I2C_Master_Write@d
 11467  16BE  01A4               	clrf	I2C_Master_Write@d+1
 11468  16BF  2762  160A  118A   	fcall	_I2C_Master_Write
 11469                           
 11470                           ;EEPROM_24C1025.c: 36:      I2C_Master_Write(((char *)&mem_add)[1]);
 11471  16C2  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11472  16C3  00A3               	movwf	I2C_Master_Write@d
 11473  16C4  01A4               	clrf	I2C_Master_Write@d+1
 11474  16C5  2762  160A  118A   	fcall	_I2C_Master_Write
 11475                           
 11476                           ;EEPROM_24C1025.c: 37:      I2C_Master_Write(((char *)&mem_add)[0]);
 11477  16C8  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11478  16C9  00A3               	movwf	I2C_Master_Write@d
 11479  16CA  01A4               	clrf	I2C_Master_Write@d+1
 11480  16CB  2762  160A  118A   	fcall	_I2C_Master_Write
 11481                           
 11482                           ;EEPROM_24C1025.c: 38:      for(count=0;count<(sizedata-1);count++)
 11483  16CE  01B3               	clrf	EEPROM_24C1025_Write_Buffer@count
 11484  16CF                     l6276:
 11485  16CF  082E               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 11486  16D0  3EFF               	addlw	255
 11487  16D1  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 11488  16D2  30FF               	movlw	255
 11489  16D3  1803               	skipnc
 11490  16D4  3000               	movlw	0
 11491  16D5  00B2               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 11492  16D6  3A80               	xorlw	128
 11493  16D7  3C80               	sublw	128
 11494  16D8  1D03               	skipz
 11495  16D9  2EDC               	goto	u5615
 11496  16DA  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 11497  16DB  0233               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 11498  16DC                     u5615:
 11499  16DC  1803               	btfsc	3,0
 11500  16DD  2F53               	goto	l6278
 11501  16DE  0064               	clrwdt	;# 
 11502                           
 11503                           ;EEPROM_24C1025.c: 41:           if(mem_add>0x1FFFF) return;
 11504  16DF  1283               	bcf	3,5	;RP0=0, select bank0
 11505  16E0  1303               	bcf	3,6	;RP1=0, select bank0
 11506  16E1  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11507  16E2  1D03               	btfss	3,2
 11508  16E3  0008               	return
 11509  16E4  3002               	movlw	2
 11510  16E5  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11511  16E6  1D03               	skipz
 11512  16E7  2EEE               	goto	u5583
 11513  16E8  3000               	movlw	0
 11514  16E9  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11515  16EA  1D03               	skipz
 11516  16EB  2EEE               	goto	u5583
 11517  16EC  3000               	movlw	0
 11518  16ED  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11519  16EE                     u5583:
 11520  16EE  1803               	btfsc	3,0
 11521  16EF  0008               	return
 11522                           
 11523                           ;EEPROM_24C1025.c: 42:           if((mem_add+1)%128==0)
 11524  16F0  1283               	bcf	3,5	;RP0=0, select bank0
 11525  16F1  1303               	bcf	3,6	;RP1=0, select bank0
 11526  16F2  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11527  16F3  3E01               	addlw	1
 11528  16F4  397F               	andlw	127
 11529  16F5  1D03               	btfss	3,2
 11530  16F6  2F41               	goto	l6268
 11531                           
 11532                           ;EEPROM_24C1025.c: 43:             {;EEPROM_24C1025.c: 44:             I2C_Master_Write(
      +                          *data);
 11533  16F7  27A8  160A  118A   	fcall	PL30	;call to abstracted procedure
 11534  16FA  2762  160A  118A   	fcall	_I2C_Master_Write
 11535                           
 11536                           ;EEPROM_24C1025.c: 45:             I2C_Master_Stop();
 11537  16FD  276B  160A  118A   	fcall	_I2C_Master_Stop
 11538                           
 11539                           ;EEPROM_24C1025.c: 47:             my_delay_ms_WDT(5);
 11540  1700  27B1  160A  118A   	fcall	PL38	;call to abstracted procedure
 11541  1703  277B  160A  118A   	fcall	_my_delay_ms_WDT
 11542                           
 11543                           ;EEPROM_24C1025.c: 48:             mem_add++;
 11544  1706  0AAA               	incf	EEPROM_24C1025_Write_Buffer@mem_add,f
 11545  1707  1903               	skipnz
 11546  1708  0AAB               	incf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 11547  1709  1903               	skipnz
 11548  170A  0AAC               	incf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 11549  170B  1903               	skipnz
 11550  170C  0AAD               	incf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 11551                           
 11552                           ;EEPROM_24C1025.c: 49:             data++;
 11553  170D  0AAF               	incf	EEPROM_24C1025_Write_Buffer@data,f
 11554  170E  1903               	skipnz
 11555  170F  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 11556                           
 11557                           ;EEPROM_24C1025.c: 50:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11558  1710  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 11559  1711  1D03               	btfss	3,2
 11560  1712  2F1F               	goto	l6248
 11561  1713  3001               	movlw	1
 11562  1714  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 11563  1715  1D03               	skipz
 11564  1716  2F1D               	goto	u5603
 11565  1717  3000               	movlw	0
 11566  1718  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11567  1719  1D03               	skipz
 11568  171A  2F1D               	goto	u5603
 11569  171B  3000               	movlw	0
 11570  171C  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11571  171D                     u5603:
 11572  171D  1C03               	btfss	3,0
 11573  171E  2F24               	goto	l6250
 11574  171F                     l6248:
 11575  171F  3008               	movlw	8
 11576  1720  1283               	bcf	3,5	;RP0=0, select bank0
 11577  1721  1303               	bcf	3,6	;RP1=0, select bank0
 11578  1722  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 11579  1723  2F27               	goto	l6252
 11580  1724                     l6250:
 11581  1724  1283               	bcf	3,5	;RP0=0, select bank0
 11582  1725  1303               	bcf	3,6	;RP1=0, select bank0
 11583  1726  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 11584  1727                     l6252:
 11585                           
 11586                           ;EEPROM_24C1025.c: 51:             ctrl=chip_add;
 11587                           
 11588                           ;EEPROM_24C1025.c: 52:             ctrl<<=1;
 11589                           
 11590                           ;EEPROM_24C1025.c: 53:             ctrl |= 0xA0;
 11591                           
 11592                           ;EEPROM_24C1025.c: 54:             ctrl |= range;
 11593  1727  27DE  160A  118A   	fcall	PL54	;call to abstracted procedure
 11594                           
 11595                           ;EEPROM_24C1025.c: 56:             I2C_Master_Start();
 11596  172A  249A  160A  118A   	fcall	_I2C_Master_Start
 11597                           
 11598                           ;EEPROM_24C1025.c: 57:             I2C_Master_Write(ctrl);
 11599  172D  1283               	bcf	3,5	;RP0=0, select bank0
 11600  172E  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 11601  172F  00A3               	movwf	I2C_Master_Write@d
 11602  1730  01A4               	clrf	I2C_Master_Write@d+1
 11603  1731  2762  160A  118A   	fcall	_I2C_Master_Write
 11604                           
 11605                           ;EEPROM_24C1025.c: 58:             I2C_Master_Write(((char *)&mem_add)[1]);
 11606  1734  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 11607  1735  00A3               	movwf	I2C_Master_Write@d
 11608  1736  01A4               	clrf	I2C_Master_Write@d+1
 11609  1737  2762  160A  118A   	fcall	_I2C_Master_Write
 11610                           
 11611                           ;EEPROM_24C1025.c: 59:             I2C_Master_Write(((char *)&mem_add)[0]);
 11612  173A  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 11613  173B  00A3               	movwf	I2C_Master_Write@d
 11614  173C  01A4               	clrf	I2C_Master_Write@d+1
 11615  173D  2762  160A  118A   	fcall	_I2C_Master_Write
 11616                           
 11617                           ;EEPROM_24C1025.c: 60:             }
 11618  1740  2F51               	goto	l6274
 11619  1741                     l6268:
 11620                           
 11621                           ;EEPROM_24C1025.c: 62:             {;EEPROM_24C1025.c: 63:             I2C_Master_Write(
      +                          *data);
 11622  1741  27A8  160A  118A   	fcall	PL30	;call to abstracted procedure
 11623  1744  2762  160A  118A   	fcall	_I2C_Master_Write
 11624                           
 11625                           ;EEPROM_24C1025.c: 64:             data++;
 11626  1747  0AAF               	incf	EEPROM_24C1025_Write_Buffer@data,f
 11627  1748  1903               	skipnz
 11628  1749  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 11629                           
 11630                           ;EEPROM_24C1025.c: 65:             mem_add++;
 11631  174A  0AAA               	incf	EEPROM_24C1025_Write_Buffer@mem_add,f
 11632  174B  1903               	skipnz
 11633  174C  0AAB               	incf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 11634  174D  1903               	skipnz
 11635  174E  0AAC               	incf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 11636  174F  1903               	skipnz
 11637  1750  0AAD               	incf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 11638  1751                     l6274:
 11639                           
 11640                           ;EEPROM_24C1025.c: 67:      }
 11641  1751  0AB3               	incf	EEPROM_24C1025_Write_Buffer@count,f
 11642  1752  2ECF               	goto	l6276
 11643  1753                     l6278:
 11644                           
 11645                           ;EEPROM_24C1025.c: 68:      I2C_Master_Write(*data);
 11646  1753  1283               	bcf	3,5	;RP0=0, select bank0
 11647  1754  1303               	bcf	3,6	;RP1=0, select bank0
 11648  1755  27A8  160A  118A   	fcall	PL30	;call to abstracted procedure
 11649  1758  2762  160A  118A   	fcall	_I2C_Master_Write
 11650                           
 11651                           ;EEPROM_24C1025.c: 69:      I2C_Master_Stop();
 11652  175B  276B  160A  118A   	fcall	_I2C_Master_Stop
 11653                           
 11654                           ;EEPROM_24C1025.c: 71:      my_delay_ms_WDT(5);
 11655  175E  27B1  160A  118A   	fcall	PL38	;call to abstracted procedure
 11656  1761  2F7B               	ljmp	l3890
 11657  1762                     __end_of_EEPROM_24C1025_Write_Buffer:
 11658  1762                     __ptext54:	
 11659 ;; *************** function _I2C_Master_Write *****************
 11660 ;; Defined at:
 11661 ;;		line 79 in file "I2C.c"
 11662 ;; Parameters:    Size  Location     Type
 11663 ;;  d               2    3[BANK0 ] unsigned int 
 11664 ;; Auto vars:     Size  Location     Type
 11665 ;;		None
 11666 ;; Return value:  Size  Location     Type
 11667 ;;                  1    wreg      void 
 11668 ;; Registers used:
 11669 ;;		wreg, status,2, status,0, pclath, cstack
 11670 ;; Tracked objects:
 11671 ;;		On entry : 300/0
 11672 ;;		On exit  : 300/0
 11673 ;;		Unchanged: 0/0
 11674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11675 ;;      Params:         0       2       0       0       0
 11676 ;;      Locals:         0       0       0       0       0
 11677 ;;      Temps:          0       0       0       0       0
 11678 ;;      Totals:         0       2       0       0       0
 11679 ;;Total ram usage:        2 bytes
 11680 ;; Hardware stack levels used: 1
 11681 ;; Hardware stack levels required when called: 2
 11682 ;; This function calls:
 11683 ;;		_I2C_Master_Wait
 11684 ;; This function is called by:
 11685 ;;		_EEPROM_24C1025_Write_Buffer
 11686 ;;		_EEPROM_24C1025_Read_Buffer
 11687 ;;		_EEPROM_24C1025_Read_Buffer_USART
 11688 ;;		_EEPROM_24C1025_Write_Str
 11689 ;;		_EEPROM_24C1025_Read_Str
 11690 ;; This function uses a non-reentrant model
 11691 ;;
 11692                           
 11693                           
 11694                           ;psect for function _I2C_Master_Write
 11695  1762                     _I2C_Master_Write:
 11696                           
 11697                           ;I2C.c: 79: void I2C_Master_Write(unsigned d);I2C.c: 80: {;I2C.c: 81:   if(I2C_Master_Wa
      +                          it())
 11698                           
 11699                           ;incstack = 0
 11700                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 11701  1762  247B  160A  118A   	fcall	_I2C_Master_Wait
 11702  1765  3A00               	xorlw	0
 11703  1766  1903               	skipnz
 11704  1767  0008               	return
 11705                           
 11706                           ;I2C.c: 82:     {;I2C.c: 83:     SSPBUF = d;
 11707  1768  0823               	movf	I2C_Master_Write@d,w
 11708  1769  0093               	movwf	19	;volatile
 11709  176A  0008               	return
 11710  176B                     __end_of_I2C_Master_Write:
 11711  176B                     __ptext55:	
 11712 ;; *************** function _I2C_Master_Stop *****************
 11713 ;; Defined at:
 11714 ;;		line 70 in file "I2C.c"
 11715 ;; Parameters:    Size  Location     Type
 11716 ;;		None
 11717 ;; Auto vars:     Size  Location     Type
 11718 ;;		None
 11719 ;; Return value:  Size  Location     Type
 11720 ;;                  1    wreg      void 
 11721 ;; Registers used:
 11722 ;;		wreg, status,2, status,0, pclath, cstack
 11723 ;; Tracked objects:
 11724 ;;		On entry : 300/800
 11725 ;;		On exit  : 200/0
 11726 ;;		Unchanged: 0/0
 11727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11728 ;;      Params:         0       0       0       0       0
 11729 ;;      Locals:         0       0       0       0       0
 11730 ;;      Temps:          0       0       0       0       0
 11731 ;;      Totals:         0       0       0       0       0
 11732 ;;Total ram usage:        0 bytes
 11733 ;; Hardware stack levels used: 1
 11734 ;; Hardware stack levels required when called: 2
 11735 ;; This function calls:
 11736 ;;		_I2C_Master_Wait
 11737 ;; This function is called by:
 11738 ;;		_EEPROM_24C1025_Write_Buffer
 11739 ;;		_EEPROM_24C1025_Read_Buffer
 11740 ;;		_EEPROM_24C1025_Read_Buffer_USART
 11741 ;;		_EEPROM_24C1025_Write_Str
 11742 ;;		_EEPROM_24C1025_Read_Str
 11743 ;; This function uses a non-reentrant model
 11744 ;;
 11745                           
 11746                           
 11747                           ;psect for function _I2C_Master_Stop
 11748  176B                     _I2C_Master_Stop:
 11749                           
 11750                           ;I2C.c: 72:   if(I2C_Master_Wait())
 11751                           
 11752                           ;incstack = 0
 11753                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 11754  176B  247B               	fcall	_I2C_Master_Wait
 11755  176C  3A00               	xorlw	0
 11756                           
 11757                           ;I2C.c: 73:     {;I2C.c: 74:     SSPCON2bits.PEN = 1;
 11758  176D  1683               	bsf	3,5	;RP0=1, select bank1
 11759  176E  1D03               	btfss	3,2
 11760  176F  1511               	bsf	17,2	;volatile
 11761                           
 11762                           ;I2C.c: 76:   INTCONbits.GIE=1;
 11763                           
 11764                           ;I2C.c: 75:     }
 11765  1770  178B               	bsf	11,7	;volatile
 11766  1771  0008               	return
 11767  1772                     __end_of_I2C_Master_Stop:
 11768  1772                     __ptext48:	
 11769 ;; *************** function _I2C_Master_RepeatedStart *****************
 11770 ;; Defined at:
 11771 ;;		line 62 in file "I2C.c"
 11772 ;; Parameters:    Size  Location     Type
 11773 ;;		None
 11774 ;; Auto vars:     Size  Location     Type
 11775 ;;		None
 11776 ;; Return value:  Size  Location     Type
 11777 ;;                  1    wreg      void 
 11778 ;; Registers used:
 11779 ;;		wreg, status,2, status,0, pclath, cstack
 11780 ;; Tracked objects:
 11781 ;;		On entry : 300/0
 11782 ;;		On exit  : 200/0
 11783 ;;		Unchanged: 0/0
 11784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11785 ;;      Params:         0       0       0       0       0
 11786 ;;      Locals:         0       0       0       0       0
 11787 ;;      Temps:          0       0       0       0       0
 11788 ;;      Totals:         0       0       0       0       0
 11789 ;;Total ram usage:        0 bytes
 11790 ;; Hardware stack levels used: 1
 11791 ;; Hardware stack levels required when called: 2
 11792 ;; This function calls:
 11793 ;;		_I2C_Master_Wait
 11794 ;; This function is called by:
 11795 ;;		_EEPROM_24C1025_Read_Buffer
 11796 ;;		_EEPROM_24C1025_Read_Buffer_USART
 11797 ;;		_EEPROM_24C1025_Read_Str
 11798 ;; This function uses a non-reentrant model
 11799 ;;
 11800                           
 11801                           
 11802                           ;psect for function _I2C_Master_RepeatedStart
 11803  1772                     _I2C_Master_RepeatedStart:
 11804                           
 11805                           ;I2C.c: 64:   if(I2C_Master_Wait())
 11806                           
 11807                           ;incstack = 0
 11808                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 11809  1772  247B  160A  118A   	fcall	_I2C_Master_Wait
 11810  1775  3A00               	xorlw	0
 11811  1776  1903               	skipnz
 11812  1777  0008               	return
 11813                           
 11814                           ;I2C.c: 65:     {;I2C.c: 66:     SSPCON2bits.RSEN = 1;
 11815  1778  1683               	bsf	3,5	;RP0=1, select bank1
 11816  1779  1491               	bsf	17,1	;volatile
 11817  177A  0008               	return
 11818  177B                     __end_of_I2C_Master_RepeatedStart:
 11819  177B                     __ptext53:	
 11820 ;; *************** function _my_delay_ms_WDT *****************
 11821 ;; Defined at:
 11822 ;;		line 13 in file "my_delay.c"
 11823 ;; Parameters:    Size  Location     Type
 11824 ;;  time            4    0[BANK0 ] long 
 11825 ;; Auto vars:     Size  Location     Type
 11826 ;;  i               4    6[BANK0 ] long 
 11827 ;; Return value:  Size  Location     Type
 11828 ;;                  1    wreg      void 
 11829 ;; Registers used:
 11830 ;;		wreg, status,2, status,0, btemp+1
 11831 ;; Tracked objects:
 11832 ;;		On entry : 300/0
 11833 ;;		On exit  : 300/0
 11834 ;;		Unchanged: 0/0
 11835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11836 ;;      Params:         0       4       0       0       0
 11837 ;;      Locals:         0       4       0       0       0
 11838 ;;      Temps:          0       2       0       0       0
 11839 ;;      Totals:         0      10       0       0       0
 11840 ;;Total ram usage:       10 bytes
 11841 ;; Hardware stack levels used: 1
 11842 ;; Hardware stack levels required when called: 1
 11843 ;; This function calls:
 11844 ;;		Nothing
 11845 ;; This function is called by:
 11846 ;;		_EEPROM_24C1025_Write_Buffer
 11847 ;;		_EEPROM_24C1025_Read_Buffer
 11848 ;;		_EEPROM_24C1025_Write_Str
 11849 ;;		_main
 11850 ;; This function uses a non-reentrant model
 11851 ;;
 11852                           
 11853                           
 11854                           ;psect for function _my_delay_ms_WDT
 11855  177B                     _my_delay_ms_WDT:
 11856  177B                     l3890:	
 11857                           ;incstack = 0
 11858                           ; Regs used in _my_delay_ms_WDT: [wreg+status,2+status,0+btemp+1]
 11859                           
 11860                           
 11861                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
 11862  177B  01A6               	clrf	my_delay_ms_WDT@i
 11863  177C  01A7               	clrf	my_delay_ms_WDT@i+1
 11864  177D  01A8               	clrf	my_delay_ms_WDT@i+2
 11865  177E  01A9               	clrf	my_delay_ms_WDT@i+3
 11866  177F                     l3896:
 11867  177F  0829               	movf	my_delay_ms_WDT@i+3,w
 11868  1780  3A80               	xorlw	128
 11869  1781  00FF               	movwf	127
 11870  1782  0823               	movf	my_delay_ms_WDT@time+3,w
 11871  1783  3A80               	xorlw	128
 11872  1784  027F               	subwf	127,w
 11873  1785  1D03               	skipz
 11874  1786  2F91               	goto	u2693
 11875  1787  0822               	movf	my_delay_ms_WDT@time+2,w
 11876  1788  0228               	subwf	my_delay_ms_WDT@i+2,w
 11877  1789  1D03               	skipz
 11878  178A  2F91               	goto	u2693
 11879  178B  0821               	movf	my_delay_ms_WDT@time+1,w
 11880  178C  0227               	subwf	my_delay_ms_WDT@i+1,w
 11881  178D  1D03               	skipz
 11882  178E  2F91               	goto	u2693
 11883  178F  0820               	movf	my_delay_ms_WDT@time,w
 11884  1790  0226               	subwf	my_delay_ms_WDT@i,w
 11885  1791                     u2693:
 11886  1791  1803               	btfsc	3,0
 11887  1792  0008               	return
 11888  1793  0064               	clrwdt	;# 
 11889                           
 11890                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
 11891  1794  3003               	movlw	3
 11892  1795  1283               	bcf	3,5	;RP0=0, select bank0
 11893  1796  1303               	bcf	3,6	;RP1=0, select bank0
 11894  1797  00A5               	movwf	??_my_delay_ms_WDT+1
 11895  1798  3097               	movlw	151
 11896  1799  00A4               	movwf	??_my_delay_ms_WDT
 11897  179A                     u6757:
 11898  179A  0BA4               	decfsz	??_my_delay_ms_WDT,f
 11899  179B  2F9A               	goto	u6757
 11900  179C  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
 11901  179D  2F9A               	goto	u6757
 11902                           
 11903                           ;my_delay.c: 19:             }
 11904  179E  1283               	bcf	3,5	;RP0=0, select bank0
 11905  179F  1303               	bcf	3,6	;RP1=0, select bank0
 11906  17A0  0AA6               	incf	my_delay_ms_WDT@i,f
 11907  17A1  1903               	skipnz
 11908  17A2  0AA7               	incf	my_delay_ms_WDT@i+1,f
 11909  17A3  1903               	skipnz
 11910  17A4  0AA8               	incf	my_delay_ms_WDT@i+2,f
 11911  17A5  1903               	skipnz
 11912  17A6  0AA9               	incf	my_delay_ms_WDT@i+3,f
 11913  17A7  2F7F               	goto	l3896
 11914  17A8                     __end_of_my_delay_ms_WDT:
 11915  17A8                     PL30:
 11916  17A8  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 11917  17A9  0084               	movwf	4
 11918  17AA  1783               	bsf	3,7
 11919  17AB  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 11920  17AC  1383               	bcf	3,7
 11921  17AD  0800               	movf	0,w
 11922  17AE  00A3               	movwf	I2C_Master_Write@d
 11923  17AF  01A4               	clrf	I2C_Master_Write@d+1
 11924  17B0  0008               	return
 11925  17B1                     __end_ofPL30:
 11926  17B1                     PL38:
 11927  17B1  3005               	movlw	5
 11928  17B2  1283               	bcf	3,5	;RP0=0, select bank0
 11929  17B3  00A0               	movwf	my_delay_ms_WDT@time
 11930  17B4  01A1               	clrf	my_delay_ms_WDT@time+1
 11931  17B5  01A2               	clrf	my_delay_ms_WDT@time+2
 11932  17B6  01A3               	clrf	my_delay_ms_WDT@time+3
 11933  17B7  0008               	return
 11934  17B8                     __end_ofPL38:
 11935  17B8                     PL42:
 11936  17B8  3014               	movlw	20
 11937  17B9  1683               	bsf	3,5	;RP0=1, select bank3
 11938  17BA  1703               	bsf	3,6	;RP1=1, select bank3
 11939  17BB  00AC               	movwf	_Delay_Led_Memory^(0+384)	;volatile
 11940  17BC  01AD               	clrf	(_Delay_Led_Memory+1)^(0+384)	;volatile
 11941  17BD  1283               	bcf	3,5	;RP0=0, select bank0
 11942  17BE  1303               	bcf	3,6	;RP1=0, select bank0
 11943  17BF  0008               	return
 11944  17C0                     __end_ofPL42:
 11945  17C0                     PL48:
 11946  17C0  082F               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 11947  17C1  00B1               	movwf	EEPROM_24C1025_Read_Str@ctrl
 11948  17C2  30A0               	movlw	160
 11949  17C3  1003               	clrc
 11950  17C4  0DB1               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 11951  17C5  04B1               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11952  17C6  1431               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 11953  17C7  0830               	movf	EEPROM_24C1025_Read_Str@range,w
 11954  17C8  04B1               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 11955  17C9  0008               	return
 11956  17CA                     __end_ofPL48:
 11957  17CA                     PL50:
 11958  17CA  0832               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11959  17CB  00B4               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11960  17CC  30A0               	movlw	160
 11961  17CD  1003               	clrc
 11962  17CE  0DB4               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11963  17CF  04B4               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11964  17D0  1434               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11965  17D1  0833               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11966  17D2  04B4               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11967  17D3  0008               	return
 11968  17D4                     __end_ofPL50:
 11969  17D4                     PL52:
 11970  17D4  082F               	movf	EEPROM_24C1025_Read_Buffer_USART@chip_add,w
 11971  17D5  00B1               	movwf	EEPROM_24C1025_Read_Buffer_USART@ctrl
 11972  17D6  30A0               	movlw	160
 11973  17D7  1003               	clrc
 11974  17D8  0DB1               	rlf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11975  17D9  04B1               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11976  17DA  1431               	bsf	EEPROM_24C1025_Read_Buffer_USART@ctrl,0
 11977  17DB  0830               	movf	EEPROM_24C1025_Read_Buffer_USART@range,w
 11978  17DC  04B1               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11979  17DD  0008               	return
 11980  17DE                     __end_ofPL52:
 11981  17DE                     PL54:
 11982  17DE  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 11983  17DF  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 11984  17E0  30A0               	movlw	160
 11985  17E1  1003               	clrc
 11986  17E2  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 11987  17E3  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 11988  17E4  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 11989  17E5  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 11990  17E6  0008               	return
 11991  17E7                     __end_ofPL54:
 11992  17E7                     PL62:
 11993  17E7  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 11994  17E8  0084               	movwf	4
 11995  17E9  1783               	bsf	3,7	;select IRP bank2
 11996  17EA  0800               	movf	0,w
 11997  17EB  00A3               	movwf	I2C_Master_Write@d
 11998  17EC  01A4               	clrf	I2C_Master_Write@d+1
 11999  17ED  0008               	return
 12000  17EE                     __end_ofPL62:
 12001  17EE                     PL72:
 12002  17EE  1283               	bcf	3,5	;RP0=0, select bank0
 12003  17EF  0831               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 12004  17F0  39FE               	andlw	254
 12005  17F1  00A3               	movwf	I2C_Master_Write@d
 12006  17F2  01A4               	clrf	I2C_Master_Write@d+1
 12007  17F3  0008               	return
 12008  17F4                     __end_ofPL72:
 12009  17F4                     PL74:
 12010  17F4  1283               	bcf	3,5	;RP0=0, select bank0
 12011  17F5  0834               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 12012  17F6  39FE               	andlw	254
 12013  17F7  00A3               	movwf	I2C_Master_Write@d
 12014  17F8  01A4               	clrf	I2C_Master_Write@d+1
 12015  17F9  0008               	return
 12016  17FA                     __end_ofPL74:
 12017  17FA                     PL76:
 12018  17FA  1283               	bcf	3,5	;RP0=0, select bank0
 12019  17FB  0831               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 12020  17FC  39FE               	andlw	254
 12021  17FD  00A3               	movwf	I2C_Master_Write@d
 12022  17FE  01A4               	clrf	I2C_Master_Write@d+1
 12023  17FF  0008               	return
 12024  1800                     __end_ofPL76:
 12025                           
 12026                           	psect	text58
 12027  1D0C                     __ptext58:	
 12028 ;; *************** function _Auto_Relay1 *****************
 12029 ;; Defined at:
 12030 ;;		line 893 in file "SlaveLiofilizadorVer1.c"
 12031 ;; Parameters:    Size  Location     Type
 12032 ;;		None
 12033 ;; Auto vars:     Size  Location     Type
 12034 ;;		None
 12035 ;; Return value:  Size  Location     Type
 12036 ;;                  1    wreg      void 
 12037 ;; Registers used:
 12038 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12039 ;; Tracked objects:
 12040 ;;		On entry : 200/100
 12041 ;;		On exit  : 0/0
 12042 ;;		Unchanged: 0/0
 12043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12044 ;;      Params:         0       0       0       0       0
 12045 ;;      Locals:         0       0       0       0       0
 12046 ;;      Temps:          0       0       0       0       0
 12047 ;;      Totals:         0       0       0       0       0
 12048 ;;Total ram usage:        0 bytes
 12049 ;; Hardware stack levels used: 1
 12050 ;; Hardware stack levels required when called: 3
 12051 ;; This function calls:
 12052 ;;		_Rele1Desligado
 12053 ;;		_Rele1Ligado
 12054 ;;		___flge
 12055 ;;		___flsub
 12056 ;;		___xxtofl
 12057 ;; This function is called by:
 12058 ;;		_main
 12059 ;; This function uses a non-reentrant model
 12060 ;;
 12061                           
 12062                           
 12063                           ;psect for function _Auto_Relay1
 12064  1D0C                     _Auto_Relay1:
 12065                           
 12066                           ;SlaveLiofilizadorVer1.c: 894:              if(Status1==0)
 12067                           
 12068                           ;incstack = 0
 12069                           ; Regs used in _Auto_Relay1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12070  1D0C  1683               	bsf	3,5	;RP0=1, select bank3
 12071  1D0D  1703               	bsf	3,6	;RP1=1, select bank3
 12072  1D0E  0822               	movf	_Status1^(0+384),w
 12073  1D0F  0423               	iorwf	(_Status1+1)^(0+384),w
 12074  1D10  1D03               	btfss	3,2
 12075  1D11  2D16               	goto	l7176
 12076                           
 12077                           ;SlaveLiofilizadorVer1.c: 895:                  {;SlaveLiofilizadorVer1.c: 896:         
      +                                   if(modoAutonomo1==0)Rele1Desligado();
 12078  1D12  082F               	movf	_modoAutonomo1^(0+384),w
 12079  1D13  1D03               	btfss	3,2
 12080  1D14  0008               	return
 12081  1D15                     l7174:
 12082  1D15  2F85               	ljmp	l6992
 12083  1D16                     l7176:
 12084                           
 12085                           ;SlaveLiofilizadorVer1.c: 899:                  {;SlaveLiofilizadorVer1.c: 901:         
      +                                   if (Temperatura1<=(SetPoint1-Histerese1))
 12086  1D16  0873               	movf	_Histerese1,w
 12087  1D17  1283               	bcf	3,5	;RP0=0, select bank0
 12088  1D18  1303               	bcf	3,6	;RP1=0, select bank0
 12089  1D19  27FA               	fcall	PL84	;call to abstracted procedure
 12090  1D1A  120A  158A  25B5  160A  158A  	fcall	___xxtofl
 12091  1D1F  120A  158A  27B2  160A  158A  	fcall	PL32	;call to abstracted procedure
 12092  1D24  1683               	bsf	3,5	;RP0=1, select bank1
 12093  1D25  0860               	movf	(_SetPoint1+3)^(0+128),w	;volatile
 12094  1D26  1283               	bcf	3,5	;RP0=0, select bank0
 12095  1D27  00D3               	movwf	___flsub@b+3
 12096  1D28  1683               	bsf	3,5	;RP0=1, select bank1
 12097  1D29  085F               	movf	(_SetPoint1+2)^(0+128),w	;volatile
 12098  1D2A  1283               	bcf	3,5	;RP0=0, select bank0
 12099  1D2B  00D2               	movwf	___flsub@b+2
 12100  1D2C  1683               	bsf	3,5	;RP0=1, select bank1
 12101  1D2D  085E               	movf	(_SetPoint1+1)^(0+128),w	;volatile
 12102  1D2E  1283               	bcf	3,5	;RP0=0, select bank0
 12103  1D2F  00D1               	movwf	___flsub@b+1
 12104  1D30  1683               	bsf	3,5	;RP0=1, select bank1
 12105  1D31  085D               	movf	_SetPoint1^(0+128),w	;volatile
 12106  1D32  1283               	bcf	3,5	;RP0=0, select bank0
 12107  1D33  00D0               	movwf	___flsub@b
 12108  1D34  120A  158A  2744  160A  158A  	fcall	___flsub
 12109  1D39  27E6  160A  158A   	fcall	PL40	;call to abstracted procedure
 12110  1D3C  27A3  160A  158A   	fcall	PL6	;call to abstracted procedure
 12111  1D3F  2696  160A  158A   	fcall	___flge
 12112  1D42  1C03               	btfss	3,0
 12113  1D43  2D4C               	goto	l7182
 12114                           
 12115                           ;SlaveLiofilizadorVer1.c: 902:                     {;SlaveLiofilizadorVer1.c: 903:      
      +                                         RL1Status=1;
 12116  1D44  01FC               	clrf	_RL1Status
 12117  1D45  0AFC               	incf	_RL1Status,f
 12118  1D46  2D49               	goto	l7180
 12119  1D47                     l7184:
 12120                           
 12121                           ;SlaveLiofilizadorVer1.c: 907:                           {;SlaveLiofilizadorVer1.c: 908:
      +                                                     if(RL1Status==1)
 12122  1D47  0B7C               	decfsz	_RL1Status,w
 12123  1D48  2D15               	goto	l7174
 12124  1D49                     l7180:
 12125                           
 12126                           ;SlaveLiofilizadorVer1.c: 904:                     Rele1Ligado();
 12127  1D49  120A  158A  2A10   	ljmp	l6974
 12128  1D4C                     l7182:	
 12129                           ;SlaveLiofilizadorVer1.c: 905:                     }
 12130                           
 12131  1D4C  27BD  160A  158A   	fcall	PL10	;call to abstracted procedure
 12132  1D4F  27A3  160A  158A   	fcall	PL6	;call to abstracted procedure
 12133  1D52  2696  160A  158A   	fcall	___flge
 12134  1D55  1803               	btfsc	3,0
 12135  1D56  2D47               	goto	l7184
 12136  1D57  27BD  160A  158A   	fcall	PL10	;call to abstracted procedure
 12137  1D5A  27A3  160A  158A   	fcall	PL6	;call to abstracted procedure
 12138  1D5D  2696  160A  158A   	fcall	___flge
 12139  1D60  1803               	btfsc	3,0
 12140  1D61  0008               	return
 12141                           
 12142                           ;SlaveLiofilizadorVer1.c: 918:                           {;SlaveLiofilizadorVer1.c: 919:
      +                                                     RL1Status=0;
 12143  1D62  01FC               	clrf	_RL1Status
 12144  1D63  2D15               	goto	l7174
 12145  1D64                     __end_of_Auto_Relay1:
 12146  1D64                     __ptext62:	
 12147 ;; *************** function _Auto_Relay0 *****************
 12148 ;; Defined at:
 12149 ;;		line 857 in file "SlaveLiofilizadorVer1.c"
 12150 ;; Parameters:    Size  Location     Type
 12151 ;;		None
 12152 ;; Auto vars:     Size  Location     Type
 12153 ;;		None
 12154 ;; Return value:  Size  Location     Type
 12155 ;;                  1    wreg      void 
 12156 ;; Registers used:
 12157 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12158 ;; Tracked objects:
 12159 ;;		On entry : 300/100
 12160 ;;		On exit  : 200/0
 12161 ;;		Unchanged: 0/0
 12162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12163 ;;      Params:         0       0       0       0       0
 12164 ;;      Locals:         0       0       0       0       0
 12165 ;;      Temps:          0       0       0       0       0
 12166 ;;      Totals:         0       0       0       0       0
 12167 ;;Total ram usage:        0 bytes
 12168 ;; Hardware stack levels used: 1
 12169 ;; Hardware stack levels required when called: 3
 12170 ;; This function calls:
 12171 ;;		_Rele0Desligado
 12172 ;;		_Rele0Ligado
 12173 ;;		___flge
 12174 ;;		___flsub
 12175 ;; This function is called by:
 12176 ;;		_main
 12177 ;; This function uses a non-reentrant model
 12178 ;;
 12179                           
 12180                           
 12181                           ;psect for function _Auto_Relay0
 12182  1D64                     _Auto_Relay0:
 12183                           
 12184                           ;SlaveLiofilizadorVer1.c: 859:                  {;SlaveLiofilizadorVer1.c: 860:         
      +                                   if(modoAutonomo0==0)Rele0Desligado();
 12185                           
 12186                           ;incstack = 0
 12187                           ; Regs used in _Auto_Relay0: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12188  1D64  1703               	bsf	3,6	;RP1=1, select bank3
 12189  1D65  0824               	movf	_Status0^(0+384),w
 12190  1D66  0425               	iorwf	(_Status0+1)^(0+384),w
 12191  1D67  1D03               	btfss	3,2
 12192  1D68  2D6A               	goto	l7150
 12193  1D69                     l7148:
 12194  1D69  2F81               	ljmp	l6990
 12195  1D6A                     l7150:
 12196                           
 12197                           ;SlaveLiofilizadorVer1.c: 863:                  {;SlaveLiofilizadorVer1.c: 865:         
      +                                   if (Temperatura0<=(SetPoint0-Histerese0))
 12198  1D6A  081B               	movf	(_Histerese0+3)^(0+384),w
 12199  1D6B  1283               	bcf	3,5	;RP0=0, select bank0
 12200  1D6C  1303               	bcf	3,6	;RP1=0, select bank0
 12201  1D6D  00CF               	movwf	___flsub@a+3
 12202  1D6E  1683               	bsf	3,5	;RP0=1, select bank3
 12203  1D6F  1703               	bsf	3,6	;RP1=1, select bank3
 12204  1D70  081A               	movf	(_Histerese0+2)^(0+384),w
 12205  1D71  1283               	bcf	3,5	;RP0=0, select bank0
 12206  1D72  1303               	bcf	3,6	;RP1=0, select bank0
 12207  1D73  00CE               	movwf	___flsub@a+2
 12208  1D74  1683               	bsf	3,5	;RP0=1, select bank3
 12209  1D75  1703               	bsf	3,6	;RP1=1, select bank3
 12210  1D76  0819               	movf	(_Histerese0+1)^(0+384),w
 12211  1D77  1283               	bcf	3,5	;RP0=0, select bank0
 12212  1D78  1303               	bcf	3,6	;RP1=0, select bank0
 12213  1D79  00CD               	movwf	___flsub@a+1
 12214  1D7A  1683               	bsf	3,5	;RP0=1, select bank3
 12215  1D7B  1703               	bsf	3,6	;RP1=1, select bank3
 12216  1D7C  0818               	movf	_Histerese0^(0+384),w
 12217  1D7D  1283               	bcf	3,5	;RP0=0, select bank0
 12218  1D7E  1303               	bcf	3,6	;RP1=0, select bank0
 12219  1D7F  00CC               	movwf	___flsub@a
 12220  1D80  1683               	bsf	3,5	;RP0=1, select bank1
 12221  1D81  0864               	movf	(_SetPoint0+3)^(0+128),w	;volatile
 12222  1D82  1283               	bcf	3,5	;RP0=0, select bank0
 12223  1D83  00D3               	movwf	___flsub@b+3
 12224  1D84  1683               	bsf	3,5	;RP0=1, select bank1
 12225  1D85  0863               	movf	(_SetPoint0+2)^(0+128),w	;volatile
 12226  1D86  1283               	bcf	3,5	;RP0=0, select bank0
 12227  1D87  00D2               	movwf	___flsub@b+2
 12228  1D88  1683               	bsf	3,5	;RP0=1, select bank1
 12229  1D89  0862               	movf	(_SetPoint0+1)^(0+128),w	;volatile
 12230  1D8A  1283               	bcf	3,5	;RP0=0, select bank0
 12231  1D8B  00D1               	movwf	___flsub@b+1
 12232  1D8C  1683               	bsf	3,5	;RP0=1, select bank1
 12233  1D8D  0861               	movf	_SetPoint0^(0+128),w	;volatile
 12234  1D8E  1283               	bcf	3,5	;RP0=0, select bank0
 12235  1D8F  00D0               	movwf	___flsub@b
 12236  1D90  120A  158A  2744  160A  158A  	fcall	___flsub
 12237  1D95  27E6  160A  158A   	fcall	PL40	;call to abstracted procedure
 12238  1D98  2789  160A  158A   	fcall	PL2	;call to abstracted procedure
 12239  1D9B  2696  160A  158A   	fcall	___flge
 12240  1D9E  1C03               	btfss	3,0
 12241  1D9F  2DAA               	goto	l7156
 12242                           
 12243                           ;SlaveLiofilizadorVer1.c: 866:                     {;SlaveLiofilizadorVer1.c: 867:      
      +                                         RL0Status=1;
 12244  1DA0  1683               	bsf	3,5	;RP0=1, select bank1
 12245  1DA1  01ED               	clrf	_RL0Status^(0+128)
 12246  1DA2  0AED               	incf	_RL0Status^(0+128),f
 12247  1DA3  2DA7               	goto	l7154
 12248  1DA4                     l7158:
 12249                           
 12250                           ;SlaveLiofilizadorVer1.c: 871:                           {;SlaveLiofilizadorVer1.c: 872:
      +                                                     if(RL0Status==1)
 12251  1DA4  1683               	bsf	3,5	;RP0=1, select bank1
 12252  1DA5  0B6D               	decfsz	_RL0Status^(0+128),w
 12253  1DA6  2D69               	goto	l7148
 12254  1DA7                     l7154:
 12255                           
 12256                           ;SlaveLiofilizadorVer1.c: 868:                     Rele0Ligado();
 12257  1DA7  120A  158A  29F9   	ljmp	l6958
 12258  1DAA                     l7156:	
 12259                           ;SlaveLiofilizadorVer1.c: 869:                     }
 12260                           
 12261  1DAA  27CD  160A  158A   	fcall	PL12	;call to abstracted procedure
 12262  1DAD  2789  160A  158A   	fcall	PL2	;call to abstracted procedure
 12263  1DB0  2696  160A  158A   	fcall	___flge
 12264  1DB3  1803               	btfsc	3,0
 12265  1DB4  2DA4               	goto	l7158
 12266  1DB5  27CD  160A  158A   	fcall	PL12	;call to abstracted procedure
 12267  1DB8  2789  160A  158A   	fcall	PL2	;call to abstracted procedure
 12268  1DBB  2696  160A  158A   	fcall	___flge
 12269  1DBE  1803               	btfsc	3,0
 12270  1DBF  0008               	return
 12271                           
 12272                           ;SlaveLiofilizadorVer1.c: 882:                           {;SlaveLiofilizadorVer1.c: 883:
      +                                                     RL0Status=0;
 12273  1DC0  1683               	bsf	3,5	;RP0=1, select bank1
 12274  1DC1  01ED               	clrf	_RL0Status^(0+128)
 12275  1DC2  2D69               	goto	l7148
 12276  1DC3                     __end_of_Auto_Relay0:
 12277  1DC3                     __ptext5:	
 12278 ;; *************** function _log *****************
 12279 ;; Defined at:
 12280 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\log.c"
 12281 ;; Parameters:    Size  Location     Type
 12282 ;;  x               4   16[BANK1 ] float 
 12283 ;; Auto vars:     Size  Location     Type
 12284 ;;  exponent        2   77[BANK0 ] int 
 12285 ;; Return value:  Size  Location     Type
 12286 ;;                  4   16[BANK1 ] int 
 12287 ;; Registers used:
 12288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12289 ;; Tracked objects:
 12290 ;;		On entry : 300/100
 12291 ;;		On exit  : 300/100
 12292 ;;		Unchanged: 0/0
 12293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12294 ;;      Params:         0       0       4       0       0
 12295 ;;      Locals:         0       2       0       0       0
 12296 ;;      Temps:          0       0       0       0       0
 12297 ;;      Totals:         0       2       4       0       0
 12298 ;;Total ram usage:        6 bytes
 12299 ;; Hardware stack levels used: 1
 12300 ;; Hardware stack levels required when called: 4
 12301 ;; This function calls:
 12302 ;;		___fladd
 12303 ;;		___fleq
 12304 ;;		___flge
 12305 ;;		___flmul
 12306 ;;		___xxtofl
 12307 ;;		_eval_poly
 12308 ;;		_frexp
 12309 ;; This function is called by:
 12310 ;;		_ADC_Read_NTC
 12311 ;; This function uses a non-reentrant model
 12312 ;;
 12313                           
 12314                           
 12315                           ;psect for function _log
 12316  1DC3                     _log:
 12317                           
 12318                           ;incstack = 0
 12319                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 12320  1DC3  0833               	movf	(log@x+3)^(0+128),w
 12321  1DC4  1283               	bcf	3,5	;RP0=0, select bank0
 12322  1DC5  00D7               	movwf	___flge@ff1+3
 12323  1DC6  1683               	bsf	3,5	;RP0=1, select bank1
 12324  1DC7  0832               	movf	(log@x+2)^(0+128),w
 12325  1DC8  1283               	bcf	3,5	;RP0=0, select bank0
 12326  1DC9  00D6               	movwf	___flge@ff1+2
 12327  1DCA  1683               	bsf	3,5	;RP0=1, select bank1
 12328  1DCB  0831               	movf	(log@x+1)^(0+128),w
 12329  1DCC  1283               	bcf	3,5	;RP0=0, select bank0
 12330  1DCD  00D5               	movwf	___flge@ff1+1
 12331  1DCE  1683               	bsf	3,5	;RP0=1, select bank1
 12332  1DCF  0830               	movf	log@x^(0+128),w
 12333  1DD0  1283               	bcf	3,5	;RP0=0, select bank0
 12334  1DD1  00D4               	movwf	___flge@ff1
 12335  1DD2  01D8               	clrf	___flge@ff2
 12336  1DD3  01D9               	clrf	___flge@ff2+1
 12337  1DD4  01DA               	clrf	___flge@ff2+2
 12338  1DD5  01DB               	clrf	___flge@ff2+3
 12339  1DD6  2696  160A  158A   	fcall	___flge
 12340  1DD9  1803               	btfsc	3,0
 12341  1DDA  2DDC               	goto	l6482
 12342  1DDB  2FEE               	ljmp	PL68	;call to abstracted procedure
 12343  1DDC                     l6482:
 12344  1DDC  1683               	bsf	3,5	;RP0=1, select bank1
 12345  1DDD  0833               	movf	(log@x+3)^(0+128),w
 12346  1DDE  1283               	bcf	3,5	;RP0=0, select bank0
 12347  1DDF  00A3               	movwf	___fleq@ff1+3
 12348  1DE0  1683               	bsf	3,5	;RP0=1, select bank1
 12349  1DE1  0832               	movf	(log@x+2)^(0+128),w
 12350  1DE2  1283               	bcf	3,5	;RP0=0, select bank0
 12351  1DE3  00A2               	movwf	___fleq@ff1+2
 12352  1DE4  1683               	bsf	3,5	;RP0=1, select bank1
 12353  1DE5  0831               	movf	(log@x+1)^(0+128),w
 12354  1DE6  1283               	bcf	3,5	;RP0=0, select bank0
 12355  1DE7  00A1               	movwf	___fleq@ff1+1
 12356  1DE8  1683               	bsf	3,5	;RP0=1, select bank1
 12357  1DE9  0830               	movf	log@x^(0+128),w
 12358  1DEA  1283               	bcf	3,5	;RP0=0, select bank0
 12359  1DEB  27F4  160A  158A   	fcall	PL70	;call to abstracted procedure
 12360  1DEE  2704  160A  158A   	fcall	___fleq
 12361  1DF1  1C03               	btfss	3,0
 12362  1DF2  2DF4               	goto	l6486
 12363  1DF3  2FEE               	ljmp	PL68	;call to abstracted procedure
 12364  1DF4                     l6486:
 12365  1DF4  30BF               	movlw	191
 12366  1DF5  00BB               	movwf	___fladd@b+3
 12367  1DF6  3080               	movlw	128
 12368  1DF7  00BA               	movwf	___fladd@b+2
 12369  1DF8  3040               	movlw	64
 12370  1DF9  01B9               	clrf	___fladd@b+1
 12371  1DFA  01B8               	clrf	___fladd@b
 12372  1DFB  00D7               	movwf	___flmul@b+3
 12373  1DFC  306D               	movlw	(low (log@exponent| 0))& (0+255)
 12374  1DFD  01D6               	clrf	___flmul@b+2
 12375  1DFE  01D5               	clrf	___flmul@b+1
 12376  1DFF  01D4               	clrf	___flmul@b
 12377  1E00  00B0               	movwf	frexp@eptr
 12378  1E01  1683               	bsf	3,5	;RP0=1, select bank1
 12379  1E02  0833               	movf	(log@x+3)^(0+128),w
 12380  1E03  1283               	bcf	3,5	;RP0=0, select bank0
 12381  1E04  00AF               	movwf	frexp@value+3
 12382  1E05  1683               	bsf	3,5	;RP0=1, select bank1
 12383  1E06  0832               	movf	(log@x+2)^(0+128),w
 12384  1E07  1283               	bcf	3,5	;RP0=0, select bank0
 12385  1E08  00AE               	movwf	frexp@value+2
 12386  1E09  1683               	bsf	3,5	;RP0=1, select bank1
 12387  1E0A  0831               	movf	(log@x+1)^(0+128),w
 12388  1E0B  1283               	bcf	3,5	;RP0=0, select bank0
 12389  1E0C  00AD               	movwf	frexp@value+1
 12390  1E0D  1683               	bsf	3,5	;RP0=1, select bank1
 12391  1E0E  0830               	movf	log@x^(0+128),w
 12392  1E0F  1283               	bcf	3,5	;RP0=0, select bank0
 12393  1E10  00AC               	movwf	frexp@value
 12394  1E11  273A               	fcall	_frexp
 12395  1E12  082F               	movf	?_frexp+3,w
 12396  1E13  00DB               	movwf	___flmul@a+3
 12397  1E14  082E               	movf	?_frexp+2,w
 12398  1E15  00DA               	movwf	___flmul@a+2
 12399  1E16  082D               	movf	?_frexp+1,w
 12400  1E17  00D9               	movwf	___flmul@a+1
 12401  1E18  082C               	movf	?_frexp,w
 12402  1E19  00D8               	movwf	___flmul@a
 12403  1E1A  120A  118A  23C3  160A  158A  	fcall	___flmul
 12404  1E1F  27DD               	fcall	PL36	;call to abstracted procedure
 12405  1E20  120A  158A  22D4  160A  158A  	fcall	___fladd
 12406  1E25  083B               	movf	?___fladd+3,w
 12407  1E26  1683               	bsf	3,5	;RP0=1, select bank1
 12408  1E27  00B3               	movwf	(log@x+3)^(0+128)
 12409  1E28  1283               	bcf	3,5	;RP0=0, select bank0
 12410  1E29  083A               	movf	?___fladd+2,w
 12411  1E2A  1683               	bsf	3,5	;RP0=1, select bank1
 12412  1E2B  00B2               	movwf	(log@x+2)^(0+128)
 12413  1E2C  1283               	bcf	3,5	;RP0=0, select bank0
 12414  1E2D  0839               	movf	?___fladd+1,w
 12415  1E2E  1683               	bsf	3,5	;RP0=1, select bank1
 12416  1E2F  00B1               	movwf	(log@x+1)^(0+128)
 12417  1E30  1283               	bcf	3,5	;RP0=0, select bank0
 12418  1E31  0838               	movf	?___fladd,w
 12419  1E32  1683               	bsf	3,5	;RP0=1, select bank1
 12420  1E33  00B0               	movwf	log@x^(0+128)
 12421  1E34  30FF               	movlw	-1
 12422  1E35  1283               	bcf	3,5	;RP0=0, select bank0
 12423  1E36  07ED               	addwf	log@exponent,f
 12424  1E37  1C03               	skipc
 12425  1E38  03EE               	decf	log@exponent+1,f
 12426  1E39  1683               	bsf	3,5	;RP0=1, select bank1
 12427  1E3A  0833               	movf	(log@x+3)^(0+128),w
 12428  1E3B  00A3               	movwf	(eval_poly@x+3)^(0+128)
 12429  1E3C  0832               	movf	(log@x+2)^(0+128),w
 12430  1E3D  00A2               	movwf	(eval_poly@x+2)^(0+128)
 12431  1E3E  0831               	movf	(log@x+1)^(0+128),w
 12432  1E3F  00A1               	movwf	(eval_poly@x+1)^(0+128)
 12433  1E40  0830               	movf	log@x^(0+128),w
 12434  1E41  00A0               	movwf	eval_poly@x^(0+128)
 12435  1E42  3001               	movlw	(low ((log@coeff-__stringbase)| (0+32768)))& (0+255)
 12436  1E43  00A4               	movwf	eval_poly@d^(0+128)
 12437  1E44  3008               	movlw	8
 12438  1E45  00A5               	movwf	eval_poly@n^(0+128)
 12439  1E46  01A6               	clrf	(eval_poly@n+1)^(0+128)
 12440  1E47  120A  158A  2228  160A  158A  	fcall	_eval_poly
 12441  1E4C  0823               	movf	(?_eval_poly+3)^(0+128),w
 12442  1E4D  00B3               	movwf	(log@x+3)^(0+128)
 12443  1E4E  0822               	movf	(?_eval_poly+2)^(0+128),w
 12444  1E4F  00B2               	movwf	(log@x+2)^(0+128)
 12445  1E50  0821               	movf	(?_eval_poly+1)^(0+128),w
 12446  1E51  00B1               	movwf	(log@x+1)^(0+128)
 12447  1E52  0820               	movf	?_eval_poly^(0+128),w
 12448  1E53  00B0               	movwf	log@x^(0+128)
 12449  1E54  0833               	movf	(log@x+3)^(0+128),w
 12450  1E55  1283               	bcf	3,5	;RP0=0, select bank0
 12451  1E56  00BB               	movwf	___fladd@b+3
 12452  1E57  1683               	bsf	3,5	;RP0=1, select bank1
 12453  1E58  0832               	movf	(log@x+2)^(0+128),w
 12454  1E59  1283               	bcf	3,5	;RP0=0, select bank0
 12455  1E5A  00BA               	movwf	___fladd@b+2
 12456  1E5B  1683               	bsf	3,5	;RP0=1, select bank1
 12457  1E5C  0831               	movf	(log@x+1)^(0+128),w
 12458  1E5D  1283               	bcf	3,5	;RP0=0, select bank0
 12459  1E5E  00B9               	movwf	___fladd@b+1
 12460  1E5F  1683               	bsf	3,5	;RP0=1, select bank1
 12461  1E60  0830               	movf	log@x^(0+128),w
 12462  1E61  1283               	bcf	3,5	;RP0=0, select bank0
 12463  1E62  00B8               	movwf	___fladd@b
 12464  1E63  303F               	movlw	63
 12465  1E64  00D7               	movwf	___flmul@b+3
 12466  1E65  3031               	movlw	49
 12467  1E66  00D6               	movwf	___flmul@b+2
 12468  1E67  3072               	movlw	114
 12469  1E68  00D5               	movwf	___flmul@b+1
 12470  1E69  3018               	movlw	24
 12471  1E6A  00D4               	movwf	___flmul@b
 12472  1E6B  086D               	movf	log@exponent,w
 12473  1E6C  00AA               	movwf	___xxtofl@val
 12474  1E6D  086E               	movf	log@exponent+1,w
 12475  1E6E  120A  158A  27D6  160A  158A  	fcall	PL60	;call to abstracted procedure
 12476  1E73  120A  158A  25B5  160A  158A  	fcall	___xxtofl
 12477  1E78  120A  158A  27C4  160A  158A  	fcall	PL56	;call to abstracted procedure
 12478  1E7D  120A  118A  23C3  160A  158A  	fcall	___flmul
 12479  1E82  27DD               	fcall	PL36	;call to abstracted procedure
 12480  1E83  120A  158A  22D4   	fcall	___fladd
 12481  1E86  083B               	movf	?___fladd+3,w
 12482  1E87  1683               	bsf	3,5	;RP0=1, select bank1
 12483  1E88  00B3               	movwf	(?_log+3)^(0+128)
 12484  1E89  1283               	bcf	3,5	;RP0=0, select bank0
 12485  1E8A  083A               	movf	?___fladd+2,w
 12486  1E8B  1683               	bsf	3,5	;RP0=1, select bank1
 12487  1E8C  00B2               	movwf	(?_log+2)^(0+128)
 12488  1E8D  1283               	bcf	3,5	;RP0=0, select bank0
 12489  1E8E  0839               	movf	?___fladd+1,w
 12490  1E8F  1683               	bsf	3,5	;RP0=1, select bank1
 12491  1E90  00B1               	movwf	(?_log+1)^(0+128)
 12492  1E91  1283               	bcf	3,5	;RP0=0, select bank0
 12493  1E92  0838               	movf	?___fladd,w
 12494  1E93  1683               	bsf	3,5	;RP0=1, select bank1
 12495  1E94  00B0               	movwf	?_log^(0+128)
 12496  1E95  0008               	return
 12497  1E96                     __end_of_log:
 12498  1E96                     __ptext65:	
 12499 ;; *************** function ___flge *****************
 12500 ;; Defined at:
 12501 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
 12502 ;; Parameters:    Size  Location     Type
 12503 ;;  ff1             4   52[BANK0 ] unsigned char 
 12504 ;;  ff2             4   56[BANK0 ] unsigned char 
 12505 ;; Auto vars:     Size  Location     Type
 12506 ;;		None
 12507 ;; Return value:  Size  Location     Type
 12508 ;;		None               void
 12509 ;; Registers used:
 12510 ;;		wreg, status,2, status,0
 12511 ;; Tracked objects:
 12512 ;;		On entry : 300/0
 12513 ;;		On exit  : 300/0
 12514 ;;		Unchanged: 0/0
 12515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12516 ;;      Params:         0       8       0       0       0
 12517 ;;      Locals:         0       0       0       0       0
 12518 ;;      Temps:          0       4       0       0       0
 12519 ;;      Totals:         0      12       0       0       0
 12520 ;;Total ram usage:       12 bytes
 12521 ;; Hardware stack levels used: 1
 12522 ;; Hardware stack levels required when called: 1
 12523 ;; This function calls:
 12524 ;;		Nothing
 12525 ;; This function is called by:
 12526 ;;		_Auto_Relay0
 12527 ;;		_Auto_Relay1
 12528 ;;		_log
 12529 ;; This function uses a non-reentrant model
 12530 ;;
 12531                           
 12532                           
 12533                           ;psect for function ___flge
 12534  1E96                     ___flge:
 12535                           
 12536                           ;incstack = 0
 12537                           ; Regs used in ___flge: [wreg+status,2+status,0]
 12538  1E96  3080               	movlw	128
 12539  1E97  01DC               	clrf	??___flge
 12540  1E98  01DD               	clrf	??___flge+1
 12541  1E99  0556               	andwf	___flge@ff1+2,w
 12542  1E9A  00DE               	movwf	??___flge+2
 12543  1E9B  307F               	movlw	127
 12544  1E9C  0557               	andwf	___flge@ff1+3,w
 12545  1E9D  00DF               	movwf	??___flge+3
 12546  1E9E  045E               	iorwf	??___flge+2,w
 12547  1E9F  045D               	iorwf	??___flge+1,w
 12548  1EA0  045C               	iorwf	??___flge,w
 12549  1EA1  1D03               	skipz
 12550  1EA2  2EA7               	goto	l4366
 12551  1EA3  01D4               	clrf	___flge@ff1
 12552  1EA4  01D5               	clrf	___flge@ff1+1
 12553  1EA5  01D6               	clrf	___flge@ff1+2
 12554  1EA6  01D7               	clrf	___flge@ff1+3
 12555  1EA7                     l4366:
 12556  1EA7  3080               	movlw	128
 12557  1EA8  01DC               	clrf	??___flge
 12558  1EA9  01DD               	clrf	??___flge+1
 12559  1EAA  055A               	andwf	___flge@ff2+2,w
 12560  1EAB  00DE               	movwf	??___flge+2
 12561  1EAC  307F               	movlw	127
 12562  1EAD  055B               	andwf	___flge@ff2+3,w
 12563  1EAE  00DF               	movwf	??___flge+3
 12564  1EAF  045E               	iorwf	??___flge+2,w
 12565  1EB0  045D               	iorwf	??___flge+1,w
 12566  1EB1  045C               	iorwf	??___flge,w
 12567  1EB2  1D03               	skipz
 12568  1EB3  2EB8               	goto	l1237
 12569  1EB4  01D8               	clrf	___flge@ff2
 12570  1EB5  01D9               	clrf	___flge@ff2+1
 12571  1EB6  01DA               	clrf	___flge@ff2+2
 12572  1EB7  01DB               	clrf	___flge@ff2+3
 12573  1EB8                     l1237:
 12574  1EB8  1FD7               	btfss	___flge@ff1+3,7
 12575  1EB9  2ED5               	goto	l4372
 12576  1EBA  3080               	movlw	128
 12577  1EBB  01DC               	clrf	??___flge
 12578  1EBC  01DD               	clrf	??___flge+1
 12579  1EBD  01DE               	clrf	??___flge+2
 12580  1EBE  00DF               	movwf	??___flge+3
 12581  1EBF  0854               	movf	___flge@ff1,w
 12582  1EC0  02DC               	subwf	??___flge,f
 12583  1EC1  0855               	movf	___flge@ff1+1,w
 12584  1EC2  1C03               	skipc
 12585  1EC3  0F55               	incfsz	___flge@ff1+1,w
 12586  1EC4  02DD               	subwf	??___flge+1,f
 12587  1EC5  0856               	movf	___flge@ff1+2,w
 12588  1EC6  1C03               	skipc
 12589  1EC7  0F56               	incfsz	___flge@ff1+2,w
 12590  1EC8  02DE               	subwf	??___flge+2,f
 12591  1EC9  0857               	movf	___flge@ff1+3,w
 12592  1ECA  1C03               	skipc
 12593  1ECB  0F57               	incfsz	___flge@ff1+3,w
 12594  1ECC  02DF               	subwf	??___flge+3,f
 12595  1ECD  085F               	movf	??___flge+3,w
 12596  1ECE  00D7               	movwf	___flge@ff1+3
 12597  1ECF  085E               	movf	??___flge+2,w
 12598  1ED0  00D6               	movwf	___flge@ff1+2
 12599  1ED1  085D               	movf	??___flge+1,w
 12600  1ED2  00D5               	movwf	___flge@ff1+1
 12601  1ED3  085C               	movf	??___flge,w
 12602  1ED4  00D4               	movwf	___flge@ff1
 12603  1ED5                     l4372:
 12604  1ED5  1FDB               	btfss	___flge@ff2+3,7
 12605  1ED6  2EF2               	goto	l1239
 12606  1ED7  3080               	movlw	128
 12607  1ED8  01DC               	clrf	??___flge
 12608  1ED9  01DD               	clrf	??___flge+1
 12609  1EDA  01DE               	clrf	??___flge+2
 12610  1EDB  00DF               	movwf	??___flge+3
 12611  1EDC  0858               	movf	___flge@ff2,w
 12612  1EDD  02DC               	subwf	??___flge,f
 12613  1EDE  0859               	movf	___flge@ff2+1,w
 12614  1EDF  1C03               	skipc
 12615  1EE0  0F59               	incfsz	___flge@ff2+1,w
 12616  1EE1  02DD               	subwf	??___flge+1,f
 12617  1EE2  085A               	movf	___flge@ff2+2,w
 12618  1EE3  1C03               	skipc
 12619  1EE4  0F5A               	incfsz	___flge@ff2+2,w
 12620  1EE5  02DE               	subwf	??___flge+2,f
 12621  1EE6  085B               	movf	___flge@ff2+3,w
 12622  1EE7  1C03               	skipc
 12623  1EE8  0F5B               	incfsz	___flge@ff2+3,w
 12624  1EE9  02DF               	subwf	??___flge+3,f
 12625  1EEA  085F               	movf	??___flge+3,w
 12626  1EEB  00DB               	movwf	___flge@ff2+3
 12627  1EEC  085E               	movf	??___flge+2,w
 12628  1EED  00DA               	movwf	___flge@ff2+2
 12629  1EEE  085D               	movf	??___flge+1,w
 12630  1EEF  00D9               	movwf	___flge@ff2+1
 12631  1EF0  085C               	movf	??___flge,w
 12632  1EF1  00D8               	movwf	___flge@ff2
 12633  1EF2                     l1239:
 12634  1EF2  3080               	movlw	128
 12635  1EF3  06D7               	xorwf	___flge@ff1+3,f
 12636  1EF4  06DB               	xorwf	___flge@ff2+3,f
 12637  1EF5  085B               	movf	___flge@ff2+3,w
 12638  1EF6  0257               	subwf	___flge@ff1+3,w
 12639  1EF7  1D03               	skipz
 12640  1EF8  0008               	return
 12641  1EF9  085A               	movf	___flge@ff2+2,w
 12642  1EFA  0256               	subwf	___flge@ff1+2,w
 12643  1EFB  1D03               	skipz
 12644  1EFC  0008               	return
 12645  1EFD  0859               	movf	___flge@ff2+1,w
 12646  1EFE  0255               	subwf	___flge@ff1+1,w
 12647  1EFF  1D03               	skipz
 12648  1F00  0008               	return
 12649  1F01  0858               	movf	___flge@ff2,w
 12650  1F02  0254               	subwf	___flge@ff1,w
 12651  1F03  0008               	return
 12652  1F04                     __end_of___flge:
 12653  1F04                     __ptext7:	
 12654 ;; *************** function ___fleq *****************
 12655 ;; Defined at:
 12656 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fleq.c"
 12657 ;; Parameters:    Size  Location     Type
 12658 ;;  ff1             4    0[BANK0 ] PTR int 
 12659 ;;  ff2             4    4[BANK0 ] PTR int 
 12660 ;; Auto vars:     Size  Location     Type
 12661 ;;		None
 12662 ;; Return value:  Size  Location     Type
 12663 ;;		None               void
 12664 ;; Registers used:
 12665 ;;		wreg, status,2, status,0
 12666 ;; Tracked objects:
 12667 ;;		On entry : 300/0
 12668 ;;		On exit  : 300/0
 12669 ;;		Unchanged: 0/0
 12670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12671 ;;      Params:         0       8       0       0       0
 12672 ;;      Locals:         0       0       0       0       0
 12673 ;;      Temps:          0       4       0       0       0
 12674 ;;      Totals:         0      12       0       0       0
 12675 ;;Total ram usage:       12 bytes
 12676 ;; Hardware stack levels used: 1
 12677 ;; Hardware stack levels required when called: 1
 12678 ;; This function calls:
 12679 ;;		Nothing
 12680 ;; This function is called by:
 12681 ;;		_log
 12682 ;;		_frexp
 12683 ;; This function uses a non-reentrant model
 12684 ;;
 12685                           
 12686                           
 12687                           ;psect for function ___fleq
 12688  1F04                     ___fleq:
 12689                           
 12690                           ;incstack = 0
 12691                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 12692  1F04  3080               	movlw	128
 12693  1F05  01A8               	clrf	??___fleq
 12694  1F06  01A9               	clrf	??___fleq+1
 12695  1F07  0522               	andwf	___fleq@ff1+2,w
 12696  1F08  00AA               	movwf	??___fleq+2
 12697  1F09  307F               	movlw	127
 12698  1F0A  0523               	andwf	___fleq@ff1+3,w
 12699  1F0B  00AB               	movwf	??___fleq+3
 12700  1F0C  042A               	iorwf	??___fleq+2,w
 12701  1F0D  0429               	iorwf	??___fleq+1,w
 12702  1F0E  0428               	iorwf	??___fleq,w
 12703  1F0F  1D03               	skipz
 12704  1F10  2F15               	goto	l3908
 12705  1F11  01A0               	clrf	___fleq@ff1
 12706  1F12  01A1               	clrf	___fleq@ff1+1
 12707  1F13  01A2               	clrf	___fleq@ff1+2
 12708  1F14  01A3               	clrf	___fleq@ff1+3
 12709  1F15                     l3908:
 12710  1F15  3080               	movlw	128
 12711  1F16  01A8               	clrf	??___fleq
 12712  1F17  01A9               	clrf	??___fleq+1
 12713  1F18  0526               	andwf	___fleq@ff2+2,w
 12714  1F19  00AA               	movwf	??___fleq+2
 12715  1F1A  307F               	movlw	127
 12716  1F1B  0527               	andwf	___fleq@ff2+3,w
 12717  1F1C  00AB               	movwf	??___fleq+3
 12718  1F1D  042A               	iorwf	??___fleq+2,w
 12719  1F1E  0429               	iorwf	??___fleq+1,w
 12720  1F1F  0428               	iorwf	??___fleq,w
 12721  1F20  1D03               	skipz
 12722  1F21  2F26               	goto	l3912
 12723  1F22  01A4               	clrf	___fleq@ff2
 12724  1F23  01A5               	clrf	___fleq@ff2+1
 12725  1F24  01A6               	clrf	___fleq@ff2+2
 12726  1F25  01A7               	clrf	___fleq@ff2+3
 12727  1F26                     l3912:
 12728  1F26  0827               	movf	___fleq@ff2+3,w
 12729  1F27  0623               	xorwf	___fleq@ff1+3,w
 12730  1F28  1D03               	skipz
 12731  1F29  2F34               	goto	u2735
 12732  1F2A  0826               	movf	___fleq@ff2+2,w
 12733  1F2B  0622               	xorwf	___fleq@ff1+2,w
 12734  1F2C  1D03               	skipz
 12735  1F2D  2F34               	goto	u2735
 12736  1F2E  0825               	movf	___fleq@ff2+1,w
 12737  1F2F  0621               	xorwf	___fleq@ff1+1,w
 12738  1F30  1D03               	skipz
 12739  1F31  2F34               	goto	u2735
 12740  1F32  0824               	movf	___fleq@ff2,w
 12741  1F33  0620               	xorwf	___fleq@ff1,w
 12742  1F34                     u2735:
 12743  1F34  1903               	skipnz
 12744  1F35  2F38               	goto	l3916
 12745  1F36  1003               	clrc
 12746  1F37  0008               	return
 12747  1F38                     l3916:
 12748  1F38  1403               	setc
 12749  1F39  0008               	return
 12750  1F3A                     __end_of___fleq:
 12751  1F3A                     __ptext6:	
 12752 ;; *************** function _frexp *****************
 12753 ;; Defined at:
 12754 ;;		line 254 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\frexp.c"
 12755 ;; Parameters:    Size  Location     Type
 12756 ;;  value           4   12[BANK0 ] int 
 12757 ;;  eptr            1   16[BANK0 ] PTR int 
 12758 ;;		 -> log@exponent(2), 
 12759 ;; Auto vars:     Size  Location     Type
 12760 ;;		None
 12761 ;; Return value:  Size  Location     Type
 12762 ;;                  4   12[BANK0 ] PTR int 
 12763 ;; Registers used:
 12764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12765 ;; Tracked objects:
 12766 ;;		On entry : 300/0
 12767 ;;		On exit  : B00/0
 12768 ;;		Unchanged: 0/0
 12769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12770 ;;      Params:         0       5       0       0       0
 12771 ;;      Locals:         0       0       0       0       0
 12772 ;;      Temps:          0       2       0       0       0
 12773 ;;      Totals:         0       7       0       0       0
 12774 ;;Total ram usage:        7 bytes
 12775 ;; Hardware stack levels used: 1
 12776 ;; Hardware stack levels required when called: 2
 12777 ;; This function calls:
 12778 ;;		___fleq
 12779 ;; This function is called by:
 12780 ;;		_log
 12781 ;; This function uses a non-reentrant model
 12782 ;;
 12783                           
 12784                           
 12785                           ;psect for function _frexp
 12786  1F3A                     _frexp:
 12787                           
 12788                           ;incstack = 0
 12789                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 12790  1F3A  082F               	movf	frexp@value+3,w
 12791  1F3B  00A3               	movwf	___fleq@ff1+3
 12792  1F3C  082E               	movf	frexp@value+2,w
 12793  1F3D  00A2               	movwf	___fleq@ff1+2
 12794  1F3E  082D               	movf	frexp@value+1,w
 12795  1F3F  00A1               	movwf	___fleq@ff1+1
 12796  1F40  082C               	movf	frexp@value,w
 12797  1F41  27F4  160A  158A   	fcall	PL70	;call to abstracted procedure
 12798  1F44  2704  160A  158A   	fcall	___fleq
 12799  1F47  1C03               	btfss	3,0
 12800  1F48  2F54               	goto	l4430
 12801  1F49  0830               	movf	frexp@eptr,w
 12802  1F4A  0084               	movwf	4
 12803  1F4B  1383               	bcf	3,7	;select IRP bank0
 12804  1F4C  0180               	clrf	0
 12805  1F4D  0A84               	incf	4,f
 12806  1F4E  0180               	clrf	0
 12807  1F4F  01AC               	clrf	?_frexp
 12808  1F50  01AD               	clrf	?_frexp+1
 12809  1F51  01AE               	clrf	?_frexp+2
 12810  1F52  01AF               	clrf	?_frexp+3
 12811  1F53  0008               	return
 12812  1F54                     l4430:
 12813  1F54  082F               	movf	frexp@value+3,w
 12814  1F55  397F               	andlw	127
 12815  1F56  00B1               	movwf	??_frexp
 12816  1F57  01B2               	clrf	??_frexp+1
 12817  1F58  1003               	clrc
 12818  1F59  0DB1               	rlf	??_frexp,f
 12819  1F5A  0DB2               	rlf	??_frexp+1,f
 12820  1F5B  0830               	movf	frexp@eptr,w
 12821  1F5C  0084               	movwf	4
 12822  1F5D  0831               	movf	??_frexp,w
 12823  1F5E  1383               	bcf	3,7	;select IRP bank0
 12824  1F5F  0080               	movwf	0
 12825  1F60  0A84               	incf	4,f
 12826  1F61  0832               	movf	??_frexp+1,w
 12827  1F62  0080               	movwf	0
 12828  1F63  0D2E               	rlf	frexp@value+2,w
 12829  1F64  0D2E               	rlf	frexp@value+2,w
 12830  1F65  3901               	andlw	1
 12831  1F66  00B1               	movwf	??_frexp
 12832  1F67  01B2               	clrf	??_frexp+1
 12833  1F68  0830               	movf	frexp@eptr,w
 12834  1F69  0084               	movwf	4
 12835  1F6A  0831               	movf	??_frexp,w
 12836  1F6B  0480               	iorwf	0,f
 12837  1F6C  0A84               	incf	4,f
 12838  1F6D  0832               	movf	??_frexp+1,w
 12839  1F6E  0480               	iorwf	0,f
 12840  1F6F  0830               	movf	frexp@eptr,w
 12841  1F70  0084               	movwf	4
 12842  1F71  3082               	movlw	130
 12843  1F72  0780               	addwf	0,f
 12844  1F73  0F84               	incfsz	4,f
 12845  1F74  0800               	movf	0,w
 12846  1F75  1803               	skipnc
 12847  1F76  0A00               	incf	0,w
 12848  1F77  00FF               	movwf	127
 12849  1F78  3EFF               	addlw	255
 12850  1F79  0080               	movwf	0
 12851  1F7A  0384               	decf	4,f
 12852  1F7B  082F               	movf	frexp@value+3,w
 12853  1F7C  3980               	andlw	-128
 12854  1F7D  383F               	iorlw	63
 12855  1F7E  00AF               	movwf	frexp@value+3
 12856  1F7F  13AE               	bcf	frexp@value+2,7
 12857  1F80  0008               	return
 12858  1F81                     __end_of_frexp:
 12859  1F81                     __ptext67:	
 12860 ;; *************** function _Rele0Desligado *****************
 12861 ;; Defined at:
 12862 ;;		line 928 in file "SlaveLiofilizadorVer1.c"
 12863 ;; Parameters:    Size  Location     Type
 12864 ;;		None
 12865 ;; Auto vars:     Size  Location     Type
 12866 ;;		None
 12867 ;; Return value:  Size  Location     Type
 12868 ;;                  1    wreg      void 
 12869 ;; Registers used:
 12870 ;;		None
 12871 ;; Tracked objects:
 12872 ;;		On entry : 100/300
 12873 ;;		On exit  : 300/0
 12874 ;;		Unchanged: 0/0
 12875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12876 ;;      Params:         0       0       0       0       0
 12877 ;;      Locals:         0       0       0       0       0
 12878 ;;      Temps:          0       0       0       0       0
 12879 ;;      Totals:         0       0       0       0       0
 12880 ;;Total ram usage:        0 bytes
 12881 ;; Hardware stack levels used: 1
 12882 ;; Hardware stack levels required when called: 1
 12883 ;; This function calls:
 12884 ;;		Nothing
 12885 ;; This function is called by:
 12886 ;;		_Auto_Relay0
 12887 ;; This function uses a non-reentrant model
 12888 ;;
 12889                           
 12890                           
 12891                           ;psect for function _Rele0Desligado
 12892  1F81                     _Rele0Desligado:
 12893  1F81                     l6990:	
 12894                           ;incstack = 0
 12895                           ; Regs used in _Rele0Desligado: []
 12896                           
 12897                           
 12898                           ;SlaveLiofilizadorVer1.c: 929:      PORTCbits.RC0=0;
 12899  1F81  1283               	bcf	3,5	;RP0=0, select bank0
 12900  1F82  1303               	bcf	3,6	;RP1=0, select bank0
 12901  1F83  1007               	bcf	7,0	;volatile
 12902  1F84  0008               	return
 12903  1F85                     __end_of_Rele0Desligado:
 12904  1F85                     __ptext61:	
 12905 ;; *************** function _Rele1Desligado *****************
 12906 ;; Defined at:
 12907 ;;		line 932 in file "SlaveLiofilizadorVer1.c"
 12908 ;; Parameters:    Size  Location     Type
 12909 ;;		None
 12910 ;; Auto vars:     Size  Location     Type
 12911 ;;		None
 12912 ;; Return value:  Size  Location     Type
 12913 ;;                  1    wreg      void 
 12914 ;; Registers used:
 12915 ;;		None
 12916 ;; Tracked objects:
 12917 ;;		On entry : 0/300
 12918 ;;		On exit  : 300/0
 12919 ;;		Unchanged: 0/0
 12920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12921 ;;      Params:         0       0       0       0       0
 12922 ;;      Locals:         0       0       0       0       0
 12923 ;;      Temps:          0       0       0       0       0
 12924 ;;      Totals:         0       0       0       0       0
 12925 ;;Total ram usage:        0 bytes
 12926 ;; Hardware stack levels used: 1
 12927 ;; Hardware stack levels required when called: 1
 12928 ;; This function calls:
 12929 ;;		Nothing
 12930 ;; This function is called by:
 12931 ;;		_Auto_Relay1
 12932 ;; This function uses a non-reentrant model
 12933 ;;
 12934                           
 12935                           
 12936                           ;psect for function _Rele1Desligado
 12937  1F85                     _Rele1Desligado:
 12938  1F85                     l6992:	
 12939                           ;incstack = 0
 12940                           ; Regs used in _Rele1Desligado: []
 12941                           
 12942                           
 12943                           ;SlaveLiofilizadorVer1.c: 933:      PORTCbits.RC1=0;
 12944  1F85  1283               	bcf	3,5	;RP0=0, select bank0
 12945  1F86  1303               	bcf	3,6	;RP1=0, select bank0
 12946  1F87  1087               	bcf	7,1	;volatile
 12947  1F88  0008               	return
 12948  1F89                     __end_of_Rele1Desligado:
 12949  1F89                     PL2:
 12950  1F89  00D4               	movwf	___flge@ff1
 12951  1F8A  1683               	bsf	3,5	;RP0=1, select bank3
 12952  1F8B  1703               	bsf	3,6	;RP1=1, select bank3
 12953  1F8C  0817               	movf	(_Temperatura0+3)^(0+384),w
 12954  1F8D  1283               	bcf	3,5	;RP0=0, select bank0
 12955  1F8E  1303               	bcf	3,6	;RP1=0, select bank0
 12956  1F8F  00DB               	movwf	___flge@ff2+3
 12957  1F90  1683               	bsf	3,5	;RP0=1, select bank3
 12958  1F91  1703               	bsf	3,6	;RP1=1, select bank3
 12959  1F92  0816               	movf	(_Temperatura0+2)^(0+384),w
 12960  1F93  1283               	bcf	3,5	;RP0=0, select bank0
 12961  1F94  1303               	bcf	3,6	;RP1=0, select bank0
 12962  1F95  00DA               	movwf	___flge@ff2+2
 12963  1F96  1683               	bsf	3,5	;RP0=1, select bank3
 12964  1F97  1703               	bsf	3,6	;RP1=1, select bank3
 12965  1F98  0815               	movf	(_Temperatura0+1)^(0+384),w
 12966  1F99  1283               	bcf	3,5	;RP0=0, select bank0
 12967  1F9A  1303               	bcf	3,6	;RP1=0, select bank0
 12968  1F9B  00D9               	movwf	___flge@ff2+1
 12969  1F9C  1683               	bsf	3,5	;RP0=1, select bank3
 12970  1F9D  1703               	bsf	3,6	;RP1=1, select bank3
 12971  1F9E  0814               	movf	_Temperatura0^(0+384),w
 12972  1F9F  1283               	bcf	3,5	;RP0=0, select bank0
 12973  1FA0  1303               	bcf	3,6	;RP1=0, select bank0
 12974  1FA1  00D8               	movwf	___flge@ff2
 12975  1FA2  0008               	return
 12976  1FA3                     __end_ofPL2:
 12977  1FA3                     PL6:
 12978  1FA3  00D4               	movwf	___flge@ff1
 12979  1FA4  1683               	bsf	3,5	;RP0=1, select bank3
 12980  1FA5  1703               	bsf	3,6	;RP1=1, select bank3
 12981  1FA6  0813               	movf	(_Temperatura1+3)^(0+384),w
 12982  1FA7  1283               	bcf	3,5	;RP0=0, select bank0
 12983  1FA8  1303               	bcf	3,6	;RP1=0, select bank0
 12984  1FA9  00DB               	movwf	___flge@ff2+3
 12985  1FAA  1683               	bsf	3,5	;RP0=1, select bank3
 12986  1FAB  1703               	bsf	3,6	;RP1=1, select bank3
 12987  1FAC  0812               	movf	(_Temperatura1+2)^(0+384),w
 12988  1FAD  1283               	bcf	3,5	;RP0=0, select bank0
 12989  1FAE  1303               	bcf	3,6	;RP1=0, select bank0
 12990  1FAF  00DA               	movwf	___flge@ff2+2
 12991  1FB0  1683               	bsf	3,5	;RP0=1, select bank3
 12992  1FB1  1703               	bsf	3,6	;RP1=1, select bank3
 12993  1FB2  0811               	movf	(_Temperatura1+1)^(0+384),w
 12994  1FB3  1283               	bcf	3,5	;RP0=0, select bank0
 12995  1FB4  1303               	bcf	3,6	;RP1=0, select bank0
 12996  1FB5  00D9               	movwf	___flge@ff2+1
 12997  1FB6  1683               	bsf	3,5	;RP0=1, select bank3
 12998  1FB7  1703               	bsf	3,6	;RP1=1, select bank3
 12999  1FB8  0810               	movf	_Temperatura1^(0+384),w
 13000  1FB9  1283               	bcf	3,5	;RP0=0, select bank0
 13001  1FBA  1303               	bcf	3,6	;RP1=0, select bank0
 13002  1FBB  00D8               	movwf	___flge@ff2
 13003  1FBC  0008               	return
 13004  1FBD                     __end_ofPL6:
 13005  1FBD                     PL10:
 13006  1FBD  1683               	bsf	3,5	;RP0=1, select bank1
 13007  1FBE  0860               	movf	(_SetPoint1+3)^(0+128),w	;volatile
 13008  1FBF  1283               	bcf	3,5	;RP0=0, select bank0
 13009  1FC0  00D7               	movwf	___flge@ff1+3
 13010  1FC1  1683               	bsf	3,5	;RP0=1, select bank1
 13011  1FC2  085F               	movf	(_SetPoint1+2)^(0+128),w	;volatile
 13012  1FC3  1283               	bcf	3,5	;RP0=0, select bank0
 13013  1FC4  00D6               	movwf	___flge@ff1+2
 13014  1FC5  1683               	bsf	3,5	;RP0=1, select bank1
 13015  1FC6  085E               	movf	(_SetPoint1+1)^(0+128),w	;volatile
 13016  1FC7  1283               	bcf	3,5	;RP0=0, select bank0
 13017  1FC8  00D5               	movwf	___flge@ff1+1
 13018  1FC9  1683               	bsf	3,5	;RP0=1, select bank1
 13019  1FCA  085D               	movf	_SetPoint1^(0+128),w	;volatile
 13020  1FCB  1283               	bcf	3,5	;RP0=0, select bank0
 13021  1FCC  0008               	return
 13022  1FCD                     __end_ofPL10:
 13023  1FCD                     PL12:
 13024  1FCD  1683               	bsf	3,5	;RP0=1, select bank1
 13025  1FCE  0864               	movf	(_SetPoint0+3)^(0+128),w	;volatile
 13026  1FCF  1283               	bcf	3,5	;RP0=0, select bank0
 13027  1FD0  00D7               	movwf	___flge@ff1+3
 13028  1FD1  1683               	bsf	3,5	;RP0=1, select bank1
 13029  1FD2  0863               	movf	(_SetPoint0+2)^(0+128),w	;volatile
 13030  1FD3  1283               	bcf	3,5	;RP0=0, select bank0
 13031  1FD4  00D6               	movwf	___flge@ff1+2
 13032  1FD5  1683               	bsf	3,5	;RP0=1, select bank1
 13033  1FD6  0862               	movf	(_SetPoint0+1)^(0+128),w	;volatile
 13034  1FD7  1283               	bcf	3,5	;RP0=0, select bank0
 13035  1FD8  00D5               	movwf	___flge@ff1+1
 13036  1FD9  1683               	bsf	3,5	;RP0=1, select bank1
 13037  1FDA  0861               	movf	_SetPoint0^(0+128),w	;volatile
 13038  1FDB  1283               	bcf	3,5	;RP0=0, select bank0
 13039  1FDC  0008               	return
 13040  1FDD                     __end_ofPL12:
 13041  1FDD                     PL36:
 13042  1FDD  0857               	movf	?___flmul+3,w
 13043  1FDE  00BF               	movwf	___fladd@a+3
 13044  1FDF  0856               	movf	?___flmul+2,w
 13045  1FE0  00BE               	movwf	___fladd@a+2
 13046  1FE1  0855               	movf	?___flmul+1,w
 13047  1FE2  00BD               	movwf	___fladd@a+1
 13048  1FE3  0854               	movf	?___flmul,w
 13049  1FE4  00BC               	movwf	___fladd@a
 13050  1FE5  0008               	return
 13051  1FE6                     __end_ofPL36:
 13052  1FE6                     PL40:
 13053  1FE6  084F               	movf	?___flsub+3,w
 13054  1FE7  00D7               	movwf	___flge@ff1+3
 13055  1FE8  084E               	movf	?___flsub+2,w
 13056  1FE9  00D6               	movwf	___flge@ff1+2
 13057  1FEA  084D               	movf	?___flsub+1,w
 13058  1FEB  00D5               	movwf	___flge@ff1+1
 13059  1FEC  084C               	movf	?___flsub,w
 13060  1FED  0008               	return
 13061  1FEE                     __end_ofPL40:
 13062  1FEE                     PL68:
 13063  1FEE  1683               	bsf	3,5	;RP0=1, select bank1
 13064  1FEF  01B0               	clrf	?_log^(0+128)
 13065  1FF0  01B1               	clrf	(?_log+1)^(0+128)
 13066  1FF1  01B2               	clrf	(?_log+2)^(0+128)
 13067  1FF2  01B3               	clrf	(?_log+3)^(0+128)
 13068  1FF3  0008               	return
 13069  1FF4                     __end_ofPL68:
 13070  1FF4                     PL70:
 13071  1FF4  00A0               	movwf	___fleq@ff1
 13072  1FF5  01A4               	clrf	___fleq@ff2
 13073  1FF6  01A5               	clrf	___fleq@ff2+1
 13074  1FF7  01A6               	clrf	___fleq@ff2+2
 13075  1FF8  01A7               	clrf	___fleq@ff2+3
 13076  1FF9  0008               	return
 13077  1FFA                     __end_ofPL70:
 13078  1FFA                     PL84:
 13079  1FFA  00AA               	movwf	___xxtofl@val
 13080  1FFB  3001               	movlw	1
 13081  1FFC  01AB               	clrf	___xxtofl@val+1
 13082  1FFD  01AC               	clrf	___xxtofl@val+2
 13083  1FFE  01AD               	clrf	___xxtofl@val+3
 13084  1FFF  0008               	return
 13085  2000                     __end_ofPL84:
 13086                           
 13087                           	psect	text68
 13088  07EF                     __ptext68:	
 13089 ;; *************** function _ADC_init *****************
 13090 ;; Defined at:
 13091 ;;		line 10 in file "adc.c"
 13092 ;; Parameters:    Size  Location     Type
 13093 ;;		None
 13094 ;; Auto vars:     Size  Location     Type
 13095 ;;		None
 13096 ;; Return value:  Size  Location     Type
 13097 ;;                  1    wreg      void 
 13098 ;; Registers used:
 13099 ;;		wreg, status,2, status,0
 13100 ;; Tracked objects:
 13101 ;;		On entry : 0/100
 13102 ;;		On exit  : 300/0
 13103 ;;		Unchanged: 0/0
 13104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13105 ;;      Params:         0       0       0       0       0
 13106 ;;      Locals:         0       0       0       0       0
 13107 ;;      Temps:          0       0       0       0       0
 13108 ;;      Totals:         0       0       0       0       0
 13109 ;;Total ram usage:        0 bytes
 13110 ;; Hardware stack levels used: 1
 13111 ;; Hardware stack levels required when called: 1
 13112 ;; This function calls:
 13113 ;;		Nothing
 13114 ;; This function is called by:
 13115 ;;		_main
 13116 ;; This function uses a non-reentrant model
 13117 ;;
 13118                           
 13119                           
 13120                           ;psect for function _ADC_init
 13121  07EF                     _ADC_init:
 13122                           
 13123                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 13124                           
 13125                           ;incstack = 0
 13126                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 13127  07EF  30C0               	movlw	192
 13128  07F0  1283               	bcf	3,5	;RP0=0, select bank0
 13129  07F1  1303               	bcf	3,6	;RP1=0, select bank0
 13130  07F2  049F               	iorwf	31,f	;volatile
 13131                           
 13132                           ;adc.c: 12:      ADCON1=0b10000000;
 13133  07F3  3080               	movlw	128
 13134  07F4  1683               	bsf	3,5	;RP0=1, select bank1
 13135  07F5  009F               	movwf	31	;volatile
 13136                           
 13137                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 13138  07F6  179F               	bsf	31,7	;volatile
 13139                           
 13140                           ;adc.c: 14:      ADCON0bits.ADON=1;
 13141  07F7  1283               	bcf	3,5	;RP0=0, select bank0
 13142  07F8  141F               	bsf	31,0	;volatile
 13143  07F9  0008               	return
 13144  07FA                     __end_of_ADC_init:
 13145                           
 13146                           	psect	text69
 13147  10C8                     __ptext69:	
 13148 ;; *************** function _isr *****************
 13149 ;; Defined at:
 13150 ;;		line 29 in file "isr.c"
 13151 ;; Parameters:    Size  Location     Type
 13152 ;;		None
 13153 ;; Auto vars:     Size  Location     Type
 13154 ;;  tempo           2    4[COMMON] unsigned int 
 13155 ;; Return value:  Size  Location     Type
 13156 ;;                  1    wreg      void 
 13157 ;; Registers used:
 13158 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 13159 ;; Tracked objects:
 13160 ;;		On entry : 0/0
 13161 ;;		On exit  : 300/0
 13162 ;;		Unchanged: 0/0
 13163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13164 ;;      Params:         0       0       0       0       0
 13165 ;;      Locals:         2       0       0       0       0
 13166 ;;      Temps:          4       0       0       0       0
 13167 ;;      Totals:         6       0       0       0       0
 13168 ;;Total ram usage:        6 bytes
 13169 ;; Hardware stack levels used: 1
 13170 ;; This function calls:
 13171 ;;		Nothing
 13172 ;; This function is called by:
 13173 ;;		Interrupt level 1
 13174 ;; This function uses a non-reentrant model
 13175 ;;
 13176                           
 13177                           
 13178                           ;psect for function _isr
 13179  10C8                     _isr:
 13180                           
 13181                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 13182  10C8  188B               	btfsc	11,1	;volatile
 13183                           
 13184                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 13185  10C9  108B               	bcf	11,1	;volatile
 13186                           
 13187                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 13188                           
 13189                           ;isr.c: 37:       }
 13190  10CA  1C0C               	btfss	12,0	;volatile
 13191  10CB  2943               	goto	i1l5988
 13192                           
 13193                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 13194  10CC  30B1               	movlw	177
 13195  10CD  008F               	movwf	15	;volatile
 13196                           
 13197                           ;isr.c: 42:                 TMR1L=0xF3;
 13198  10CE  30F3               	movlw	243
 13199  10CF  008E               	movwf	14	;volatile
 13200                           
 13201                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 13202  10D0  100C               	bcf	12,0	;volatile
 13203                           
 13204                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 13205  10D1  1683               	bsf	3,5	;RP0=1, select bank1
 13206  10D2  1FEC               	btfss	_generic_status^(0+128),7
 13207  10D3  28D6               	goto	i1l5936
 13208                           
 13209                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 13210  10D4  13EC               	bcf	_generic_status^(0+128),7
 13211  10D5  0064               	clrwdt	;# 
 13212  10D6                     i1l5936:
 13213                           
 13214                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 13215  10D6  300A               	movlw	10
 13216  10D7  1683               	bsf	3,5	;RP0=1, select bank3
 13217  10D8  1703               	bsf	3,6	;RP1=1, select bank3
 13218  10D9  07AA               	addwf	_Delay_Led_Tmr0^(0+384),f	;volatile
 13219  10DA  1803               	skipnc
 13220  10DB  0AAB               	incf	(_Delay_Led_Tmr0+1)^(0+384),f	;volatile
 13221                           
 13222                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 13223  10DC  3003               	movlw	3
 13224  10DD  022B               	subwf	(_Delay_Led_Tmr0+1)^(0+384),w	;volatile
 13225  10DE  30E8               	movlw	232
 13226  10DF  1903               	skipnz
 13227  10E0  022A               	subwf	_Delay_Led_Tmr0^(0+384),w	;volatile
 13228  10E1  1C03               	skipc
 13229  10E2  28E5               	goto	i1l5940
 13230                           
 13231                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 13232  10E3  01AA               	clrf	_Delay_Led_Tmr0^(0+384)	;volatile
 13233  10E4  01AB               	clrf	(_Delay_Led_Tmr0+1)^(0+384)	;volatile
 13234  10E5                     i1l5940:
 13235                           
 13236                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 13237  10E5  3001               	movlw	1
 13238  10E6  022B               	subwf	(_Delay_Led_Tmr0+1)^(0+384),w	;volatile
 13239  10E7  30F4               	movlw	244
 13240  10E8  1903               	skipnz
 13241  10E9  022A               	subwf	_Delay_Led_Tmr0^(0+384),w	;volatile
 13242  10EA  1803               	skipnc
 13243  10EB  28F0               	goto	i1l719
 13244                           
 13245                           ;isr.c: 55:                    PORTBbits.RB7=1;
 13246  10EC  1283               	bcf	3,5	;RP0=0, select bank0
 13247  10ED  1303               	bcf	3,6	;RP1=0, select bank0
 13248  10EE  1786               	bsf	6,7	;volatile
 13249  10EF  28F3               	goto	i1l5944
 13250  10F0                     i1l719:	
 13251                           ;isr.c: 56:                 else
 13252                           
 13253                           
 13254                           ;isr.c: 57:                    PORTBbits.RB7=0;
 13255  10F0  1283               	bcf	3,5	;RP0=0, select bank0
 13256  10F1  1303               	bcf	3,6	;RP1=0, select bank0
 13257  10F2  1386               	bcf	6,7	;volatile
 13258  10F3                     i1l5944:
 13259                           
 13260                           ;isr.c: 60:                 if(Delay_Led_Usart){
 13261  10F3  1683               	bsf	3,5	;RP0=1, select bank3
 13262  10F4  1703               	bsf	3,6	;RP1=1, select bank3
 13263  10F5  0828               	movf	_Delay_Led_Usart^(0+384),w	;volatile
 13264  10F6  0429               	iorwf	(_Delay_Led_Usart+1)^(0+384),w	;volatile
 13265  10F7  1903               	btfsc	3,2
 13266  10F8  2903               	goto	i1l721
 13267                           
 13268                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 13269  10F9  300A               	movlw	10
 13270  10FA  02A8               	subwf	_Delay_Led_Usart^(0+384),f	;volatile
 13271  10FB  3000               	movlw	0
 13272  10FC  1C03               	skipc
 13273  10FD  03A9               	decf	(_Delay_Led_Usart+1)^(0+384),f	;volatile
 13274  10FE  02A9               	subwf	(_Delay_Led_Usart+1)^(0+384),f	;volatile
 13275                           
 13276                           ;isr.c: 62:                    PORTBbits.RB6=1;
 13277  10FF  1283               	bcf	3,5	;RP0=0, select bank0
 13278  1100  1303               	bcf	3,6	;RP1=0, select bank0
 13279  1101  1706               	bsf	6,6	;volatile
 13280                           
 13281                           ;isr.c: 63:                    }
 13282  1102  2906               	goto	i1l5950
 13283  1103                     i1l721:	
 13284                           ;isr.c: 64:                 else{
 13285                           
 13286                           
 13287                           ;isr.c: 65:                    PORTBbits.RB6=0;
 13288  1103  1283               	bcf	3,5	;RP0=0, select bank0
 13289  1104  1303               	bcf	3,6	;RP1=0, select bank0
 13290  1105  1306               	bcf	6,6	;volatile
 13291  1106                     i1l5950:
 13292                           
 13293                           ;isr.c: 68:                 if(Delay_Led_Memory){
 13294  1106  1683               	bsf	3,5	;RP0=1, select bank3
 13295  1107  1703               	bsf	3,6	;RP1=1, select bank3
 13296  1108  082C               	movf	_Delay_Led_Memory^(0+384),w	;volatile
 13297  1109  042D               	iorwf	(_Delay_Led_Memory+1)^(0+384),w	;volatile
 13298  110A  1903               	btfsc	3,2
 13299  110B  2916               	goto	i1l723
 13300                           
 13301                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 13302  110C  300A               	movlw	10
 13303  110D  02AC               	subwf	_Delay_Led_Memory^(0+384),f	;volatile
 13304  110E  3000               	movlw	0
 13305  110F  1C03               	skipc
 13306  1110  03AD               	decf	(_Delay_Led_Memory+1)^(0+384),f	;volatile
 13307  1111  02AD               	subwf	(_Delay_Led_Memory+1)^(0+384),f	;volatile
 13308                           
 13309                           ;isr.c: 70:                    PORTBbits.RB5=1;
 13310  1112  1283               	bcf	3,5	;RP0=0, select bank0
 13311  1113  1303               	bcf	3,6	;RP1=0, select bank0
 13312  1114  1686               	bsf	6,5	;volatile
 13313                           
 13314                           ;isr.c: 71:                    }
 13315  1115  2919               	goto	i1l5956
 13316  1116                     i1l723:	
 13317                           ;isr.c: 72:                 else{
 13318                           
 13319                           
 13320                           ;isr.c: 73:                    PORTBbits.RB5=0;
 13321  1116  1283               	bcf	3,5	;RP0=0, select bank0
 13322  1117  1303               	bcf	3,6	;RP1=0, select bank0
 13323  1118  1286               	bcf	6,5	;volatile
 13324  1119                     i1l5956:
 13325                           
 13326                           ;isr.c: 77:                 tempodecorrido+=10;
 13327  1119  300A               	movlw	10
 13328  111A  1683               	bsf	3,5	;RP0=1, select bank3
 13329  111B  1703               	bsf	3,6	;RP1=1, select bank3
 13330  111C  079C               	addwf	_tempodecorrido^(0+384),f	;volatile
 13331  111D  1803               	skipnc
 13332  111E  0A9D               	incf	(_tempodecorrido+1)^(0+384),f	;volatile
 13333                           
 13334                           ;isr.c: 78:                 milisegundo+=10;
 13335  111F  07A6               	addwf	_milisegundo^(0+384),f	;volatile
 13336  1120  1803               	skipnc
 13337  1121  0AA7               	incf	(_milisegundo+1)^(0+384),f	;volatile
 13338                           
 13339                           ;isr.c: 79:                 if(milisegundo==1000){
 13340  1122  30E8               	movlw	232
 13341  1123  0626               	xorwf	_milisegundo^(0+384),w	;volatile
 13342  1124  3003               	movlw	3
 13343  1125  1903               	skipnz
 13344  1126  0627               	xorwf	(_milisegundo+1)^(0+384),w	;volatile
 13345  1127  1D03               	btfss	3,2
 13346  1128  2943               	goto	i1l5988
 13347                           
 13348                           ;isr.c: 80:                    milisegundo=0;
 13349  1129  01A6               	clrf	_milisegundo^(0+384)	;volatile
 13350  112A  01A7               	clrf	(_milisegundo+1)^(0+384)	;volatile
 13351                           
 13352                           ;isr.c: 81:                    segundo++;
 13353  112B  0AF5               	incf	_segundo,f	;volatile
 13354                           
 13355                           ;isr.c: 84:                    if(TempoCNT_0>0) TempoCNT_0--;
 13356  112C  1303               	bcf	3,6	;RP1=0, select bank1
 13357  112D  0869               	movf	_TempoCNT_0^(0+128),w	;volatile
 13358  112E  1D03               	btfss	3,2
 13359  112F  03E9               	decf	_TempoCNT_0^(0+128),f	;volatile
 13360                           
 13361                           ;isr.c: 85:                    if(TempoCNT_1>0) TempoCNT_1--;
 13362  1130  0866               	movf	_TempoCNT_1^(0+128),w	;volatile
 13363  1131  1D03               	btfss	3,2
 13364  1132  03E6               	decf	_TempoCNT_1^(0+128),f	;volatile
 13365                           
 13366                           ;isr.c: 88:                    if(segundo==60){
 13367  1133  303C               	movlw	60
 13368  1134  0675               	xorwf	_segundo,w	;volatile
 13369  1135  1D03               	btfss	3,2
 13370  1136  2943               	goto	i1l5988
 13371                           
 13372                           ;isr.c: 89:                       segundo=0;
 13373  1137  01F5               	clrf	_segundo	;volatile
 13374                           
 13375                           ;isr.c: 90:                       minuto++;
 13376  1138  0AF0               	incf	_minuto,f	;volatile
 13377                           
 13378                           ;isr.c: 91:                       if(minuto==60){
 13379  1139  303C               	movlw	60
 13380  113A  0670               	xorwf	_minuto,w	;volatile
 13381  113B  1D03               	btfss	3,2
 13382  113C  2943               	goto	i1l5988
 13383                           
 13384                           ;isr.c: 92:                          minuto=0;
 13385  113D  01F0               	clrf	_minuto	;volatile
 13386                           
 13387                           ;isr.c: 93:                          hora++;
 13388  113E  0AF4               	incf	_hora,f	;volatile
 13389                           
 13390                           ;isr.c: 94:                          if(hora==24){
 13391  113F  3018               	movlw	24
 13392  1140  0674               	xorwf	_hora,w	;volatile
 13393  1141  1903               	btfsc	3,2
 13394                           
 13395                           ;isr.c: 95:                             hora=0;
 13396  1142  01F4               	clrf	_hora	;volatile
 13397  1143                     i1l5988:	
 13398                           ;isr.c: 99:                 }
 13399                           
 13400                           
 13401                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13402  1143  1283               	bcf	3,5	;RP0=0, select bank0
 13403  1144  1303               	bcf	3,6	;RP1=0, select bank0
 13404  1145  1E8C               	btfss	12,5	;volatile
 13405  1146  299A               	goto	i1l739
 13406                           
 13407                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13408  1147  1683               	bsf	3,5	;RP0=1, select bank1
 13409  1148  301E               	movlw	30
 13410  1149  146C               	bsf	_generic_status^(0+128),0
 13411                           
 13412                           ;isr.c: 109:         tempo=30;
 13413  114A  00FA               	movwf	isr@tempo
 13414  114B  01FB               	clrf	isr@tempo+1
 13415                           
 13416                           ;isr.c: 110:         count=0;
 13417  114C  1703               	bsf	3,6	;RP1=1, select bank3
 13418  114D  019E               	clrf	_count^(0+384)	;volatile
 13419  114E  019F               	clrf	(_count+1)^(0+384)	;volatile
 13420                           
 13421                           ;isr.c: 111:         pointer=usart_buffer;
 13422  114F  3010               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13423  1150  00AE               	movwf	_pointer^(0+384)
 13424  1151                     i1l6008:	
 13425                           ;isr.c: 112:         while(tempo)
 13426                           
 13427                           
 13428                           ;isr.c: 112:         while(tempo)
 13429  1151  087A               	movf	isr@tempo,w
 13430  1152  047B               	iorwf	isr@tempo+1,w
 13431  1153  1903               	btfsc	3,2
 13432  1154  2980               	goto	i1l6010
 13433                           
 13434                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13435  1155  1283               	bcf	3,5	;RP0=0, select bank0
 13436  1156  1303               	bcf	3,6	;RP1=0, select bank0
 13437  1157  1E8C               	btfss	12,5	;volatile
 13438  1158  2979               	goto	i1l6006
 13439                           
 13440                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13441  1159  1683               	bsf	3,5	;RP0=1, select bank3
 13442  115A  1703               	bsf	3,6	;RP1=1, select bank3
 13443  115B  082E               	movf	_pointer^(0+384),w
 13444  115C  0084               	movwf	4
 13445  115D  1283               	bcf	3,5	;RP0=0, select bank0
 13446  115E  1303               	bcf	3,6	;RP1=0, select bank0
 13447  115F  081A               	movf	26,w	;volatile
 13448  1160  1783               	bsf	3,7	;select IRP bank2
 13449  1161  0080               	movwf	0
 13450                           
 13451                           ;isr.c: 118:                 if(count<32+20 -1)
 13452  1162  1683               	bsf	3,5	;RP0=1, select bank3
 13453  1163  1703               	bsf	3,6	;RP1=1, select bank3
 13454  1164  081F               	movf	(_count+1)^(0+384),w	;volatile
 13455  1165  3A80               	xorlw	128
 13456  1166  00FF               	movwf	127
 13457  1167  3080               	movlw	128
 13458  1168  027F               	subwf	127,w
 13459  1169  1D03               	skipz
 13460  116A  296D               	goto	u525_25
 13461  116B  3033               	movlw	51
 13462  116C  021E               	subwf	_count^(0+384),w	;volatile
 13463  116D                     u525_25:
 13464  116D  1803               	skipnc
 13465  116E  2975               	goto	i1l6004
 13466                           
 13467                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13468  116F  1683               	bsf	3,5	;RP0=1, select bank3
 13469  1170  1703               	bsf	3,6	;RP1=1, select bank3
 13470  1171  0A9E               	incf	_count^(0+384),f	;volatile
 13471  1172  1903               	skipnz
 13472  1173  0A9F               	incf	(_count+1)^(0+384),f	;volatile
 13473                           
 13474                           ;isr.c: 121:                    pointer++;
 13475  1174  0AAE               	incf	_pointer^(0+384),f
 13476  1175                     i1l6004:
 13477                           
 13478                           ;isr.c: 123:                 tempo=30;
 13479  1175  301E               	movlw	30
 13480  1176  00FA               	movwf	isr@tempo
 13481  1177  01FB               	clrf	isr@tempo+1
 13482                           
 13483                           ;isr.c: 124:             }
 13484  1178  2951               	goto	i1l6008
 13485  1179                     i1l6006:
 13486                           
 13487                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13488  1179  3001               	movlw	1
 13489  117A  02FA               	subwf	isr@tempo,f
 13490  117B  3000               	movlw	0
 13491  117C  1C03               	skipc
 13492  117D  03FB               	decf	isr@tempo+1,f
 13493  117E  02FB               	subwf	isr@tempo+1,f
 13494  117F  2951               	goto	i1l6008
 13495  1180                     i1l6010:
 13496                           
 13497                           ;isr.c: 131:         (*pointer)=0;
 13498  1180  1683               	bsf	3,5	;RP0=1, select bank3
 13499  1181  1703               	bsf	3,6	;RP1=1, select bank3
 13500  1182  082E               	movf	_pointer^(0+384),w
 13501  1183  0084               	movwf	4
 13502  1184  1783               	bsf	3,7	;select IRP bank2
 13503  1185  0180               	clrf	0
 13504                           
 13505                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13506  1186  1283               	bcf	3,5	;RP0=0, select bank0
 13507  1187  1303               	bcf	3,6	;RP1=0, select bank0
 13508  1188  1C98               	btfss	24,1	;volatile
 13509  1189  299A               	goto	i1l739
 13510                           
 13511                           ;isr.c: 134:            CREN=0;
 13512  118A  1218               	bcf	24,4	;volatile
 13513                           
 13514                           ;isr.c: 135:            CREN=1;
 13515  118B  1618               	bsf	24,4	;volatile
 13516                           
 13517                           ;isr.c: 136:            tempo=RCREG;
 13518  118C  081A               	movf	26,w	;volatile
 13519  118D  00FA               	movwf	isr@tempo
 13520  118E  01FB               	clrf	isr@tempo+1
 13521                           
 13522                           ;isr.c: 137:            tempo=RCREG;
 13523  118F  081A               	movf	26,w	;volatile
 13524  1190  00FA               	movwf	isr@tempo
 13525  1191  01FB               	clrf	isr@tempo+1
 13526                           
 13527                           ;isr.c: 138:            tempo=RCREG;
 13528  1192  081A               	movf	26,w	;volatile
 13529  1193  00FA               	movwf	isr@tempo
 13530  1194  01FB               	clrf	isr@tempo+1
 13531                           
 13532                           ;isr.c: 139:            usart_buffer[0]=0;
 13533  1195  1703               	bsf	3,6	;RP1=1, select bank2
 13534  1196  0190               	clrf	_usart_buffer^(0+256)	;volatile
 13535                           
 13536                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 13537  1197  1683               	bsf	3,5	;RP0=1, select bank1
 13538  1198  1303               	bcf	3,6	;RP1=0, select bank1
 13539  1199  14EC               	bsf	_generic_status^(0+128),1
 13540  119A                     i1l739:
 13541  119A  0879               	movf	??_isr+3,w
 13542  119B  1283               	bcf	3,5	;RP0=0, select bank0
 13543  119C  00FF               	movwf	127
 13544  119D  0878               	movf	??_isr+2,w
 13545  119E  008A               	movwf	10
 13546  119F  0877               	movf	??_isr+1,w
 13547  11A0  0084               	movwf	4
 13548  11A1  0E76               	swapf	??_isr,w
 13549  11A2  0083               	movwf	3
 13550  11A3  0EFE               	swapf	126,f
 13551  11A4  0E7E               	swapf	126,w
 13552  11A5  0009               	retfie
 13553  11A6                     __end_of_isr:
 13554  007E                     btemp	set	126	;btemp
 13555  007E                     wtemp0	set	126
 13556                           
 13557                           	psect	intentry
 13558  0004                     __pintentry:	
 13559                           ;incstack = 0
 13560                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 13561                           
 13562  0004                     interrupt_function:
 13563  007E                     saved_w	set	btemp
 13564  0004  00FE               	movwf	btemp
 13565  0005  0E03               	swapf	3,w
 13566  0006  00F6               	movwf	??_isr
 13567  0007  0804               	movf	4,w
 13568  0008  00F7               	movwf	??_isr+1
 13569  0009  080A               	movf	10,w
 13570  000A  00F8               	movwf	??_isr+2
 13571  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13572  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13573  000D  087F               	movf	btemp+1,w
 13574  000E  00F9               	movwf	??_isr+3
 13575  000F  160A  118A  28C8   	ljmp	_isr
 13576                           
 13577                           	psect	config
 13578                           
 13579                           ;Config register CONFIG1 @ 0x2007
 13580                           ;	Oscillator Selection bits
 13581                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 13582                           ;	Watchdog Timer Enable bit
 13583                           ;	WDTE = ON, WDT enabled
 13584                           ;	Power-up Timer Enable bit
 13585                           ;	PWRTE = ON, PWRT enabled
 13586                           ;	RE3/MCLR pin function select bit
 13587                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 13588                           ;	Code Protection bit
 13589                           ;	CP = ON, Program memory code protection is enabled
 13590                           ;	Data Code Protection bit
 13591                           ;	CPD = OFF, Data memory code protection is disabled
 13592                           ;	Brown Out Reset Selection bits
 13593                           ;	BOREN = ON, BOR enabled
 13594                           ;	Internal External Switchover bit
 13595                           ;	IESO = ON, Internal/External Switchover mode is enabled
 13596                           ;	Fail-Safe Clock Monitor Enabled bit
 13597                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 13598                           ;	Low Voltage Programming Enable bit
 13599                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 13600                           ;	In-Circuit Debugger Mode bit
 13601                           ;	DEBUG = 0x1, unprogrammed default
 13602  2007                     	org	8199
 13603  2007  2F8C               	dw	12172
 13604                           
 13605                           ;Config register CONFIG2 @ 0x2008
 13606                           ;	Brown-out Reset Selection bit
 13607                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 13608                           ;	Flash Program Memory Self Write Enable bits
 13609                           ;	WRT = OFF, Write protection off
 13610  2008                     	org	8200
 13611  2008  3FFF               	dw	16383

Data Sizes:
    Strings     11
    Constant    44
    Data        2
    BSS         197
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      13
    BANK0            80     80      80
    BANK1            80     61      78
    BANK3            96      0      90
    BANK2            96      0      85

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 58
		 -> buffer(BANK2[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 58
		 -> buffer(BANK2[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK2[33]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK2[33]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(1) Largest target is 36
		 -> log@coeff(CODE[36]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK2[33]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK2[33]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK1[2]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 58
		 -> usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 58
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK1[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK1[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 52
		 -> NULL(NULL[0]), usart_buffer(BANK2[52]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK2[33]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK2[33]), 

    EEPROM_24C1025_Read_Str@buffer	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK2[33]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_24C1025_Read_Buffer_USART@data	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK2[33]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), EEPROM_24C1025_Write_Int@local(BANK1[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_mediatemperaturaNTC
    _ADC_Read_NTC->_log
    _log->___flmul
    _frexp->___fleq
    _eval_poly->___flmul
    _I2C_Master_Init->___lldiv
    _Decodify_Command->_USART_put_int
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->___fltol
    ___fltol->___flmul
    ___flmul->___flsub
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    ___fldiv->___flmul
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_I2C_Master_Read
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_my_delay_ms_WDT
    _EEPROM_24C1025_Read_Buffer_USART->_I2C_Master_Read
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _EEPROM_24C1025_Write_Int->___fltol
    _EEPROM_24C1025_Write_Buffer->_my_delay_ms_WDT
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _Auto_Relay1->___flge
    ___xxtofl->_EEPROM_Read_Integer
    _Auto_Relay0->___flge
    ___flsub->___fladd
    ___fladd->___xxtofl
    ___flge->___flsub

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_mediatemperaturaNTC
    _mediatemperaturaNTC->_ADC_Read_NTC
    _ADC_Read_NTC->___fldiv
    _log->_eval_poly
    _Decodify_Command->_Load_Work
    _Save_Log->_EEPROM_24C1025_Write_Int
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _USART_put_int->___fltol
    _Load_Work->___fldiv
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int
    _EEPROM_24C1025_Write_Int->___fltol

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  183980
                                             56 BANK1      5     5      0
                           _ADC_init
                        _Auto_Relay0
                        _Auto_Relay1
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                          _Load_Work
                         _USART_init
                _mediatemperaturaNTC
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _mediatemperaturaNTC                                 11    11      0   50690
                                             79 BANK0      1     1      0
                                             46 BANK1     10    10      0
                       _ADC_Read_NTC
            _Package_Usart_is_for_me
                        _Rele0Ligado
                        _Rele1Ligado
                            ___fladd
                            ___fldiv
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     248
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      26
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Read_NTC                                        22    18      4   42407
                                             25 BANK1     21    17      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___lwdiv
                           ___xxtofl
                            _captura
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  6     2      4   23523
                                             77 BANK0      2     2      0
                                             16 BANK1      4     0      4
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     896
                                             12 BANK0      7     2      5
                             ___fleq
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     520
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           16     9      7    9716
                                              0 BANK1     16     9      7
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           6     2      4     220
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     542
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    18    18      0  113323
                                             29 BANK1     17    17      0
            _EEPROM_24C1025_Fill_All
   _EEPROM_24C1025_Read_Buffer_USART
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                          _Load_Work
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     184
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     255
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      53
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     512
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     512
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4   14734
                                             17 BANK1      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             77 BANK0      2     2      0
                                              0 BANK1      8     4      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    5434
                                             52 BANK0     25    17      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            7     5      2     980
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             3     0      3    3297
                                             18 BANK1      3     0      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     202
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    8     3      5    2822
                                             10 BANK1      8     3      5
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 5     3      2    2095
                                             14 BANK1      5     3      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      4     2      2    2690
                                             14 BANK1      4     2      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     632
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1829
                                             10 BANK1      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        3     1      2     964
                                             79 BANK0      1     1      0
                                              8 BANK1      2     0      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     324
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _Load_Work                                            4     4      0    4016
                                             25 BANK1      4     4      0
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2544
                                              0 BANK1     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Integer                                  7     5      2     229
                                              3 BANK0      7     5      2
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  2     1      1     623
                                              5 BANK0      2     1      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2     727
                                              5 BANK0      7     5      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     372
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   3     2      1     245
                                              3 BANK0      3     2      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read_Byte                                     3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                             8     3      5    7066
                                             10 BANK0      8     3      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    8046
                                             23 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    7986
                                              7 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              7     3      4    9108
                                             21 BANK0      7     3      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             6     2      4    9074
                                             21 BANK0      6     2      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          12     6      6    8848
                                             10 BANK0     11     5      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Buffer_USART                    12     6      6    8154
                                              7 BANK0     11     5      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      4     2      2    1271
                                              3 BANK0      4     2      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    8942
                                             17 BANK1      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                             9     3      6    8691
                                              8 BANK1      9     3      6
        _EEPROM_24C1025_Write_Buffer
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    7764
                                             10 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     502
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    5677
                                              3 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Auto_Relay1                                          0     0      0    7442
                     _Rele1Desligado
                        _Rele1Ligado
                             ___flge
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1221
                                             10 BANK0     14    10      4
                   _EEPROM_Read_Byte (ARG)
                _EEPROM_Read_Integer (ARG)
 ---------------------------------------------------------------------------------
 (2) _Rele1Ligado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Rele1Desligado                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Auto_Relay0                                          0     0      0    6221
                     _Rele0Desligado
                        _Rele0Ligado
                             ___flge
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4723
                                             44 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    3758
                                             24 BANK0     20    12      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    1498
                                             52 BANK0     12     4      8
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Rele0Ligado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Rele0Desligado                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  6     6      0      28
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Auto_Relay0
     _Rele0Desligado
     _Rele0Ligado
     ___flge
       ___flsub (ARG)
         ___fladd
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _EEPROM_Read_Byte (ARG)
             _EEPROM_Read_Integer (ARG)
               _EEPROM_Read_Byte
           _frexp (ARG)
             ___fleq
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flsub
   _Auto_Relay1
     _Rele1Desligado
     _Rele1Ligado
     ___flge
     ___flsub
     ___xxtofl
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
           ___flsub (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___fltol (ARG)
           ___flmul (ARG)
     _EEPROM_24C1025_Read_Buffer_USART
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
       _USART_putc
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
         _I2C_Master_RepeatedStart
         _I2C_Master_Start
         _I2C_Master_Stop
         _I2C_Master_Write
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
       _I2C_Master_RepeatedStart
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
     _EEPROM_24C1025_Write_Buffer
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
     _EEPROM_24C1025_Write_Int
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
       _my_delay_ms_WDT
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _Load_Work
       _EEPROM_Read_Byte
       _EEPROM_Read_Integer
       ___fldiv
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
       ___flmul
       ___fltol
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_int
     _USART_put_string
     _USART_putc
     _USART_to_Protocol
     ___flmul
     ___fltol
     _strcpy
     _strlen
   _EEPROM_Read_Integer
   _EEPROM_Write_Integer
   _I2C_Master_Init
     ___lldiv
   _Load_Work
   _USART_init
   _mediatemperaturaNTC
     _ADC_Read_NTC
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
       ___lwdiv
       ___xxtofl
       _captura
       _log
         ___fladd
         ___fleq
         ___flge
         ___flmul
         ___xxtofl
         _eval_poly
           ___fladd
           ___flmul
         _frexp
     _Package_Usart_is_for_me
     _Rele0Ligado
     _Rele1Ligado
     ___fladd
     ___fldiv
     ___xxtofl
     _my_delay_ms
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      5A       9       93.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      55      11       88.5%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     3D      4E       7       97.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     15A      12        0.0%
ABS                  0      0     15A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Sep 27 22:01:54 2021

                               _USART_putc 0391                               ___fldiv@aexp 00B8  
                             ___fldiv@bexp 00B7                                          pc 0002  
                             ___fldiv@sign 00B0                                         PL2 1F89  
                                       PL4 0650                                         PL6 1FA3  
                                       PL8 066A            EEPROM_24C1025_Read_Buffer@range 0033  
         EEPROM_24C1025_Write_Str@chip_add 002F                                         fsr 0004  
 __end_of_EEPROM_24C1025_Read_Buffer_USART 1687  __size_of_EEPROM_24C1025_Read_Buffer_USART 00F4  
       ??_EEPROM_24C1025_Read_Buffer_USART 002D          ?_EEPROM_24C1025_Read_Buffer_USART 0027  
         _EEPROM_24C1025_Read_Buffer_USART 1593                              _USART_put_int 03A2  
                 Decodify_Command@tempchar 00C9                        __Umul8_16@word_mpld 0024  
                                      PL10 1FBD                                        PL20 0F98  
                                      PL12 1FCD                                        PL30 17A8  
                                      PL22 1CE8                                        PL14 0673  
                                      PL40 1FE6                                        PL32 0FB2  
                                      PL24 0FA8                                        PL16 12A2  
                                      PL50 17CA                                        PL42 17B8  
                                      PL34 0FBB                                        PL26 0693  
                                      PL18 0684                                        PL60 0FD6  
                                      PL52 17D4                                        PL44 1CF8  
                                      PL36 1FDD                                        PL28 06A1  
                                      PL70 1FF4                                        PL62 17E7  
                                      PL54 17DE                                        PL46 1D02  
                                      PL38 17B1                                        PL80 0FE3  
                                      PL72 17EE                                        PL64 12BB  
                                      PL56 0FC4                                        PL48 17C0  
                                      PL82 06CD                                        PL74 17F4  
                                      PL66 06AE                                        PL58 0FCD  
                                      PL84 1FFA                                        PL76 17FA  
                                      PL68 1FEE                                        PL78 0FDD  
             PROCULUS_VP_Write_String@text 00B4                                        l434 08EE  
                                      l435 08F1                                        l630 05E7  
                                      l454 0164                                        l606 0F8C  
                                      l640 126E                                        l482 030A  
                                      l635 060A                                        l636 060B  
                                      l662 05CC                                        l478 02FB  
                                      l487 0375                                        l952 0399  
                                      l894 0FF6         EEPROM_24C1025_Read_Buffer@chip_add 0032  
                 Decodify_Command@sizedata 00C2                                        _log 1DC3  
                                      _isr 10C8                                        fsr0 0004  
                            ??_Auto_Relay0 0060                              ??_Auto_Relay1 0060  
                                      indf 0000                  __end_of_EEPROM_Write_Byte 061A  
                             ___flmul@aexp 0061                               ___flmul@bexp 0062  
                   PROCULUS_VP_Write@vetor 00AC               ?_EEPROM_24C1025_Write_Buffer 002A  
                             ___flmul@sign 0060                               ___flmul@temp 006B  
                             ___flmul@prod 0067    __end_of_PROCULUS_Control_Register_Write 00AE  
 __size_of_PROCULUS_Control_Register_Write 0026          ??_PROCULUS_Control_Register_Write 00AB  
         ?_PROCULUS_Control_Register_Write 00AA            _PROCULUS_Control_Register_Write 0088  
                    ??_mediatemperaturaNTC 006F                               ___fltol@exp1 006E  
                                     l1410 0E4D                                       l1237 1EB8  
                                     l1405 0E38                                       l1406 0E35  
                                     l1239 1EF2                                       l1361 0B57  
                                     l1353 0B04                                       l1409 0E50  
                                     l1441 03D7                                       l1370 0B8C  
                                     l1362 0B5E                                       l1354 0B02  
                                     l1434 0F3F                                       l1442 03D5  
                                     l1371 0B8E                                       l1363 0B60  
                                     l4012 0B63                                       l1348 0AE8  
                                     l1508 0E04                                       l1381 0C07  
                                     l1349 0AE6                                       l1445 03EE  
                                     l1446 03EC                                       l1359 0B69  
                                     l1463 050C                                       l1376 0BF2  
                                     l4032 0B92                                       l4042 0BE4  
                                     l4018 0B6F                                       l1396 0C3C  
                                     l4060 0C0C                                       l4062 0C0E  
                                     l1495 0DD2                                       l4072 0C19  
                                     l4048 0BFC                                       l4400 0DF3  
                                     l4092 0C38                                       l4084 0C2C  
                                     l4068 0C17                                       l4404 0E02  
                                     l4406 0DF8                                       l4430 1F54  
                                     l4096 0C3D                                       l4360 0070  
                                     l6104 03F2                                       l4418 0E1A  
                                     l6210 16B2                                       l4354 006E  
                                     l4372 1ED5                                       l6212 16B5  
                                     l6300 1471                                       l6060 0525  
                                     l6108 03FC                                       l5244 080A  
                                     l7004 0770                                       l4366 1EA7  
                                     l4710 1CD8                                       l4702 1CC8  
                                     l5238 07CE                                       l7102 0936  
                                     l4392 0DDD                                       l6208 16AD  
                                     l5184 061F                                       l6312 03A2  
                                     l6056 051D                                       l7016 079B  
                                     l3912 1F26                                       l5344 0FFB  
                                     l3850 148B                                       l6250 1724  
                                     l6410 156A                                       l6162 04C0  
                                     l7050 109C                                       l7130 099E  
                                     l4396 0DDF                                       l4388 0DCA  
                                     l3844 1493                                       l6252 1727  
                                     l6308 1478                                       l6420 157F  
                                     l6340 14D2                                       l6180 04EA  
                                     l6156 04AD                                       l6092 03DB  
                                     l4708 1CCC                                       l7212 00D9  
                                     l6324 0ACB                                       l3916 1F38  
                                     l3908 1F15                                       l5348 0FFE  
                                     l7150 1D6A                                       l4398 0DE8  
                                     l3846 1480                                       l3854 1497  
                                     l6342 14D5                                       l4590 05F0  
                                     l4822 0EC8                                       l6510 00A9  
                                     l6166 04C2                                       l7310 0246  
                                     l7206 00C6                                       l7070 10B9  
                                     l5294 1061                                       l7118 0988  
                                     l7126 0997                                       l6248 171F  
                                     l6416 157D                                       l4592 05F3  
                                     l4840 0ED0                                       l4816 0EA9  
                                     l4824 0E91                                       l6512 003B  
                                     l6176 04D6                                       l7304 022B  
                                     l7240 0167                                       l7216 00EB  
                                     l7144 09E9                                       l7154 1DA7  
                                     l3890 177B                                       l6274 1751  
                                     l6418 14F8                                       l6338 14CD  
                                     l4842 0EE3                                       l4826 0ECA  
                                     l6186 04FF                                       l4682 1C96  
                                     l7322 0288                                       l7250 0177  
                                     l7138 09B6                                       l7156 1DAA  
                                     l7148 1D69                                       l7180 1D49  
                                     l6268 1741                                       l6276 16CF  
                                     l6436 128D                                       l4852 0EF9  
                                     l4764 0E3C                                       l6508 009A  
                                     l6524 0053                                       l4684 1C9C  
                                     l6460 0725                                       l6452 0704  
                                     l7332 02C2                                       l7316 0266  
                                     l7260 0197                                       l7244 016F  
                                     l7236 015D                                       l7228 013B  
                                     l7084 10C1                                       ?_log 00B0  
                                     l3966 0B10                                       l7158 1DA4  
                                     l7182 1D4C                                       l7174 1D15  
                                     l6278 1753                                       l6614 162D  
                                     l4862 0F0D                                       l4790 0E6D  
                                     l6550 0F85                                       l6526 0069  
                                     l7350 02E2                                       l7254 0187  
                                     l7406 081D                                       l7184 1D47  
                                     l7176 1D16                                       l3896 177F  
                                     l6296 1460                                       l6616 1632  
                                     l6640 1658                                       l6384 153F  
                                     l4880 0F40                                       l4848 0EF7  
                                     l7344 02D6                                       l7328 02A2  
                                     l7280 01D1                                       l6618 1635  
                                     l6570 15B9                                       l6386 1544  
                                     l6810 141D                                       l4874 0F37  
                                     l4778 0E54                                       l6538 0F6E  
                                     l6466 0641                                       l4698 1CBE  
                                     l6458 0708                                       l7362 02FF  
                                     l7338 02CD                                       l7274 01C7  
                                     l6482 1DDC                                       l7506 08D3  
                                     l3996 0B2E                                       l6644 1671  
                                     l6572 15BE                                       l6388 1547  
                                     l6820 143C                                       l6740 1386  
                                     l6724 130B                                       l6660 12E5  
                                     l4868 0F21                                       l6468 0649  
                                     l7356 02F0                                       l7292 01F8  
                                     l7268 01B0                                       ?_isr 0076  
                                     l6646 15E4                                       l6574 15C1  
                                     l6742 1389                                       l6726 1351  
                                     l6718 1342                                       l6662 12EA  
                                     l4798 0E75                                       l7374 030E  
                                     l7286 01DC                                       l6486 1DF4  
                                     l7526 090E                                       l6648 1673  
                                     l6664 12ED                                       l6818 1435  
                                     l6738 1381                                       l6850 11A6  
                                     l7562 0325                                       l7298 0215  
                                     l6844 0557                                       l7476 08A2  
                                     l6766 13AC                                       l7398 031B  
                                     l6784 13F2                                       l6880 03B2  
                                     l6928 0C4B                                       l6786 13F7  
                                     l6890 06B8                                       l6788 13FA  
                                     l6892 06C9                                       l6990 1F81  
                                     l6958 09F9                                       l6974 0A10  
                                     l6968 0A08                                       l6992 1F85  
                                     l6984 0A20                                       _BETA 1034  
                                     STR_1 103C                                       STR_2 1044  
                                     _CREN 00C4                                       u4145 0EB7  
                                     u6013 136E                                       u4245 0F16  
                                     u6023 137F                                       u4255 0F2C  
                                     u3535 0076                                       u2735 1F34  
                                     u2840 0B4E                                       u6033 13B9  
                                     u2850 0B4F                                       u2835 0B42  
                                     u4523 1073                                       u2693 1791  
                                     u6053 13F0                                       u2953 0BA4  
                                     u6225 0783                                       u5603 171D  
                                     u6083 0581                                       u4485 07DA  
                                     u6245 073D                                       u5615 16DC  
                                     u5535 04DF                                       u3935 1CA6  
                                     u5713 14BA                                       u5545 04F5  
                                     u5563 169A                                       u5723 14CB  
                                     u5660 146E                                       u5573 16AB  
                                     u5733 150C                                       u5583 16EE  
                                     u5903 15B7                                       u5913 15F8  
                                     u5753 153D                                       u6707 127E  
                                     u5933 162B                                       u6717 13D5  
                                     u6727 144A                                       u6737 158D  
                                     u5953 12D2                                       u6657 0825  
                                     u6747 1681                                       u5963 12E3  
                                     u5875 0F77                                       u6667 107B  
                                     u6757 179A                                       u5893 15A6  
                                     u5973 1321                                       u6677 007E  
                                     u6767 1487                                       u6687 0637  
                                     u6697 0614                                       _WPUB 0095  
                     PROCULUS_Buzzer@vetor 00B0           __end_of_I2C_Master_RepeatedStart 177B  
                                     _main 081D                                       _hora 0074  
        __size_of_EEPROM_24C1025_Write_Int 001F                                       btemp 007E  
        __size_of_EEPROM_24C1025_Write_Str 009B                                       log@x 00B0  
                ?_EEPROM_24C1025_Write_Int 00A8                  ?_EEPROM_24C1025_Write_Str 002A  
              __size_of_EEPROM_Read_String 0016                                       start 0012  
                         __end_of_ADC_init 07FA                           _BALANCE_RESISTOR 1038  
                          ___fldiv@new_exp 00B1         EEPROM_24C1025_Read_Buffer@sizedata 002E  
                            ??_Rele0Ligado 0020                              ??_Rele1Ligado 0020  
                                    ??_log 006D                                      ??_isr 0076  
                         ?_I2C_Master_Init 002D                           ?_I2C_Master_Read 0023  
                         ?_I2C_Master_Wait 0076                           ?_I2C_Master_Stop 0076  
                           ?_USART_put_int 00A8                      __size_of_ADC_Read_NTC 0172  
                            ___fltol@sign1 006D                            __end_of___fladd 0C43  
                                    ?_main 0076                            __end_of___fldiv 0F44  
                                    _EEADR 010D                            __end_of___flmul 0517  
                          __end_of___flsub 0F60                            __end_of___fltol 1CE8  
                                    _ANSEL 0188                            __end_of___lldiv 07A4  
                                    _T1CON 0010                            __end_of___lwdiv 0F8A  
                                    i1l721 1103                                      i1l723 1116  
                                    i1l719 10F0                                      i1l739 119A  
                                    _RCREG 001A                                      _TMR1H 000F  
                                    _TMR1L 000E                                      _SPBRG 0099  
                                    _PORTA 0005                                      _PORTB 0006  
                                    _PORTC 0007                                      _PORTE 0009  
                                    _TRISA 0085                                      _TRISB 0086  
                                    _TRISC 0087            EEPROM_24C1025_Read_Int@chip_add 0039  
                                    _TRISE 0089                                      _TXREG 0019  
                          __end_of_captura 0F98                               _usart_buffer 0110  
                EEPROM_Read_Integer@result 0027                                      _canal 0072  
             __size_of_EEPROM_Read_Integer 001B                                      _count 019E  
                                    _frexp 1F3A              ??_EEPROM_24C1025_Write_Buffer 0031  
       __size_of_EEPROM_24C1025_Write_Byte 0014                 ?_EEPROM_24C1025_Write_Byte 0037  
                      __end_of_Auto_Relay0 1DC3                        __end_of_Auto_Relay1 1D64  
                                    pclath 000A                                      status 0003  
                                    wtemp0 007E                    ADC_Read_NTC@resistencia 00C3  
          EEPROM_24C1025_Read_Byte@mem_add 0035                               __end_of_BETA 1038  
                  ADC_Read_NTC@temperatura 00CA                    __size_of_PROCULUS_Delay 001A  
        __size_of_PROCULUS_VP_Write_String 0011                                ?_USART_init 0020  
                          __initialization 0015                  ?_PROCULUS_VP_Write_String 00B2  
                             _ADC_Read_NTC 0C43                                ?_USART_putc 0076  
                              log@exponent 006D                               __end_of_main 091B  
                               _Histerese0 0198                                 _Histerese1 0073  
                           Send_To_MB@size 0021                   __end_of_EEPROM_Read_Byte 1287  
                                   ??_main 00D8                           __end_of_Save_Log 1C8E  
                      __end_of_Rele0Ligado 0A10                           _USART_put_string 0704  
                      __end_of_Rele1Ligado 0A28                      EEPROM_Write_Byte@addr 0023  
                    EEPROM_Write_Byte@dado 0020                 __size_of_EEPROM_Write_Byte 003B  
                        ?_I2C_Master_Start 0076                  EEPROM_Write_Byte@last_GIE 0024  
                 _mediatemperaturaNTC$2354 00CE                          ?_I2C_Master_Write 0023  
                       ??_I2C_Master_Start 0023                                     _ADCON1 009F  
                       ??_I2C_Master_Write 0025                  PROCULUS_Show_Screen@vetor 00B0  
                                   ?_frexp 002C                                     _ADRESH 001E  
                                   _ADRESL 009E                                     _EEDATA 010C  
                                   _EECON2 018D                                 _Send_To_MB 0376  
                    EEPROM_Write_Integer@i 002B                                     _ANSELH 0189  
             __end_of_PROCULUS_Show_Screen 03C3                                     i1l6010 1180  
                                   i1l6004 1175                                     i1l6006 1179  
                                   i1l6008 1151                             _Rele0Desligado 1F81  
                                   i1l5940 10E5                                     i1l5950 1106  
                                   i1l5944 10F3                                     i1l5936 10D6  
                                   i1l5956 1119                                     i1l5988 1143  
        __end_of_EEPROM_24C1025_Write_Byte 05C9                                     u525_25 116D  
                             ?_my_delay_ms 0020                                     _TMR1IE 0460  
                                   _TMR1CS 0081                   ?_EEPROM_24C1025_Fill_All 00B1  
                       __size_of_Load_Work 00C0                                     _SSPADD 0093  
                                   _TRISC3 043B                                     _TRISC4 043C  
                                   _TRISC6 043E                                     _TRISC7 043F  
                                   _SSPCON 0014                                     _SSPBUF 0013  
           EEPROM_24C1025_Fill_All@mem_add 00B4                           __end_of___xxtofl 0E23  
                           _Rele1Desligado 1F85              EEPROM_24C1025_Read_Str@buffer 002B  
                       PROCULUS_VP_Write@i 00B1                   __end_of_Decodify_Command 0376  
                               _TempoCNT_0 00E9                                 _TempoCNT_1 00E6  
                               _TempoOFF_0 00EA                                 _TempoOFF_1 00E7  
                 ?_EEPROM_24C1025_Read_Int 0035                   ?_EEPROM_24C1025_Read_Str 0027  
                 _I2C_Master_RepeatedStart 1772       __size_of_EEPROM_24C1025_Write_Buffer 00DB  
                                   ___flge 1E96                                     ___fleq 1F04  
                                ??___fladd 0040                                  ??___fldiv 00A8  
                                ??___flmul 005C                                  ??___flsub 0054  
                                ??___fltol 00A4                            ??_USART_put_int 006F  
                                ??___lldiv 0028                                     _header 01A0  
                                ??___lwdiv 0024                                     _buffer 0144  
                        _USART_to_Protocol 07A4                            USART_putc@value 0020  
                                   _minuto 0070          EEPROM_24C1025_Read_Buffer@cnt_108 0031  
                                ??_captura 0022                         ?_USART_to_Protocol 0076  
             Decodify_Command@add_24LCxxxx 00CA                                     _strcpy 0808  
                                   _strlen 063D          EEPROM_24C1025_Read_Buffer@mem_add 002A  
                             __pdataCOMMON 007C           __end_of_EEPROM_24C1025_Read_Byte 059B  
                       __size_of__Umul8_16 001B                                _Auto_Relay0 1D64  
                              _Auto_Relay1 1D0C                                     saved_w 007E  
        EEPROM_24C1025_Write_Byte@chip_add 003C                                  ?_ADC_init 0076  
                      ??_USART_to_Protocol 0020                        __size_of_USART_init 003F  
                   __end_of_Rele0Desligado 1F85                        __size_of_USART_putc 0011  
                               ___flge@ff1 0054                                 ___flge@ff2 0058  
                   __end_of_Rele1Desligado 1F89                               ___xxtofl@arg 0034  
                             ___xxtofl@exp 0033                               ___xxtofl@val 002A  
                               ___fleq@ff1 0020                                 ___fleq@ff2 0024  
                         __end_oflog@coeff 1034                    __end_of__initialization 0037  
      PROCULUS_Control_Register_Write@size 00AA                               eval_poly@res 00AC  
                               ___fltol@f1 00A0                               _Board_Number 00E5  
                           __pcstackCOMMON 0076                   __size_of_PROCULUS_Buzzer 0020  
                __end_of_USART_to_Protocol 07EF                               __pidataBANK1 0000  
                              _Rele0Ligado 09F9                              __end_of_frexp 1F81  
                              _Rele1Ligado 0A10                      USART_put_string@vetor 0021  
                               __end_ofPL2 1FA3                                 __end_ofPL4 066A  
                               __end_ofPL6 1FBD                                 __end_ofPL8 0673  
                        __end_of_Load_Work 1266                        my_delay_ms_WDT@time 0020  
            __size_of_EEPROM_Write_Integer 0023                   __size_of_my_delay_ms_WDT 002D  
                           _OPTION_REGbits 0081                   __end_of_BALANCE_RESISTOR 103C  
         __end_of_EEPROM_24C1025_Write_Int 0551           __end_of_EEPROM_24C1025_Write_Str 135D  
                               ??_ADC_init 0020                __end_of_EEPROM_Write_String 06CD  
          __end_of_EEPROM_24C1025_Fill_All 0584                            ?_Rele0Desligado 0076  
                                  ??_frexp 0031                                ?_Send_To_MB 0076  
                   __size_of_Send_Reply_OK 0007                                 __pbssBANK1 00DD  
                               __pbssBANK2 0110                                 __pbssBANK3 0190  
                       __size_of_eval_poly 00AC                            ?_Rele1Desligado 0076  
          __end_of_EEPROM_24C1025_Read_Int 05B5            __end_of_EEPROM_24C1025_Read_Str 1450  
                 ?_Package_Usart_is_for_me 0076                                  ?_Save_Log 00B1  
                           _PROCULUS_Delay 006E                          __end_of__Umul8_16 0532  
                               __pmaintext 081D                                    ?___flge 0054  
                                  ?___fleq 0020                        Save_Log@add_datalog 00B1  
                      _EEPROM_Read_Integer 1287                 PROCULUS_Show_Screen@screen 00AE  
                               __pintentry 0004                       mediatemperaturaNTC@i 00D7  
                     _PROCULUS_Show_Screen 03B9                                    _T1CKPS0 0084  
                                  _T1CKPS1 0085                                    ?_strcpy 0020  
                                  ?_strlen 0020                __end_of_mediatemperaturaNTC 09F9  
                                ?___xxtofl 002A                       ?_EEPROM_Read_Integer 0023  
                    Decodify_Command@dados 00BF                EEPROM_24C1025_Read_Int@data 003A  
                                  _SSPCON2 0091           __end_of_PROCULUS_VP_Write_String 0704  
                  EEPROM_Read_Integer@addr 0025                                    _SSPSTAT 0094  
                 _EEPROM_24C1025_Read_Byte 0584                                 __stringtab 1000  
                      PROCULUS_VP_Write@vp 00AA                ??_EEPROM_24C1025_Write_Byte 003C  
               __end_of_EEPROM_Read_String 05DF                     __end_of_PROCULUS_Delay 0088  
                 __end_of_USART_put_string 072F                       __size_of_my_delay_ms 002C  
                               ??_Save_Log 006F                            PROCULUS_Delay@i 0024  
                            _modoAutonomo1 01AF                               ??_USART_init 0024  
              EEPROM_24C1025_Read_Str@ctrl 0031                               ??_USART_putc 0020  
               __size_of_USART_to_Protocol 004B                PROCULUS_Buzzer@time_ms_x_10 00AE  
                                  _Status0 01A4                                    _Status1 01A2  
                          __size_of___flge 006E                            __size_of___fleq 0036  
                                  ___fladd 0AD4                                    ___fldiv 0E23  
                 EEPROM_Write_Integer@addr 0029                                    ___flmul 03C3  
                 EEPROM_Write_Integer@dado 0025                                    ___flsub 0F44  
                                  ___fltol 1C8E                                    ___lldiv 075C  
                                  ___lwdiv 0F60                              _Send_Reply_OK 03B2  
                      __size_of_Send_To_MB 001B                      ?_PROCULUS_Show_Screen 00AE  
                        __end_of_eval_poly 0AD4                                    _captura 0F8A  
                                  __ptext1 091B                                    __ptext2 105D  
                                  __ptext3 0FE8                                    __ptext4 0C43  
                                  __ptext5 1DC3                                    __ptext6 1F3A  
                                  __ptext7 1F04                                    __ptext8 0A28  
                                  __ptext9 0F8A                          ??_PROCULUS_Buzzer 0070  
                                  _destino 0071                          ?_EEPROM_Read_Byte 0076  
                          __size_of_strcpy 0015                            __size_of_strlen 0013  
                             __size_of_log 00D3                               __size_of_isr 00DE  
                               ??___xxtofl 002E                         ??_EEPROM_Read_Byte 0020  
                                  _segundo 0075                   __size_of_I2C_Master_Init 002D  
                 __size_of_I2C_Master_Read 002B                             _usart_protocol 01B0  
                    ??_EEPROM_Read_Integer 0025                   __size_of_I2C_Master_Wait 001F  
                 __size_of_I2C_Master_Stop 0007              EEPROM_24C1025_Write_Int@local 00AF  
                                  _pointer 01AE              EEPROM_24C1025_Write_Byte@data 003B  
                                  clrloop0 0801                         __end_of_USART_init 10C8  
          __end_of_Package_Usart_is_for_me 1000                         __end_of_USART_putc 03A2  
                     end_of_initialization 0037                   _EEPROM_24C1025_Write_Int 0532  
                        ??_my_delay_ms_WDT 0024                   _EEPROM_24C1025_Write_Str 12C2  
               ??_I2C_Master_RepeatedStart 0023                            ?_PROCULUS_Delay 0020  
                          my_delay_ms@time 0020            EEPROM_24C1025_Write_Buffer@data 002F  
          EEPROM_24C1025_Write_Buffer@ctrl 0036                           ADC_Read_NTC@calc 00BD  
                __size_of_I2C_Master_Start 000F                  __size_of_I2C_Master_Write 0009  
                        ?_Decodify_Command 0076                            ___lldiv@divisor 0020  
                          ___lldiv@counter 002C                                  _RL0Status 00ED  
     EEPROM_24C1025_Read_Buffer_USART@data 002C                                  _RL1Status 007C  
     EEPROM_24C1025_Read_Buffer_USART@ctrl 0031                         ??_Decodify_Command 00BD  
                                _RCSTAbits 0018                           I2C_Master_Init@c 002D  
                         I2C_Master_Read@a 0023                             ?_Send_Reply_OK 0076  
                _EEPROM_24C1025_Write_Byte 05B5           __size_of_EEPROM_24C1025_Fill_All 0033  
                                  strlen@s 0022                         USART_to_Protocol@i 0022  
                                _PORTAbits 0005                                  _PORTBbits 0006  
                                _PORTCbits 0007                           _Delay_Led_Memory 01AC  
             ??_EEPROM_24C1025_Read_Buffer 0030              EEPROM_24C1025_Write_Str@range 0030  
                 mediatemperaturaNTC@canal 00D2                                ___fladd@grs 004B  
         __size_of_EEPROM_24C1025_Read_Int 001A    EEPROM_24C1025_Read_Buffer_USART@cnt_117 002E  
         __size_of_EEPROM_24C1025_Read_Str 00F3                               ?_Auto_Relay0 0076  
                             ?_Auto_Relay1 0076                              ___xxtofl@sign 0032  
      __end_of_EEPROM_24C1025_Write_Buffer 1762                _EEPROM_24C1025_Write_Buffer 1687  
  EEPROM_24C1025_Read_Buffer_USART@mem_add 0027                                ___fldiv@grs 00B3  
                              ___fldiv@rem 00AC       PROCULUS_Control_Register_Write@vetor 00AC  
         EEPROM_24C1025_Write_Buffer@count 0033            EEPROM_24C1025_Write_Int@mem_add 00A8  
         EEPROM_24C1025_Write_Buffer@range 0035                          __size_of_ADC_init 000B  
                  Decodify_Command@tempint 00C3                      PROCULUS_VP_Write@size 00AE  
          EEPROM_24C1025_Read_Str@chip_add 002F                                ___flmul@grs 0063  
                 _PROCULUS_VP_Write_String 06F3                                  _TXSTAbits 0098  
      __size_of_EEPROM_24C1025_Read_Buffer 00EA                     PROCULUS_Delay@tempo_ms 0020  
                   ??_PROCULUS_Show_Screen 0070                               ?_Rele0Ligado 0076  
                             ?_Rele1Ligado 0076                             __end_of___flge 1F04  
                           __end_of___fleq 1F3A                      __end_of_USART_put_int 03B2  
                            __pidataCOMMON 0000                                _BAUDCTLbits 0187  
                         ??_Rele0Desligado 0020                             __end_of_strcpy 081D  
                           __end_of_strlen 0650                                __end_ofPL10 1FCD  
                              __end_ofPL20 0FA8                                __end_ofPL12 1FDD  
                              __end_ofPL30 17B1                                __end_ofPL22 1CF8  
                              __end_ofPL14 0684                                __end_ofPL40 1FEE  
                              __end_ofPL32 0FBB                                __end_ofPL24 0FB2  
                              __end_ofPL16 12BB                                __end_ofPL50 17D4  
                              __end_ofPL42 17C0                                __end_ofPL34 0FC4  
                              __end_ofPL26 06A1                                __end_ofPL18 0693  
                              __end_ofPL60 0FDD                                __end_ofPL52 17DE  
                              __end_ofPL44 1D02                                __end_ofPL36 1FE6  
                              __end_ofPL28 06AE                                __end_ofPL70 1FFA  
                              __end_ofPL62 17EE                                __end_ofPL54 17E7  
                              __end_ofPL46 1D0C                                __end_ofPL38 17B8  
                              __end_ofPL80 0FE8                                __end_ofPL72 17F4  
                              __end_ofPL64 12C2                                __end_ofPL56 0FCD  
                              __end_ofPL48 17CA                                __end_ofPL82 06D3  
                              __end_ofPL74 17FA                                __end_ofPL66 06B5  
                              __end_ofPL58 0FD6                                __end_ofPL84 2000  
                              __end_ofPL76 1800                                __end_ofPL68 1FF4  
                              __end_ofPL78 0FE3                        start_initialization 0015  
                               eval_poly@d 00A4                                 eval_poly@n 00A5  
                               eval_poly@x 00A0                           ??_Rele1Desligado 0020  
                                _Load_Work 11A6                                __end_of_log 1E96  
                              __end_of_isr 11A6                                USART_init@i 0024  
                             ??_Send_To_MB 0021   EEPROM_24C1025_Read_Buffer_USART@chip_add 002F  
                               frexp@value 002C                          ??_I2C_Master_Init 0031  
                        ??_I2C_Master_Read 0025                          ??_I2C_Master_Wait 0020  
                        ??_I2C_Master_Stop 0023               __end_of_EEPROM_Write_Integer 063D  
         EEPROM_24C1025_Write_Int@chip_add 00AE                                  _SetPoint0 00E1  
                                _SetPoint1 00DD                        Decodify_Command@add 00C1  
                                _TempoON_0 00EB                                  _TempoON_1 00E8  
                          ??_Send_Reply_OK 0025                                   ??___flge 005C  
                                 ??___fleq 0028                          __size_of_Save_Log 0056  
                     I2C_Master_Wait@tempo 0022                                  __Umul8_16 0517  
                              __pdataBANK1 00ED                         __end_of_Send_To_MB 0391  
         __size_of_Package_Usart_is_for_me 0018                                   ??_strcpy 0021  
                                 ??_strlen 0022   EEPROM_24C1025_Read_Buffer_USART@sizedata 002B  
               ??_EEPROM_24C1025_Read_Byte 0039         EEPROM_24C1025_Write_Buffer@mem_add 002A  
                                ___fladd@a 003C                                  ___fladd@b 0038  
         EEPROM_24C1025_Write_Byte@mem_add 0037                                  ___fldiv@a 00A0  
                                ___fldiv@b 00A4                                  ___flmul@a 0058  
                                ___flmul@b 0054                                __pbssCOMMON 0070  
                                ___flsub@a 004C                                  ___flsub@b 0050  
                                ___latbits 0002                              __pcstackBANK0 0020  
                            __pcstackBANK1 00A0                                 ?_Load_Work 0076  
                        _PROCULUS_VP_Write 003B                          __size_of___xxtofl 006E  
                       ?_PROCULUS_VP_Write 00AA               __size_of_EEPROM_Write_String 0018  
                         _I2C_Master_Start 149A                           _I2C_Master_Write 1762  
                      ??_PROCULUS_VP_Write 00AF                             _tempodecorrido 019C  
                        ?_USART_put_string 0021                            _PROCULUS_Buzzer 06D3  
                         ___lwdiv@dividend 0022                              ?_ADC_Read_NTC 00B9  
           Package_Usart_is_for_me@retorno 0020                         ??_USART_put_string 0023  
                                 ?___fladd 0038                                   ?___fldiv 00A0  
                  _EEPROM_24C1025_Fill_All 0551                                   ?___flmul 0054  
                                 ?___flsub 004C                                   ?___fltol 00A0  
                                 ?___lldiv 0020                                 ?__Umul8_16 0020  
                       _EEPROM_Read_String 05C9                                   ?___lwdiv 0020  
       __end_of_EEPROM_24C1025_Read_Buffer 1593                 _EEPROM_24C1025_Read_Buffer 14A9  
                                 ?_captura 0020                                  __pstrings 1000  
                          _my_delay_ms_WDT 177B                    _EEPROM_24C1025_Read_Int 059B  
                  _EEPROM_24C1025_Read_Str 135D                     EEPROM_Read_Integer@ptr 0026  
               ??_EEPROM_24C1025_Write_Int 006F                 ??_EEPROM_24C1025_Write_Str 002F  
                      ?_EEPROM_Read_String 0023                                  _eval_poly 0A28  
                __end_of_PROCULUS_VP_Write 006E                 EEPROM_24C1025_Read_Str@cnt 002E  
                                 _ADC_init 07EF                           ___lwdiv@quotient 0025  
                  EEPROM_Write_Integer@ptr 002A                       __size_of_Auto_Relay0 005F  
                     __size_of_Auto_Relay1 0058                           ??_PROCULUS_Delay 0022  
                           __size_of_frexp 0047             EEPROM_24C1025_Read_Buffer@data 002F  
             __size_of_mediatemperaturaNTC 00DE             EEPROM_24C1025_Read_Buffer@ctrl 0034  
                            ??_my_delay_ms 0024                  __size_of_EEPROM_Read_Byte 0021  
                        interrupt_function 0004            EEPROM_24C1025_Write_Str@mem_add 002A  
                     ??_EEPROM_Read_String 0024                                  clear_ram0 0800  
                                 _PIE1bits 008C                             ??_ADC_Read_NTC 006F  
                                 _PIR1bits 000C           PROCULUS_Control_Register_Write@i 00AD  
                   Decodify_Command@OutPut 00C5                    mediatemperaturaNTC@Temp 00D3  
                          _Delay_Led_Usart 01A8               EEPROM_24C1025_Read_Byte@data 003A  
                     __size_of_Rele0Ligado 0017                       __size_of_Rele1Ligado 0018  
              __end_of_EEPROM_Read_Integer 12A2                                 _ADCON0bits 001F  
                              __stringbase 100F                                 _ADCON1bits 009F  
                __size_of_Decodify_Command 02C8                       _EEPROM_Write_Integer 061A  
           EEPROM_24C1025_Read_Int@mem_add 0035                                 ?_eval_poly 00A0  
                                main@reset 00DB                                ??_Load_Work 00B9  
               ??_PROCULUS_VP_Write_String 0070                        I2C_Master_Read@temp 0025  
                  __end_of_PROCULUS_Buzzer 06F3                             _generic_status 00EC  
                                frexp@eptr 0030                                 _EECON1bits 018C  
                                 _Save_Log 1C38                  ??_EEPROM_24C1025_Fill_All 006F  
                      __end_of_my_delay_ms 1089               EEPROM_24C1025_Read_Str@range 0030  
                  __end_of_my_delay_ms_WDT 17A8                               my_delay_ms@i 0026  
                            ADC_Read_NTC@B 00C1                              ADC_Read_NTC@i 00C7  
                              ??__Umul8_16 0022          __size_of_I2C_Master_RepeatedStart 0009  
                         __size_of___fladd 016F                  ??_EEPROM_24C1025_Read_Int 0039  
                  _Package_Usart_is_for_me 0FE8                           __size_of___fldiv 0121  
                ??_EEPROM_24C1025_Read_Str 002C                           __size_of___flmul 0154  
                ?_I2C_Master_RepeatedStart 0076                           __size_of___flsub 001C  
                         __size_of___fltol 005A                           __size_of___lldiv 0048  
                         __size_of___lwdiv 002A                         __end_of__stringtab 1010  
      EEPROM_24C1025_Write_Buffer@chip_add 0034                        USART_put_string@ptr 0023  
                         __size_of_captura 000E                      ?_EEPROM_Write_Integer 0025  
                             _Temperatura0 0194                               _Temperatura1 0190  
                          _I2C_Master_Init 072F                            _I2C_Master_Read 1450  
                                 ___xxtofl 0DB5                 __size_of_PROCULUS_VP_Write 0033  
                          _I2C_Master_Wait 147B           EEPROM_24C1025_Read_Byte@chip_add 0039  
                          _I2C_Master_Stop 176B                            ___lwdiv@divisor 0020  
                          ___lwdiv@counter 0024                                   __ptext10 1089  
                                 __ptext11 072F                                   __ptext20 1C8E  
                                 __ptext12 075C                                   __ptext21 03C3  
                                 __ptext13 00AE                                   __ptext30 03A2  
                                 __ptext22 0517                                   __ptext14 0808  
                                 __ptext31 006E                                   __ptext23 06F3  
                                 __ptext15 07A4                                   __ptext40 12C2  
                                 __ptext32 11A6                                   __ptext24 063D  
                                 __ptext16 0376                                   __ptext41 05B5  
                                 __ptext33 0E23                                   __ptext25 003B  
                                 __ptext17 03B2                                   __ptext50 0551  
                                 __ptext42 135D                                   __ptext34 1287  
                                 __ptext26 03B9                                   __ptext18 0704  
                                 __ptext51 0532                                   __ptext43 059B  
                                 __ptext35 06B5                                   __ptext27 06D3  
                                 __ptext19 1C38                                   __ptext60 0A10  
                                 __ptext52 1687                                   __ptext44 0584  
                                 __ptext36 061A                                   __ptext28 0F60  
                                 __ptext61 1F85                                   __ptext53 177B  
                                 __ptext45 14A9                                   __ptext37 05DF  
                                 __ptext29 0088                                   __ptext62 1D64  
                                 __ptext54 1762                                   __ptext46 1593  
                                 __ptext38 05C9                                   __ptext63 0F44  
                                 __ptext55 176B                                   __ptext47 0391  
                                 __ptext39 1266                                   __ptext64 0AD4  
                                 __ptext56 149A                                   __ptext48 1772  
                                 __ptext65 1E96                                   __ptext57 147B  
                                 __ptext49 1450                                   __ptext66 09F9  
                                 __ptext58 1D0C                                   __ptext67 1F81  
                                 __ptext59 0DB5                                   __ptext68 07EF  
                                 __ptext69 10C8                         USART_put_int@value 00A8  
                               strcpy@from 0020                              __size_of_main 00FE  
             EEPROM_24C1025_Fill_All@value 00B1                 PROCULUS_VP_Write_String@vp 00B2  
      EEPROM_24C1025_Write_Buffer@sizedata 002E                                _milisegundo 01A6  
                           _Delay_Led_Tmr0 01AA              __size_of_PROCULUS_Show_Screen 000A  
                      _EEPROM_Write_String 06B5                                   log@coeff 1010  
                 __end_of_I2C_Master_Start 14A9                   __end_of_I2C_Master_Write 176B  
                               _INTCONbits 000B                                ??_eval_poly 00A7  
                     __end_of_ADC_Read_NTC 0DB5                                   isr@tempo 007A  
                     EEPROM_Read_Byte@addr 0022                     EEPROM_Read_String@addr 0024  
                   EEPROM_Read_String@dado 0023                           my_delay_ms_WDT@i 0026  
                                 intlevel1 0000                           ?_PROCULUS_Buzzer 00AE  
                        USART_put_int@dado 006F                           _EEPROM_Read_Byte 1266  
                              _my_delay_ms 105D                          ADC_Read_NTC@canal 0076  
                     ?_EEPROM_Write_String 0025                           ___lldiv@dividend 0024  
                   __size_of_USART_put_int 0010               EEPROM_24C1025_Write_Int@data 00AC  
                     EEPROM_Read_Integer@i 0029                    EEPROM_Write_String@addr 0026  
                  EEPROM_Write_String@dado 0025                          ADC_Read_NTC@value 00C8  
                       USART_init@baudrate 0020                                  stringcode 100A  
                               _OSCCONbits 008F      EEPROM_24C1025_Read_Buffer_USART@range 0030  
                ??_Package_Usart_is_for_me 0020                           ?_my_delay_ms_WDT 0020  
                    __end_of_Send_Reply_OK 03B9                        _mediatemperaturaNTC 091B  
                  __end_of_I2C_Master_Init 075C                    __end_of_I2C_Master_Read 147B  
                  __end_of_I2C_Master_Wait 149A                    __end_of_I2C_Master_Stop 1772  
             EEPROM_24C1025_Write_Str@data 002E               EEPROM_24C1025_Write_Str@ctrl 0031  
              ?_EEPROM_24C1025_Read_Buffer 002A            EEPROM_24C1025_Fill_All@chip_add 00B3  
                   ??_EEPROM_Write_Integer 0027                     __Umul8_16@multiplicand 0020  
          USART_to_Protocol@usart_protocol 0024                           _Decodify_Command 00AE  
                __size_of_USART_put_string 002B                           ___lldiv@quotient 0028  
                        I2C_Master_Write@d 0023                                   strcpy@cp 0023  
                                 strlen@cp 0023                                   strcpy@to 0022  
                                 stringdir 100A                                   stringtab 1000  
                              _SSPCON2bits 0091                          _EEPROM_Write_Byte 05DF  
           EEPROM_24C1025_Read_Str@mem_add 0027                              ___fladd@signs 0048  
                     ?_mediatemperaturaNTC 0076                         ?_EEPROM_Write_Byte 0020  
                    ??_EEPROM_Write_String 0026                    __size_of_Rele0Desligado 0004  
                             ___fladd@aexp 0049                               ___fladd@bexp 004A  
        __size_of_EEPROM_24C1025_Read_Byte 0017                  ?_EEPROM_24C1025_Read_Byte 0035  
                      EEPROM_Read_String@c 0025                       __Umul8_16@multiplier 0026  
                  __size_of_Rele1Desligado 0004                        ??_EEPROM_Write_Byte 0021  
                        __Umul8_16@product 0022                                 _USART_init 1089  
