

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Nov 12 13:58:20 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	intentry,global,class=CODE,delta=2
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    75                           	dabs	1,0x7E,2
    76  0000                     
    77                           ; Version 2.20
    78                           ; Generated 12/02/2020 GMT
    79                           ; 
    80                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC16F886 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  008F                     	;# 
   154  0090                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0093                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0095                     	;# 
   162  0096                     	;# 
   163  0097                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009A                     	;# 
   167  009B                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009E                     	;# 
   171  009F                     	;# 
   172  0105                     	;# 
   173  0107                     	;# 
   174  0108                     	;# 
   175  0109                     	;# 
   176  010C                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  010F                     	;# 
   181  0185                     	;# 
   182  0187                     	;# 
   183  0188                     	;# 
   184  0189                     	;# 
   185  018C                     	;# 
   186  018D                     	;# 
   187  0000                     	;# 
   188  0001                     	;# 
   189  0002                     	;# 
   190  0003                     	;# 
   191  0004                     	;# 
   192  0005                     	;# 
   193  0006                     	;# 
   194  0007                     	;# 
   195  0009                     	;# 
   196  000A                     	;# 
   197  000B                     	;# 
   198  000C                     	;# 
   199  000D                     	;# 
   200  000E                     	;# 
   201  000E                     	;# 
   202  000F                     	;# 
   203  0010                     	;# 
   204  0011                     	;# 
   205  0012                     	;# 
   206  0013                     	;# 
   207  0014                     	;# 
   208  0015                     	;# 
   209  0015                     	;# 
   210  0016                     	;# 
   211  0017                     	;# 
   212  0018                     	;# 
   213  0019                     	;# 
   214  001A                     	;# 
   215  001B                     	;# 
   216  001B                     	;# 
   217  001C                     	;# 
   218  001D                     	;# 
   219  001E                     	;# 
   220  001F                     	;# 
   221  0081                     	;# 
   222  0085                     	;# 
   223  0086                     	;# 
   224  0087                     	;# 
   225  0089                     	;# 
   226  008C                     	;# 
   227  008D                     	;# 
   228  008E                     	;# 
   229  008F                     	;# 
   230  0090                     	;# 
   231  0091                     	;# 
   232  0092                     	;# 
   233  0093                     	;# 
   234  0093                     	;# 
   235  0093                     	;# 
   236  0094                     	;# 
   237  0095                     	;# 
   238  0096                     	;# 
   239  0097                     	;# 
   240  0098                     	;# 
   241  0099                     	;# 
   242  009A                     	;# 
   243  009B                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009E                     	;# 
   247  009F                     	;# 
   248  0105                     	;# 
   249  0107                     	;# 
   250  0108                     	;# 
   251  0109                     	;# 
   252  010C                     	;# 
   253  010C                     	;# 
   254  010D                     	;# 
   255  010E                     	;# 
   256  010F                     	;# 
   257  0185                     	;# 
   258  0187                     	;# 
   259  0188                     	;# 
   260  0189                     	;# 
   261  018C                     	;# 
   262  018D                     	;# 
   263  0000                     	;# 
   264  0001                     	;# 
   265  0002                     	;# 
   266  0003                     	;# 
   267  0004                     	;# 
   268  0005                     	;# 
   269  0006                     	;# 
   270  0007                     	;# 
   271  0009                     	;# 
   272  000A                     	;# 
   273  000B                     	;# 
   274  000C                     	;# 
   275  000D                     	;# 
   276  000E                     	;# 
   277  000E                     	;# 
   278  000F                     	;# 
   279  0010                     	;# 
   280  0011                     	;# 
   281  0012                     	;# 
   282  0013                     	;# 
   283  0014                     	;# 
   284  0015                     	;# 
   285  0015                     	;# 
   286  0016                     	;# 
   287  0017                     	;# 
   288  0018                     	;# 
   289  0019                     	;# 
   290  001A                     	;# 
   291  001B                     	;# 
   292  001B                     	;# 
   293  001C                     	;# 
   294  001D                     	;# 
   295  001E                     	;# 
   296  001F                     	;# 
   297  0081                     	;# 
   298  0085                     	;# 
   299  0086                     	;# 
   300  0087                     	;# 
   301  0089                     	;# 
   302  008C                     	;# 
   303  008D                     	;# 
   304  008E                     	;# 
   305  008F                     	;# 
   306  0090                     	;# 
   307  0091                     	;# 
   308  0092                     	;# 
   309  0093                     	;# 
   310  0093                     	;# 
   311  0093                     	;# 
   312  0094                     	;# 
   313  0095                     	;# 
   314  0096                     	;# 
   315  0097                     	;# 
   316  0098                     	;# 
   317  0099                     	;# 
   318  009A                     	;# 
   319  009B                     	;# 
   320  009C                     	;# 
   321  009D                     	;# 
   322  009E                     	;# 
   323  009F                     	;# 
   324  0105                     	;# 
   325  0107                     	;# 
   326  0108                     	;# 
   327  0109                     	;# 
   328  010C                     	;# 
   329  010C                     	;# 
   330  010D                     	;# 
   331  010E                     	;# 
   332  010F                     	;# 
   333  0185                     	;# 
   334  0187                     	;# 
   335  0188                     	;# 
   336  0189                     	;# 
   337  018C                     	;# 
   338  018D                     	;# 
   339  0000                     	;# 
   340  0001                     	;# 
   341  0002                     	;# 
   342  0003                     	;# 
   343  0004                     	;# 
   344  0005                     	;# 
   345  0006                     	;# 
   346  0007                     	;# 
   347  0009                     	;# 
   348  000A                     	;# 
   349  000B                     	;# 
   350  000C                     	;# 
   351  000D                     	;# 
   352  000E                     	;# 
   353  000E                     	;# 
   354  000F                     	;# 
   355  0010                     	;# 
   356  0011                     	;# 
   357  0012                     	;# 
   358  0013                     	;# 
   359  0014                     	;# 
   360  0015                     	;# 
   361  0015                     	;# 
   362  0016                     	;# 
   363  0017                     	;# 
   364  0018                     	;# 
   365  0019                     	;# 
   366  001A                     	;# 
   367  001B                     	;# 
   368  001B                     	;# 
   369  001C                     	;# 
   370  001D                     	;# 
   371  001E                     	;# 
   372  001F                     	;# 
   373  0081                     	;# 
   374  0085                     	;# 
   375  0086                     	;# 
   376  0087                     	;# 
   377  0089                     	;# 
   378  008C                     	;# 
   379  008D                     	;# 
   380  008E                     	;# 
   381  008F                     	;# 
   382  0090                     	;# 
   383  0091                     	;# 
   384  0092                     	;# 
   385  0093                     	;# 
   386  0093                     	;# 
   387  0093                     	;# 
   388  0094                     	;# 
   389  0095                     	;# 
   390  0096                     	;# 
   391  0097                     	;# 
   392  0098                     	;# 
   393  0099                     	;# 
   394  009A                     	;# 
   395  009B                     	;# 
   396  009C                     	;# 
   397  009D                     	;# 
   398  009E                     	;# 
   399  009F                     	;# 
   400  0105                     	;# 
   401  0107                     	;# 
   402  0108                     	;# 
   403  0109                     	;# 
   404  010C                     	;# 
   405  010C                     	;# 
   406  010D                     	;# 
   407  010E                     	;# 
   408  010F                     	;# 
   409  0185                     	;# 
   410  0187                     	;# 
   411  0188                     	;# 
   412  0189                     	;# 
   413  018C                     	;# 
   414  018D                     	;# 
   415  0000                     	;# 
   416  0001                     	;# 
   417  0002                     	;# 
   418  0003                     	;# 
   419  0004                     	;# 
   420  0005                     	;# 
   421  0006                     	;# 
   422  0007                     	;# 
   423  0009                     	;# 
   424  000A                     	;# 
   425  000B                     	;# 
   426  000C                     	;# 
   427  000D                     	;# 
   428  000E                     	;# 
   429  000E                     	;# 
   430  000F                     	;# 
   431  0010                     	;# 
   432  0011                     	;# 
   433  0012                     	;# 
   434  0013                     	;# 
   435  0014                     	;# 
   436  0015                     	;# 
   437  0015                     	;# 
   438  0016                     	;# 
   439  0017                     	;# 
   440  0018                     	;# 
   441  0019                     	;# 
   442  001A                     	;# 
   443  001B                     	;# 
   444  001B                     	;# 
   445  001C                     	;# 
   446  001D                     	;# 
   447  001E                     	;# 
   448  001F                     	;# 
   449  0081                     	;# 
   450  0085                     	;# 
   451  0086                     	;# 
   452  0087                     	;# 
   453  0089                     	;# 
   454  008C                     	;# 
   455  008D                     	;# 
   456  008E                     	;# 
   457  008F                     	;# 
   458  0090                     	;# 
   459  0091                     	;# 
   460  0092                     	;# 
   461  0093                     	;# 
   462  0093                     	;# 
   463  0093                     	;# 
   464  0094                     	;# 
   465  0095                     	;# 
   466  0096                     	;# 
   467  0097                     	;# 
   468  0098                     	;# 
   469  0099                     	;# 
   470  009A                     	;# 
   471  009B                     	;# 
   472  009C                     	;# 
   473  009D                     	;# 
   474  009E                     	;# 
   475  009F                     	;# 
   476  0105                     	;# 
   477  0107                     	;# 
   478  0108                     	;# 
   479  0109                     	;# 
   480  010C                     	;# 
   481  010C                     	;# 
   482  010D                     	;# 
   483  010E                     	;# 
   484  010F                     	;# 
   485  0185                     	;# 
   486  0187                     	;# 
   487  0188                     	;# 
   488  0189                     	;# 
   489  018C                     	;# 
   490  018D                     	;# 
   491  0000                     	;# 
   492  0001                     	;# 
   493  0002                     	;# 
   494  0003                     	;# 
   495  0004                     	;# 
   496  0005                     	;# 
   497  0006                     	;# 
   498  0007                     	;# 
   499  0009                     	;# 
   500  000A                     	;# 
   501  000B                     	;# 
   502  000C                     	;# 
   503  000D                     	;# 
   504  000E                     	;# 
   505  000E                     	;# 
   506  000F                     	;# 
   507  0010                     	;# 
   508  0011                     	;# 
   509  0012                     	;# 
   510  0013                     	;# 
   511  0014                     	;# 
   512  0015                     	;# 
   513  0015                     	;# 
   514  0016                     	;# 
   515  0017                     	;# 
   516  0018                     	;# 
   517  0019                     	;# 
   518  001A                     	;# 
   519  001B                     	;# 
   520  001B                     	;# 
   521  001C                     	;# 
   522  001D                     	;# 
   523  001E                     	;# 
   524  001F                     	;# 
   525  0081                     	;# 
   526  0085                     	;# 
   527  0086                     	;# 
   528  0087                     	;# 
   529  0089                     	;# 
   530  008C                     	;# 
   531  008D                     	;# 
   532  008E                     	;# 
   533  008F                     	;# 
   534  0090                     	;# 
   535  0091                     	;# 
   536  0092                     	;# 
   537  0093                     	;# 
   538  0093                     	;# 
   539  0093                     	;# 
   540  0094                     	;# 
   541  0095                     	;# 
   542  0096                     	;# 
   543  0097                     	;# 
   544  0098                     	;# 
   545  0099                     	;# 
   546  009A                     	;# 
   547  009B                     	;# 
   548  009C                     	;# 
   549  009D                     	;# 
   550  009E                     	;# 
   551  009F                     	;# 
   552  0105                     	;# 
   553  0107                     	;# 
   554  0108                     	;# 
   555  0109                     	;# 
   556  010C                     	;# 
   557  010C                     	;# 
   558  010D                     	;# 
   559  010E                     	;# 
   560  010F                     	;# 
   561  0185                     	;# 
   562  0187                     	;# 
   563  0188                     	;# 
   564  0189                     	;# 
   565  018C                     	;# 
   566  018D                     	;# 
   567  0000                     	;# 
   568  0001                     	;# 
   569  0002                     	;# 
   570  0003                     	;# 
   571  0004                     	;# 
   572  0005                     	;# 
   573  0006                     	;# 
   574  0007                     	;# 
   575  0009                     	;# 
   576  000A                     	;# 
   577  000B                     	;# 
   578  000C                     	;# 
   579  000D                     	;# 
   580  000E                     	;# 
   581  000E                     	;# 
   582  000F                     	;# 
   583  0010                     	;# 
   584  0011                     	;# 
   585  0012                     	;# 
   586  0013                     	;# 
   587  0014                     	;# 
   588  0015                     	;# 
   589  0015                     	;# 
   590  0016                     	;# 
   591  0017                     	;# 
   592  0018                     	;# 
   593  0019                     	;# 
   594  001A                     	;# 
   595  001B                     	;# 
   596  001B                     	;# 
   597  001C                     	;# 
   598  001D                     	;# 
   599  001E                     	;# 
   600  001F                     	;# 
   601  0081                     	;# 
   602  0085                     	;# 
   603  0086                     	;# 
   604  0087                     	;# 
   605  0089                     	;# 
   606  008C                     	;# 
   607  008D                     	;# 
   608  008E                     	;# 
   609  008F                     	;# 
   610  0090                     	;# 
   611  0091                     	;# 
   612  0092                     	;# 
   613  0093                     	;# 
   614  0093                     	;# 
   615  0093                     	;# 
   616  0094                     	;# 
   617  0095                     	;# 
   618  0096                     	;# 
   619  0097                     	;# 
   620  0098                     	;# 
   621  0099                     	;# 
   622  009A                     	;# 
   623  009B                     	;# 
   624  009C                     	;# 
   625  009D                     	;# 
   626  009E                     	;# 
   627  009F                     	;# 
   628  0105                     	;# 
   629  0107                     	;# 
   630  0108                     	;# 
   631  0109                     	;# 
   632  010C                     	;# 
   633  010C                     	;# 
   634  010D                     	;# 
   635  010E                     	;# 
   636  010F                     	;# 
   637  0185                     	;# 
   638  0187                     	;# 
   639  0188                     	;# 
   640  0189                     	;# 
   641  018C                     	;# 
   642  018D                     	;# 
   643  0000                     	;# 
   644  0001                     	;# 
   645  0002                     	;# 
   646  0003                     	;# 
   647  0004                     	;# 
   648  0005                     	;# 
   649  0006                     	;# 
   650  0007                     	;# 
   651  0009                     	;# 
   652  000A                     	;# 
   653  000B                     	;# 
   654  000C                     	;# 
   655  000D                     	;# 
   656  000E                     	;# 
   657  000E                     	;# 
   658  000F                     	;# 
   659  0010                     	;# 
   660  0011                     	;# 
   661  0012                     	;# 
   662  0013                     	;# 
   663  0014                     	;# 
   664  0015                     	;# 
   665  0015                     	;# 
   666  0016                     	;# 
   667  0017                     	;# 
   668  0018                     	;# 
   669  0019                     	;# 
   670  001A                     	;# 
   671  001B                     	;# 
   672  001B                     	;# 
   673  001C                     	;# 
   674  001D                     	;# 
   675  001E                     	;# 
   676  001F                     	;# 
   677  0081                     	;# 
   678  0085                     	;# 
   679  0086                     	;# 
   680  0087                     	;# 
   681  0089                     	;# 
   682  008C                     	;# 
   683  008D                     	;# 
   684  008E                     	;# 
   685  008F                     	;# 
   686  0090                     	;# 
   687  0091                     	;# 
   688  0092                     	;# 
   689  0093                     	;# 
   690  0093                     	;# 
   691  0093                     	;# 
   692  0094                     	;# 
   693  0095                     	;# 
   694  0096                     	;# 
   695  0097                     	;# 
   696  0098                     	;# 
   697  0099                     	;# 
   698  009A                     	;# 
   699  009B                     	;# 
   700  009C                     	;# 
   701  009D                     	;# 
   702  009E                     	;# 
   703  009F                     	;# 
   704  0105                     	;# 
   705  0107                     	;# 
   706  0108                     	;# 
   707  0109                     	;# 
   708  010C                     	;# 
   709  010C                     	;# 
   710  010D                     	;# 
   711  010E                     	;# 
   712  010F                     	;# 
   713  0185                     	;# 
   714  0187                     	;# 
   715  0188                     	;# 
   716  0189                     	;# 
   717  018C                     	;# 
   718  018D                     	;# 
   719  0000                     	;# 
   720  0001                     	;# 
   721  0002                     	;# 
   722  0003                     	;# 
   723  0004                     	;# 
   724  0005                     	;# 
   725  0006                     	;# 
   726  0007                     	;# 
   727  0009                     	;# 
   728  000A                     	;# 
   729  000B                     	;# 
   730  000C                     	;# 
   731  000D                     	;# 
   732  000E                     	;# 
   733  000E                     	;# 
   734  000F                     	;# 
   735  0010                     	;# 
   736  0011                     	;# 
   737  0012                     	;# 
   738  0013                     	;# 
   739  0014                     	;# 
   740  0015                     	;# 
   741  0015                     	;# 
   742  0016                     	;# 
   743  0017                     	;# 
   744  0018                     	;# 
   745  0019                     	;# 
   746  001A                     	;# 
   747  001B                     	;# 
   748  001B                     	;# 
   749  001C                     	;# 
   750  001D                     	;# 
   751  001E                     	;# 
   752  001F                     	;# 
   753  0081                     	;# 
   754  0085                     	;# 
   755  0086                     	;# 
   756  0087                     	;# 
   757  0089                     	;# 
   758  008C                     	;# 
   759  008D                     	;# 
   760  008E                     	;# 
   761  008F                     	;# 
   762  0090                     	;# 
   763  0091                     	;# 
   764  0092                     	;# 
   765  0093                     	;# 
   766  0093                     	;# 
   767  0093                     	;# 
   768  0094                     	;# 
   769  0095                     	;# 
   770  0096                     	;# 
   771  0097                     	;# 
   772  0098                     	;# 
   773  0099                     	;# 
   774  009A                     	;# 
   775  009B                     	;# 
   776  009C                     	;# 
   777  009D                     	;# 
   778  009E                     	;# 
   779  009F                     	;# 
   780  0105                     	;# 
   781  0107                     	;# 
   782  0108                     	;# 
   783  0109                     	;# 
   784  010C                     	;# 
   785  010C                     	;# 
   786  010D                     	;# 
   787  010E                     	;# 
   788  010F                     	;# 
   789  0185                     	;# 
   790  0187                     	;# 
   791  0188                     	;# 
   792  0189                     	;# 
   793  018C                     	;# 
   794  018D                     	;# 
   795  0000                     	;# 
   796  0001                     	;# 
   797  0002                     	;# 
   798  0003                     	;# 
   799  0004                     	;# 
   800  0005                     	;# 
   801  0006                     	;# 
   802  0007                     	;# 
   803  0009                     	;# 
   804  000A                     	;# 
   805  000B                     	;# 
   806  000C                     	;# 
   807  000D                     	;# 
   808  000E                     	;# 
   809  000E                     	;# 
   810  000F                     	;# 
   811  0010                     	;# 
   812  0011                     	;# 
   813  0012                     	;# 
   814  0013                     	;# 
   815  0014                     	;# 
   816  0015                     	;# 
   817  0015                     	;# 
   818  0016                     	;# 
   819  0017                     	;# 
   820  0018                     	;# 
   821  0019                     	;# 
   822  001A                     	;# 
   823  001B                     	;# 
   824  001B                     	;# 
   825  001C                     	;# 
   826  001D                     	;# 
   827  001E                     	;# 
   828  001F                     	;# 
   829  0081                     	;# 
   830  0085                     	;# 
   831  0086                     	;# 
   832  0087                     	;# 
   833  0089                     	;# 
   834  008C                     	;# 
   835  008D                     	;# 
   836  008E                     	;# 
   837  008F                     	;# 
   838  0090                     	;# 
   839  0091                     	;# 
   840  0092                     	;# 
   841  0093                     	;# 
   842  0093                     	;# 
   843  0093                     	;# 
   844  0094                     	;# 
   845  0095                     	;# 
   846  0096                     	;# 
   847  0097                     	;# 
   848  0098                     	;# 
   849  0099                     	;# 
   850  009A                     	;# 
   851  009B                     	;# 
   852  009C                     	;# 
   853  009D                     	;# 
   854  009E                     	;# 
   855  009F                     	;# 
   856  0105                     	;# 
   857  0107                     	;# 
   858  0108                     	;# 
   859  0109                     	;# 
   860  010C                     	;# 
   861  010C                     	;# 
   862  010D                     	;# 
   863  010E                     	;# 
   864  010F                     	;# 
   865  0185                     	;# 
   866  0187                     	;# 
   867  0188                     	;# 
   868  0189                     	;# 
   869  018C                     	;# 
   870  018D                     	;# 
   871  0000                     	;# 
   872  0001                     	;# 
   873  0002                     	;# 
   874  0003                     	;# 
   875  0004                     	;# 
   876  0005                     	;# 
   877  0006                     	;# 
   878  0007                     	;# 
   879  0009                     	;# 
   880  000A                     	;# 
   881  000B                     	;# 
   882  000C                     	;# 
   883  000D                     	;# 
   884  000E                     	;# 
   885  000E                     	;# 
   886  000F                     	;# 
   887  0010                     	;# 
   888  0011                     	;# 
   889  0012                     	;# 
   890  0013                     	;# 
   891  0014                     	;# 
   892  0015                     	;# 
   893  0015                     	;# 
   894  0016                     	;# 
   895  0017                     	;# 
   896  0018                     	;# 
   897  0019                     	;# 
   898  001A                     	;# 
   899  001B                     	;# 
   900  001B                     	;# 
   901  001C                     	;# 
   902  001D                     	;# 
   903  001E                     	;# 
   904  001F                     	;# 
   905  0081                     	;# 
   906  0085                     	;# 
   907  0086                     	;# 
   908  0087                     	;# 
   909  0089                     	;# 
   910  008C                     	;# 
   911  008D                     	;# 
   912  008E                     	;# 
   913  008F                     	;# 
   914  0090                     	;# 
   915  0091                     	;# 
   916  0092                     	;# 
   917  0093                     	;# 
   918  0093                     	;# 
   919  0093                     	;# 
   920  0094                     	;# 
   921  0095                     	;# 
   922  0096                     	;# 
   923  0097                     	;# 
   924  0098                     	;# 
   925  0099                     	;# 
   926  009A                     	;# 
   927  009B                     	;# 
   928  009C                     	;# 
   929  009D                     	;# 
   930  009E                     	;# 
   931  009F                     	;# 
   932  0105                     	;# 
   933  0107                     	;# 
   934  0108                     	;# 
   935  0109                     	;# 
   936  010C                     	;# 
   937  010C                     	;# 
   938  010D                     	;# 
   939  010E                     	;# 
   940  010F                     	;# 
   941  0185                     	;# 
   942  0187                     	;# 
   943  0188                     	;# 
   944  0189                     	;# 
   945  018C                     	;# 
   946  018D                     	;# 
   947  0000                     	;# 
   948  0001                     	;# 
   949  0002                     	;# 
   950  0003                     	;# 
   951  0004                     	;# 
   952  0005                     	;# 
   953  0006                     	;# 
   954  0007                     	;# 
   955  0009                     	;# 
   956  000A                     	;# 
   957  000B                     	;# 
   958  000C                     	;# 
   959  000D                     	;# 
   960  000E                     	;# 
   961  000E                     	;# 
   962  000F                     	;# 
   963  0010                     	;# 
   964  0011                     	;# 
   965  0012                     	;# 
   966  0013                     	;# 
   967  0014                     	;# 
   968  0015                     	;# 
   969  0015                     	;# 
   970  0016                     	;# 
   971  0017                     	;# 
   972  0018                     	;# 
   973  0019                     	;# 
   974  001A                     	;# 
   975  001B                     	;# 
   976  001B                     	;# 
   977  001C                     	;# 
   978  001D                     	;# 
   979  001E                     	;# 
   980  001F                     	;# 
   981  0081                     	;# 
   982  0085                     	;# 
   983  0086                     	;# 
   984  0087                     	;# 
   985  0089                     	;# 
   986  008C                     	;# 
   987  008D                     	;# 
   988  008E                     	;# 
   989  008F                     	;# 
   990  0090                     	;# 
   991  0091                     	;# 
   992  0092                     	;# 
   993  0093                     	;# 
   994  0093                     	;# 
   995  0093                     	;# 
   996  0094                     	;# 
   997  0095                     	;# 
   998  0096                     	;# 
   999  0097                     	;# 
  1000  0098                     	;# 
  1001  0099                     	;# 
  1002  009A                     	;# 
  1003  009B                     	;# 
  1004  009C                     	;# 
  1005  009D                     	;# 
  1006  009E                     	;# 
  1007  009F                     	;# 
  1008  0105                     	;# 
  1009  0107                     	;# 
  1010  0108                     	;# 
  1011  0109                     	;# 
  1012  010C                     	;# 
  1013  010C                     	;# 
  1014  010D                     	;# 
  1015  010E                     	;# 
  1016  010F                     	;# 
  1017  0185                     	;# 
  1018  0187                     	;# 
  1019  0188                     	;# 
  1020  0189                     	;# 
  1021  018C                     	;# 
  1022  018D                     	;# 
  1023  0000                     	;# 
  1024  0001                     	;# 
  1025  0002                     	;# 
  1026  0003                     	;# 
  1027  0004                     	;# 
  1028  0005                     	;# 
  1029  0006                     	;# 
  1030  0007                     	;# 
  1031  0009                     	;# 
  1032  000A                     	;# 
  1033  000B                     	;# 
  1034  000C                     	;# 
  1035  000D                     	;# 
  1036  000E                     	;# 
  1037  000E                     	;# 
  1038  000F                     	;# 
  1039  0010                     	;# 
  1040  0011                     	;# 
  1041  0012                     	;# 
  1042  0013                     	;# 
  1043  0014                     	;# 
  1044  0015                     	;# 
  1045  0015                     	;# 
  1046  0016                     	;# 
  1047  0017                     	;# 
  1048  0018                     	;# 
  1049  0019                     	;# 
  1050  001A                     	;# 
  1051  001B                     	;# 
  1052  001B                     	;# 
  1053  001C                     	;# 
  1054  001D                     	;# 
  1055  001E                     	;# 
  1056  001F                     	;# 
  1057  0081                     	;# 
  1058  0085                     	;# 
  1059  0086                     	;# 
  1060  0087                     	;# 
  1061  0089                     	;# 
  1062  008C                     	;# 
  1063  008D                     	;# 
  1064  008E                     	;# 
  1065  008F                     	;# 
  1066  0090                     	;# 
  1067  0091                     	;# 
  1068  0092                     	;# 
  1069  0093                     	;# 
  1070  0093                     	;# 
  1071  0093                     	;# 
  1072  0094                     	;# 
  1073  0095                     	;# 
  1074  0096                     	;# 
  1075  0097                     	;# 
  1076  0098                     	;# 
  1077  0099                     	;# 
  1078  009A                     	;# 
  1079  009B                     	;# 
  1080  009C                     	;# 
  1081  009D                     	;# 
  1082  009E                     	;# 
  1083  009F                     	;# 
  1084  0105                     	;# 
  1085  0107                     	;# 
  1086  0108                     	;# 
  1087  0109                     	;# 
  1088  010C                     	;# 
  1089  010C                     	;# 
  1090  010D                     	;# 
  1091  010E                     	;# 
  1092  010F                     	;# 
  1093  0185                     	;# 
  1094  0187                     	;# 
  1095  0188                     	;# 
  1096  0189                     	;# 
  1097  018C                     	;# 
  1098  018D                     	;# 
  1099  0000                     	;# 
  1100  0001                     	;# 
  1101  0002                     	;# 
  1102  0003                     	;# 
  1103  0004                     	;# 
  1104  0005                     	;# 
  1105  0006                     	;# 
  1106  0007                     	;# 
  1107  0009                     	;# 
  1108  000A                     	;# 
  1109  000B                     	;# 
  1110  000C                     	;# 
  1111  000D                     	;# 
  1112  000E                     	;# 
  1113  000E                     	;# 
  1114  000F                     	;# 
  1115  0010                     	;# 
  1116  0011                     	;# 
  1117  0012                     	;# 
  1118  0013                     	;# 
  1119  0014                     	;# 
  1120  0015                     	;# 
  1121  0015                     	;# 
  1122  0016                     	;# 
  1123  0017                     	;# 
  1124  0018                     	;# 
  1125  0019                     	;# 
  1126  001A                     	;# 
  1127  001B                     	;# 
  1128  001B                     	;# 
  1129  001C                     	;# 
  1130  001D                     	;# 
  1131  001E                     	;# 
  1132  001F                     	;# 
  1133  0081                     	;# 
  1134  0085                     	;# 
  1135  0086                     	;# 
  1136  0087                     	;# 
  1137  0089                     	;# 
  1138  008C                     	;# 
  1139  008D                     	;# 
  1140  008E                     	;# 
  1141  008F                     	;# 
  1142  0090                     	;# 
  1143  0091                     	;# 
  1144  0092                     	;# 
  1145  0093                     	;# 
  1146  0093                     	;# 
  1147  0093                     	;# 
  1148  0094                     	;# 
  1149  0095                     	;# 
  1150  0096                     	;# 
  1151  0097                     	;# 
  1152  0098                     	;# 
  1153  0099                     	;# 
  1154  009A                     	;# 
  1155  009B                     	;# 
  1156  009C                     	;# 
  1157  009D                     	;# 
  1158  009E                     	;# 
  1159  009F                     	;# 
  1160  0105                     	;# 
  1161  0107                     	;# 
  1162  0108                     	;# 
  1163  0109                     	;# 
  1164  010C                     	;# 
  1165  010C                     	;# 
  1166  010D                     	;# 
  1167  010E                     	;# 
  1168  010F                     	;# 
  1169  0185                     	;# 
  1170  0187                     	;# 
  1171  0188                     	;# 
  1172  0189                     	;# 
  1173  018C                     	;# 
  1174  018D                     	;# 
  1175                           
  1176                           	psect	strings
  1177  1800                     __pstrings:
  1178  1800                     stringtab:
  1179  1800                     __stringtab:
  1180                           
  1181                           ;	String table - string pointers are 1 byte each
  1182  1800  1BFF               	btfsc	btemp+1,7
  1183  1801  280A               	ljmp	stringcode
  1184  1802  1383               	bcf	3,7
  1185  1803  187F               	btfsc	btemp+1,0
  1186  1804  1783               	bsf	3,7
  1187  1805  0800               	movf	0,w
  1188  1806  0A84               	incf	4,f
  1189  1807  1903               	skipnz
  1190  1808  0AFF               	incf	btemp+1,f
  1191  1809  0008               	return
  1192  180A                     stringcode:
  1193  180A                     stringdir:
  1194  180A  3018               	movlw	high stringdir
  1195  180B  008A               	movwf	10
  1196  180C  0804               	movf	4,w
  1197  180D  0A84               	incf	4,f
  1198  180E  0782               	addwf	2,f
  1199  180F                     __stringbase:
  1200  180F  3400               	retlw	0
  1201  1810                     __end_of__stringtab:
  1202  1810                     _PT100_TRANSLADA:
  1203  1810  3466               	retlw	102
  1204  1811  3466               	retlw	102
  1205  1812  34A6               	retlw	166
  1206  1813  34BF               	retlw	191
  1207  1814                     __end_of_PT100_TRANSLADA:
  1208  1814                     _PT100_CONSTANT:
  1209  1814  3414               	retlw	20
  1210  1815  34AE               	retlw	174
  1211  1816  342B               	retlw	43
  1212  1817  34C1               	retlw	193
  1213  1818                     __end_of_PT100_CONSTANT:
  1214  1818                     _RESISTOR_ROOM_TEMP:
  1215                           
  1216                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;;./ntc10k.h: 19: const double RESISTOR_ROOM_TEMP = 10000.0;
  1217  1818  3400               	retlw	0
  1218  1819  3440               	retlw	64
  1219  181A  341C               	retlw	28
  1220  181B  3446               	retlw	70
  1221  181C                     __end_of_RESISTOR_ROOM_TEMP:
  1222  181C                     _ROOM_TEMP:
  1223                           
  1224                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;;./ntc10k.h: 18: const doubl
      +                          e ROOM_TEMP = 301.05;
  1225  181C  3466               	retlw	102
  1226  181D  3486               	retlw	134
  1227  181E  3496               	retlw	150
  1228  181F  3443               	retlw	67
  1229  1820                     __end_of_ROOM_TEMP:
  1230  1820                     _MAX_ADC:
  1231                           
  1232                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;
  1233  1820  3400               	retlw	0
  1234  1821  34C0               	retlw	192
  1235  1822  347F               	retlw	127
  1236  1823  3444               	retlw	68
  1237  1824                     __end_of_MAX_ADC:
  1238  1824                     log@coeff:
  1239  1824  3400               	retlw	0
  1240  1825  3400               	retlw	0
  1241  1826  3400               	retlw	0
  1242  1827  3400               	retlw	0
  1243  1828  34C4               	retlw	196
  1244  1829  34FF               	retlw	255
  1245  182A  347F               	retlw	127
  1246  182B  343F               	retlw	63
  1247  182C  3480               	retlw	128
  1248  182D  34EF               	retlw	239
  1249  182E  34FF               	retlw	255
  1250  182F  34BE               	retlw	190
  1251  1830  3490               	retlw	144
  1252  1831  34E1               	retlw	225
  1253  1832  34A9               	retlw	169
  1254  1833  343E               	retlw	62
  1255  1834  34EC               	retlw	236
  1256  1835  3482               	retlw	130
  1257  1836  3476               	retlw	118
  1258  1837  34BE               	retlw	190
  1259  1838  3482               	retlw	130
  1260  1839  34AD               	retlw	173
  1261  183A  342B               	retlw	43
  1262  183B  343E               	retlw	62
  1263  183C  340E               	retlw	14
  1264  183D  343C               	retlw	60
  1265  183E  34C3               	retlw	195
  1266  183F  34BD               	retlw	189
  1267  1840  3487               	retlw	135
  1268  1841  34D1               	retlw	209
  1269  1842  3413               	retlw	19
  1270  1843  343D               	retlw	61
  1271  1844  3441               	retlw	65
  1272  1845  3478               	retlw	120
  1273  1846  34D3               	retlw	211
  1274  1847  34BB               	retlw	187
  1275  1848                     __end_oflog@coeff:
  1276  1848                     _BETA:
  1277                           
  1278                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;;./ntc10k.h: 16: const double M
      +                          AX_ADC = 1023.0;;./ntc10k.h: 17: const double BETA = 3974.0;
  1279  1848  3400               	retlw	0
  1280  1849  3460               	retlw	96
  1281  184A  3478               	retlw	120
  1282  184B  3445               	retlw	69
  1283  184C                     __end_of_BETA:
  1284  184C                     _BALANCE_RESISTOR:
  1285                           
  1286                           ;./ntc10k.h: 15: const double BALANCE_RESISTOR = 10000.0;
  1287  184C  3400               	retlw	0
  1288  184D  3440               	retlw	64
  1289  184E  341C               	retlw	28
  1290  184F  3446               	retlw	70
  1291  1850                     __end_of_BALANCE_RESISTOR:
  1292  0019                     _TXREG	set	25
  1293  0018                     _RCSTAbits	set	24
  1294  001A                     _RCREG	set	26
  1295  000E                     _TMR1L	set	14
  1296  000F                     _TMR1H	set	15
  1297  000C                     _PIR1bits	set	12
  1298  001E                     _ADRESH	set	30
  1299  001F                     _ADCON0bits	set	31
  1300  0005                     _PORTAbits	set	5
  1301  0007                     _PORTCbits	set	7
  1302  0010                     _T1CON	set	16
  1303  0006                     _PORTBbits	set	6
  1304  0009                     _PORTE	set	9
  1305  0007                     _PORTC	set	7
  1306  0005                     _PORTA	set	5
  1307  0013                     _SSPBUF	set	19
  1308  000B                     _INTCONbits	set	11
  1309  0014                     _SSPCON	set	20
  1310  0006                     _PORTB	set	6
  1311  00C4                     _CREN	set	196
  1312  0081                     _TMR1CS	set	129
  1313  0085                     _T1CKPS1	set	133
  1314  0084                     _T1CKPS0	set	132
  1315  008C                     _PIE1bits	set	140
  1316  0099                     _SPBRG	set	153
  1317  0098                     _TXSTAbits	set	152
  1318  009E                     _ADRESL	set	158
  1319  009F                     _ADCON1	set	159
  1320  009F                     _ADCON1bits	set	159
  1321  0095                     _WPUB	set	149
  1322  0081                     _OPTION_REGbits	set	129
  1323  0089                     _TRISE	set	137
  1324  0087                     _TRISC	set	135
  1325  0086                     _TRISB	set	134
  1326  0085                     _TRISA	set	133
  1327  008F                     _OSCCONbits	set	143
  1328  0091                     _SSPCON2bits	set	145
  1329  0094                     _SSPSTAT	set	148
  1330  0093                     _SSPADD	set	147
  1331  0091                     _SSPCON2	set	145
  1332  043F                     _TRISC7	set	1087
  1333  043E                     _TRISC6	set	1086
  1334  0460                     _TMR1IE	set	1120
  1335  043C                     _TRISC4	set	1084
  1336  043B                     _TRISC3	set	1083
  1337  010C                     _EEDATA	set	268
  1338  010D                     _EEADR	set	269
  1339  0187                     _BAUDCTLbits	set	391
  1340  018D                     _EECON2	set	397
  1341  018C                     _EECON1bits	set	396
  1342  0189                     _ANSELH	set	393
  1343  0188                     _ANSEL	set	392
  1344  1850                     STR_1:
  1345  1850  3476               	retlw	118	;'v'
  1346  1851  3431               	retlw	49	;'1'
  1347  1852  342E               	retlw	46	;'.'
  1348  1853  3430               	retlw	48	;'0'
  1349  1854  342E               	retlw	46	;'.'
  1350  1855  3433               	retlw	51	;'3'
  1351  1856  3430               	retlw	48	;'0'
  1352  1857  3400               	retlw	0
  1353  1858                     STR_2:
  1354  1858  344F               	retlw	79	;'O'
  1355  1859  344B               	retlw	75	;'K'
  1356  185A  3400               	retlw	0
  1357                           
  1358                           	psect	cinit
  1359  0015                     start_initialization:	
  1360                           ; #config settings
  1361                           
  1362  0015                     __initialization:
  1363                           
  1364                           ; Clear objects allocated to COMMON
  1365  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  1366  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1367  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1368  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1369  0019  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1370  001A  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  1371                           
  1372                           ; Clear objects allocated to BANK1
  1373  001B  1383               	bcf	3,7	;select IRP bank0
  1374  001C  30C9               	movlw	low __pbssBANK1
  1375  001D  0084               	movwf	4
  1376  001E  30E5               	movlw	low (__pbssBANK1+28)
  1377  001F  160A  158A  2169  120A  118A  	fcall	clear_ram0
  1378                           
  1379                           ; Clear objects allocated to BANK3
  1380  0024  1783               	bsf	3,7	;select IRP bank2
  1381  0025  3090               	movlw	low __pbssBANK3
  1382  0026  0084               	movwf	4
  1383  0027  30EB               	movlw	low (__pbssBANK3+91)
  1384  0028  160A  158A  2169  120A  118A  	fcall	clear_ram0
  1385                           
  1386                           ; Clear objects allocated to BANK2
  1387  002D  3010               	movlw	low __pbssBANK2
  1388  002E  0084               	movwf	4
  1389  002F  3044               	movlw	low (__pbssBANK2+52)
  1390  0030  160A  158A  2169   	fcall	clear_ram0
  1391  0033                     end_of_initialization:	
  1392                           ;End of C runtime variable initialization code
  1393                           
  1394  0033                     __end_of__initialization:
  1395  0033  0183               	clrf	3
  1396  0034  120A  158A  286D   	ljmp	_main	;jump to C main() function
  1397                           
  1398                           	psect	bssCOMMON
  1399  0078                     __pbssCOMMON:
  1400  0078                     _Delay_Led_Tmr0:
  1401  0078                     	ds	2
  1402  007A                     _minuto:
  1403  007A                     	ds	1
  1404  007B                     _statuspower_memo:
  1405  007B                     	ds	1
  1406  007C                     _hora:
  1407  007C                     	ds	1
  1408  007D                     _segundo:
  1409  007D                     	ds	1
  1410                           
  1411                           	psect	bssBANK1
  1412  00C9                     __pbssBANK1:
  1413  00C9                     _Tensao1:
  1414  00C9                     	ds	4
  1415  00CD                     _Vaccum0:
  1416  00CD                     	ds	4
  1417  00D1                     _errno:
  1418  00D1                     	ds	2
  1419  00D3                     _tempodecorrido:
  1420  00D3                     	ds	2
  1421  00D5                     _count:
  1422  00D5                     	ds	2
  1423  00D7                     _header:
  1424  00D7                     	ds	2
  1425  00D9                     _milisegundo:
  1426  00D9                     	ds	2
  1427  00DB                     _Delay_Led_Usart:
  1428  00DB                     	ds	2
  1429  00DD                     _Delay_Led_Memory:
  1430  00DD                     	ds	2
  1431  00DF                     _pointer:
  1432  00DF                     	ds	1
  1433  00E0                     _destino:
  1434  00E0                     	ds	1
  1435  00E1                     _Board_Number:
  1436  00E1                     	ds	1
  1437  00E2                     _canal:
  1438  00E2                     	ds	1
  1439  00E3                     _statuspower:
  1440  00E3                     	ds	1
  1441  00E4                     _generic_status:
  1442  00E4                     	ds	1
  1443                           
  1444                           	psect	bssBANK3
  1445  0190                     __pbssBANK3:
  1446  0190                     _usart_protocol:
  1447  0190                     	ds	58
  1448  01CA                     _buffer:
  1449  01CA                     	ds	33
  1450                           
  1451                           	psect	bssBANK2
  1452  0110                     __pbssBANK2:
  1453  0110                     _usart_buffer:
  1454  0110                     	ds	52
  1455                           
  1456                           	psect	clrtext
  1457  1969                     clear_ram0:	
  1458                           ;	Called with FSR containing the base address, and
  1459                           ;	W with the last address+1
  1460                           
  1461  1969  0064               	clrwdt	;clear the watchdog before getting into this loop
  1462  196A                     clrloop0:
  1463  196A  0180               	clrf	0	;clear RAM location pointed to by FSR
  1464  196B  0A84               	incf	4,f	;increment pointer
  1465  196C  0604               	xorwf	4,w	;XOR with final address
  1466  196D  1903               	btfsc	3,2	;have we reached the end yet?
  1467  196E  3400               	retlw	0	;all done for this memory range, return
  1468  196F  0604               	xorwf	4,w	;XOR again to restore value
  1469  1970  296A               	goto	clrloop0	;do the next byte
  1470                           
  1471                           	psect	cstackBANK1
  1472  00A0                     __pcstackBANK1:
  1473  00A0                     ?_USART_put_int:
  1474  00A0                     ?_EEPROM_24C1025_Write_Int:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477  00A0                     USART_put_int@value:	
  1478                           ; 1 bytes @ 0x0
  1479                           
  1480  00A0                     EEPROM_24C1025_Write_Int@mem_add:	
  1481                           ; 2 bytes @ 0x0
  1482                           
  1483  00A0                     _MediaPlacaVaccum$2372:	
  1484                           ; 4 bytes @ 0x0
  1485                           
  1486                           
  1487                           ; 4 bytes @ 0x0
  1488  00A0                     	ds	2
  1489  00A2                     ??_USART_put_int:
  1490                           
  1491                           ; 1 bytes @ 0x2
  1492  00A2                     	ds	1
  1493  00A3                     USART_put_int@dado:
  1494                           
  1495                           ; 1 bytes @ 0x3
  1496  00A3                     	ds	1
  1497  00A4                     ?_PROCULUS_Control_Register_Write:
  1498  00A4                     ?_PROCULUS_VP_Write:	
  1499                           ; 1 bytes @ 0x4
  1500                           
  1501  00A4                     MediaPlacaVaccum@canal:	
  1502                           ; 1 bytes @ 0x4
  1503                           
  1504  00A4                     PROCULUS_Control_Register_Write@size:	
  1505                           ; 1 bytes @ 0x4
  1506                           
  1507  00A4                     EEPROM_24C1025_Write_Int@data:	
  1508                           ; 1 bytes @ 0x4
  1509                           
  1510  00A4                     PROCULUS_VP_Write@vp:	
  1511                           ; 2 bytes @ 0x4
  1512                           
  1513                           
  1514                           ; 2 bytes @ 0x4
  1515  00A4                     	ds	1
  1516  00A5                     ??_PROCULUS_Control_Register_Write:
  1517  00A5                     MediaPlacaVaccum@i:	
  1518                           ; 1 bytes @ 0x5
  1519                           
  1520                           
  1521                           ; 2 bytes @ 0x5
  1522  00A5                     	ds	1
  1523  00A6                     ??_EEPROM_24C1025_Write_Int:
  1524  00A6                     PROCULUS_Control_Register_Write@vetor:	
  1525                           ; 1 bytes @ 0x6
  1526                           
  1527  00A6                     PROCULUS_VP_Write@vetor:	
  1528                           ; 1 bytes @ 0x6
  1529                           
  1530                           
  1531                           ; 2 bytes @ 0x6
  1532  00A6                     	ds	1
  1533  00A7                     EEPROM_24C1025_Write_Int@chip_add:
  1534  00A7                     PROCULUS_Control_Register_Write@i:	
  1535                           ; 1 bytes @ 0x7
  1536                           
  1537  00A7                     MediaPlacaVaccum@Temp:	
  1538                           ; 1 bytes @ 0x7
  1539                           
  1540                           
  1541                           ; 4 bytes @ 0x7
  1542  00A7                     	ds	1
  1543  00A8                     ?_PROCULUS_Show_Screen:
  1544  00A8                     ?_PROCULUS_Buzzer:	
  1545                           ; 1 bytes @ 0x8
  1546                           
  1547  00A8                     PROCULUS_VP_Write@size:	
  1548                           ; 1 bytes @ 0x8
  1549                           
  1550  00A8                     EEPROM_24C1025_Write_Int@local:	
  1551                           ; 1 bytes @ 0x8
  1552                           
  1553  00A8                     PROCULUS_Buzzer@time_ms_x_10:	
  1554                           ; 2 bytes @ 0x8
  1555                           
  1556  00A8                     PROCULUS_Show_Screen@screen:	
  1557                           ; 2 bytes @ 0x8
  1558                           
  1559                           
  1560                           ; 2 bytes @ 0x8
  1561  00A8                     	ds	1
  1562  00A9                     ??_PROCULUS_VP_Write:
  1563                           
  1564                           ; 1 bytes @ 0x9
  1565  00A9                     	ds	1
  1566  00AA                     ?_Save_Log:
  1567  00AA                     ??_PROCULUS_Show_Screen:	
  1568                           ; 1 bytes @ 0xA
  1569                           
  1570  00AA                     ??_PROCULUS_Buzzer:	
  1571                           ; 1 bytes @ 0xA
  1572                           
  1573  00AA                     ?_EEPROM_24C1025_Fill_All:	
  1574                           ; 1 bytes @ 0xA
  1575                           
  1576  00AA                     EEPROM_24C1025_Fill_All@value:	
  1577                           ; 1 bytes @ 0xA
  1578                           
  1579  00AA                     Save_Log@add_datalog:	
  1580                           ; 2 bytes @ 0xA
  1581                           
  1582                           
  1583                           ; 4 bytes @ 0xA
  1584  00AA                     	ds	1
  1585  00AB                     PROCULUS_VP_Write@i:
  1586  00AB                     PROCULUS_Buzzer@vetor:	
  1587                           ; 1 bytes @ 0xB
  1588                           
  1589  00AB                     PROCULUS_Show_Screen@vetor:	
  1590                           ; 2 bytes @ 0xB
  1591                           
  1592                           
  1593                           ; 3 bytes @ 0xB
  1594  00AB                     	ds	1
  1595  00AC                     ?_PROCULUS_VP_Write_String:
  1596  00AC                     EEPROM_24C1025_Fill_All@chip_add:	
  1597                           ; 1 bytes @ 0xC
  1598                           
  1599  00AC                     PROCULUS_VP_Write_String@vp:	
  1600                           ; 1 bytes @ 0xC
  1601                           
  1602                           
  1603                           ; 2 bytes @ 0xC
  1604  00AC                     	ds	1
  1605  00AD                     EEPROM_24C1025_Fill_All@mem_add:
  1606                           
  1607                           ; 4 bytes @ 0xD
  1608  00AD                     	ds	1
  1609  00AE                     PROCULUS_VP_Write_String@text:
  1610                           
  1611                           ; 1 bytes @ 0xE
  1612  00AE                     	ds	1
  1613  00AF                     ??_PROCULUS_VP_Write_String:
  1614                           
  1615                           ; 1 bytes @ 0xF
  1616  00AF                     	ds	2
  1617  00B1                     ??_Decodify_Command:
  1618                           
  1619                           ; 1 bytes @ 0x11
  1620  00B1                     	ds	4
  1621  00B5                     Decodify_Command@dados:
  1622                           
  1623                           ; 2 bytes @ 0x15
  1624  00B5                     	ds	2
  1625  00B7                     Decodify_Command@add:
  1626                           
  1627                           ; 1 bytes @ 0x17
  1628  00B7                     	ds	1
  1629  00B8                     Decodify_Command@sizedata:
  1630                           
  1631                           ; 1 bytes @ 0x18
  1632  00B8                     	ds	1
  1633  00B9                     Decodify_Command@tempint:
  1634                           
  1635                           ; 2 bytes @ 0x19
  1636  00B9                     	ds	2
  1637  00BB                     Decodify_Command@OutPut:
  1638                           
  1639                           ; 4 bytes @ 0x1B
  1640  00BB                     	ds	4
  1641  00BF                     Decodify_Command@tempchar:
  1642                           
  1643                           ; 1 bytes @ 0x1F
  1644  00BF                     	ds	1
  1645  00C0                     Decodify_Command@add_24LCxxxx:
  1646                           
  1647                           ; 4 bytes @ 0x20
  1648  00C0                     	ds	4
  1649  00C4                     ??_main:
  1650                           
  1651                           ; 1 bytes @ 0x24
  1652  00C4                     	ds	3
  1653  00C7                     main@reset:
  1654                           
  1655                           ; 2 bytes @ 0x27
  1656  00C7                     	ds	2
  1657                           
  1658                           	psect	cstackCOMMON
  1659  0070                     __pcstackCOMMON:
  1660  0070                     ?_I2C_Master_Start:
  1661  0070                     ?_I2C_Master_Stop:	
  1662                           ; 1 bytes @ 0x0
  1663                           
  1664  0070                     ?_I2C_Master_RepeatedStart:	
  1665                           ; 1 bytes @ 0x0
  1666                           
  1667  0070                     ?_USART_putc:	
  1668                           ; 1 bytes @ 0x0
  1669                           
  1670  0070                     ?_ADC_init:	
  1671                           ; 1 bytes @ 0x0
  1672                           
  1673  0070                     ?_MediaPlacaVaccum:	
  1674                           ; 1 bytes @ 0x0
  1675                           
  1676  0070                     ?_Decodify_Command:	
  1677                           ; 1 bytes @ 0x0
  1678                           
  1679  0070                     ?_USART_to_Protocol:	
  1680                           ; 1 bytes @ 0x0
  1681                           
  1682  0070                     ?_Send_To_MB:	
  1683                           ; 1 bytes @ 0x0
  1684                           
  1685  0070                     ?_Send_Reply_OK:	
  1686                           ; 1 bytes @ 0x0
  1687                           
  1688  0070                     ?_EEPROM_Read_Byte:	
  1689                           ; 1 bytes @ 0x0
  1690                           
  1691  0070                     ?_Package_Usart_is_for_me:	
  1692                           ; 1 bytes @ 0x0
  1693                           
  1694  0070                     ?_I2C_Master_Wait:	
  1695                           ; 1 bytes @ 0x0
  1696                           
  1697  0070                     ?_main:	
  1698                           ; 1 bytes @ 0x0
  1699                           
  1700  0070                     ?_isr:	
  1701                           ; 1 bytes @ 0x0
  1702                           
  1703  0070                     ??_isr:	
  1704                           ; 1 bytes @ 0x0
  1705                           
  1706                           
  1707                           ; 1 bytes @ 0x0
  1708  0070                     	ds	6
  1709  0076                     isr@tempo:
  1710                           
  1711                           ; 2 bytes @ 0x6
  1712  0076                     	ds	2
  1713                           
  1714                           	psect	cstackBANK0
  1715  0020                     __pcstackBANK0:
  1716  0020                     ?___flge:
  1717  0020                     ?_my_delay_ms_WDT:	
  1718                           ; 1 bit 
  1719                           
  1720  0020                     ??_USART_putc:	
  1721                           ; 1 bytes @ 0x0
  1722                           
  1723  0020                     ??_ADC_init:	
  1724                           ; 1 bytes @ 0x0
  1725                           
  1726  0020                     ?_USART_init:	
  1727                           ; 1 bytes @ 0x0
  1728                           
  1729  0020                     ??_USART_to_Protocol:	
  1730                           ; 1 bytes @ 0x0
  1731                           
  1732  0020                     ?_strcpy:	
  1733                           ; 1 bytes @ 0x0
  1734                           
  1735  0020                     ?_EEPROM_Write_Byte:	
  1736                           ; 1 bytes @ 0x0
  1737                           
  1738  0020                     ??_EEPROM_Read_Byte:	
  1739                           ; 1 bytes @ 0x0
  1740                           
  1741  0020                     ?_my_delay_ms:	
  1742                           ; 1 bytes @ 0x0
  1743                           
  1744  0020                     ??_Package_Usart_is_for_me:	
  1745                           ; 1 bytes @ 0x0
  1746                           
  1747  0020                     ?_PROCULUS_Delay:	
  1748                           ; 1 bytes @ 0x0
  1749                           
  1750  0020                     ??_I2C_Master_Wait:	
  1751                           ; 1 bytes @ 0x0
  1752                           
  1753  0020                     ?_strlen:	
  1754                           ; 1 bytes @ 0x0
  1755                           
  1756  0020                     ?_captura:	
  1757                           ; 2 bytes @ 0x0
  1758                           
  1759  0020                     ?__Umul8_16:	
  1760                           ; 2 bytes @ 0x0
  1761                           
  1762  0020                     ?___lwdiv:	
  1763                           ; 2 bytes @ 0x0
  1764                           
  1765  0020                     ?___lldiv:	
  1766                           ; 2 bytes @ 0x0
  1767                           
  1768  0020                     ?___xxtofl:	
  1769                           ; 4 bytes @ 0x0
  1770                           
  1771  0020                     EEPROM_Write_Byte@dado:	
  1772                           ; 4 bytes @ 0x0
  1773                           
  1774  0020                     Package_Usart_is_for_me@retorno:	
  1775                           ; 1 bytes @ 0x0
  1776                           
  1777  0020                     USART_putc@value:	
  1778                           ; 1 bytes @ 0x0
  1779                           
  1780  0020                     __Umul8_16@multiplicand:	
  1781                           ; 1 bytes @ 0x0
  1782                           
  1783  0020                     strcpy@from:	
  1784                           ; 1 bytes @ 0x0
  1785                           
  1786  0020                     PROCULUS_Delay@tempo_ms:	
  1787                           ; 1 bytes @ 0x0
  1788                           
  1789  0020                     ___lwdiv@divisor:	
  1790                           ; 2 bytes @ 0x0
  1791                           
  1792  0020                     my_delay_ms@time:	
  1793                           ; 2 bytes @ 0x0
  1794                           
  1795  0020                     my_delay_ms_WDT@time:	
  1796                           ; 4 bytes @ 0x0
  1797                           
  1798  0020                     USART_init@baudrate:	
  1799                           ; 4 bytes @ 0x0
  1800                           
  1801  0020                     ___lldiv@divisor:	
  1802                           ; 4 bytes @ 0x0
  1803                           
  1804  0020                     ___flge@ff1:	
  1805                           ; 4 bytes @ 0x0
  1806                           
  1807  0020                     ___xxtofl@val:	
  1808                           ; 4 bytes @ 0x0
  1809                           
  1810                           
  1811                           ; 4 bytes @ 0x0
  1812  0020                     	ds	1
  1813  0021                     ??_strcpy:
  1814  0021                     ??_Send_To_MB:	
  1815                           ; 1 bytes @ 0x1
  1816                           
  1817  0021                     ?_USART_put_string:	
  1818                           ; 1 bytes @ 0x1
  1819                           
  1820  0021                     ??_EEPROM_Write_Byte:	
  1821                           ; 1 bytes @ 0x1
  1822                           
  1823  0021                     Send_To_MB@size:	
  1824                           ; 1 bytes @ 0x1
  1825                           
  1826  0021                     USART_put_string@vetor:	
  1827                           ; 1 bytes @ 0x1
  1828                           
  1829                           
  1830                           ; 2 bytes @ 0x1
  1831  0021                     	ds	1
  1832  0022                     ??_strlen:
  1833  0022                     ??_captura:	
  1834                           ; 1 bytes @ 0x2
  1835                           
  1836  0022                     ??_PROCULUS_Delay:	
  1837                           ; 1 bytes @ 0x2
  1838                           
  1839  0022                     ??__Umul8_16:	
  1840                           ; 1 bytes @ 0x2
  1841                           
  1842  0022                     I2C_Master_Wait@tempo:	
  1843                           ; 1 bytes @ 0x2
  1844                           
  1845  0022                     EEPROM_Read_Byte@addr:	
  1846                           ; 1 bytes @ 0x2
  1847                           
  1848  0022                     strcpy@to:	
  1849                           ; 1 bytes @ 0x2
  1850                           
  1851  0022                     USART_to_Protocol@i:	
  1852                           ; 1 bytes @ 0x2
  1853                           
  1854  0022                     ___lwdiv@dividend:	
  1855                           ; 2 bytes @ 0x2
  1856                           
  1857                           
  1858                           ; 2 bytes @ 0x2
  1859  0022                     	ds	1
  1860  0023                     ??_I2C_Master_Start:
  1861  0023                     ?_I2C_Master_Write:	
  1862                           ; 1 bytes @ 0x3
  1863                           
  1864  0023                     ??_I2C_Master_Stop:	
  1865                           ; 1 bytes @ 0x3
  1866                           
  1867  0023                     ??_I2C_Master_RepeatedStart:	
  1868                           ; 1 bytes @ 0x3
  1869                           
  1870  0023                     ??_USART_put_string:	
  1871                           ; 1 bytes @ 0x3
  1872                           
  1873  0023                     ?_EEPROM_Read_String:	
  1874                           ; 1 bytes @ 0x3
  1875                           
  1876  0023                     ?_I2C_Master_Read:	
  1877                           ; 1 bytes @ 0x3
  1878                           
  1879  0023                     ?_EEPROM_Read_Integer:	
  1880                           ; 2 bytes @ 0x3
  1881                           
  1882  0023                     EEPROM_Write_Byte@addr:	
  1883                           ; 2 bytes @ 0x3
  1884                           
  1885  0023                     EEPROM_Read_String@dado:	
  1886                           ; 1 bytes @ 0x3
  1887                           
  1888  0023                     strcpy@cp:	
  1889                           ; 1 bytes @ 0x3
  1890                           
  1891  0023                     strlen@cp:	
  1892                           ; 1 bytes @ 0x3
  1893                           
  1894  0023                     I2C_Master_Write@d:	
  1895                           ; 1 bytes @ 0x3
  1896                           
  1897  0023                     I2C_Master_Read@a:	
  1898                           ; 2 bytes @ 0x3
  1899                           
  1900  0023                     USART_put_string@ptr:	
  1901                           ; 2 bytes @ 0x3
  1902                           
  1903                           
  1904                           ; 2 bytes @ 0x3
  1905  0023                     	ds	1
  1906  0024                     ??_my_delay_ms_WDT:
  1907  0024                     ??_USART_init:	
  1908                           ; 1 bytes @ 0x4
  1909                           
  1910  0024                     ??_EEPROM_Read_String:	
  1911                           ; 1 bytes @ 0x4
  1912                           
  1913  0024                     ??_my_delay_ms:	
  1914                           ; 1 bytes @ 0x4
  1915                           
  1916  0024                     ??___lwdiv:	
  1917                           ; 1 bytes @ 0x4
  1918                           
  1919  0024                     ??___xxtofl:	
  1920                           ; 1 bytes @ 0x4
  1921                           
  1922  0024                     EEPROM_Write_Byte@last_GIE:	
  1923                           ; 1 bytes @ 0x4
  1924                           
  1925  0024                     USART_to_Protocol@usart_protocol:	
  1926                           ; 1 bytes @ 0x4
  1927                           
  1928  0024                     strlen@s:	
  1929                           ; 1 bytes @ 0x4
  1930                           
  1931  0024                     PROCULUS_Delay@i:	
  1932                           ; 1 bytes @ 0x4
  1933                           
  1934  0024                     __Umul8_16@product:	
  1935                           ; 2 bytes @ 0x4
  1936                           
  1937  0024                     ___lldiv@dividend:	
  1938                           ; 2 bytes @ 0x4
  1939                           
  1940  0024                     ___flge@ff2:	
  1941                           ; 4 bytes @ 0x4
  1942                           
  1943                           
  1944                           ; 4 bytes @ 0x4
  1945  0024                     	ds	1
  1946  0025                     ??_I2C_Master_Write:
  1947  0025                     ??_I2C_Master_Read:	
  1948                           ; 1 bytes @ 0x5
  1949                           
  1950  0025                     ??_EEPROM_Read_Integer:	
  1951                           ; 1 bytes @ 0x5
  1952                           
  1953  0025                     ?_EEPROM_Write_Integer:	
  1954                           ; 1 bytes @ 0x5
  1955                           
  1956  0025                     ??_Send_Reply_OK:	
  1957                           ; 1 bytes @ 0x5
  1958                           
  1959  0025                     ?_EEPROM_Write_String:	
  1960                           ; 1 bytes @ 0x5
  1961                           
  1962  0025                     EEPROM_Write_String@dado:	
  1963                           ; 1 bytes @ 0x5
  1964                           
  1965  0025                     EEPROM_Read_String@addr:	
  1966                           ; 1 bytes @ 0x5
  1967                           
  1968  0025                     USART_init@i:	
  1969                           ; 1 bytes @ 0x5
  1970                           
  1971  0025                     EEPROM_Write_Integer@dado:	
  1972                           ; 1 bytes @ 0x5
  1973                           
  1974  0025                     ___lwdiv@quotient:	
  1975                           ; 2 bytes @ 0x5
  1976                           
  1977                           
  1978                           ; 2 bytes @ 0x5
  1979  0025                     	ds	1
  1980  0026                     ??_EEPROM_Write_String:
  1981  0026                     EEPROM_Read_Integer@addr:	
  1982                           ; 1 bytes @ 0x6
  1983                           
  1984  0026                     EEPROM_Read_String@c:	
  1985                           ; 1 bytes @ 0x6
  1986                           
  1987  0026                     __Umul8_16@word_mpld:	
  1988                           ; 1 bytes @ 0x6
  1989                           
  1990  0026                     my_delay_ms@i:	
  1991                           ; 2 bytes @ 0x6
  1992                           
  1993  0026                     my_delay_ms_WDT@i:	
  1994                           ; 4 bytes @ 0x6
  1995                           
  1996                           
  1997                           ; 4 bytes @ 0x6
  1998  0026                     	ds	1
  1999  0027                     ??_EEPROM_Write_Integer:
  2000  0027                     EEPROM_Read_Integer@ptr:	
  2001                           ; 1 bytes @ 0x7
  2002                           
  2003  0027                     EEPROM_Write_String@addr:	
  2004                           ; 1 bytes @ 0x7
  2005                           
  2006  0027                     ___lwdiv@counter:	
  2007                           ; 1 bytes @ 0x7
  2008                           
  2009  0027                     I2C_Master_Read@temp:	
  2010                           ; 1 bytes @ 0x7
  2011                           
  2012                           
  2013                           ; 2 bytes @ 0x7
  2014  0027                     	ds	1
  2015  0028                     ??___lldiv:
  2016  0028                     ??___flge:	
  2017                           ; 1 bytes @ 0x8
  2018                           
  2019  0028                     __Umul8_16@multiplier:	
  2020                           ; 1 bytes @ 0x8
  2021                           
  2022  0028                     ___xxtofl@sign:	
  2023                           ; 1 bytes @ 0x8
  2024                           
  2025  0028                     EEPROM_Read_Integer@result:	
  2026                           ; 1 bytes @ 0x8
  2027                           
  2028                           
  2029                           ; 2 bytes @ 0x8
  2030  0028                     	ds	1
  2031  0029                     ?_EEPROM_24C1025_Read_Buffer_USART:
  2032  0029                     ?_EEPROM_24C1025_Read_Str:	
  2033                           ; 1 bytes @ 0x9
  2034                           
  2035  0029                     EEPROM_Write_Integer@ptr:	
  2036                           ; 1 bytes @ 0x9
  2037                           
  2038  0029                     ___xxtofl@exp:	
  2039                           ; 1 bytes @ 0x9
  2040                           
  2041  0029                     EEPROM_24C1025_Read_Buffer_USART@mem_add:	
  2042                           ; 1 bytes @ 0x9
  2043                           
  2044  0029                     EEPROM_24C1025_Read_Str@mem_add:	
  2045                           ; 4 bytes @ 0x9
  2046                           
  2047  0029                     ___lldiv@quotient:	
  2048                           ; 4 bytes @ 0x9
  2049                           
  2050                           
  2051                           ; 4 bytes @ 0x9
  2052  0029                     	ds	1
  2053  002A                     ?_EEPROM_24C1025_Write_Buffer:
  2054  002A                     ?_EEPROM_24C1025_Read_Buffer:	
  2055                           ; 1 bytes @ 0xA
  2056                           
  2057  002A                     ?_EEPROM_24C1025_Write_Str:	
  2058                           ; 1 bytes @ 0xA
  2059                           
  2060  002A                     EEPROM_Write_Integer@addr:	
  2061                           ; 1 bytes @ 0xA
  2062                           
  2063  002A                     EEPROM_Read_Integer@i:	
  2064                           ; 1 bytes @ 0xA
  2065                           
  2066  002A                     EEPROM_24C1025_Write_Buffer@mem_add:	
  2067                           ; 1 bytes @ 0xA
  2068                           
  2069  002A                     EEPROM_24C1025_Read_Buffer@mem_add:	
  2070                           ; 4 bytes @ 0xA
  2071                           
  2072  002A                     EEPROM_24C1025_Write_Str@mem_add:	
  2073                           ; 4 bytes @ 0xA
  2074                           
  2075  002A                     ___xxtofl@arg:	
  2076                           ; 4 bytes @ 0xA
  2077                           
  2078                           
  2079                           ; 4 bytes @ 0xA
  2080  002A                     	ds	1
  2081  002B                     EEPROM_Write_Integer@i:
  2082                           
  2083                           ; 1 bytes @ 0xB
  2084  002B                     	ds	2
  2085  002D                     EEPROM_24C1025_Read_Buffer_USART@sizedata:
  2086  002D                     EEPROM_24C1025_Read_Str@buffer:	
  2087                           ; 1 bytes @ 0xD
  2088                           
  2089  002D                     ___lldiv@counter:	
  2090                           ; 1 bytes @ 0xD
  2091                           
  2092                           
  2093                           ; 1 bytes @ 0xD
  2094  002D                     	ds	1
  2095  002E                     ??_EEPROM_24C1025_Read_Str:
  2096  002E                     ?_I2C_Master_Init:	
  2097                           ; 1 bytes @ 0xE
  2098                           
  2099  002E                     ?_ADC_Media_10bits:	
  2100                           ; 1 bytes @ 0xE
  2101                           
  2102  002E                     ?___fldiv:	
  2103                           ; 4 bytes @ 0xE
  2104                           
  2105  002E                     EEPROM_24C1025_Write_Buffer@sizedata:	
  2106                           ; 4 bytes @ 0xE
  2107                           
  2108  002E                     EEPROM_24C1025_Read_Buffer@sizedata:	
  2109                           ; 1 bytes @ 0xE
  2110                           
  2111  002E                     EEPROM_24C1025_Read_Buffer_USART@data:	
  2112                           ; 1 bytes @ 0xE
  2113                           
  2114  002E                     EEPROM_24C1025_Write_Str@data:	
  2115                           ; 1 bytes @ 0xE
  2116                           
  2117  002E                     I2C_Master_Init@c:	
  2118                           ; 1 bytes @ 0xE
  2119                           
  2120  002E                     ___fldiv@a:	
  2121                           ; 4 bytes @ 0xE
  2122                           
  2123                           
  2124                           ; 4 bytes @ 0xE
  2125  002E                     	ds	1
  2126  002F                     ??_EEPROM_24C1025_Read_Buffer_USART:
  2127  002F                     ??_EEPROM_24C1025_Write_Str:	
  2128                           ; 1 bytes @ 0xF
  2129                           
  2130  002F                     EEPROM_24C1025_Read_Buffer@data:	
  2131                           ; 1 bytes @ 0xF
  2132                           
  2133  002F                     EEPROM_24C1025_Write_Buffer@data:	
  2134                           ; 1 bytes @ 0xF
  2135                           
  2136                           
  2137                           ; 2 bytes @ 0xF
  2138  002F                     	ds	1
  2139  0030                     ??_EEPROM_24C1025_Read_Buffer:
  2140  0030                     EEPROM_24C1025_Read_Str@cnt:	
  2141                           ; 1 bytes @ 0x10
  2142                           
  2143                           
  2144                           ; 1 bytes @ 0x10
  2145  0030                     	ds	1
  2146  0031                     ??_EEPROM_24C1025_Write_Buffer:
  2147  0031                     EEPROM_24C1025_Read_Buffer_USART@cnt_117:	
  2148                           ; 1 bytes @ 0x11
  2149                           
  2150  0031                     EEPROM_24C1025_Write_Str@chip_add:	
  2151                           ; 1 bytes @ 0x11
  2152                           
  2153  0031                     EEPROM_24C1025_Read_Str@chip_add:	
  2154                           ; 1 bytes @ 0x11
  2155                           
  2156                           
  2157                           ; 1 bytes @ 0x11
  2158  0031                     	ds	1
  2159  0032                     ??_ADC_Media_10bits:
  2160  0032                     ??_I2C_Master_Init:	
  2161                           ; 1 bytes @ 0x12
  2162                           
  2163  0032                     EEPROM_24C1025_Read_Buffer@cnt_108:	
  2164                           ; 1 bytes @ 0x12
  2165                           
  2166  0032                     EEPROM_24C1025_Read_Buffer_USART@chip_add:	
  2167                           ; 1 bytes @ 0x12
  2168                           
  2169  0032                     EEPROM_24C1025_Write_Str@range:	
  2170                           ; 1 bytes @ 0x12
  2171                           
  2172  0032                     EEPROM_24C1025_Read_Str@range:	
  2173                           ; 1 bytes @ 0x12
  2174                           
  2175  0032                     ___fldiv@b:	
  2176                           ; 1 bytes @ 0x12
  2177                           
  2178                           
  2179                           ; 4 bytes @ 0x12
  2180  0032                     	ds	1
  2181  0033                     EEPROM_24C1025_Write_Buffer@count:
  2182  0033                     EEPROM_24C1025_Read_Buffer@chip_add:	
  2183                           ; 1 bytes @ 0x13
  2184                           
  2185  0033                     EEPROM_24C1025_Read_Buffer_USART@range:	
  2186                           ; 1 bytes @ 0x13
  2187                           
  2188  0033                     EEPROM_24C1025_Write_Str@ctrl:	
  2189                           ; 1 bytes @ 0x13
  2190                           
  2191  0033                     EEPROM_24C1025_Read_Str@ctrl:	
  2192                           ; 1 bytes @ 0x13
  2193                           
  2194  0033                     ADC_Media_10bits@canal:	
  2195                           ; 1 bytes @ 0x13
  2196                           
  2197                           
  2198                           ; 1 bytes @ 0x13
  2199  0033                     	ds	1
  2200  0034                     EEPROM_24C1025_Write_Buffer@chip_add:
  2201  0034                     EEPROM_24C1025_Read_Buffer@range:	
  2202                           ; 1 bytes @ 0x14
  2203                           
  2204  0034                     EEPROM_24C1025_Read_Buffer_USART@ctrl:	
  2205                           ; 1 bytes @ 0x14
  2206                           
  2207  0034                     ADC_Media_10bits@value:	
  2208                           ; 1 bytes @ 0x14
  2209                           
  2210                           
  2211                           ; 2 bytes @ 0x14
  2212  0034                     	ds	1
  2213  0035                     EEPROM_24C1025_Write_Buffer@range:
  2214  0035                     EEPROM_24C1025_Read_Buffer@ctrl:	
  2215                           ; 1 bytes @ 0x15
  2216                           
  2217                           
  2218                           ; 1 bytes @ 0x15
  2219  0035                     	ds	1
  2220  0036                     ?_EEPROM_24C1025_Read_Byte:
  2221  0036                     ??___fldiv:	
  2222                           ; 1 bytes @ 0x16
  2223                           
  2224  0036                     ?_EEPROM_24C1025_Read_Int:	
  2225                           ; 1 bytes @ 0x16
  2226                           
  2227  0036                     EEPROM_24C1025_Write_Buffer@ctrl:	
  2228                           ; 2 bytes @ 0x16
  2229                           
  2230  0036                     ADC_Media_10bits@i:	
  2231                           ; 1 bytes @ 0x16
  2232                           
  2233  0036                     EEPROM_24C1025_Read_Byte@mem_add:	
  2234                           ; 1 bytes @ 0x16
  2235                           
  2236  0036                     EEPROM_24C1025_Read_Int@mem_add:	
  2237                           ; 4 bytes @ 0x16
  2238                           
  2239                           
  2240                           ; 4 bytes @ 0x16
  2241  0036                     	ds	1
  2242  0037                     ?_EEPROM_24C1025_Write_Byte:
  2243  0037                     ?___fladd:	
  2244                           ; 1 bytes @ 0x17
  2245                           
  2246  0037                     EEPROM_24C1025_Write_Byte@mem_add:	
  2247                           ; 4 bytes @ 0x17
  2248                           
  2249  0037                     ___fladd@b:	
  2250                           ; 4 bytes @ 0x17
  2251                           
  2252                           
  2253                           ; 4 bytes @ 0x17
  2254  0037                     	ds	3
  2255  003A                     ??_EEPROM_24C1025_Read_Byte:
  2256  003A                     ??_EEPROM_24C1025_Read_Int:	
  2257                           ; 1 bytes @ 0x1A
  2258                           
  2259                           
  2260                           ; 1 bytes @ 0x1A
  2261  003A                     	ds	1
  2262  003B                     EEPROM_24C1025_Write_Byte@data:
  2263  003B                     EEPROM_24C1025_Read_Byte@chip_add:	
  2264                           ; 1 bytes @ 0x1B
  2265                           
  2266  003B                     ___fladd@a:	
  2267                           ; 1 bytes @ 0x1B
  2268                           
  2269  003B                     ___fldiv@rem:	
  2270                           ; 4 bytes @ 0x1B
  2271                           
  2272                           
  2273                           ; 4 bytes @ 0x1B
  2274  003B                     	ds	1
  2275  003C                     ??_EEPROM_24C1025_Write_Byte:
  2276  003C                     EEPROM_24C1025_Write_Byte@chip_add:	
  2277                           ; 1 bytes @ 0x1C
  2278                           
  2279  003C                     EEPROM_24C1025_Read_Byte@data:	
  2280                           ; 1 bytes @ 0x1C
  2281                           
  2282  003C                     EEPROM_24C1025_Read_Int@chip_add:	
  2283                           ; 1 bytes @ 0x1C
  2284                           
  2285                           
  2286                           ; 1 bytes @ 0x1C
  2287  003C                     	ds	1
  2288  003D                     EEPROM_24C1025_Read_Int@data:
  2289                           
  2290                           ; 2 bytes @ 0x1D
  2291  003D                     	ds	2
  2292  003F                     ??___fladd:
  2293  003F                     ___fldiv@sign:	
  2294                           ; 1 bytes @ 0x1F
  2295                           
  2296                           
  2297                           ; 1 bytes @ 0x1F
  2298  003F                     	ds	1
  2299  0040                     ___fldiv@new_exp:
  2300                           
  2301                           ; 2 bytes @ 0x20
  2302  0040                     	ds	2
  2303  0042                     ___fldiv@grs:
  2304                           
  2305                           ; 4 bytes @ 0x22
  2306  0042                     	ds	4
  2307  0046                     ___fldiv@bexp:
  2308                           
  2309                           ; 1 bytes @ 0x26
  2310  0046                     	ds	1
  2311  0047                     ___fladd@signs:
  2312  0047                     ___fldiv@aexp:	
  2313                           ; 1 bytes @ 0x27
  2314                           
  2315                           
  2316                           ; 1 bytes @ 0x27
  2317  0047                     	ds	1
  2318  0048                     ___fladd@aexp:
  2319                           
  2320                           ; 1 bytes @ 0x28
  2321  0048                     	ds	1
  2322  0049                     ___fladd@bexp:
  2323                           
  2324                           ; 1 bytes @ 0x29
  2325  0049                     	ds	1
  2326  004A                     ___fladd@grs:
  2327                           
  2328                           ; 1 bytes @ 0x2A
  2329  004A                     	ds	1
  2330  004B                     ?___flsub:
  2331  004B                     ?___flmul:	
  2332                           ; 4 bytes @ 0x2B
  2333                           
  2334  004B                     ___flsub@a:	
  2335                           ; 4 bytes @ 0x2B
  2336                           
  2337  004B                     ___flmul@b:	
  2338                           ; 4 bytes @ 0x2B
  2339                           
  2340                           
  2341                           ; 4 bytes @ 0x2B
  2342  004B                     	ds	4
  2343  004F                     ___flsub@b:
  2344  004F                     ___flmul@a:	
  2345                           ; 4 bytes @ 0x2F
  2346                           
  2347                           
  2348                           ; 4 bytes @ 0x2F
  2349  004F                     	ds	4
  2350  0053                     ??___flsub:
  2351  0053                     ??___flmul:	
  2352                           ; 1 bytes @ 0x33
  2353                           
  2354                           
  2355                           ; 1 bytes @ 0x33
  2356  0053                     	ds	5
  2357  0058                     ___flmul@sign:
  2358                           
  2359                           ; 1 bytes @ 0x38
  2360  0058                     	ds	1
  2361  0059                     ___flmul@aexp:
  2362                           
  2363                           ; 1 bytes @ 0x39
  2364  0059                     	ds	1
  2365  005A                     ___flmul@grs:
  2366                           
  2367                           ; 4 bytes @ 0x3A
  2368  005A                     	ds	4
  2369  005E                     ___flmul@bexp:
  2370                           
  2371                           ; 1 bytes @ 0x3E
  2372  005E                     	ds	1
  2373  005F                     ___flmul@prod:
  2374                           
  2375                           ; 4 bytes @ 0x3F
  2376  005F                     	ds	4
  2377  0063                     ___flmul@temp:
  2378                           
  2379                           ; 2 bytes @ 0x43
  2380  0063                     	ds	2
  2381  0065                     ??_MediaPlacaVaccum:
  2382  0065                     ?___fltol:	
  2383                           ; 1 bytes @ 0x45
  2384                           
  2385  0065                     ___fltol@f1:	
  2386                           ; 4 bytes @ 0x45
  2387                           
  2388                           
  2389                           ; 4 bytes @ 0x45
  2390  0065                     	ds	4
  2391  0069                     ??___fltol:
  2392                           
  2393                           ; 1 bytes @ 0x49
  2394  0069                     	ds	5
  2395  006E                     ___fltol@sign1:
  2396                           
  2397                           ; 1 bytes @ 0x4E
  2398  006E                     	ds	1
  2399  006F                     ___fltol@exp1:
  2400                           
  2401                           ; 1 bytes @ 0x4F
  2402  006F                     	ds	1
  2403  0070                     ??_Save_Log:
  2404  0070                     ??_EEPROM_24C1025_Fill_All:	
  2405                           ; 1 bytes @ 0x50
  2406                           
  2407                           
  2408                           	psect	maintext
  2409  086D                     __pmaintext:	
  2410                           ; 1 bytes @ 0x50
  2411 ;;
  2412 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2413 ;;
  2414 ;; *************** function _main *****************
  2415 ;; Defined at:
  2416 ;;		line 149 in file "SlaveLiofilizadorVer1.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;		None
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;  reset           2   39[BANK1 ] unsigned int 
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      void 
  2423 ;; Registers used:
  2424 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2425 ;; Tracked objects:
  2426 ;;		On entry : B00/0
  2427 ;;		On exit  : 300/100
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2430 ;;      Params:         0       0       0       0       0
  2431 ;;      Locals:         0       0       2       0       0
  2432 ;;      Temps:          0       0       3       0       0
  2433 ;;      Totals:         0       0       5       0       0
  2434 ;;Total ram usage:        5 bytes
  2435 ;; Hardware stack levels required when called: 7
  2436 ;; This function calls:
  2437 ;;		_ADC_init
  2438 ;;		_Decodify_Command
  2439 ;;		_EEPROM_Read_Integer
  2440 ;;		_EEPROM_Write_Integer
  2441 ;;		_I2C_Master_Init
  2442 ;;		_MediaPlacaVaccum
  2443 ;;		_USART_init
  2444 ;;		_my_delay_ms_WDT
  2445 ;; This function is called by:
  2446 ;;		Startup code after reset
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           
  2451                           ;psect for function _main
  2452  086D                     _main:
  2453                           
  2454                           ;SlaveLiofilizadorVer1.c: 150:      _delay((unsigned long)((100)*(8000000/4000.0)));
  2455                           
  2456                           ;incstack = 0
  2457                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2458  086D  3002               	movlw	2
  2459  086E  1683               	bsf	3,5	;RP0=1, select bank1
  2460  086F  1303               	bcf	3,6	;RP1=0, select bank1
  2461  0870  00C6               	movwf	(??_main^(0+128)+2)
  2462  0871  3004               	movlw	4
  2463  0872  00C5               	movwf	(??_main^(0+128)+1)
  2464  0873  30B9               	movlw	185
  2465  0874  00C4               	movwf	??_main^(0+128)
  2466  0875                     u5517:
  2467  0875  0BC4               	decfsz	??_main^(0+128),f
  2468  0876  2875               	goto	u5517
  2469  0877  0BC5               	decfsz	(??_main^(0+128)+1),f
  2470  0878  2875               	goto	u5517
  2471  0879  0BC6               	decfsz	(??_main^(0+128)+2),f
  2472  087A  2875               	goto	u5517
  2473  087B  287C               	nop2
  2474                           
  2475                           ;SlaveLiofilizadorVer1.c: 151:      OSCCONbits.IRCF0=1;
  2476  087C  1683               	bsf	3,5	;RP0=1, select bank1
  2477  087D  1303               	bcf	3,6	;RP1=0, select bank1
  2478  087E  160F               	bsf	15,4	;volatile
  2479                           
  2480                           ;SlaveLiofilizadorVer1.c: 152:      OSCCONbits.IRCF1=1;
  2481  087F  168F               	bsf	15,5	;volatile
  2482                           
  2483                           ;SlaveLiofilizadorVer1.c: 153:      OSCCONbits.IRCF2=1;
  2484  0880  170F               	bsf	15,6	;volatile
  2485                           
  2486                           ;SlaveLiofilizadorVer1.c: 155:      PORTA=0;
  2487  0881  1283               	bcf	3,5	;RP0=0, select bank0
  2488  0882  0185               	clrf	5	;volatile
  2489                           
  2490                           ;SlaveLiofilizadorVer1.c: 156:      PORTB=0;
  2491  0883  0186               	clrf	6	;volatile
  2492                           
  2493                           ;SlaveLiofilizadorVer1.c: 157:      PORTC=0;
  2494  0884  0187               	clrf	7	;volatile
  2495                           
  2496                           ;SlaveLiofilizadorVer1.c: 158:      PORTE=0;
  2497  0885  0189               	clrf	9	;volatile
  2498                           
  2499                           ;SlaveLiofilizadorVer1.c: 159:      TRISA=0b11101111;
  2500  0886  30EF               	movlw	239
  2501  0887  1683               	bsf	3,5	;RP0=1, select bank1
  2502  0888  0085               	movwf	5	;volatile
  2503                           
  2504                           ;SlaveLiofilizadorVer1.c: 160:      TRISB=0b00001111;
  2505  0889  300F               	movlw	15
  2506  088A  0086               	movwf	6	;volatile
  2507                           
  2508                           ;SlaveLiofilizadorVer1.c: 161:      TRISC=0xF0;
  2509  088B  30F0               	movlw	240
  2510  088C  0087               	movwf	7	;volatile
  2511                           
  2512                           ;SlaveLiofilizadorVer1.c: 162:      TRISE=0xFF;
  2513  088D  30FF               	movlw	255
  2514  088E  0089               	movwf	9	;volatile
  2515                           
  2516                           ;SlaveLiofilizadorVer1.c: 164:      ANSEL=0x00000011;
  2517  088F  3011               	movlw	17
  2518  0890  1703               	bsf	3,6	;RP1=1, select bank3
  2519  0891  0088               	movwf	8	;volatile
  2520                           
  2521                           ;SlaveLiofilizadorVer1.c: 165:      ANSELH=0x00000000;
  2522  0892  0189               	clrf	9	;volatile
  2523                           
  2524                           ;SlaveLiofilizadorVer1.c: 167:      OPTION_REGbits.nRBPU=0;
  2525  0893  1303               	bcf	3,6	;RP1=0, select bank1
  2526  0894  1381               	bcf	1,7	;volatile
  2527                           
  2528                           ;SlaveLiofilizadorVer1.c: 168:      WPUB=0b00001111;
  2529  0895  300F               	movlw	15
  2530  0896  0095               	movwf	21	;volatile
  2531                           
  2532                           ;SlaveLiofilizadorVer1.c: 171:      PORTBbits.RB7 =1;
  2533  0897  1283               	bcf	3,5	;RP0=0, select bank0
  2534  0898  1786               	bsf	6,7	;volatile
  2535                           
  2536                           ;SlaveLiofilizadorVer1.c: 172:      PORTBbits.RB6 =1;
  2537  0899  1706               	bsf	6,6	;volatile
  2538                           
  2539                           ;SlaveLiofilizadorVer1.c: 173:      PORTBbits.RB5=1;
  2540  089A  1686               	bsf	6,5	;volatile
  2541                           
  2542                           ;SlaveLiofilizadorVer1.c: 174:      generic_status.flag_usart_error=0;
  2543  089B  1683               	bsf	3,5	;RP0=1, select bank1
  2544  089C  10E4               	bcf	_generic_status^(0+128),1
  2545                           
  2546                           ;SlaveLiofilizadorVer1.c: 175:      my_delay_ms_WDT(1000);
  2547  089D  3000               	movlw	0
  2548  089E  1283               	bcf	3,5	;RP0=0, select bank0
  2549  089F  00A3               	movwf	my_delay_ms_WDT@time+3
  2550  08A0  3000               	movlw	0
  2551  08A1  00A2               	movwf	my_delay_ms_WDT@time+2
  2552  08A2  3003               	movlw	3
  2553  08A3  00A1               	movwf	my_delay_ms_WDT@time+1
  2554  08A4  30E8               	movlw	232
  2555  08A5  00A0               	movwf	my_delay_ms_WDT@time
  2556  08A6  160A  158A  2562  120A  158A  	fcall	_my_delay_ms_WDT
  2557                           
  2558                           ;SlaveLiofilizadorVer1.c: 177:      OPTION_REGbits.T0CS=0;
  2559  08AB  1683               	bsf	3,5	;RP0=1, select bank1
  2560  08AC  1281               	bcf	1,5	;volatile
  2561                           
  2562                           ;SlaveLiofilizadorVer1.c: 178:      OPTION_REGbits.PSA =1;
  2563  08AD  1581               	bsf	1,3	;volatile
  2564                           
  2565                           ;SlaveLiofilizadorVer1.c: 179:      OPTION_REGbits.PS0 =1;
  2566  08AE  1401               	bsf	1,0	;volatile
  2567                           
  2568                           ;SlaveLiofilizadorVer1.c: 180:      OPTION_REGbits.PS1 =1;
  2569  08AF  1481               	bsf	1,1	;volatile
  2570                           
  2571                           ;SlaveLiofilizadorVer1.c: 181:      OPTION_REGbits.PS2 =1;
  2572  08B0  1501               	bsf	1,2	;volatile
  2573                           
  2574                           ;SlaveLiofilizadorVer1.c: 182:      INTCONbits.T0IE =0;
  2575  08B1  128B               	bcf	11,5	;volatile
  2576                           
  2577                           ;SlaveLiofilizadorVer1.c: 183:      INTCONbits.INTE =0;
  2578  08B2  120B               	bcf	11,4	;volatile
  2579                           
  2580                           ;SlaveLiofilizadorVer1.c: 184:      INTCONbits.GIE =1;
  2581  08B3  178B               	bsf	11,7	;volatile
  2582                           
  2583                           ;SlaveLiofilizadorVer1.c: 187:      INTCONbits.PEIE = 1;
  2584  08B4  170B               	bsf	11,6	;volatile
  2585                           
  2586                           ;SlaveLiofilizadorVer1.c: 188:      T1CKPS0=1;
  2587  08B5  1283               	bcf	3,5	;RP0=0, select bank0
  2588  08B6  1610               	bsf	16,4	;volatile
  2589                           
  2590                           ;SlaveLiofilizadorVer1.c: 189:      T1CKPS1=1;
  2591  08B7  1690               	bsf	16,5	;volatile
  2592                           
  2593                           ;SlaveLiofilizadorVer1.c: 190:      TMR1CS=0;
  2594  08B8  1090               	bcf	16,1	;volatile
  2595                           
  2596                           ;SlaveLiofilizadorVer1.c: 191:      TMR1IE=1;
  2597  08B9  1683               	bsf	3,5	;RP0=1, select bank1
  2598  08BA  140C               	bsf	12,0	;volatile
  2599                           
  2600                           ;SlaveLiofilizadorVer1.c: 192:      T1CON=1;
  2601  08BB  3001               	movlw	1
  2602  08BC  1283               	bcf	3,5	;RP0=0, select bank0
  2603  08BD  0090               	movwf	16	;volatile
  2604  08BE  0064               	clrwdt	;# 
  2605                           
  2606                           ;SlaveLiofilizadorVer1.c: 199:      ADC_init();
  2607  08BF  160A  158A  2183  120A  158A  	fcall	_ADC_init
  2608                           
  2609                           ;SlaveLiofilizadorVer1.c: 200:      I2C_Master_Init(100000);
  2610  08C4  3000               	movlw	0
  2611  08C5  00B1               	movwf	I2C_Master_Init@c+3
  2612  08C6  3001               	movlw	1
  2613  08C7  00B0               	movwf	I2C_Master_Init@c+2
  2614  08C8  3086               	movlw	134
  2615  08C9  00AF               	movwf	I2C_Master_Init@c+1
  2616  08CA  30A0               	movlw	160
  2617  08CB  00AE               	movwf	I2C_Master_Init@c
  2618  08CC  160A  158A  242A  120A  158A  	fcall	_I2C_Master_Init
  2619                           
  2620                           ;SlaveLiofilizadorVer1.c: 201:      USART_init(115200);
  2621  08D1  3000               	movlw	0
  2622  08D2  1283               	bcf	3,5	;RP0=0, select bank0
  2623  08D3  00A3               	movwf	USART_init@baudrate+3
  2624  08D4  3001               	movlw	1
  2625  08D5  00A2               	movwf	USART_init@baudrate+2
  2626  08D6  30C2               	movlw	194
  2627  08D7  00A1               	movwf	USART_init@baudrate+1
  2628  08D8  3000               	movlw	0
  2629  08D9  00A0               	movwf	USART_init@baudrate
  2630  08DA  160A  158A  2652  120A  158A  	fcall	_USART_init
  2631                           
  2632                           ;SlaveLiofilizadorVer1.c: 207:      {;SlaveLiofilizadorVer1.c: 208:      unsigned int re
      +                          set;;SlaveLiofilizadorVer1.c: 209:      reset=EEPROM_Read_Integer(0x10);
  2633  08DF  3010               	movlw	16
  2634  08E0  160A  158A  23AB  120A  158A  	fcall	_EEPROM_Read_Integer
  2635  08E5  0824               	movf	?_EEPROM_Read_Integer+1,w
  2636  08E6  1683               	bsf	3,5	;RP0=1, select bank1
  2637  08E7  00C8               	movwf	(main@reset+1)^(0+128)
  2638  08E8  1283               	bcf	3,5	;RP0=0, select bank0
  2639  08E9  0823               	movf	?_EEPROM_Read_Integer,w
  2640  08EA  1683               	bsf	3,5	;RP0=1, select bank1
  2641  08EB  00C7               	movwf	main@reset^(0+128)
  2642                           
  2643                           ;SlaveLiofilizadorVer1.c: 210:      if(reset==0xFFFF) EEPROM_Write_Integer(0x10,0);
  2644  08EC  0A47               	incf	main@reset^(0+128),w
  2645  08ED  1D03               	skipz
  2646  08EE  28FC               	goto	l5927
  2647  08EF  0A48               	incf	(main@reset+1)^(0+128),w
  2648  08F0  1D03               	btfss	3,2
  2649  08F1  28FC               	goto	l5927
  2650  08F2  3000               	movlw	0
  2651  08F3  1283               	bcf	3,5	;RP0=0, select bank0
  2652  08F4  00A5               	movwf	EEPROM_Write_Integer@dado
  2653  08F5  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2654  08F6  3010               	movlw	16
  2655  08F7  160A  158A  245B  120A  158A  	fcall	_EEPROM_Write_Integer
  2656  08FC                     l5927:
  2657                           
  2658                           ;SlaveLiofilizadorVer1.c: 211:      reset++;
  2659  08FC  3001               	movlw	1
  2660  08FD  1683               	bsf	3,5	;RP0=1, select bank1
  2661  08FE  1303               	bcf	3,6	;RP1=0, select bank1
  2662  08FF  07C7               	addwf	main@reset^(0+128),f
  2663  0900  1803               	skipnc
  2664  0901  0AC8               	incf	(main@reset+1)^(0+128),f
  2665  0902  3000               	movlw	0
  2666  0903  07C8               	addwf	(main@reset+1)^(0+128),f
  2667                           
  2668                           ;SlaveLiofilizadorVer1.c: 212:      EEPROM_Write_Integer(0x10,reset);
  2669  0904  0848               	movf	(main@reset+1)^(0+128),w
  2670  0905  1283               	bcf	3,5	;RP0=0, select bank0
  2671  0906  00A6               	movwf	EEPROM_Write_Integer@dado+1
  2672  0907  1683               	bsf	3,5	;RP0=1, select bank1
  2673  0908  0847               	movf	main@reset^(0+128),w
  2674  0909  1283               	bcf	3,5	;RP0=0, select bank0
  2675  090A  00A5               	movwf	EEPROM_Write_Integer@dado
  2676  090B  3010               	movlw	16
  2677  090C  160A  158A  245B  120A  158A  	fcall	_EEPROM_Write_Integer
  2678                           
  2679                           ;SlaveLiofilizadorVer1.c: 213:      };SlaveLiofilizadorVer1.c: 217:      Delay_Led_Tmr0 
      +                          = 0;
  2680  0911  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  2681  0912  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  2682                           
  2683                           ;SlaveLiofilizadorVer1.c: 218:      Delay_Led_Usart = 0;
  2684  0913  1683               	bsf	3,5	;RP0=1, select bank1
  2685  0914  1303               	bcf	3,6	;RP1=0, select bank1
  2686  0915  01DB               	clrf	_Delay_Led_Usart^(0+128)	;volatile
  2687  0916  01DC               	clrf	(_Delay_Led_Usart+1)^(0+128)	;volatile
  2688                           
  2689                           ;SlaveLiofilizadorVer1.c: 219:      Delay_Led_Memory = 0;
  2690  0917  01DD               	clrf	_Delay_Led_Memory^(0+128)	;volatile
  2691  0918  01DE               	clrf	(_Delay_Led_Memory+1)^(0+128)	;volatile
  2692                           
  2693                           ;SlaveLiofilizadorVer1.c: 221:      segundo=0;
  2694  0919  01FD               	clrf	_segundo	;volatile
  2695                           
  2696                           ;SlaveLiofilizadorVer1.c: 222:      hora=0;
  2697  091A  01FC               	clrf	_hora	;volatile
  2698                           
  2699                           ;SlaveLiofilizadorVer1.c: 223:      PORTCbits.RC0=0;
  2700  091B  1283               	bcf	3,5	;RP0=0, select bank0
  2701  091C  1007               	bcf	7,0	;volatile
  2702                           
  2703                           ;SlaveLiofilizadorVer1.c: 224:      PORTCbits.RC1=0;
  2704  091D  1087               	bcf	7,1	;volatile
  2705                           
  2706                           ;SlaveLiofilizadorVer1.c: 225:      PORTAbits.RA2=0;
  2707  091E  1105               	bcf	5,2	;volatile
  2708                           
  2709                           ;SlaveLiofilizadorVer1.c: 226:      PORTAbits.RA3=0;
  2710  091F  1185               	bcf	5,3	;volatile
  2711                           
  2712                           ;SlaveLiofilizadorVer1.c: 229:      Board_Number=(((0x0F)&(~PORTB)));
  2713  0920  0906               	comf	6,w	;volatile
  2714  0921  390F               	andlw	15
  2715  0922  1683               	bsf	3,5	;RP0=1, select bank1
  2716  0923  00C4               	movwf	??_main^(0+128)
  2717  0924  0844               	movf	??_main^(0+128),w
  2718  0925  00E1               	movwf	_Board_Number^(0+128)
  2719                           
  2720                           ;SlaveLiofilizadorVer1.c: 230:      canal=1;
  2721  0926  01E2               	clrf	_canal^(0+128)
  2722  0927  0AE2               	incf	_canal^(0+128),f
  2723                           
  2724                           ;SlaveLiofilizadorVer1.c: 238:      statuspower.flag_global_vacuo=0;
  2725  0928  1163               	bcf	_statuspower^(0+128),2
  2726  0929                     l5953:
  2727                           
  2728                           ;SlaveLiofilizadorVer1.c: 252:           {;SlaveLiofilizadorVer1.c: 254:          generi
      +                          c_status.flag_main_loop_WDT=1;
  2729  0929  17E4               	bsf	_generic_status^(0+128),7
  2730                           
  2731                           ;SlaveLiofilizadorVer1.c: 283:          if(++canal==2) canal=0;
  2732  092A  3001               	movlw	1
  2733  092B  00C4               	movwf	??_main^(0+128)
  2734  092C  0844               	movf	??_main^(0+128),w
  2735  092D  07E2               	addwf	_canal^(0+128),f
  2736  092E  3002               	movlw	2
  2737  092F  0662               	xorwf	_canal^(0+128),w
  2738  0930  1903               	btfsc	3,2
  2739  0931  01E2               	clrf	_canal^(0+128)
  2740                           
  2741                           ;SlaveLiofilizadorVer1.c: 284:          MediaPlacaVaccum(canal);
  2742  0932  0862               	movf	_canal^(0+128),w
  2743  0933  120A  158A  2537  120A  158A  	fcall	_MediaPlacaVaccum
  2744                           
  2745                           ;SlaveLiofilizadorVer1.c: 292:          if(generic_status.flag_usart_rx==1)
  2746  0938  1683               	bsf	3,5	;RP0=1, select bank1
  2747  0939  1C64               	btfss	_generic_status^(0+128),0
  2748  093A  2929               	goto	l5953
  2749                           
  2750                           ;SlaveLiofilizadorVer1.c: 293:             {;SlaveLiofilizadorVer1.c: 294:             h
      +                          eader =(((unsigned int)usart_buffer[0]<<8)+usart_buffer[1]);
  2751  093B  1283               	bcf	3,5	;RP0=0, select bank2
  2752  093C  1703               	bsf	3,6	;RP1=1, select bank2
  2753  093D  0810               	movf	_usart_buffer^(0+256),w	;volatile
  2754  093E  1683               	bsf	3,5	;RP0=1, select bank1
  2755  093F  1303               	bcf	3,6	;RP1=0, select bank1
  2756  0940  00D8               	movwf	(_header+1)^(0+128)
  2757  0941  1283               	bcf	3,5	;RP0=0, select bank2
  2758  0942  1703               	bsf	3,6	;RP1=1, select bank2
  2759  0943  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  2760  0944  1683               	bsf	3,5	;RP0=1, select bank1
  2761  0945  1303               	bcf	3,6	;RP1=0, select bank1
  2762  0946  00D7               	movwf	_header^(0+128)
  2763                           
  2764                           ;SlaveLiofilizadorVer1.c: 295:             if(header==0xAABB)
  2765  0947  30BB               	movlw	187
  2766  0948  0657               	xorwf	_header^(0+128),w
  2767  0949  30AA               	movlw	170
  2768  094A  1903               	skipnz
  2769  094B  0658               	xorwf	(_header+1)^(0+128),w
  2770  094C  1D03               	btfss	3,2
  2771  094D  2929               	goto	l5953
  2772                           
  2773                           ;SlaveLiofilizadorVer1.c: 296:                {;SlaveLiofilizadorVer1.c: 297:           
      +                               destino =usart_buffer[3];
  2774  094E  1283               	bcf	3,5	;RP0=0, select bank2
  2775  094F  1703               	bsf	3,6	;RP1=1, select bank2
  2776  0950  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  2777  0951  1683               	bsf	3,5	;RP0=1, select bank1
  2778  0952  1303               	bcf	3,6	;RP1=0, select bank1
  2779  0953  00C4               	movwf	??_main^(0+128)
  2780  0954  0844               	movf	??_main^(0+128),w
  2781  0955  00E0               	movwf	_destino^(0+128)
  2782                           
  2783                           ;SlaveLiofilizadorVer1.c: 298:                if((destino==Board_Number)||(destino==0XFF
      +                          ))
  2784  0956  0860               	movf	_destino^(0+128),w
  2785  0957  0661               	xorwf	_Board_Number^(0+128),w
  2786  0958  1D03               	btfss	3,2
  2787  0959  0A60               	incf	_destino^(0+128),w
  2788  095A  1D03               	btfss	3,2
  2789  095B  2929               	goto	l5953
  2790                           
  2791                           ;SlaveLiofilizadorVer1.c: 299:                       {;SlaveLiofilizadorVer1.c: 300:    
      +                                             Delay_Led_Usart=20;
  2792  095C  3014               	movlw	20
  2793  095D  00DB               	movwf	_Delay_Led_Usart^(0+128)	;volatile
  2794  095E  3000               	movlw	0
  2795  095F  00DC               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
  2796                           
  2797                           ;SlaveLiofilizadorVer1.c: 301:                       Decodify_Command();
  2798  0960  120A  118A  2037  120A  158A  	fcall	_Decodify_Command
  2799                           
  2800                           ;SlaveLiofilizadorVer1.c: 302:                       generic_status.flag_usart_rx=0;
  2801  0965  1683               	bsf	3,5	;RP0=1, select bank1
  2802  0966  1303               	bcf	3,6	;RP1=0, select bank1
  2803  0967  1064               	bcf	_generic_status^(0+128),0
  2804                           
  2805                           ;SlaveLiofilizadorVer1.c: 305:             }
  2806  0968  2929               	goto	l5953
  2807  0969                     __end_of_main:
  2808                           
  2809                           	psect	text1
  2810  1E52                     __ptext1:	
  2811 ;; *************** function _USART_init *****************
  2812 ;; Defined at:
  2813 ;;		line 18 in file "usart.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  baudrate        4    0[BANK0 ] unsigned long 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  i               1    5[BANK0 ] unsigned char 
  2818 ;;  erro            1    0        unsigned char 
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      void 
  2821 ;; Registers used:
  2822 ;;		wreg, status,2, status,0
  2823 ;; Tracked objects:
  2824 ;;		On entry : 300/0
  2825 ;;		On exit  : 300/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2828 ;;      Params:         0       4       0       0       0
  2829 ;;      Locals:         0       1       0       0       0
  2830 ;;      Temps:          0       1       0       0       0
  2831 ;;      Totals:         0       6       0       0       0
  2832 ;;Total ram usage:        6 bytes
  2833 ;; Hardware stack levels used: 1
  2834 ;; Hardware stack levels required when called: 1
  2835 ;; This function calls:
  2836 ;;		Nothing
  2837 ;; This function is called by:
  2838 ;;		_main
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           
  2843                           ;psect for function _USART_init
  2844  1E52                     _USART_init:
  2845                           
  2846                           ;usart.c: 18: void USART_init(unsigned long baudrate);usart.c: 19:      {;usart.c: 20:  
      +                              unsigned char erro;;usart.c: 23:         if(baudrate==19200)
  2847                           
  2848                           ;incstack = 0
  2849                           ; Regs used in _USART_init: [wreg+status,2+status,0]
  2850  1E52  304B               	movlw	75
  2851  1E53  0621               	xorwf	USART_init@baudrate+1,w
  2852  1E54  0420               	iorwf	USART_init@baudrate,w
  2853  1E55  0422               	iorwf	USART_init@baudrate+2,w
  2854  1E56  0423               	iorwf	USART_init@baudrate+3,w
  2855  1E57  1D03               	btfss	3,2
  2856  1E58  2E65               	goto	l5027
  2857                           
  2858                           ;usart.c: 24:           {;usart.c: 26:           RCSTAbits.SPEN = 1;
  2859  1E59  1283               	bcf	3,5	;RP0=0, select bank0
  2860  1E5A  1303               	bcf	3,6	;RP1=0, select bank0
  2861  1E5B  1798               	bsf	24,7	;volatile
  2862                           
  2863                           ;usart.c: 27:           RCSTAbits.CREN = 1;
  2864  1E5C  1618               	bsf	24,4	;volatile
  2865                           
  2866                           ;usart.c: 29:           TXSTAbits.BRGH = 1;
  2867  1E5D  1683               	bsf	3,5	;RP0=1, select bank1
  2868  1E5E  1518               	bsf	24,2	;volatile
  2869                           
  2870                           ;usart.c: 30:           TXSTAbits.SYNC = 0;
  2871  1E5F  1218               	bcf	24,4	;volatile
  2872                           
  2873                           ;usart.c: 31:           TXSTAbits.TX9 = 0;
  2874  1E60  1318               	bcf	24,6	;volatile
  2875                           
  2876                           ;usart.c: 32:           SPBRG =12;
  2877  1E61  300C               	movlw	12
  2878  1E62  0099               	movwf	25	;volatile
  2879                           
  2880                           ;usart.c: 33:           INTCONbits.PEIE = 1;
  2881  1E63  170B               	bsf	11,6	;volatile
  2882  1E64  2E81               	goto	L1
  2883  1E65                     l5027:	
  2884                           ;usart.c: 35:           }
  2885                           
  2886                           ;usart.c: 34:           PIE1bits.RCIE = 1;
  2887                           
  2888  1E65  30C2               	movlw	194
  2889  1E66  1283               	bcf	3,5	;RP0=0, select bank0
  2890  1E67  1303               	bcf	3,6	;RP1=0, select bank0
  2891  1E68  0621               	xorwf	USART_init@baudrate+1,w
  2892  1E69  1D03               	skipz
  2893  1E6A  2E82               	goto	l5047
  2894  1E6B  0322               	decf	USART_init@baudrate+2,w
  2895  1E6C  0420               	iorwf	USART_init@baudrate,w
  2896  1E6D  0423               	iorwf	USART_init@baudrate+3,w
  2897  1E6E  1D03               	btfss	3,2
  2898  1E6F  2E82               	goto	l5047
  2899                           
  2900                           ;usart.c: 37:                 {;usart.c: 39:                 SPBRG =16;
  2901  1E70  3010               	movlw	16
  2902  1E71  1683               	bsf	3,5	;RP0=1, select bank1
  2903  1E72  1303               	bcf	3,6	;RP1=0, select bank1
  2904  1E73  0099               	movwf	25	;volatile
  2905                           
  2906                           ;usart.c: 40:                 BAUDCTLbits.BRG16 = 1;
  2907  1E74  1703               	bsf	3,6	;RP1=1, select bank3
  2908  1E75  1587               	bsf	7,3	;volatile
  2909                           
  2910                           ;usart.c: 41:                 TXSTAbits.BRGH = 1;
  2911  1E76  1303               	bcf	3,6	;RP1=0, select bank1
  2912  1E77  1518               	bsf	24,2	;volatile
  2913                           
  2914                           ;usart.c: 42:                 RCSTAbits.SPEN = 1;
  2915  1E78  1283               	bcf	3,5	;RP0=0, select bank0
  2916  1E79  1798               	bsf	24,7	;volatile
  2917                           
  2918                           ;usart.c: 43:                 TXSTAbits.SYNC = 0;
  2919  1E7A  1683               	bsf	3,5	;RP0=1, select bank1
  2920  1E7B  1218               	bcf	24,4	;volatile
  2921                           
  2922                           ;usart.c: 44:                 TXSTAbits.TX9 = 0;
  2923  1E7C  1318               	bcf	24,6	;volatile
  2924                           
  2925                           ;usart.c: 45:                 RCSTAbits.CREN = 1;
  2926  1E7D  1283               	bcf	3,5	;RP0=0, select bank0
  2927  1E7E  1618               	bsf	24,4	;volatile
  2928                           
  2929                           ;usart.c: 46:                 INTCONbits.PEIE = 1;
  2930  1E7F  170B               	bsf	11,6	;volatile
  2931                           
  2932                           ;usart.c: 47:                 PIE1bits.RCIE = 1;
  2933  1E80  1683               	bsf	3,5	;RP0=1, select bank1
  2934  1E81                     L1:
  2935  1E81  168C               	bsf	12,5	;volatile
  2936  1E82                     l5047:
  2937                           
  2938                           ;usart.c: 68:      TRISC6= 1;
  2939  1E82  1683               	bsf	3,5	;RP0=1, select bank1
  2940  1E83  1303               	bcf	3,6	;RP1=0, select bank1
  2941  1E84  1707               	bsf	7,6	;volatile
  2942                           
  2943                           ;usart.c: 69:      TRISC7= 1;
  2944  1E85  1787               	bsf	7,7	;volatile
  2945                           
  2946                           ;usart.c: 71:      CREN=0;
  2947  1E86  1283               	bcf	3,5	;RP0=0, select bank0
  2948  1E87  1218               	bcf	24,4	;volatile
  2949                           
  2950                           ;usart.c: 72:      CREN=1;
  2951  1E88  1618               	bsf	24,4	;volatile
  2952                           
  2953                           ;usart.c: 73:      for(unsigned char i=0;i<15;i++) erro=RCREG;
  2954  1E89  01A5               	clrf	USART_init@i
  2955  1E8A                     l5061:
  2956  1E8A  081A               	movf	26,w	;volatile
  2957  1E8B  3001               	movlw	1
  2958  1E8C  00A4               	movwf	??_USART_init
  2959  1E8D  0824               	movf	??_USART_init,w
  2960  1E8E  07A5               	addwf	USART_init@i,f
  2961  1E8F  300F               	movlw	15
  2962  1E90  0225               	subwf	USART_init@i,w
  2963  1E91  1803               	btfsc	3,0
  2964  1E92  0008               	return
  2965  1E93  2E8A               	goto	l5061
  2966  1E94                     __end_of_USART_init:
  2967                           
  2968                           	psect	text2
  2969  0D37                     __ptext2:	
  2970 ;; *************** function _MediaPlacaVaccum *****************
  2971 ;; Defined at:
  2972 ;;		line 752 in file "SlaveLiofilizadorVer1.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;  canal           1    wreg     unsigned char 
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;  canal           1    4[BANK1 ] unsigned char 
  2977 ;;  Temp            4    7[BANK1 ] float 
  2978 ;;  Valor           4    0        float 
  2979 ;;  i               2    5[BANK1 ] unsigned int 
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      void 
  2982 ;; Registers used:
  2983 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2984 ;; Tracked objects:
  2985 ;;		On entry : 300/100
  2986 ;;		On exit  : 200/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2989 ;;      Params:         0       0       0       0       0
  2990 ;;      Locals:         0       0      11       0       0
  2991 ;;      Temps:          0       1       0       0       0
  2992 ;;      Totals:         0       1      11       0       0
  2993 ;;Total ram usage:       12 bytes
  2994 ;; Hardware stack levels used: 1
  2995 ;; Hardware stack levels required when called: 3
  2996 ;; This function calls:
  2997 ;;		_ADC_Media_10bits
  2998 ;;		_Package_Usart_is_for_me
  2999 ;;		___fladd
  3000 ;;		___fldiv
  3001 ;;		___flge
  3002 ;;		___flmul
  3003 ;;		___flsub
  3004 ;;		___xxtofl
  3005 ;;		_my_delay_ms
  3006 ;; This function is called by:
  3007 ;;		_main
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           
  3012                           ;psect for function _MediaPlacaVaccum
  3013  0D37                     _MediaPlacaVaccum:
  3014                           
  3015                           ;incstack = 0
  3016                           ; Regs used in _MediaPlacaVaccum: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3017                           ;MediaPlacaVaccum@canal stored from wreg
  3018  0D37  00A4               	movwf	MediaPlacaVaccum@canal^(0+128)
  3019                           
  3020                           ;SlaveLiofilizadorVer1.c: 753:      float Temp,Valor;;SlaveLiofilizadorVer1.c: 754:     
      +                           unsigned int i;;SlaveLiofilizadorVer1.c: 758:      if(canal==0)
  3021  0D38  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3022  0D39  1D03               	btfss	3,2
  3023  0D3A  2EEB               	goto	l439
  3024                           
  3025                           ;SlaveLiofilizadorVer1.c: 759:        {;SlaveLiofilizadorVer1.c: 760:        ADCON1bits.
      +                          VCFG0=1;
  3026  0D3B  161F               	bsf	31,4	;volatile
  3027                           
  3028                           ;SlaveLiofilizadorVer1.c: 761:        ADCON1bits.VCFG1=1;
  3029  0D3C  169F               	bsf	31,5	;volatile
  3030                           
  3031                           ;SlaveLiofilizadorVer1.c: 762:        ADCON0bits.CHS=canal;
  3032  0D3D  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3033  0D3E  1283               	bcf	3,5	;RP0=0, select bank0
  3034  0D3F  00E5               	movwf	??_MediaPlacaVaccum
  3035  0D40  0DE5               	rlf	??_MediaPlacaVaccum,f
  3036  0D41  0DE5               	rlf	??_MediaPlacaVaccum,f
  3037  0D42  081F               	movf	31,w	;volatile
  3038  0D43  0665               	xorwf	??_MediaPlacaVaccum,w
  3039  0D44  39C3               	andlw	-61
  3040  0D45  0665               	xorwf	??_MediaPlacaVaccum,w
  3041  0D46  009F               	movwf	31	;volatile
  3042                           
  3043                           ;SlaveLiofilizadorVer1.c: 763:        my_delay_ms(1);
  3044  0D47  3000               	movlw	0
  3045  0D48  00A3               	movwf	my_delay_ms@time+3
  3046  0D49  3000               	movlw	0
  3047  0D4A  00A2               	movwf	my_delay_ms@time+2
  3048  0D4B  3000               	movlw	0
  3049  0D4C  00A1               	movwf	my_delay_ms@time+1
  3050  0D4D  3001               	movlw	1
  3051  0D4E  00A0               	movwf	my_delay_ms@time
  3052  0D4F  160A  158A  252B  120A  158A  	fcall	_my_delay_ms
  3053                           
  3054                           ;SlaveLiofilizadorVer1.c: 764:        Temp=0;
  3055  0D54  3000               	movlw	0
  3056  0D55  1683               	bsf	3,5	;RP0=1, select bank1
  3057  0D56  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3058  0D57  3000               	movlw	0
  3059  0D58  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3060  0D59  3000               	movlw	0
  3061  0D5A  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3062  0D5B  3000               	movlw	0
  3063  0D5C  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3064                           
  3065                           ;SlaveLiofilizadorVer1.c: 766:        for(i=1;i<15;i++)
  3066  0D5D  3001               	movlw	1
  3067  0D5E  00A5               	movwf	MediaPlacaVaccum@i^(0+128)
  3068  0D5F  3000               	movlw	0
  3069  0D60  00A6               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3070  0D61                     l5083:
  3071                           
  3072                           ;SlaveLiofilizadorVer1.c: 767:            {;SlaveLiofilizadorVer1.c: 768:            Tem
      +                          p+=ADC_Media_10bits(canal);
  3073  0D61  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3074  0D62  160A  158A  272D  120A  158A  	fcall	_ADC_Media_10bits
  3075  0D67  0831               	movf	?_ADC_Media_10bits+3,w
  3076  0D68  00BA               	movwf	___fladd@b+3
  3077  0D69  0830               	movf	?_ADC_Media_10bits+2,w
  3078  0D6A  00B9               	movwf	___fladd@b+2
  3079  0D6B  082F               	movf	?_ADC_Media_10bits+1,w
  3080  0D6C  00B8               	movwf	___fladd@b+1
  3081  0D6D  082E               	movf	?_ADC_Media_10bits,w
  3082  0D6E  00B7               	movwf	___fladd@b
  3083  0D6F  1683               	bsf	3,5	;RP0=1, select bank1
  3084  0D70  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3085  0D71  1283               	bcf	3,5	;RP0=0, select bank0
  3086  0D72  00BE               	movwf	___fladd@a+3
  3087  0D73  1683               	bsf	3,5	;RP0=1, select bank1
  3088  0D74  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3089  0D75  1283               	bcf	3,5	;RP0=0, select bank0
  3090  0D76  00BD               	movwf	___fladd@a+2
  3091  0D77  1683               	bsf	3,5	;RP0=1, select bank1
  3092  0D78  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3093  0D79  1283               	bcf	3,5	;RP0=0, select bank0
  3094  0D7A  00BC               	movwf	___fladd@a+1
  3095  0D7B  1683               	bsf	3,5	;RP0=1, select bank1
  3096  0D7C  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3097  0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  3098  0D7E  00BB               	movwf	___fladd@a
  3099  0D7F  120A  158A  230A  120A  158A  	fcall	___fladd
  3100  0D84  083A               	movf	?___fladd+3,w
  3101  0D85  1683               	bsf	3,5	;RP0=1, select bank1
  3102  0D86  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3103  0D87  1283               	bcf	3,5	;RP0=0, select bank0
  3104  0D88  0839               	movf	?___fladd+2,w
  3105  0D89  1683               	bsf	3,5	;RP0=1, select bank1
  3106  0D8A  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3107  0D8B  1283               	bcf	3,5	;RP0=0, select bank0
  3108  0D8C  0838               	movf	?___fladd+1,w
  3109  0D8D  1683               	bsf	3,5	;RP0=1, select bank1
  3110  0D8E  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3111  0D8F  1283               	bcf	3,5	;RP0=0, select bank0
  3112  0D90  0837               	movf	?___fladd,w
  3113  0D91  1683               	bsf	3,5	;RP0=1, select bank1
  3114  0D92  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3115                           
  3116                           ;SlaveLiofilizadorVer1.c: 769:            if(Package_Usart_is_for_me()==1) break;
  3117  0D93  160A  158A  223A  120A  158A  	fcall	_Package_Usart_is_for_me
  3118  0D98  3A01               	xorlw	1
  3119  0D99  1903               	btfsc	3,2
  3120  0D9A  2DA9               	goto	l5091
  3121                           
  3122                           ;SlaveLiofilizadorVer1.c: 770:            }
  3123  0D9B  3001               	movlw	1
  3124  0D9C  1683               	bsf	3,5	;RP0=1, select bank1
  3125  0D9D  07A5               	addwf	MediaPlacaVaccum@i^(0+128),f
  3126  0D9E  1803               	skipnc
  3127  0D9F  0AA6               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3128  0DA0  3000               	movlw	0
  3129  0DA1  07A6               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3130  0DA2  3000               	movlw	0
  3131  0DA3  0226               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3132  0DA4  300F               	movlw	15
  3133  0DA5  1903               	skipnz
  3134  0DA6  0225               	subwf	MediaPlacaVaccum@i^(0+128),w
  3135  0DA7  1C03               	skipc
  3136  0DA8  2D61               	goto	l5083
  3137  0DA9                     l5091:
  3138                           
  3139                           ;SlaveLiofilizadorVer1.c: 771:        if(i<10)
  3140  0DA9  3000               	movlw	0
  3141  0DAA  1683               	bsf	3,5	;RP0=1, select bank1
  3142  0DAB  0226               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3143  0DAC  300A               	movlw	10
  3144  0DAD  1903               	skipnz
  3145  0DAE  0225               	subwf	MediaPlacaVaccum@i^(0+128),w
  3146  0DAF  1C03               	btfss	3,0
  3147  0DB0  0008               	return
  3148                           
  3149                           ;SlaveLiofilizadorVer1.c: 777:        if(i==15)
  3150  0DB1  300F               	movlw	15
  3151  0DB2  0625               	xorwf	MediaPlacaVaccum@i^(0+128),w
  3152  0DB3  0426               	iorwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3153  0DB4  1D03               	btfss	3,2
  3154  0DB5  2DC0               	goto	l5099
  3155                           
  3156                           ;SlaveLiofilizadorVer1.c: 778:          Temp/=(i-1);
  3157  0DB6  0825               	movf	MediaPlacaVaccum@i^(0+128),w
  3158  0DB7  3EFF               	addlw	255
  3159  0DB8  1283               	bcf	3,5	;RP0=0, select bank0
  3160  0DB9  00A0               	movwf	___xxtofl@val
  3161  0DBA  1683               	bsf	3,5	;RP0=1, select bank1
  3162  0DBB  0826               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3163  0DBC  1803               	skipnc
  3164  0DBD  3E01               	addlw	1
  3165  0DBE  3EFF               	addlw	255
  3166  0DBF  2DC5               	goto	L2
  3167  0DC0                     l5099:
  3168                           
  3169                           ;SlaveLiofilizadorVer1.c: 780:          Temp/=(i);
  3170  0DC0  0825               	movf	MediaPlacaVaccum@i^(0+128),w
  3171  0DC1  1283               	bcf	3,5	;RP0=0, select bank0
  3172  0DC2  00A0               	movwf	___xxtofl@val
  3173  0DC3  1683               	bsf	3,5	;RP0=1, select bank1
  3174  0DC4  0826               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3175  0DC5                     L2:
  3176  0DC5  1283               	bcf	3,5	;RP0=0, select bank0
  3177  0DC6  00A1               	movwf	___xxtofl@val+1
  3178  0DC7  01A2               	clrf	___xxtofl@val+2
  3179  0DC8  01A3               	clrf	___xxtofl@val+3
  3180  0DC9  3000               	movlw	0
  3181  0DCA  160A  118A  2106  120A  158A  	fcall	___xxtofl
  3182  0DCF  0823               	movf	?___xxtofl+3,w
  3183  0DD0  00B1               	movwf	___fldiv@a+3
  3184  0DD1  0822               	movf	?___xxtofl+2,w
  3185  0DD2  00B0               	movwf	___fldiv@a+2
  3186  0DD3  0821               	movf	?___xxtofl+1,w
  3187  0DD4  00AF               	movwf	___fldiv@a+1
  3188  0DD5  0820               	movf	?___xxtofl,w
  3189  0DD6  00AE               	movwf	___fldiv@a
  3190  0DD7  1683               	bsf	3,5	;RP0=1, select bank1
  3191  0DD8  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3192  0DD9  1283               	bcf	3,5	;RP0=0, select bank0
  3193  0DDA  00B5               	movwf	___fldiv@b+3
  3194  0DDB  1683               	bsf	3,5	;RP0=1, select bank1
  3195  0DDC  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3196  0DDD  1283               	bcf	3,5	;RP0=0, select bank0
  3197  0DDE  00B4               	movwf	___fldiv@b+2
  3198  0DDF  1683               	bsf	3,5	;RP0=1, select bank1
  3199  0DE0  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3200  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  3201  0DE2  00B3               	movwf	___fldiv@b+1
  3202  0DE3  1683               	bsf	3,5	;RP0=1, select bank1
  3203  0DE4  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3204  0DE5  1283               	bcf	3,5	;RP0=0, select bank0
  3205  0DE6  00B2               	movwf	___fldiv@b
  3206  0DE7  120A  158A  2169  120A  158A  	fcall	___fldiv
  3207  0DEC  0831               	movf	?___fldiv+3,w
  3208  0DED  1683               	bsf	3,5	;RP0=1, select bank1
  3209  0DEE  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3210  0DEF  1283               	bcf	3,5	;RP0=0, select bank0
  3211  0DF0  0830               	movf	?___fldiv+2,w
  3212  0DF1  1683               	bsf	3,5	;RP0=1, select bank1
  3213  0DF2  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3214  0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  3215  0DF4  082F               	movf	?___fldiv+1,w
  3216  0DF5  1683               	bsf	3,5	;RP0=1, select bank1
  3217  0DF6  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3218  0DF7  1283               	bcf	3,5	;RP0=0, select bank0
  3219  0DF8  082E               	movf	?___fldiv,w
  3220  0DF9  1683               	bsf	3,5	;RP0=1, select bank1
  3221  0DFA  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3222                           
  3223                           ;SlaveLiofilizadorVer1.c: 782:        Temp=(1023.0-Temp);
  3224  0DFB  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3225  0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  3226  0DFD  00CE               	movwf	___flsub@a+3
  3227  0DFE  1683               	bsf	3,5	;RP0=1, select bank1
  3228  0DFF  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3229  0E00  1283               	bcf	3,5	;RP0=0, select bank0
  3230  0E01  00CD               	movwf	___flsub@a+2
  3231  0E02  1683               	bsf	3,5	;RP0=1, select bank1
  3232  0E03  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3233  0E04  1283               	bcf	3,5	;RP0=0, select bank0
  3234  0E05  00CC               	movwf	___flsub@a+1
  3235  0E06  1683               	bsf	3,5	;RP0=1, select bank1
  3236  0E07  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3237  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  3238  0E09  00CB               	movwf	___flsub@a
  3239  0E0A  3044               	movlw	68
  3240  0E0B  00D2               	movwf	___flsub@b+3
  3241  0E0C  307F               	movlw	127
  3242  0E0D  00D1               	movwf	___flsub@b+2
  3243  0E0E  30C0               	movlw	192
  3244  0E0F  00D0               	movwf	___flsub@b+1
  3245  0E10  3000               	movlw	0
  3246  0E11  00CF               	movwf	___flsub@b
  3247  0E12  160A  158A  228E  120A  158A  	fcall	___flsub
  3248  0E17  084E               	movf	?___flsub+3,w
  3249  0E18  1683               	bsf	3,5	;RP0=1, select bank1
  3250  0E19  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3251  0E1A  1283               	bcf	3,5	;RP0=0, select bank0
  3252  0E1B  084D               	movf	?___flsub+2,w
  3253  0E1C  1683               	bsf	3,5	;RP0=1, select bank1
  3254  0E1D  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3255  0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  3256  0E1F  084C               	movf	?___flsub+1,w
  3257  0E20  1683               	bsf	3,5	;RP0=1, select bank1
  3258  0E21  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3259  0E22  1283               	bcf	3,5	;RP0=0, select bank0
  3260  0E23  084B               	movf	?___flsub,w
  3261  0E24  1683               	bsf	3,5	;RP0=1, select bank1
  3262  0E25  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3263                           
  3264                           ;SlaveLiofilizadorVer1.c: 804:        if(Temp<700)
  3265  0E26  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3266  0E27  1283               	bcf	3,5	;RP0=0, select bank0
  3267  0E28  00A3               	movwf	___flge@ff1+3
  3268  0E29  1683               	bsf	3,5	;RP0=1, select bank1
  3269  0E2A  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3270  0E2B  1283               	bcf	3,5	;RP0=0, select bank0
  3271  0E2C  00A2               	movwf	___flge@ff1+2
  3272  0E2D  1683               	bsf	3,5	;RP0=1, select bank1
  3273  0E2E  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3274  0E2F  1283               	bcf	3,5	;RP0=0, select bank0
  3275  0E30  00A1               	movwf	___flge@ff1+1
  3276  0E31  1683               	bsf	3,5	;RP0=1, select bank1
  3277  0E32  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3278  0E33  1283               	bcf	3,5	;RP0=0, select bank0
  3279  0E34  00A0               	movwf	___flge@ff1
  3280  0E35  3044               	movlw	68
  3281  0E36  00A7               	movwf	___flge@ff2+3
  3282  0E37  302F               	movlw	47
  3283  0E38  00A6               	movwf	___flge@ff2+2
  3284  0E39  3000               	movlw	0
  3285  0E3A  00A5               	movwf	___flge@ff2+1
  3286  0E3B  3000               	movlw	0
  3287  0E3C  00A4               	movwf	___flge@ff2
  3288  0E3D  160A  118A  2073  120A  158A  	fcall	___flge
  3289  0E42  1803               	btfsc	3,0
  3290  0E43  2E4D               	goto	l5105
  3291                           
  3292                           ;SlaveLiofilizadorVer1.c: 805:          {;SlaveLiofilizadorVer1.c: 806:          Vaccum0
      +                          =Temp;
  3293  0E44  1683               	bsf	3,5	;RP0=1, select bank1
  3294  0E45  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3295  0E46  00D0               	movwf	(_Vaccum0+3)^(0+128)
  3296  0E47  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3297  0E48  00CF               	movwf	(_Vaccum0+2)^(0+128)
  3298  0E49  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3299  0E4A  00CE               	movwf	(_Vaccum0+1)^(0+128)
  3300  0E4B  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3301  0E4C  2EC0               	goto	L3
  3302  0E4D                     l5105:	
  3303                           ;SlaveLiofilizadorVer1.c: 807:          }
  3304                           
  3305                           
  3306                           ;SlaveLiofilizadorVer1.c: 809:          {;SlaveLiofilizadorVer1.c: 810:          Vaccum0
      +                          =Temp+((Temp-700)*3.05);
  3307  0E4D  3040               	movlw	64
  3308  0E4E  00CE               	movwf	___flmul@b+3
  3309  0E4F  3043               	movlw	67
  3310  0E50  00CD               	movwf	___flmul@b+2
  3311  0E51  3033               	movlw	51
  3312  0E52  00CC               	movwf	___flmul@b+1
  3313  0E53  3033               	movlw	51
  3314  0E54  00CB               	movwf	___flmul@b
  3315  0E55  30C4               	movlw	196
  3316  0E56  00BA               	movwf	___fladd@b+3
  3317  0E57  302F               	movlw	47
  3318  0E58  00B9               	movwf	___fladd@b+2
  3319  0E59  3000               	movlw	0
  3320  0E5A  00B8               	movwf	___fladd@b+1
  3321  0E5B  3000               	movlw	0
  3322  0E5C  00B7               	movwf	___fladd@b
  3323  0E5D  1683               	bsf	3,5	;RP0=1, select bank1
  3324  0E5E  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3325  0E5F  1283               	bcf	3,5	;RP0=0, select bank0
  3326  0E60  00BE               	movwf	___fladd@a+3
  3327  0E61  1683               	bsf	3,5	;RP0=1, select bank1
  3328  0E62  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3329  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  3330  0E64  00BD               	movwf	___fladd@a+2
  3331  0E65  1683               	bsf	3,5	;RP0=1, select bank1
  3332  0E66  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3333  0E67  1283               	bcf	3,5	;RP0=0, select bank0
  3334  0E68  00BC               	movwf	___fladd@a+1
  3335  0E69  1683               	bsf	3,5	;RP0=1, select bank1
  3336  0E6A  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3337  0E6B  1283               	bcf	3,5	;RP0=0, select bank0
  3338  0E6C  00BB               	movwf	___fladd@a
  3339  0E6D  120A  158A  230A  120A  158A  	fcall	___fladd
  3340  0E72  083A               	movf	?___fladd+3,w
  3341  0E73  00D2               	movwf	___flmul@a+3
  3342  0E74  0839               	movf	?___fladd+2,w
  3343  0E75  00D1               	movwf	___flmul@a+2
  3344  0E76  0838               	movf	?___fladd+1,w
  3345  0E77  00D0               	movwf	___flmul@a+1
  3346  0E78  0837               	movf	?___fladd,w
  3347  0E79  00CF               	movwf	___flmul@a
  3348  0E7A  120A  118A  2383  120A  158A  	fcall	___flmul
  3349  0E7F  084E               	movf	?___flmul+3,w
  3350  0E80  1683               	bsf	3,5	;RP0=1, select bank1
  3351  0E81  00A3               	movwf	(_MediaPlacaVaccum$2372+3)^(0+128)
  3352  0E82  1283               	bcf	3,5	;RP0=0, select bank0
  3353  0E83  084D               	movf	?___flmul+2,w
  3354  0E84  1683               	bsf	3,5	;RP0=1, select bank1
  3355  0E85  00A2               	movwf	(_MediaPlacaVaccum$2372+2)^(0+128)
  3356  0E86  1283               	bcf	3,5	;RP0=0, select bank0
  3357  0E87  084C               	movf	?___flmul+1,w
  3358  0E88  1683               	bsf	3,5	;RP0=1, select bank1
  3359  0E89  00A1               	movwf	(_MediaPlacaVaccum$2372+1)^(0+128)
  3360  0E8A  1283               	bcf	3,5	;RP0=0, select bank0
  3361  0E8B  084B               	movf	?___flmul,w
  3362  0E8C  1683               	bsf	3,5	;RP0=1, select bank1
  3363  0E8D  00A0               	movwf	_MediaPlacaVaccum$2372^(0+128)
  3364                           
  3365                           ;SlaveLiofilizadorVer1.c: 809:          {;SlaveLiofilizadorVer1.c: 810:          Vaccum0
      +                          =Temp+((Temp-700)*3.05);
  3366  0E8E  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3367  0E8F  1283               	bcf	3,5	;RP0=0, select bank0
  3368  0E90  00BA               	movwf	___fladd@b+3
  3369  0E91  1683               	bsf	3,5	;RP0=1, select bank1
  3370  0E92  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3371  0E93  1283               	bcf	3,5	;RP0=0, select bank0
  3372  0E94  00B9               	movwf	___fladd@b+2
  3373  0E95  1683               	bsf	3,5	;RP0=1, select bank1
  3374  0E96  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3375  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  3376  0E98  00B8               	movwf	___fladd@b+1
  3377  0E99  1683               	bsf	3,5	;RP0=1, select bank1
  3378  0E9A  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3379  0E9B  1283               	bcf	3,5	;RP0=0, select bank0
  3380  0E9C  00B7               	movwf	___fladd@b
  3381  0E9D  1683               	bsf	3,5	;RP0=1, select bank1
  3382  0E9E  0823               	movf	(_MediaPlacaVaccum$2372+3)^(0+128),w
  3383  0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  3384  0EA0  00BE               	movwf	___fladd@a+3
  3385  0EA1  1683               	bsf	3,5	;RP0=1, select bank1
  3386  0EA2  0822               	movf	(_MediaPlacaVaccum$2372+2)^(0+128),w
  3387  0EA3  1283               	bcf	3,5	;RP0=0, select bank0
  3388  0EA4  00BD               	movwf	___fladd@a+2
  3389  0EA5  1683               	bsf	3,5	;RP0=1, select bank1
  3390  0EA6  0821               	movf	(_MediaPlacaVaccum$2372+1)^(0+128),w
  3391  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  3392  0EA8  00BC               	movwf	___fladd@a+1
  3393  0EA9  1683               	bsf	3,5	;RP0=1, select bank1
  3394  0EAA  0820               	movf	_MediaPlacaVaccum$2372^(0+128),w
  3395  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  3396  0EAC  00BB               	movwf	___fladd@a
  3397  0EAD  120A  158A  230A  120A  158A  	fcall	___fladd
  3398  0EB2  083A               	movf	?___fladd+3,w
  3399  0EB3  1683               	bsf	3,5	;RP0=1, select bank1
  3400  0EB4  00D0               	movwf	(_Vaccum0+3)^(0+128)
  3401  0EB5  1283               	bcf	3,5	;RP0=0, select bank0
  3402  0EB6  0839               	movf	?___fladd+2,w
  3403  0EB7  1683               	bsf	3,5	;RP0=1, select bank1
  3404  0EB8  00CF               	movwf	(_Vaccum0+2)^(0+128)
  3405  0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  3406  0EBA  0838               	movf	?___fladd+1,w
  3407  0EBB  1683               	bsf	3,5	;RP0=1, select bank1
  3408  0EBC  00CE               	movwf	(_Vaccum0+1)^(0+128)
  3409  0EBD  1283               	bcf	3,5	;RP0=0, select bank0
  3410  0EBE  0837               	movf	?___fladd,w
  3411  0EBF  1683               	bsf	3,5	;RP0=1, select bank1
  3412  0EC0                     L3:
  3413  0EC0  00CD               	movwf	_Vaccum0^(0+128)
  3414                           
  3415                           ;SlaveLiofilizadorVer1.c: 813:        if(Vaccum0>2000) Vaccum0=2000;
  3416  0EC1  3044               	movlw	68
  3417  0EC2  1283               	bcf	3,5	;RP0=0, select bank0
  3418  0EC3  00A3               	movwf	___flge@ff1+3
  3419  0EC4  30FA               	movlw	250
  3420  0EC5  00A2               	movwf	___flge@ff1+2
  3421  0EC6  3000               	movlw	0
  3422  0EC7  00A1               	movwf	___flge@ff1+1
  3423  0EC8  3000               	movlw	0
  3424  0EC9  00A0               	movwf	___flge@ff1
  3425  0ECA  1683               	bsf	3,5	;RP0=1, select bank1
  3426  0ECB  0850               	movf	(_Vaccum0+3)^(0+128),w
  3427  0ECC  1283               	bcf	3,5	;RP0=0, select bank0
  3428  0ECD  00A7               	movwf	___flge@ff2+3
  3429  0ECE  1683               	bsf	3,5	;RP0=1, select bank1
  3430  0ECF  084F               	movf	(_Vaccum0+2)^(0+128),w
  3431  0ED0  1283               	bcf	3,5	;RP0=0, select bank0
  3432  0ED1  00A6               	movwf	___flge@ff2+2
  3433  0ED2  1683               	bsf	3,5	;RP0=1, select bank1
  3434  0ED3  084E               	movf	(_Vaccum0+1)^(0+128),w
  3435  0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  3436  0ED5  00A5               	movwf	___flge@ff2+1
  3437  0ED6  1683               	bsf	3,5	;RP0=1, select bank1
  3438  0ED7  084D               	movf	_Vaccum0^(0+128),w
  3439  0ED8  1283               	bcf	3,5	;RP0=0, select bank0
  3440  0ED9  00A4               	movwf	___flge@ff2
  3441  0EDA  160A  118A  2073  120A  158A  	fcall	___flge
  3442  0EDF  1803               	btfsc	3,0
  3443  0EE0  0008               	return
  3444  0EE1  3044               	movlw	68
  3445  0EE2  1683               	bsf	3,5	;RP0=1, select bank1
  3446  0EE3  00D0               	movwf	(_Vaccum0+3)^(0+128)
  3447  0EE4  30FA               	movlw	250
  3448  0EE5  00CF               	movwf	(_Vaccum0+2)^(0+128)
  3449  0EE6  3000               	movlw	0
  3450  0EE7  00CE               	movwf	(_Vaccum0+1)^(0+128)
  3451  0EE8  3000               	movlw	0
  3452  0EE9  00CD               	movwf	_Vaccum0^(0+128)
  3453  0EEA  0008               	return
  3454  0EEB                     l439:	
  3455                           ;SlaveLiofilizadorVer1.c: 819:      else
  3456                           
  3457                           
  3458                           ;SlaveLiofilizadorVer1.c: 820:        {;SlaveLiofilizadorVer1.c: 821:        ADCON1bits.
      +                          VCFG0=0;
  3459  0EEB  121F               	bcf	31,4	;volatile
  3460                           
  3461                           ;SlaveLiofilizadorVer1.c: 822:        ADCON1bits.VCFG1=0;
  3462  0EEC  129F               	bcf	31,5	;volatile
  3463                           
  3464                           ;SlaveLiofilizadorVer1.c: 823:        ADCON0bits.CHS=canal;
  3465  0EED  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3466  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  3467  0EEF  00E5               	movwf	??_MediaPlacaVaccum
  3468  0EF0  0DE5               	rlf	??_MediaPlacaVaccum,f
  3469  0EF1  0DE5               	rlf	??_MediaPlacaVaccum,f
  3470  0EF2  081F               	movf	31,w	;volatile
  3471  0EF3  0665               	xorwf	??_MediaPlacaVaccum,w
  3472  0EF4  39C3               	andlw	-61
  3473  0EF5  0665               	xorwf	??_MediaPlacaVaccum,w
  3474  0EF6  009F               	movwf	31	;volatile
  3475                           
  3476                           ;SlaveLiofilizadorVer1.c: 824:        my_delay_ms(1);
  3477  0EF7  3000               	movlw	0
  3478  0EF8  00A3               	movwf	my_delay_ms@time+3
  3479  0EF9  3000               	movlw	0
  3480  0EFA  00A2               	movwf	my_delay_ms@time+2
  3481  0EFB  3000               	movlw	0
  3482  0EFC  00A1               	movwf	my_delay_ms@time+1
  3483  0EFD  3001               	movlw	1
  3484  0EFE  00A0               	movwf	my_delay_ms@time
  3485  0EFF  160A  158A  252B  120A  158A  	fcall	_my_delay_ms
  3486                           
  3487                           ;SlaveLiofilizadorVer1.c: 825:        Temp=0;
  3488  0F04  3000               	movlw	0
  3489  0F05  1683               	bsf	3,5	;RP0=1, select bank1
  3490  0F06  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3491  0F07  3000               	movlw	0
  3492  0F08  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3493  0F09  3000               	movlw	0
  3494  0F0A  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3495  0F0B  3000               	movlw	0
  3496  0F0C  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3497                           
  3498                           ;SlaveLiofilizadorVer1.c: 827:        for(i=1;i<15;i++)
  3499  0F0D  3001               	movlw	1
  3500  0F0E  00A5               	movwf	MediaPlacaVaccum@i^(0+128)
  3501  0F0F  3000               	movlw	0
  3502  0F10  00A6               	movwf	(MediaPlacaVaccum@i^(0+128)+1)
  3503  0F11                     l5123:
  3504                           
  3505                           ;SlaveLiofilizadorVer1.c: 828:            {;SlaveLiofilizadorVer1.c: 831:            Tem
      +                          p+=ADC_Media_10bits(canal);
  3506  0F11  0824               	movf	MediaPlacaVaccum@canal^(0+128),w
  3507  0F12  160A  158A  272D  120A  158A  	fcall	_ADC_Media_10bits
  3508  0F17  0831               	movf	?_ADC_Media_10bits+3,w
  3509  0F18  00BA               	movwf	___fladd@b+3
  3510  0F19  0830               	movf	?_ADC_Media_10bits+2,w
  3511  0F1A  00B9               	movwf	___fladd@b+2
  3512  0F1B  082F               	movf	?_ADC_Media_10bits+1,w
  3513  0F1C  00B8               	movwf	___fladd@b+1
  3514  0F1D  082E               	movf	?_ADC_Media_10bits,w
  3515  0F1E  00B7               	movwf	___fladd@b
  3516  0F1F  1683               	bsf	3,5	;RP0=1, select bank1
  3517  0F20  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3518  0F21  1283               	bcf	3,5	;RP0=0, select bank0
  3519  0F22  00BE               	movwf	___fladd@a+3
  3520  0F23  1683               	bsf	3,5	;RP0=1, select bank1
  3521  0F24  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3522  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  3523  0F26  00BD               	movwf	___fladd@a+2
  3524  0F27  1683               	bsf	3,5	;RP0=1, select bank1
  3525  0F28  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3526  0F29  1283               	bcf	3,5	;RP0=0, select bank0
  3527  0F2A  00BC               	movwf	___fladd@a+1
  3528  0F2B  1683               	bsf	3,5	;RP0=1, select bank1
  3529  0F2C  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3530  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  3531  0F2E  00BB               	movwf	___fladd@a
  3532  0F2F  120A  158A  230A  120A  158A  	fcall	___fladd
  3533  0F34  083A               	movf	?___fladd+3,w
  3534  0F35  1683               	bsf	3,5	;RP0=1, select bank1
  3535  0F36  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3536  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  3537  0F38  0839               	movf	?___fladd+2,w
  3538  0F39  1683               	bsf	3,5	;RP0=1, select bank1
  3539  0F3A  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3540  0F3B  1283               	bcf	3,5	;RP0=0, select bank0
  3541  0F3C  0838               	movf	?___fladd+1,w
  3542  0F3D  1683               	bsf	3,5	;RP0=1, select bank1
  3543  0F3E  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3544  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  3545  0F40  0837               	movf	?___fladd,w
  3546  0F41  1683               	bsf	3,5	;RP0=1, select bank1
  3547  0F42  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3548                           
  3549                           ;SlaveLiofilizadorVer1.c: 832:            if(Package_Usart_is_for_me()==1) break;
  3550  0F43  160A  158A  223A  120A  158A  	fcall	_Package_Usart_is_for_me
  3551  0F48  3A01               	xorlw	1
  3552  0F49  1903               	btfsc	3,2
  3553  0F4A  2F59               	goto	l5131
  3554                           
  3555                           ;SlaveLiofilizadorVer1.c: 833:            }
  3556  0F4B  3001               	movlw	1
  3557  0F4C  1683               	bsf	3,5	;RP0=1, select bank1
  3558  0F4D  07A5               	addwf	MediaPlacaVaccum@i^(0+128),f
  3559  0F4E  1803               	skipnc
  3560  0F4F  0AA6               	incf	(MediaPlacaVaccum@i+1)^(0+128),f
  3561  0F50  3000               	movlw	0
  3562  0F51  07A6               	addwf	(MediaPlacaVaccum@i+1)^(0+128),f
  3563  0F52  3000               	movlw	0
  3564  0F53  0226               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3565  0F54  300F               	movlw	15
  3566  0F55  1903               	skipnz
  3567  0F56  0225               	subwf	MediaPlacaVaccum@i^(0+128),w
  3568  0F57  1C03               	skipc
  3569  0F58  2F11               	goto	l5123
  3570  0F59                     l5131:
  3571                           
  3572                           ;SlaveLiofilizadorVer1.c: 834:         if(i<10)
  3573  0F59  3000               	movlw	0
  3574  0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  3575  0F5B  0226               	subwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3576  0F5C  300A               	movlw	10
  3577  0F5D  1903               	skipnz
  3578  0F5E  0225               	subwf	MediaPlacaVaccum@i^(0+128),w
  3579  0F5F  1C03               	btfss	3,0
  3580  0F60  0008               	return
  3581                           
  3582                           ;SlaveLiofilizadorVer1.c: 840:        if(i==15)
  3583  0F61  300F               	movlw	15
  3584  0F62  0625               	xorwf	MediaPlacaVaccum@i^(0+128),w
  3585  0F63  0426               	iorwf	(MediaPlacaVaccum@i+1)^(0+128),w
  3586  0F64  1D03               	btfss	3,2
  3587  0F65  2F70               	goto	l5139
  3588                           
  3589                           ;SlaveLiofilizadorVer1.c: 841:          Temp/=(i-1);
  3590  0F66  0825               	movf	MediaPlacaVaccum@i^(0+128),w
  3591  0F67  3EFF               	addlw	255
  3592  0F68  1283               	bcf	3,5	;RP0=0, select bank0
  3593  0F69  00A0               	movwf	___xxtofl@val
  3594  0F6A  1683               	bsf	3,5	;RP0=1, select bank1
  3595  0F6B  0826               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3596  0F6C  1803               	skipnc
  3597  0F6D  3E01               	addlw	1
  3598  0F6E  3EFF               	addlw	255
  3599  0F6F  2F75               	goto	L4
  3600  0F70                     l5139:
  3601                           
  3602                           ;SlaveLiofilizadorVer1.c: 843:          Temp/=(i);
  3603  0F70  0825               	movf	MediaPlacaVaccum@i^(0+128),w
  3604  0F71  1283               	bcf	3,5	;RP0=0, select bank0
  3605  0F72  00A0               	movwf	___xxtofl@val
  3606  0F73  1683               	bsf	3,5	;RP0=1, select bank1
  3607  0F74  0826               	movf	(MediaPlacaVaccum@i+1)^(0+128),w
  3608  0F75                     L4:
  3609  0F75  1283               	bcf	3,5	;RP0=0, select bank0
  3610  0F76  00A1               	movwf	___xxtofl@val+1
  3611  0F77  01A2               	clrf	___xxtofl@val+2
  3612  0F78  01A3               	clrf	___xxtofl@val+3
  3613  0F79  3000               	movlw	0
  3614  0F7A  160A  118A  2106  120A  158A  	fcall	___xxtofl
  3615  0F7F  0823               	movf	?___xxtofl+3,w
  3616  0F80  00B1               	movwf	___fldiv@a+3
  3617  0F81  0822               	movf	?___xxtofl+2,w
  3618  0F82  00B0               	movwf	___fldiv@a+2
  3619  0F83  0821               	movf	?___xxtofl+1,w
  3620  0F84  00AF               	movwf	___fldiv@a+1
  3621  0F85  0820               	movf	?___xxtofl,w
  3622  0F86  00AE               	movwf	___fldiv@a
  3623  0F87  1683               	bsf	3,5	;RP0=1, select bank1
  3624  0F88  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3625  0F89  1283               	bcf	3,5	;RP0=0, select bank0
  3626  0F8A  00B5               	movwf	___fldiv@b+3
  3627  0F8B  1683               	bsf	3,5	;RP0=1, select bank1
  3628  0F8C  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3629  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  3630  0F8E  00B4               	movwf	___fldiv@b+2
  3631  0F8F  1683               	bsf	3,5	;RP0=1, select bank1
  3632  0F90  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3633  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  3634  0F92  00B3               	movwf	___fldiv@b+1
  3635  0F93  1683               	bsf	3,5	;RP0=1, select bank1
  3636  0F94  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3637  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3638  0F96  00B2               	movwf	___fldiv@b
  3639  0F97  120A  158A  2169  120A  158A  	fcall	___fldiv
  3640  0F9C  0831               	movf	?___fldiv+3,w
  3641  0F9D  1683               	bsf	3,5	;RP0=1, select bank1
  3642  0F9E  00AA               	movwf	(MediaPlacaVaccum@Temp+3)^(0+128)
  3643  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  3644  0FA0  0830               	movf	?___fldiv+2,w
  3645  0FA1  1683               	bsf	3,5	;RP0=1, select bank1
  3646  0FA2  00A9               	movwf	(MediaPlacaVaccum@Temp+2)^(0+128)
  3647  0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  3648  0FA4  082F               	movf	?___fldiv+1,w
  3649  0FA5  1683               	bsf	3,5	;RP0=1, select bank1
  3650  0FA6  00A8               	movwf	(MediaPlacaVaccum@Temp+1)^(0+128)
  3651  0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  3652  0FA8  082E               	movf	?___fldiv,w
  3653  0FA9  1683               	bsf	3,5	;RP0=1, select bank1
  3654  0FAA  00A7               	movwf	MediaPlacaVaccum@Temp^(0+128)
  3655                           
  3656                           ;SlaveLiofilizadorVer1.c: 845:         Tensao1 =Temp*0.558296;
  3657  0FAB  303F               	movlw	63
  3658  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  3659  0FAD  00CE               	movwf	___flmul@b+3
  3660  0FAE  300E               	movlw	14
  3661  0FAF  00CD               	movwf	___flmul@b+2
  3662  0FB0  30EC               	movlw	236
  3663  0FB1  00CC               	movwf	___flmul@b+1
  3664  0FB2  307D               	movlw	125
  3665  0FB3  00CB               	movwf	___flmul@b
  3666  0FB4  1683               	bsf	3,5	;RP0=1, select bank1
  3667  0FB5  082A               	movf	(MediaPlacaVaccum@Temp+3)^(0+128),w
  3668  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  3669  0FB7  00D2               	movwf	___flmul@a+3
  3670  0FB8  1683               	bsf	3,5	;RP0=1, select bank1
  3671  0FB9  0829               	movf	(MediaPlacaVaccum@Temp+2)^(0+128),w
  3672  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  3673  0FBB  00D1               	movwf	___flmul@a+2
  3674  0FBC  1683               	bsf	3,5	;RP0=1, select bank1
  3675  0FBD  0828               	movf	(MediaPlacaVaccum@Temp+1)^(0+128),w
  3676  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  3677  0FBF  00D0               	movwf	___flmul@a+1
  3678  0FC0  1683               	bsf	3,5	;RP0=1, select bank1
  3679  0FC1  0827               	movf	MediaPlacaVaccum@Temp^(0+128),w
  3680  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  3681  0FC3  00CF               	movwf	___flmul@a
  3682  0FC4  120A  118A  2383  120A  158A  	fcall	___flmul
  3683  0FC9  084E               	movf	?___flmul+3,w
  3684  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  3685  0FCB  00CC               	movwf	(_Tensao1+3)^(0+128)
  3686  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  3687  0FCD  084D               	movf	?___flmul+2,w
  3688  0FCE  1683               	bsf	3,5	;RP0=1, select bank1
  3689  0FCF  00CB               	movwf	(_Tensao1+2)^(0+128)
  3690  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  3691  0FD1  084C               	movf	?___flmul+1,w
  3692  0FD2  1683               	bsf	3,5	;RP0=1, select bank1
  3693  0FD3  00CA               	movwf	(_Tensao1+1)^(0+128)
  3694  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  3695  0FD5  084B               	movf	?___flmul,w
  3696  0FD6  1683               	bsf	3,5	;RP0=1, select bank1
  3697  0FD7  00C9               	movwf	_Tensao1^(0+128)
  3698                           
  3699                           ;SlaveLiofilizadorVer1.c: 846:         if(Tensao1<15) Tensao1=0;
  3700  0FD8  084C               	movf	(_Tensao1+3)^(0+128),w
  3701  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  3702  0FDA  00A3               	movwf	___flge@ff1+3
  3703  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  3704  0FDC  084B               	movf	(_Tensao1+2)^(0+128),w
  3705  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  3706  0FDE  00A2               	movwf	___flge@ff1+2
  3707  0FDF  1683               	bsf	3,5	;RP0=1, select bank1
  3708  0FE0  084A               	movf	(_Tensao1+1)^(0+128),w
  3709  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  3710  0FE2  00A1               	movwf	___flge@ff1+1
  3711  0FE3  1683               	bsf	3,5	;RP0=1, select bank1
  3712  0FE4  0849               	movf	_Tensao1^(0+128),w
  3713  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  3714  0FE6  00A0               	movwf	___flge@ff1
  3715  0FE7  3041               	movlw	65
  3716  0FE8  00A7               	movwf	___flge@ff2+3
  3717  0FE9  3070               	movlw	112
  3718  0FEA  00A6               	movwf	___flge@ff2+2
  3719  0FEB  3000               	movlw	0
  3720  0FEC  00A5               	movwf	___flge@ff2+1
  3721  0FED  3000               	movlw	0
  3722  0FEE  00A4               	movwf	___flge@ff2
  3723  0FEF  160A  118A  2073  120A  158A  	fcall	___flge
  3724  0FF4  1803               	btfsc	3,0
  3725  0FF5  0008               	return
  3726  0FF6  3000               	movlw	0
  3727  0FF7  1683               	bsf	3,5	;RP0=1, select bank1
  3728  0FF8  00CC               	movwf	(_Tensao1+3)^(0+128)
  3729  0FF9  3000               	movlw	0
  3730  0FFA  00CB               	movwf	(_Tensao1+2)^(0+128)
  3731  0FFB  3000               	movlw	0
  3732  0FFC  00CA               	movwf	(_Tensao1+1)^(0+128)
  3733  0FFD  3000               	movlw	0
  3734  0FFE  00C9               	movwf	_Tensao1^(0+128)
  3735  0FFF  0008               	return
  3736  1000                     __end_of_MediaPlacaVaccum:
  3737                           
  3738                           	psect	text3
  3739  1A8E                     __ptext3:	
  3740 ;; *************** function ___flsub *****************
  3741 ;; Defined at:
  3742 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;  a               4   43[BANK0 ] void 
  3745 ;;  b               4   47[BANK0 ] void 
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;		None
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  4   43[BANK0 ] void 
  3750 ;; Registers used:
  3751 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3752 ;; Tracked objects:
  3753 ;;		On entry : 300/0
  3754 ;;		On exit  : 300/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3757 ;;      Params:         0       8       0       0       0
  3758 ;;      Locals:         0       0       0       0       0
  3759 ;;      Temps:          0       0       0       0       0
  3760 ;;      Totals:         0       8       0       0       0
  3761 ;;Total ram usage:        8 bytes
  3762 ;; Hardware stack levels used: 1
  3763 ;; Hardware stack levels required when called: 2
  3764 ;; This function calls:
  3765 ;;		___fladd
  3766 ;; This function is called by:
  3767 ;;		_MediaPlacaVaccum
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771                           
  3772                           ;psect for function ___flsub
  3773  1A8E                     ___flsub:
  3774                           
  3775                           ;incstack = 0
  3776                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3777  1A8E  3080               	movlw	128
  3778  1A8F  06CE               	xorwf	___flsub@a+3,f
  3779  1A90  0852               	movf	___flsub@b+3,w
  3780  1A91  00BA               	movwf	___fladd@b+3
  3781  1A92  0851               	movf	___flsub@b+2,w
  3782  1A93  00B9               	movwf	___fladd@b+2
  3783  1A94  0850               	movf	___flsub@b+1,w
  3784  1A95  00B8               	movwf	___fladd@b+1
  3785  1A96  084F               	movf	___flsub@b,w
  3786  1A97  00B7               	movwf	___fladd@b
  3787  1A98  084E               	movf	___flsub@a+3,w
  3788  1A99  00BE               	movwf	___fladd@a+3
  3789  1A9A  084D               	movf	___flsub@a+2,w
  3790  1A9B  00BD               	movwf	___fladd@a+2
  3791  1A9C  084C               	movf	___flsub@a+1,w
  3792  1A9D  00BC               	movwf	___fladd@a+1
  3793  1A9E  084B               	movf	___flsub@a,w
  3794  1A9F  00BB               	movwf	___fladd@a
  3795  1AA0  120A  158A  230A   	fcall	___fladd
  3796  1AA3  083A               	movf	?___fladd+3,w
  3797  1AA4  00CE               	movwf	?___flsub+3
  3798  1AA5  0839               	movf	?___fladd+2,w
  3799  1AA6  00CD               	movwf	?___flsub+2
  3800  1AA7  0838               	movf	?___fladd+1,w
  3801  1AA8  00CC               	movwf	?___flsub+1
  3802  1AA9  0837               	movf	?___fladd,w
  3803  1AAA  00CB               	movwf	?___flsub
  3804  1AAB  0008               	return
  3805  1AAC                     __end_of___flsub:
  3806                           
  3807                           	psect	text4
  3808  0B0A                     __ptext4:	
  3809 ;; *************** function ___fladd *****************
  3810 ;; Defined at:
  3811 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;  b               4   23[BANK0 ] void 
  3814 ;;  a               4   27[BANK0 ] void 
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;  grs             1   42[BANK0 ] unsigned char 
  3817 ;;  bexp            1   41[BANK0 ] unsigned char 
  3818 ;;  aexp            1   40[BANK0 ] unsigned char 
  3819 ;;  signs           1   39[BANK0 ] unsigned char 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  4   23[BANK0 ] unsigned char 
  3822 ;; Registers used:
  3823 ;;		wreg, status,2, status,0, btemp+1
  3824 ;; Tracked objects:
  3825 ;;		On entry : 300/0
  3826 ;;		On exit  : 300/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3829 ;;      Params:         0       8       0       0       0
  3830 ;;      Locals:         0       4       0       0       0
  3831 ;;      Temps:          0       8       0       0       0
  3832 ;;      Totals:         0      20       0       0       0
  3833 ;;Total ram usage:       20 bytes
  3834 ;; Hardware stack levels used: 1
  3835 ;; Hardware stack levels required when called: 1
  3836 ;; This function calls:
  3837 ;;		Nothing
  3838 ;; This function is called by:
  3839 ;;		_MediaPlacaVaccum
  3840 ;;		___flsub
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844                           
  3845                           ;psect for function ___fladd
  3846  0B0A                     ___fladd:
  3847                           
  3848                           ;incstack = 0
  3849                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3850  0B0A  083A               	movf	___fladd@b+3,w
  3851  0B0B  3980               	andlw	128
  3852  0B0C  00BF               	movwf	??___fladd
  3853  0B0D  083F               	movf	??___fladd,w
  3854  0B0E  00C7               	movwf	___fladd@signs
  3855  0B0F  083A               	movf	___fladd@b+3,w
  3856  0B10  00BF               	movwf	??___fladd
  3857  0B11  073F               	addwf	??___fladd,w
  3858  0B12  00C0               	movwf	??___fladd+1
  3859  0B13  0840               	movf	??___fladd+1,w
  3860  0B14  00C9               	movwf	___fladd@bexp
  3861  0B15  1BB9               	btfsc	___fladd@b+2,7
  3862  0B16  1449               	bsf	___fladd@bexp,0
  3863  0B17  0849               	movf	___fladd@bexp,w
  3864  0B18  1903               	btfsc	3,2
  3865  0B19  2B28               	goto	l4009
  3866  0B1A  0A49               	incf	___fladd@bexp,w
  3867  0B1B  1D03               	btfss	3,2
  3868  0B1C  2B25               	goto	l4005
  3869  0B1D  3000               	movlw	0
  3870  0B1E  00BA               	movwf	___fladd@b+3
  3871  0B1F  3000               	movlw	0
  3872  0B20  00B9               	movwf	___fladd@b+2
  3873  0B21  3000               	movlw	0
  3874  0B22  00B8               	movwf	___fladd@b+1
  3875  0B23  3000               	movlw	0
  3876  0B24  00B7               	movwf	___fladd@b
  3877  0B25                     l4005:
  3878  0B25  17B9               	bsf	___fladd@b+2,7
  3879  0B26  01BA               	clrf	___fladd@b+3
  3880  0B27  2B30               	goto	l4011
  3881  0B28                     l4009:
  3882  0B28  3000               	movlw	0
  3883  0B29  00BA               	movwf	___fladd@b+3
  3884  0B2A  3000               	movlw	0
  3885  0B2B  00B9               	movwf	___fladd@b+2
  3886  0B2C  3000               	movlw	0
  3887  0B2D  00B8               	movwf	___fladd@b+1
  3888  0B2E  3000               	movlw	0
  3889  0B2F  00B7               	movwf	___fladd@b
  3890  0B30                     l4011:
  3891  0B30  083E               	movf	___fladd@a+3,w
  3892  0B31  3980               	andlw	128
  3893  0B32  00BF               	movwf	??___fladd
  3894  0B33  083F               	movf	??___fladd,w
  3895  0B34  00C8               	movwf	___fladd@aexp
  3896  0B35  0848               	movf	___fladd@aexp,w
  3897  0B36  0647               	xorwf	___fladd@signs,w
  3898  0B37  1D03               	btfss	3,2
  3899  0B38  1747               	bsf	___fladd@signs,6
  3900  0B39  083E               	movf	___fladd@a+3,w
  3901  0B3A  00BF               	movwf	??___fladd
  3902  0B3B  073F               	addwf	??___fladd,w
  3903  0B3C  00C0               	movwf	??___fladd+1
  3904  0B3D  0840               	movf	??___fladd+1,w
  3905  0B3E  00C8               	movwf	___fladd@aexp
  3906  0B3F  1BBD               	btfsc	___fladd@a+2,7
  3907  0B40  1448               	bsf	___fladd@aexp,0
  3908  0B41  0848               	movf	___fladd@aexp,w
  3909  0B42  1903               	btfsc	3,2
  3910  0B43  2B52               	goto	l4033
  3911  0B44  0A48               	incf	___fladd@aexp,w
  3912  0B45  1D03               	btfss	3,2
  3913  0B46  2B4F               	goto	l4029
  3914  0B47  3000               	movlw	0
  3915  0B48  00BE               	movwf	___fladd@a+3
  3916  0B49  3000               	movlw	0
  3917  0B4A  00BD               	movwf	___fladd@a+2
  3918  0B4B  3000               	movlw	0
  3919  0B4C  00BC               	movwf	___fladd@a+1
  3920  0B4D  3000               	movlw	0
  3921  0B4E  00BB               	movwf	___fladd@a
  3922  0B4F                     l4029:
  3923  0B4F  17BD               	bsf	___fladd@a+2,7
  3924  0B50  01BE               	clrf	___fladd@a+3
  3925  0B51  2B5A               	goto	l1290
  3926  0B52                     l4033:
  3927  0B52  3000               	movlw	0
  3928  0B53  00BE               	movwf	___fladd@a+3
  3929  0B54  3000               	movlw	0
  3930  0B55  00BD               	movwf	___fladd@a+2
  3931  0B56  3000               	movlw	0
  3932  0B57  00BC               	movwf	___fladd@a+1
  3933  0B58  3000               	movlw	0
  3934  0B59  00BB               	movwf	___fladd@a
  3935  0B5A                     l1290:
  3936  0B5A  0849               	movf	___fladd@bexp,w
  3937  0B5B  0248               	subwf	___fladd@aexp,w
  3938  0B5C  1803               	skipnc
  3939  0B5D  2BA0               	goto	l4069
  3940  0B5E  1F47               	btfss	___fladd@signs,6
  3941  0B5F  2B64               	goto	l4039
  3942  0B60  3080               	movlw	128
  3943  0B61  00BF               	movwf	??___fladd
  3944  0B62  083F               	movf	??___fladd,w
  3945  0B63  06C7               	xorwf	___fladd@signs,f
  3946  0B64                     l4039:
  3947  0B64  0849               	movf	___fladd@bexp,w
  3948  0B65  00BF               	movwf	??___fladd
  3949  0B66  083F               	movf	??___fladd,w
  3950  0B67  00CA               	movwf	___fladd@grs
  3951  0B68  0848               	movf	___fladd@aexp,w
  3952  0B69  00BF               	movwf	??___fladd
  3953  0B6A  083F               	movf	??___fladd,w
  3954  0B6B  00C9               	movwf	___fladd@bexp
  3955  0B6C  084A               	movf	___fladd@grs,w
  3956  0B6D  00BF               	movwf	??___fladd
  3957  0B6E  083F               	movf	??___fladd,w
  3958  0B6F  00C8               	movwf	___fladd@aexp
  3959  0B70  0837               	movf	___fladd@b,w
  3960  0B71  00BF               	movwf	??___fladd
  3961  0B72  083F               	movf	??___fladd,w
  3962  0B73  00CA               	movwf	___fladd@grs
  3963  0B74  083B               	movf	___fladd@a,w
  3964  0B75  00BF               	movwf	??___fladd
  3965  0B76  083F               	movf	??___fladd,w
  3966  0B77  00B7               	movwf	___fladd@b
  3967  0B78  084A               	movf	___fladd@grs,w
  3968  0B79  00BF               	movwf	??___fladd
  3969  0B7A  083F               	movf	??___fladd,w
  3970  0B7B  00BB               	movwf	___fladd@a
  3971  0B7C  0838               	movf	___fladd@b+1,w
  3972  0B7D  00BF               	movwf	??___fladd
  3973  0B7E  083F               	movf	??___fladd,w
  3974  0B7F  00CA               	movwf	___fladd@grs
  3975  0B80  083C               	movf	___fladd@a+1,w
  3976  0B81  00BF               	movwf	??___fladd
  3977  0B82  083F               	movf	??___fladd,w
  3978  0B83  00B8               	movwf	___fladd@b+1
  3979  0B84  084A               	movf	___fladd@grs,w
  3980  0B85  00BF               	movwf	??___fladd
  3981  0B86  083F               	movf	??___fladd,w
  3982  0B87  00BC               	movwf	___fladd@a+1
  3983  0B88  0839               	movf	___fladd@b+2,w
  3984  0B89  00BF               	movwf	??___fladd
  3985  0B8A  083F               	movf	??___fladd,w
  3986  0B8B  00CA               	movwf	___fladd@grs
  3987  0B8C  083D               	movf	___fladd@a+2,w
  3988  0B8D  00BF               	movwf	??___fladd
  3989  0B8E  083F               	movf	??___fladd,w
  3990  0B8F  00B9               	movwf	___fladd@b+2
  3991  0B90  084A               	movf	___fladd@grs,w
  3992  0B91  00BF               	movwf	??___fladd
  3993  0B92  083F               	movf	??___fladd,w
  3994  0B93  00BD               	movwf	___fladd@a+2
  3995  0B94  083A               	movf	___fladd@b+3,w
  3996  0B95  00BF               	movwf	??___fladd
  3997  0B96  083F               	movf	??___fladd,w
  3998  0B97  00CA               	movwf	___fladd@grs
  3999  0B98  083E               	movf	___fladd@a+3,w
  4000  0B99  00BF               	movwf	??___fladd
  4001  0B9A  083F               	movf	??___fladd,w
  4002  0B9B  00BA               	movwf	___fladd@b+3
  4003  0B9C  084A               	movf	___fladd@grs,w
  4004  0B9D  00BF               	movwf	??___fladd
  4005  0B9E  083F               	movf	??___fladd,w
  4006  0B9F  00BE               	movwf	___fladd@a+3
  4007  0BA0                     l4069:
  4008  0BA0  01CA               	clrf	___fladd@grs
  4009  0BA1  0848               	movf	___fladd@aexp,w
  4010  0BA2  00BF               	movwf	??___fladd
  4011  0BA3  01C0               	clrf	??___fladd+1
  4012  0BA4  0840               	movf	??___fladd+1,w
  4013  0BA5  00C2               	movwf	??___fladd+3
  4014  0BA6  0849               	movf	___fladd@bexp,w
  4015  0BA7  023F               	subwf	??___fladd,w
  4016  0BA8  00C1               	movwf	??___fladd+2
  4017  0BA9  1C03               	skipc
  4018  0BAA  03C2               	decf	??___fladd+3,f
  4019  0BAB  0842               	movf	??___fladd+3,w
  4020  0BAC  3A80               	xorlw	128
  4021  0BAD  00FF               	movwf	127
  4022  0BAE  3080               	movlw	128
  4023  0BAF  027F               	subwf	127,w
  4024  0BB0  1D03               	skipz
  4025  0BB1  2BB4               	goto	u3295
  4026  0BB2  301A               	movlw	26
  4027  0BB3  0241               	subwf	??___fladd+2,w
  4028  0BB4                     u3295:
  4029  0BB4  1C03               	skipc
  4030  0BB5  2BED               	goto	l4087
  4031  0BB6  1283               	bcf	3,5	;RP0=0, select bank0
  4032  0BB7  1303               	bcf	3,6	;RP1=0, select bank0
  4033  0BB8  083A               	movf	___fladd@b+3,w
  4034  0BB9  0439               	iorwf	___fladd@b+2,w
  4035  0BBA  0438               	iorwf	___fladd@b+1,w
  4036  0BBB  0437               	iorwf	___fladd@b,w
  4037  0BBC  1903               	btfsc	3,2
  4038  0BBD  2BC0               	goto	u3300
  4039  0BBE  3001               	movlw	1
  4040  0BBF  2BC1               	goto	u3310
  4041  0BC0                     u3300:
  4042  0BC0  3000               	movlw	0
  4043  0BC1                     u3310:
  4044  0BC1  00BF               	movwf	??___fladd
  4045  0BC2  083F               	movf	??___fladd,w
  4046  0BC3  00CA               	movwf	___fladd@grs
  4047  0BC4  3000               	movlw	0
  4048  0BC5  00BA               	movwf	___fladd@b+3
  4049  0BC6  3000               	movlw	0
  4050  0BC7  00B9               	movwf	___fladd@b+2
  4051  0BC8  3000               	movlw	0
  4052  0BC9  00B8               	movwf	___fladd@b+1
  4053  0BCA  3000               	movlw	0
  4054  0BCB  00B7               	movwf	___fladd@b
  4055  0BCC  0848               	movf	___fladd@aexp,w
  4056  0BCD  00BF               	movwf	??___fladd
  4057  0BCE  083F               	movf	??___fladd,w
  4058  0BCF  00C9               	movwf	___fladd@bexp
  4059  0BD0  2BF3               	goto	l1294
  4060  0BD1                     l1296:
  4061  0BD1  1C4A               	btfss	___fladd@grs,0
  4062  0BD2  2BDC               	goto	l4077
  4063  0BD3  084A               	movf	___fladd@grs,w
  4064  0BD4  00BF               	movwf	??___fladd
  4065  0BD5  1003               	clrc
  4066  0BD6  0C3F               	rrf	??___fladd,w
  4067  0BD7  3801               	iorlw	1
  4068  0BD8  00C0               	movwf	??___fladd+1
  4069  0BD9  0840               	movf	??___fladd+1,w
  4070  0BDA  00CA               	movwf	___fladd@grs
  4071  0BDB  2BDE               	goto	l4079
  4072  0BDC                     l4077:
  4073  0BDC  1003               	clrc
  4074  0BDD  0CCA               	rrf	___fladd@grs,f
  4075  0BDE                     l4079:
  4076  0BDE  1837               	btfsc	___fladd@b,0
  4077  0BDF  17CA               	bsf	___fladd@grs,7
  4078  0BE0  3001               	movlw	1
  4079  0BE1  00BF               	movwf	??___fladd
  4080  0BE2                     u3345:
  4081  0BE2  0D3A               	rlf	___fladd@b+3,w
  4082  0BE3  0CBA               	rrf	___fladd@b+3,f
  4083  0BE4  0CB9               	rrf	___fladd@b+2,f
  4084  0BE5  0CB8               	rrf	___fladd@b+1,f
  4085  0BE6  0CB7               	rrf	___fladd@b,f
  4086  0BE7  0BBF               	decfsz	??___fladd& (0+127),f
  4087  0BE8  2BE2               	goto	u3345
  4088  0BE9  3001               	movlw	1
  4089  0BEA  00BF               	movwf	??___fladd
  4090  0BEB  083F               	movf	??___fladd,w
  4091  0BEC  07C9               	addwf	___fladd@bexp,f
  4092  0BED                     l4087:
  4093  0BED  1283               	bcf	3,5	;RP0=0, select bank0
  4094  0BEE  1303               	bcf	3,6	;RP1=0, select bank0
  4095  0BEF  0848               	movf	___fladd@aexp,w
  4096  0BF0  0249               	subwf	___fladd@bexp,w
  4097  0BF1  1C03               	skipc
  4098  0BF2  2BD1               	goto	l1296
  4099  0BF3                     l1294:
  4100  0BF3  1B47               	btfsc	___fladd@signs,6
  4101  0BF4  2C34               	goto	l4113
  4102  0BF5  0849               	movf	___fladd@bexp,w
  4103  0BF6  1D03               	btfss	3,2
  4104  0BF7  2C01               	goto	l4095
  4105  0BF8  3000               	movlw	0
  4106  0BF9  00BA               	movwf	?___fladd+3
  4107  0BFA  3000               	movlw	0
  4108  0BFB  00B9               	movwf	?___fladd+2
  4109  0BFC  3000               	movlw	0
  4110  0BFD  00B8               	movwf	?___fladd+1
  4111  0BFE  3000               	movlw	0
  4112  0BFF  00B7               	movwf	?___fladd
  4113  0C00  0008               	return
  4114  0C01                     l4095:
  4115  0C01  083B               	movf	___fladd@a,w
  4116  0C02  07B7               	addwf	___fladd@b,f
  4117  0C03  083C               	movf	___fladd@a+1,w
  4118  0C04  1103               	clrz
  4119  0C05  1803               	skipnc
  4120  0C06  3E01               	addlw	1
  4121  0C07  1D03               	btfss	3,2
  4122  0C08  07B8               	addwf	___fladd@b+1,f
  4123  0C09  083D               	movf	___fladd@a+2,w
  4124  0C0A  1103               	clrz
  4125  0C0B  1803               	skipnc
  4126  0C0C  3E01               	addlw	1
  4127  0C0D  1D03               	btfss	3,2
  4128  0C0E  07B9               	addwf	___fladd@b+2,f
  4129  0C0F  083E               	movf	___fladd@a+3,w
  4130  0C10  1103               	clrz
  4131  0C11  1803               	skipnc
  4132  0C12  3E01               	addlw	1
  4133  0C13  1D03               	btfss	3,2
  4134  0C14  07BA               	addwf	___fladd@b+3,f
  4135  0C15  1C3A               	btfss	___fladd@b+3,0
  4136  0C16  2CD6               	goto	l4147
  4137  0C17  1C4A               	btfss	___fladd@grs,0
  4138  0C18  2C22               	goto	l4103
  4139  0C19  084A               	movf	___fladd@grs,w
  4140  0C1A  00BF               	movwf	??___fladd
  4141  0C1B  1003               	clrc
  4142  0C1C  0C3F               	rrf	??___fladd,w
  4143  0C1D  3801               	iorlw	1
  4144  0C1E  00C0               	movwf	??___fladd+1
  4145  0C1F  0840               	movf	??___fladd+1,w
  4146  0C20  00CA               	movwf	___fladd@grs
  4147  0C21  2C24               	goto	l4105
  4148  0C22                     l4103:
  4149  0C22  1003               	clrc
  4150  0C23  0CCA               	rrf	___fladd@grs,f
  4151  0C24                     l4105:
  4152  0C24  1837               	btfsc	___fladd@b,0
  4153  0C25  17CA               	bsf	___fladd@grs,7
  4154  0C26  3001               	movlw	1
  4155  0C27  00BF               	movwf	??___fladd
  4156  0C28                     u3425:
  4157  0C28  0D3A               	rlf	___fladd@b+3,w
  4158  0C29  0CBA               	rrf	___fladd@b+3,f
  4159  0C2A  0CB9               	rrf	___fladd@b+2,f
  4160  0C2B  0CB8               	rrf	___fladd@b+1,f
  4161  0C2C  0CB7               	rrf	___fladd@b,f
  4162  0C2D  0BBF               	decfsz	??___fladd& (0+127),f
  4163  0C2E  2C28               	goto	u3425
  4164  0C2F  3001               	movlw	1
  4165  0C30  00BF               	movwf	??___fladd
  4166  0C31  083F               	movf	??___fladd,w
  4167  0C32  07C9               	addwf	___fladd@bexp,f
  4168  0C33  2CD6               	goto	l4147
  4169  0C34                     l4113:
  4170  0C34  083A               	movf	___fladd@b+3,w
  4171  0C35  3A80               	xorlw	128
  4172  0C36  00FF               	movwf	127
  4173  0C37  083E               	movf	___fladd@a+3,w
  4174  0C38  3A80               	xorlw	128
  4175  0C39  027F               	subwf	127,w
  4176  0C3A  1D03               	skipz
  4177  0C3B  2C46               	goto	u3433
  4178  0C3C  083D               	movf	___fladd@a+2,w
  4179  0C3D  0239               	subwf	___fladd@b+2,w
  4180  0C3E  1D03               	skipz
  4181  0C3F  2C46               	goto	u3433
  4182  0C40  083C               	movf	___fladd@a+1,w
  4183  0C41  0238               	subwf	___fladd@b+1,w
  4184  0C42  1D03               	skipz
  4185  0C43  2C46               	goto	u3433
  4186  0C44  083B               	movf	___fladd@a,w
  4187  0C45  0237               	subwf	___fladd@b,w
  4188  0C46                     u3433:
  4189  0C46  1803               	skipnc
  4190  0C47  2C9E               	goto	l4123
  4191  0C48  30FF               	movlw	255
  4192  0C49  00BF               	movwf	??___fladd
  4193  0C4A  30FF               	movlw	255
  4194  0C4B  00C0               	movwf	??___fladd+1
  4195  0C4C  30FF               	movlw	255
  4196  0C4D  00C1               	movwf	??___fladd+2
  4197  0C4E  30FF               	movlw	255
  4198  0C4F  00C2               	movwf	??___fladd+3
  4199  0C50  083B               	movf	___fladd@a,w
  4200  0C51  00C3               	movwf	??___fladd+4
  4201  0C52  083C               	movf	___fladd@a+1,w
  4202  0C53  00C4               	movwf	??___fladd+5
  4203  0C54  083D               	movf	___fladd@a+2,w
  4204  0C55  00C5               	movwf	??___fladd+6
  4205  0C56  083E               	movf	___fladd@a+3,w
  4206  0C57  00C6               	movwf	??___fladd+7
  4207  0C58  0837               	movf	___fladd@b,w
  4208  0C59  02C3               	subwf	??___fladd+4,f
  4209  0C5A  0838               	movf	___fladd@b+1,w
  4210  0C5B  1C03               	skipc
  4211  0C5C  0F38               	incfsz	___fladd@b+1,w
  4212  0C5D  2C5F               	goto	u3441
  4213  0C5E  2C60               	goto	u3442
  4214  0C5F                     u3441:
  4215  0C5F  02C4               	subwf	??___fladd+5,f
  4216  0C60                     u3442:
  4217  0C60  0839               	movf	___fladd@b+2,w
  4218  0C61  1C03               	skipc
  4219  0C62  0F39               	incfsz	___fladd@b+2,w
  4220  0C63  2C65               	goto	u3443
  4221  0C64  2C66               	goto	u3444
  4222  0C65                     u3443:
  4223  0C65  02C5               	subwf	??___fladd+6,f
  4224  0C66                     u3444:
  4225  0C66  083A               	movf	___fladd@b+3,w
  4226  0C67  1C03               	skipc
  4227  0C68  0F3A               	incfsz	___fladd@b+3,w
  4228  0C69  2C6B               	goto	u3445
  4229  0C6A  2C6C               	goto	u3446
  4230  0C6B                     u3445:
  4231  0C6B  02C6               	subwf	??___fladd+7,f
  4232  0C6C                     u3446:
  4233  0C6C  0843               	movf	??___fladd+4,w
  4234  0C6D  07BF               	addwf	??___fladd,f
  4235  0C6E  0844               	movf	??___fladd+5,w
  4236  0C6F  1803               	skipnc
  4237  0C70  0F44               	incfsz	??___fladd+5,w
  4238  0C71  2C73               	goto	u3450
  4239  0C72  2C74               	goto	u3451
  4240  0C73                     u3450:
  4241  0C73  07C0               	addwf	??___fladd+1,f
  4242  0C74                     u3451:
  4243  0C74  0845               	movf	??___fladd+6,w
  4244  0C75  1803               	skipnc
  4245  0C76  0F45               	incfsz	??___fladd+6,w
  4246  0C77  2C79               	goto	u3452
  4247  0C78  2C7A               	goto	u3453
  4248  0C79                     u3452:
  4249  0C79  07C1               	addwf	??___fladd+2,f
  4250  0C7A                     u3453:
  4251  0C7A  0846               	movf	??___fladd+7,w
  4252  0C7B  1803               	skipnc
  4253  0C7C  0A46               	incf	??___fladd+7,w
  4254  0C7D  07C2               	addwf	??___fladd+3,f
  4255  0C7E  0842               	movf	??___fladd+3,w
  4256  0C7F  00BA               	movwf	___fladd@b+3
  4257  0C80  0841               	movf	??___fladd+2,w
  4258  0C81  00B9               	movwf	___fladd@b+2
  4259  0C82  0840               	movf	??___fladd+1,w
  4260  0C83  00B8               	movwf	___fladd@b+1
  4261  0C84  083F               	movf	??___fladd,w
  4262  0C85  00B7               	movwf	___fladd@b
  4263  0C86  3080               	movlw	128
  4264  0C87  00BF               	movwf	??___fladd
  4265  0C88  083F               	movf	??___fladd,w
  4266  0C89  06C7               	xorwf	___fladd@signs,f
  4267  0C8A  09CA               	comf	___fladd@grs,f
  4268  0C8B  0ACA               	incf	___fladd@grs,f
  4269  0C8C  084A               	movf	___fladd@grs,w
  4270  0C8D  1D03               	btfss	3,2
  4271  0C8E  2CAC               	goto	l1311
  4272  0C8F  3001               	movlw	1
  4273  0C90  07B7               	addwf	___fladd@b,f
  4274  0C91  3000               	movlw	0
  4275  0C92  1803               	skipnc
  4276  0C93  3001               	movlw	1
  4277  0C94  07B8               	addwf	___fladd@b+1,f
  4278  0C95  3000               	movlw	0
  4279  0C96  1803               	skipnc
  4280  0C97  3001               	movlw	1
  4281  0C98  07B9               	addwf	___fladd@b+2,f
  4282  0C99  3000               	movlw	0
  4283  0C9A  1803               	skipnc
  4284  0C9B  3001               	movlw	1
  4285  0C9C  07BA               	addwf	___fladd@b+3,f
  4286  0C9D  2CAC               	goto	l1311
  4287  0C9E                     l4123:
  4288  0C9E  083B               	movf	___fladd@a,w
  4289  0C9F  02B7               	subwf	___fladd@b,f
  4290  0CA0  083C               	movf	___fladd@a+1,w
  4291  0CA1  1C03               	skipc
  4292  0CA2  0F3C               	incfsz	___fladd@a+1,w
  4293  0CA3  02B8               	subwf	___fladd@b+1,f
  4294  0CA4  083D               	movf	___fladd@a+2,w
  4295  0CA5  1C03               	skipc
  4296  0CA6  0F3D               	incfsz	___fladd@a+2,w
  4297  0CA7  02B9               	subwf	___fladd@b+2,f
  4298  0CA8  083E               	movf	___fladd@a+3,w
  4299  0CA9  1C03               	skipc
  4300  0CAA  0F3E               	incfsz	___fladd@a+3,w
  4301  0CAB  02BA               	subwf	___fladd@b+3,f
  4302  0CAC                     l1311:
  4303  0CAC  083A               	movf	___fladd@b+3,w
  4304  0CAD  0439               	iorwf	___fladd@b+2,w
  4305  0CAE  0438               	iorwf	___fladd@b+1,w
  4306  0CAF  0437               	iorwf	___fladd@b,w
  4307  0CB0  1D03               	skipz
  4308  0CB1  2CD4               	goto	l4145
  4309  0CB2  084A               	movf	___fladd@grs,w
  4310  0CB3  1D03               	btfss	3,2
  4311  0CB4  2CD4               	goto	l4145
  4312  0CB5  3000               	movlw	0
  4313  0CB6  00BA               	movwf	?___fladd+3
  4314  0CB7  3000               	movlw	0
  4315  0CB8  00B9               	movwf	?___fladd+2
  4316  0CB9  3000               	movlw	0
  4317  0CBA  00B8               	movwf	?___fladd+1
  4318  0CBB  3000               	movlw	0
  4319  0CBC  00B7               	movwf	?___fladd
  4320  0CBD  0008               	return
  4321  0CBE                     l4131:
  4322  0CBE  3001               	movlw	1
  4323  0CBF  00BF               	movwf	??___fladd
  4324  0CC0                     u3495:
  4325  0CC0  1003               	clrc
  4326  0CC1  0DB7               	rlf	___fladd@b,f
  4327  0CC2  0DB8               	rlf	___fladd@b+1,f
  4328  0CC3  0DB9               	rlf	___fladd@b+2,f
  4329  0CC4  0DBA               	rlf	___fladd@b+3,f
  4330  0CC5  0BBF               	decfsz	??___fladd,f
  4331  0CC6  2CC0               	goto	u3495
  4332  0CC7  1BCA               	btfsc	___fladd@grs,7
  4333  0CC8  1437               	bsf	___fladd@b,0
  4334  0CC9  1C4A               	btfss	___fladd@grs,0
  4335  0CCA  2CCD               	goto	l4139
  4336  0CCB  1403               	setc
  4337  0CCC  2CCE               	goto	L5
  4338  0CCD                     l4139:
  4339  0CCD  1003               	clrc
  4340  0CCE                     L5:
  4341  0CCE  0DCA               	rlf	___fladd@grs,f
  4342  0CCF  0849               	movf	___fladd@bexp,w
  4343  0CD0  1903               	btfsc	3,2
  4344  0CD1  2CD4               	goto	l4145
  4345  0CD2  3001               	movlw	1
  4346  0CD3  02C9               	subwf	___fladd@bexp,f
  4347  0CD4                     l4145:
  4348  0CD4  1FB9               	btfss	___fladd@b+2,7
  4349  0CD5  2CBE               	goto	l4131
  4350  0CD6                     l4147:
  4351  0CD6  01C8               	clrf	___fladd@aexp
  4352  0CD7  1FCA               	btfss	___fladd@grs,7
  4353  0CD8  2CE1               	goto	l4157
  4354  0CD9  084A               	movf	___fladd@grs,w
  4355  0CDA  397F               	andlw	127
  4356  0CDB  1903               	btfsc	3,2
  4357  0CDC  1837               	btfsc	___fladd@b,0
  4358  0CDD  2CDF               	goto	l4153
  4359  0CDE  2CE1               	goto	l4157
  4360  0CDF                     l4153:
  4361  0CDF  01C8               	clrf	___fladd@aexp
  4362  0CE0  0AC8               	incf	___fladd@aexp,f
  4363  0CE1                     l4157:
  4364  0CE1  0848               	movf	___fladd@aexp,w
  4365  0CE2  1903               	btfsc	3,2
  4366  0CE3  2D14               	goto	l1324
  4367  0CE4  3001               	movlw	1
  4368  0CE5  07B7               	addwf	___fladd@b,f
  4369  0CE6  3000               	movlw	0
  4370  0CE7  1803               	skipnc
  4371  0CE8  3001               	movlw	1
  4372  0CE9  07B8               	addwf	___fladd@b+1,f
  4373  0CEA  3000               	movlw	0
  4374  0CEB  1803               	skipnc
  4375  0CEC  3001               	movlw	1
  4376  0CED  07B9               	addwf	___fladd@b+2,f
  4377  0CEE  3000               	movlw	0
  4378  0CEF  1803               	skipnc
  4379  0CF0  3001               	movlw	1
  4380  0CF1  07BA               	addwf	___fladd@b+3,f
  4381  0CF2  1C3A               	btfss	___fladd@b+3,0
  4382  0CF3  2D14               	goto	l1324
  4383  0CF4  0837               	movf	___fladd@b,w
  4384  0CF5  00BF               	movwf	??___fladd
  4385  0CF6  0838               	movf	___fladd@b+1,w
  4386  0CF7  00C0               	movwf	??___fladd+1
  4387  0CF8  0839               	movf	___fladd@b+2,w
  4388  0CF9  00C1               	movwf	??___fladd+2
  4389  0CFA  083A               	movf	___fladd@b+3,w
  4390  0CFB  00C2               	movwf	??___fladd+3
  4391  0CFC  3001               	movlw	1
  4392  0CFD  00C3               	movwf	??___fladd+4
  4393  0CFE                     u3595:
  4394  0CFE  0D42               	rlf	??___fladd+3,w
  4395  0CFF  0CC2               	rrf	??___fladd+3,f
  4396  0D00  0CC1               	rrf	??___fladd+2,f
  4397  0D01  0CC0               	rrf	??___fladd+1,f
  4398  0D02  0CBF               	rrf	??___fladd,f
  4399  0D03  0BC3               	decfsz	??___fladd+4,f
  4400  0D04  2CFE               	goto	u3595
  4401  0D05  0842               	movf	??___fladd+3,w
  4402  0D06  00BA               	movwf	___fladd@b+3
  4403  0D07  0841               	movf	??___fladd+2,w
  4404  0D08  00B9               	movwf	___fladd@b+2
  4405  0D09  0840               	movf	??___fladd+1,w
  4406  0D0A  00B8               	movwf	___fladd@b+1
  4407  0D0B  083F               	movf	??___fladd,w
  4408  0D0C  00B7               	movwf	___fladd@b
  4409  0D0D  0A49               	incf	___fladd@bexp,w
  4410  0D0E  1903               	btfsc	3,2
  4411  0D0F  2D14               	goto	l1324
  4412  0D10  3001               	movlw	1
  4413  0D11  00BF               	movwf	??___fladd
  4414  0D12  083F               	movf	??___fladd,w
  4415  0D13  07C9               	addwf	___fladd@bexp,f
  4416  0D14                     l1324:
  4417  0D14  0A49               	incf	___fladd@bexp,w
  4418  0D15  1D03               	btfss	3,2
  4419  0D16  0849               	movf	___fladd@bexp,w
  4420  0D17  1D03               	btfss	3,2
  4421  0D18  2D24               	goto	l4175
  4422  0D19  3000               	movlw	0
  4423  0D1A  00BA               	movwf	___fladd@b+3
  4424  0D1B  3000               	movlw	0
  4425  0D1C  00B9               	movwf	___fladd@b+2
  4426  0D1D  3000               	movlw	0
  4427  0D1E  00B8               	movwf	___fladd@b+1
  4428  0D1F  3000               	movlw	0
  4429  0D20  00B7               	movwf	___fladd@b
  4430  0D21  0849               	movf	___fladd@bexp,w
  4431  0D22  1903               	btfsc	3,2
  4432  0D23  01C7               	clrf	___fladd@signs
  4433  0D24                     l4175:
  4434  0D24  1C49               	btfss	___fladd@bexp,0
  4435  0D25  2D28               	goto	l4179
  4436  0D26  17B9               	bsf	___fladd@b+2,7
  4437  0D27  2D2C               	goto	l1332
  4438  0D28                     l4179:
  4439  0D28  307F               	movlw	127
  4440  0D29  00BF               	movwf	??___fladd
  4441  0D2A  083F               	movf	??___fladd,w
  4442  0D2B  05B9               	andwf	___fladd@b+2,f
  4443  0D2C                     l1332:
  4444  0D2C  0849               	movf	___fladd@bexp,w
  4445  0D2D  00BF               	movwf	??___fladd
  4446  0D2E  1003               	clrc
  4447  0D2F  0C3F               	rrf	??___fladd,w
  4448  0D30  00C0               	movwf	??___fladd+1
  4449  0D31  0840               	movf	??___fladd+1,w
  4450  0D32  00BA               	movwf	___fladd@b+3
  4451  0D33  1FC7               	btfss	___fladd@signs,7
  4452  0D34  0008               	return
  4453  0D35  17BA               	bsf	___fladd@b+3,7
  4454  0D36  0008               	return
  4455  0D37                     __end_of___fladd:
  4456                           
  4457                           	psect	text5
  4458  1073                     __ptext5:	
  4459 ;; *************** function ___flge *****************
  4460 ;; Defined at:
  4461 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;  ff1             4    0[BANK0 ] unsigned char 
  4464 ;;  ff2             4    4[BANK0 ] unsigned char 
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;		None
  4467 ;; Return value:  Size  Location     Type
  4468 ;;		None               void
  4469 ;; Registers used:
  4470 ;;		wreg, status,2, status,0
  4471 ;; Tracked objects:
  4472 ;;		On entry : 300/0
  4473 ;;		On exit  : 300/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4476 ;;      Params:         0       8       0       0       0
  4477 ;;      Locals:         0       0       0       0       0
  4478 ;;      Temps:          0       4       0       0       0
  4479 ;;      Totals:         0      12       0       0       0
  4480 ;;Total ram usage:       12 bytes
  4481 ;; Hardware stack levels used: 1
  4482 ;; Hardware stack levels required when called: 1
  4483 ;; This function calls:
  4484 ;;		Nothing
  4485 ;; This function is called by:
  4486 ;;		_MediaPlacaVaccum
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           
  4491                           ;psect for function ___flge
  4492  1073                     ___flge:
  4493                           
  4494                           ;incstack = 0
  4495                           ; Regs used in ___flge: [wreg+status,2+status,0]
  4496  1073  3000               	movlw	0
  4497  1074  0520               	andwf	___flge@ff1,w
  4498  1075  00A8               	movwf	??___flge
  4499  1076  3000               	movlw	0
  4500  1077  0521               	andwf	___flge@ff1+1,w
  4501  1078  00A9               	movwf	??___flge+1
  4502  1079  3080               	movlw	128
  4503  107A  0522               	andwf	___flge@ff1+2,w
  4504  107B  00AA               	movwf	??___flge+2
  4505  107C  307F               	movlw	127
  4506  107D  0523               	andwf	___flge@ff1+3,w
  4507  107E  00AB               	movwf	??___flge+3
  4508  107F  082B               	movf	??___flge+3,w
  4509  1080  042A               	iorwf	??___flge+2,w
  4510  1081  0429               	iorwf	??___flge+1,w
  4511  1082  0428               	iorwf	??___flge,w
  4512  1083  1D03               	skipz
  4513  1084  288D               	goto	l1171
  4514  1085  3000               	movlw	0
  4515  1086  00A3               	movwf	___flge@ff1+3
  4516  1087  3000               	movlw	0
  4517  1088  00A2               	movwf	___flge@ff1+2
  4518  1089  3000               	movlw	0
  4519  108A  00A1               	movwf	___flge@ff1+1
  4520  108B  3000               	movlw	0
  4521  108C  00A0               	movwf	___flge@ff1
  4522  108D                     l1171:
  4523  108D  3000               	movlw	0
  4524  108E  0524               	andwf	___flge@ff2,w
  4525  108F  00A8               	movwf	??___flge
  4526  1090  3000               	movlw	0
  4527  1091  0525               	andwf	___flge@ff2+1,w
  4528  1092  00A9               	movwf	??___flge+1
  4529  1093  3080               	movlw	128
  4530  1094  0526               	andwf	___flge@ff2+2,w
  4531  1095  00AA               	movwf	??___flge+2
  4532  1096  307F               	movlw	127
  4533  1097  0527               	andwf	___flge@ff2+3,w
  4534  1098  00AB               	movwf	??___flge+3
  4535  1099  082B               	movf	??___flge+3,w
  4536  109A  042A               	iorwf	??___flge+2,w
  4537  109B  0429               	iorwf	??___flge+1,w
  4538  109C  0428               	iorwf	??___flge,w
  4539  109D  1D03               	skipz
  4540  109E  28A7               	goto	l4835
  4541  109F  3000               	movlw	0
  4542  10A0  00A7               	movwf	___flge@ff2+3
  4543  10A1  3000               	movlw	0
  4544  10A2  00A6               	movwf	___flge@ff2+2
  4545  10A3  3000               	movlw	0
  4546  10A4  00A5               	movwf	___flge@ff2+1
  4547  10A5  3000               	movlw	0
  4548  10A6  00A4               	movwf	___flge@ff2
  4549  10A7                     l4835:
  4550  10A7  1FA3               	btfss	___flge@ff1+3,7
  4551  10A8  28CD               	goto	l4839
  4552  10A9  3000               	movlw	0
  4553  10AA  00A8               	movwf	??___flge
  4554  10AB  3000               	movlw	0
  4555  10AC  00A9               	movwf	??___flge+1
  4556  10AD  3000               	movlw	0
  4557  10AE  00AA               	movwf	??___flge+2
  4558  10AF  3080               	movlw	128
  4559  10B0  00AB               	movwf	??___flge+3
  4560  10B1  0820               	movf	___flge@ff1,w
  4561  10B2  02A8               	subwf	??___flge,f
  4562  10B3  0821               	movf	___flge@ff1+1,w
  4563  10B4  1C03               	skipc
  4564  10B5  0F21               	incfsz	___flge@ff1+1,w
  4565  10B6  28B8               	goto	u4561
  4566  10B7  28B9               	goto	u4562
  4567  10B8                     u4561:
  4568  10B8  02A9               	subwf	??___flge+1,f
  4569  10B9                     u4562:
  4570  10B9  0822               	movf	___flge@ff1+2,w
  4571  10BA  1C03               	skipc
  4572  10BB  0F22               	incfsz	___flge@ff1+2,w
  4573  10BC  28BE               	goto	u4563
  4574  10BD  28BF               	goto	u4564
  4575  10BE                     u4563:
  4576  10BE  02AA               	subwf	??___flge+2,f
  4577  10BF                     u4564:
  4578  10BF  0823               	movf	___flge@ff1+3,w
  4579  10C0  1C03               	skipc
  4580  10C1  0F23               	incfsz	___flge@ff1+3,w
  4581  10C2  28C4               	goto	u4565
  4582  10C3  28C5               	goto	u4566
  4583  10C4                     u4565:
  4584  10C4  02AB               	subwf	??___flge+3,f
  4585  10C5                     u4566:
  4586  10C5  082B               	movf	??___flge+3,w
  4587  10C6  00A3               	movwf	___flge@ff1+3
  4588  10C7  082A               	movf	??___flge+2,w
  4589  10C8  00A2               	movwf	___flge@ff1+2
  4590  10C9  0829               	movf	??___flge+1,w
  4591  10CA  00A1               	movwf	___flge@ff1+1
  4592  10CB  0828               	movf	??___flge,w
  4593  10CC  00A0               	movwf	___flge@ff1
  4594  10CD                     l4839:
  4595  10CD  1FA7               	btfss	___flge@ff2+3,7
  4596  10CE  28F3               	goto	l1174
  4597  10CF  3000               	movlw	0
  4598  10D0  00A8               	movwf	??___flge
  4599  10D1  3000               	movlw	0
  4600  10D2  00A9               	movwf	??___flge+1
  4601  10D3  3000               	movlw	0
  4602  10D4  00AA               	movwf	??___flge+2
  4603  10D5  3080               	movlw	128
  4604  10D6  00AB               	movwf	??___flge+3
  4605  10D7  0824               	movf	___flge@ff2,w
  4606  10D8  02A8               	subwf	??___flge,f
  4607  10D9  0825               	movf	___flge@ff2+1,w
  4608  10DA  1C03               	skipc
  4609  10DB  0F25               	incfsz	___flge@ff2+1,w
  4610  10DC  28DE               	goto	u4581
  4611  10DD  28DF               	goto	u4582
  4612  10DE                     u4581:
  4613  10DE  02A9               	subwf	??___flge+1,f
  4614  10DF                     u4582:
  4615  10DF  0826               	movf	___flge@ff2+2,w
  4616  10E0  1C03               	skipc
  4617  10E1  0F26               	incfsz	___flge@ff2+2,w
  4618  10E2  28E4               	goto	u4583
  4619  10E3  28E5               	goto	u4584
  4620  10E4                     u4583:
  4621  10E4  02AA               	subwf	??___flge+2,f
  4622  10E5                     u4584:
  4623  10E5  0827               	movf	___flge@ff2+3,w
  4624  10E6  1C03               	skipc
  4625  10E7  0F27               	incfsz	___flge@ff2+3,w
  4626  10E8  28EA               	goto	u4585
  4627  10E9  28EB               	goto	u4586
  4628  10EA                     u4585:
  4629  10EA  02AB               	subwf	??___flge+3,f
  4630  10EB                     u4586:
  4631  10EB  082B               	movf	??___flge+3,w
  4632  10EC  00A7               	movwf	___flge@ff2+3
  4633  10ED  082A               	movf	??___flge+2,w
  4634  10EE  00A6               	movwf	___flge@ff2+2
  4635  10EF  0829               	movf	??___flge+1,w
  4636  10F0  00A5               	movwf	___flge@ff2+1
  4637  10F1  0828               	movf	??___flge,w
  4638  10F2  00A4               	movwf	___flge@ff2
  4639  10F3                     l1174:
  4640  10F3  3080               	movlw	128
  4641  10F4  06A3               	xorwf	___flge@ff1+3,f
  4642  10F5  3080               	movlw	128
  4643  10F6  06A7               	xorwf	___flge@ff2+3,f
  4644  10F7  0827               	movf	___flge@ff2+3,w
  4645  10F8  0223               	subwf	___flge@ff1+3,w
  4646  10F9  1D03               	skipz
  4647  10FA  0008               	return
  4648  10FB  0826               	movf	___flge@ff2+2,w
  4649  10FC  0222               	subwf	___flge@ff1+2,w
  4650  10FD  1D03               	skipz
  4651  10FE  0008               	return
  4652  10FF  0825               	movf	___flge@ff2+1,w
  4653  1100  0221               	subwf	___flge@ff1+1,w
  4654  1101  1D03               	skipz
  4655  1102  0008               	return
  4656  1103  0824               	movf	___flge@ff2,w
  4657  1104  0220               	subwf	___flge@ff1,w
  4658  1105  0008               	return
  4659  1106                     __end_of___flge:
  4660                           
  4661                           	psect	text6
  4662  0969                     __ptext6:	
  4663 ;; *************** function ___fldiv *****************
  4664 ;; Defined at:
  4665 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;  a               4   14[BANK0 ] unsigned char 
  4668 ;;  b               4   18[BANK0 ] unsigned char 
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;  grs             4   34[BANK0 ] unsigned long 
  4671 ;;  rem             4   27[BANK0 ] unsigned long 
  4672 ;;  new_exp         2   32[BANK0 ] int 
  4673 ;;  aexp            1   39[BANK0 ] unsigned char 
  4674 ;;  bexp            1   38[BANK0 ] unsigned char 
  4675 ;;  sign            1   31[BANK0 ] unsigned char 
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  4   14[BANK0 ] unsigned char 
  4678 ;; Registers used:
  4679 ;;		wreg, status,2, status,0, btemp+1
  4680 ;; Tracked objects:
  4681 ;;		On entry : 300/0
  4682 ;;		On exit  : 300/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4685 ;;      Params:         0       8       0       0       0
  4686 ;;      Locals:         0      13       0       0       0
  4687 ;;      Temps:          0       5       0       0       0
  4688 ;;      Totals:         0      26       0       0       0
  4689 ;;Total ram usage:       26 bytes
  4690 ;; Hardware stack levels used: 1
  4691 ;; Hardware stack levels required when called: 1
  4692 ;; This function calls:
  4693 ;;		Nothing
  4694 ;; This function is called by:
  4695 ;;		_MediaPlacaVaccum
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           
  4700                           ;psect for function ___fldiv
  4701  0969                     ___fldiv:
  4702                           
  4703                           ;incstack = 0
  4704                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4705  0969  0835               	movf	___fldiv@b+3,w
  4706  096A  3980               	andlw	128
  4707  096B  00B6               	movwf	??___fldiv
  4708  096C  0836               	movf	??___fldiv,w
  4709  096D  00BF               	movwf	___fldiv@sign
  4710  096E  0835               	movf	___fldiv@b+3,w
  4711  096F  00B6               	movwf	??___fldiv
  4712  0970  0736               	addwf	??___fldiv,w
  4713  0971  00B7               	movwf	??___fldiv+1
  4714  0972  0837               	movf	??___fldiv+1,w
  4715  0973  00C6               	movwf	___fldiv@bexp
  4716  0974  1BB4               	btfsc	___fldiv@b+2,7
  4717  0975  1446               	bsf	___fldiv@bexp,0
  4718  0976  0846               	movf	___fldiv@bexp,w
  4719  0977  1903               	btfsc	3,2
  4720  0978  2987               	goto	l4873
  4721  0979  0A46               	incf	___fldiv@bexp,w
  4722  097A  1D03               	btfss	3,2
  4723  097B  2984               	goto	l4869
  4724  097C  3000               	movlw	0
  4725  097D  00B5               	movwf	___fldiv@b+3
  4726  097E  3000               	movlw	0
  4727  097F  00B4               	movwf	___fldiv@b+2
  4728  0980  3000               	movlw	0
  4729  0981  00B3               	movwf	___fldiv@b+1
  4730  0982  3000               	movlw	0
  4731  0983  00B2               	movwf	___fldiv@b
  4732  0984                     l4869:
  4733  0984  17B4               	bsf	___fldiv@b+2,7
  4734  0985  01B5               	clrf	___fldiv@b+3
  4735  0986  298F               	goto	l4875
  4736  0987                     l4873:
  4737  0987  3000               	movlw	0
  4738  0988  00B5               	movwf	___fldiv@b+3
  4739  0989  3000               	movlw	0
  4740  098A  00B4               	movwf	___fldiv@b+2
  4741  098B  3000               	movlw	0
  4742  098C  00B3               	movwf	___fldiv@b+1
  4743  098D  3000               	movlw	0
  4744  098E  00B2               	movwf	___fldiv@b
  4745  098F                     l4875:
  4746  098F  0831               	movf	___fldiv@a+3,w
  4747  0990  3980               	andlw	128
  4748  0991  00B6               	movwf	??___fldiv
  4749  0992  0836               	movf	??___fldiv,w
  4750  0993  06BF               	xorwf	___fldiv@sign,f
  4751  0994  0831               	movf	___fldiv@a+3,w
  4752  0995  00B6               	movwf	??___fldiv
  4753  0996  0736               	addwf	??___fldiv,w
  4754  0997  00B7               	movwf	??___fldiv+1
  4755  0998  0837               	movf	??___fldiv+1,w
  4756  0999  00C7               	movwf	___fldiv@aexp
  4757  099A  1BB0               	btfsc	___fldiv@a+2,7
  4758  099B  1447               	bsf	___fldiv@aexp,0
  4759  099C  0847               	movf	___fldiv@aexp,w
  4760  099D  1903               	btfsc	3,2
  4761  099E  29AD               	goto	l4893
  4762  099F  0A47               	incf	___fldiv@aexp,w
  4763  09A0  1D03               	btfss	3,2
  4764  09A1  29AA               	goto	l4889
  4765  09A2  3000               	movlw	0
  4766  09A3  00B1               	movwf	___fldiv@a+3
  4767  09A4  3000               	movlw	0
  4768  09A5  00B0               	movwf	___fldiv@a+2
  4769  09A6  3000               	movlw	0
  4770  09A7  00AF               	movwf	___fldiv@a+1
  4771  09A8  3000               	movlw	0
  4772  09A9  00AE               	movwf	___fldiv@a
  4773  09AA                     l4889:
  4774  09AA  17B0               	bsf	___fldiv@a+2,7
  4775  09AB  01B1               	clrf	___fldiv@a+3
  4776  09AC  29B5               	goto	l1346
  4777  09AD                     l4893:
  4778  09AD  3000               	movlw	0
  4779  09AE  00B1               	movwf	___fldiv@a+3
  4780  09AF  3000               	movlw	0
  4781  09B0  00B0               	movwf	___fldiv@a+2
  4782  09B1  3000               	movlw	0
  4783  09B2  00AF               	movwf	___fldiv@a+1
  4784  09B3  3000               	movlw	0
  4785  09B4  00AE               	movwf	___fldiv@a
  4786  09B5                     l1346:
  4787  09B5  0831               	movf	___fldiv@a+3,w
  4788  09B6  0430               	iorwf	___fldiv@a+2,w
  4789  09B7  042F               	iorwf	___fldiv@a+1,w
  4790  09B8  042E               	iorwf	___fldiv@a,w
  4791  09B9  1D03               	skipz
  4792  09BA  29D4               	goto	l4903
  4793  09BB  3000               	movlw	0
  4794  09BC  00B5               	movwf	___fldiv@b+3
  4795  09BD  3000               	movlw	0
  4796  09BE  00B4               	movwf	___fldiv@b+2
  4797  09BF  3000               	movlw	0
  4798  09C0  00B3               	movwf	___fldiv@b+1
  4799  09C1  3000               	movlw	0
  4800  09C2  00B2               	movwf	___fldiv@b
  4801  09C3  3080               	movlw	128
  4802  09C4  04B4               	iorwf	___fldiv@b+2,f
  4803  09C5  307F               	movlw	127
  4804  09C6  04B5               	iorwf	___fldiv@b+3,f
  4805  09C7                     L7:
  4806  09C7  083F               	movf	___fldiv@sign,w
  4807  09C8  00B6               	movwf	??___fldiv
  4808  09C9  0836               	movf	??___fldiv,w
  4809  09CA  04B5               	iorwf	___fldiv@b+3,f
  4810  09CB  0835               	movf	___fldiv@b+3,w
  4811  09CC  00B1               	movwf	?___fldiv+3
  4812  09CD  0834               	movf	___fldiv@b+2,w
  4813  09CE  00B0               	movwf	?___fldiv+2
  4814  09CF  0833               	movf	___fldiv@b+1,w
  4815  09D0  00AF               	movwf	?___fldiv+1
  4816  09D1  0832               	movf	___fldiv@b,w
  4817  09D2  00AE               	movwf	?___fldiv
  4818  09D3  0008               	return
  4819  09D4                     l4903:
  4820  09D4  0846               	movf	___fldiv@bexp,w
  4821  09D5  1D03               	btfss	3,2
  4822  09D6  29E0               	goto	l4909
  4823  09D7  3000               	movlw	0
  4824  09D8  00B1               	movwf	?___fldiv+3
  4825  09D9  3000               	movlw	0
  4826  09DA  00B0               	movwf	?___fldiv+2
  4827  09DB  3000               	movlw	0
  4828  09DC  00AF               	movwf	?___fldiv+1
  4829  09DD  3000               	movlw	0
  4830  09DE  00AE               	movwf	?___fldiv
  4831  09DF  0008               	return
  4832  09E0                     l4909:
  4833  09E0  0846               	movf	___fldiv@bexp,w
  4834  09E1  00B6               	movwf	??___fldiv
  4835  09E2  01B7               	clrf	??___fldiv+1
  4836  09E3  0837               	movf	??___fldiv+1,w
  4837  09E4  00B9               	movwf	??___fldiv+3
  4838  09E5  0847               	movf	___fldiv@aexp,w
  4839  09E6  0236               	subwf	??___fldiv,w
  4840  09E7  00B8               	movwf	??___fldiv+2
  4841  09E8  1C03               	skipc
  4842  09E9  03B9               	decf	??___fldiv+3,f
  4843  09EA  0838               	movf	??___fldiv+2,w
  4844  09EB  3E7F               	addlw	127
  4845  09EC  00C0               	movwf	___fldiv@new_exp
  4846  09ED  0839               	movf	??___fldiv+3,w
  4847  09EE  1803               	skipnc
  4848  09EF  3E01               	addlw	1
  4849  09F0  3E00               	addlw	0
  4850  09F1  00C1               	movwf	___fldiv@new_exp+1
  4851  09F2  0835               	movf	___fldiv@b+3,w
  4852  09F3  00BE               	movwf	___fldiv@rem+3
  4853  09F4  0834               	movf	___fldiv@b+2,w
  4854  09F5  00BD               	movwf	___fldiv@rem+2
  4855  09F6  0833               	movf	___fldiv@b+1,w
  4856  09F7  00BC               	movwf	___fldiv@rem+1
  4857  09F8  0832               	movf	___fldiv@b,w
  4858  09F9  00BB               	movwf	___fldiv@rem
  4859  09FA  3000               	movlw	0
  4860  09FB  00B5               	movwf	___fldiv@b+3
  4861  09FC  3000               	movlw	0
  4862  09FD  00B4               	movwf	___fldiv@b+2
  4863  09FE  3000               	movlw	0
  4864  09FF  00B3               	movwf	___fldiv@b+1
  4865  0A00  3000               	movlw	0
  4866  0A01  00B2               	movwf	___fldiv@b
  4867  0A02  3000               	movlw	0
  4868  0A03  00C5               	movwf	___fldiv@grs+3
  4869  0A04  3000               	movlw	0
  4870  0A05  00C4               	movwf	___fldiv@grs+2
  4871  0A06  3000               	movlw	0
  4872  0A07  00C3               	movwf	___fldiv@grs+1
  4873  0A08  3000               	movlw	0
  4874  0A09  00C2               	movwf	___fldiv@grs
  4875  0A0A  01C7               	clrf	___fldiv@aexp
  4876  0A0B                     l4937:
  4877  0A0B  301A               	movlw	26
  4878  0A0C  0247               	subwf	___fldiv@aexp,w
  4879  0A0D  1803               	btfsc	3,0
  4880  0A0E  2A53               	goto	l4939
  4881  0A0F  0847               	movf	___fldiv@aexp,w
  4882  0A10  1903               	btfsc	3,2
  4883  0A11  2A2F               	goto	l4929
  4884  0A12  3001               	movlw	1
  4885  0A13  00B6               	movwf	??___fldiv
  4886  0A14                     u4695:
  4887  0A14  1003               	clrc
  4888  0A15  0DBB               	rlf	___fldiv@rem,f
  4889  0A16  0DBC               	rlf	___fldiv@rem+1,f
  4890  0A17  0DBD               	rlf	___fldiv@rem+2,f
  4891  0A18  0DBE               	rlf	___fldiv@rem+3,f
  4892  0A19  0BB6               	decfsz	??___fldiv,f
  4893  0A1A  2A14               	goto	u4695
  4894  0A1B  3001               	movlw	1
  4895  0A1C  00B6               	movwf	??___fldiv
  4896  0A1D                     u4705:
  4897  0A1D  1003               	clrc
  4898  0A1E  0DB2               	rlf	___fldiv@b,f
  4899  0A1F  0DB3               	rlf	___fldiv@b+1,f
  4900  0A20  0DB4               	rlf	___fldiv@b+2,f
  4901  0A21  0DB5               	rlf	___fldiv@b+3,f
  4902  0A22  0BB6               	decfsz	??___fldiv,f
  4903  0A23  2A1D               	goto	u4705
  4904  0A24  1BC5               	btfsc	___fldiv@grs+3,7
  4905  0A25  1432               	bsf	___fldiv@b,0
  4906  0A26  3001               	movlw	1
  4907  0A27  00B6               	movwf	??___fldiv
  4908  0A28                     u4725:
  4909  0A28  1003               	clrc
  4910  0A29  0DC2               	rlf	___fldiv@grs,f
  4911  0A2A  0DC3               	rlf	___fldiv@grs+1,f
  4912  0A2B  0DC4               	rlf	___fldiv@grs+2,f
  4913  0A2C  0DC5               	rlf	___fldiv@grs+3,f
  4914  0A2D  0BB6               	decfsz	??___fldiv,f
  4915  0A2E  2A28               	goto	u4725
  4916  0A2F                     l4929:
  4917  0A2F  0831               	movf	___fldiv@a+3,w
  4918  0A30  023E               	subwf	___fldiv@rem+3,w
  4919  0A31  1D03               	skipz
  4920  0A32  2A3D               	goto	u4735
  4921  0A33  0830               	movf	___fldiv@a+2,w
  4922  0A34  023D               	subwf	___fldiv@rem+2,w
  4923  0A35  1D03               	skipz
  4924  0A36  2A3D               	goto	u4735
  4925  0A37  082F               	movf	___fldiv@a+1,w
  4926  0A38  023C               	subwf	___fldiv@rem+1,w
  4927  0A39  1D03               	skipz
  4928  0A3A  2A3D               	goto	u4735
  4929  0A3B  082E               	movf	___fldiv@a,w
  4930  0A3C  023B               	subwf	___fldiv@rem,w
  4931  0A3D                     u4735:
  4932  0A3D  1C03               	skipc
  4933  0A3E  2A4E               	goto	l4935
  4934  0A3F  1745               	bsf	___fldiv@grs+3,6
  4935  0A40  082E               	movf	___fldiv@a,w
  4936  0A41  02BB               	subwf	___fldiv@rem,f
  4937  0A42  082F               	movf	___fldiv@a+1,w
  4938  0A43  1C03               	skipc
  4939  0A44  0F2F               	incfsz	___fldiv@a+1,w
  4940  0A45  02BC               	subwf	___fldiv@rem+1,f
  4941  0A46  0830               	movf	___fldiv@a+2,w
  4942  0A47  1C03               	skipc
  4943  0A48  0F30               	incfsz	___fldiv@a+2,w
  4944  0A49  02BD               	subwf	___fldiv@rem+2,f
  4945  0A4A  0831               	movf	___fldiv@a+3,w
  4946  0A4B  1C03               	skipc
  4947  0A4C  0F31               	incfsz	___fldiv@a+3,w
  4948  0A4D  02BE               	subwf	___fldiv@rem+3,f
  4949  0A4E                     l4935:
  4950  0A4E  3001               	movlw	1
  4951  0A4F  00B6               	movwf	??___fldiv
  4952  0A50  0836               	movf	??___fldiv,w
  4953  0A51  07C7               	addwf	___fldiv@aexp,f
  4954  0A52  2A0B               	goto	l4937
  4955  0A53                     l4939:
  4956  0A53  083E               	movf	___fldiv@rem+3,w
  4957  0A54  043D               	iorwf	___fldiv@rem+2,w
  4958  0A55  043C               	iorwf	___fldiv@rem+1,w
  4959  0A56  043B               	iorwf	___fldiv@rem,w
  4960  0A57  1D03               	btfss	3,2
  4961  0A58  1442               	bsf	___fldiv@grs,0
  4962  0A59                     l4953:
  4963  0A59  1BB4               	btfsc	___fldiv@b+2,7
  4964  0A5A  2A76               	goto	l4955
  4965  0A5B  3001               	movlw	1
  4966  0A5C  00B6               	movwf	??___fldiv
  4967  0A5D                     u4765:
  4968  0A5D  1003               	clrc
  4969  0A5E  0DB2               	rlf	___fldiv@b,f
  4970  0A5F  0DB3               	rlf	___fldiv@b+1,f
  4971  0A60  0DB4               	rlf	___fldiv@b+2,f
  4972  0A61  0DB5               	rlf	___fldiv@b+3,f
  4973  0A62  0BB6               	decfsz	??___fldiv,f
  4974  0A63  2A5D               	goto	u4765
  4975  0A64  1BC5               	btfsc	___fldiv@grs+3,7
  4976  0A65  1432               	bsf	___fldiv@b,0
  4977  0A66  3001               	movlw	1
  4978  0A67  00B6               	movwf	??___fldiv
  4979  0A68                     u4785:
  4980  0A68  1003               	clrc
  4981  0A69  0DC2               	rlf	___fldiv@grs,f
  4982  0A6A  0DC3               	rlf	___fldiv@grs+1,f
  4983  0A6B  0DC4               	rlf	___fldiv@grs+2,f
  4984  0A6C  0DC5               	rlf	___fldiv@grs+3,f
  4985  0A6D  0BB6               	decfsz	??___fldiv,f
  4986  0A6E  2A68               	goto	u4785
  4987  0A6F  30FF               	movlw	255
  4988  0A70  07C0               	addwf	___fldiv@new_exp,f
  4989  0A71  1803               	skipnc
  4990  0A72  0AC1               	incf	___fldiv@new_exp+1,f
  4991  0A73  30FF               	movlw	255
  4992  0A74  07C1               	addwf	___fldiv@new_exp+1,f
  4993  0A75  2A59               	goto	l4953
  4994  0A76                     l4955:
  4995  0A76  01C7               	clrf	___fldiv@aexp
  4996  0A77  1FC5               	btfss	___fldiv@grs+3,7
  4997  0A78  2A8F               	goto	l4965
  4998  0A79  30FF               	movlw	255
  4999  0A7A  0542               	andwf	___fldiv@grs,w
  5000  0A7B  00B6               	movwf	??___fldiv
  5001  0A7C  30FF               	movlw	255
  5002  0A7D  0543               	andwf	___fldiv@grs+1,w
  5003  0A7E  00B7               	movwf	??___fldiv+1
  5004  0A7F  30FF               	movlw	255
  5005  0A80  0544               	andwf	___fldiv@grs+2,w
  5006  0A81  00B8               	movwf	??___fldiv+2
  5007  0A82  307F               	movlw	127
  5008  0A83  0545               	andwf	___fldiv@grs+3,w
  5009  0A84  00B9               	movwf	??___fldiv+3
  5010  0A85  0839               	movf	??___fldiv+3,w
  5011  0A86  0438               	iorwf	??___fldiv+2,w
  5012  0A87  0437               	iorwf	??___fldiv+1,w
  5013  0A88  0436               	iorwf	??___fldiv,w
  5014  0A89  1903               	skipnz
  5015  0A8A  1832               	btfsc	___fldiv@b,0
  5016  0A8B  2A8D               	goto	l4961
  5017  0A8C  2A8F               	goto	l4965
  5018  0A8D                     l4961:
  5019  0A8D  01C7               	clrf	___fldiv@aexp
  5020  0A8E  0AC7               	incf	___fldiv@aexp,f
  5021  0A8F                     l4965:
  5022  0A8F  0847               	movf	___fldiv@aexp,w
  5023  0A90  1903               	btfsc	3,2
  5024  0A91  2AC1               	goto	l4975
  5025  0A92  3001               	movlw	1
  5026  0A93  07B2               	addwf	___fldiv@b,f
  5027  0A94  3000               	movlw	0
  5028  0A95  1803               	skipnc
  5029  0A96  3001               	movlw	1
  5030  0A97  07B3               	addwf	___fldiv@b+1,f
  5031  0A98  3000               	movlw	0
  5032  0A99  1803               	skipnc
  5033  0A9A  3001               	movlw	1
  5034  0A9B  07B4               	addwf	___fldiv@b+2,f
  5035  0A9C  3000               	movlw	0
  5036  0A9D  1803               	skipnc
  5037  0A9E  3001               	movlw	1
  5038  0A9F  07B5               	addwf	___fldiv@b+3,f
  5039  0AA0  1C35               	btfss	___fldiv@b+3,0
  5040  0AA1  2AC1               	goto	l4975
  5041  0AA2  0832               	movf	___fldiv@b,w
  5042  0AA3  00B6               	movwf	??___fldiv
  5043  0AA4  0833               	movf	___fldiv@b+1,w
  5044  0AA5  00B7               	movwf	??___fldiv+1
  5045  0AA6  0834               	movf	___fldiv@b+2,w
  5046  0AA7  00B8               	movwf	??___fldiv+2
  5047  0AA8  0835               	movf	___fldiv@b+3,w
  5048  0AA9  00B9               	movwf	??___fldiv+3
  5049  0AAA  3001               	movlw	1
  5050  0AAB  00BA               	movwf	??___fldiv+4
  5051  0AAC                     u4855:
  5052  0AAC  0D39               	rlf	??___fldiv+3,w
  5053  0AAD  0CB9               	rrf	??___fldiv+3,f
  5054  0AAE  0CB8               	rrf	??___fldiv+2,f
  5055  0AAF  0CB7               	rrf	??___fldiv+1,f
  5056  0AB0  0CB6               	rrf	??___fldiv,f
  5057  0AB1  0BBA               	decfsz	??___fldiv+4,f
  5058  0AB2  2AAC               	goto	u4855
  5059  0AB3  0839               	movf	??___fldiv+3,w
  5060  0AB4  00B5               	movwf	___fldiv@b+3
  5061  0AB5  0838               	movf	??___fldiv+2,w
  5062  0AB6  00B4               	movwf	___fldiv@b+2
  5063  0AB7  0837               	movf	??___fldiv+1,w
  5064  0AB8  00B3               	movwf	___fldiv@b+1
  5065  0AB9  0836               	movf	??___fldiv,w
  5066  0ABA  00B2               	movwf	___fldiv@b
  5067  0ABB  3001               	movlw	1
  5068  0ABC  07C0               	addwf	___fldiv@new_exp,f
  5069  0ABD  1803               	skipnc
  5070  0ABE  0AC1               	incf	___fldiv@new_exp+1,f
  5071  0ABF  3000               	movlw	0
  5072  0AC0  07C1               	addwf	___fldiv@new_exp+1,f
  5073  0AC1                     l4975:
  5074  0AC1  0841               	movf	___fldiv@new_exp+1,w
  5075  0AC2  3A80               	xorlw	128
  5076  0AC3  00FF               	movwf	127
  5077  0AC4  3080               	movlw	128
  5078  0AC5  027F               	subwf	127,w
  5079  0AC6  1D03               	skipz
  5080  0AC7  2ACA               	goto	u4865
  5081  0AC8  30FF               	movlw	255
  5082  0AC9  0240               	subwf	___fldiv@new_exp,w
  5083  0ACA                     u4865:
  5084  0ACA  1C03               	skipc
  5085  0ACB  2ADA               	goto	l4979
  5086  0ACC  30FF               	movlw	255
  5087  0ACD  1283               	bcf	3,5	;RP0=0, select bank0
  5088  0ACE  1303               	bcf	3,6	;RP1=0, select bank0
  5089  0ACF  00C0               	movwf	___fldiv@new_exp
  5090  0AD0  3000               	movlw	0
  5091  0AD1  00C1               	movwf	___fldiv@new_exp+1
  5092  0AD2  3000               	movlw	0
  5093  0AD3  00B5               	movwf	___fldiv@b+3
  5094  0AD4  3000               	movlw	0
  5095  0AD5  00B4               	movwf	___fldiv@b+2
  5096  0AD6  3000               	movlw	0
  5097  0AD7  00B3               	movwf	___fldiv@b+1
  5098  0AD8  3000               	movlw	0
  5099  0AD9  00B2               	movwf	___fldiv@b
  5100  0ADA                     l4979:
  5101  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  5102  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  5103  0ADC  0841               	movf	___fldiv@new_exp+1,w
  5104  0ADD  3A80               	xorlw	128
  5105  0ADE  00FF               	movwf	127
  5106  0ADF  3080               	movlw	128
  5107  0AE0  027F               	subwf	127,w
  5108  0AE1  1D03               	skipz
  5109  0AE2  2AE5               	goto	u4875
  5110  0AE3  3001               	movlw	1
  5111  0AE4  0240               	subwf	___fldiv@new_exp,w
  5112  0AE5                     u4875:
  5113  0AE5  1803               	skipnc
  5114  0AE6  2AF4               	goto	l1368
  5115  0AE7  1283               	bcf	3,5	;RP0=0, select bank0
  5116  0AE8  1303               	bcf	3,6	;RP1=0, select bank0
  5117  0AE9  01C0               	clrf	___fldiv@new_exp
  5118  0AEA  01C1               	clrf	___fldiv@new_exp+1
  5119  0AEB  3000               	movlw	0
  5120  0AEC  00B5               	movwf	___fldiv@b+3
  5121  0AED  3000               	movlw	0
  5122  0AEE  00B4               	movwf	___fldiv@b+2
  5123  0AEF  3000               	movlw	0
  5124  0AF0  00B3               	movwf	___fldiv@b+1
  5125  0AF1  3000               	movlw	0
  5126  0AF2  00B2               	movwf	___fldiv@b
  5127  0AF3  01BF               	clrf	___fldiv@sign
  5128  0AF4                     l1368:
  5129  0AF4  1283               	bcf	3,5	;RP0=0, select bank0
  5130  0AF5  1303               	bcf	3,6	;RP1=0, select bank0
  5131  0AF6  0840               	movf	___fldiv@new_exp,w
  5132  0AF7  00B6               	movwf	??___fldiv
  5133  0AF8  0836               	movf	??___fldiv,w
  5134  0AF9  00C6               	movwf	___fldiv@bexp
  5135  0AFA  1C46               	btfss	___fldiv@bexp,0
  5136  0AFB  2AFE               	goto	l4991
  5137  0AFC  17B4               	bsf	___fldiv@b+2,7
  5138  0AFD  2B02               	goto	l1370
  5139  0AFE                     l4991:
  5140  0AFE  307F               	movlw	127
  5141  0AFF  00B6               	movwf	??___fldiv
  5142  0B00  0836               	movf	??___fldiv,w
  5143  0B01  05B4               	andwf	___fldiv@b+2,f
  5144  0B02                     l1370:
  5145  0B02  0846               	movf	___fldiv@bexp,w
  5146  0B03  00B6               	movwf	??___fldiv
  5147  0B04  1003               	clrc
  5148  0B05  0C36               	rrf	??___fldiv,w
  5149  0B06  00B7               	movwf	??___fldiv+1
  5150  0B07  0837               	movf	??___fldiv+1,w
  5151  0B08  00B5               	movwf	___fldiv@b+3
  5152  0B09  29C7               	goto	L7
  5153  0B0A                     __end_of___fldiv:
  5154                           
  5155                           	psect	text7
  5156  1A3A                     __ptext7:	
  5157 ;; *************** function _Package_Usart_is_for_me *****************
  5158 ;; Defined at:
  5159 ;;		line 8 in file "protocolo.c"
  5160 ;; Parameters:    Size  Location     Type
  5161 ;;		None
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;  retorno         1    0[BANK0 ] unsigned char 
  5164 ;; Return value:  Size  Location     Type
  5165 ;;                  1    wreg      unsigned char 
  5166 ;; Registers used:
  5167 ;;		wreg, status,2, status,0
  5168 ;; Tracked objects:
  5169 ;;		On entry : 300/100
  5170 ;;		On exit  : 300/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5173 ;;      Params:         0       0       0       0       0
  5174 ;;      Locals:         0       1       0       0       0
  5175 ;;      Temps:          0       0       0       0       0
  5176 ;;      Totals:         0       1       0       0       0
  5177 ;;Total ram usage:        1 bytes
  5178 ;; Hardware stack levels used: 1
  5179 ;; Hardware stack levels required when called: 1
  5180 ;; This function calls:
  5181 ;;		Nothing
  5182 ;; This function is called by:
  5183 ;;		_MediaPlacaVaccum
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187                           
  5188                           ;psect for function _Package_Usart_is_for_me
  5189  1A3A                     _Package_Usart_is_for_me:
  5190                           
  5191                           ;protocolo.c: 10:      if(generic_status.flag_usart_rx==1)
  5192                           
  5193                           ;incstack = 0
  5194                           ; Regs used in _Package_Usart_is_for_me: [wreg+status,2+status,0]
  5195  1A3A  1C64               	btfss	_generic_status^(0+128),0
  5196  1A3B  2A4E               	goto	l4797
  5197                           
  5198                           ;protocolo.c: 11:         {;protocolo.c: 12:         if((usart_buffer[3]==Board_Number)|
      +                          |(usart_buffer[3]==0XFF))
  5199  1A3C  1283               	bcf	3,5	;RP0=0, select bank2
  5200  1A3D  1703               	bsf	3,6	;RP1=1, select bank2
  5201  1A3E  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  5202  1A3F  1683               	bsf	3,5	;RP0=1, select bank1
  5203  1A40  1303               	bcf	3,6	;RP1=0, select bank1
  5204  1A41  0661               	xorwf	_Board_Number^(0+128),w
  5205  1A42  1903               	skipnz
  5206  1A43  2A49               	goto	l817
  5207  1A44  1283               	bcf	3,5	;RP0=0, select bank2
  5208  1A45  1703               	bsf	3,6	;RP1=1, select bank2
  5209  1A46  0A13               	incf	(_usart_buffer^(0+256)+3),w	;volatile
  5210  1A47  1D03               	btfss	3,2
  5211  1A48  2A4E               	goto	l4797
  5212  1A49                     l817:
  5213                           
  5214                           ;protocolo.c: 13:             retorno=1;
  5215  1A49  1283               	bcf	3,5	;RP0=0, select bank0
  5216  1A4A  1303               	bcf	3,6	;RP1=0, select bank0
  5217  1A4B  01A0               	clrf	Package_Usart_is_for_me@retorno
  5218  1A4C  0AA0               	incf	Package_Usart_is_for_me@retorno,f
  5219  1A4D  2A51               	goto	l4801
  5220  1A4E                     l4797:
  5221                           
  5222                           ;protocolo.c: 15:             retorno=0;
  5223  1A4E  1283               	bcf	3,5	;RP0=0, select bank0
  5224  1A4F  1303               	bcf	3,6	;RP1=0, select bank0
  5225  1A50  01A0               	clrf	Package_Usart_is_for_me@retorno
  5226  1A51                     l4801:
  5227                           
  5228                           ;protocolo.c: 21:      return retorno;
  5229  1A51  0820               	movf	Package_Usart_is_for_me@retorno,w
  5230  1A52  0008               	return
  5231  1A53                     __end_of_Package_Usart_is_for_me:
  5232                           
  5233                           	psect	text8
  5234  1F2D                     __ptext8:	
  5235 ;; *************** function _ADC_Media_10bits *****************
  5236 ;; Defined at:
  5237 ;;		line 20 in file "adc.c"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;  canal           1    wreg     unsigned char 
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;  canal           1   19[BANK0 ] unsigned char 
  5242 ;;  value           2   20[BANK0 ] unsigned int 
  5243 ;;  i               1   22[BANK0 ] unsigned char 
  5244 ;; Return value:  Size  Location     Type
  5245 ;;                  4   14[BANK0 ] float 
  5246 ;; Registers used:
  5247 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5248 ;; Tracked objects:
  5249 ;;		On entry : 300/100
  5250 ;;		On exit  : 300/0
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5253 ;;      Params:         0       4       0       0       0
  5254 ;;      Locals:         0       4       0       0       0
  5255 ;;      Temps:          0       1       0       0       0
  5256 ;;      Totals:         0       9       0       0       0
  5257 ;;Total ram usage:        9 bytes
  5258 ;; Hardware stack levels used: 1
  5259 ;; Hardware stack levels required when called: 2
  5260 ;; This function calls:
  5261 ;;		___lwdiv
  5262 ;;		___xxtofl
  5263 ;;		_captura
  5264 ;;		_my_delay_ms
  5265 ;; This function is called by:
  5266 ;;		_MediaPlacaVaccum
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270                           
  5271                           ;psect for function _ADC_Media_10bits
  5272  1F2D                     _ADC_Media_10bits:
  5273                           
  5274                           ;incstack = 0
  5275                           ; Regs used in _ADC_Media_10bits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5276                           ;ADC_Media_10bits@canal stored from wreg
  5277  1F2D  1283               	bcf	3,5	;RP0=0, select bank0
  5278  1F2E  00B3               	movwf	ADC_Media_10bits@canal
  5279                           
  5280                           ;adc.c: 21:       unsigned int value;;adc.c: 22:       unsigned char i;;adc.c: 23:      
      +                           ADCON0bits.CHS=canal;
  5281  1F2F  0833               	movf	ADC_Media_10bits@canal,w
  5282  1F30  00B2               	movwf	??_ADC_Media_10bits
  5283  1F31  0DB2               	rlf	??_ADC_Media_10bits,f
  5284  1F32  0DB2               	rlf	??_ADC_Media_10bits,f
  5285  1F33  081F               	movf	31,w	;volatile
  5286  1F34  0632               	xorwf	??_ADC_Media_10bits,w
  5287  1F35  39C3               	andlw	-61
  5288  1F36  0632               	xorwf	??_ADC_Media_10bits,w
  5289  1F37  009F               	movwf	31	;volatile
  5290                           
  5291                           ;adc.c: 24:       my_delay_ms(1);
  5292  1F38  3000               	movlw	0
  5293  1F39  00A3               	movwf	my_delay_ms@time+3
  5294  1F3A  3000               	movlw	0
  5295  1F3B  00A2               	movwf	my_delay_ms@time+2
  5296  1F3C  3000               	movlw	0
  5297  1F3D  00A1               	movwf	my_delay_ms@time+1
  5298  1F3E  3001               	movlw	1
  5299  1F3F  00A0               	movwf	my_delay_ms@time
  5300  1F40  160A  158A  252B  160A  158A  	fcall	_my_delay_ms
  5301                           
  5302                           ;adc.c: 26:       value=0;
  5303  1F45  01B4               	clrf	ADC_Media_10bits@value
  5304  1F46  01B5               	clrf	ADC_Media_10bits@value+1
  5305                           
  5306                           ;adc.c: 27:       for(i=1;i<=50;i++)
  5307  1F47  01B6               	clrf	ADC_Media_10bits@i
  5308  1F48  0AB6               	incf	ADC_Media_10bits@i,f
  5309  1F49                     l4779:
  5310                           
  5311                           ;adc.c: 28:           value+=captura();
  5312  1F49  120A  118A  27F6  160A  158A  	fcall	_captura
  5313  1F4E  0820               	movf	?_captura,w
  5314  1F4F  07B4               	addwf	ADC_Media_10bits@value,f
  5315  1F50  1803               	skipnc
  5316  1F51  0AB5               	incf	ADC_Media_10bits@value+1,f
  5317  1F52  0821               	movf	?_captura+1,w
  5318  1F53  07B5               	addwf	ADC_Media_10bits@value+1,f
  5319  1F54  3001               	movlw	1
  5320  1F55  00B2               	movwf	??_ADC_Media_10bits
  5321  1F56  0832               	movf	??_ADC_Media_10bits,w
  5322  1F57  07B6               	addwf	ADC_Media_10bits@i,f
  5323  1F58  3033               	movlw	51
  5324  1F59  0236               	subwf	ADC_Media_10bits@i,w
  5325  1F5A  1C03               	skipc
  5326  1F5B  2F49               	goto	l4779
  5327                           
  5328                           ;adc.c: 29:       value/=(i-1);
  5329  1F5C  0836               	movf	ADC_Media_10bits@i,w
  5330  1F5D  3EFF               	addlw	255
  5331  1F5E  00A0               	movwf	___lwdiv@divisor
  5332  1F5F  30FF               	movlw	255
  5333  1F60  1803               	skipnc
  5334  1F61  3000               	movlw	0
  5335  1F62  00A1               	movwf	___lwdiv@divisor+1
  5336  1F63  0835               	movf	ADC_Media_10bits@value+1,w
  5337  1F64  00A3               	movwf	___lwdiv@dividend+1
  5338  1F65  0834               	movf	ADC_Media_10bits@value,w
  5339  1F66  00A2               	movwf	___lwdiv@dividend
  5340  1F67  160A  158A  25D6  160A  158A  	fcall	___lwdiv
  5341  1F6C  0821               	movf	?___lwdiv+1,w
  5342  1F6D  00B5               	movwf	ADC_Media_10bits@value+1
  5343  1F6E  0820               	movf	?___lwdiv,w
  5344  1F6F  00B4               	movwf	ADC_Media_10bits@value
  5345                           
  5346                           ;adc.c: 30:       return value;
  5347  1F70  0834               	movf	ADC_Media_10bits@value,w
  5348  1F71  00A0               	movwf	___xxtofl@val
  5349  1F72  0835               	movf	ADC_Media_10bits@value+1,w
  5350  1F73  00A1               	movwf	___xxtofl@val+1
  5351  1F74  01A2               	clrf	___xxtofl@val+2
  5352  1F75  01A3               	clrf	___xxtofl@val+3
  5353  1F76  3000               	movlw	0
  5354  1F77  160A  118A  2106   	fcall	___xxtofl
  5355  1F7A  0823               	movf	?___xxtofl+3,w
  5356  1F7B  00B1               	movwf	?_ADC_Media_10bits+3
  5357  1F7C  0822               	movf	?___xxtofl+2,w
  5358  1F7D  00B0               	movwf	?_ADC_Media_10bits+2
  5359  1F7E  0821               	movf	?___xxtofl+1,w
  5360  1F7F  00AF               	movwf	?_ADC_Media_10bits+1
  5361  1F80  0820               	movf	?___xxtofl,w
  5362  1F81  00AE               	movwf	?_ADC_Media_10bits
  5363  1F82  0008               	return
  5364  1F83                     __end_of_ADC_Media_10bits:
  5365                           
  5366                           	psect	text9
  5367  1D2B                     __ptext9:	
  5368 ;; *************** function _my_delay_ms *****************
  5369 ;; Defined at:
  5370 ;;		line 5 in file "my_delay.c"
  5371 ;; Parameters:    Size  Location     Type
  5372 ;;  time            4    0[BANK0 ] long 
  5373 ;; Auto vars:     Size  Location     Type
  5374 ;;  i               4    6[BANK0 ] long 
  5375 ;; Return value:  Size  Location     Type
  5376 ;;                  1    wreg      void 
  5377 ;; Registers used:
  5378 ;;		wreg, btemp+1
  5379 ;; Tracked objects:
  5380 ;;		On entry : 300/0
  5381 ;;		On exit  : 300/0
  5382 ;;		Unchanged: 0/0
  5383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5384 ;;      Params:         0       4       0       0       0
  5385 ;;      Locals:         0       4       0       0       0
  5386 ;;      Temps:          0       2       0       0       0
  5387 ;;      Totals:         0      10       0       0       0
  5388 ;;Total ram usage:       10 bytes
  5389 ;; Hardware stack levels used: 1
  5390 ;; Hardware stack levels required when called: 1
  5391 ;; This function calls:
  5392 ;;		Nothing
  5393 ;; This function is called by:
  5394 ;;		_MediaPlacaVaccum
  5395 ;;		_ADC_Media_10bits
  5396 ;; This function uses a non-reentrant model
  5397 ;;
  5398                           
  5399                           
  5400                           ;psect for function _my_delay_ms
  5401  1D2B                     _my_delay_ms:
  5402                           
  5403                           ;my_delay.c: 6:         long i;;my_delay.c: 7:         for(i=0;i<time;i++)
  5404                           
  5405                           ;incstack = 0
  5406                           ; Regs used in _my_delay_ms: [wreg+btemp+1]
  5407  1D2B  3000               	movlw	0
  5408  1D2C  00A9               	movwf	my_delay_ms@i+3
  5409  1D2D  3000               	movlw	0
  5410  1D2E  00A8               	movwf	my_delay_ms@i+2
  5411  1D2F  3000               	movlw	0
  5412  1D30  00A7               	movwf	my_delay_ms@i+1
  5413  1D31  3000               	movlw	0
  5414  1D32  00A6               	movwf	my_delay_ms@i
  5415  1D33                     l3889:
  5416  1D33  0829               	movf	my_delay_ms@i+3,w
  5417  1D34  3A80               	xorlw	128
  5418  1D35  00FF               	movwf	127
  5419  1D36  0823               	movf	my_delay_ms@time+3,w
  5420  1D37  3A80               	xorlw	128
  5421  1D38  027F               	subwf	127,w
  5422  1D39  1D03               	skipz
  5423  1D3A  2D45               	goto	u2993
  5424  1D3B  0822               	movf	my_delay_ms@time+2,w
  5425  1D3C  0228               	subwf	my_delay_ms@i+2,w
  5426  1D3D  1D03               	skipz
  5427  1D3E  2D45               	goto	u2993
  5428  1D3F  0821               	movf	my_delay_ms@time+1,w
  5429  1D40  0227               	subwf	my_delay_ms@i+1,w
  5430  1D41  1D03               	skipz
  5431  1D42  2D45               	goto	u2993
  5432  1D43  0820               	movf	my_delay_ms@time,w
  5433  1D44  0226               	subwf	my_delay_ms@i,w
  5434  1D45                     u2993:
  5435  1D45  1803               	btfsc	3,0
  5436  1D46  0008               	return
  5437                           
  5438                           ;my_delay.c: 8:             {;my_delay.c: 9:             _delay((unsigned long)((1)*(800
      +                          0000/4000.0)));
  5439  1D47  3003               	movlw	3
  5440  1D48  1283               	bcf	3,5	;RP0=0, select bank0
  5441  1D49  1303               	bcf	3,6	;RP1=0, select bank0
  5442  1D4A  00A5               	movwf	??_my_delay_ms+1
  5443  1D4B  3097               	movlw	151
  5444  1D4C  00A4               	movwf	??_my_delay_ms
  5445  1D4D                     u5527:
  5446  1D4D  0BA4               	decfsz	??_my_delay_ms,f
  5447  1D4E  2D4D               	goto	u5527
  5448  1D4F  0BA5               	decfsz	??_my_delay_ms+1,f
  5449  1D50  2D4D               	goto	u5527
  5450                           
  5451                           ;my_delay.c: 10:             }
  5452  1D51  3001               	movlw	1
  5453  1D52  1283               	bcf	3,5	;RP0=0, select bank0
  5454  1D53  1303               	bcf	3,6	;RP1=0, select bank0
  5455  1D54  07A6               	addwf	my_delay_ms@i,f
  5456  1D55  3000               	movlw	0
  5457  1D56  1803               	skipnc
  5458  1D57  3001               	movlw	1
  5459  1D58  07A7               	addwf	my_delay_ms@i+1,f
  5460  1D59  3000               	movlw	0
  5461  1D5A  1803               	skipnc
  5462  1D5B  3001               	movlw	1
  5463  1D5C  07A8               	addwf	my_delay_ms@i+2,f
  5464  1D5D  3000               	movlw	0
  5465  1D5E  1803               	skipnc
  5466  1D5F  3001               	movlw	1
  5467  1D60  07A9               	addwf	my_delay_ms@i+3,f
  5468  1D61  2D33               	goto	l3889
  5469  1D62                     __end_of_my_delay_ms:
  5470                           
  5471                           	psect	text10
  5472  07F6                     __ptext10:	
  5473 ;; *************** function _captura *****************
  5474 ;; Defined at:
  5475 ;;		line 140 in file "adc.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;		None
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;		None
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  2    0[BANK0 ] unsigned int 
  5482 ;; Registers used:
  5483 ;;		wreg
  5484 ;; Tracked objects:
  5485 ;;		On entry : 300/0
  5486 ;;		On exit  : 300/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5489 ;;      Params:         0       2       0       0       0
  5490 ;;      Locals:         0       0       0       0       0
  5491 ;;      Temps:          0       0       0       0       0
  5492 ;;      Totals:         0       2       0       0       0
  5493 ;;Total ram usage:        2 bytes
  5494 ;; Hardware stack levels used: 1
  5495 ;; Hardware stack levels required when called: 1
  5496 ;; This function calls:
  5497 ;;		Nothing
  5498 ;; This function is called by:
  5499 ;;		_ADC_Media_10bits
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           
  5504                           ;psect for function _captura
  5505  07F6                     _captura:
  5506                           
  5507                           ;adc.c: 141:     ADCON0bits.GO=1;
  5508                           
  5509                           ;incstack = 0
  5510                           ; Regs used in _captura: [wreg]
  5511  07F6  149F               	bsf	31,1	;volatile
  5512  07F7                     l495:	
  5513                           ;adc.c: 145:           }
  5514                           
  5515                           
  5516                           ;adc.c: 142:     while(ADCON0bits.GO)
  5517  07F7  189F               	btfsc	31,1	;volatile
  5518  07F8  2FF7               	goto	l495
  5519                           
  5520                           ;adc.c: 146:     return ((ADRESH<<8)+ADRESL);
  5521  07F9  081E               	movf	30,w	;volatile
  5522  07FA  00A1               	movwf	?_captura+1
  5523  07FB  1683               	bsf	3,5	;RP0=1, select bank1
  5524  07FC  081E               	movf	30,w	;volatile
  5525  07FD  1283               	bcf	3,5	;RP0=0, select bank0
  5526  07FE  00A0               	movwf	?_captura
  5527  07FF  0008               	return
  5528  0800                     __end_of_captura:
  5529                           
  5530                           	psect	text11
  5531  1106                     __ptext11:	
  5532 ;; *************** function ___xxtofl *****************
  5533 ;; Defined at:
  5534 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  5535 ;; Parameters:    Size  Location     Type
  5536 ;;  sign            1    wreg     unsigned char 
  5537 ;;  val             4    0[BANK0 ] long 
  5538 ;; Auto vars:     Size  Location     Type
  5539 ;;  sign            1    8[BANK0 ] unsigned char 
  5540 ;;  arg             4   10[BANK0 ] unsigned long 
  5541 ;;  exp             1    9[BANK0 ] unsigned char 
  5542 ;; Return value:  Size  Location     Type
  5543 ;;                  4    0[BANK0 ] unsigned char 
  5544 ;; Registers used:
  5545 ;;		wreg, status,2, status,0
  5546 ;; Tracked objects:
  5547 ;;		On entry : 300/0
  5548 ;;		On exit  : 300/0
  5549 ;;		Unchanged: 0/0
  5550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5551 ;;      Params:         0       4       0       0       0
  5552 ;;      Locals:         0       6       0       0       0
  5553 ;;      Temps:          0       4       0       0       0
  5554 ;;      Totals:         0      14       0       0       0
  5555 ;;Total ram usage:       14 bytes
  5556 ;; Hardware stack levels used: 1
  5557 ;; Hardware stack levels required when called: 1
  5558 ;; This function calls:
  5559 ;;		Nothing
  5560 ;; This function is called by:
  5561 ;;		_MediaPlacaVaccum
  5562 ;;		_ADC_Media_10bits
  5563 ;; This function uses a non-reentrant model
  5564 ;;
  5565                           
  5566                           
  5567                           ;psect for function ___xxtofl
  5568  1106                     ___xxtofl:
  5569                           
  5570                           ;incstack = 0
  5571                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5572                           ;___xxtofl@sign stored from wreg
  5573  1106  00A8               	movwf	___xxtofl@sign
  5574  1107  0828               	movf	___xxtofl@sign,w
  5575  1108  1D03               	btfss	3,2
  5576  1109  1FA3               	btfss	___xxtofl@val+3,7
  5577  110A  291B               	goto	l4331
  5578  110B  0920               	comf	___xxtofl@val,w
  5579  110C  00AA               	movwf	___xxtofl@arg
  5580  110D  0921               	comf	___xxtofl@val+1,w
  5581  110E  00AB               	movwf	___xxtofl@arg+1
  5582  110F  0922               	comf	___xxtofl@val+2,w
  5583  1110  00AC               	movwf	___xxtofl@arg+2
  5584  1111  0923               	comf	___xxtofl@val+3,w
  5585  1112  00AD               	movwf	___xxtofl@arg+3
  5586  1113  0AAA               	incf	___xxtofl@arg,f
  5587  1114  1903               	skipnz
  5588  1115  0AAB               	incf	___xxtofl@arg+1,f
  5589  1116  1903               	skipnz
  5590  1117  0AAC               	incf	___xxtofl@arg+2,f
  5591  1118  1903               	skipnz
  5592  1119  0AAD               	incf	___xxtofl@arg+3,f
  5593  111A  2923               	goto	l1430
  5594  111B                     l4331:
  5595  111B  0823               	movf	___xxtofl@val+3,w
  5596  111C  00AD               	movwf	___xxtofl@arg+3
  5597  111D  0822               	movf	___xxtofl@val+2,w
  5598  111E  00AC               	movwf	___xxtofl@arg+2
  5599  111F  0821               	movf	___xxtofl@val+1,w
  5600  1120  00AB               	movwf	___xxtofl@arg+1
  5601  1121  0820               	movf	___xxtofl@val,w
  5602  1122  00AA               	movwf	___xxtofl@arg
  5603  1123                     l1430:
  5604  1123  0823               	movf	___xxtofl@val+3,w
  5605  1124  0422               	iorwf	___xxtofl@val+2,w
  5606  1125  0421               	iorwf	___xxtofl@val+1,w
  5607  1126  0420               	iorwf	___xxtofl@val,w
  5608  1127  1D03               	skipz
  5609  1128  2932               	goto	l4337
  5610  1129  3000               	movlw	0
  5611  112A  00A3               	movwf	?___xxtofl+3
  5612  112B  3000               	movlw	0
  5613  112C  00A2               	movwf	?___xxtofl+2
  5614  112D  3000               	movlw	0
  5615  112E  00A1               	movwf	?___xxtofl+1
  5616  112F  3000               	movlw	0
  5617  1130  00A0               	movwf	?___xxtofl
  5618  1131  0008               	return
  5619  1132                     l4337:
  5620  1132  3096               	movlw	150
  5621  1133  00A4               	movwf	??___xxtofl
  5622  1134  0824               	movf	??___xxtofl,w
  5623  1135  00A9               	movwf	___xxtofl@exp
  5624  1136                     l4341:
  5625  1136  30FE               	movlw	254
  5626  1137  052D               	andwf	___xxtofl@arg+3,w
  5627  1138  1903               	btfsc	3,2
  5628  1139  2963               	goto	l1436
  5629  113A  3001               	movlw	1
  5630  113B  00A4               	movwf	??___xxtofl
  5631  113C  0824               	movf	??___xxtofl,w
  5632  113D  07A9               	addwf	___xxtofl@exp,f
  5633  113E  3001               	movlw	1
  5634  113F                     u4055:
  5635  113F  1003               	clrc
  5636  1140  0CAD               	rrf	___xxtofl@arg+3,f
  5637  1141  0CAC               	rrf	___xxtofl@arg+2,f
  5638  1142  0CAB               	rrf	___xxtofl@arg+1,f
  5639  1143  0CAA               	rrf	___xxtofl@arg,f
  5640  1144  3EFF               	addlw	-1
  5641  1145  1D03               	skipz
  5642  1146  293F               	goto	u4055
  5643  1147  2936               	goto	l4341
  5644  1148                     l4343:
  5645  1148  3001               	movlw	1
  5646  1149  00A4               	movwf	??___xxtofl
  5647  114A  0824               	movf	??___xxtofl,w
  5648  114B  07A9               	addwf	___xxtofl@exp,f
  5649  114C  3001               	movlw	1
  5650  114D  07AA               	addwf	___xxtofl@arg,f
  5651  114E  3000               	movlw	0
  5652  114F  1803               	skipnc
  5653  1150  3001               	movlw	1
  5654  1151  07AB               	addwf	___xxtofl@arg+1,f
  5655  1152  3000               	movlw	0
  5656  1153  1803               	skipnc
  5657  1154  3001               	movlw	1
  5658  1155  07AC               	addwf	___xxtofl@arg+2,f
  5659  1156  3000               	movlw	0
  5660  1157  1803               	skipnc
  5661  1158  3001               	movlw	1
  5662  1159  07AD               	addwf	___xxtofl@arg+3,f
  5663  115A  3001               	movlw	1
  5664  115B                     u4075:
  5665  115B  1003               	clrc
  5666  115C  0CAD               	rrf	___xxtofl@arg+3,f
  5667  115D  0CAC               	rrf	___xxtofl@arg+2,f
  5668  115E  0CAB               	rrf	___xxtofl@arg+1,f
  5669  115F  0CAA               	rrf	___xxtofl@arg,f
  5670  1160  3EFF               	addlw	-1
  5671  1161  1D03               	skipz
  5672  1162  295B               	goto	u4075
  5673  1163                     l1436:
  5674  1163  30FF               	movlw	255
  5675  1164  052D               	andwf	___xxtofl@arg+3,w
  5676  1165  1903               	btfsc	3,2
  5677  1166  2977               	goto	l4351
  5678  1167  2948               	goto	l4343
  5679  1168                     l4353:
  5680  1168  3002               	movlw	2
  5681  1169  0229               	subwf	___xxtofl@exp,w
  5682  116A  1C03               	btfss	3,0
  5683  116B  2979               	goto	l1443
  5684  116C  3001               	movlw	1
  5685  116D  02A9               	subwf	___xxtofl@exp,f
  5686  116E  3001               	movlw	1
  5687  116F  00A4               	movwf	??___xxtofl
  5688  1170                     u4095:
  5689  1170  1003               	clrc
  5690  1171  0DAA               	rlf	___xxtofl@arg,f
  5691  1172  0DAB               	rlf	___xxtofl@arg+1,f
  5692  1173  0DAC               	rlf	___xxtofl@arg+2,f
  5693  1174  0DAD               	rlf	___xxtofl@arg+3,f
  5694  1175  0BA4               	decfsz	??___xxtofl,f
  5695  1176  2970               	goto	u4095
  5696  1177                     l4351:
  5697  1177  1FAC               	btfss	___xxtofl@arg+2,7
  5698  1178  2968               	goto	l4353
  5699  1179                     l1443:
  5700  1179  1829               	btfsc	___xxtofl@exp,0
  5701  117A  2983               	goto	l1444
  5702  117B  30FF               	movlw	255
  5703  117C  05AA               	andwf	___xxtofl@arg,f
  5704  117D  30FF               	movlw	255
  5705  117E  05AB               	andwf	___xxtofl@arg+1,f
  5706  117F  307F               	movlw	127
  5707  1180  05AC               	andwf	___xxtofl@arg+2,f
  5708  1181  30FF               	movlw	255
  5709  1182  05AD               	andwf	___xxtofl@arg+3,f
  5710  1183                     l1444:
  5711  1183  1003               	clrc
  5712  1184  0CA9               	rrf	___xxtofl@exp,f
  5713  1185  0829               	movf	___xxtofl@exp,w
  5714  1186  00A4               	movwf	??___xxtofl
  5715  1187  01A5               	clrf	??___xxtofl+1
  5716  1188  01A6               	clrf	??___xxtofl+2
  5717  1189  01A7               	clrf	??___xxtofl+3
  5718  118A  3018               	movlw	24
  5719  118B                     u4135:
  5720  118B  1003               	clrc
  5721  118C  0DA4               	rlf	??___xxtofl,f
  5722  118D  0DA5               	rlf	??___xxtofl+1,f
  5723  118E  0DA6               	rlf	??___xxtofl+2,f
  5724  118F  0DA7               	rlf	??___xxtofl+3,f
  5725  1190  3EFF               	addlw	-1
  5726  1191  1D03               	skipz
  5727  1192  298B               	goto	u4135
  5728  1193  0824               	movf	??___xxtofl,w
  5729  1194  04AA               	iorwf	___xxtofl@arg,f
  5730  1195  0825               	movf	??___xxtofl+1,w
  5731  1196  04AB               	iorwf	___xxtofl@arg+1,f
  5732  1197  0826               	movf	??___xxtofl+2,w
  5733  1198  04AC               	iorwf	___xxtofl@arg+2,f
  5734  1199  0827               	movf	??___xxtofl+3,w
  5735  119A  04AD               	iorwf	___xxtofl@arg+3,f
  5736  119B  0828               	movf	___xxtofl@sign,w
  5737  119C  1D03               	btfss	3,2
  5738  119D  1FA3               	btfss	___xxtofl@val+3,7
  5739  119E  29A0               	goto	l4365
  5740  119F  17AD               	bsf	___xxtofl@arg+3,7
  5741  11A0                     l4365:
  5742  11A0  082D               	movf	___xxtofl@arg+3,w
  5743  11A1  00A3               	movwf	?___xxtofl+3
  5744  11A2  082C               	movf	___xxtofl@arg+2,w
  5745  11A3  00A2               	movwf	?___xxtofl+2
  5746  11A4  082B               	movf	___xxtofl@arg+1,w
  5747  11A5  00A1               	movwf	?___xxtofl+1
  5748  11A6  082A               	movf	___xxtofl@arg,w
  5749  11A7  00A0               	movwf	?___xxtofl
  5750  11A8  0008               	return
  5751  11A9                     __end_of___xxtofl:
  5752                           
  5753                           	psect	text12
  5754  1C2A                     __ptext12:	
  5755 ;; *************** function _I2C_Master_Init *****************
  5756 ;; Defined at:
  5757 ;;		line 7 in file "I2C.c"
  5758 ;; Parameters:    Size  Location     Type
  5759 ;;  c               4   14[BANK0 ] const unsigned long 
  5760 ;; Auto vars:     Size  Location     Type
  5761 ;;		None
  5762 ;; Return value:  Size  Location     Type
  5763 ;;                  1    wreg      void 
  5764 ;; Registers used:
  5765 ;;		wreg, status,2, status,0, pclath, cstack
  5766 ;; Tracked objects:
  5767 ;;		On entry : 300/0
  5768 ;;		On exit  : 300/100
  5769 ;;		Unchanged: 0/0
  5770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5771 ;;      Params:         0       4       0       0       0
  5772 ;;      Locals:         0       0       0       0       0
  5773 ;;      Temps:          0       4       0       0       0
  5774 ;;      Totals:         0       8       0       0       0
  5775 ;;Total ram usage:        8 bytes
  5776 ;; Hardware stack levels used: 1
  5777 ;; Hardware stack levels required when called: 2
  5778 ;; This function calls:
  5779 ;;		___lldiv
  5780 ;; This function is called by:
  5781 ;;		_main
  5782 ;; This function uses a non-reentrant model
  5783 ;;
  5784                           
  5785                           
  5786                           ;psect for function _I2C_Master_Init
  5787  1C2A                     _I2C_Master_Init:
  5788                           
  5789                           ;I2C.c: 7: void I2C_Master_Init(const unsigned long c);I2C.c: 8: {;I2C.c: 10:   SSPCON =
      +                           0b00101000;
  5790                           
  5791                           ;incstack = 0
  5792                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  5793  1C2A  3028               	movlw	40
  5794  1C2B  0094               	movwf	20	;volatile
  5795                           
  5796                           ;I2C.c: 11:   SSPCON2 = 0;
  5797  1C2C  1683               	bsf	3,5	;RP0=1, select bank1
  5798  1C2D  0191               	clrf	17	;volatile
  5799                           
  5800                           ;I2C.c: 12:   SSPADD = ( 8000000 /(4*c))-1;
  5801  1C2E  1283               	bcf	3,5	;RP0=0, select bank0
  5802  1C2F  082E               	movf	I2C_Master_Init@c,w
  5803  1C30  00B2               	movwf	??_I2C_Master_Init
  5804  1C31  082F               	movf	I2C_Master_Init@c+1,w
  5805  1C32  00B3               	movwf	??_I2C_Master_Init+1
  5806  1C33  0830               	movf	I2C_Master_Init@c+2,w
  5807  1C34  00B4               	movwf	??_I2C_Master_Init+2
  5808  1C35  0831               	movf	I2C_Master_Init@c+3,w
  5809  1C36  00B5               	movwf	??_I2C_Master_Init+3
  5810  1C37  3002               	movlw	2
  5811  1C38                     u4895:
  5812  1C38  1003               	clrc
  5813  1C39  0DB2               	rlf	??_I2C_Master_Init,f
  5814  1C3A  0DB3               	rlf	??_I2C_Master_Init+1,f
  5815  1C3B  0DB4               	rlf	??_I2C_Master_Init+2,f
  5816  1C3C  0DB5               	rlf	??_I2C_Master_Init+3,f
  5817  1C3D  3EFF               	addlw	-1
  5818  1C3E  1D03               	skipz
  5819  1C3F  2C38               	goto	u4895
  5820  1C40  0835               	movf	??_I2C_Master_Init+3,w
  5821  1C41  00A3               	movwf	___lldiv@divisor+3
  5822  1C42  0834               	movf	??_I2C_Master_Init+2,w
  5823  1C43  00A2               	movwf	___lldiv@divisor+2
  5824  1C44  0833               	movf	??_I2C_Master_Init+1,w
  5825  1C45  00A1               	movwf	___lldiv@divisor+1
  5826  1C46  0832               	movf	??_I2C_Master_Init,w
  5827  1C47  00A0               	movwf	___lldiv@divisor
  5828  1C48  3000               	movlw	0
  5829  1C49  00A7               	movwf	___lldiv@dividend+3
  5830  1C4A  307A               	movlw	122
  5831  1C4B  00A6               	movwf	___lldiv@dividend+2
  5832  1C4C  3012               	movlw	18
  5833  1C4D  00A5               	movwf	___lldiv@dividend+1
  5834  1C4E  3000               	movlw	0
  5835  1C4F  00A4               	movwf	___lldiv@dividend
  5836  1C50  160A  118A  2015   	fcall	___lldiv
  5837  1C53  0820               	movf	?___lldiv,w
  5838  1C54  3EFF               	addlw	255
  5839  1C55  1683               	bsf	3,5	;RP0=1, select bank1
  5840  1C56  0093               	movwf	19	;volatile
  5841                           
  5842                           ;I2C.c: 13:   SSPSTAT = 0;
  5843  1C57  0194               	clrf	20	;volatile
  5844                           
  5845                           ;I2C.c: 14:   TRISC3 = 1;
  5846  1C58  1587               	bsf	7,3	;volatile
  5847                           
  5848                           ;I2C.c: 15:   TRISC4 = 1;
  5849  1C59  1607               	bsf	7,4	;volatile
  5850  1C5A  0008               	return
  5851  1C5B                     __end_of_I2C_Master_Init:
  5852                           
  5853                           	psect	text13
  5854  1015                     __ptext13:	
  5855 ;; *************** function ___lldiv *****************
  5856 ;; Defined at:
  5857 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  5858 ;; Parameters:    Size  Location     Type
  5859 ;;  divisor         4    0[BANK0 ] unsigned long 
  5860 ;;  dividend        4    4[BANK0 ] unsigned long 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;  quotient        4    9[BANK0 ] unsigned long 
  5863 ;;  counter         1   13[BANK0 ] unsigned char 
  5864 ;; Return value:  Size  Location     Type
  5865 ;;                  4    0[BANK0 ] unsigned long 
  5866 ;; Registers used:
  5867 ;;		wreg, status,2, status,0
  5868 ;; Tracked objects:
  5869 ;;		On entry : 300/0
  5870 ;;		On exit  : 300/0
  5871 ;;		Unchanged: 0/0
  5872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5873 ;;      Params:         0       8       0       0       0
  5874 ;;      Locals:         0       5       0       0       0
  5875 ;;      Temps:          0       1       0       0       0
  5876 ;;      Totals:         0      14       0       0       0
  5877 ;;Total ram usage:       14 bytes
  5878 ;; Hardware stack levels used: 1
  5879 ;; Hardware stack levels required when called: 1
  5880 ;; This function calls:
  5881 ;;		Nothing
  5882 ;; This function is called by:
  5883 ;;		_I2C_Master_Init
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           
  5888                           ;psect for function ___lldiv
  5889  1015                     ___lldiv:
  5890                           
  5891                           ;incstack = 0
  5892                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5893  1015  3000               	movlw	0
  5894  1016  00AC               	movwf	___lldiv@quotient+3
  5895  1017  3000               	movlw	0
  5896  1018  00AB               	movwf	___lldiv@quotient+2
  5897  1019  3000               	movlw	0
  5898  101A  00AA               	movwf	___lldiv@quotient+1
  5899  101B  3000               	movlw	0
  5900  101C  00A9               	movwf	___lldiv@quotient
  5901  101D  0823               	movf	___lldiv@divisor+3,w
  5902  101E  0422               	iorwf	___lldiv@divisor+2,w
  5903  101F  0421               	iorwf	___lldiv@divisor+1,w
  5904  1020  0420               	iorwf	___lldiv@divisor,w
  5905  1021  1903               	skipnz
  5906  1022  286A               	goto	l4825
  5907  1023  01AD               	clrf	___lldiv@counter
  5908  1024  0AAD               	incf	___lldiv@counter,f
  5909  1025                     l4811:
  5910  1025  1BA3               	btfsc	___lldiv@divisor+3,7
  5911  1026  2835               	goto	l4813
  5912  1027  3001               	movlw	1
  5913  1028  00A8               	movwf	??___lldiv
  5914  1029                     u4475:
  5915  1029  1003               	clrc
  5916  102A  0DA0               	rlf	___lldiv@divisor,f
  5917  102B  0DA1               	rlf	___lldiv@divisor+1,f
  5918  102C  0DA2               	rlf	___lldiv@divisor+2,f
  5919  102D  0DA3               	rlf	___lldiv@divisor+3,f
  5920  102E  0BA8               	decfsz	??___lldiv,f
  5921  102F  2829               	goto	u4475
  5922  1030  3001               	movlw	1
  5923  1031  00A8               	movwf	??___lldiv
  5924  1032  0828               	movf	??___lldiv,w
  5925  1033  07AD               	addwf	___lldiv@counter,f
  5926  1034  2825               	goto	l4811
  5927  1035                     l4813:
  5928  1035  3001               	movlw	1
  5929  1036  00A8               	movwf	??___lldiv
  5930  1037                     u4495:
  5931  1037  1003               	clrc
  5932  1038  0DA9               	rlf	___lldiv@quotient,f
  5933  1039  0DAA               	rlf	___lldiv@quotient+1,f
  5934  103A  0DAB               	rlf	___lldiv@quotient+2,f
  5935  103B  0DAC               	rlf	___lldiv@quotient+3,f
  5936  103C  0BA8               	decfsz	??___lldiv,f
  5937  103D  2837               	goto	u4495
  5938  103E  0823               	movf	___lldiv@divisor+3,w
  5939  103F  0227               	subwf	___lldiv@dividend+3,w
  5940  1040  1D03               	skipz
  5941  1041  284C               	goto	u4505
  5942  1042  0822               	movf	___lldiv@divisor+2,w
  5943  1043  0226               	subwf	___lldiv@dividend+2,w
  5944  1044  1D03               	skipz
  5945  1045  284C               	goto	u4505
  5946  1046  0821               	movf	___lldiv@divisor+1,w
  5947  1047  0225               	subwf	___lldiv@dividend+1,w
  5948  1048  1D03               	skipz
  5949  1049  284C               	goto	u4505
  5950  104A  0820               	movf	___lldiv@divisor,w
  5951  104B  0224               	subwf	___lldiv@dividend,w
  5952  104C                     u4505:
  5953  104C  1C03               	skipc
  5954  104D  285D               	goto	l4821
  5955  104E  0820               	movf	___lldiv@divisor,w
  5956  104F  02A4               	subwf	___lldiv@dividend,f
  5957  1050  0821               	movf	___lldiv@divisor+1,w
  5958  1051  1C03               	skipc
  5959  1052  0F21               	incfsz	___lldiv@divisor+1,w
  5960  1053  02A5               	subwf	___lldiv@dividend+1,f
  5961  1054  0822               	movf	___lldiv@divisor+2,w
  5962  1055  1C03               	skipc
  5963  1056  0F22               	incfsz	___lldiv@divisor+2,w
  5964  1057  02A6               	subwf	___lldiv@dividend+2,f
  5965  1058  0823               	movf	___lldiv@divisor+3,w
  5966  1059  1C03               	skipc
  5967  105A  0F23               	incfsz	___lldiv@divisor+3,w
  5968  105B  02A7               	subwf	___lldiv@dividend+3,f
  5969  105C  1429               	bsf	___lldiv@quotient,0
  5970  105D                     l4821:
  5971  105D  3001               	movlw	1
  5972  105E                     u4515:
  5973  105E  1003               	clrc
  5974  105F  0CA3               	rrf	___lldiv@divisor+3,f
  5975  1060  0CA2               	rrf	___lldiv@divisor+2,f
  5976  1061  0CA1               	rrf	___lldiv@divisor+1,f
  5977  1062  0CA0               	rrf	___lldiv@divisor,f
  5978  1063  3EFF               	addlw	-1
  5979  1064  1D03               	skipz
  5980  1065  285E               	goto	u4515
  5981  1066  3001               	movlw	1
  5982  1067  02AD               	subwf	___lldiv@counter,f
  5983  1068  1D03               	btfss	3,2
  5984  1069  2835               	goto	l4813
  5985  106A                     l4825:
  5986  106A  082C               	movf	___lldiv@quotient+3,w
  5987  106B  00A3               	movwf	?___lldiv+3
  5988  106C  082B               	movf	___lldiv@quotient+2,w
  5989  106D  00A2               	movwf	?___lldiv+2
  5990  106E  082A               	movf	___lldiv@quotient+1,w
  5991  106F  00A1               	movwf	?___lldiv+1
  5992  1070  0829               	movf	___lldiv@quotient,w
  5993  1071  00A0               	movwf	?___lldiv
  5994  1072  0008               	return
  5995  1073                     __end_of___lldiv:
  5996                           
  5997                           	psect	text14
  5998  0037                     __ptext14:	
  5999 ;; *************** function _Decodify_Command *****************
  6000 ;; Defined at:
  6001 ;;		line 313 in file "SlaveLiofilizadorVer1.c"
  6002 ;; Parameters:    Size  Location     Type
  6003 ;;		None
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;  sizedata        1   24[BANK1 ] unsigned char 
  6006 ;;  add             1   23[BANK1 ] unsigned char 
  6007 ;;  add_24LCxxxx    4   32[BANK1 ] unsigned long 
  6008 ;;  OutPut          4   27[BANK1 ] float 
  6009 ;;  tempint         2   25[BANK1 ] int 
  6010 ;;  dados           2   21[BANK1 ] int 
  6011 ;;  tempchar        1   31[BANK1 ] unsigned char 
  6012 ;; Return value:  Size  Location     Type
  6013 ;;                  1    wreg      void 
  6014 ;; Registers used:
  6015 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6016 ;; Tracked objects:
  6017 ;;		On entry : 300/100
  6018 ;;		On exit  : 0/0
  6019 ;;		Unchanged: 0/0
  6020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6021 ;;      Params:         0       0       0       0       0
  6022 ;;      Locals:         0       0      15       0       0
  6023 ;;      Temps:          0       0       4       0       0
  6024 ;;      Totals:         0       0      19       0       0
  6025 ;;Total ram usage:       19 bytes
  6026 ;; Hardware stack levels used: 1
  6027 ;; Hardware stack levels required when called: 6
  6028 ;; This function calls:
  6029 ;;		_EEPROM_24C1025_Fill_All
  6030 ;;		_EEPROM_24C1025_Read_Buffer_USART
  6031 ;;		_EEPROM_24C1025_Read_Byte
  6032 ;;		_EEPROM_24C1025_Read_Int
  6033 ;;		_EEPROM_24C1025_Read_Str
  6034 ;;		_EEPROM_24C1025_Write_Buffer
  6035 ;;		_EEPROM_24C1025_Write_Byte
  6036 ;;		_EEPROM_24C1025_Write_Int
  6037 ;;		_EEPROM_24C1025_Write_Str
  6038 ;;		_EEPROM_Read_Byte
  6039 ;;		_EEPROM_Read_Integer
  6040 ;;		_EEPROM_Read_String
  6041 ;;		_EEPROM_Write_Byte
  6042 ;;		_EEPROM_Write_Integer
  6043 ;;		_EEPROM_Write_String
  6044 ;;		_PROCULUS_Buzzer
  6045 ;;		_PROCULUS_Show_Screen
  6046 ;;		_PROCULUS_VP_Write_String
  6047 ;;		_Save_Log
  6048 ;;		_Send_Reply_OK
  6049 ;;		_Send_To_MB
  6050 ;;		_USART_put_int
  6051 ;;		_USART_put_string
  6052 ;;		_USART_putc
  6053 ;;		_USART_to_Protocol
  6054 ;;		___flmul
  6055 ;;		___fltol
  6056 ;;		_strcpy
  6057 ;;		_strlen
  6058 ;; This function is called by:
  6059 ;;		_main
  6060 ;; This function uses a non-reentrant model
  6061 ;;
  6062                           
  6063                           
  6064                           ;psect for function _Decodify_Command
  6065  0037                     _Decodify_Command:
  6066                           
  6067                           ;SlaveLiofilizadorVer1.c: 315:     int dados;;SlaveLiofilizadorVer1.c: 316:     char tem
      +                          pchar;;SlaveLiofilizadorVer1.c: 317:     int tempint;;SlaveLiofilizadorVer1.c: 318:     
      +                          float OutPut;;SlaveLiofilizadorVer1.c: 319:     unsigned long add_24LCxxxx;;SlaveLiofili
      +                          zadorVer1.c: 331:     USART_to_Protocol(&usart_protocol);
  6068                           
  6069                           ;incstack = 0
  6070                           ; Regs used in _Decodify_Command: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6071  0037  3090               	movlw	(low (_usart_protocol| (0+256)))& (0+255)
  6072  0038  160A  158A  26D8  120A  118A  	fcall	_USART_to_Protocol
  6073                           
  6074                           ;SlaveLiofilizadorVer1.c: 333:     ((char *)&add_24LCxxxx)[3]=(usart_protocol.value[1]);
  6075  003D  1683               	bsf	3,5	;RP0=1, select bank3
  6076  003E  1703               	bsf	3,6	;RP1=1, select bank3
  6077  003F  0817               	movf	(_usart_protocol^(0+384)+7),w
  6078  0040  1303               	bcf	3,6	;RP1=0, select bank1
  6079  0041  00B1               	movwf	??_Decodify_Command^(0+128)
  6080  0042  0831               	movf	??_Decodify_Command^(0+128),w
  6081  0043  00C3               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6082                           
  6083                           ;SlaveLiofilizadorVer1.c: 334:     ((char *)&add_24LCxxxx)[2]=(usart_protocol.value[2]);
  6084  0044  1703               	bsf	3,6	;RP1=1, select bank3
  6085  0045  0818               	movf	(_usart_protocol^(0+384)+8),w
  6086  0046  1303               	bcf	3,6	;RP1=0, select bank1
  6087  0047  00B1               	movwf	??_Decodify_Command^(0+128)
  6088  0048  0831               	movf	??_Decodify_Command^(0+128),w
  6089  0049  00C2               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6090                           
  6091                           ;SlaveLiofilizadorVer1.c: 335:     ((char *)&add_24LCxxxx)[1]=(usart_protocol.value[3]);
  6092  004A  1703               	bsf	3,6	;RP1=1, select bank3
  6093  004B  0819               	movf	(_usart_protocol^(0+384)+9),w
  6094  004C  1303               	bcf	3,6	;RP1=0, select bank1
  6095  004D  00B1               	movwf	??_Decodify_Command^(0+128)
  6096  004E  0831               	movf	??_Decodify_Command^(0+128),w
  6097  004F  00C1               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6098                           
  6099                           ;SlaveLiofilizadorVer1.c: 336:     ((char *)&add_24LCxxxx)[0]=(usart_protocol.value[4]);
  6100  0050  1703               	bsf	3,6	;RP1=1, select bank3
  6101  0051  081A               	movf	(_usart_protocol^(0+384)+10),w
  6102  0052  1303               	bcf	3,6	;RP1=0, select bank1
  6103  0053  00B1               	movwf	??_Decodify_Command^(0+128)
  6104  0054  0831               	movf	??_Decodify_Command^(0+128),w
  6105  0055  00C0               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6106                           
  6107                           ;SlaveLiofilizadorVer1.c: 343:     switch(usart_protocol.command){
  6108  0056  2B31               	goto	l5849
  6109  0057                     l5689:
  6110                           
  6111                           ;SlaveLiofilizadorVer1.c: 352:              strcpy(buffer,"v1.0.30");
  6112  0057  3041               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  6113  0058  00B1               	movwf	??_Decodify_Command^(0+128)
  6114  0059  0831               	movf	??_Decodify_Command^(0+128),w
  6115  005A  1283               	bcf	3,5	;RP0=0, select bank0
  6116  005B  00A0               	movwf	strcpy@from
  6117  005C  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6118  005D  160A  158A  2270  120A  118A  	fcall	_strcpy
  6119                           
  6120                           ;SlaveLiofilizadorVer1.c: 353:              Send_To_MB(11);
  6121  0062  300B               	movlw	11
  6122  0063                     L10:
  6123  0063  160A  158A  235A  120A  118A  	fcall	_Send_To_MB
  6124                           
  6125                           ;SlaveLiofilizadorVer1.c: 354:              USART_put_string(buffer);
  6126  0068  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6127  0069  1283               	bcf	3,5	;RP0=0, select bank0
  6128  006A  00A1               	movwf	USART_put_string@vetor
  6129  006B  3001               	movlw	1
  6130  006C  00A2               	movwf	USART_put_string@vetor+1
  6131  006D  160A  158A  248D   	fcall	_USART_put_string
  6132                           
  6133                           ;SlaveLiofilizadorVer1.c: 355:              break;
  6134  0070  0008               	return
  6135  0071                     l5695:
  6136                           
  6137                           ;SlaveLiofilizadorVer1.c: 373:              if(usart_protocol.value[0]==0)
  6138  0071  1703               	bsf	3,6	;RP1=1, select bank3
  6139  0072  0816               	movf	(_usart_protocol^(0+384)+6),w
  6140  0073  1D03               	btfss	3,2
  6141  0074  287E               	goto	l5699
  6142                           
  6143                           ;SlaveLiofilizadorVer1.c: 374:                 OutPut=Tensao1;
  6144  0075  1303               	bcf	3,6	;RP1=0, select bank1
  6145  0076  084C               	movf	(_Tensao1+3)^(0+128),w
  6146  0077  00BE               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6147  0078  084B               	movf	(_Tensao1+2)^(0+128),w
  6148  0079  00BD               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6149  007A  084A               	movf	(_Tensao1+1)^(0+128),w
  6150  007B  00BC               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6151  007C  0849               	movf	_Tensao1^(0+128),w
  6152  007D  2886               	goto	L8
  6153  007E                     l5699:
  6154                           
  6155                           ;SlaveLiofilizadorVer1.c: 376:                 OutPut=Vaccum0;
  6156  007E  1303               	bcf	3,6	;RP1=0, select bank1
  6157  007F  0850               	movf	(_Vaccum0+3)^(0+128),w
  6158  0080  00BE               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6159  0081  084F               	movf	(_Vaccum0+2)^(0+128),w
  6160  0082  00BD               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6161  0083  084E               	movf	(_Vaccum0+1)^(0+128),w
  6162  0084  00BC               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6163  0085  084D               	movf	_Vaccum0^(0+128),w
  6164  0086                     L8:
  6165  0086  00BB               	movwf	Decodify_Command@OutPut^(0+128)
  6166                           
  6167                           ;SlaveLiofilizadorVer1.c: 379:              OutPut*=10.0;
  6168  0087  3041               	movlw	65
  6169  0088  1283               	bcf	3,5	;RP0=0, select bank0
  6170  0089  00CE               	movwf	___flmul@b+3
  6171  008A  3020               	movlw	32
  6172  008B  00CD               	movwf	___flmul@b+2
  6173  008C  3000               	movlw	0
  6174  008D  00CC               	movwf	___flmul@b+1
  6175  008E  3000               	movlw	0
  6176  008F  00CB               	movwf	___flmul@b
  6177  0090  1683               	bsf	3,5	;RP0=1, select bank1
  6178  0091  083E               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6179  0092  1283               	bcf	3,5	;RP0=0, select bank0
  6180  0093  00D2               	movwf	___flmul@a+3
  6181  0094  1683               	bsf	3,5	;RP0=1, select bank1
  6182  0095  083D               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6183  0096  1283               	bcf	3,5	;RP0=0, select bank0
  6184  0097  00D1               	movwf	___flmul@a+2
  6185  0098  1683               	bsf	3,5	;RP0=1, select bank1
  6186  0099  083C               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6187  009A  1283               	bcf	3,5	;RP0=0, select bank0
  6188  009B  00D0               	movwf	___flmul@a+1
  6189  009C  1683               	bsf	3,5	;RP0=1, select bank1
  6190  009D  083B               	movf	Decodify_Command@OutPut^(0+128),w
  6191  009E  1283               	bcf	3,5	;RP0=0, select bank0
  6192  009F  00CF               	movwf	___flmul@a
  6193  00A0  120A  118A  2383  120A  118A  	fcall	___flmul
  6194  00A5  084E               	movf	?___flmul+3,w
  6195  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  6196  00A7  00BE               	movwf	(Decodify_Command@OutPut+3)^(0+128)
  6197  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  6198  00A9  084D               	movf	?___flmul+2,w
  6199  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  6200  00AB  00BD               	movwf	(Decodify_Command@OutPut+2)^(0+128)
  6201  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  6202  00AD  084C               	movf	?___flmul+1,w
  6203  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  6204  00AF  00BC               	movwf	(Decodify_Command@OutPut+1)^(0+128)
  6205  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  6206  00B1  084B               	movf	?___flmul,w
  6207  00B2  1683               	bsf	3,5	;RP0=1, select bank1
  6208  00B3  00BB               	movwf	Decodify_Command@OutPut^(0+128)
  6209                           
  6210                           ;SlaveLiofilizadorVer1.c: 381:              INTCONbits.GIE=0;
  6211  00B4  138B               	bcf	11,7	;volatile
  6212                           
  6213                           ;SlaveLiofilizadorVer1.c: 382:              Send_To_MB(2);
  6214  00B5  3002               	movlw	2
  6215  00B6  160A  158A  235A  120A  118A  	fcall	_Send_To_MB
  6216                           
  6217                           ;SlaveLiofilizadorVer1.c: 383:              USART_put_int(OutPut);
  6218  00BB  083E               	movf	(Decodify_Command@OutPut+3)^(0+128),w
  6219  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  6220  00BD  00E8               	movwf	___fltol@f1+3
  6221  00BE  1683               	bsf	3,5	;RP0=1, select bank1
  6222  00BF  083D               	movf	(Decodify_Command@OutPut+2)^(0+128),w
  6223  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  6224  00C1  00E7               	movwf	___fltol@f1+2
  6225  00C2  1683               	bsf	3,5	;RP0=1, select bank1
  6226  00C3  083C               	movf	(Decodify_Command@OutPut+1)^(0+128),w
  6227  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  6228  00C5  00E6               	movwf	___fltol@f1+1
  6229  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  6230  00C7  083B               	movf	Decodify_Command@OutPut^(0+128),w
  6231  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  6232  00C9  00E5               	movwf	___fltol@f1
  6233  00CA  120A  158A  2002  120A  118A  	fcall	___fltol
  6234  00CF  0866               	movf	?___fltol+1,w
  6235  00D0  1683               	bsf	3,5	;RP0=1, select bank1
  6236  00D1  00A1               	movwf	(USART_put_int@value+1)^(0+128)
  6237  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  6238  00D3  0865               	movf	?___fltol,w
  6239  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  6240  00D5  00A0               	movwf	USART_put_int@value^(0+128)
  6241  00D6  160A  158A  21C5   	fcall	_USART_put_int
  6242                           
  6243                           ;SlaveLiofilizadorVer1.c: 384:              INTCONbits.GIE=1;
  6244  00D9  178B               	bsf	11,7	;volatile
  6245                           
  6246                           ;SlaveLiofilizadorVer1.c: 385:              break;
  6247  00DA  0008               	return
  6248  00DB                     l5711:
  6249                           
  6250                           ;SlaveLiofilizadorVer1.c: 390:              ((char *)&add_24LCxxxx)[3] =(usart_protocol.
      +                          value[0]);
  6251  00DB  1703               	bsf	3,6	;RP1=1, select bank3
  6252  00DC  0816               	movf	(_usart_protocol^(0+384)+6),w
  6253  00DD  1303               	bcf	3,6	;RP1=0, select bank1
  6254  00DE  00B1               	movwf	??_Decodify_Command^(0+128)
  6255  00DF  0831               	movf	??_Decodify_Command^(0+128),w
  6256  00E0  00C3               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+3)
  6257                           
  6258                           ;SlaveLiofilizadorVer1.c: 391:              ((char *)&add_24LCxxxx)[2] =(usart_protocol.
      +                          value[1]);
  6259  00E1  1703               	bsf	3,6	;RP1=1, select bank3
  6260  00E2  0817               	movf	(_usart_protocol^(0+384)+7),w
  6261  00E3  1303               	bcf	3,6	;RP1=0, select bank1
  6262  00E4  00B1               	movwf	??_Decodify_Command^(0+128)
  6263  00E5  0831               	movf	??_Decodify_Command^(0+128),w
  6264  00E6  00C2               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+2)
  6265                           
  6266                           ;SlaveLiofilizadorVer1.c: 392:              ((char *)&add_24LCxxxx)[1] =(usart_protocol.
      +                          value[2]);
  6267  00E7  1703               	bsf	3,6	;RP1=1, select bank3
  6268  00E8  0818               	movf	(_usart_protocol^(0+384)+8),w
  6269  00E9  1303               	bcf	3,6	;RP1=0, select bank1
  6270  00EA  00B1               	movwf	??_Decodify_Command^(0+128)
  6271  00EB  0831               	movf	??_Decodify_Command^(0+128),w
  6272  00EC  00C1               	movwf	(Decodify_Command@add_24LCxxxx^(0+128)+1)
  6273                           
  6274                           ;SlaveLiofilizadorVer1.c: 393:              ((char *)&add_24LCxxxx)[0] =(usart_protocol.
      +                          value[3]);
  6275  00ED  1703               	bsf	3,6	;RP1=1, select bank3
  6276  00EE  0819               	movf	(_usart_protocol^(0+384)+9),w
  6277  00EF  1303               	bcf	3,6	;RP1=0, select bank1
  6278  00F0  00B1               	movwf	??_Decodify_Command^(0+128)
  6279  00F1  0831               	movf	??_Decodify_Command^(0+128),w
  6280  00F2  00C0               	movwf	Decodify_Command@add_24LCxxxx^(0+128)
  6281                           
  6282                           ;SlaveLiofilizadorVer1.c: 394:              Save_Log(add_24LCxxxx);
  6283  00F3  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6284  00F4  00AD               	movwf	(Save_Log@add_datalog+3)^(0+128)
  6285  00F5  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6286  00F6  00AC               	movwf	(Save_Log@add_datalog+2)^(0+128)
  6287  00F7  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6288  00F8  00AB               	movwf	(Save_Log@add_datalog+1)^(0+128)
  6289  00F9  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6290  00FA  00AA               	movwf	Save_Log@add_datalog^(0+128)
  6291  00FB  160A  158A  2783   	fcall	_Save_Log
  6292                           
  6293                           ;SlaveLiofilizadorVer1.c: 395:              Delay_Led_Tmr0=0;
  6294  00FE  01F8               	clrf	_Delay_Led_Tmr0	;volatile
  6295  00FF  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
  6296                           
  6297                           ;SlaveLiofilizadorVer1.c: 396:              milisegundo=0;
  6298  0100  1683               	bsf	3,5	;RP0=1, select bank1
  6299  0101  1303               	bcf	3,6	;RP1=0, select bank1
  6300  0102  01D9               	clrf	_milisegundo^(0+128)	;volatile
  6301  0103  01DA               	clrf	(_milisegundo+1)^(0+128)	;volatile
  6302                           
  6303                           ;SlaveLiofilizadorVer1.c: 397:              break;
  6304  0104  0008               	return
  6305  0105                     l5719:
  6306                           
  6307                           ;SlaveLiofilizadorVer1.c: 409:              Send_To_MB(2);
  6308  0105  3002               	movlw	2
  6309  0106  160A  158A  235A  120A  118A  	fcall	_Send_To_MB
  6310                           
  6311                           ;SlaveLiofilizadorVer1.c: 411:              USART_put_int(1);
  6312  010B  3001               	movlw	1
  6313  010C  00A0               	movwf	USART_put_int@value^(0+128)
  6314  010D  3000               	movlw	0
  6315  010E  00A1               	movwf	(USART_put_int@value^(0+128)+1)
  6316  010F  160A  158A  21C5   	fcall	_USART_put_int
  6317                           
  6318                           ;SlaveLiofilizadorVer1.c: 421:              break;
  6319  0112  0008               	return
  6320  0113                     l5723:
  6321                           
  6322                           ;SlaveLiofilizadorVer1.c: 438:              EEPROM_Write_Byte(usart_protocol.value[0],
  6323  0113  1703               	bsf	3,6	;RP1=1, select bank3
  6324  0114  0817               	movf	(_usart_protocol^(0+384)+7),w
  6325  0115  1303               	bcf	3,6	;RP1=0, select bank1
  6326  0116  00B1               	movwf	??_Decodify_Command^(0+128)
  6327  0117  0831               	movf	??_Decodify_Command^(0+128),w
  6328  0118  1283               	bcf	3,5	;RP0=0, select bank0
  6329  0119  00A0               	movwf	EEPROM_Write_Byte@dado
  6330  011A  1683               	bsf	3,5	;RP0=1, select bank3
  6331  011B  1703               	bsf	3,6	;RP1=1, select bank3
  6332  011C  0816               	movf	(_usart_protocol^(0+384)+6),w
  6333  011D  160A  158A  259A  120A  118A  	fcall	_EEPROM_Write_Byte
  6334  0122                     L9:
  6335                           
  6336                           ;SlaveLiofilizadorVer1.c: 440:              Send_To_MB(3);
  6337  0122  3003               	movlw	3
  6338  0123  160A  158A  235A  120A  118A  	fcall	_Send_To_MB
  6339                           
  6340                           ;SlaveLiofilizadorVer1.c: 441:              Send_Reply_OK();
  6341  0128  160A  158A  217A   	fcall	_Send_Reply_OK
  6342                           
  6343                           ;SlaveLiofilizadorVer1.c: 442:              break;
  6344  012B  0008               	return
  6345  012C                     l5727:
  6346                           
  6347                           ;SlaveLiofilizadorVer1.c: 444:              tempchar=EEPROM_Read_Byte(usart_protocol.val
      +                          ue[0]);
  6348  012C  1703               	bsf	3,6	;RP1=1, select bank3
  6349  012D  0816               	movf	(_usart_protocol^(0+384)+6),w
  6350  012E  160A  158A  22ED  120A  118A  	fcall	_EEPROM_Read_Byte
  6351  0133  1683               	bsf	3,5	;RP0=1, select bank1
  6352  0134  1303               	bcf	3,6	;RP1=0, select bank1
  6353  0135  00B1               	movwf	??_Decodify_Command^(0+128)
  6354  0136  0831               	movf	??_Decodify_Command^(0+128),w
  6355  0137  00BF               	movwf	Decodify_Command@tempchar^(0+128)
  6356                           
  6357                           ;SlaveLiofilizadorVer1.c: 445:              Send_To_MB(1);;
  6358  0138  3001               	movlw	1
  6359  0139  160A  158A  235A  120A  118A  	fcall	_Send_To_MB
  6360                           
  6361                           ;SlaveLiofilizadorVer1.c: 446:              USART_putc(tempchar);
  6362  013E  083F               	movf	Decodify_Command@tempchar^(0+128),w
  6363  013F  160A  158A  21A4   	fcall	_USART_putc
  6364                           
  6365                           ;SlaveLiofilizadorVer1.c: 447:              break;
  6366  0142  0008               	return
  6367  0143                     l5733:
  6368                           
  6369                           ;SlaveLiofilizadorVer1.c: 449:              {;SlaveLiofilizadorVer1.c: 450:             
      +                           unsigned char add;;SlaveLiofilizadorVer1.c: 451:              add=usart_protocol.value[
      +                          0];
  6370  0143  1703               	bsf	3,6	;RP1=1, select bank3
  6371  0144  0816               	movf	(_usart_protocol^(0+384)+6),w
  6372  0145  1303               	bcf	3,6	;RP1=0, select bank1
  6373  0146  00B1               	movwf	??_Decodify_Command^(0+128)
  6374  0147  0831               	movf	??_Decodify_Command^(0+128),w
  6375  0148  00B7               	movwf	Decodify_Command@add^(0+128)
  6376                           
  6377                           ;SlaveLiofilizadorVer1.c: 452:              dados=(usart_protocol.value[1]<<8)|usart_pro
      +                          tocol.value[2];
  6378  0149  1703               	bsf	3,6	;RP1=1, select bank3
  6379  014A  0818               	movf	(_usart_protocol^(0+384)+8),w
  6380  014B  1303               	bcf	3,6	;RP1=0, select bank1
  6381  014C  00B1               	movwf	??_Decodify_Command^(0+128)
  6382  014D  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  6383  014E  1703               	bsf	3,6	;RP1=1, select bank3
  6384  014F  0817               	movf	(_usart_protocol^(0+384)+7),w
  6385  0150  1303               	bcf	3,6	;RP1=0, select bank1
  6386  0151  00B3               	movwf	(??_Decodify_Command+2)^(0+128)
  6387  0152  01B4               	clrf	((??_Decodify_Command+2)^(0+128)+1)
  6388  0153  0833               	movf	(??_Decodify_Command+2)^(0+128),w
  6389  0154  00B4               	movwf	((??_Decodify_Command+2)^(0+128)+1)
  6390  0155  01B3               	clrf	(??_Decodify_Command+2)^(0+128)
  6391  0156  0831               	movf	??_Decodify_Command^(0+128),w
  6392  0157  0433               	iorwf	(??_Decodify_Command+2)^(0+128),w
  6393  0158  00B5               	movwf	Decodify_Command@dados^(0+128)
  6394  0159  0832               	movf	(??_Decodify_Command+1)^(0+128),w
  6395  015A  0434               	iorwf	(??_Decodify_Command+3)^(0+128),w
  6396  015B  00B6               	movwf	(Decodify_Command@dados+1)^(0+128)
  6397                           
  6398                           ;SlaveLiofilizadorVer1.c: 453:              EEPROM_Write_Integer(add,dados);
  6399  015C  0836               	movf	(Decodify_Command@dados+1)^(0+128),w
  6400  015D  1283               	bcf	3,5	;RP0=0, select bank0
  6401  015E  00A6               	movwf	EEPROM_Write_Integer@dado+1
  6402  015F  1683               	bsf	3,5	;RP0=1, select bank1
  6403  0160  0835               	movf	Decodify_Command@dados^(0+128),w
  6404  0161  1283               	bcf	3,5	;RP0=0, select bank0
  6405  0162  00A5               	movwf	EEPROM_Write_Integer@dado
  6406  0163  1683               	bsf	3,5	;RP0=1, select bank1
  6407  0164  0837               	movf	Decodify_Command@add^(0+128),w
  6408  0165  160A  158A  245B  120A  118A  	fcall	_EEPROM_Write_Integer
  6409  016A  2922               	goto	L9
  6410  016B                     l5743:	
  6411                           ;SlaveLiofilizadorVer1.c: 454:              Send_To_MB(3);
  6412                           
  6413                           
  6414                           ;SlaveLiofilizadorVer1.c: 459:              tempint=EEPROM_Read_Integer(usart_protocol.v
      +                          alue[0]);
  6415  016B  1703               	bsf	3,6	;RP1=1, select bank3
  6416  016C  0816               	movf	(_usart_protocol^(0+384)+6),w
  6417  016D  160A  158A  23AB  120A  118A  	fcall	_EEPROM_Read_Integer
  6418  0172  0824               	movf	?_EEPROM_Read_Integer+1,w
  6419  0173  1683               	bsf	3,5	;RP0=1, select bank1
  6420  0174  00BA               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6421  0175  1283               	bcf	3,5	;RP0=0, select bank0
  6422  0176  0823               	movf	?_EEPROM_Read_Integer,w
  6423  0177                     L11:
  6424  0177  1683               	bsf	3,5	;RP0=1, select bank1
  6425  0178  00B9               	movwf	Decodify_Command@tempint^(0+128)
  6426                           
  6427                           ;SlaveLiofilizadorVer1.c: 460:              Send_To_MB(2);
  6428  0179  3002               	movlw	2
  6429  017A  160A  158A  235A  120A  118A  	fcall	_Send_To_MB
  6430                           
  6431                           ;SlaveLiofilizadorVer1.c: 461:              USART_put_int(tempint);
  6432  017F  083A               	movf	(Decodify_Command@tempint+1)^(0+128),w
  6433  0180  00A1               	movwf	(USART_put_int@value+1)^(0+128)
  6434  0181  0839               	movf	Decodify_Command@tempint^(0+128),w
  6435  0182  00A0               	movwf	USART_put_int@value^(0+128)
  6436  0183  160A  158A  21C5   	fcall	_USART_put_int
  6437                           
  6438                           ;SlaveLiofilizadorVer1.c: 462:              break;
  6439  0186  0008               	return
  6440  0187                     l5749:
  6441                           
  6442                           ;SlaveLiofilizadorVer1.c: 465:              EEPROM_Write_String(usart_protocol.value[0],
  6443  0187  3097               	movlw	(low ((_usart_protocol| (0+256)+7)))& (0+255)
  6444  0188  00B1               	movwf	??_Decodify_Command^(0+128)
  6445  0189  0831               	movf	??_Decodify_Command^(0+128),w
  6446  018A  1283               	bcf	3,5	;RP0=0, select bank0
  6447  018B  00A5               	movwf	EEPROM_Write_String@dado
  6448  018C  1683               	bsf	3,5	;RP0=1, select bank3
  6449  018D  1703               	bsf	3,6	;RP1=1, select bank3
  6450  018E  0816               	movf	(_usart_protocol^(0+384)+6),w
  6451  018F  160A  158A  23FF  120A  118A  	fcall	_EEPROM_Write_String
  6452  0194  2922               	goto	L9
  6453  0195                     l5755:	
  6454                           ;SlaveLiofilizadorVer1.c: 467:              Send_To_MB(3);
  6455                           
  6456                           
  6457                           ;SlaveLiofilizadorVer1.c: 471:              {;SlaveLiofilizadorVer1.c: 472:             
      +                           EEPROM_Read_String(usart_protocol.value[0],buffer);
  6458  0195  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6459  0196  00B1               	movwf	??_Decodify_Command^(0+128)
  6460  0197  0831               	movf	??_Decodify_Command^(0+128),w
  6461  0198  1283               	bcf	3,5	;RP0=0, select bank0
  6462  0199  00A3               	movwf	EEPROM_Read_String@dado
  6463  019A  1683               	bsf	3,5	;RP0=1, select bank3
  6464  019B  1703               	bsf	3,6	;RP1=1, select bank3
  6465  019C  0816               	movf	(_usart_protocol^(0+384)+6),w
  6466  019D  160A  158A  22AC  120A  118A  	fcall	_EEPROM_Read_String
  6467                           
  6468                           ;SlaveLiofilizadorVer1.c: 473:              Send_To_MB(sizeof(buffer));
  6469  01A2  3021               	movlw	33
  6470  01A3  2863               	goto	L10
  6471  01A4                     l5761:
  6472                           
  6473                           ;SlaveLiofilizadorVer1.c: 480:              EEPROM_24C1025_Write_Byte(usart_protocol.val
      +                          ue[0],
  6474  01A4  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6475  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  6476  01A6  00BA               	movwf	EEPROM_24C1025_Write_Byte@mem_add+3
  6477  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  6478  01A8  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6479  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  6480  01AA  00B9               	movwf	EEPROM_24C1025_Write_Byte@mem_add+2
  6481  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  6482  01AC  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6483  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  6484  01AE  00B8               	movwf	EEPROM_24C1025_Write_Byte@mem_add+1
  6485  01AF  1683               	bsf	3,5	;RP0=1, select bank1
  6486  01B0  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6487  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  6488  01B2  00B7               	movwf	EEPROM_24C1025_Write_Byte@mem_add
  6489  01B3  1683               	bsf	3,5	;RP0=1, select bank3
  6490  01B4  1703               	bsf	3,6	;RP1=1, select bank3
  6491  01B5  081B               	movf	(_usart_protocol^(0+384)+11),w
  6492  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  6493  01B7  00B1               	movwf	??_Decodify_Command^(0+128)
  6494  01B8  0831               	movf	??_Decodify_Command^(0+128),w
  6495  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  6496  01BA  00BB               	movwf	EEPROM_24C1025_Write_Byte@data
  6497  01BB  1683               	bsf	3,5	;RP0=1, select bank3
  6498  01BC  1703               	bsf	3,6	;RP1=1, select bank3
  6499  01BD  0816               	movf	(_usart_protocol^(0+384)+6),w
  6500  01BE  160A  158A  21DA  120A  118A  	fcall	_EEPROM_24C1025_Write_Byte
  6501  01C3  2922               	goto	L9
  6502  01C4                     l5767:	
  6503                           ;SlaveLiofilizadorVer1.c: 483:              Send_To_MB(3);
  6504                           
  6505                           
  6506                           ;SlaveLiofilizadorVer1.c: 487:              tempchar=EEPROM_24C1025_Read_Byte(usart_prot
      +                          ocol.value[0],
  6507  01C4  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6508  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  6509  01C6  00B9               	movwf	EEPROM_24C1025_Read_Byte@mem_add+3
  6510  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  6511  01C8  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6512  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  6513  01CA  00B8               	movwf	EEPROM_24C1025_Read_Byte@mem_add+2
  6514  01CB  1683               	bsf	3,5	;RP0=1, select bank1
  6515  01CC  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6516  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  6517  01CE  00B7               	movwf	EEPROM_24C1025_Read_Byte@mem_add+1
  6518  01CF  1683               	bsf	3,5	;RP0=1, select bank1
  6519  01D0  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6520  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  6521  01D2  00B6               	movwf	EEPROM_24C1025_Read_Byte@mem_add
  6522  01D3  1683               	bsf	3,5	;RP0=1, select bank3
  6523  01D4  1703               	bsf	3,6	;RP1=1, select bank3
  6524  01D5  0816               	movf	(_usart_protocol^(0+384)+6),w
  6525  01D6  160A  158A  2208  120A  118A  	fcall	_EEPROM_24C1025_Read_Byte
  6526  01DB  1683               	bsf	3,5	;RP0=1, select bank1
  6527  01DC  00B1               	movwf	??_Decodify_Command^(0+128)
  6528  01DD  0831               	movf	??_Decodify_Command^(0+128),w
  6529  01DE  00BF               	movwf	Decodify_Command@tempchar^(0+128)
  6530                           
  6531                           ;SlaveLiofilizadorVer1.c: 491:              Send_To_MB(1);
  6532  01DF  3001               	movlw	1
  6533  01E0  160A  158A  235A  120A  118A  	fcall	_Send_To_MB
  6534                           
  6535                           ;SlaveLiofilizadorVer1.c: 492:              USART_putc(tempchar);
  6536  01E5  083F               	movf	Decodify_Command@tempchar^(0+128),w
  6537  01E6  160A  158A  21A4   	fcall	_USART_putc
  6538                           
  6539                           ;SlaveLiofilizadorVer1.c: 493:              break;
  6540  01E9  0008               	return
  6541  01EA                     l5773:
  6542                           
  6543                           ;SlaveLiofilizadorVer1.c: 495:              {;SlaveLiofilizadorVer1.c: 496:             
      +                           EEPROM_24C1025_Write_Int(usart_protocol.value[0],
  6544  01EA  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6545  01EB  00A3               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
  6546  01EC  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6547  01ED  00A2               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
  6548  01EE  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6549  01EF  00A1               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
  6550  01F0  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6551  01F1  00A0               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
  6552  01F2  1703               	bsf	3,6	;RP1=1, select bank3
  6553  01F3  081C               	movf	(_usart_protocol^(0+384)+12),w
  6554  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  6555  01F5  00B1               	movwf	??_Decodify_Command^(0+128)
  6556  01F6  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  6557  01F7  1703               	bsf	3,6	;RP1=1, select bank3
  6558  01F8  081B               	movf	(_usart_protocol^(0+384)+11),w
  6559  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  6560  01FA  00B3               	movwf	(??_Decodify_Command+2)^(0+128)
  6561  01FB  01B4               	clrf	((??_Decodify_Command+2)^(0+128)+1)
  6562  01FC  0833               	movf	(??_Decodify_Command+2)^(0+128),w
  6563  01FD  00B4               	movwf	((??_Decodify_Command+2)^(0+128)+1)
  6564  01FE  01B3               	clrf	(??_Decodify_Command+2)^(0+128)
  6565  01FF  0831               	movf	??_Decodify_Command^(0+128),w
  6566  0200  0433               	iorwf	(??_Decodify_Command+2)^(0+128),w
  6567  0201  00A4               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  6568  0202  0832               	movf	(??_Decodify_Command+1)^(0+128),w
  6569  0203  0434               	iorwf	(??_Decodify_Command+3)^(0+128),w
  6570  0204  00A5               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  6571  0205  1703               	bsf	3,6	;RP1=1, select bank3
  6572  0206  0816               	movf	(_usart_protocol^(0+384)+6),w
  6573  0207  160A  158A  2382  120A  118A  	fcall	_EEPROM_24C1025_Write_Int
  6574  020C  2922               	goto	L9
  6575  020D                     l5779:	
  6576                           ;SlaveLiofilizadorVer1.c: 501:              Send_To_MB(3);
  6577                           
  6578                           
  6579                           ;SlaveLiofilizadorVer1.c: 506:              tempint=EEPROM_24C1025_Read_Int(usart_protoc
      +                          ol.value[0],
  6580  020D  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6581  020E  1283               	bcf	3,5	;RP0=0, select bank0
  6582  020F  00B9               	movwf	EEPROM_24C1025_Read_Int@mem_add+3
  6583  0210  1683               	bsf	3,5	;RP0=1, select bank1
  6584  0211  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6585  0212  1283               	bcf	3,5	;RP0=0, select bank0
  6586  0213  00B8               	movwf	EEPROM_24C1025_Read_Int@mem_add+2
  6587  0214  1683               	bsf	3,5	;RP0=1, select bank1
  6588  0215  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6589  0216  1283               	bcf	3,5	;RP0=0, select bank0
  6590  0217  00B7               	movwf	EEPROM_24C1025_Read_Int@mem_add+1
  6591  0218  1683               	bsf	3,5	;RP0=1, select bank1
  6592  0219  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6593  021A  1283               	bcf	3,5	;RP0=0, select bank0
  6594  021B  00B6               	movwf	EEPROM_24C1025_Read_Int@mem_add
  6595  021C  1683               	bsf	3,5	;RP0=1, select bank3
  6596  021D  1703               	bsf	3,6	;RP1=1, select bank3
  6597  021E  0816               	movf	(_usart_protocol^(0+384)+6),w
  6598  021F  160A  158A  2332  120A  118A  	fcall	_EEPROM_24C1025_Read_Int
  6599  0224  0837               	movf	?_EEPROM_24C1025_Read_Int+1,w
  6600  0225  1683               	bsf	3,5	;RP0=1, select bank1
  6601  0226  00BA               	movwf	(Decodify_Command@tempint+1)^(0+128)
  6602  0227  1283               	bcf	3,5	;RP0=0, select bank0
  6603  0228  0836               	movf	?_EEPROM_24C1025_Read_Int,w
  6604  0229  2977               	goto	L11
  6605  022A                     l5785:	
  6606                           ;SlaveLiofilizadorVer1.c: 508:              Send_To_MB(2);
  6607                           
  6608                           
  6609                           ;SlaveLiofilizadorVer1.c: 514:              {;SlaveLiofilizadorVer1.c: 515:             
      +                           char sizedata;;SlaveLiofilizadorVer1.c: 516:              sizedata=usart_protocol.value
      +                          [5];
  6610  022A  1703               	bsf	3,6	;RP1=1, select bank3
  6611  022B  081B               	movf	(_usart_protocol^(0+384)+11),w
  6612  022C  1303               	bcf	3,6	;RP1=0, select bank1
  6613  022D  00B1               	movwf	??_Decodify_Command^(0+128)
  6614  022E  0831               	movf	??_Decodify_Command^(0+128),w
  6615  022F  00B8               	movwf	Decodify_Command@sizedata^(0+128)
  6616                           
  6617                           ;SlaveLiofilizadorVer1.c: 517:              Send_To_MB(sizedata);
  6618  0230  0838               	movf	Decodify_Command@sizedata^(0+128),w
  6619  0231  160A  158A  235A  120A  118A  	fcall	_Send_To_MB
  6620                           
  6621                           ;SlaveLiofilizadorVer1.c: 518:              EEPROM_24C1025_Read_Buffer_USART(usart_proto
      +                          col.value[0],
  6622  0236  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6623  0237  1283               	bcf	3,5	;RP0=0, select bank0
  6624  0238  00AC               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3
  6625  0239  1683               	bsf	3,5	;RP0=1, select bank1
  6626  023A  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6627  023B  1283               	bcf	3,5	;RP0=0, select bank0
  6628  023C  00AB               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2
  6629  023D  1683               	bsf	3,5	;RP0=1, select bank1
  6630  023E  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6631  023F  1283               	bcf	3,5	;RP0=0, select bank0
  6632  0240  00AA               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1
  6633  0241  1683               	bsf	3,5	;RP0=1, select bank1
  6634  0242  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6635  0243  1283               	bcf	3,5	;RP0=0, select bank0
  6636  0244  00A9               	movwf	EEPROM_24C1025_Read_Buffer_USART@mem_add
  6637  0245  1683               	bsf	3,5	;RP0=1, select bank1
  6638  0246  0838               	movf	Decodify_Command@sizedata^(0+128),w
  6639  0247  00B1               	movwf	??_Decodify_Command^(0+128)
  6640  0248  0831               	movf	??_Decodify_Command^(0+128),w
  6641  0249  1283               	bcf	3,5	;RP0=0, select bank0
  6642  024A  00AD               	movwf	EEPROM_24C1025_Read_Buffer_USART@sizedata
  6643  024B  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6644  024C  1683               	bsf	3,5	;RP0=1, select bank1
  6645  024D  00B2               	movwf	(??_Decodify_Command+1)^(0+128)
  6646  024E  0832               	movf	(??_Decodify_Command+1)^(0+128),w
  6647  024F  1283               	bcf	3,5	;RP0=0, select bank0
  6648  0250  00AE               	movwf	EEPROM_24C1025_Read_Buffer_USART@data
  6649  0251  1683               	bsf	3,5	;RP0=1, select bank3
  6650  0252  1703               	bsf	3,6	;RP1=1, select bank3
  6651  0253  0816               	movf	(_usart_protocol^(0+384)+6),w
  6652  0254  160A  118A  2682   	fcall	_EEPROM_24C1025_Read_Buffer_USART
  6653                           
  6654                           ;SlaveLiofilizadorVer1.c: 523:              };SlaveLiofilizadorVer1.c: 524:             
      +                           break;
  6655  0257  0008               	return
  6656  0258                     l5791:
  6657                           
  6658                           ;SlaveLiofilizadorVer1.c: 527:              EEPROM_24C1025_Write_Buffer(usart_protocol.v
      +                          alue[0],
  6659  0258  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6660  0259  1283               	bcf	3,5	;RP0=0, select bank0
  6661  025A  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
  6662  025B  1683               	bsf	3,5	;RP0=1, select bank1
  6663  025C  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6664  025D  1283               	bcf	3,5	;RP0=0, select bank0
  6665  025E  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
  6666  025F  1683               	bsf	3,5	;RP0=1, select bank1
  6667  0260  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6668  0261  1283               	bcf	3,5	;RP0=0, select bank0
  6669  0262  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
  6670  0263  1683               	bsf	3,5	;RP0=1, select bank1
  6671  0264  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6672  0265  1283               	bcf	3,5	;RP0=0, select bank0
  6673  0266  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
  6674  0267  1683               	bsf	3,5	;RP0=1, select bank3
  6675  0268  1703               	bsf	3,6	;RP1=1, select bank3
  6676  0269  081B               	movf	(_usart_protocol^(0+384)+11),w
  6677  026A  1303               	bcf	3,6	;RP1=0, select bank1
  6678  026B  00B1               	movwf	??_Decodify_Command^(0+128)
  6679  026C  0831               	movf	??_Decodify_Command^(0+128),w
  6680  026D  1283               	bcf	3,5	;RP0=0, select bank0
  6681  026E  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
  6682  026F  309C               	movlw	(low ((_usart_protocol| (0+256)+12)))& (0+255)
  6683  0270  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
  6684  0271  3001               	movlw	1
  6685  0272  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
  6686  0273  1683               	bsf	3,5	;RP0=1, select bank3
  6687  0274  1703               	bsf	3,6	;RP1=1, select bank3
  6688  0275  0816               	movf	(_usart_protocol^(0+384)+6),w
  6689  0276  160A  118A  2392  120A  118A  	fcall	_EEPROM_24C1025_Write_Buffer
  6690  027B  2922               	goto	L9
  6691  027C                     l5797:	
  6692                           ;SlaveLiofilizadorVer1.c: 532:              Send_To_MB(3);
  6693                           
  6694                           
  6695                           ;SlaveLiofilizadorVer1.c: 537:              EEPROM_24C1025_Write_Str(usart_protocol.valu
      +                          e[0],
  6696  027C  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6697  027D  1283               	bcf	3,5	;RP0=0, select bank0
  6698  027E  00AD               	movwf	EEPROM_24C1025_Write_Str@mem_add+3
  6699  027F  1683               	bsf	3,5	;RP0=1, select bank1
  6700  0280  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6701  0281  1283               	bcf	3,5	;RP0=0, select bank0
  6702  0282  00AC               	movwf	EEPROM_24C1025_Write_Str@mem_add+2
  6703  0283  1683               	bsf	3,5	;RP0=1, select bank1
  6704  0284  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6705  0285  1283               	bcf	3,5	;RP0=0, select bank0
  6706  0286  00AB               	movwf	EEPROM_24C1025_Write_Str@mem_add+1
  6707  0287  1683               	bsf	3,5	;RP0=1, select bank1
  6708  0288  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6709  0289  1283               	bcf	3,5	;RP0=0, select bank0
  6710  028A  00AA               	movwf	EEPROM_24C1025_Write_Str@mem_add
  6711  028B  309B               	movlw	(low ((_usart_protocol| (0+256)+11)))& (0+255)
  6712  028C  1683               	bsf	3,5	;RP0=1, select bank1
  6713  028D  00B1               	movwf	??_Decodify_Command^(0+128)
  6714  028E  0831               	movf	??_Decodify_Command^(0+128),w
  6715  028F  1283               	bcf	3,5	;RP0=0, select bank0
  6716  0290  00AE               	movwf	EEPROM_24C1025_Write_Str@data
  6717  0291  1683               	bsf	3,5	;RP0=1, select bank3
  6718  0292  1703               	bsf	3,6	;RP1=1, select bank3
  6719  0293  0816               	movf	(_usart_protocol^(0+384)+6),w
  6720  0294  160A  118A  2297  120A  118A  	fcall	_EEPROM_24C1025_Write_Str
  6721  0299  2922               	goto	L9
  6722  029A                     l5803:	
  6723                           ;SlaveLiofilizadorVer1.c: 540:              Send_To_MB(3);
  6724                           
  6725                           
  6726                           ;SlaveLiofilizadorVer1.c: 544:              {;SlaveLiofilizadorVer1.c: 545:             
      +                           EEPROM_24C1025_Read_Str(usart_protocol.value[0],
  6727  029A  0843               	movf	(Decodify_Command@add_24LCxxxx+3)^(0+128),w
  6728  029B  1283               	bcf	3,5	;RP0=0, select bank0
  6729  029C  00AC               	movwf	EEPROM_24C1025_Read_Str@mem_add+3
  6730  029D  1683               	bsf	3,5	;RP0=1, select bank1
  6731  029E  0842               	movf	(Decodify_Command@add_24LCxxxx+2)^(0+128),w
  6732  029F  1283               	bcf	3,5	;RP0=0, select bank0
  6733  02A0  00AB               	movwf	EEPROM_24C1025_Read_Str@mem_add+2
  6734  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  6735  02A2  0841               	movf	(Decodify_Command@add_24LCxxxx+1)^(0+128),w
  6736  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  6737  02A4  00AA               	movwf	EEPROM_24C1025_Read_Str@mem_add+1
  6738  02A5  1683               	bsf	3,5	;RP0=1, select bank1
  6739  02A6  0840               	movf	Decodify_Command@add_24LCxxxx^(0+128),w
  6740  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  6741  02A8  00A9               	movwf	EEPROM_24C1025_Read_Str@mem_add
  6742  02A9  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6743  02AA  1683               	bsf	3,5	;RP0=1, select bank1
  6744  02AB  00B1               	movwf	??_Decodify_Command^(0+128)
  6745  02AC  0831               	movf	??_Decodify_Command^(0+128),w
  6746  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  6747  02AE  00AD               	movwf	EEPROM_24C1025_Read_Str@buffer
  6748  02AF  1683               	bsf	3,5	;RP0=1, select bank3
  6749  02B0  1703               	bsf	3,6	;RP1=1, select bank3
  6750  02B1  0816               	movf	(_usart_protocol^(0+384)+6),w
  6751  02B2  160A  118A  2508  120A  118A  	fcall	_EEPROM_24C1025_Read_Str
  6752                           
  6753                           ;SlaveLiofilizadorVer1.c: 549:              Send_To_MB(strlen(buffer)+1);
  6754  02B7  30CA               	movlw	(low (_buffer| (0+256)))& (0+255)
  6755  02B8  160A  158A  2221  120A  118A  	fcall	_strlen
  6756  02BD  0820               	movf	?_strlen,w
  6757  02BE  3E01               	addlw	1
  6758  02BF  2863               	goto	L10
  6759  02C0                     l5807:
  6760                           
  6761                           ;SlaveLiofilizadorVer1.c: 555:              EEPROM_24C1025_Fill_All(usart_protocol.value
      +                          [0],
  6762  02C0  1703               	bsf	3,6	;RP1=1, select bank3
  6763  02C1  0817               	movf	(_usart_protocol^(0+384)+7),w
  6764  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  6765  02C3  00B1               	movwf	??_Decodify_Command^(0+128)
  6766  02C4  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  6767  02C5  0831               	movf	??_Decodify_Command^(0+128),w
  6768  02C6  00AA               	movwf	EEPROM_24C1025_Fill_All@value^(0+128)
  6769  02C7  0832               	movf	(??_Decodify_Command+1)^(0+128),w
  6770  02C8  00AB               	movwf	(EEPROM_24C1025_Fill_All@value+1)^(0+128)
  6771  02C9  1703               	bsf	3,6	;RP1=1, select bank3
  6772  02CA  0816               	movf	(_usart_protocol^(0+384)+6),w
  6773  02CB  160A  158A  2612  120A  118A  	fcall	_EEPROM_24C1025_Fill_All
  6774  02D0  2922               	goto	L9
  6775  02D1                     l5813:	
  6776                           ;SlaveLiofilizadorVer1.c: 557:              Send_To_MB(3);
  6777                           
  6778                           
  6779                           ;SlaveLiofilizadorVer1.c: 562:              PROCULUS_Show_Screen(usart_protocol.value[0]
      +                          );
  6780  02D1  1703               	bsf	3,6	;RP1=1, select bank3
  6781  02D2  0816               	movf	(_usart_protocol^(0+384)+6),w
  6782  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  6783  02D4  00B1               	movwf	??_Decodify_Command^(0+128)
  6784  02D5  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  6785  02D6  0831               	movf	??_Decodify_Command^(0+128),w
  6786  02D7  00A8               	movwf	PROCULUS_Show_Screen@screen^(0+128)
  6787  02D8  0832               	movf	(??_Decodify_Command+1)^(0+128),w
  6788  02D9  00A9               	movwf	(PROCULUS_Show_Screen@screen+1)^(0+128)
  6789  02DA  160A  118A  2000  120A  118A  	fcall	_PROCULUS_Show_Screen
  6790  02DF  2922               	goto	L9
  6791  02E0                     l5819:	
  6792                           ;SlaveLiofilizadorVer1.c: 563:              Send_To_MB(3);
  6793                           
  6794                           
  6795                           ;SlaveLiofilizadorVer1.c: 568:              PROCULUS_Buzzer((usart_protocol.value[0]<<8)
      +                          +
  6796  02E0  1703               	bsf	3,6	;RP1=1, select bank3
  6797  02E1  0816               	movf	(_usart_protocol^(0+384)+6),w
  6798  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  6799  02E3  00B1               	movwf	??_Decodify_Command^(0+128)
  6800  02E4  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  6801  02E5  0831               	movf	??_Decodify_Command^(0+128),w
  6802  02E6  00B2               	movwf	(??_Decodify_Command^(0+128)+1)
  6803  02E7  01B1               	clrf	??_Decodify_Command^(0+128)
  6804  02E8  1703               	bsf	3,6	;RP1=1, select bank3
  6805  02E9  0817               	movf	(_usart_protocol^(0+384)+7),w
  6806  02EA  1303               	bcf	3,6	;RP1=0, select bank1
  6807  02EB  0731               	addwf	??_Decodify_Command^(0+128),w
  6808  02EC  00A8               	movwf	PROCULUS_Buzzer@time_ms_x_10^(0+128)
  6809  02ED  3000               	movlw	0
  6810  02EE  1803               	skipnc
  6811  02EF  3001               	movlw	1
  6812  02F0  0732               	addwf	(??_Decodify_Command+1)^(0+128),w
  6813  02F1  00A9               	movwf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128)
  6814  02F2  160A  158A  23D5  120A  118A  	fcall	_PROCULUS_Buzzer
  6815  02F7  2922               	goto	L9
  6816  02F8                     l5825:	
  6817                           ;SlaveLiofilizadorVer1.c: 570:              Send_To_MB(3);
  6818                           
  6819                           
  6820                           ;SlaveLiofilizadorVer1.c: 574:              PROCULUS_VP_Write_String((usart_protocol.val
      +                          ue[0]<<8)+
  6821  02F8  1703               	bsf	3,6	;RP1=1, select bank3
  6822  02F9  0816               	movf	(_usart_protocol^(0+384)+6),w
  6823  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  6824  02FB  00B1               	movwf	??_Decodify_Command^(0+128)
  6825  02FC  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  6826  02FD  0831               	movf	??_Decodify_Command^(0+128),w
  6827  02FE  00B2               	movwf	(??_Decodify_Command^(0+128)+1)
  6828  02FF  01B1               	clrf	??_Decodify_Command^(0+128)
  6829  0300  1703               	bsf	3,6	;RP1=1, select bank3
  6830  0301  0817               	movf	(_usart_protocol^(0+384)+7),w
  6831  0302  1303               	bcf	3,6	;RP1=0, select bank1
  6832  0303  0731               	addwf	??_Decodify_Command^(0+128),w
  6833  0304  00AC               	movwf	PROCULUS_VP_Write_String@vp^(0+128)
  6834  0305  3000               	movlw	0
  6835  0306  1803               	skipnc
  6836  0307  3001               	movlw	1
  6837  0308  0732               	addwf	(??_Decodify_Command+1)^(0+128),w
  6838  0309  00AD               	movwf	(PROCULUS_VP_Write_String@vp+1)^(0+128)
  6839  030A  3098               	movlw	(low ((_usart_protocol| (0+256)+8)))& (0+255)
  6840  030B  00B3               	movwf	(??_Decodify_Command+2)^(0+128)
  6841  030C  0833               	movf	(??_Decodify_Command+2)^(0+128),w
  6842  030D  00AE               	movwf	PROCULUS_VP_Write_String@text^(0+128)
  6843  030E  160A  158A  21F0  120A  118A  	fcall	_PROCULUS_VP_Write_String
  6844  0313  2922               	goto	L9
  6845  0314                     l5831:	
  6846                           ;SlaveLiofilizadorVer1.c: 577:              Send_To_MB(3);
  6847                           
  6848                           
  6849                           ;SlaveLiofilizadorVer1.c: 583:              if(usart_protocol.value[0]==0)
  6850  0314  1703               	bsf	3,6	;RP1=1, select bank3
  6851  0315  0816               	movf	(_usart_protocol^(0+384)+6),w
  6852  0316  1D03               	btfss	3,2
  6853  0317  2B23               	goto	l5837
  6854                           
  6855                           ;SlaveLiofilizadorVer1.c: 584:                 {;SlaveLiofilizadorVer1.c: 586:          
      +                                 if(!usart_protocol.value[1])
  6856  0318  0817               	movf	(_usart_protocol^(0+384)+7),w
  6857  0319  1D03               	btfss	3,2
  6858  031A  2B1F               	goto	l424
  6859                           
  6860                           ;SlaveLiofilizadorVer1.c: 587:                    PORTCbits.RC0=0;
  6861  031B  1283               	bcf	3,5	;RP0=0, select bank0
  6862  031C  1303               	bcf	3,6	;RP1=0, select bank0
  6863  031D  1007               	bcf	7,0	;volatile
  6864  031E  2922               	goto	L9
  6865  031F                     l424:	
  6866                           ;SlaveLiofilizadorVer1.c: 588:                 else
  6867                           
  6868                           
  6869                           ;SlaveLiofilizadorVer1.c: 589:                    PORTCbits.RC0=1;
  6870  031F  1283               	bcf	3,5	;RP0=0, select bank0
  6871  0320  1303               	bcf	3,6	;RP1=0, select bank0
  6872  0321  1407               	bsf	7,0	;volatile
  6873  0322  2922               	goto	L9
  6874  0323                     l5837:
  6875  0323  0316               	decf	(_usart_protocol^(0+384)+6),w
  6876  0324  1D03               	btfss	3,2
  6877  0325  2922               	goto	L9
  6878                           
  6879                           ;SlaveLiofilizadorVer1.c: 592:                      {;SlaveLiofilizadorVer1.c: 594:     
      +                                            if(!usart_protocol.value[1])
  6880  0326  0817               	movf	(_usart_protocol^(0+384)+7),w
  6881  0327  1D03               	btfss	3,2
  6882  0328  2B2D               	goto	l428
  6883                           
  6884                           ;SlaveLiofilizadorVer1.c: 595:                          PORTCbits.RC1=0;
  6885  0329  1283               	bcf	3,5	;RP0=0, select bank0
  6886  032A  1303               	bcf	3,6	;RP1=0, select bank0
  6887  032B  1087               	bcf	7,1	;volatile
  6888  032C  2922               	goto	L9
  6889  032D                     l428:	
  6890                           ;SlaveLiofilizadorVer1.c: 596:                       else
  6891                           
  6892                           
  6893                           ;SlaveLiofilizadorVer1.c: 597:                          PORTCbits.RC1=1;
  6894  032D  1283               	bcf	3,5	;RP0=0, select bank0
  6895  032E  1303               	bcf	3,6	;RP1=0, select bank0
  6896  032F  1487               	bsf	7,1	;volatile
  6897  0330  2922               	goto	L9
  6898  0331                     l5849:	
  6899                           ;SlaveLiofilizadorVer1.c: 599:              Send_To_MB(3);
  6900                           
  6901  0331  1703               	bsf	3,6	;RP1=1, select bank3
  6902  0332  0814               	movf	(_usart_protocol^(0+384)+4),w
  6903  0333  1303               	bcf	3,6	;RP1=0, select bank1
  6904  0334  00B1               	movwf	??_Decodify_Command^(0+128)
  6905  0335  01B2               	clrf	(??_Decodify_Command^(0+128)+1)
  6906                           
  6907                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6908                           ; Switch size 1, requested type "simple"
  6909                           ; Number of cases is 1, Range of values is 0 to 0
  6910                           ; switch strategies available:
  6911                           ; Name         Instructions Cycles
  6912                           ; simple_byte            4     3 (average)
  6913                           ; direct_byte           11     8 (fixed)
  6914                           ; jumptable            260     6 (fixed)
  6915                           ;	Chosen strategy is simple_byte
  6916  0336  0832               	movf	(??_Decodify_Command+1)^(0+128),w
  6917  0337  3A00               	xorlw	0	; case 0
  6918  0338  1903               	skipnz
  6919  0339  2B3B               	goto	l5997
  6920  033A  2B82               	goto	l430
  6921  033B                     l5997:
  6922                           
  6923                           ; Switch size 1, requested type "simple"
  6924                           ; Number of cases is 23, Range of values is 2 to 65
  6925                           ; switch strategies available:
  6926                           ; Name         Instructions Cycles
  6927                           ; simple_byte           70    36 (average)
  6928                           ; direct_byte          203    11 (fixed)
  6929                           ; jumptable            263     9 (fixed)
  6930                           ;	Chosen strategy is simple_byte
  6931  033B  0831               	movf	??_Decodify_Command^(0+128),w
  6932  033C  3A02               	xorlw	2	; case 2
  6933  033D  1903               	skipnz
  6934  033E  28DB               	goto	l5711
  6935  033F  3A01               	xorlw	1	; case 3
  6936  0340  1903               	skipnz
  6937  0341  2905               	goto	l5719
  6938  0342  3A0B               	xorlw	11	; case 8
  6939  0343  1903               	skipnz
  6940  0344  2913               	goto	l5723
  6941  0345  3A01               	xorlw	1	; case 9
  6942  0346  1903               	skipnz
  6943  0347  292C               	goto	l5727
  6944  0348  3A03               	xorlw	3	; case 10
  6945  0349  1903               	skipnz
  6946  034A  2943               	goto	l5733
  6947  034B  3A01               	xorlw	1	; case 11
  6948  034C  1903               	skipnz
  6949  034D  296B               	goto	l5743
  6950  034E  3A07               	xorlw	7	; case 12
  6951  034F  1903               	skipnz
  6952  0350  2987               	goto	l5749
  6953  0351  3A01               	xorlw	1	; case 13
  6954  0352  1903               	skipnz
  6955  0353  2995               	goto	l5755
  6956  0354  3A1C               	xorlw	28	; case 17
  6957  0355  1903               	skipnz
  6958  0356  29A4               	goto	l5761
  6959  0357  3A03               	xorlw	3	; case 18
  6960  0358  1903               	skipnz
  6961  0359  29C4               	goto	l5767
  6962  035A  3A01               	xorlw	1	; case 19
  6963  035B  1903               	skipnz
  6964  035C  29EA               	goto	l5773
  6965  035D  3A07               	xorlw	7	; case 20
  6966  035E  1903               	skipnz
  6967  035F  2A0D               	goto	l5779
  6968  0360  3A01               	xorlw	1	; case 21
  6969  0361  1903               	skipnz
  6970  0362  2A7C               	goto	l5797
  6971  0363  3A03               	xorlw	3	; case 22
  6972  0364  1903               	skipnz
  6973  0365  2A9A               	goto	l5803
  6974  0366  3A01               	xorlw	1	; case 23
  6975  0367  1903               	skipnz
  6976  0368  2A58               	goto	l5791
  6977  0369  3A0F               	xorlw	15	; case 24
  6978  036A  1903               	skipnz
  6979  036B  2A2A               	goto	l5785
  6980  036C  3A01               	xorlw	1	; case 25
  6981  036D  1903               	skipnz
  6982  036E  2AC0               	goto	l5807
  6983  036F  3A03               	xorlw	3	; case 26
  6984  0370  1903               	skipnz
  6985  0371  2871               	goto	l5695
  6986  0372  3A38               	xorlw	56	; case 34
  6987  0373  1903               	skipnz
  6988  0374  2AF8               	goto	l5825
  6989  0375  3A06               	xorlw	6	; case 36
  6990  0376  1903               	skipnz
  6991  0377  2AE0               	goto	l5819
  6992  0378  3A01               	xorlw	1	; case 37
  6993  0379  1903               	skipnz
  6994  037A  2AD1               	goto	l5813
  6995  037B  3A15               	xorlw	21	; case 48
  6996  037C  1903               	skipnz
  6997  037D  2B14               	goto	l5831
  6998  037E  3A71               	xorlw	113	; case 65
  6999  037F  1903               	skipnz
  7000  0380  2857               	goto	l5689
  7001  0381  2B82               	goto	l430
  7002  0382                     l430:
  7003  0382  0008               	return
  7004  0383                     __end_of_Decodify_Command:
  7005                           
  7006                           	psect	text15
  7007  1A70                     __ptext15:	
  7008 ;; *************** function _strcpy *****************
  7009 ;; Defined at:
  7010 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strcpy.c"
  7011 ;; Parameters:    Size  Location     Type
  7012 ;;  to              1    wreg     PTR unsigned char 
  7013 ;;		 -> buffer(33), 
  7014 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  7015 ;;		 -> STR_1(8), 
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;  to              1    2[BANK0 ] PTR unsigned char 
  7018 ;;		 -> buffer(33), 
  7019 ;;  cp              1    3[BANK0 ] PTR unsigned char 
  7020 ;;		 -> buffer(33), 
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  1    wreg      PTR unsigned char 
  7023 ;; Registers used:
  7024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7025 ;; Tracked objects:
  7026 ;;		On entry : 300/0
  7027 ;;		On exit  : B00/800
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7030 ;;      Params:         0       1       0       0       0
  7031 ;;      Locals:         0       2       0       0       0
  7032 ;;      Temps:          0       1       0       0       0
  7033 ;;      Totals:         0       4       0       0       0
  7034 ;;Total ram usage:        4 bytes
  7035 ;; Hardware stack levels used: 2
  7036 ;; Hardware stack levels required when called: 1
  7037 ;; This function calls:
  7038 ;;		Nothing
  7039 ;; This function is called by:
  7040 ;;		_Decodify_Command
  7041 ;; This function uses a non-reentrant model
  7042 ;;
  7043                           
  7044                           
  7045                           ;psect for function _strcpy
  7046  1A70                     _strcpy:
  7047                           
  7048                           ;incstack = 0
  7049                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  7050                           ;strcpy@to stored from wreg
  7051  1A70  00A2               	movwf	strcpy@to
  7052  1A71  0822               	movf	strcpy@to,w
  7053  1A72  00A1               	movwf	??_strcpy
  7054  1A73  0821               	movf	??_strcpy,w
  7055  1A74  00A3               	movwf	strcpy@cp
  7056  1A75                     l4723:
  7057  1A75  0820               	movf	strcpy@from,w
  7058  1A76  0084               	movwf	4
  7059  1A77  160A  158A  200A  160A  158A  	fcall	stringdir
  7060  1A7C  00A1               	movwf	??_strcpy
  7061  1A7D  0823               	movf	strcpy@cp,w
  7062  1A7E  0084               	movwf	4
  7063  1A7F  0821               	movf	??_strcpy,w
  7064  1A80  1783               	bsf	3,7	;select IRP bank2
  7065  1A81  0080               	movwf	0
  7066  1A82  0800               	movf	0,w
  7067  1A83  1903               	btfsc	3,2
  7068  1A84  0008               	return
  7069  1A85  3001               	movlw	1
  7070  1A86  00A1               	movwf	??_strcpy
  7071  1A87  0821               	movf	??_strcpy,w
  7072  1A88  07A3               	addwf	strcpy@cp,f
  7073  1A89  3001               	movlw	1
  7074  1A8A  00A1               	movwf	??_strcpy
  7075  1A8B  0821               	movf	??_strcpy,w
  7076  1A8C  07A0               	addwf	strcpy@from,f
  7077  1A8D  2A75               	goto	l4723
  7078  1A8E                     __end_of_strcpy:
  7079                           
  7080                           	psect	text16
  7081  1ED8                     __ptext16:	
  7082 ;; *************** function _USART_to_Protocol *****************
  7083 ;; Defined at:
  7084 ;;		line 77 in file "usart.c"
  7085 ;; Parameters:    Size  Location     Type
  7086 ;;  usart_protoc    1    wreg     PTR struct .
  7087 ;;		 -> usart_protocol(58), 
  7088 ;; Auto vars:     Size  Location     Type
  7089 ;;  usart_protoc    1    4[BANK0 ] PTR struct .
  7090 ;;		 -> usart_protocol(58), 
  7091 ;;  i               2    2[BANK0 ] int 
  7092 ;; Return value:  Size  Location     Type
  7093 ;;                  1    wreg      void 
  7094 ;; Registers used:
  7095 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7096 ;; Tracked objects:
  7097 ;;		On entry : 300/100
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7101 ;;      Params:         0       0       0       0       0
  7102 ;;      Locals:         0       3       0       0       0
  7103 ;;      Temps:          0       2       0       0       0
  7104 ;;      Totals:         0       5       0       0       0
  7105 ;;Total ram usage:        5 bytes
  7106 ;; Hardware stack levels used: 1
  7107 ;; Hardware stack levels required when called: 1
  7108 ;; This function calls:
  7109 ;;		Nothing
  7110 ;; This function is called by:
  7111 ;;		_Decodify_Command
  7112 ;; This function uses a non-reentrant model
  7113 ;;
  7114                           
  7115                           
  7116                           ;psect for function _USART_to_Protocol
  7117  1ED8                     _USART_to_Protocol:
  7118                           
  7119                           ;incstack = 0
  7120                           ; Regs used in _USART_to_Protocol: [wreg-fsr0h+status,2+status,0]
  7121                           ;USART_to_Protocol@usart_protocol stored from wreg
  7122  1ED8  1283               	bcf	3,5	;RP0=0, select bank0
  7123  1ED9  00A4               	movwf	USART_to_Protocol@usart_protocol
  7124                           
  7125                           ;usart.c: 78:      usart_protocol->header=((unsigned int)usart_buffer[0]<<8)+usart_buffe
      +                          r[1];
  7126  1EDA  0824               	movf	USART_to_Protocol@usart_protocol,w
  7127  1EDB  0084               	movwf	4
  7128  1EDC  1703               	bsf	3,6	;RP1=1, select bank2
  7129  1EDD  0811               	movf	(_usart_buffer^(0+256)+1),w	;volatile
  7130  1EDE  1783               	bsf	3,7	;select IRP bank2
  7131  1EDF  0080               	movwf	0
  7132  1EE0  0A84               	incf	4,f
  7133  1EE1  0810               	movf	_usart_buffer^(0+256),w	;volatile
  7134  1EE2  0080               	movwf	0
  7135                           
  7136                           ;usart.c: 79:      usart_protocol->origem=usart_buffer[2];
  7137  1EE3  0812               	movf	(_usart_buffer^(0+256)+2),w	;volatile
  7138  1EE4  1303               	bcf	3,6	;RP1=0, select bank0
  7139  1EE5  00A0               	movwf	??_USART_to_Protocol
  7140  1EE6  0824               	movf	USART_to_Protocol@usart_protocol,w
  7141  1EE7  3E02               	addlw	2
  7142  1EE8  0084               	movwf	4
  7143  1EE9  0820               	movf	??_USART_to_Protocol,w
  7144  1EEA  0080               	movwf	0
  7145                           
  7146                           ;usart.c: 80:      usart_protocol->destino=usart_buffer[3];
  7147  1EEB  1703               	bsf	3,6	;RP1=1, select bank2
  7148  1EEC  0813               	movf	(_usart_buffer^(0+256)+3),w	;volatile
  7149  1EED  1303               	bcf	3,6	;RP1=0, select bank0
  7150  1EEE  00A0               	movwf	??_USART_to_Protocol
  7151  1EEF  0824               	movf	USART_to_Protocol@usart_protocol,w
  7152  1EF0  3E03               	addlw	3
  7153  1EF1  0084               	movwf	4
  7154  1EF2  0820               	movf	??_USART_to_Protocol,w
  7155  1EF3  0080               	movwf	0
  7156                           
  7157                           ;usart.c: 81:      usart_protocol->command=usart_buffer[4];
  7158  1EF4  1703               	bsf	3,6	;RP1=1, select bank2
  7159  1EF5  0814               	movf	(_usart_buffer^(0+256)+4),w	;volatile
  7160  1EF6  1303               	bcf	3,6	;RP1=0, select bank0
  7161  1EF7  00A0               	movwf	??_USART_to_Protocol
  7162  1EF8  0824               	movf	USART_to_Protocol@usart_protocol,w
  7163  1EF9  3E04               	addlw	4
  7164  1EFA  0084               	movwf	4
  7165  1EFB  0820               	movf	??_USART_to_Protocol,w
  7166  1EFC  0080               	movwf	0
  7167                           
  7168                           ;usart.c: 82:      usart_protocol->size=usart_buffer[5];
  7169  1EFD  1703               	bsf	3,6	;RP1=1, select bank2
  7170  1EFE  0815               	movf	(_usart_buffer^(0+256)+5),w	;volatile
  7171  1EFF  1303               	bcf	3,6	;RP1=0, select bank0
  7172  1F00  00A0               	movwf	??_USART_to_Protocol
  7173  1F01  0824               	movf	USART_to_Protocol@usart_protocol,w
  7174  1F02  3E05               	addlw	5
  7175  1F03  0084               	movwf	4
  7176  1F04  0820               	movf	??_USART_to_Protocol,w
  7177  1F05  0080               	movwf	0
  7178                           
  7179                           ;usart.c: 83:      for(int i=0;i<usart_protocol->size;i++)
  7180  1F06  01A2               	clrf	USART_to_Protocol@i
  7181  1F07  01A3               	clrf	USART_to_Protocol@i+1
  7182  1F08                     l4717:
  7183  1F08  0824               	movf	USART_to_Protocol@usart_protocol,w
  7184  1F09  3E05               	addlw	5
  7185  1F0A  0084               	movwf	4
  7186  1F0B  0823               	movf	USART_to_Protocol@i+1,w
  7187  1F0C  3A80               	xorlw	128
  7188  1F0D  00A0               	movwf	??_USART_to_Protocol
  7189  1F0E  3080               	movlw	128
  7190  1F0F  0220               	subwf	??_USART_to_Protocol,w
  7191  1F10  1D03               	skipz
  7192  1F11  2F14               	goto	u4385
  7193  1F12  0800               	movf	0,w
  7194  1F13  0222               	subwf	USART_to_Protocol@i,w
  7195  1F14                     u4385:
  7196  1F14  1803               	btfsc	3,0
  7197  1F15  0008               	return
  7198                           
  7199                           ;usart.c: 84:         usart_protocol->value[i]=(unsigned char) usart_buffer[i+6];
  7200  1F16  1283               	bcf	3,5	;RP0=0, select bank0
  7201  1F17  1303               	bcf	3,6	;RP1=0, select bank0
  7202  1F18  0822               	movf	USART_to_Protocol@i,w
  7203  1F19  3E16               	addlw	(low ((_usart_buffer| (0+256)+6)))& (0+255)
  7204  1F1A  0084               	movwf	4
  7205  1F1B  1783               	bsf	3,7	;select IRP bank2
  7206  1F1C  0800               	movf	0,w
  7207  1F1D  00A0               	movwf	??_USART_to_Protocol
  7208  1F1E  0822               	movf	USART_to_Protocol@i,w
  7209  1F1F  0724               	addwf	USART_to_Protocol@usart_protocol,w
  7210  1F20  00A1               	movwf	??_USART_to_Protocol+1
  7211  1F21  0821               	movf	??_USART_to_Protocol+1,w
  7212  1F22  3E06               	addlw	6
  7213  1F23  0084               	movwf	4
  7214  1F24  0820               	movf	??_USART_to_Protocol,w
  7215  1F25  0080               	movwf	0
  7216  1F26  3001               	movlw	1
  7217  1F27  07A2               	addwf	USART_to_Protocol@i,f
  7218  1F28  1803               	skipnc
  7219  1F29  0AA3               	incf	USART_to_Protocol@i+1,f
  7220  1F2A  3000               	movlw	0
  7221  1F2B  07A3               	addwf	USART_to_Protocol@i+1,f
  7222  1F2C  2F08               	goto	l4717
  7223  1F2D                     __end_of_USART_to_Protocol:
  7224                           
  7225                           	psect	text17
  7226  1B5A                     __ptext17:	
  7227 ;; *************** function _Send_To_MB *****************
  7228 ;; Defined at:
  7229 ;;		line 608 in file "SlaveLiofilizadorVer1.c"
  7230 ;; Parameters:    Size  Location     Type
  7231 ;;  size            1    wreg     unsigned char 
  7232 ;; Auto vars:     Size  Location     Type
  7233 ;;  size            1    1[BANK0 ] unsigned char 
  7234 ;; Return value:  Size  Location     Type
  7235 ;;                  1    wreg      void 
  7236 ;; Registers used:
  7237 ;;		wreg, status,2, status,0, pclath, cstack
  7238 ;; Tracked objects:
  7239 ;;		On entry : 0/800
  7240 ;;		On exit  : 300/100
  7241 ;;		Unchanged: 0/0
  7242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7243 ;;      Params:         0       0       0       0       0
  7244 ;;      Locals:         0       1       0       0       0
  7245 ;;      Temps:          0       0       0       0       0
  7246 ;;      Totals:         0       1       0       0       0
  7247 ;;Total ram usage:        1 bytes
  7248 ;; Hardware stack levels used: 1
  7249 ;; Hardware stack levels required when called: 2
  7250 ;; This function calls:
  7251 ;;		_USART_putc
  7252 ;; This function is called by:
  7253 ;;		_Decodify_Command
  7254 ;; This function uses a non-reentrant model
  7255 ;;
  7256                           
  7257                           
  7258                           ;psect for function _Send_To_MB
  7259  1B5A                     _Send_To_MB:
  7260                           
  7261                           ;incstack = 0
  7262                           ; Regs used in _Send_To_MB: [wreg+status,2+status,0+pclath+cstack]
  7263                           ;Send_To_MB@size stored from wreg
  7264  1B5A  1283               	bcf	3,5	;RP0=0, select bank0
  7265  1B5B  1303               	bcf	3,6	;RP1=0, select bank0
  7266  1B5C  00A1               	movwf	Send_To_MB@size
  7267                           
  7268                           ;SlaveLiofilizadorVer1.c: 610:      USART_putc(0xAA);
  7269  1B5D  30AA               	movlw	170
  7270  1B5E  160A  158A  21A4  160A  158A  	fcall	_USART_putc
  7271                           
  7272                           ;SlaveLiofilizadorVer1.c: 611:      USART_putc(0xBB);
  7273  1B63  30BB               	movlw	187
  7274  1B64  160A  158A  21A4  160A  158A  	fcall	_USART_putc
  7275                           
  7276                           ;SlaveLiofilizadorVer1.c: 612:      USART_putc(Board_Number);
  7277  1B69  0861               	movf	_Board_Number^(0+128),w
  7278  1B6A  160A  158A  21A4  160A  158A  	fcall	_USART_putc
  7279                           
  7280                           ;SlaveLiofilizadorVer1.c: 613:      USART_putc(0x00);
  7281  1B6F  3000               	movlw	0
  7282  1B70  160A  158A  21A4  160A  158A  	fcall	_USART_putc
  7283                           
  7284                           ;SlaveLiofilizadorVer1.c: 614:      USART_putc(usart_protocol.command);
  7285  1B75  1703               	bsf	3,6	;RP1=1, select bank3
  7286  1B76  0814               	movf	(_usart_protocol^(0+384)+4),w
  7287  1B77  160A  158A  21A4  160A  158A  	fcall	_USART_putc
  7288                           
  7289                           ;SlaveLiofilizadorVer1.c: 615:      USART_putc(size);
  7290  1B7C  1283               	bcf	3,5	;RP0=0, select bank0
  7291  1B7D  0821               	movf	Send_To_MB@size,w
  7292  1B7E  160A  158A  21A4   	fcall	_USART_putc
  7293  1B81  0008               	return
  7294  1B82                     __end_of_Send_To_MB:
  7295                           
  7296                           	psect	text18
  7297  197A                     __ptext18:	
  7298 ;; *************** function _Send_Reply_OK *****************
  7299 ;; Defined at:
  7300 ;;		line 619 in file "SlaveLiofilizadorVer1.c"
  7301 ;; Parameters:    Size  Location     Type
  7302 ;;		None
  7303 ;; Auto vars:     Size  Location     Type
  7304 ;;		None
  7305 ;; Return value:  Size  Location     Type
  7306 ;;                  1    wreg      void 
  7307 ;; Registers used:
  7308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7309 ;; Tracked objects:
  7310 ;;		On entry : 300/100
  7311 ;;		On exit  : 300/100
  7312 ;;		Unchanged: 0/0
  7313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7314 ;;      Params:         0       0       0       0       0
  7315 ;;      Locals:         0       0       0       0       0
  7316 ;;      Temps:          0       0       0       0       0
  7317 ;;      Totals:         0       0       0       0       0
  7318 ;;Total ram usage:        0 bytes
  7319 ;; Hardware stack levels used: 1
  7320 ;; Hardware stack levels required when called: 3
  7321 ;; This function calls:
  7322 ;;		_USART_put_string
  7323 ;; This function is called by:
  7324 ;;		_Decodify_Command
  7325 ;; This function uses a non-reentrant model
  7326 ;;
  7327                           
  7328                           
  7329                           ;psect for function _Send_Reply_OK
  7330  197A                     _Send_Reply_OK:
  7331                           
  7332                           ;SlaveLiofilizadorVer1.c: 620:      USART_put_string("OK");
  7333                           
  7334                           ;incstack = 0
  7335                           ; Regs used in _Send_Reply_OK: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7336  197A  3049               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  7337  197B  1283               	bcf	3,5	;RP0=0, select bank0
  7338  197C  00A1               	movwf	USART_put_string@vetor
  7339  197D  3080               	movlw	128
  7340  197E  00A2               	movwf	USART_put_string@vetor+1
  7341  197F  160A  158A  248D   	fcall	_USART_put_string
  7342  1982  0008               	return
  7343  1983                     __end_of_Send_Reply_OK:
  7344                           
  7345                           	psect	text19
  7346  1C8D                     __ptext19:	
  7347 ;; *************** function _USART_put_string *****************
  7348 ;; Defined at:
  7349 ;;		line 167 in file "usart.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;  vetor           2    1[BANK0 ] PTR unsigned char 
  7352 ;;		 -> STR_2(3), buffer(33), 
  7353 ;; Auto vars:     Size  Location     Type
  7354 ;;  ptr             2    3[BANK0 ] PTR unsigned char 
  7355 ;;		 -> STR_2(3), buffer(33), 
  7356 ;; Return value:  Size  Location     Type
  7357 ;;                  1    wreg      void 
  7358 ;; Registers used:
  7359 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7360 ;; Tracked objects:
  7361 ;;		On entry : 300/800
  7362 ;;		On exit  : 300/100
  7363 ;;		Unchanged: 0/0
  7364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7365 ;;      Params:         0       2       0       0       0
  7366 ;;      Locals:         0       2       0       0       0
  7367 ;;      Temps:          0       0       0       0       0
  7368 ;;      Totals:         0       4       0       0       0
  7369 ;;Total ram usage:        4 bytes
  7370 ;; Hardware stack levels used: 1
  7371 ;; Hardware stack levels required when called: 2
  7372 ;; This function calls:
  7373 ;;		_USART_putc
  7374 ;; This function is called by:
  7375 ;;		_Decodify_Command
  7376 ;;		_Send_Reply_OK
  7377 ;; This function uses a non-reentrant model
  7378 ;;
  7379                           
  7380                           
  7381                           ;psect for function _USART_put_string
  7382  1C8D                     _USART_put_string:
  7383                           
  7384                           ;usart.c: 167: void USART_put_string(char *vetor);usart.c: 168: {;usart.c: 169:     char
      +                           *ptr;;usart.c: 170:     ptr=vetor;
  7385                           
  7386                           ;incstack = 0
  7387                           ; Regs used in _USART_put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7388  1C8D  0821               	movf	USART_put_string@vetor,w
  7389  1C8E  00A3               	movwf	USART_put_string@ptr
  7390  1C8F  0822               	movf	USART_put_string@vetor+1,w
  7391  1C90  00A4               	movwf	USART_put_string@ptr+1
  7392  1C91                     l3833:	
  7393                           ;usart.c: 171:     while(*ptr){
  7394                           
  7395                           
  7396                           ;usart.c: 171:     while(*ptr){
  7397  1C91  0824               	movf	USART_put_string@ptr+1,w
  7398  1C92  00FF               	movwf	127
  7399  1C93  0823               	movf	USART_put_string@ptr,w
  7400  1C94  0084               	movwf	4
  7401  1C95  160A  158A  2000  160A  158A  	fcall	stringtab
  7402  1C9A  3A00               	xorlw	0
  7403  1C9B  1903               	btfsc	3,2
  7404  1C9C  2CB3               	goto	l3835
  7405                           
  7406                           ;usart.c: 172:         USART_putc(*ptr);
  7407  1C9D  0824               	movf	USART_put_string@ptr+1,w
  7408  1C9E  00FF               	movwf	127
  7409  1C9F  0823               	movf	USART_put_string@ptr,w
  7410  1CA0  0084               	movwf	4
  7411  1CA1  160A  158A  2000  160A  158A  	fcall	stringtab
  7412  1CA6  160A  158A  21A4  160A  158A  	fcall	_USART_putc
  7413                           
  7414                           ;usart.c: 173:         ptr++;
  7415  1CAB  3001               	movlw	1
  7416  1CAC  1283               	bcf	3,5	;RP0=0, select bank0
  7417  1CAD  07A3               	addwf	USART_put_string@ptr,f
  7418  1CAE  1803               	skipnc
  7419  1CAF  0AA4               	incf	USART_put_string@ptr+1,f
  7420  1CB0  3000               	movlw	0
  7421  1CB1  07A4               	addwf	USART_put_string@ptr+1,f
  7422  1CB2  2C91               	goto	l3833
  7423  1CB3                     l3835:
  7424                           
  7425                           ;usart.c: 175:     USART_putc(*ptr);
  7426  1CB3  0824               	movf	USART_put_string@ptr+1,w
  7427  1CB4  00FF               	movwf	127
  7428  1CB5  0823               	movf	USART_put_string@ptr,w
  7429  1CB6  0084               	movwf	4
  7430  1CB7  160A  158A  2000  160A  158A  	fcall	stringtab
  7431  1CBC  160A  158A  21A4   	fcall	_USART_putc
  7432  1CBF  0008               	return
  7433  1CC0                     __end_of_USART_put_string:
  7434                           
  7435                           	psect	text20
  7436  1F83                     __ptext20:	
  7437 ;; *************** function _Save_Log *****************
  7438 ;; Defined at:
  7439 ;;		line 1028 in file "SlaveLiofilizadorVer1.c"
  7440 ;; Parameters:    Size  Location     Type
  7441 ;;  add_datalog     4   10[BANK1 ] unsigned long 
  7442 ;; Auto vars:     Size  Location     Type
  7443 ;;		None
  7444 ;; Return value:  Size  Location     Type
  7445 ;;                  1    wreg      void 
  7446 ;; Registers used:
  7447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7448 ;; Tracked objects:
  7449 ;;		On entry : 300/100
  7450 ;;		On exit  : 0/0
  7451 ;;		Unchanged: 0/0
  7452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7453 ;;      Params:         0       0       4       0       0
  7454 ;;      Locals:         0       0       0       0       0
  7455 ;;      Temps:          0       0       0       0       0
  7456 ;;      Totals:         0       0       4       0       0
  7457 ;;Total ram usage:        4 bytes
  7458 ;; Hardware stack levels used: 1
  7459 ;; Hardware stack levels required when called: 5
  7460 ;; This function calls:
  7461 ;;		_EEPROM_24C1025_Write_Int
  7462 ;;		___flmul
  7463 ;;		___fltol
  7464 ;; This function is called by:
  7465 ;;		_Decodify_Command
  7466 ;; This function uses a non-reentrant model
  7467 ;;
  7468                           
  7469                           
  7470                           ;psect for function _Save_Log
  7471  1F83                     _Save_Log:
  7472                           
  7473                           ;SlaveLiofilizadorVer1.c: 1029:      EEPROM_24C1025_Write_Int(0x00, add_datalog, (Tensao
      +                          1*10.0));
  7474                           
  7475                           ;incstack = 0
  7476                           ; Regs used in _Save_Log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7477  1F83  082D               	movf	(Save_Log@add_datalog+3)^(0+128),w
  7478  1F84  00A3               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
  7479  1F85  082C               	movf	(Save_Log@add_datalog+2)^(0+128),w
  7480  1F86  00A2               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
  7481  1F87  082B               	movf	(Save_Log@add_datalog+1)^(0+128),w
  7482  1F88  00A1               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
  7483  1F89  082A               	movf	Save_Log@add_datalog^(0+128),w
  7484  1F8A  00A0               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
  7485  1F8B  084C               	movf	(_Tensao1+3)^(0+128),w
  7486  1F8C  1283               	bcf	3,5	;RP0=0, select bank0
  7487  1F8D  00D2               	movwf	___flmul@a+3
  7488  1F8E  1683               	bsf	3,5	;RP0=1, select bank1
  7489  1F8F  084B               	movf	(_Tensao1+2)^(0+128),w
  7490  1F90  1283               	bcf	3,5	;RP0=0, select bank0
  7491  1F91  00D1               	movwf	___flmul@a+2
  7492  1F92  1683               	bsf	3,5	;RP0=1, select bank1
  7493  1F93  084A               	movf	(_Tensao1+1)^(0+128),w
  7494  1F94  1283               	bcf	3,5	;RP0=0, select bank0
  7495  1F95  00D0               	movwf	___flmul@a+1
  7496  1F96  1683               	bsf	3,5	;RP0=1, select bank1
  7497  1F97  0849               	movf	_Tensao1^(0+128),w
  7498  1F98  1283               	bcf	3,5	;RP0=0, select bank0
  7499  1F99  00CF               	movwf	___flmul@a
  7500  1F9A  3041               	movlw	65
  7501  1F9B  00CE               	movwf	___flmul@b+3
  7502  1F9C  3020               	movlw	32
  7503  1F9D  00CD               	movwf	___flmul@b+2
  7504  1F9E  3000               	movlw	0
  7505  1F9F  00CC               	movwf	___flmul@b+1
  7506  1FA0  3000               	movlw	0
  7507  1FA1  00CB               	movwf	___flmul@b
  7508  1FA2  120A  118A  2383  160A  158A  	fcall	___flmul
  7509  1FA7  084E               	movf	?___flmul+3,w
  7510  1FA8  00E8               	movwf	___fltol@f1+3
  7511  1FA9  084D               	movf	?___flmul+2,w
  7512  1FAA  00E7               	movwf	___fltol@f1+2
  7513  1FAB  084C               	movf	?___flmul+1,w
  7514  1FAC  00E6               	movwf	___fltol@f1+1
  7515  1FAD  084B               	movf	?___flmul,w
  7516  1FAE  00E5               	movwf	___fltol@f1
  7517  1FAF  120A  158A  2002  160A  158A  	fcall	___fltol
  7518  1FB4  0866               	movf	?___fltol+1,w
  7519  1FB5  1683               	bsf	3,5	;RP0=1, select bank1
  7520  1FB6  00A5               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  7521  1FB7  1283               	bcf	3,5	;RP0=0, select bank0
  7522  1FB8  0865               	movf	?___fltol,w
  7523  1FB9  1683               	bsf	3,5	;RP0=1, select bank1
  7524  1FBA  00A4               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  7525  1FBB  3000               	movlw	0
  7526  1FBC  160A  158A  2382  160A  158A  	fcall	_EEPROM_24C1025_Write_Int
  7527                           
  7528                           ;SlaveLiofilizadorVer1.c: 1030:      EEPROM_24C1025_Write_Int(0x01, add_datalog, (Vaccum
      +                          0*10.0));
  7529  1FC1  1683               	bsf	3,5	;RP0=1, select bank1
  7530  1FC2  1303               	bcf	3,6	;RP1=0, select bank1
  7531  1FC3  082D               	movf	(Save_Log@add_datalog+3)^(0+128),w
  7532  1FC4  00A3               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
  7533  1FC5  082C               	movf	(Save_Log@add_datalog+2)^(0+128),w
  7534  1FC6  00A2               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
  7535  1FC7  082B               	movf	(Save_Log@add_datalog+1)^(0+128),w
  7536  1FC8  00A1               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
  7537  1FC9  082A               	movf	Save_Log@add_datalog^(0+128),w
  7538  1FCA  00A0               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
  7539  1FCB  0850               	movf	(_Vaccum0+3)^(0+128),w
  7540  1FCC  1283               	bcf	3,5	;RP0=0, select bank0
  7541  1FCD  00D2               	movwf	___flmul@a+3
  7542  1FCE  1683               	bsf	3,5	;RP0=1, select bank1
  7543  1FCF  084F               	movf	(_Vaccum0+2)^(0+128),w
  7544  1FD0  1283               	bcf	3,5	;RP0=0, select bank0
  7545  1FD1  00D1               	movwf	___flmul@a+2
  7546  1FD2  1683               	bsf	3,5	;RP0=1, select bank1
  7547  1FD3  084E               	movf	(_Vaccum0+1)^(0+128),w
  7548  1FD4  1283               	bcf	3,5	;RP0=0, select bank0
  7549  1FD5  00D0               	movwf	___flmul@a+1
  7550  1FD6  1683               	bsf	3,5	;RP0=1, select bank1
  7551  1FD7  084D               	movf	_Vaccum0^(0+128),w
  7552  1FD8  1283               	bcf	3,5	;RP0=0, select bank0
  7553  1FD9  00CF               	movwf	___flmul@a
  7554  1FDA  3041               	movlw	65
  7555  1FDB  00CE               	movwf	___flmul@b+3
  7556  1FDC  3020               	movlw	32
  7557  1FDD  00CD               	movwf	___flmul@b+2
  7558  1FDE  3000               	movlw	0
  7559  1FDF  00CC               	movwf	___flmul@b+1
  7560  1FE0  3000               	movlw	0
  7561  1FE1  00CB               	movwf	___flmul@b
  7562  1FE2  120A  118A  2383  160A  158A  	fcall	___flmul
  7563  1FE7  084E               	movf	?___flmul+3,w
  7564  1FE8  00E8               	movwf	___fltol@f1+3
  7565  1FE9  084D               	movf	?___flmul+2,w
  7566  1FEA  00E7               	movwf	___fltol@f1+2
  7567  1FEB  084C               	movf	?___flmul+1,w
  7568  1FEC  00E6               	movwf	___fltol@f1+1
  7569  1FED  084B               	movf	?___flmul,w
  7570  1FEE  00E5               	movwf	___fltol@f1
  7571  1FEF  120A  158A  2002  160A  158A  	fcall	___fltol
  7572  1FF4  0866               	movf	?___fltol+1,w
  7573  1FF5  1683               	bsf	3,5	;RP0=1, select bank1
  7574  1FF6  00A5               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
  7575  1FF7  1283               	bcf	3,5	;RP0=0, select bank0
  7576  1FF8  0865               	movf	?___fltol,w
  7577  1FF9  1683               	bsf	3,5	;RP0=1, select bank1
  7578  1FFA  00A4               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
  7579  1FFB  3001               	movlw	1
  7580  1FFC  160A  158A  2382   	fcall	_EEPROM_24C1025_Write_Int
  7581  1FFF  0008               	return
  7582  2000                     __end_of_Save_Log:
  7583                           
  7584                           	psect	text21
  7585  0802                     __ptext21:	
  7586 ;; *************** function ___fltol *****************
  7587 ;; Defined at:
  7588 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  7589 ;; Parameters:    Size  Location     Type
  7590 ;;  f1              4   69[BANK0 ] void 
  7591 ;; Auto vars:     Size  Location     Type
  7592 ;;  exp1            1   79[BANK0 ] unsigned char 
  7593 ;;  sign1           1   78[BANK0 ] unsigned char 
  7594 ;; Return value:  Size  Location     Type
  7595 ;;                  4   69[BANK0 ] long 
  7596 ;; Registers used:
  7597 ;;		wreg, status,2, status,0
  7598 ;; Tracked objects:
  7599 ;;		On entry : 300/0
  7600 ;;		On exit  : 300/0
  7601 ;;		Unchanged: 0/0
  7602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7603 ;;      Params:         0       4       0       0       0
  7604 ;;      Locals:         0       2       0       0       0
  7605 ;;      Temps:          0       5       0       0       0
  7606 ;;      Totals:         0      11       0       0       0
  7607 ;;Total ram usage:       11 bytes
  7608 ;; Hardware stack levels used: 1
  7609 ;; Hardware stack levels required when called: 1
  7610 ;; This function calls:
  7611 ;;		Nothing
  7612 ;; This function is called by:
  7613 ;;		_Decodify_Command
  7614 ;;		_Save_Log
  7615 ;; This function uses a non-reentrant model
  7616 ;;
  7617                           
  7618                           
  7619                           ;psect for function ___fltol
  7620  0802                     ___fltol:
  7621                           
  7622                           ;incstack = 0
  7623                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7624  0802  1003               	clrc
  7625  0803  0D67               	rlf	___fltol@f1+2,w
  7626  0804  0D68               	rlf	___fltol@f1+3,w
  7627  0805  00E9               	movwf	??___fltol
  7628  0806  0869               	movf	??___fltol,w
  7629  0807  00EF               	movwf	___fltol@exp1
  7630  0808  086F               	movf	___fltol@exp1,w
  7631  0809  1D03               	btfss	3,2
  7632  080A  2814               	goto	l3935
  7633  080B                     l3931:
  7634  080B  3000               	movlw	0
  7635  080C  00E8               	movwf	?___fltol+3
  7636  080D  3000               	movlw	0
  7637  080E  00E7               	movwf	?___fltol+2
  7638  080F  3000               	movlw	0
  7639  0810  00E6               	movwf	?___fltol+1
  7640  0811  3000               	movlw	0
  7641  0812  00E5               	movwf	?___fltol
  7642  0813  0008               	return
  7643  0814                     l3935:
  7644  0814  0865               	movf	___fltol@f1,w
  7645  0815  00E9               	movwf	??___fltol
  7646  0816  0866               	movf	___fltol@f1+1,w
  7647  0817  00EA               	movwf	??___fltol+1
  7648  0818  0867               	movf	___fltol@f1+2,w
  7649  0819  00EB               	movwf	??___fltol+2
  7650  081A  0868               	movf	___fltol@f1+3,w
  7651  081B  00EC               	movwf	??___fltol+3
  7652  081C  301F               	movlw	31
  7653  081D                     u3045:
  7654  081D  1003               	clrc
  7655  081E  0CEC               	rrf	??___fltol+3,f
  7656  081F  0CEB               	rrf	??___fltol+2,f
  7657  0820  0CEA               	rrf	??___fltol+1,f
  7658  0821  0CE9               	rrf	??___fltol,f
  7659  0822  3EFF               	addlw	-1
  7660  0823  1D03               	skipz
  7661  0824  281D               	goto	u3045
  7662  0825  0869               	movf	??___fltol,w
  7663  0826  00ED               	movwf	??___fltol+4
  7664  0827  086D               	movf	??___fltol+4,w
  7665  0828  00EE               	movwf	___fltol@sign1
  7666  0829  17E7               	bsf	___fltol@f1+2,7
  7667  082A  30FF               	movlw	255
  7668  082B  05E5               	andwf	___fltol@f1,f
  7669  082C  30FF               	movlw	255
  7670  082D  05E6               	andwf	___fltol@f1+1,f
  7671  082E  30FF               	movlw	255
  7672  082F  05E7               	andwf	___fltol@f1+2,f
  7673  0830  3000               	movlw	0
  7674  0831  05E8               	andwf	___fltol@f1+3,f
  7675  0832  3096               	movlw	150
  7676  0833  02EF               	subwf	___fltol@exp1,f
  7677  0834  1FEF               	btfss	___fltol@exp1,7
  7678  0835  284B               	goto	l3953
  7679  0836  086F               	movf	___fltol@exp1,w
  7680  0837  3A80               	xorlw	128
  7681  0838  3E97               	addlw	151
  7682  0839  1C03               	btfss	3,0
  7683  083A  280B               	goto	l3931
  7684  083B                     l3951:
  7685  083B  3001               	movlw	1
  7686  083C                     u3075:
  7687  083C  1003               	clrc
  7688  083D  0CE8               	rrf	___fltol@f1+3,f
  7689  083E  0CE7               	rrf	___fltol@f1+2,f
  7690  083F  0CE6               	rrf	___fltol@f1+1,f
  7691  0840  0CE5               	rrf	___fltol@f1,f
  7692  0841  3EFF               	addlw	-1
  7693  0842  1D03               	skipz
  7694  0843  283C               	goto	u3075
  7695  0844  3001               	movlw	1
  7696  0845  00E9               	movwf	??___fltol
  7697  0846  0869               	movf	??___fltol,w
  7698  0847  07EF               	addwf	___fltol@exp1,f
  7699  0848  1903               	btfsc	3,2
  7700  0849  285E               	goto	l3961
  7701  084A  283B               	goto	l3951
  7702  084B                     l3953:
  7703  084B  3020               	movlw	32
  7704  084C  026F               	subwf	___fltol@exp1,w
  7705  084D  1803               	btfsc	3,0
  7706  084E  280B               	goto	l3931
  7707  084F                     l1190:
  7708  084F  086F               	movf	___fltol@exp1,w
  7709  0850  1903               	btfsc	3,2
  7710  0851  285E               	goto	l3961
  7711  0852  3001               	movlw	1
  7712  0853  00E9               	movwf	??___fltol
  7713  0854                     u3105:
  7714  0854  1003               	clrc
  7715  0855  0DE5               	rlf	___fltol@f1,f
  7716  0856  0DE6               	rlf	___fltol@f1+1,f
  7717  0857  0DE7               	rlf	___fltol@f1+2,f
  7718  0858  0DE8               	rlf	___fltol@f1+3,f
  7719  0859  0BE9               	decfsz	??___fltol,f
  7720  085A  2854               	goto	u3105
  7721  085B  3001               	movlw	1
  7722  085C  02EF               	subwf	___fltol@exp1,f
  7723  085D  284F               	goto	l1190
  7724  085E                     l3961:
  7725  085E  086E               	movf	___fltol@sign1,w
  7726  085F  1903               	btfsc	3,2
  7727  0860  0008               	return
  7728  0861  09E5               	comf	___fltol@f1,f
  7729  0862  09E6               	comf	___fltol@f1+1,f
  7730  0863  09E7               	comf	___fltol@f1+2,f
  7731  0864  09E8               	comf	___fltol@f1+3,f
  7732  0865  0AE5               	incf	___fltol@f1,f
  7733  0866  1903               	skipnz
  7734  0867  0AE6               	incf	___fltol@f1+1,f
  7735  0868  1903               	skipnz
  7736  0869  0AE7               	incf	___fltol@f1+2,f
  7737  086A  1903               	skipnz
  7738  086B  0AE8               	incf	___fltol@f1+3,f
  7739  086C  0008               	return
  7740  086D                     __end_of___fltol:
  7741                           
  7742                           	psect	text22
  7743  0383                     __ptext22:	
  7744 ;; *************** function ___flmul *****************
  7745 ;; Defined at:
  7746 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  7747 ;; Parameters:    Size  Location     Type
  7748 ;;  b               4   43[BANK0 ] long 
  7749 ;;  a               4   47[BANK0 ] long 
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;  prod            4   63[BANK0 ] struct .
  7752 ;;  grs             4   58[BANK0 ] unsigned long 
  7753 ;;  temp            2   67[BANK0 ] struct .
  7754 ;;  bexp            1   62[BANK0 ] unsigned char 
  7755 ;;  aexp            1   57[BANK0 ] unsigned char 
  7756 ;;  sign            1   56[BANK0 ] unsigned char 
  7757 ;; Return value:  Size  Location     Type
  7758 ;;                  4   43[BANK0 ] unsigned char 
  7759 ;; Registers used:
  7760 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7761 ;; Tracked objects:
  7762 ;;		On entry : 300/0
  7763 ;;		On exit  : 300/0
  7764 ;;		Unchanged: 0/0
  7765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7766 ;;      Params:         0       8       0       0       0
  7767 ;;      Locals:         0      13       0       0       0
  7768 ;;      Temps:          0       5       0       0       0
  7769 ;;      Totals:         0      26       0       0       0
  7770 ;;Total ram usage:       26 bytes
  7771 ;; Hardware stack levels used: 1
  7772 ;; Hardware stack levels required when called: 2
  7773 ;; This function calls:
  7774 ;;		__Umul8_16
  7775 ;; This function is called by:
  7776 ;;		_Decodify_Command
  7777 ;;		_MediaPlacaVaccum
  7778 ;;		_Save_Log
  7779 ;; This function uses a non-reentrant model
  7780 ;;
  7781                           
  7782                           
  7783                           ;psect for function ___flmul
  7784  0383                     ___flmul:
  7785                           
  7786                           ;incstack = 0
  7787                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7788  0383  084E               	movf	___flmul@b+3,w
  7789  0384  3980               	andlw	128
  7790  0385  00D3               	movwf	??___flmul
  7791  0386  0853               	movf	??___flmul,w
  7792  0387  00D8               	movwf	___flmul@sign
  7793  0388  084E               	movf	___flmul@b+3,w
  7794  0389  00D3               	movwf	??___flmul
  7795  038A  0753               	addwf	??___flmul,w
  7796  038B  00D4               	movwf	??___flmul+1
  7797  038C  0854               	movf	??___flmul+1,w
  7798  038D  00DE               	movwf	___flmul@bexp
  7799  038E  1BCD               	btfsc	___flmul@b+2,7
  7800  038F  145E               	bsf	___flmul@bexp,0
  7801  0390  085E               	movf	___flmul@bexp,w
  7802  0391  1903               	btfsc	3,2
  7803  0392  2BA0               	goto	l4201
  7804  0393  0A5E               	incf	___flmul@bexp,w
  7805  0394  1D03               	btfss	3,2
  7806  0395  2B9E               	goto	l4199
  7807  0396  3000               	movlw	0
  7808  0397  00CE               	movwf	___flmul@b+3
  7809  0398  3000               	movlw	0
  7810  0399  00CD               	movwf	___flmul@b+2
  7811  039A  3000               	movlw	0
  7812  039B  00CC               	movwf	___flmul@b+1
  7813  039C  3000               	movlw	0
  7814  039D  00CB               	movwf	___flmul@b
  7815  039E                     l4199:
  7816  039E  17CD               	bsf	___flmul@b+2,7
  7817  039F  2BA8               	goto	l4203
  7818  03A0                     l4201:
  7819  03A0  3000               	movlw	0
  7820  03A1  00CE               	movwf	___flmul@b+3
  7821  03A2  3000               	movlw	0
  7822  03A3  00CD               	movwf	___flmul@b+2
  7823  03A4  3000               	movlw	0
  7824  03A5  00CC               	movwf	___flmul@b+1
  7825  03A6  3000               	movlw	0
  7826  03A7  00CB               	movwf	___flmul@b
  7827  03A8                     l4203:
  7828  03A8  0852               	movf	___flmul@a+3,w
  7829  03A9  3980               	andlw	128
  7830  03AA  00D3               	movwf	??___flmul
  7831  03AB  0853               	movf	??___flmul,w
  7832  03AC  06D8               	xorwf	___flmul@sign,f
  7833  03AD  0852               	movf	___flmul@a+3,w
  7834  03AE  00D3               	movwf	??___flmul
  7835  03AF  0753               	addwf	??___flmul,w
  7836  03B0  00D4               	movwf	??___flmul+1
  7837  03B1  0854               	movf	??___flmul+1,w
  7838  03B2  00D9               	movwf	___flmul@aexp
  7839  03B3  1BD1               	btfsc	___flmul@a+2,7
  7840  03B4  1459               	bsf	___flmul@aexp,0
  7841  03B5  0859               	movf	___flmul@aexp,w
  7842  03B6  1903               	btfsc	3,2
  7843  03B7  2BC5               	goto	l4219
  7844  03B8  0A59               	incf	___flmul@aexp,w
  7845  03B9  1D03               	btfss	3,2
  7846  03BA  2BC3               	goto	l4217
  7847  03BB  3000               	movlw	0
  7848  03BC  00D2               	movwf	___flmul@a+3
  7849  03BD  3000               	movlw	0
  7850  03BE  00D1               	movwf	___flmul@a+2
  7851  03BF  3000               	movlw	0
  7852  03C0  00D0               	movwf	___flmul@a+1
  7853  03C1  3000               	movlw	0
  7854  03C2  00CF               	movwf	___flmul@a
  7855  03C3                     l4217:
  7856  03C3  17D1               	bsf	___flmul@a+2,7
  7857  03C4  2BCD               	goto	l4221
  7858  03C5                     l4219:
  7859  03C5  3000               	movlw	0
  7860  03C6  00D2               	movwf	___flmul@a+3
  7861  03C7  3000               	movlw	0
  7862  03C8  00D1               	movwf	___flmul@a+2
  7863  03C9  3000               	movlw	0
  7864  03CA  00D0               	movwf	___flmul@a+1
  7865  03CB  3000               	movlw	0
  7866  03CC  00CF               	movwf	___flmul@a
  7867  03CD                     l4221:
  7868  03CD  0859               	movf	___flmul@aexp,w
  7869  03CE  1D03               	btfss	3,2
  7870  03CF  085E               	movf	___flmul@bexp,w
  7871  03D0  1D03               	btfss	3,2
  7872  03D1  2BDB               	goto	l4229
  7873  03D2  3000               	movlw	0
  7874  03D3  00CE               	movwf	?___flmul+3
  7875  03D4  3000               	movlw	0
  7876  03D5  00CD               	movwf	?___flmul+2
  7877  03D6  3000               	movlw	0
  7878  03D7  00CC               	movwf	?___flmul+1
  7879  03D8  3000               	movlw	0
  7880  03D9  00CB               	movwf	?___flmul
  7881  03DA  0008               	return
  7882  03DB                     l4229:
  7883  03DB  084B               	movf	___flmul@b,w
  7884  03DC  00D3               	movwf	??___flmul
  7885  03DD  0853               	movf	??___flmul,w
  7886  03DE  00A0               	movwf	__Umul8_16@multiplicand
  7887  03DF  0851               	movf	___flmul@a+2,w
  7888  03E0  160A  158A  230F  120A  118A  	fcall	__Umul8_16
  7889  03E5  0821               	movf	?__Umul8_16+1,w
  7890  03E6  00E4               	movwf	___flmul@temp+1
  7891  03E7  0820               	movf	?__Umul8_16,w
  7892  03E8  00E3               	movwf	___flmul@temp
  7893  03E9  0863               	movf	___flmul@temp,w
  7894  03EA  00D3               	movwf	??___flmul
  7895  03EB  01D4               	clrf	??___flmul+1
  7896  03EC  01D5               	clrf	??___flmul+2
  7897  03ED  01D6               	clrf	??___flmul+3
  7898  03EE  0856               	movf	??___flmul+3,w
  7899  03EF  00DD               	movwf	___flmul@grs+3
  7900  03F0  0855               	movf	??___flmul+2,w
  7901  03F1  00DC               	movwf	___flmul@grs+2
  7902  03F2  0854               	movf	??___flmul+1,w
  7903  03F3  00DB               	movwf	___flmul@grs+1
  7904  03F4  0853               	movf	??___flmul,w
  7905  03F5  00DA               	movwf	___flmul@grs
  7906  03F6  0864               	movf	___flmul@temp+1,w
  7907  03F7  00D3               	movwf	??___flmul
  7908  03F8  01D4               	clrf	??___flmul+1
  7909  03F9  01D5               	clrf	??___flmul+2
  7910  03FA  01D6               	clrf	??___flmul+3
  7911  03FB  0856               	movf	??___flmul+3,w
  7912  03FC  00E2               	movwf	___flmul@prod+3
  7913  03FD  0855               	movf	??___flmul+2,w
  7914  03FE  00E1               	movwf	___flmul@prod+2
  7915  03FF  0854               	movf	??___flmul+1,w
  7916  0400  00E0               	movwf	___flmul@prod+1
  7917  0401  0853               	movf	??___flmul,w
  7918  0402  00DF               	movwf	___flmul@prod
  7919  0403  084C               	movf	___flmul@b+1,w
  7920  0404  00D3               	movwf	??___flmul
  7921  0405  0853               	movf	??___flmul,w
  7922  0406  00A0               	movwf	__Umul8_16@multiplicand
  7923  0407  0850               	movf	___flmul@a+1,w
  7924  0408  160A  158A  230F  120A  118A  	fcall	__Umul8_16
  7925  040D  0821               	movf	?__Umul8_16+1,w
  7926  040E  00E4               	movwf	___flmul@temp+1
  7927  040F  0820               	movf	?__Umul8_16,w
  7928  0410  00E3               	movwf	___flmul@temp
  7929  0411  0863               	movf	___flmul@temp,w
  7930  0412  00D3               	movwf	??___flmul
  7931  0413  01D4               	clrf	??___flmul+1
  7932  0414  01D5               	clrf	??___flmul+2
  7933  0415  01D6               	clrf	??___flmul+3
  7934  0416  0853               	movf	??___flmul,w
  7935  0417  07DA               	addwf	___flmul@grs,f
  7936  0418  0854               	movf	??___flmul+1,w
  7937  0419  1103               	clrz
  7938  041A  1803               	skipnc
  7939  041B  3E01               	addlw	1
  7940  041C  1D03               	btfss	3,2
  7941  041D  07DB               	addwf	___flmul@grs+1,f
  7942  041E  0855               	movf	??___flmul+2,w
  7943  041F  1103               	clrz
  7944  0420  1803               	skipnc
  7945  0421  3E01               	addlw	1
  7946  0422  1D03               	btfss	3,2
  7947  0423  07DC               	addwf	___flmul@grs+2,f
  7948  0424  0856               	movf	??___flmul+3,w
  7949  0425  1103               	clrz
  7950  0426  1803               	skipnc
  7951  0427  3E01               	addlw	1
  7952  0428  1D03               	btfss	3,2
  7953  0429  07DD               	addwf	___flmul@grs+3,f
  7954  042A  0864               	movf	___flmul@temp+1,w
  7955  042B  00D3               	movwf	??___flmul
  7956  042C  01D4               	clrf	??___flmul+1
  7957  042D  01D5               	clrf	??___flmul+2
  7958  042E  01D6               	clrf	??___flmul+3
  7959  042F  0853               	movf	??___flmul,w
  7960  0430  07DF               	addwf	___flmul@prod,f
  7961  0431  0854               	movf	??___flmul+1,w
  7962  0432  1103               	clrz
  7963  0433  1803               	skipnc
  7964  0434  3E01               	addlw	1
  7965  0435  1D03               	btfss	3,2
  7966  0436  07E0               	addwf	___flmul@prod+1,f
  7967  0437  0855               	movf	??___flmul+2,w
  7968  0438  1103               	clrz
  7969  0439  1803               	skipnc
  7970  043A  3E01               	addlw	1
  7971  043B  1D03               	btfss	3,2
  7972  043C  07E1               	addwf	___flmul@prod+2,f
  7973  043D  0856               	movf	??___flmul+3,w
  7974  043E  1103               	clrz
  7975  043F  1803               	skipnc
  7976  0440  3E01               	addlw	1
  7977  0441  1D03               	btfss	3,2
  7978  0442  07E2               	addwf	___flmul@prod+3,f
  7979  0443  084D               	movf	___flmul@b+2,w
  7980  0444  00D3               	movwf	??___flmul
  7981  0445  0853               	movf	??___flmul,w
  7982  0446  00A0               	movwf	__Umul8_16@multiplicand
  7983  0447  084F               	movf	___flmul@a,w
  7984  0448  160A  158A  230F  120A  118A  	fcall	__Umul8_16
  7985  044D  0821               	movf	?__Umul8_16+1,w
  7986  044E  00E4               	movwf	___flmul@temp+1
  7987  044F  0820               	movf	?__Umul8_16,w
  7988  0450  00E3               	movwf	___flmul@temp
  7989  0451  0863               	movf	___flmul@temp,w
  7990  0452  00D3               	movwf	??___flmul
  7991  0453  01D4               	clrf	??___flmul+1
  7992  0454  01D5               	clrf	??___flmul+2
  7993  0455  01D6               	clrf	??___flmul+3
  7994  0456  0853               	movf	??___flmul,w
  7995  0457  07DA               	addwf	___flmul@grs,f
  7996  0458  0854               	movf	??___flmul+1,w
  7997  0459  1103               	clrz
  7998  045A  1803               	skipnc
  7999  045B  3E01               	addlw	1
  8000  045C  1D03               	btfss	3,2
  8001  045D  07DB               	addwf	___flmul@grs+1,f
  8002  045E  0855               	movf	??___flmul+2,w
  8003  045F  1103               	clrz
  8004  0460  1803               	skipnc
  8005  0461  3E01               	addlw	1
  8006  0462  1D03               	btfss	3,2
  8007  0463  07DC               	addwf	___flmul@grs+2,f
  8008  0464  0856               	movf	??___flmul+3,w
  8009  0465  1103               	clrz
  8010  0466  1803               	skipnc
  8011  0467  3E01               	addlw	1
  8012  0468  1D03               	btfss	3,2
  8013  0469  07DD               	addwf	___flmul@grs+3,f
  8014  046A  0864               	movf	___flmul@temp+1,w
  8015  046B  00D3               	movwf	??___flmul
  8016  046C  01D4               	clrf	??___flmul+1
  8017  046D  01D5               	clrf	??___flmul+2
  8018  046E  01D6               	clrf	??___flmul+3
  8019  046F  0853               	movf	??___flmul,w
  8020  0470  07DF               	addwf	___flmul@prod,f
  8021  0471  0854               	movf	??___flmul+1,w
  8022  0472  1103               	clrz
  8023  0473  1803               	skipnc
  8024  0474  3E01               	addlw	1
  8025  0475  1D03               	btfss	3,2
  8026  0476  07E0               	addwf	___flmul@prod+1,f
  8027  0477  0855               	movf	??___flmul+2,w
  8028  0478  1103               	clrz
  8029  0479  1803               	skipnc
  8030  047A  3E01               	addlw	1
  8031  047B  1D03               	btfss	3,2
  8032  047C  07E1               	addwf	___flmul@prod+2,f
  8033  047D  0856               	movf	??___flmul+3,w
  8034  047E  1103               	clrz
  8035  047F  1803               	skipnc
  8036  0480  3E01               	addlw	1
  8037  0481  1D03               	btfss	3,2
  8038  0482  07E2               	addwf	___flmul@prod+3,f
  8039  0483  3008               	movlw	8
  8040  0484  00D3               	movwf	??___flmul
  8041  0485                     u3785:
  8042  0485  1003               	clrc
  8043  0486  0DDA               	rlf	___flmul@grs,f
  8044  0487  0DDB               	rlf	___flmul@grs+1,f
  8045  0488  0DDC               	rlf	___flmul@grs+2,f
  8046  0489  0DDD               	rlf	___flmul@grs+3,f
  8047  048A  0BD3               	decfsz	??___flmul,f
  8048  048B  2C85               	goto	u3785
  8049  048C  084C               	movf	___flmul@b+1,w
  8050  048D  00D3               	movwf	??___flmul
  8051  048E  0853               	movf	??___flmul,w
  8052  048F  00A0               	movwf	__Umul8_16@multiplicand
  8053  0490  084F               	movf	___flmul@a,w
  8054  0491  160A  158A  230F  120A  118A  	fcall	__Umul8_16
  8055  0496  0821               	movf	?__Umul8_16+1,w
  8056  0497  00E4               	movwf	___flmul@temp+1
  8057  0498  0820               	movf	?__Umul8_16,w
  8058  0499  00E3               	movwf	___flmul@temp
  8059  049A  0863               	movf	___flmul@temp,w
  8060  049B  00D3               	movwf	??___flmul
  8061  049C  0864               	movf	___flmul@temp+1,w
  8062  049D  00D4               	movwf	??___flmul+1
  8063  049E  01D5               	clrf	??___flmul+2
  8064  049F  01D6               	clrf	??___flmul+3
  8065  04A0  0853               	movf	??___flmul,w
  8066  04A1  07DA               	addwf	___flmul@grs,f
  8067  04A2  0854               	movf	??___flmul+1,w
  8068  04A3  1103               	clrz
  8069  04A4  1803               	skipnc
  8070  04A5  3E01               	addlw	1
  8071  04A6  1D03               	btfss	3,2
  8072  04A7  07DB               	addwf	___flmul@grs+1,f
  8073  04A8  0855               	movf	??___flmul+2,w
  8074  04A9  1103               	clrz
  8075  04AA  1803               	skipnc
  8076  04AB  3E01               	addlw	1
  8077  04AC  1D03               	btfss	3,2
  8078  04AD  07DC               	addwf	___flmul@grs+2,f
  8079  04AE  0856               	movf	??___flmul+3,w
  8080  04AF  1103               	clrz
  8081  04B0  1803               	skipnc
  8082  04B1  3E01               	addlw	1
  8083  04B2  1D03               	btfss	3,2
  8084  04B3  07DD               	addwf	___flmul@grs+3,f
  8085  04B4  084B               	movf	___flmul@b,w
  8086  04B5  00D3               	movwf	??___flmul
  8087  04B6  0853               	movf	??___flmul,w
  8088  04B7  00A0               	movwf	__Umul8_16@multiplicand
  8089  04B8  0850               	movf	___flmul@a+1,w
  8090  04B9  160A  158A  230F  120A  118A  	fcall	__Umul8_16
  8091  04BE  0821               	movf	?__Umul8_16+1,w
  8092  04BF  00E4               	movwf	___flmul@temp+1
  8093  04C0  0820               	movf	?__Umul8_16,w
  8094  04C1  00E3               	movwf	___flmul@temp
  8095  04C2  0863               	movf	___flmul@temp,w
  8096  04C3  00D3               	movwf	??___flmul
  8097  04C4  0864               	movf	___flmul@temp+1,w
  8098  04C5  00D4               	movwf	??___flmul+1
  8099  04C6  01D5               	clrf	??___flmul+2
  8100  04C7  01D6               	clrf	??___flmul+3
  8101  04C8  0853               	movf	??___flmul,w
  8102  04C9  07DA               	addwf	___flmul@grs,f
  8103  04CA  0854               	movf	??___flmul+1,w
  8104  04CB  1103               	clrz
  8105  04CC  1803               	skipnc
  8106  04CD  3E01               	addlw	1
  8107  04CE  1D03               	btfss	3,2
  8108  04CF  07DB               	addwf	___flmul@grs+1,f
  8109  04D0  0855               	movf	??___flmul+2,w
  8110  04D1  1103               	clrz
  8111  04D2  1803               	skipnc
  8112  04D3  3E01               	addlw	1
  8113  04D4  1D03               	btfss	3,2
  8114  04D5  07DC               	addwf	___flmul@grs+2,f
  8115  04D6  0856               	movf	??___flmul+3,w
  8116  04D7  1103               	clrz
  8117  04D8  1803               	skipnc
  8118  04D9  3E01               	addlw	1
  8119  04DA  1D03               	btfss	3,2
  8120  04DB  07DD               	addwf	___flmul@grs+3,f
  8121  04DC  3008               	movlw	8
  8122  04DD  00D3               	movwf	??___flmul
  8123  04DE                     u3815:
  8124  04DE  1003               	clrc
  8125  04DF  0DDA               	rlf	___flmul@grs,f
  8126  04E0  0DDB               	rlf	___flmul@grs+1,f
  8127  04E1  0DDC               	rlf	___flmul@grs+2,f
  8128  04E2  0DDD               	rlf	___flmul@grs+3,f
  8129  04E3  0BD3               	decfsz	??___flmul,f
  8130  04E4  2CDE               	goto	u3815
  8131  04E5  084B               	movf	___flmul@b,w
  8132  04E6  00D3               	movwf	??___flmul
  8133  04E7  0853               	movf	??___flmul,w
  8134  04E8  00A0               	movwf	__Umul8_16@multiplicand
  8135  04E9  084F               	movf	___flmul@a,w
  8136  04EA  160A  158A  230F  120A  118A  	fcall	__Umul8_16
  8137  04EF  0821               	movf	?__Umul8_16+1,w
  8138  04F0  00E4               	movwf	___flmul@temp+1
  8139  04F1  0820               	movf	?__Umul8_16,w
  8140  04F2  00E3               	movwf	___flmul@temp
  8141  04F3  0863               	movf	___flmul@temp,w
  8142  04F4  00D3               	movwf	??___flmul
  8143  04F5  0864               	movf	___flmul@temp+1,w
  8144  04F6  00D4               	movwf	??___flmul+1
  8145  04F7  01D5               	clrf	??___flmul+2
  8146  04F8  01D6               	clrf	??___flmul+3
  8147  04F9  0853               	movf	??___flmul,w
  8148  04FA  07DA               	addwf	___flmul@grs,f
  8149  04FB  0854               	movf	??___flmul+1,w
  8150  04FC  1103               	clrz
  8151  04FD  1803               	skipnc
  8152  04FE  3E01               	addlw	1
  8153  04FF  1D03               	btfss	3,2
  8154  0500  07DB               	addwf	___flmul@grs+1,f
  8155  0501  0855               	movf	??___flmul+2,w
  8156  0502  1103               	clrz
  8157  0503  1803               	skipnc
  8158  0504  3E01               	addlw	1
  8159  0505  1D03               	btfss	3,2
  8160  0506  07DC               	addwf	___flmul@grs+2,f
  8161  0507  0856               	movf	??___flmul+3,w
  8162  0508  1103               	clrz
  8163  0509  1803               	skipnc
  8164  050A  3E01               	addlw	1
  8165  050B  1D03               	btfss	3,2
  8166  050C  07DD               	addwf	___flmul@grs+3,f
  8167  050D  084C               	movf	___flmul@b+1,w
  8168  050E  00D3               	movwf	??___flmul
  8169  050F  0853               	movf	??___flmul,w
  8170  0510  00A0               	movwf	__Umul8_16@multiplicand
  8171  0511  0851               	movf	___flmul@a+2,w
  8172  0512  160A  158A  230F  120A  118A  	fcall	__Umul8_16
  8173  0517  0821               	movf	?__Umul8_16+1,w
  8174  0518  00E4               	movwf	___flmul@temp+1
  8175  0519  0820               	movf	?__Umul8_16,w
  8176  051A  00E3               	movwf	___flmul@temp
  8177  051B  0863               	movf	___flmul@temp,w
  8178  051C  00D3               	movwf	??___flmul
  8179  051D  0864               	movf	___flmul@temp+1,w
  8180  051E  00D4               	movwf	??___flmul+1
  8181  051F  01D5               	clrf	??___flmul+2
  8182  0520  01D6               	clrf	??___flmul+3
  8183  0521  0853               	movf	??___flmul,w
  8184  0522  07DF               	addwf	___flmul@prod,f
  8185  0523  0854               	movf	??___flmul+1,w
  8186  0524  1103               	clrz
  8187  0525  1803               	skipnc
  8188  0526  3E01               	addlw	1
  8189  0527  1D03               	btfss	3,2
  8190  0528  07E0               	addwf	___flmul@prod+1,f
  8191  0529  0855               	movf	??___flmul+2,w
  8192  052A  1103               	clrz
  8193  052B  1803               	skipnc
  8194  052C  3E01               	addlw	1
  8195  052D  1D03               	btfss	3,2
  8196  052E  07E1               	addwf	___flmul@prod+2,f
  8197  052F  0856               	movf	??___flmul+3,w
  8198  0530  1103               	clrz
  8199  0531  1803               	skipnc
  8200  0532  3E01               	addlw	1
  8201  0533  1D03               	btfss	3,2
  8202  0534  07E2               	addwf	___flmul@prod+3,f
  8203  0535  084D               	movf	___flmul@b+2,w
  8204  0536  00D3               	movwf	??___flmul
  8205  0537  0853               	movf	??___flmul,w
  8206  0538  00A0               	movwf	__Umul8_16@multiplicand
  8207  0539  0850               	movf	___flmul@a+1,w
  8208  053A  160A  158A  230F  120A  118A  	fcall	__Umul8_16
  8209  053F  0821               	movf	?__Umul8_16+1,w
  8210  0540  00E4               	movwf	___flmul@temp+1
  8211  0541  0820               	movf	?__Umul8_16,w
  8212  0542  00E3               	movwf	___flmul@temp
  8213  0543  0863               	movf	___flmul@temp,w
  8214  0544  00D3               	movwf	??___flmul
  8215  0545  0864               	movf	___flmul@temp+1,w
  8216  0546  00D4               	movwf	??___flmul+1
  8217  0547  01D5               	clrf	??___flmul+2
  8218  0548  01D6               	clrf	??___flmul+3
  8219  0549  0853               	movf	??___flmul,w
  8220  054A  07DF               	addwf	___flmul@prod,f
  8221  054B  0854               	movf	??___flmul+1,w
  8222  054C  1103               	clrz
  8223  054D  1803               	skipnc
  8224  054E  3E01               	addlw	1
  8225  054F  1D03               	btfss	3,2
  8226  0550  07E0               	addwf	___flmul@prod+1,f
  8227  0551  0855               	movf	??___flmul+2,w
  8228  0552  1103               	clrz
  8229  0553  1803               	skipnc
  8230  0554  3E01               	addlw	1
  8231  0555  1D03               	btfss	3,2
  8232  0556  07E1               	addwf	___flmul@prod+2,f
  8233  0557  0856               	movf	??___flmul+3,w
  8234  0558  1103               	clrz
  8235  0559  1803               	skipnc
  8236  055A  3E01               	addlw	1
  8237  055B  1D03               	btfss	3,2
  8238  055C  07E2               	addwf	___flmul@prod+3,f
  8239  055D  084D               	movf	___flmul@b+2,w
  8240  055E  00D3               	movwf	??___flmul
  8241  055F  0853               	movf	??___flmul,w
  8242  0560  00A0               	movwf	__Umul8_16@multiplicand
  8243  0561  0851               	movf	___flmul@a+2,w
  8244  0562  160A  158A  230F  120A  118A  	fcall	__Umul8_16
  8245  0567  0821               	movf	?__Umul8_16+1,w
  8246  0568  00E4               	movwf	___flmul@temp+1
  8247  0569  0820               	movf	?__Umul8_16,w
  8248  056A  00E3               	movwf	___flmul@temp
  8249  056B  0863               	movf	___flmul@temp,w
  8250  056C  00D3               	movwf	??___flmul
  8251  056D  0864               	movf	___flmul@temp+1,w
  8252  056E  00D4               	movwf	??___flmul+1
  8253  056F  01D5               	clrf	??___flmul+2
  8254  0570  01D6               	clrf	??___flmul+3
  8255  0571  3008               	movlw	8
  8256  0572                     u3855:
  8257  0572  1003               	clrc
  8258  0573  0DD3               	rlf	??___flmul,f
  8259  0574  0DD4               	rlf	??___flmul+1,f
  8260  0575  0DD5               	rlf	??___flmul+2,f
  8261  0576  0DD6               	rlf	??___flmul+3,f
  8262  0577  3EFF               	addlw	-1
  8263  0578  1D03               	skipz
  8264  0579  2D72               	goto	u3855
  8265  057A  0853               	movf	??___flmul,w
  8266  057B  07DF               	addwf	___flmul@prod,f
  8267  057C  0854               	movf	??___flmul+1,w
  8268  057D  1103               	clrz
  8269  057E  1803               	skipnc
  8270  057F  3E01               	addlw	1
  8271  0580  1D03               	btfss	3,2
  8272  0581  07E0               	addwf	___flmul@prod+1,f
  8273  0582  0855               	movf	??___flmul+2,w
  8274  0583  1103               	clrz
  8275  0584  1803               	skipnc
  8276  0585  3E01               	addlw	1
  8277  0586  1D03               	btfss	3,2
  8278  0587  07E1               	addwf	___flmul@prod+2,f
  8279  0588  0856               	movf	??___flmul+3,w
  8280  0589  1103               	clrz
  8281  058A  1803               	skipnc
  8282  058B  3E01               	addlw	1
  8283  058C  1D03               	btfss	3,2
  8284  058D  07E2               	addwf	___flmul@prod+3,f
  8285  058E  085D               	movf	___flmul@grs+3,w
  8286  058F  00D3               	movwf	??___flmul
  8287  0590  01D4               	clrf	??___flmul+1
  8288  0591  01D5               	clrf	??___flmul+2
  8289  0592  01D6               	clrf	??___flmul+3
  8290  0593  0853               	movf	??___flmul,w
  8291  0594  07DF               	addwf	___flmul@prod,f
  8292  0595  0854               	movf	??___flmul+1,w
  8293  0596  1103               	clrz
  8294  0597  1803               	skipnc
  8295  0598  3E01               	addlw	1
  8296  0599  1D03               	btfss	3,2
  8297  059A  07E0               	addwf	___flmul@prod+1,f
  8298  059B  0855               	movf	??___flmul+2,w
  8299  059C  1103               	clrz
  8300  059D  1803               	skipnc
  8301  059E  3E01               	addlw	1
  8302  059F  1D03               	btfss	3,2
  8303  05A0  07E1               	addwf	___flmul@prod+2,f
  8304  05A1  0856               	movf	??___flmul+3,w
  8305  05A2  1103               	clrz
  8306  05A3  1803               	skipnc
  8307  05A4  3E01               	addlw	1
  8308  05A5  1D03               	btfss	3,2
  8309  05A6  07E2               	addwf	___flmul@prod+3,f
  8310  05A7  3008               	movlw	8
  8311  05A8  00D3               	movwf	??___flmul
  8312  05A9                     u3885:
  8313  05A9  1003               	clrc
  8314  05AA  0DDA               	rlf	___flmul@grs,f
  8315  05AB  0DDB               	rlf	___flmul@grs+1,f
  8316  05AC  0DDC               	rlf	___flmul@grs+2,f
  8317  05AD  0DDD               	rlf	___flmul@grs+3,f
  8318  05AE  0BD3               	decfsz	??___flmul,f
  8319  05AF  2DA9               	goto	u3885
  8320  05B0  085E               	movf	___flmul@bexp,w
  8321  05B1  0759               	addwf	___flmul@aexp,w
  8322  05B2  00D3               	movwf	??___flmul
  8323  05B3  01D4               	clrf	??___flmul+1
  8324  05B4  0DD4               	rlf	??___flmul+1,f
  8325  05B5  0853               	movf	??___flmul,w
  8326  05B6  3E82               	addlw	130
  8327  05B7  00E3               	movwf	___flmul@temp
  8328  05B8  0854               	movf	??___flmul+1,w
  8329  05B9  1803               	skipnc
  8330  05BA  3E01               	addlw	1
  8331  05BB  3EFF               	addlw	255
  8332  05BC  00E4               	movwf	___flmul@temp+1
  8333  05BD                     l4281:
  8334  05BD  1BE1               	btfsc	___flmul@prod+2,7
  8335  05BE  2DDA               	goto	l4283
  8336  05BF  3001               	movlw	1
  8337  05C0  00D3               	movwf	??___flmul
  8338  05C1                     u3895:
  8339  05C1  1003               	clrc
  8340  05C2  0DDF               	rlf	___flmul@prod,f
  8341  05C3  0DE0               	rlf	___flmul@prod+1,f
  8342  05C4  0DE1               	rlf	___flmul@prod+2,f
  8343  05C5  0DE2               	rlf	___flmul@prod+3,f
  8344  05C6  0BD3               	decfsz	??___flmul,f
  8345  05C7  2DC1               	goto	u3895
  8346  05C8  1BDD               	btfsc	___flmul@grs+3,7
  8347  05C9  145F               	bsf	___flmul@prod,0
  8348  05CA  3001               	movlw	1
  8349  05CB  00D3               	movwf	??___flmul
  8350  05CC                     u3915:
  8351  05CC  1003               	clrc
  8352  05CD  0DDA               	rlf	___flmul@grs,f
  8353  05CE  0DDB               	rlf	___flmul@grs+1,f
  8354  05CF  0DDC               	rlf	___flmul@grs+2,f
  8355  05D0  0DDD               	rlf	___flmul@grs+3,f
  8356  05D1  0BD3               	decfsz	??___flmul,f
  8357  05D2  2DCC               	goto	u3915
  8358  05D3  30FF               	movlw	255
  8359  05D4  07E3               	addwf	___flmul@temp,f
  8360  05D5  1803               	skipnc
  8361  05D6  0AE4               	incf	___flmul@temp+1,f
  8362  05D7  30FF               	movlw	255
  8363  05D8  07E4               	addwf	___flmul@temp+1,f
  8364  05D9  2DBD               	goto	l4281
  8365  05DA                     l4283:
  8366  05DA  01D9               	clrf	___flmul@aexp
  8367  05DB  1FDD               	btfss	___flmul@grs+3,7
  8368  05DC  2DF3               	goto	l4293
  8369  05DD  30FF               	movlw	255
  8370  05DE  055A               	andwf	___flmul@grs,w
  8371  05DF  00D3               	movwf	??___flmul
  8372  05E0  30FF               	movlw	255
  8373  05E1  055B               	andwf	___flmul@grs+1,w
  8374  05E2  00D4               	movwf	??___flmul+1
  8375  05E3  30FF               	movlw	255
  8376  05E4  055C               	andwf	___flmul@grs+2,w
  8377  05E5  00D5               	movwf	??___flmul+2
  8378  05E6  307F               	movlw	127
  8379  05E7  055D               	andwf	___flmul@grs+3,w
  8380  05E8  00D6               	movwf	??___flmul+3
  8381  05E9  0856               	movf	??___flmul+3,w
  8382  05EA  0455               	iorwf	??___flmul+2,w
  8383  05EB  0454               	iorwf	??___flmul+1,w
  8384  05EC  0453               	iorwf	??___flmul,w
  8385  05ED  1903               	skipnz
  8386  05EE  185F               	btfsc	___flmul@prod,0
  8387  05EF  2DF1               	goto	l4289
  8388  05F0  2DF3               	goto	l4293
  8389  05F1                     l4289:
  8390  05F1  01D9               	clrf	___flmul@aexp
  8391  05F2  0AD9               	incf	___flmul@aexp,f
  8392  05F3                     l4293:
  8393  05F3  0859               	movf	___flmul@aexp,w
  8394  05F4  1903               	btfsc	3,2
  8395  05F5  2E25               	goto	l4303
  8396  05F6  3001               	movlw	1
  8397  05F7  07DF               	addwf	___flmul@prod,f
  8398  05F8  3000               	movlw	0
  8399  05F9  1803               	skipnc
  8400  05FA  3001               	movlw	1
  8401  05FB  07E0               	addwf	___flmul@prod+1,f
  8402  05FC  3000               	movlw	0
  8403  05FD  1803               	skipnc
  8404  05FE  3001               	movlw	1
  8405  05FF  07E1               	addwf	___flmul@prod+2,f
  8406  0600  3000               	movlw	0
  8407  0601  1803               	skipnc
  8408  0602  3001               	movlw	1
  8409  0603  07E2               	addwf	___flmul@prod+3,f
  8410  0604  1C62               	btfss	___flmul@prod+3,0
  8411  0605  2E25               	goto	l4303
  8412  0606  085F               	movf	___flmul@prod,w
  8413  0607  00D3               	movwf	??___flmul
  8414  0608  0860               	movf	___flmul@prod+1,w
  8415  0609  00D4               	movwf	??___flmul+1
  8416  060A  0861               	movf	___flmul@prod+2,w
  8417  060B  00D5               	movwf	??___flmul+2
  8418  060C  0862               	movf	___flmul@prod+3,w
  8419  060D  00D6               	movwf	??___flmul+3
  8420  060E  3001               	movlw	1
  8421  060F  00D7               	movwf	??___flmul+4
  8422  0610                     u3985:
  8423  0610  0D56               	rlf	??___flmul+3,w
  8424  0611  0CD6               	rrf	??___flmul+3,f
  8425  0612  0CD5               	rrf	??___flmul+2,f
  8426  0613  0CD4               	rrf	??___flmul+1,f
  8427  0614  0CD3               	rrf	??___flmul,f
  8428  0615  0BD7               	decfsz	??___flmul+4,f
  8429  0616  2E10               	goto	u3985
  8430  0617  0856               	movf	??___flmul+3,w
  8431  0618  00E2               	movwf	___flmul@prod+3
  8432  0619  0855               	movf	??___flmul+2,w
  8433  061A  00E1               	movwf	___flmul@prod+2
  8434  061B  0854               	movf	??___flmul+1,w
  8435  061C  00E0               	movwf	___flmul@prod+1
  8436  061D  0853               	movf	??___flmul,w
  8437  061E  00DF               	movwf	___flmul@prod
  8438  061F  3001               	movlw	1
  8439  0620  07E3               	addwf	___flmul@temp,f
  8440  0621  1803               	skipnc
  8441  0622  0AE4               	incf	___flmul@temp+1,f
  8442  0623  3000               	movlw	0
  8443  0624  07E4               	addwf	___flmul@temp+1,f
  8444  0625                     l4303:
  8445  0625  0864               	movf	___flmul@temp+1,w
  8446  0626  3A80               	xorlw	128
  8447  0627  00FF               	movwf	127
  8448  0628  3080               	movlw	128
  8449  0629  027F               	subwf	127,w
  8450  062A  1D03               	skipz
  8451  062B  2E2E               	goto	u3995
  8452  062C  30FF               	movlw	255
  8453  062D  0263               	subwf	___flmul@temp,w
  8454  062E                     u3995:
  8455  062E  1C03               	skipc
  8456  062F  2E3B               	goto	l4307
  8457  0630  307F               	movlw	127
  8458  0631  1283               	bcf	3,5	;RP0=0, select bank0
  8459  0632  1303               	bcf	3,6	;RP1=0, select bank0
  8460  0633  00E2               	movwf	___flmul@prod+3
  8461  0634  3080               	movlw	128
  8462  0635  00E1               	movwf	___flmul@prod+2
  8463  0636  3000               	movlw	0
  8464  0637  00E0               	movwf	___flmul@prod+1
  8465  0638  3000               	movlw	0
  8466  0639  00DF               	movwf	___flmul@prod
  8467  063A  2E6B               	goto	l1398
  8468  063B                     l4307:
  8469  063B  1283               	bcf	3,5	;RP0=0, select bank0
  8470  063C  1303               	bcf	3,6	;RP1=0, select bank0
  8471  063D  0864               	movf	___flmul@temp+1,w
  8472  063E  3A80               	xorlw	128
  8473  063F  00FF               	movwf	127
  8474  0640  3080               	movlw	128
  8475  0641  027F               	subwf	127,w
  8476  0642  1D03               	skipz
  8477  0643  2E46               	goto	u4005
  8478  0644  3001               	movlw	1
  8479  0645  0263               	subwf	___flmul@temp,w
  8480  0646                     u4005:
  8481  0646  1803               	skipnc
  8482  0647  2E54               	goto	l4313
  8483  0648  3000               	movlw	0
  8484  0649  1283               	bcf	3,5	;RP0=0, select bank0
  8485  064A  1303               	bcf	3,6	;RP1=0, select bank0
  8486  064B  00E2               	movwf	___flmul@prod+3
  8487  064C  3000               	movlw	0
  8488  064D  00E1               	movwf	___flmul@prod+2
  8489  064E  3000               	movlw	0
  8490  064F  00E0               	movwf	___flmul@prod+1
  8491  0650  3000               	movlw	0
  8492  0651  00DF               	movwf	___flmul@prod
  8493  0652  01D8               	clrf	___flmul@sign
  8494  0653  2E6B               	goto	l1398
  8495  0654                     l4313:
  8496  0654  1283               	bcf	3,5	;RP0=0, select bank0
  8497  0655  1303               	bcf	3,6	;RP1=0, select bank0
  8498  0656  0863               	movf	___flmul@temp,w
  8499  0657  00D3               	movwf	??___flmul
  8500  0658  0853               	movf	??___flmul,w
  8501  0659  00DE               	movwf	___flmul@bexp
  8502  065A  30FF               	movlw	255
  8503  065B  05DF               	andwf	___flmul@prod,f
  8504  065C  30FF               	movlw	255
  8505  065D  05E0               	andwf	___flmul@prod+1,f
  8506  065E  307F               	movlw	127
  8507  065F  05E1               	andwf	___flmul@prod+2,f
  8508  0660  3000               	movlw	0
  8509  0661  05E2               	andwf	___flmul@prod+3,f
  8510  0662  185E               	btfsc	___flmul@bexp,0
  8511  0663  17E1               	bsf	___flmul@prod+2,7
  8512  0664  085E               	movf	___flmul@bexp,w
  8513  0665  00D3               	movwf	??___flmul
  8514  0666  1003               	clrc
  8515  0667  0C53               	rrf	??___flmul,w
  8516  0668  00D4               	movwf	??___flmul+1
  8517  0669  0854               	movf	??___flmul+1,w
  8518  066A  00E2               	movwf	___flmul@prod+3
  8519  066B                     l1398:
  8520  066B  0858               	movf	___flmul@sign,w
  8521  066C  00D3               	movwf	??___flmul
  8522  066D  0853               	movf	??___flmul,w
  8523  066E  04E2               	iorwf	___flmul@prod+3,f
  8524  066F  0862               	movf	___flmul@prod+3,w
  8525  0670  00CE               	movwf	?___flmul+3
  8526  0671  0861               	movf	___flmul@prod+2,w
  8527  0672  00CD               	movwf	?___flmul+2
  8528  0673  0860               	movf	___flmul@prod+1,w
  8529  0674  00CC               	movwf	?___flmul+1
  8530  0675  085F               	movf	___flmul@prod,w
  8531  0676  00CB               	movwf	?___flmul
  8532  0677  0008               	return
  8533  0678                     __end_of___flmul:
  8534                           
  8535                           	psect	text23
  8536  1B0F                     __ptext23:	
  8537 ;; *************** function __Umul8_16 *****************
  8538 ;; Defined at:
  8539 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  8540 ;; Parameters:    Size  Location     Type
  8541 ;;  multiplier      1    wreg     unsigned char 
  8542 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8543 ;; Auto vars:     Size  Location     Type
  8544 ;;  multiplier      1    8[BANK0 ] unsigned char 
  8545 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  8546 ;;  product         2    4[BANK0 ] unsigned int 
  8547 ;; Return value:  Size  Location     Type
  8548 ;;                  2    0[BANK0 ] unsigned int 
  8549 ;; Registers used:
  8550 ;;		wreg, status,2, status,0
  8551 ;; Tracked objects:
  8552 ;;		On entry : 300/0
  8553 ;;		On exit  : 300/0
  8554 ;;		Unchanged: 0/0
  8555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8556 ;;      Params:         0       2       0       0       0
  8557 ;;      Locals:         0       5       0       0       0
  8558 ;;      Temps:          0       2       0       0       0
  8559 ;;      Totals:         0       9       0       0       0
  8560 ;;Total ram usage:        9 bytes
  8561 ;; Hardware stack levels used: 1
  8562 ;; Hardware stack levels required when called: 1
  8563 ;; This function calls:
  8564 ;;		Nothing
  8565 ;; This function is called by:
  8566 ;;		___flmul
  8567 ;; This function uses a non-reentrant model
  8568 ;;
  8569                           
  8570                           
  8571                           ;psect for function __Umul8_16
  8572  1B0F                     __Umul8_16:
  8573                           
  8574                           ;incstack = 0
  8575                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8576                           ;__Umul8_16@multiplier stored from wreg
  8577  1B0F  00A8               	movwf	__Umul8_16@multiplier
  8578  1B10  01A4               	clrf	__Umul8_16@product
  8579  1B11  01A5               	clrf	__Umul8_16@product+1
  8580  1B12  0820               	movf	__Umul8_16@multiplicand,w
  8581  1B13  00A2               	movwf	??__Umul8_16
  8582  1B14  01A3               	clrf	??__Umul8_16+1
  8583  1B15  0822               	movf	??__Umul8_16,w
  8584  1B16  00A6               	movwf	__Umul8_16@word_mpld
  8585  1B17  0823               	movf	??__Umul8_16+1,w
  8586  1B18  00A7               	movwf	__Umul8_16@word_mpld+1
  8587  1B19                     l3719:
  8588  1B19  1C28               	btfss	__Umul8_16@multiplier,0
  8589  1B1A  2B21               	goto	l1405
  8590  1B1B  0826               	movf	__Umul8_16@word_mpld,w
  8591  1B1C  07A4               	addwf	__Umul8_16@product,f
  8592  1B1D  1803               	skipnc
  8593  1B1E  0AA5               	incf	__Umul8_16@product+1,f
  8594  1B1F  0827               	movf	__Umul8_16@word_mpld+1,w
  8595  1B20  07A5               	addwf	__Umul8_16@product+1,f
  8596  1B21                     l1405:
  8597  1B21  3001               	movlw	1
  8598  1B22                     u2855:
  8599  1B22  1003               	clrc
  8600  1B23  0DA6               	rlf	__Umul8_16@word_mpld,f
  8601  1B24  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  8602  1B25  3EFF               	addlw	-1
  8603  1B26  1D03               	skipz
  8604  1B27  2B22               	goto	u2855
  8605  1B28  1003               	clrc
  8606  1B29  0CA8               	rrf	__Umul8_16@multiplier,f
  8607  1B2A  0828               	movf	__Umul8_16@multiplier,w
  8608  1B2B  1D03               	btfss	3,2
  8609  1B2C  2B19               	goto	l3719
  8610  1B2D  0825               	movf	__Umul8_16@product+1,w
  8611  1B2E  00A1               	movwf	?__Umul8_16+1
  8612  1B2F  0824               	movf	__Umul8_16@product,w
  8613  1B30  00A0               	movwf	?__Umul8_16
  8614  1B31  0008               	return
  8615  1B32                     __end_of__Umul8_16:
  8616                           
  8617                           	psect	text24
  8618  19F0                     __ptext24:	
  8619 ;; *************** function _PROCULUS_VP_Write_String *****************
  8620 ;; Defined at:
  8621 ;;		line 205 in file "proculus.c"
  8622 ;; Parameters:    Size  Location     Type
  8623 ;;  vp              2   12[BANK1 ] unsigned int 
  8624 ;;  text            1   14[BANK1 ] PTR unsigned char 
  8625 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  8626 ;; Auto vars:     Size  Location     Type
  8627 ;;		None
  8628 ;; Return value:  Size  Location     Type
  8629 ;;                  1    wreg      void 
  8630 ;; Registers used:
  8631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8632 ;; Tracked objects:
  8633 ;;		On entry : 300/100
  8634 ;;		On exit  : 300/0
  8635 ;;		Unchanged: 0/0
  8636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8637 ;;      Params:         0       0       3       0       0
  8638 ;;      Locals:         0       0       0       0       0
  8639 ;;      Temps:          0       0       1       0       0
  8640 ;;      Totals:         0       0       4       0       0
  8641 ;;Total ram usage:        4 bytes
  8642 ;; Hardware stack levels used: 1
  8643 ;; Hardware stack levels required when called: 4
  8644 ;; This function calls:
  8645 ;;		_PROCULUS_VP_Write
  8646 ;;		_strlen
  8647 ;; This function is called by:
  8648 ;;		_Decodify_Command
  8649 ;; This function uses a non-reentrant model
  8650 ;;
  8651                           
  8652                           
  8653                           ;psect for function _PROCULUS_VP_Write_String
  8654  19F0                     _PROCULUS_VP_Write_String:
  8655                           
  8656                           ;proculus.c: 206:      PROCULUS_VP_Write(vp, text, strlen(text)+1);
  8657                           
  8658                           ;incstack = 0
  8659                           ; Regs used in _PROCULUS_VP_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8660  19F0  082D               	movf	(PROCULUS_VP_Write_String@vp+1)^(0+128),w
  8661  19F1  00A5               	movwf	(PROCULUS_VP_Write@vp+1)^(0+128)
  8662  19F2  082C               	movf	PROCULUS_VP_Write_String@vp^(0+128),w
  8663  19F3  00A4               	movwf	PROCULUS_VP_Write@vp^(0+128)
  8664  19F4  082E               	movf	PROCULUS_VP_Write_String@text^(0+128),w
  8665  19F5  00A6               	movwf	PROCULUS_VP_Write@vetor^(0+128)
  8666  19F6  3001               	movlw	1
  8667  19F7  00A7               	movwf	(PROCULUS_VP_Write@vetor+1)^(0+128)
  8668  19F8  082E               	movf	PROCULUS_VP_Write_String@text^(0+128),w
  8669  19F9  160A  158A  2221  160A  158A  	fcall	_strlen
  8670  19FE  0820               	movf	?_strlen,w
  8671  19FF  3E01               	addlw	1
  8672  1A00  1683               	bsf	3,5	;RP0=1, select bank1
  8673  1A01  00AF               	movwf	??_PROCULUS_VP_Write_String^(0+128)
  8674  1A02  082F               	movf	??_PROCULUS_VP_Write_String^(0+128),w
  8675  1A03  00A8               	movwf	PROCULUS_VP_Write@size^(0+128)
  8676  1A04  160A  158A  2694   	fcall	_PROCULUS_VP_Write
  8677  1A07  0008               	return
  8678  1A08                     __end_of_PROCULUS_VP_Write_String:
  8679                           
  8680                           	psect	text25
  8681  1A21                     __ptext25:	
  8682 ;; *************** function _strlen *****************
  8683 ;; Defined at:
  8684 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
  8685 ;; Parameters:    Size  Location     Type
  8686 ;;  s               1    wreg     PTR const unsigned char 
  8687 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  8690 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8691 ;;  cp              1    3[BANK0 ] PTR const unsigned char 
  8692 ;;		 -> buffer(33), usart_protocol.value(52), usart_protocol(58), 
  8693 ;; Return value:  Size  Location     Type
  8694 ;;                  2    0[BANK0 ] unsigned int 
  8695 ;; Registers used:
  8696 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8697 ;; Tracked objects:
  8698 ;;		On entry : 0/300
  8699 ;;		On exit  : B00/800
  8700 ;;		Unchanged: 0/0
  8701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8702 ;;      Params:         0       2       0       0       0
  8703 ;;      Locals:         0       2       0       0       0
  8704 ;;      Temps:          0       1       0       0       0
  8705 ;;      Totals:         0       5       0       0       0
  8706 ;;Total ram usage:        5 bytes
  8707 ;; Hardware stack levels used: 1
  8708 ;; Hardware stack levels required when called: 1
  8709 ;; This function calls:
  8710 ;;		Nothing
  8711 ;; This function is called by:
  8712 ;;		_Decodify_Command
  8713 ;;		_PROCULUS_VP_Write_String
  8714 ;; This function uses a non-reentrant model
  8715 ;;
  8716                           
  8717                           
  8718                           ;psect for function _strlen
  8719  1A21                     _strlen:
  8720                           
  8721                           ;incstack = 0
  8722                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  8723                           ;strlen@s stored from wreg
  8724  1A21  1283               	bcf	3,5	;RP0=0, select bank0
  8725  1A22  1303               	bcf	3,6	;RP1=0, select bank0
  8726  1A23  00A4               	movwf	strlen@s
  8727  1A24  0824               	movf	strlen@s,w
  8728  1A25  00A2               	movwf	??_strlen
  8729  1A26  0822               	movf	??_strlen,w
  8730  1A27  00A3               	movwf	strlen@cp
  8731  1A28                     l3879:
  8732  1A28  0823               	movf	strlen@cp,w
  8733  1A29  0084               	movwf	4
  8734  1A2A  1783               	bsf	3,7	;select IRP bank2
  8735  1A2B  0800               	movf	0,w
  8736  1A2C  1903               	btfsc	3,2
  8737  1A2D  2A33               	goto	l3881
  8738  1A2E  3001               	movlw	1
  8739  1A2F  00A2               	movwf	??_strlen
  8740  1A30  0822               	movf	??_strlen,w
  8741  1A31  07A3               	addwf	strlen@cp,f
  8742  1A32  2A28               	goto	l3879
  8743  1A33                     l3881:
  8744  1A33  0824               	movf	strlen@s,w
  8745  1A34  0223               	subwf	strlen@cp,w
  8746  1A35  00A0               	movwf	?_strlen
  8747  1A36  01A1               	clrf	?_strlen+1
  8748  1A37  1BA0               	btfsc	?_strlen,7
  8749  1A38  03A1               	decf	?_strlen+1,f
  8750  1A39  0008               	return
  8751  1A3A                     __end_of_strlen:
  8752                           
  8753                           	psect	text26
  8754  1E94                     __ptext26:	
  8755 ;; *************** function _PROCULUS_VP_Write *****************
  8756 ;; Defined at:
  8757 ;;		line 40 in file "proculus.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;  vp              2    4[BANK1 ] unsigned int 
  8760 ;;  vetor           2    6[BANK1 ] PTR unsigned char 
  8761 ;;		 -> PROCULUS_VP_Write_Double32@vetor(4), PROCULUS_VP_Write_Float32@vetor(4), PROCULUS_VP_Write_Long32@vetor(4), PROC
      +ULUS_VP_Write_UInt16@vetor(2), 
  8762 ;;		 -> PROCULUS_VP_Write_Byte@vetor(1), usart_protocol.value(52), usart_protocol(58), 
  8763 ;;  size            1    8[BANK1 ] unsigned char 
  8764 ;; Auto vars:     Size  Location     Type
  8765 ;;  i               1   11[BANK1 ] unsigned char 
  8766 ;; Return value:  Size  Location     Type
  8767 ;;                  1    wreg      void 
  8768 ;; Registers used:
  8769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8770 ;; Tracked objects:
  8771 ;;		On entry : B00/900
  8772 ;;		On exit  : 300/0
  8773 ;;		Unchanged: 0/0
  8774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8775 ;;      Params:         0       0       5       0       0
  8776 ;;      Locals:         0       0       1       0       0
  8777 ;;      Temps:          0       0       2       0       0
  8778 ;;      Totals:         0       0       8       0       0
  8779 ;;Total ram usage:        8 bytes
  8780 ;; Hardware stack levels used: 1
  8781 ;; Hardware stack levels required when called: 3
  8782 ;; This function calls:
  8783 ;;		_PROCULUS_Delay
  8784 ;;		_USART_put_int
  8785 ;;		_USART_putc
  8786 ;; This function is called by:
  8787 ;;		_PROCULUS_VP_Write_String
  8788 ;; This function uses a non-reentrant model
  8789 ;;
  8790                           
  8791                           
  8792                           ;psect for function _PROCULUS_VP_Write
  8793  1E94                     _PROCULUS_VP_Write:
  8794                           
  8795                           ;proculus.c: 41:      USART_put_int(0x5AA5);
  8796                           
  8797                           ;incstack = 0
  8798                           ; Regs used in _PROCULUS_VP_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8799  1E94  30A5               	movlw	165
  8800  1E95  00A0               	movwf	USART_put_int@value^(0+128)
  8801  1E96  305A               	movlw	90
  8802  1E97  00A1               	movwf	(USART_put_int@value^(0+128)+1)
  8803  1E98  160A  158A  21C5  160A  158A  	fcall	_USART_put_int
  8804                           
  8805                           ;proculus.c: 42:      USART_putc((unsigned char)(3+size));
  8806  1E9D  0828               	movf	PROCULUS_VP_Write@size^(0+128),w
  8807  1E9E  3E03               	addlw	3
  8808  1E9F  160A  158A  21A4  160A  158A  	fcall	_USART_putc
  8809                           
  8810                           ;proculus.c: 43:      USART_putc(0x82);
  8811  1EA4  3082               	movlw	130
  8812  1EA5  160A  158A  21A4  160A  158A  	fcall	_USART_putc
  8813                           
  8814                           ;proculus.c: 44:      USART_put_int(vp);
  8815  1EAA  0825               	movf	(PROCULUS_VP_Write@vp+1)^(0+128),w
  8816  1EAB  00A1               	movwf	(USART_put_int@value+1)^(0+128)
  8817  1EAC  0824               	movf	PROCULUS_VP_Write@vp^(0+128),w
  8818  1EAD  00A0               	movwf	USART_put_int@value^(0+128)
  8819  1EAE  160A  158A  21C5  160A  158A  	fcall	_USART_put_int
  8820                           
  8821                           ;proculus.c: 45:      for(unsigned char i=0;i<size;i++)
  8822  1EB3  01AB               	clrf	PROCULUS_VP_Write@i^(0+128)
  8823  1EB4                     l5657:
  8824  1EB4  0828               	movf	PROCULUS_VP_Write@size^(0+128),w
  8825  1EB5  022B               	subwf	PROCULUS_VP_Write@i^(0+128),w
  8826  1EB6  1803               	btfsc	3,0
  8827  1EB7  2ECF               	goto	l5659
  8828                           
  8829                           ;proculus.c: 46:          USART_putc(vetor[i]);
  8830  1EB8  082B               	movf	PROCULUS_VP_Write@i^(0+128),w
  8831  1EB9  0726               	addwf	PROCULUS_VP_Write@vetor^(0+128),w
  8832  1EBA  00A9               	movwf	??_PROCULUS_VP_Write^(0+128)
  8833  1EBB  0827               	movf	(PROCULUS_VP_Write@vetor+1)^(0+128),w
  8834  1EBC  1803               	skipnc
  8835  1EBD  3E01               	addlw	1
  8836  1EBE  00AA               	movwf	(??_PROCULUS_VP_Write^(0+128)+1)
  8837  1EBF  0829               	movf	??_PROCULUS_VP_Write^(0+128),w
  8838  1EC0  0084               	movwf	4
  8839  1EC1  1783               	bsf	3,7
  8840  1EC2  1C2A               	btfss	(??_PROCULUS_VP_Write+1)^(0+128),0
  8841  1EC3  1383               	bcf	3,7
  8842  1EC4  0800               	movf	0,w
  8843  1EC5  160A  158A  21A4  160A  158A  	fcall	_USART_putc
  8844  1ECA  3001               	movlw	1
  8845  1ECB  00A9               	movwf	??_PROCULUS_VP_Write^(0+128)
  8846  1ECC  0829               	movf	??_PROCULUS_VP_Write^(0+128),w
  8847  1ECD  07AB               	addwf	PROCULUS_VP_Write@i^(0+128),f
  8848  1ECE  2EB4               	goto	l5657
  8849  1ECF                     l5659:
  8850                           
  8851                           ;proculus.c: 48:      PROCULUS_Delay(1);
  8852  1ECF  3001               	movlw	1
  8853  1ED0  1283               	bcf	3,5	;RP0=0, select bank0
  8854  1ED1  00A0               	movwf	PROCULUS_Delay@tempo_ms
  8855  1ED2  3000               	movlw	0
  8856  1ED3  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  8857  1ED4  160A  158A  2253   	fcall	_PROCULUS_Delay
  8858  1ED7  0008               	return
  8859  1ED8                     __end_of_PROCULUS_VP_Write:
  8860                           
  8861                           	psect	text27
  8862  1000                     __ptext27:	
  8863 ;; *************** function _PROCULUS_Show_Screen *****************
  8864 ;; Defined at:
  8865 ;;		line 243 in file "proculus.c"
  8866 ;; Parameters:    Size  Location     Type
  8867 ;;  screen          2    8[BANK1 ] unsigned int 
  8868 ;; Auto vars:     Size  Location     Type
  8869 ;;  vetor           3   11[BANK1 ] unsigned char [3]
  8870 ;; Return value:  Size  Location     Type
  8871 ;;                  1    wreg      void 
  8872 ;; Registers used:
  8873 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8874 ;; Tracked objects:
  8875 ;;		On entry : 300/100
  8876 ;;		On exit  : 300/0
  8877 ;;		Unchanged: 0/0
  8878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8879 ;;      Params:         0       0       2       0       0
  8880 ;;      Locals:         0       0       3       0       0
  8881 ;;      Temps:          0       0       1       0       0
  8882 ;;      Totals:         0       0       6       0       0
  8883 ;;Total ram usage:        6 bytes
  8884 ;; Hardware stack levels used: 1
  8885 ;; Hardware stack levels required when called: 4
  8886 ;; This function calls:
  8887 ;;		_PROCULUS_Control_Register_Write
  8888 ;; This function is called by:
  8889 ;;		_Decodify_Command
  8890 ;; This function uses a non-reentrant model
  8891 ;;
  8892                           
  8893                           
  8894                           ;psect for function _PROCULUS_Show_Screen
  8895  1000                     _PROCULUS_Show_Screen:
  8896                           
  8897                           ;proculus.c: 244:      unsigned char vetor[3];;proculus.c: 245:      vetor[0] = 0x03;
  8898                           
  8899                           ;incstack = 0
  8900                           ; Regs used in _PROCULUS_Show_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8901  1000  3003               	movlw	3
  8902  1001  00AA               	movwf	??_PROCULUS_Show_Screen^(0+128)
  8903  1002  082A               	movf	??_PROCULUS_Show_Screen^(0+128),w
  8904  1003  00AB               	movwf	PROCULUS_Show_Screen@vetor^(0+128)
  8905                           
  8906                           ;proculus.c: 246:      vetor[1] = (char)(screen>>8);
  8907  1004  0829               	movf	(PROCULUS_Show_Screen@screen^(0+128)+1),w
  8908  1005  00AA               	movwf	??_PROCULUS_Show_Screen^(0+128)
  8909  1006  082A               	movf	??_PROCULUS_Show_Screen^(0+128),w
  8910  1007  00AC               	movwf	(PROCULUS_Show_Screen@vetor^(0+128)+1)
  8911                           
  8912                           ;proculus.c: 247:      vetor[2] = (char) screen;
  8913  1008  0828               	movf	PROCULUS_Show_Screen@screen^(0+128),w
  8914  1009  00AA               	movwf	??_PROCULUS_Show_Screen^(0+128)
  8915  100A  082A               	movf	??_PROCULUS_Show_Screen^(0+128),w
  8916  100B  00AD               	movwf	(PROCULUS_Show_Screen@vetor^(0+128)+2)
  8917                           
  8918                           ;proculus.c: 248:      PROCULUS_Control_Register_Write(vetor,3);
  8919  100C  3003               	movlw	3
  8920  100D  00AA               	movwf	??_PROCULUS_Show_Screen^(0+128)
  8921  100E  082A               	movf	??_PROCULUS_Show_Screen^(0+128),w
  8922  100F  00A4               	movwf	PROCULUS_Control_Register_Write@size^(0+128)
  8923  1010  30AB               	movlw	(low (PROCULUS_Show_Screen@vetor| 0))& (0+255)
  8924  1011  160A  158A  24F5   	fcall	_PROCULUS_Control_Register_Write
  8925  1014  0008               	return
  8926  1015                     __end_of_PROCULUS_Show_Screen:
  8927                           
  8928                           	psect	text28
  8929  1BD5                     __ptext28:	
  8930 ;; *************** function _PROCULUS_Buzzer *****************
  8931 ;; Defined at:
  8932 ;;		line 223 in file "proculus.c"
  8933 ;; Parameters:    Size  Location     Type
  8934 ;;  time_ms_x_10    2    8[BANK1 ] unsigned int 
  8935 ;; Auto vars:     Size  Location     Type
  8936 ;;  vetor           2   11[BANK1 ] unsigned char [2]
  8937 ;; Return value:  Size  Location     Type
  8938 ;;                  1    wreg      void 
  8939 ;; Registers used:
  8940 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8941 ;; Tracked objects:
  8942 ;;		On entry : 300/100
  8943 ;;		On exit  : 300/0
  8944 ;;		Unchanged: 0/0
  8945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8946 ;;      Params:         0       0       2       0       0
  8947 ;;      Locals:         0       0       2       0       0
  8948 ;;      Temps:          0       0       1       0       0
  8949 ;;      Totals:         0       0       5       0       0
  8950 ;;Total ram usage:        5 bytes
  8951 ;; Hardware stack levels used: 1
  8952 ;; Hardware stack levels required when called: 4
  8953 ;; This function calls:
  8954 ;;		_PROCULUS_Control_Register_Write
  8955 ;;		___lwdiv
  8956 ;; This function is called by:
  8957 ;;		_Decodify_Command
  8958 ;; This function uses a non-reentrant model
  8959 ;;
  8960                           
  8961                           
  8962                           ;psect for function _PROCULUS_Buzzer
  8963  1BD5                     _PROCULUS_Buzzer:
  8964                           
  8965                           ;proculus.c: 224:      unsigned char vetor[2];;proculus.c: 225:      time_ms_x_10 /= 10.
      +                          0;
  8966                           
  8967                           ;incstack = 0
  8968                           ; Regs used in _PROCULUS_Buzzer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8969  1BD5  300A               	movlw	10
  8970  1BD6  1283               	bcf	3,5	;RP0=0, select bank0
  8971  1BD7  00A0               	movwf	___lwdiv@divisor
  8972  1BD8  3000               	movlw	0
  8973  1BD9  00A1               	movwf	___lwdiv@divisor+1
  8974  1BDA  1683               	bsf	3,5	;RP0=1, select bank1
  8975  1BDB  0829               	movf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128),w
  8976  1BDC  1283               	bcf	3,5	;RP0=0, select bank0
  8977  1BDD  00A3               	movwf	___lwdiv@dividend+1
  8978  1BDE  1683               	bsf	3,5	;RP0=1, select bank1
  8979  1BDF  0828               	movf	PROCULUS_Buzzer@time_ms_x_10^(0+128),w
  8980  1BE0  1283               	bcf	3,5	;RP0=0, select bank0
  8981  1BE1  00A2               	movwf	___lwdiv@dividend
  8982  1BE2  160A  158A  25D6  160A  158A  	fcall	___lwdiv
  8983  1BE7  0821               	movf	?___lwdiv+1,w
  8984  1BE8  1683               	bsf	3,5	;RP0=1, select bank1
  8985  1BE9  00A9               	movwf	(PROCULUS_Buzzer@time_ms_x_10+1)^(0+128)
  8986  1BEA  1283               	bcf	3,5	;RP0=0, select bank0
  8987  1BEB  0820               	movf	?___lwdiv,w
  8988  1BEC  1683               	bsf	3,5	;RP0=1, select bank1
  8989  1BED  00A8               	movwf	PROCULUS_Buzzer@time_ms_x_10^(0+128)
  8990                           
  8991                           ;proculus.c: 226:      vetor[0]=0x02;
  8992  1BEE  3002               	movlw	2
  8993  1BEF  00AA               	movwf	??_PROCULUS_Buzzer^(0+128)
  8994  1BF0  082A               	movf	??_PROCULUS_Buzzer^(0+128),w
  8995  1BF1  00AB               	movwf	PROCULUS_Buzzer@vetor^(0+128)
  8996                           
  8997                           ;proculus.c: 227:      vetor[1]=(unsigned char) time_ms_x_10;
  8998  1BF2  0828               	movf	PROCULUS_Buzzer@time_ms_x_10^(0+128),w
  8999  1BF3  00AA               	movwf	??_PROCULUS_Buzzer^(0+128)
  9000  1BF4  082A               	movf	??_PROCULUS_Buzzer^(0+128),w
  9001  1BF5  00AC               	movwf	(PROCULUS_Buzzer@vetor^(0+128)+1)
  9002                           
  9003                           ;proculus.c: 228:      PROCULUS_Control_Register_Write(vetor,2);
  9004  1BF6  3002               	movlw	2
  9005  1BF7  00AA               	movwf	??_PROCULUS_Buzzer^(0+128)
  9006  1BF8  082A               	movf	??_PROCULUS_Buzzer^(0+128),w
  9007  1BF9  00A4               	movwf	PROCULUS_Control_Register_Write@size^(0+128)
  9008  1BFA  30AB               	movlw	(low (PROCULUS_Buzzer@vetor| 0))& (0+255)
  9009  1BFB  160A  158A  24F5   	fcall	_PROCULUS_Control_Register_Write
  9010  1BFE  0008               	return
  9011  1BFF                     __end_of_PROCULUS_Buzzer:
  9012                           
  9013                           	psect	text29
  9014  1DD6                     __ptext29:	
  9015 ;; *************** function ___lwdiv *****************
  9016 ;; Defined at:
  9017 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  9018 ;; Parameters:    Size  Location     Type
  9019 ;;  divisor         2    0[BANK0 ] unsigned int 
  9020 ;;  dividend        2    2[BANK0 ] unsigned int 
  9021 ;; Auto vars:     Size  Location     Type
  9022 ;;  quotient        2    5[BANK0 ] unsigned int 
  9023 ;;  counter         1    7[BANK0 ] unsigned char 
  9024 ;; Return value:  Size  Location     Type
  9025 ;;                  2    0[BANK0 ] unsigned int 
  9026 ;; Registers used:
  9027 ;;		wreg, status,2, status,0
  9028 ;; Tracked objects:
  9029 ;;		On entry : 300/0
  9030 ;;		On exit  : 300/0
  9031 ;;		Unchanged: 0/0
  9032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9033 ;;      Params:         0       4       0       0       0
  9034 ;;      Locals:         0       3       0       0       0
  9035 ;;      Temps:          0       1       0       0       0
  9036 ;;      Totals:         0       8       0       0       0
  9037 ;;Total ram usage:        8 bytes
  9038 ;; Hardware stack levels used: 1
  9039 ;; Hardware stack levels required when called: 1
  9040 ;; This function calls:
  9041 ;;		Nothing
  9042 ;; This function is called by:
  9043 ;;		_ADC_Media_10bits
  9044 ;;		_PROCULUS_Buzzer
  9045 ;; This function uses a non-reentrant model
  9046 ;;
  9047                           
  9048                           
  9049                           ;psect for function ___lwdiv
  9050  1DD6                     ___lwdiv:
  9051                           
  9052                           ;incstack = 0
  9053                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9054  1DD6  01A5               	clrf	___lwdiv@quotient
  9055  1DD7  01A6               	clrf	___lwdiv@quotient+1
  9056  1DD8  0820               	movf	___lwdiv@divisor,w
  9057  1DD9  0421               	iorwf	___lwdiv@divisor+1,w
  9058  1DDA  1903               	btfsc	3,2
  9059  1DDB  2E0D               	goto	l3987
  9060  1DDC  01A7               	clrf	___lwdiv@counter
  9061  1DDD  0AA7               	incf	___lwdiv@counter,f
  9062  1DDE                     l3975:
  9063  1DDE  1BA1               	btfsc	___lwdiv@divisor+1,7
  9064  1DDF  2DEC               	goto	l3977
  9065  1DE0  3001               	movlw	1
  9066  1DE1                     u3145:
  9067  1DE1  1003               	clrc
  9068  1DE2  0DA0               	rlf	___lwdiv@divisor,f
  9069  1DE3  0DA1               	rlf	___lwdiv@divisor+1,f
  9070  1DE4  3EFF               	addlw	-1
  9071  1DE5  1D03               	skipz
  9072  1DE6  2DE1               	goto	u3145
  9073  1DE7  3001               	movlw	1
  9074  1DE8  00A4               	movwf	??___lwdiv
  9075  1DE9  0824               	movf	??___lwdiv,w
  9076  1DEA  07A7               	addwf	___lwdiv@counter,f
  9077  1DEB  2DDE               	goto	l3975
  9078  1DEC                     l3977:
  9079  1DEC  3001               	movlw	1
  9080  1DED                     u3165:
  9081  1DED  1003               	clrc
  9082  1DEE  0DA5               	rlf	___lwdiv@quotient,f
  9083  1DEF  0DA6               	rlf	___lwdiv@quotient+1,f
  9084  1DF0  3EFF               	addlw	-1
  9085  1DF1  1D03               	skipz
  9086  1DF2  2DED               	goto	u3165
  9087  1DF3  0821               	movf	___lwdiv@divisor+1,w
  9088  1DF4  0223               	subwf	___lwdiv@dividend+1,w
  9089  1DF5  1D03               	skipz
  9090  1DF6  2DF9               	goto	u3175
  9091  1DF7  0820               	movf	___lwdiv@divisor,w
  9092  1DF8  0222               	subwf	___lwdiv@dividend,w
  9093  1DF9                     u3175:
  9094  1DF9  1C03               	skipc
  9095  1DFA  2E02               	goto	l3983
  9096  1DFB  0820               	movf	___lwdiv@divisor,w
  9097  1DFC  02A2               	subwf	___lwdiv@dividend,f
  9098  1DFD  0821               	movf	___lwdiv@divisor+1,w
  9099  1DFE  1C03               	skipc
  9100  1DFF  03A3               	decf	___lwdiv@dividend+1,f
  9101  1E00  02A3               	subwf	___lwdiv@dividend+1,f
  9102  1E01  1425               	bsf	___lwdiv@quotient,0
  9103  1E02                     l3983:
  9104  1E02  3001               	movlw	1
  9105  1E03                     u3185:
  9106  1E03  1003               	clrc
  9107  1E04  0CA1               	rrf	___lwdiv@divisor+1,f
  9108  1E05  0CA0               	rrf	___lwdiv@divisor,f
  9109  1E06  3EFF               	addlw	-1
  9110  1E07  1D03               	skipz
  9111  1E08  2E03               	goto	u3185
  9112  1E09  3001               	movlw	1
  9113  1E0A  02A7               	subwf	___lwdiv@counter,f
  9114  1E0B  1D03               	btfss	3,2
  9115  1E0C  2DEC               	goto	l3977
  9116  1E0D                     l3987:
  9117  1E0D  0826               	movf	___lwdiv@quotient+1,w
  9118  1E0E  00A1               	movwf	?___lwdiv+1
  9119  1E0F  0825               	movf	___lwdiv@quotient,w
  9120  1E10  00A0               	movwf	?___lwdiv
  9121  1E11  0008               	return
  9122  1E12                     __end_of___lwdiv:
  9123                           
  9124                           	psect	text30
  9125  1CF5                     __ptext30:	
  9126 ;; *************** function _PROCULUS_Control_Register_Write *****************
  9127 ;; Defined at:
  9128 ;;		line 13 in file "proculus.c"
  9129 ;; Parameters:    Size  Location     Type
  9130 ;;  vetor           1    wreg     PTR unsigned char 
  9131 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9132 ;;  size            1    4[BANK1 ] unsigned char 
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;  vetor           1    6[BANK1 ] PTR unsigned char 
  9135 ;;		 -> PROCULUS_Show_Screen@vetor(3), PROCULUS_Reset@vetor(3), PROCULUS_Buzzer@vetor(2), 
  9136 ;;  i               1    7[BANK1 ] unsigned char 
  9137 ;; Return value:  Size  Location     Type
  9138 ;;                  1    wreg      void 
  9139 ;; Registers used:
  9140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9141 ;; Tracked objects:
  9142 ;;		On entry : 300/100
  9143 ;;		On exit  : 300/0
  9144 ;;		Unchanged: 0/0
  9145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9146 ;;      Params:         0       0       1       0       0
  9147 ;;      Locals:         0       0       2       0       0
  9148 ;;      Temps:          0       0       1       0       0
  9149 ;;      Totals:         0       0       4       0       0
  9150 ;;Total ram usage:        4 bytes
  9151 ;; Hardware stack levels used: 1
  9152 ;; Hardware stack levels required when called: 3
  9153 ;; This function calls:
  9154 ;;		_PROCULUS_Delay
  9155 ;;		_USART_put_int
  9156 ;;		_USART_putc
  9157 ;; This function is called by:
  9158 ;;		_PROCULUS_Buzzer
  9159 ;;		_PROCULUS_Show_Screen
  9160 ;; This function uses a non-reentrant model
  9161 ;;
  9162                           
  9163                           
  9164                           ;psect for function _PROCULUS_Control_Register_Write
  9165  1CF5                     _PROCULUS_Control_Register_Write:
  9166                           
  9167                           ;incstack = 0
  9168                           ; Regs used in _PROCULUS_Control_Register_Write: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
  9169                           ;PROCULUS_Control_Register_Write@vetor stored from wreg
  9170  1CF5  00A6               	movwf	PROCULUS_Control_Register_Write@vetor^(0+128)
  9171                           
  9172                           ;proculus.c: 14:      USART_put_int(0x5AA5);
  9173  1CF6  30A5               	movlw	165
  9174  1CF7  00A0               	movwf	USART_put_int@value^(0+128)
  9175  1CF8  305A               	movlw	90
  9176  1CF9  00A1               	movwf	(USART_put_int@value^(0+128)+1)
  9177  1CFA  160A  158A  21C5  160A  158A  	fcall	_USART_put_int
  9178                           
  9179                           ;proculus.c: 15:      USART_putc((unsigned char)(1+size));
  9180  1CFF  0824               	movf	PROCULUS_Control_Register_Write@size^(0+128),w
  9181  1D00  3E01               	addlw	1
  9182  1D01  160A  158A  21A4  160A  158A  	fcall	_USART_putc
  9183                           
  9184                           ;proculus.c: 16:      USART_putc(0x80);
  9185  1D06  3080               	movlw	128
  9186  1D07  160A  158A  21A4  160A  158A  	fcall	_USART_putc
  9187                           
  9188                           ;proculus.c: 17:      for(unsigned char i=0;i<size;i++)
  9189  1D0C  01A7               	clrf	PROCULUS_Control_Register_Write@i^(0+128)
  9190  1D0D                     l3909:
  9191  1D0D  0824               	movf	PROCULUS_Control_Register_Write@size^(0+128),w
  9192  1D0E  0227               	subwf	PROCULUS_Control_Register_Write@i^(0+128),w
  9193  1D0F  1803               	btfsc	3,0
  9194  1D10  2D22               	goto	l3911
  9195                           
  9196                           ;proculus.c: 18:          USART_putc(vetor[i]);
  9197  1D11  0827               	movf	PROCULUS_Control_Register_Write@i^(0+128),w
  9198  1D12  0726               	addwf	PROCULUS_Control_Register_Write@vetor^(0+128),w
  9199  1D13  00A5               	movwf	??_PROCULUS_Control_Register_Write^(0+128)
  9200  1D14  0825               	movf	??_PROCULUS_Control_Register_Write^(0+128),w
  9201  1D15  0084               	movwf	4
  9202  1D16  1383               	bcf	3,7	;select IRP bank0
  9203  1D17  0800               	movf	0,w
  9204  1D18  160A  158A  21A4  160A  158A  	fcall	_USART_putc
  9205  1D1D  3001               	movlw	1
  9206  1D1E  00A5               	movwf	??_PROCULUS_Control_Register_Write^(0+128)
  9207  1D1F  0825               	movf	??_PROCULUS_Control_Register_Write^(0+128),w
  9208  1D20  07A7               	addwf	PROCULUS_Control_Register_Write@i^(0+128),f
  9209  1D21  2D0D               	goto	l3909
  9210  1D22                     l3911:
  9211                           
  9212                           ;proculus.c: 19:      PROCULUS_Delay(1);
  9213  1D22  3001               	movlw	1
  9214  1D23  1283               	bcf	3,5	;RP0=0, select bank0
  9215  1D24  00A0               	movwf	PROCULUS_Delay@tempo_ms
  9216  1D25  3000               	movlw	0
  9217  1D26  00A1               	movwf	PROCULUS_Delay@tempo_ms+1
  9218  1D27  160A  158A  2253   	fcall	_PROCULUS_Delay
  9219  1D2A  0008               	return
  9220  1D2B                     __end_of_PROCULUS_Control_Register_Write:
  9221                           
  9222                           	psect	text31
  9223  19C5                     __ptext31:	
  9224 ;; *************** function _USART_put_int *****************
  9225 ;; Defined at:
  9226 ;;		line 137 in file "usart.c"
  9227 ;; Parameters:    Size  Location     Type
  9228 ;;  value           2    0[BANK1 ] int 
  9229 ;; Auto vars:     Size  Location     Type
  9230 ;;  dado            1    3[BANK1 ] PTR unsigned char 
  9231 ;;		 -> USART_put_int@value(2), 
  9232 ;; Return value:  Size  Location     Type
  9233 ;;                  1    wreg      void 
  9234 ;; Registers used:
  9235 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9236 ;; Tracked objects:
  9237 ;;		On entry : 300/100
  9238 ;;		On exit  : 300/100
  9239 ;;		Unchanged: 0/0
  9240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9241 ;;      Params:         0       0       2       0       0
  9242 ;;      Locals:         0       0       1       0       0
  9243 ;;      Temps:          0       0       1       0       0
  9244 ;;      Totals:         0       0       4       0       0
  9245 ;;Total ram usage:        4 bytes
  9246 ;; Hardware stack levels used: 1
  9247 ;; Hardware stack levels required when called: 2
  9248 ;; This function calls:
  9249 ;;		_USART_putc
  9250 ;; This function is called by:
  9251 ;;		_Decodify_Command
  9252 ;;		_PROCULUS_Control_Register_Write
  9253 ;;		_PROCULUS_VP_Write
  9254 ;; This function uses a non-reentrant model
  9255 ;;
  9256                           
  9257                           
  9258                           ;psect for function _USART_put_int
  9259  19C5                     _USART_put_int:
  9260                           
  9261                           ;usart.c: 138:      char *dado;;usart.c: 139:      dado=(char*)&value;
  9262                           
  9263                           ;incstack = 0
  9264                           ; Regs used in _USART_put_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9265  19C5  30A0               	movlw	(low (USART_put_int@value| 0))& (0+255)
  9266  19C6  00A2               	movwf	??_USART_put_int^(0+128)
  9267  19C7  0822               	movf	??_USART_put_int^(0+128),w
  9268  19C8  00A3               	movwf	USART_put_int@dado^(0+128)
  9269                           
  9270                           ;usart.c: 140:      USART_putc(*(dado+1));
  9271  19C9  0A23               	incf	USART_put_int@dado^(0+128),w
  9272  19CA  0084               	movwf	4
  9273  19CB  1383               	bcf	3,7	;select IRP bank0
  9274  19CC  0800               	movf	0,w
  9275  19CD  160A  158A  21A4  160A  158A  	fcall	_USART_putc
  9276                           
  9277                           ;usart.c: 141:      USART_putc(*dado);
  9278  19D2  0823               	movf	USART_put_int@dado^(0+128),w
  9279  19D3  0084               	movwf	4
  9280  19D4  1383               	bcf	3,7	;select IRP bank0
  9281  19D5  0800               	movf	0,w
  9282  19D6  160A  158A  21A4   	fcall	_USART_putc
  9283  19D9  0008               	return
  9284  19DA                     __end_of_USART_put_int:
  9285                           
  9286                           	psect	text32
  9287  1A53                     __ptext32:	
  9288 ;; *************** function _PROCULUS_Delay *****************
  9289 ;; Defined at:
  9290 ;;		line 267 in file "proculus.c"
  9291 ;; Parameters:    Size  Location     Type
  9292 ;;  tempo_ms        2    0[BANK0 ] unsigned int 
  9293 ;; Auto vars:     Size  Location     Type
  9294 ;;  i               2    4[BANK0 ] unsigned int 
  9295 ;; Return value:  Size  Location     Type
  9296 ;;                  1    wreg      void 
  9297 ;; Registers used:
  9298 ;;		wreg, status,2
  9299 ;; Tracked objects:
  9300 ;;		On entry : 300/800
  9301 ;;		On exit  : 300/0
  9302 ;;		Unchanged: 0/0
  9303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9304 ;;      Params:         0       2       0       0       0
  9305 ;;      Locals:         0       2       0       0       0
  9306 ;;      Temps:          0       2       0       0       0
  9307 ;;      Totals:         0       6       0       0       0
  9308 ;;Total ram usage:        6 bytes
  9309 ;; Hardware stack levels used: 1
  9310 ;; Hardware stack levels required when called: 1
  9311 ;; This function calls:
  9312 ;;		Nothing
  9313 ;; This function is called by:
  9314 ;;		_PROCULUS_Control_Register_Write
  9315 ;;		_PROCULUS_VP_Write
  9316 ;; This function uses a non-reentrant model
  9317 ;;
  9318                           
  9319                           
  9320                           ;psect for function _PROCULUS_Delay
  9321  1A53                     _PROCULUS_Delay:
  9322                           
  9323                           ;proculus.c: 268:     for(unsigned int i=0;i<tempo_ms;i++){
  9324                           
  9325                           ;incstack = 0
  9326                           ; Regs used in _PROCULUS_Delay: [wreg+status,2]
  9327  1A53  01A4               	clrf	PROCULUS_Delay@i
  9328  1A54  01A5               	clrf	PROCULUS_Delay@i+1
  9329  1A55                     l800:
  9330  1A55  0821               	movf	PROCULUS_Delay@tempo_ms+1,w
  9331  1A56  0225               	subwf	PROCULUS_Delay@i+1,w
  9332  1A57  1D03               	skipz
  9333  1A58  2A5B               	goto	u2835
  9334  1A59  0820               	movf	PROCULUS_Delay@tempo_ms,w
  9335  1A5A  0224               	subwf	PROCULUS_Delay@i,w
  9336  1A5B                     u2835:
  9337  1A5B  1803               	btfsc	3,0
  9338  1A5C  0008               	return
  9339                           
  9340                           ;proculus.c: 269:         _delay((unsigned long)((1)*(8000000/4000.0)));
  9341  1A5D  3003               	movlw	3
  9342  1A5E  1283               	bcf	3,5	;RP0=0, select bank0
  9343  1A5F  1303               	bcf	3,6	;RP1=0, select bank0
  9344  1A60  00A3               	movwf	??_PROCULUS_Delay+1
  9345  1A61  3097               	movlw	151
  9346  1A62  00A2               	movwf	??_PROCULUS_Delay
  9347  1A63                     u5537:
  9348  1A63  0BA2               	decfsz	??_PROCULUS_Delay,f
  9349  1A64  2A63               	goto	u5537
  9350  1A65  0BA3               	decfsz	??_PROCULUS_Delay+1,f
  9351  1A66  2A63               	goto	u5537
  9352                           
  9353                           ;proculus.c: 270:     }
  9354  1A67  3001               	movlw	1
  9355  1A68  1283               	bcf	3,5	;RP0=0, select bank0
  9356  1A69  1303               	bcf	3,6	;RP1=0, select bank0
  9357  1A6A  07A4               	addwf	PROCULUS_Delay@i,f
  9358  1A6B  1803               	skipnc
  9359  1A6C  0AA5               	incf	PROCULUS_Delay@i+1,f
  9360  1A6D  3000               	movlw	0
  9361  1A6E  07A5               	addwf	PROCULUS_Delay@i+1,f
  9362  1A6F  2A55               	goto	l800
  9363  1A70                     __end_of_PROCULUS_Delay:
  9364                           
  9365                           	psect	text33
  9366  1BFF                     __ptext33:	
  9367 ;; *************** function _EEPROM_Write_String *****************
  9368 ;; Defined at:
  9369 ;;		line 97 in file "eeprom.c"
  9370 ;; Parameters:    Size  Location     Type
  9371 ;;  addr            1    wreg     unsigned char 
  9372 ;;  dado            1    5[BANK0 ] PTR unsigned char 
  9373 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  9374 ;; Auto vars:     Size  Location     Type
  9375 ;;  addr            1    7[BANK0 ] unsigned char 
  9376 ;; Return value:  Size  Location     Type
  9377 ;;                  1    wreg      void 
  9378 ;; Registers used:
  9379 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9380 ;; Tracked objects:
  9381 ;;		On entry : 300/300
  9382 ;;		On exit  : 0/0
  9383 ;;		Unchanged: 0/0
  9384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9385 ;;      Params:         0       1       0       0       0
  9386 ;;      Locals:         0       1       0       0       0
  9387 ;;      Temps:          0       1       0       0       0
  9388 ;;      Totals:         0       3       0       0       0
  9389 ;;Total ram usage:        3 bytes
  9390 ;; Hardware stack levels used: 1
  9391 ;; Hardware stack levels required when called: 2
  9392 ;; This function calls:
  9393 ;;		_EEPROM_Write_Byte
  9394 ;; This function is called by:
  9395 ;;		_Decodify_Command
  9396 ;; This function uses a non-reentrant model
  9397 ;;
  9398                           
  9399                           
  9400                           ;psect for function _EEPROM_Write_String
  9401  1BFF                     _EEPROM_Write_String:
  9402                           
  9403                           ;incstack = 0
  9404                           ; Regs used in _EEPROM_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9405                           ;EEPROM_Write_String@addr stored from wreg
  9406  1BFF  1283               	bcf	3,5	;RP0=0, select bank0
  9407  1C00  1303               	bcf	3,6	;RP1=0, select bank0
  9408  1C01  00A7               	movwf	EEPROM_Write_String@addr
  9409  1C02                     l4739:	
  9410                           ;eeprom.c: 97: void EEPROM_Write_String(unsigned char addr,char *dado);eeprom.c: 98: {;e
      +                          eprom.c: 99:     while(*dado)
  9411                           
  9412                           
  9413                           ;eeprom.c: 99:     while(*dado)
  9414  1C02  0825               	movf	EEPROM_Write_String@dado,w
  9415  1C03  0084               	movwf	4
  9416  1C04  1783               	bsf	3,7	;select IRP bank2
  9417  1C05  0800               	movf	0,w
  9418  1C06  1903               	btfsc	3,2
  9419  1C07  2C1F               	goto	l4741
  9420                           
  9421                           ;eeprom.c: 100:     {;eeprom.c: 101:      EEPROM_Write_Byte(addr,*dado);
  9422  1C08  0825               	movf	EEPROM_Write_String@dado,w
  9423  1C09  0084               	movwf	4
  9424  1C0A  0800               	movf	0,w
  9425  1C0B  00A6               	movwf	??_EEPROM_Write_String
  9426  1C0C  0826               	movf	??_EEPROM_Write_String,w
  9427  1C0D  00A0               	movwf	EEPROM_Write_Byte@dado
  9428  1C0E  0827               	movf	EEPROM_Write_String@addr,w
  9429  1C0F  160A  158A  259A  160A  158A  	fcall	_EEPROM_Write_Byte
  9430                           
  9431                           ;eeprom.c: 102:      addr++;
  9432  1C14  3001               	movlw	1
  9433  1C15  1283               	bcf	3,5	;RP0=0, select bank0
  9434  1C16  1303               	bcf	3,6	;RP1=0, select bank0
  9435  1C17  00A6               	movwf	??_EEPROM_Write_String
  9436  1C18  0826               	movf	??_EEPROM_Write_String,w
  9437  1C19  07A7               	addwf	EEPROM_Write_String@addr,f
  9438                           
  9439                           ;eeprom.c: 103:      dado++;
  9440  1C1A  3001               	movlw	1
  9441  1C1B  00A6               	movwf	??_EEPROM_Write_String
  9442  1C1C  0826               	movf	??_EEPROM_Write_String,w
  9443  1C1D  07A5               	addwf	EEPROM_Write_String@dado,f
  9444  1C1E  2C02               	goto	l4739
  9445  1C1F                     l4741:
  9446                           
  9447                           ;eeprom.c: 105:     EEPROM_Write_Byte(addr,*dado);
  9448  1C1F  0825               	movf	EEPROM_Write_String@dado,w
  9449  1C20  0084               	movwf	4
  9450  1C21  0800               	movf	0,w
  9451  1C22  00A6               	movwf	??_EEPROM_Write_String
  9452  1C23  0826               	movf	??_EEPROM_Write_String,w
  9453  1C24  00A0               	movwf	EEPROM_Write_Byte@dado
  9454  1C25  0827               	movf	EEPROM_Write_String@addr,w
  9455  1C26  160A  158A  259A   	fcall	_EEPROM_Write_Byte
  9456  1C29  0008               	return
  9457  1C2A                     __end_of_EEPROM_Write_String:
  9458                           
  9459                           	psect	text34
  9460  1C5B                     __ptext34:	
  9461 ;; *************** function _EEPROM_Write_Integer *****************
  9462 ;; Defined at:
  9463 ;;		line 68 in file "eeprom.c"
  9464 ;; Parameters:    Size  Location     Type
  9465 ;;  addr            1    wreg     unsigned char 
  9466 ;;  dado            2    5[BANK0 ] unsigned int 
  9467 ;; Auto vars:     Size  Location     Type
  9468 ;;  addr            1   10[BANK0 ] unsigned char 
  9469 ;;  i               1   11[BANK0 ] unsigned char 
  9470 ;;  ptr             1    9[BANK0 ] PTR unsigned char 
  9471 ;;		 -> EEPROM_Write_Integer@dado(2), 
  9472 ;;  addr_memo       1    0        unsigned char 
  9473 ;; Return value:  Size  Location     Type
  9474 ;;                  1    wreg      void 
  9475 ;; Registers used:
  9476 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9477 ;; Tracked objects:
  9478 ;;		On entry : 200/0
  9479 ;;		On exit  : 0/0
  9480 ;;		Unchanged: 0/0
  9481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9482 ;;      Params:         0       2       0       0       0
  9483 ;;      Locals:         0       3       0       0       0
  9484 ;;      Temps:          0       2       0       0       0
  9485 ;;      Totals:         0       7       0       0       0
  9486 ;;Total ram usage:        7 bytes
  9487 ;; Hardware stack levels used: 1
  9488 ;; Hardware stack levels required when called: 2
  9489 ;; This function calls:
  9490 ;;		_EEPROM_Write_Byte
  9491 ;; This function is called by:
  9492 ;;		_main
  9493 ;;		_Decodify_Command
  9494 ;; This function uses a non-reentrant model
  9495 ;;
  9496                           
  9497                           
  9498                           ;psect for function _EEPROM_Write_Integer
  9499  1C5B                     _EEPROM_Write_Integer:
  9500                           
  9501                           ;incstack = 0
  9502                           ; Regs used in _EEPROM_Write_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9503                           ;EEPROM_Write_Integer@addr stored from wreg
  9504  1C5B  1283               	bcf	3,5	;RP0=0, select bank0
  9505  1C5C  00AA               	movwf	EEPROM_Write_Integer@addr
  9506                           
  9507                           ;eeprom.c: 74:       ptr=(unsigned char *)&dado;
  9508  1C5D  3025               	movlw	(low (EEPROM_Write_Integer@dado| 0))& (0+255)
  9509  1C5E  00A7               	movwf	??_EEPROM_Write_Integer
  9510  1C5F  0827               	movf	??_EEPROM_Write_Integer,w
  9511  1C60  00A9               	movwf	EEPROM_Write_Integer@ptr
  9512                           
  9513                           ;eeprom.c: 75:       for (i=0;i<2;i++)
  9514  1C61  01AB               	clrf	EEPROM_Write_Integer@i
  9515  1C62                     l4689:
  9516                           
  9517                           ;eeprom.c: 76:           EEPROM_Write_Byte(addr++,*(ptr++));
  9518  1C62  0829               	movf	EEPROM_Write_Integer@ptr,w
  9519  1C63  0084               	movwf	4
  9520  1C64  1383               	bcf	3,7	;select IRP bank0
  9521  1C65  0800               	movf	0,w
  9522  1C66  00A7               	movwf	??_EEPROM_Write_Integer
  9523  1C67  0827               	movf	??_EEPROM_Write_Integer,w
  9524  1C68  00A0               	movwf	EEPROM_Write_Byte@dado
  9525  1C69  082A               	movf	EEPROM_Write_Integer@addr,w
  9526  1C6A  160A  158A  259A  160A  158A  	fcall	_EEPROM_Write_Byte
  9527  1C6F  3001               	movlw	1
  9528  1C70  1283               	bcf	3,5	;RP0=0, select bank0
  9529  1C71  1303               	bcf	3,6	;RP1=0, select bank0
  9530  1C72  00A7               	movwf	??_EEPROM_Write_Integer
  9531  1C73  0827               	movf	??_EEPROM_Write_Integer,w
  9532  1C74  07A9               	addwf	EEPROM_Write_Integer@ptr,f
  9533  1C75  3001               	movlw	1
  9534  1C76  00A7               	movwf	??_EEPROM_Write_Integer
  9535  1C77  0827               	movf	??_EEPROM_Write_Integer,w
  9536  1C78  07AA               	addwf	EEPROM_Write_Integer@addr,f
  9537  1C79  3001               	movlw	1
  9538  1C7A  00A7               	movwf	??_EEPROM_Write_Integer
  9539  1C7B  0827               	movf	??_EEPROM_Write_Integer,w
  9540  1C7C  07AB               	addwf	EEPROM_Write_Integer@i,f
  9541  1C7D  3002               	movlw	2
  9542  1C7E  022B               	subwf	EEPROM_Write_Integer@i,w
  9543  1C7F  1C03               	skipc
  9544  1C80  2C62               	goto	l4689
  9545                           
  9546                           ;eeprom.c: 77:       _delay((unsigned long)((30)*(8000000/4000.0)));
  9547  1C81  304E               	movlw	78
  9548  1C82  1283               	bcf	3,5	;RP0=0, select bank0
  9549  1C83  1303               	bcf	3,6	;RP1=0, select bank0
  9550  1C84  00A8               	movwf	??_EEPROM_Write_Integer+1
  9551  1C85  30EA               	movlw	234
  9552  1C86  00A7               	movwf	??_EEPROM_Write_Integer
  9553  1C87                     u5547:
  9554  1C87  0BA7               	decfsz	??_EEPROM_Write_Integer,f
  9555  1C88  2C87               	goto	u5547
  9556  1C89  0BA8               	decfsz	??_EEPROM_Write_Integer+1,f
  9557  1C8A  2C87               	goto	u5547
  9558  1C8B  0000               	nop
  9559  1C8C  0008               	return
  9560  1C8D                     __end_of_EEPROM_Write_Integer:
  9561                           
  9562                           	psect	text35
  9563  1D9A                     __ptext35:	
  9564 ;; *************** function _EEPROM_Write_Byte *****************
  9565 ;; Defined at:
  9566 ;;		line 21 in file "eeprom.c"
  9567 ;; Parameters:    Size  Location     Type
  9568 ;;  addr            1    wreg     unsigned char 
  9569 ;;  dado            1    0[BANK0 ] unsigned char 
  9570 ;; Auto vars:     Size  Location     Type
  9571 ;;  addr            1    3[BANK0 ] unsigned char 
  9572 ;;  last_GIE        1    4[BANK0 ] unsigned char 
  9573 ;; Return value:  Size  Location     Type
  9574 ;;                  1    wreg      void 
  9575 ;; Registers used:
  9576 ;;		wreg, status,2, status,0
  9577 ;; Tracked objects:
  9578 ;;		On entry : 0/300
  9579 ;;		On exit  : 0/0
  9580 ;;		Unchanged: 0/0
  9581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9582 ;;      Params:         0       1       0       0       0
  9583 ;;      Locals:         0       2       0       0       0
  9584 ;;      Temps:          0       2       0       0       0
  9585 ;;      Totals:         0       5       0       0       0
  9586 ;;Total ram usage:        5 bytes
  9587 ;; Hardware stack levels used: 1
  9588 ;; Hardware stack levels required when called: 1
  9589 ;; This function calls:
  9590 ;;		Nothing
  9591 ;; This function is called by:
  9592 ;;		_Decodify_Command
  9593 ;;		_EEPROM_Write_Integer
  9594 ;;		_EEPROM_Write_String
  9595 ;; This function uses a non-reentrant model
  9596 ;;
  9597                           
  9598                           
  9599                           ;psect for function _EEPROM_Write_Byte
  9600  1D9A                     _EEPROM_Write_Byte:
  9601                           
  9602                           ;incstack = 0
  9603                           ; Regs used in _EEPROM_Write_Byte: [wreg+status,2+status,0]
  9604                           ;EEPROM_Write_Byte@addr stored from wreg
  9605  1D9A  1283               	bcf	3,5	;RP0=0, select bank0
  9606  1D9B  1303               	bcf	3,6	;RP1=0, select bank0
  9607  1D9C  00A3               	movwf	EEPROM_Write_Byte@addr
  9608                           
  9609                           ;eeprom.c: 21: void EEPROM_Write_Byte(unsigned char addr, unsigned char dado);eeprom.c: 
      +                          22: {;eeprom.c: 23:     unsigned char last_GIE;;eeprom.c: 24:     Delay_Led_Memory=20;
  9610  1D9D  3014               	movlw	20
  9611  1D9E  1683               	bsf	3,5	;RP0=1, select bank1
  9612  1D9F  00DD               	movwf	_Delay_Led_Memory^(0+128)	;volatile
  9613  1DA0  3000               	movlw	0
  9614  1DA1  00DE               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
  9615  1DA2                     l519:	
  9616                           ;eeprom.c: 25:     while(EECON1bits.WR) continue;
  9617                           
  9618  1DA2  1703               	bsf	3,6	;RP1=1, select bank3
  9619  1DA3  188C               	btfsc	12,1	;volsfr
  9620  1DA4  2DA2               	goto	l519
  9621                           
  9622                           ;eeprom.c: 27:        if(INTCONbits.GIE==1)
  9623  1DA5  1F8B               	btfss	11,7	;volatile
  9624  1DA6  2DAC               	goto	l3841
  9625                           
  9626                           ;eeprom.c: 28:           last_GIE=1;
  9627  1DA7  1283               	bcf	3,5	;RP0=0, select bank0
  9628  1DA8  1303               	bcf	3,6	;RP1=0, select bank0
  9629  1DA9  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9630  1DAA  0AA4               	incf	EEPROM_Write_Byte@last_GIE,f
  9631  1DAB  2DAF               	goto	l3843
  9632  1DAC                     l3841:
  9633                           
  9634                           ;eeprom.c: 30:           last_GIE=0;
  9635  1DAC  1283               	bcf	3,5	;RP0=0, select bank0
  9636  1DAD  1303               	bcf	3,6	;RP1=0, select bank0
  9637  1DAE  01A4               	clrf	EEPROM_Write_Byte@last_GIE
  9638  1DAF                     l3843:
  9639                           
  9640                           ;eeprom.c: 32:        EEADR=addr;
  9641  1DAF  0823               	movf	EEPROM_Write_Byte@addr,w
  9642  1DB0  1703               	bsf	3,6	;RP1=1, select bank2
  9643  1DB1  008D               	movwf	13	;volatile
  9644                           
  9645                           ;eeprom.c: 33:        EEDATA=dado;
  9646  1DB2  1303               	bcf	3,6	;RP1=0, select bank0
  9647  1DB3  0820               	movf	EEPROM_Write_Byte@dado,w
  9648  1DB4  1703               	bsf	3,6	;RP1=1, select bank2
  9649  1DB5  008C               	movwf	12	;volatile
  9650                           
  9651                           ;eeprom.c: 34:        EECON1bits.EEPGD=0;
  9652  1DB6  1683               	bsf	3,5	;RP0=1, select bank3
  9653  1DB7  138C               	bcf	12,7	;volsfr
  9654                           
  9655                           ;eeprom.c: 35:        EECON1bits.WREN=1;
  9656  1DB8  150C               	bsf	12,2	;volsfr
  9657                           
  9658                           ;eeprom.c: 36:        INTCONbits.GIE=0;
  9659  1DB9  138B               	bcf	11,7	;volatile
  9660                           
  9661                           ;eeprom.c: 37:        EECON2=0x55;
  9662  1DBA  3055               	movlw	85
  9663  1DBB  008D               	movwf	13	;volsfr
  9664                           
  9665                           ;eeprom.c: 38:        EECON2=0xAA;
  9666  1DBC  30AA               	movlw	170
  9667  1DBD  008D               	movwf	13	;volsfr
  9668                           
  9669                           ;eeprom.c: 39:        EECON1bits.WR=1;
  9670  1DBE  148C               	bsf	12,1	;volsfr
  9671                           
  9672                           ;eeprom.c: 41:        if(last_GIE==1)
  9673  1DBF  1283               	bcf	3,5	;RP0=0, select bank0
  9674  1DC0  1303               	bcf	3,6	;RP1=0, select bank0
  9675  1DC1  0324               	decf	EEPROM_Write_Byte@last_GIE,w
  9676  1DC2  1D03               	btfss	3,2
  9677  1DC3  2DC6               	goto	l524
  9678                           
  9679                           ;eeprom.c: 42:           INTCONbits.GIE=1;
  9680  1DC4  178B               	bsf	11,7	;volatile
  9681  1DC5  2DC7               	goto	l525
  9682  1DC6                     l524:	
  9683                           ;eeprom.c: 43:        else
  9684                           
  9685                           
  9686                           ;eeprom.c: 44:           INTCONbits.GIE=0;
  9687  1DC6  138B               	bcf	11,7	;volatile
  9688  1DC7                     l525:
  9689                           
  9690                           ;eeprom.c: 46:        EECON1bits.WREN=0;
  9691  1DC7  1683               	bsf	3,5	;RP0=1, select bank3
  9692  1DC8  1703               	bsf	3,6	;RP1=1, select bank3
  9693  1DC9  110C               	bcf	12,2	;volsfr
  9694                           
  9695                           ;eeprom.c: 47:        _delay((unsigned long)((30)*(8000000/4000.0)));
  9696  1DCA  304E               	movlw	78
  9697  1DCB  1283               	bcf	3,5	;RP0=0, select bank0
  9698  1DCC  1303               	bcf	3,6	;RP1=0, select bank0
  9699  1DCD  00A2               	movwf	??_EEPROM_Write_Byte+1
  9700  1DCE  30EA               	movlw	234
  9701  1DCF  00A1               	movwf	??_EEPROM_Write_Byte
  9702  1DD0                     u5557:
  9703  1DD0  0BA1               	decfsz	??_EEPROM_Write_Byte,f
  9704  1DD1  2DD0               	goto	u5557
  9705  1DD2  0BA2               	decfsz	??_EEPROM_Write_Byte+1,f
  9706  1DD3  2DD0               	goto	u5557
  9707  1DD4  0000               	nop
  9708  1DD5  0008               	return
  9709  1DD6                     __end_of_EEPROM_Write_Byte:
  9710                           
  9711                           	psect	text36
  9712  1AAC                     __ptext36:	
  9713 ;; *************** function _EEPROM_Read_String *****************
  9714 ;; Defined at:
  9715 ;;		line 109 in file "eeprom.c"
  9716 ;; Parameters:    Size  Location     Type
  9717 ;;  addr            1    wreg     unsigned char 
  9718 ;;  dado            1    3[BANK0 ] PTR unsigned char 
  9719 ;;		 -> buffer(33), 
  9720 ;; Auto vars:     Size  Location     Type
  9721 ;;  addr            1    5[BANK0 ] unsigned char 
  9722 ;;  c               1    6[BANK0 ] unsigned char 
  9723 ;; Return value:  Size  Location     Type
  9724 ;;                  1    wreg      void 
  9725 ;; Registers used:
  9726 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9727 ;; Tracked objects:
  9728 ;;		On entry : 300/300
  9729 ;;		On exit  : B00/800
  9730 ;;		Unchanged: 0/0
  9731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9732 ;;      Params:         0       1       0       0       0
  9733 ;;      Locals:         0       2       0       0       0
  9734 ;;      Temps:          0       1       0       0       0
  9735 ;;      Totals:         0       4       0       0       0
  9736 ;;Total ram usage:        4 bytes
  9737 ;; Hardware stack levels used: 1
  9738 ;; Hardware stack levels required when called: 2
  9739 ;; This function calls:
  9740 ;;		_EEPROM_Read_Byte
  9741 ;; This function is called by:
  9742 ;;		_Decodify_Command
  9743 ;; This function uses a non-reentrant model
  9744 ;;
  9745                           
  9746                           
  9747                           ;psect for function _EEPROM_Read_String
  9748  1AAC                     _EEPROM_Read_String:
  9749                           
  9750                           ;incstack = 0
  9751                           ; Regs used in _EEPROM_Read_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9752                           ;EEPROM_Read_String@addr stored from wreg
  9753  1AAC  1283               	bcf	3,5	;RP0=0, select bank0
  9754  1AAD  1303               	bcf	3,6	;RP1=0, select bank0
  9755  1AAE  00A5               	movwf	EEPROM_Read_String@addr
  9756  1AAF                     l551:	
  9757                           ;eeprom.c: 109: void EEPROM_Read_String(unsigned char addr,char *dado);eeprom.c: 110: {;
      +                          eeprom.c: 111:     unsigned char c;;eeprom.c: 112:     do{
  9758                           
  9759                           
  9760                           ;eeprom.c: 113:         c=EEPROM_Read_Byte(addr++);
  9761  1AAF  0825               	movf	EEPROM_Read_String@addr,w
  9762  1AB0  160A  158A  22ED  160A  158A  	fcall	_EEPROM_Read_Byte
  9763  1AB5  1303               	bcf	3,6	;RP1=0, select bank0
  9764  1AB6  00A4               	movwf	??_EEPROM_Read_String
  9765  1AB7  0824               	movf	??_EEPROM_Read_String,w
  9766  1AB8  00A6               	movwf	EEPROM_Read_String@c
  9767  1AB9  3001               	movlw	1
  9768  1ABA  00A4               	movwf	??_EEPROM_Read_String
  9769  1ABB  0824               	movf	??_EEPROM_Read_String,w
  9770  1ABC  07A5               	addwf	EEPROM_Read_String@addr,f
  9771                           
  9772                           ;eeprom.c: 114:         *(dado++)=c;
  9773  1ABD  0826               	movf	EEPROM_Read_String@c,w
  9774  1ABE  00A4               	movwf	??_EEPROM_Read_String
  9775  1ABF  0823               	movf	EEPROM_Read_String@dado,w
  9776  1AC0  0084               	movwf	4
  9777  1AC1  0824               	movf	??_EEPROM_Read_String,w
  9778  1AC2  1783               	bsf	3,7	;select IRP bank2
  9779  1AC3  0080               	movwf	0
  9780  1AC4  3001               	movlw	1
  9781  1AC5  00A4               	movwf	??_EEPROM_Read_String
  9782  1AC6  0824               	movf	??_EEPROM_Read_String,w
  9783  1AC7  07A3               	addwf	EEPROM_Read_String@dado,f
  9784                           
  9785                           ;eeprom.c: 116:       }while(c);
  9786  1AC8  0826               	movf	EEPROM_Read_String@c,w
  9787  1AC9  1903               	btfsc	3,2
  9788  1ACA  0008               	return
  9789  1ACB  2AAF               	goto	l551
  9790  1ACC                     __end_of_EEPROM_Read_String:
  9791                           
  9792                           	psect	text37
  9793  1BAB                     __ptext37:	
  9794 ;; *************** function _EEPROM_Read_Integer *****************
  9795 ;; Defined at:
  9796 ;;		line 81 in file "eeprom.c"
  9797 ;; Parameters:    Size  Location     Type
  9798 ;;  addr            1    wreg     unsigned char 
  9799 ;; Auto vars:     Size  Location     Type
  9800 ;;  addr            1    6[BANK0 ] unsigned char 
  9801 ;;  result          2    8[BANK0 ] unsigned int 
  9802 ;;  i               1   10[BANK0 ] unsigned char 
  9803 ;;  ptr             1    7[BANK0 ] PTR unsigned char 
  9804 ;;		 -> EEPROM_Read_Integer@result(2), 
  9805 ;; Return value:  Size  Location     Type
  9806 ;;                  2    3[BANK0 ] unsigned int 
  9807 ;; Registers used:
  9808 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9809 ;; Tracked objects:
  9810 ;;		On entry : 0/0
  9811 ;;		On exit  : B00/0
  9812 ;;		Unchanged: 0/0
  9813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9814 ;;      Params:         0       2       0       0       0
  9815 ;;      Locals:         0       5       0       0       0
  9816 ;;      Temps:          0       1       0       0       0
  9817 ;;      Totals:         0       8       0       0       0
  9818 ;;Total ram usage:        8 bytes
  9819 ;; Hardware stack levels used: 1
  9820 ;; Hardware stack levels required when called: 2
  9821 ;; This function calls:
  9822 ;;		_EEPROM_Read_Byte
  9823 ;; This function is called by:
  9824 ;;		_main
  9825 ;;		_Decodify_Command
  9826 ;; This function uses a non-reentrant model
  9827 ;;
  9828                           
  9829                           
  9830                           ;psect for function _EEPROM_Read_Integer
  9831  1BAB                     _EEPROM_Read_Integer:
  9832                           
  9833                           ;incstack = 0
  9834                           ; Regs used in _EEPROM_Read_Integer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9835                           ;EEPROM_Read_Integer@addr stored from wreg
  9836  1BAB  1283               	bcf	3,5	;RP0=0, select bank0
  9837  1BAC  1303               	bcf	3,6	;RP1=0, select bank0
  9838  1BAD  00A6               	movwf	EEPROM_Read_Integer@addr
  9839                           
  9840                           ;eeprom.c: 81: unsigned int EEPROM_Read_Integer(unsigned char addr);eeprom.c: 82: {;eepr
      +                          om.c: 83:       unsigned int result;;eeprom.c: 84:       unsigned char *ptr;;eeprom.c: 8
      +                          5:       unsigned char i;;eeprom.c: 86:       ptr=(unsigned char *)&result;
  9841  1BAE  3028               	movlw	(low (EEPROM_Read_Integer@result| 0))& (0+255)
  9842  1BAF  00A5               	movwf	??_EEPROM_Read_Integer
  9843  1BB0  0825               	movf	??_EEPROM_Read_Integer,w
  9844  1BB1  00A7               	movwf	EEPROM_Read_Integer@ptr
  9845                           
  9846                           ;eeprom.c: 87:       for (i=0;i<2;i++)
  9847  1BB2  01AA               	clrf	EEPROM_Read_Integer@i
  9848  1BB3                     l4665:
  9849                           
  9850                           ;eeprom.c: 88:           *(ptr++)=EEPROM_Read_Byte(addr++);
  9851  1BB3  0826               	movf	EEPROM_Read_Integer@addr,w
  9852  1BB4  160A  158A  22ED  160A  158A  	fcall	_EEPROM_Read_Byte
  9853  1BB9  1303               	bcf	3,6	;RP1=0, select bank0
  9854  1BBA  00A5               	movwf	??_EEPROM_Read_Integer
  9855  1BBB  0827               	movf	EEPROM_Read_Integer@ptr,w
  9856  1BBC  0084               	movwf	4
  9857  1BBD  0825               	movf	??_EEPROM_Read_Integer,w
  9858  1BBE  1383               	bcf	3,7	;select IRP bank0
  9859  1BBF  0080               	movwf	0
  9860  1BC0  3001               	movlw	1
  9861  1BC1  00A5               	movwf	??_EEPROM_Read_Integer
  9862  1BC2  0825               	movf	??_EEPROM_Read_Integer,w
  9863  1BC3  07A6               	addwf	EEPROM_Read_Integer@addr,f
  9864  1BC4  3001               	movlw	1
  9865  1BC5  00A5               	movwf	??_EEPROM_Read_Integer
  9866  1BC6  0825               	movf	??_EEPROM_Read_Integer,w
  9867  1BC7  07A7               	addwf	EEPROM_Read_Integer@ptr,f
  9868  1BC8  3001               	movlw	1
  9869  1BC9  00A5               	movwf	??_EEPROM_Read_Integer
  9870  1BCA  0825               	movf	??_EEPROM_Read_Integer,w
  9871  1BCB  07AA               	addwf	EEPROM_Read_Integer@i,f
  9872  1BCC  3002               	movlw	2
  9873  1BCD  022A               	subwf	EEPROM_Read_Integer@i,w
  9874  1BCE  1C03               	skipc
  9875  1BCF  2BB3               	goto	l4665
  9876                           
  9877                           ;eeprom.c: 89:       return result;
  9878  1BD0  0829               	movf	EEPROM_Read_Integer@result+1,w
  9879  1BD1  00A4               	movwf	?_EEPROM_Read_Integer+1
  9880  1BD2  0828               	movf	EEPROM_Read_Integer@result,w
  9881  1BD3  00A3               	movwf	?_EEPROM_Read_Integer
  9882  1BD4  0008               	return
  9883  1BD5                     __end_of_EEPROM_Read_Integer:
  9884                           
  9885                           	psect	text38
  9886  1AED                     __ptext38:	
  9887 ;; *************** function _EEPROM_Read_Byte *****************
  9888 ;; Defined at:
  9889 ;;		line 52 in file "eeprom.c"
  9890 ;; Parameters:    Size  Location     Type
  9891 ;;  addr            1    wreg     unsigned char 
  9892 ;; Auto vars:     Size  Location     Type
  9893 ;;  addr            1    2[BANK0 ] unsigned char 
  9894 ;; Return value:  Size  Location     Type
  9895 ;;                  1    wreg      unsigned char 
  9896 ;; Registers used:
  9897 ;;		wreg
  9898 ;; Tracked objects:
  9899 ;;		On entry : 0/300
  9900 ;;		On exit  : 300/200
  9901 ;;		Unchanged: 0/0
  9902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9903 ;;      Params:         0       0       0       0       0
  9904 ;;      Locals:         0       1       0       0       0
  9905 ;;      Temps:          0       2       0       0       0
  9906 ;;      Totals:         0       3       0       0       0
  9907 ;;Total ram usage:        3 bytes
  9908 ;; Hardware stack levels used: 1
  9909 ;; Hardware stack levels required when called: 1
  9910 ;; This function calls:
  9911 ;;		Nothing
  9912 ;; This function is called by:
  9913 ;;		_Decodify_Command
  9914 ;;		_EEPROM_Read_Integer
  9915 ;;		_EEPROM_Read_String
  9916 ;; This function uses a non-reentrant model
  9917 ;;
  9918                           
  9919                           
  9920                           ;psect for function _EEPROM_Read_Byte
  9921  1AED                     _EEPROM_Read_Byte:
  9922                           
  9923                           ;incstack = 0
  9924                           ; Regs used in _EEPROM_Read_Byte: [wreg]
  9925                           ;EEPROM_Read_Byte@addr stored from wreg
  9926  1AED  1283               	bcf	3,5	;RP0=0, select bank0
  9927  1AEE  1303               	bcf	3,6	;RP1=0, select bank0
  9928  1AEF  00A2               	movwf	EEPROM_Read_Byte@addr
  9929                           
  9930                           ;eeprom.c: 52: unsigned char EEPROM_Read_Byte(unsigned char addr);eeprom.c: 53: {;eeprom
      +                          .c: 54:    Delay_Led_Memory=20;
  9931  1AF0  3014               	movlw	20
  9932  1AF1  1683               	bsf	3,5	;RP0=1, select bank1
  9933  1AF2  00DD               	movwf	_Delay_Led_Memory^(0+128)	;volatile
  9934  1AF3  3000               	movlw	0
  9935  1AF4  00DE               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
  9936  1AF5                     l529:	
  9937                           ;eeprom.c: 55:    while(EECON1bits.WR)continue;
  9938                           
  9939  1AF5  1703               	bsf	3,6	;RP1=1, select bank3
  9940  1AF6  188C               	btfsc	12,1	;volsfr
  9941  1AF7  2AF5               	goto	l529
  9942                           
  9943                           ;eeprom.c: 57:    EEADR=addr;
  9944  1AF8  1283               	bcf	3,5	;RP0=0, select bank0
  9945  1AF9  1303               	bcf	3,6	;RP1=0, select bank0
  9946  1AFA  0822               	movf	EEPROM_Read_Byte@addr,w
  9947  1AFB  1703               	bsf	3,6	;RP1=1, select bank2
  9948  1AFC  008D               	movwf	13	;volatile
  9949                           
  9950                           ;eeprom.c: 58:    EECON1bits.EEPGD=0;
  9951  1AFD  1683               	bsf	3,5	;RP0=1, select bank3
  9952  1AFE  138C               	bcf	12,7	;volsfr
  9953                           
  9954                           ;eeprom.c: 59:    EECON1bits.RD=1;
  9955  1AFF  140C               	bsf	12,0	;volsfr
  9956                           
  9957                           ;eeprom.c: 60:    _delay((unsigned long)((30)*(8000000/4000.0)));
  9958  1B00  304E               	movlw	78
  9959  1B01  1283               	bcf	3,5	;RP0=0, select bank0
  9960  1B02  1303               	bcf	3,6	;RP1=0, select bank0
  9961  1B03  00A1               	movwf	??_EEPROM_Read_Byte+1
  9962  1B04  30EA               	movlw	234
  9963  1B05  00A0               	movwf	??_EEPROM_Read_Byte
  9964  1B06                     u5567:
  9965  1B06  0BA0               	decfsz	??_EEPROM_Read_Byte,f
  9966  1B07  2B06               	goto	u5567
  9967  1B08  0BA1               	decfsz	??_EEPROM_Read_Byte+1,f
  9968  1B09  2B06               	goto	u5567
  9969  1B0A  0000               	nop
  9970                           
  9971                           ;eeprom.c: 61:    return EEDATA;
  9972  1B0B  1283               	bcf	3,5	;RP0=0, select bank2
  9973  1B0C  1703               	bsf	3,6	;RP1=1, select bank2
  9974  1B0D  080C               	movf	12,w	;volatile
  9975  1B0E  0008               	return
  9976  1B0F                     __end_of_EEPROM_Read_Byte:
  9977                           
  9978                           	psect	text39
  9979  1297                     __ptext39:	
  9980 ;; *************** function _EEPROM_24C1025_Write_Str *****************
  9981 ;; Defined at:
  9982 ;;		line 220 in file "EEPROM_24C1025.c"
  9983 ;; Parameters:    Size  Location     Type
  9984 ;;  chip_add        1    wreg     unsigned char 
  9985 ;;  mem_add         4   10[BANK0 ] unsigned long 
  9986 ;;  data            1   14[BANK0 ] PTR unsigned char 
  9987 ;;		 -> usart_protocol.value(52), usart_protocol(58), 
  9988 ;; Auto vars:     Size  Location     Type
  9989 ;;  chip_add        1   17[BANK0 ] unsigned char 
  9990 ;;  ctrl            1   19[BANK0 ] unsigned char 
  9991 ;;  range           1   18[BANK0 ] unsigned char 
  9992 ;; Return value:  Size  Location     Type
  9993 ;;                  1    wreg      void 
  9994 ;; Registers used:
  9995 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9996 ;; Tracked objects:
  9997 ;;		On entry : 300/300
  9998 ;;		On exit  : 0/0
  9999 ;;		Unchanged: 0/0
 10000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10001 ;;      Params:         0       5       0       0       0
 10002 ;;      Locals:         0       3       0       0       0
 10003 ;;      Temps:          0       2       0       0       0
 10004 ;;      Totals:         0      10       0       0       0
 10005 ;;Total ram usage:       10 bytes
 10006 ;; Hardware stack levels used: 1
 10007 ;; Hardware stack levels required when called: 3
 10008 ;; This function calls:
 10009 ;;		_I2C_Master_Start
 10010 ;;		_I2C_Master_Stop
 10011 ;;		_I2C_Master_Write
 10012 ;;		_my_delay_ms_WDT
 10013 ;; This function is called by:
 10014 ;;		_Decodify_Command
 10015 ;; This function uses a non-reentrant model
 10016 ;;
 10017                           
 10018                           
 10019                           ;psect for function _EEPROM_24C1025_Write_Str
 10020  1297                     _EEPROM_24C1025_Write_Str:
 10021                           
 10022                           ;incstack = 0
 10023                           ; Regs used in _EEPROM_24C1025_Write_Str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 10024                           ;EEPROM_24C1025_Write_Str@chip_add stored from wreg
 10025  1297  1283               	bcf	3,5	;RP0=0, select bank0
 10026  1298  1303               	bcf	3,6	;RP1=0, select bank0
 10027  1299  00B1               	movwf	EEPROM_24C1025_Write_Str@chip_add
 10028                           
 10029                           ;EEPROM_24C1025.c: 222:      unsigned char ctrl;;EEPROM_24C1025.c: 224:      if(mem_add>
      +                          0x1FFFF) return;
 10030  129A  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10031  129B  1D03               	btfss	3,2
 10032  129C  0008               	return
 10033  129D  3002               	movlw	2
 10034  129E  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10035  129F  1D03               	skipz
 10036  12A0  2AA9               	goto	u4223
 10037  12A1  3000               	movlw	0
 10038  12A2  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10039  12A3  1D03               	skipz
 10040  12A4  2AA9               	goto	u4223
 10041  12A5  3000               	movlw	0
 10042  12A6  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10043  12A7  1D03               	skipz
 10044  12A8  2AA9               	goto	u4223
 10045  12A9                     u4223:
 10046  12A9  1803               	btfsc	3,0
 10047  12AA  0008               	return
 10048                           
 10049                           ;EEPROM_24C1025.c: 226:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10050  12AB  1283               	bcf	3,5	;RP0=0, select bank0
 10051  12AC  1303               	bcf	3,6	;RP1=0, select bank0
 10052  12AD                     L12:
 10053  12AD  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10054  12AE  1D03               	btfss	3,2
 10055  12AF  2ABE               	goto	l4467
 10056  12B0  3001               	movlw	1
 10057  12B1  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10058  12B2  1D03               	skipz
 10059  12B3  2ABC               	goto	u4233
 10060  12B4  3000               	movlw	0
 10061  12B5  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10062  12B6  1D03               	skipz
 10063  12B7  2ABC               	goto	u4233
 10064  12B8  3000               	movlw	0
 10065  12B9  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10066  12BA  1D03               	skipz
 10067  12BB  2ABC               	goto	u4233
 10068  12BC                     u4233:
 10069  12BC  1C03               	btfss	3,0
 10070  12BD  2AC5               	goto	l4469
 10071  12BE                     l4467:
 10072  12BE  3008               	movlw	8
 10073  12BF  1283               	bcf	3,5	;RP0=0, select bank0
 10074  12C0  1303               	bcf	3,6	;RP1=0, select bank0
 10075  12C1  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10076  12C2  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10077  12C3  00B2               	movwf	EEPROM_24C1025_Write_Str@range
 10078  12C4  2AC8               	goto	l4471
 10079  12C5                     l4469:
 10080  12C5  1283               	bcf	3,5	;RP0=0, select bank0
 10081  12C6  1303               	bcf	3,6	;RP1=0, select bank0
 10082  12C7  01B2               	clrf	EEPROM_24C1025_Write_Str@range
 10083  12C8                     l4471:
 10084                           
 10085                           ;EEPROM_24C1025.c: 227:      ctrl=chip_add;
 10086  12C8  0831               	movf	EEPROM_24C1025_Write_Str@chip_add,w
 10087  12C9  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10088  12CA  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10089  12CB  00B3               	movwf	EEPROM_24C1025_Write_Str@ctrl
 10090                           
 10091                           ;EEPROM_24C1025.c: 228:      ctrl<<=1;
 10092  12CC  1003               	clrc
 10093  12CD  0DB3               	rlf	EEPROM_24C1025_Write_Str@ctrl,f
 10094                           
 10095                           ;EEPROM_24C1025.c: 229:      ctrl |= 0xA0;
 10096  12CE  30A0               	movlw	160
 10097  12CF  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10098  12D0  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10099  12D1  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10100                           
 10101                           ;EEPROM_24C1025.c: 230:      ctrl |= range;
 10102  12D2  0832               	movf	EEPROM_24C1025_Write_Str@range,w
 10103  12D3  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10104  12D4  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10105  12D5  04B3               	iorwf	EEPROM_24C1025_Write_Str@ctrl,f
 10106                           
 10107                           ;EEPROM_24C1025.c: 232:      I2C_Master_Start();
 10108  12D6  160A  158A  21B4  160A  118A  	fcall	_I2C_Master_Start
 10109                           
 10110                           ;EEPROM_24C1025.c: 233:      I2C_Master_Write(ctrl);
 10111  12DB  1283               	bcf	3,5	;RP0=0, select bank0
 10112  12DC  0833               	movf	EEPROM_24C1025_Write_Str@ctrl,w
 10113  12DD  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10114  12DE  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10115  12DF  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10116  12E0  00A3               	movwf	I2C_Master_Write@d
 10117  12E1  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10118  12E2  00A4               	movwf	I2C_Master_Write@d+1
 10119  12E3  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 10120                           
 10121                           ;EEPROM_24C1025.c: 234:      I2C_Master_Write(((char *)&mem_add)[1]);
 10122  12E8  082B               	movf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10123  12E9  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10124  12EA  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10125  12EB  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10126  12EC  00A3               	movwf	I2C_Master_Write@d
 10127  12ED  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10128  12EE  00A4               	movwf	I2C_Master_Write@d+1
 10129  12EF  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 10130                           
 10131                           ;EEPROM_24C1025.c: 235:      I2C_Master_Write(((char *)&mem_add)[0]);
 10132  12F4  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10133  12F5  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10134  12F6  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10135  12F7  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10136  12F8  00A3               	movwf	I2C_Master_Write@d
 10137  12F9  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10138  12FA  00A4               	movwf	I2C_Master_Write@d+1
 10139  12FB  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 10140  1300                     l4531:	
 10141                           ;EEPROM_24C1025.c: 236:      while(*data)
 10142                           
 10143                           
 10144                           ;EEPROM_24C1025.c: 236:      while(*data)
 10145  1300  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10146  1301  0084               	movwf	4
 10147  1302  1783               	bsf	3,7	;select IRP bank2
 10148  1303  0800               	movf	0,w
 10149  1304  1903               	btfsc	3,2
 10150  1305  2B78               	goto	l4533
 10151  1306  0064               	clrwdt	;# 
 10152                           
 10153                           ;EEPROM_24C1025.c: 239:           if(mem_add>0x1FFFF) return;
 10154  1307  1283               	bcf	3,5	;RP0=0, select bank0
 10155  1308  1303               	bcf	3,6	;RP1=0, select bank0
 10156  1309  082D               	movf	EEPROM_24C1025_Write_Str@mem_add+3,w
 10157  130A  1D03               	btfss	3,2
 10158  130B  0008               	return
 10159  130C  3002               	movlw	2
 10160  130D  022C               	subwf	EEPROM_24C1025_Write_Str@mem_add+2,w
 10161  130E  1D03               	skipz
 10162  130F  2B18               	goto	u4243
 10163  1310  3000               	movlw	0
 10164  1311  022B               	subwf	EEPROM_24C1025_Write_Str@mem_add+1,w
 10165  1312  1D03               	skipz
 10166  1313  2B18               	goto	u4243
 10167  1314  3000               	movlw	0
 10168  1315  022A               	subwf	EEPROM_24C1025_Write_Str@mem_add,w
 10169  1316  1D03               	skipz
 10170  1317  2B18               	goto	u4243
 10171  1318                     u4243:
 10172  1318  1803               	btfsc	3,0
 10173  1319  0008               	return
 10174                           
 10175                           ;EEPROM_24C1025.c: 240:           if((mem_add+1)%128==0)
 10176  131A  1283               	bcf	3,5	;RP0=0, select bank0
 10177  131B  1303               	bcf	3,6	;RP1=0, select bank0
 10178  131C  082A               	movf	EEPROM_24C1025_Write_Str@mem_add,w
 10179  131D  3E01               	addlw	1
 10180  131E  397F               	andlw	127
 10181  131F  1D03               	btfss	3,2
 10182  1320  2B56               	goto	l4525
 10183                           
 10184                           ;EEPROM_24C1025.c: 241:             {;EEPROM_24C1025.c: 242:             I2C_Master_Writ
      +                          e(*data);
 10185  1321  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10186  1322  0084               	movwf	4
 10187  1323  1783               	bsf	3,7	;select IRP bank2
 10188  1324  0800               	movf	0,w
 10189  1325  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10190  1326  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10191  1327  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10192  1328  00A3               	movwf	I2C_Master_Write@d
 10193  1329  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10194  132A  00A4               	movwf	I2C_Master_Write@d+1
 10195  132B  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 10196                           
 10197                           ;EEPROM_24C1025.c: 243:             I2C_Master_Stop();
 10198  1330  160A  158A  2171  160A  118A  	fcall	_I2C_Master_Stop
 10199                           
 10200                           ;EEPROM_24C1025.c: 245:             my_delay_ms_WDT(5);
 10201  1335  3000               	movlw	0
 10202  1336  1283               	bcf	3,5	;RP0=0, select bank0
 10203  1337  00A3               	movwf	my_delay_ms_WDT@time+3
 10204  1338  3000               	movlw	0
 10205  1339  00A2               	movwf	my_delay_ms_WDT@time+2
 10206  133A  3000               	movlw	0
 10207  133B  00A1               	movwf	my_delay_ms_WDT@time+1
 10208  133C  3005               	movlw	5
 10209  133D  00A0               	movwf	my_delay_ms_WDT@time
 10210  133E  160A  158A  2562  160A  118A  	fcall	_my_delay_ms_WDT
 10211                           
 10212                           ;EEPROM_24C1025.c: 246:             mem_add++;
 10213  1343  3001               	movlw	1
 10214  1344  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 10215  1345  3000               	movlw	0
 10216  1346  1803               	skipnc
 10217  1347  3001               	movlw	1
 10218  1348  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10219  1349  3000               	movlw	0
 10220  134A  1803               	skipnc
 10221  134B  3001               	movlw	1
 10222  134C  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10223  134D  3000               	movlw	0
 10224  134E  1803               	skipnc
 10225  134F  3001               	movlw	1
 10226  1350  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10227                           
 10228                           ;EEPROM_24C1025.c: 247:             data++;
 10229  1351  3001               	movlw	1
 10230  1352  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10231  1353  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10232  1354  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 10233  1355  2AAD               	goto	L12
 10234  1356                     l4525:	
 10235                           ;EEPROM_24C1025.c: 248:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10236                           
 10237                           
 10238                           ;EEPROM_24C1025.c: 260:             {;EEPROM_24C1025.c: 261:             I2C_Master_Writ
      +                          e(*data);
 10239  1356  082E               	movf	EEPROM_24C1025_Write_Str@data,w
 10240  1357  0084               	movwf	4
 10241  1358  1783               	bsf	3,7	;select IRP bank2
 10242  1359  0800               	movf	0,w
 10243  135A  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10244  135B  01B0               	clrf	??_EEPROM_24C1025_Write_Str+1
 10245  135C  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10246  135D  00A3               	movwf	I2C_Master_Write@d
 10247  135E  0830               	movf	??_EEPROM_24C1025_Write_Str+1,w
 10248  135F  00A4               	movwf	I2C_Master_Write@d+1
 10249  1360  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 10250                           
 10251                           ;EEPROM_24C1025.c: 262:             data++;
 10252  1365  3001               	movlw	1
 10253  1366  00AF               	movwf	??_EEPROM_24C1025_Write_Str
 10254  1367  082F               	movf	??_EEPROM_24C1025_Write_Str,w
 10255  1368  07AE               	addwf	EEPROM_24C1025_Write_Str@data,f
 10256                           
 10257                           ;EEPROM_24C1025.c: 263:             mem_add++;
 10258  1369  3001               	movlw	1
 10259  136A  07AA               	addwf	EEPROM_24C1025_Write_Str@mem_add,f
 10260  136B  3000               	movlw	0
 10261  136C  1803               	skipnc
 10262  136D  3001               	movlw	1
 10263  136E  07AB               	addwf	EEPROM_24C1025_Write_Str@mem_add+1,f
 10264  136F  3000               	movlw	0
 10265  1370  1803               	skipnc
 10266  1371  3001               	movlw	1
 10267  1372  07AC               	addwf	EEPROM_24C1025_Write_Str@mem_add+2,f
 10268  1373  3000               	movlw	0
 10269  1374  1803               	skipnc
 10270  1375  3001               	movlw	1
 10271  1376  07AD               	addwf	EEPROM_24C1025_Write_Str@mem_add+3,f
 10272  1377  2B00               	goto	l4531
 10273  1378                     l4533:
 10274                           
 10275                           ;EEPROM_24C1025.c: 266:      I2C_Master_Write(0);
 10276  1378  3000               	movlw	0
 10277  1379  00A3               	movwf	I2C_Master_Write@d
 10278  137A  00A4               	movwf	I2C_Master_Write@d+1
 10279  137B  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 10280                           
 10281                           ;EEPROM_24C1025.c: 267:      I2C_Master_Stop();
 10282  1380  160A  158A  2171  160A  118A  	fcall	_I2C_Master_Stop
 10283                           
 10284                           ;EEPROM_24C1025.c: 268:      my_delay_ms_WDT(5);
 10285  1385  3000               	movlw	0
 10286  1386  1283               	bcf	3,5	;RP0=0, select bank0
 10287  1387  00A3               	movwf	my_delay_ms_WDT@time+3
 10288  1388  3000               	movlw	0
 10289  1389  00A2               	movwf	my_delay_ms_WDT@time+2
 10290  138A  3000               	movlw	0
 10291  138B  00A1               	movwf	my_delay_ms_WDT@time+1
 10292  138C  3005               	movlw	5
 10293  138D  00A0               	movwf	my_delay_ms_WDT@time
 10294  138E  160A  158A  2562   	fcall	_my_delay_ms_WDT
 10295  1391  0008               	return
 10296  1392                     __end_of_EEPROM_24C1025_Write_Str:
 10297                           
 10298                           	psect	text40
 10299  19DA                     __ptext40:	
 10300 ;; *************** function _EEPROM_24C1025_Write_Byte *****************
 10301 ;; Defined at:
 10302 ;;		line 341 in file "EEPROM_24C1025.c"
 10303 ;; Parameters:    Size  Location     Type
 10304 ;;  chip_add        1    wreg     unsigned char 
 10305 ;;  mem_add         4   23[BANK0 ] unsigned long 
 10306 ;;  data            1   27[BANK0 ] unsigned char 
 10307 ;; Auto vars:     Size  Location     Type
 10308 ;;  chip_add        1   28[BANK0 ] unsigned char 
 10309 ;; Return value:  Size  Location     Type
 10310 ;;                  1    wreg      void 
 10311 ;; Registers used:
 10312 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10313 ;; Tracked objects:
 10314 ;;		On entry : 300/300
 10315 ;;		On exit  : 0/0
 10316 ;;		Unchanged: 0/0
 10317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10318 ;;      Params:         0       5       0       0       0
 10319 ;;      Locals:         0       1       0       0       0
 10320 ;;      Temps:          0       0       0       0       0
 10321 ;;      Totals:         0       6       0       0       0
 10322 ;;Total ram usage:        6 bytes
 10323 ;; Hardware stack levels used: 1
 10324 ;; Hardware stack levels required when called: 4
 10325 ;; This function calls:
 10326 ;;		_EEPROM_24C1025_Write_Buffer
 10327 ;; This function is called by:
 10328 ;;		_Decodify_Command
 10329 ;; This function uses a non-reentrant model
 10330 ;;
 10331                           
 10332                           
 10333                           ;psect for function _EEPROM_24C1025_Write_Byte
 10334  19DA                     _EEPROM_24C1025_Write_Byte:
 10335                           
 10336                           ;incstack = 0
 10337                           ; Regs used in _EEPROM_24C1025_Write_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
 10338                           ;EEPROM_24C1025_Write_Byte@chip_add stored from wreg
 10339  19DA  1283               	bcf	3,5	;RP0=0, select bank0
 10340  19DB  1303               	bcf	3,6	;RP1=0, select bank0
 10341  19DC  00BC               	movwf	EEPROM_24C1025_Write_Byte@chip_add
 10342                           
 10343                           ;EEPROM_24C1025.c: 342:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 1, &data);
 10344  19DD  083A               	movf	EEPROM_24C1025_Write_Byte@mem_add+3,w
 10345  19DE  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 10346  19DF  0839               	movf	EEPROM_24C1025_Write_Byte@mem_add+2,w
 10347  19E0  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 10348  19E1  0838               	movf	EEPROM_24C1025_Write_Byte@mem_add+1,w
 10349  19E2  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 10350  19E3  0837               	movf	EEPROM_24C1025_Write_Byte@mem_add,w
 10351  19E4  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 10352  19E5  01AE               	clrf	EEPROM_24C1025_Write_Buffer@sizedata
 10353  19E6  0AAE               	incf	EEPROM_24C1025_Write_Buffer@sizedata,f
 10354  19E7  303B               	movlw	(low (EEPROM_24C1025_Write_Byte@data| 0))& (0+255)
 10355  19E8  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 10356  19E9  3000               	movlw	0
 10357  19EA  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 10358  19EB  083C               	movf	EEPROM_24C1025_Write_Byte@chip_add,w
 10359  19EC  160A  118A  2392   	fcall	_EEPROM_24C1025_Write_Buffer
 10360  19EF  0008               	return
 10361  19F0                     __end_of_EEPROM_24C1025_Write_Byte:
 10362                           
 10363                           	psect	text41
 10364  1508                     __ptext41:	
 10365 ;; *************** function _EEPROM_24C1025_Read_Str *****************
 10366 ;; Defined at:
 10367 ;;		line 275 in file "EEPROM_24C1025.c"
 10368 ;; Parameters:    Size  Location     Type
 10369 ;;  chip_add        1    wreg     unsigned char 
 10370 ;;  mem_add         4    9[BANK0 ] unsigned long 
 10371 ;;  buffer          1   13[BANK0 ] PTR unsigned char 
 10372 ;;		 -> buffer(33), 
 10373 ;; Auto vars:     Size  Location     Type
 10374 ;;  chip_add        1   17[BANK0 ] unsigned char 
 10375 ;;  ctrl            1   19[BANK0 ] unsigned char 
 10376 ;;  range           1   18[BANK0 ] unsigned char 
 10377 ;;  cnt             1   16[BANK0 ] unsigned char 
 10378 ;; Return value:  Size  Location     Type
 10379 ;;                  1    wreg      void 
 10380 ;; Registers used:
 10381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10382 ;; Tracked objects:
 10383 ;;		On entry : 300/300
 10384 ;;		On exit  : 0/0
 10385 ;;		Unchanged: 0/0
 10386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10387 ;;      Params:         0       5       0       0       0
 10388 ;;      Locals:         0       4       0       0       0
 10389 ;;      Temps:          0       2       0       0       0
 10390 ;;      Totals:         0      11       0       0       0
 10391 ;;Total ram usage:       11 bytes
 10392 ;; Hardware stack levels used: 1
 10393 ;; Hardware stack levels required when called: 3
 10394 ;; This function calls:
 10395 ;;		_I2C_Master_Read
 10396 ;;		_I2C_Master_RepeatedStart
 10397 ;;		_I2C_Master_Start
 10398 ;;		_I2C_Master_Stop
 10399 ;;		_I2C_Master_Write
 10400 ;; This function is called by:
 10401 ;;		_Decodify_Command
 10402 ;; This function uses a non-reentrant model
 10403 ;;
 10404                           
 10405                           
 10406                           ;psect for function _EEPROM_24C1025_Read_Str
 10407  1508                     _EEPROM_24C1025_Read_Str:
 10408                           
 10409                           ;incstack = 0
 10410                           ; Regs used in _EEPROM_24C1025_Read_Str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10411                           ;EEPROM_24C1025_Read_Str@chip_add stored from wreg
 10412  1508  1283               	bcf	3,5	;RP0=0, select bank0
 10413  1509  1303               	bcf	3,6	;RP1=0, select bank0
 10414  150A  00B1               	movwf	EEPROM_24C1025_Read_Str@chip_add
 10415                           
 10416                           ;EEPROM_24C1025.c: 277:      unsigned char range=0;
 10417  150B  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10418                           
 10419                           ;EEPROM_24C1025.c: 278:      unsigned char ctrl;;EEPROM_24C1025.c: 280:      if(mem_add>
      +                          0x1FFFF) return;
 10420  150C  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10421  150D  1D03               	btfss	3,2
 10422  150E  0008               	return
 10423  150F  3002               	movlw	2
 10424  1510  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10425  1511  1D03               	skipz
 10426  1512  2D1B               	goto	u4283
 10427  1513  3000               	movlw	0
 10428  1514  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10429  1515  1D03               	skipz
 10430  1516  2D1B               	goto	u4283
 10431  1517  3000               	movlw	0
 10432  1518  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10433  1519  1D03               	skipz
 10434  151A  2D1B               	goto	u4283
 10435  151B                     u4283:
 10436  151B  1803               	btfsc	3,0
 10437  151C  0008               	return
 10438                           
 10439                           ;EEPROM_24C1025.c: 282:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10440  151D  1283               	bcf	3,5	;RP0=0, select bank0
 10441  151E  1303               	bcf	3,6	;RP1=0, select bank0
 10442  151F  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10443  1520  1D03               	btfss	3,2
 10444  1521  2D30               	goto	l4545
 10445  1522  3001               	movlw	1
 10446  1523  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10447  1524  1D03               	skipz
 10448  1525  2D2E               	goto	u4293
 10449  1526  3000               	movlw	0
 10450  1527  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10451  1528  1D03               	skipz
 10452  1529  2D2E               	goto	u4293
 10453  152A  3000               	movlw	0
 10454  152B  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10455  152C  1D03               	skipz
 10456  152D  2D2E               	goto	u4293
 10457  152E                     u4293:
 10458  152E  1C03               	btfss	3,0
 10459  152F  2D37               	goto	l4547
 10460  1530                     l4545:
 10461  1530  3008               	movlw	8
 10462  1531  1283               	bcf	3,5	;RP0=0, select bank0
 10463  1532  1303               	bcf	3,6	;RP1=0, select bank0
 10464  1533  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10465  1534  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10466  1535  00B2               	movwf	EEPROM_24C1025_Read_Str@range
 10467  1536  2D3A               	goto	l4549
 10468  1537                     l4547:
 10469  1537  1283               	bcf	3,5	;RP0=0, select bank0
 10470  1538  1303               	bcf	3,6	;RP1=0, select bank0
 10471  1539  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10472  153A                     l4549:
 10473                           
 10474                           ;EEPROM_24C1025.c: 283:      ctrl=chip_add;
 10475  153A  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10476  153B  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10477  153C  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10478  153D  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10479                           
 10480                           ;EEPROM_24C1025.c: 284:      ctrl<<=1;
 10481  153E  1003               	clrc
 10482  153F  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10483                           
 10484                           ;EEPROM_24C1025.c: 285:      ctrl |= 0xA0;
 10485  1540  30A0               	movlw	160
 10486  1541  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10487  1542  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10488  1543  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10489                           
 10490                           ;EEPROM_24C1025.c: 286:      ctrl |= 0b00000001;
 10491  1544  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10492                           
 10493                           ;EEPROM_24C1025.c: 287:      ctrl |= range;
 10494  1545  0832               	movf	EEPROM_24C1025_Read_Str@range,w
 10495  1546  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10496  1547  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10497  1548  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10498                           
 10499                           ;EEPROM_24C1025.c: 289:      I2C_Master_Start();
 10500  1549  160A  158A  21B4  160A  118A  	fcall	_I2C_Master_Start
 10501                           
 10502                           ;EEPROM_24C1025.c: 290:      I2C_Master_Write(ctrl & 0xFE);
 10503  154E  1283               	bcf	3,5	;RP0=0, select bank0
 10504  154F  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10505  1550  39FE               	andlw	254
 10506  1551  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10507  1552  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10508  1553  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10509  1554  00A3               	movwf	I2C_Master_Write@d
 10510  1555  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10511  1556  00A4               	movwf	I2C_Master_Write@d+1
 10512  1557  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 10513                           
 10514                           ;EEPROM_24C1025.c: 291:      I2C_Master_Write(((char *)&mem_add)[1]);
 10515  155C  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10516  155D  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10517  155E  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10518  155F  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10519  1560  00A3               	movwf	I2C_Master_Write@d
 10520  1561  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10521  1562  00A4               	movwf	I2C_Master_Write@d+1
 10522  1563  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 10523                           
 10524                           ;EEPROM_24C1025.c: 292:      I2C_Master_Write(((char *)&mem_add)[0]);
 10525  1568  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10526  1569  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10527  156A  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10528  156B  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10529  156C  00A3               	movwf	I2C_Master_Write@d
 10530  156D  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10531  156E  00A4               	movwf	I2C_Master_Write@d+1
 10532  156F  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 10533                           
 10534                           ;EEPROM_24C1025.c: 293:      I2C_Master_RepeatedStart();
 10535  1574  160A  158A  2199  160A  118A  	fcall	_I2C_Master_RepeatedStart
 10536                           
 10537                           ;EEPROM_24C1025.c: 294:      I2C_Master_Write(ctrl);
 10538  1579  1283               	bcf	3,5	;RP0=0, select bank0
 10539  157A  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10540  157B  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10541  157C  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10542  157D  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10543  157E  00A3               	movwf	I2C_Master_Write@d
 10544  157F  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10545  1580  00A4               	movwf	I2C_Master_Write@d+1
 10546  1581  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 10547                           
 10548                           ;EEPROM_24C1025.c: 296:      cnt=0;
 10549  1586  01B0               	clrf	EEPROM_24C1025_Read_Str@cnt
 10550  1587                     l4571:
 10551                           
 10552                           ;EEPROM_24C1025.c: 298:            if(mem_add>0x1FFFF) break;
 10553  1587  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10554  1588  1D03               	btfss	3,2
 10555  1589  2E69               	goto	l4627
 10556  158A  3002               	movlw	2
 10557  158B  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10558  158C  1D03               	skipz
 10559  158D  2D96               	goto	u4303
 10560  158E  3000               	movlw	0
 10561  158F  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10562  1590  1D03               	skipz
 10563  1591  2D96               	goto	u4303
 10564  1592  3000               	movlw	0
 10565  1593  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10566  1594  1D03               	skipz
 10567  1595  2D96               	goto	u4303
 10568  1596                     u4303:
 10569  1596  1803               	btfsc	3,0
 10570  1597  2E69               	goto	l4627
 10571                           
 10572                           ;EEPROM_24C1025.c: 299:            if((mem_add+1)%128==0)
 10573  1598  1283               	bcf	3,5	;RP0=0, select bank0
 10574  1599  1303               	bcf	3,6	;RP1=0, select bank0
 10575  159A  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10576  159B  3E01               	addlw	1
 10577  159C  397F               	andlw	127
 10578  159D  1D03               	btfss	3,2
 10579  159E  2E39               	goto	l4615
 10580                           
 10581                           ;EEPROM_24C1025.c: 300:              {;EEPROM_24C1025.c: 301:              (*buffer)=I2C
      +                          _Master_Read(0);
 10582  159F  3000               	movlw	0
 10583  15A0  00A3               	movwf	I2C_Master_Read@a
 10584  15A1  00A4               	movwf	I2C_Master_Read@a+1
 10585  15A2  160A  158A  24C0  160A  118A  	fcall	_I2C_Master_Read
 10586  15A7  0823               	movf	?_I2C_Master_Read,w
 10587  15A8  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10588  15A9  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10589  15AA  0084               	movwf	4
 10590  15AB  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10591  15AC  1783               	bsf	3,7	;select IRP bank2
 10592  15AD  0080               	movwf	0
 10593                           
 10594                           ;EEPROM_24C1025.c: 302:              I2C_Master_Stop();
 10595  15AE  160A  158A  2171  160A  118A  	fcall	_I2C_Master_Stop
 10596                           
 10597                           ;EEPROM_24C1025.c: 304:              _delay((unsigned long)((5)*(8000000/4000.0)));
 10598  15B3  300D               	movlw	13
 10599  15B4  1283               	bcf	3,5	;RP0=0, select bank0
 10600  15B5  1303               	bcf	3,6	;RP1=0, select bank0
 10601  15B6  00AF               	movwf	??_EEPROM_24C1025_Read_Str+1
 10602  15B7  30FB               	movlw	251
 10603  15B8  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10604  15B9                     u5577:
 10605  15B9  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10606  15BA  2DB9               	goto	u5577
 10607  15BB  0BAF               	decfsz	??_EEPROM_24C1025_Read_Str+1,f
 10608  15BC  2DB9               	goto	u5577
 10609                           
 10610                           ;EEPROM_24C1025.c: 305:              mem_add++;
 10611  15BD  3001               	movlw	1
 10612  15BE  1283               	bcf	3,5	;RP0=0, select bank0
 10613  15BF  1303               	bcf	3,6	;RP1=0, select bank0
 10614  15C0  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10615  15C1  3000               	movlw	0
 10616  15C2  1803               	skipnc
 10617  15C3  3001               	movlw	1
 10618  15C4  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10619  15C5  3000               	movlw	0
 10620  15C6  1803               	skipnc
 10621  15C7  3001               	movlw	1
 10622  15C8  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10623  15C9  3000               	movlw	0
 10624  15CA  1803               	skipnc
 10625  15CB  3001               	movlw	1
 10626  15CC  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10627                           
 10628                           ;EEPROM_24C1025.c: 306:              buffer++;
 10629  15CD  3001               	movlw	1
 10630  15CE  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10631  15CF  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10632  15D0  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 10633                           
 10634                           ;EEPROM_24C1025.c: 307:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 10635  15D1  082C               	movf	EEPROM_24C1025_Read_Str@mem_add+3,w
 10636  15D2  1D03               	btfss	3,2
 10637  15D3  2DE2               	goto	l4589
 10638  15D4  3001               	movlw	1
 10639  15D5  022B               	subwf	EEPROM_24C1025_Read_Str@mem_add+2,w
 10640  15D6  1D03               	skipz
 10641  15D7  2DE0               	goto	u4323
 10642  15D8  3000               	movlw	0
 10643  15D9  022A               	subwf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10644  15DA  1D03               	skipz
 10645  15DB  2DE0               	goto	u4323
 10646  15DC  3000               	movlw	0
 10647  15DD  0229               	subwf	EEPROM_24C1025_Read_Str@mem_add,w
 10648  15DE  1D03               	skipz
 10649  15DF  2DE0               	goto	u4323
 10650  15E0                     u4323:
 10651  15E0  1C03               	btfss	3,0
 10652  15E1  2DE9               	goto	l4591
 10653  15E2                     l4589:
 10654  15E2  3008               	movlw	8
 10655  15E3  1283               	bcf	3,5	;RP0=0, select bank0
 10656  15E4  1303               	bcf	3,6	;RP1=0, select bank0
 10657  15E5  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10658  15E6  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10659  15E7  00B2               	movwf	EEPROM_24C1025_Read_Str@range
 10660  15E8  2DEC               	goto	l4593
 10661  15E9                     l4591:
 10662  15E9  1283               	bcf	3,5	;RP0=0, select bank0
 10663  15EA  1303               	bcf	3,6	;RP1=0, select bank0
 10664  15EB  01B2               	clrf	EEPROM_24C1025_Read_Str@range
 10665  15EC                     l4593:
 10666                           
 10667                           ;EEPROM_24C1025.c: 308:              ctrl=chip_add;
 10668  15EC  0831               	movf	EEPROM_24C1025_Read_Str@chip_add,w
 10669  15ED  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10670  15EE  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10671  15EF  00B3               	movwf	EEPROM_24C1025_Read_Str@ctrl
 10672                           
 10673                           ;EEPROM_24C1025.c: 309:              ctrl<<=1;
 10674  15F0  1003               	clrc
 10675  15F1  0DB3               	rlf	EEPROM_24C1025_Read_Str@ctrl,f
 10676                           
 10677                           ;EEPROM_24C1025.c: 310:              ctrl |= 0xA0;
 10678  15F2  30A0               	movlw	160
 10679  15F3  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10680  15F4  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10681  15F5  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10682                           
 10683                           ;EEPROM_24C1025.c: 311:              ctrl |= 0b00000001;
 10684  15F6  1433               	bsf	EEPROM_24C1025_Read_Str@ctrl,0
 10685                           
 10686                           ;EEPROM_24C1025.c: 312:              ctrl |= range;
 10687  15F7  0832               	movf	EEPROM_24C1025_Read_Str@range,w
 10688  15F8  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10689  15F9  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10690  15FA  04B3               	iorwf	EEPROM_24C1025_Read_Str@ctrl,f
 10691                           
 10692                           ;EEPROM_24C1025.c: 314:              I2C_Master_Start();
 10693  15FB  160A  158A  21B4  160A  118A  	fcall	_I2C_Master_Start
 10694                           
 10695                           ;EEPROM_24C1025.c: 315:              I2C_Master_Write(ctrl & 0xFE);
 10696  1600  1283               	bcf	3,5	;RP0=0, select bank0
 10697  1601  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10698  1602  39FE               	andlw	254
 10699  1603  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10700  1604  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10701  1605  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10702  1606  00A3               	movwf	I2C_Master_Write@d
 10703  1607  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10704  1608  00A4               	movwf	I2C_Master_Write@d+1
 10705  1609  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 10706                           
 10707                           ;EEPROM_24C1025.c: 316:              I2C_Master_Write(((char *)&mem_add)[1]);
 10708  160E  082A               	movf	EEPROM_24C1025_Read_Str@mem_add+1,w
 10709  160F  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10710  1610  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10711  1611  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10712  1612  00A3               	movwf	I2C_Master_Write@d
 10713  1613  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10714  1614  00A4               	movwf	I2C_Master_Write@d+1
 10715  1615  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 10716                           
 10717                           ;EEPROM_24C1025.c: 317:              I2C_Master_Write(((char *)&mem_add)[0]);
 10718  161A  0829               	movf	EEPROM_24C1025_Read_Str@mem_add,w
 10719  161B  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10720  161C  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10721  161D  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10722  161E  00A3               	movwf	I2C_Master_Write@d
 10723  161F  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10724  1620  00A4               	movwf	I2C_Master_Write@d+1
 10725  1621  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 10726                           
 10727                           ;EEPROM_24C1025.c: 318:              I2C_Master_RepeatedStart();
 10728  1626  160A  158A  2199  160A  118A  	fcall	_I2C_Master_RepeatedStart
 10729                           
 10730                           ;EEPROM_24C1025.c: 319:              I2C_Master_Write(ctrl);
 10731  162B  1283               	bcf	3,5	;RP0=0, select bank0
 10732  162C  0833               	movf	EEPROM_24C1025_Read_Str@ctrl,w
 10733  162D  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10734  162E  01AF               	clrf	??_EEPROM_24C1025_Read_Str+1
 10735  162F  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10736  1630  00A3               	movwf	I2C_Master_Write@d
 10737  1631  082F               	movf	??_EEPROM_24C1025_Read_Str+1,w
 10738  1632  00A4               	movwf	I2C_Master_Write@d+1
 10739  1633  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 10740                           
 10741                           ;EEPROM_24C1025.c: 320:              }
 10742  1638  2E60               	goto	l4625
 10743  1639                     l4615:
 10744                           
 10745                           ;EEPROM_24C1025.c: 322:              {;EEPROM_24C1025.c: 323:              (*buffer)=I2C
      +                          _Master_Read(1);
 10746  1639  3001               	movlw	1
 10747  163A  00A3               	movwf	I2C_Master_Read@a
 10748  163B  3000               	movlw	0
 10749  163C  00A4               	movwf	I2C_Master_Read@a+1
 10750  163D  160A  158A  24C0  160A  118A  	fcall	_I2C_Master_Read
 10751  1642  0823               	movf	?_I2C_Master_Read,w
 10752  1643  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10753  1644  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10754  1645  0084               	movwf	4
 10755  1646  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10756  1647  1783               	bsf	3,7	;select IRP bank2
 10757  1648  0080               	movwf	0
 10758                           
 10759                           ;EEPROM_24C1025.c: 324:              if((*buffer)==0)break;
 10760  1649  082D               	movf	EEPROM_24C1025_Read_Str@buffer,w
 10761  164A  0084               	movwf	4
 10762  164B  0800               	movf	0,w
 10763  164C  1903               	btfsc	3,2
 10764  164D  2E69               	goto	l4627
 10765                           
 10766                           ;EEPROM_24C1025.c: 325:              buffer++;
 10767  164E  3001               	movlw	1
 10768  164F  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10769  1650  082E               	movf	??_EEPROM_24C1025_Read_Str,w
 10770  1651  07AD               	addwf	EEPROM_24C1025_Read_Str@buffer,f
 10771                           
 10772                           ;EEPROM_24C1025.c: 326:              mem_add++;
 10773  1652  3001               	movlw	1
 10774  1653  07A9               	addwf	EEPROM_24C1025_Read_Str@mem_add,f
 10775  1654  3000               	movlw	0
 10776  1655  1803               	skipnc
 10777  1656  3001               	movlw	1
 10778  1657  07AA               	addwf	EEPROM_24C1025_Read_Str@mem_add+1,f
 10779  1658  3000               	movlw	0
 10780  1659  1803               	skipnc
 10781  165A  3001               	movlw	1
 10782  165B  07AB               	addwf	EEPROM_24C1025_Read_Str@mem_add+2,f
 10783  165C  3000               	movlw	0
 10784  165D  1803               	skipnc
 10785  165E  3001               	movlw	1
 10786  165F  07AC               	addwf	EEPROM_24C1025_Read_Str@mem_add+3,f
 10787  1660                     l4625:
 10788                           
 10789                           ;EEPROM_24C1025.c: 328:        }while((cnt++)<64);
 10790  1660  3001               	movlw	1
 10791  1661  07B0               	addwf	EEPROM_24C1025_Read_Str@cnt,f
 10792  1662  30FF               	movlw	-1
 10793  1663  0730               	addwf	EEPROM_24C1025_Read_Str@cnt,w
 10794  1664  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10795  1665  3040               	movlw	64
 10796  1666  022E               	subwf	??_EEPROM_24C1025_Read_Str,w
 10797  1667  1C03               	skipc
 10798  1668  2D87               	goto	l4571
 10799  1669                     l4627:
 10800                           
 10801                           ;EEPROM_24C1025.c: 330:      I2C_Master_Read(0);
 10802  1669  3000               	movlw	0
 10803  166A  1283               	bcf	3,5	;RP0=0, select bank0
 10804  166B  1303               	bcf	3,6	;RP1=0, select bank0
 10805  166C  00A3               	movwf	I2C_Master_Read@a
 10806  166D  00A4               	movwf	I2C_Master_Read@a+1
 10807  166E  160A  158A  24C0  160A  118A  	fcall	_I2C_Master_Read
 10808                           
 10809                           ;EEPROM_24C1025.c: 331:      I2C_Master_Stop();
 10810  1673  160A  158A  2171  160A  118A  	fcall	_I2C_Master_Stop
 10811                           
 10812                           ;EEPROM_24C1025.c: 332:      _delay((unsigned long)((650)*(8000000/4000000.0)));
 10813  1678  30B9               	movlw	185
 10814  1679  1283               	bcf	3,5	;RP0=0, select bank0
 10815  167A  1303               	bcf	3,6	;RP1=0, select bank0
 10816  167B  00AE               	movwf	??_EEPROM_24C1025_Read_Str
 10817  167C                     u5587:
 10818  167C  2E7D               	nop2
 10819  167D  2E7E               	nop2
 10820  167E  0BAE               	decfsz	??_EEPROM_24C1025_Read_Str,f
 10821  167F  2E7C               	goto	u5587
 10822  1680  2E81               	nop2
 10823  1681  0008               	return
 10824  1682                     __end_of_EEPROM_24C1025_Read_Str:
 10825                           
 10826                           	psect	text42
 10827  1B32                     __ptext42:	
 10828 ;; *************** function _EEPROM_24C1025_Read_Int *****************
 10829 ;; Defined at:
 10830 ;;		line 360 in file "EEPROM_24C1025.c"
 10831 ;; Parameters:    Size  Location     Type
 10832 ;;  chip_add        1    wreg     unsigned char 
 10833 ;;  mem_add         4   22[BANK0 ] unsigned long 
 10834 ;; Auto vars:     Size  Location     Type
 10835 ;;  chip_add        1   28[BANK0 ] unsigned char 
 10836 ;;  data            2   29[BANK0 ] unsigned char [2]
 10837 ;; Return value:  Size  Location     Type
 10838 ;;                  2   22[BANK0 ] unsigned int 
 10839 ;; Registers used:
 10840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10841 ;; Tracked objects:
 10842 ;;		On entry : 300/300
 10843 ;;		On exit  : 300/0
 10844 ;;		Unchanged: 0/0
 10845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10846 ;;      Params:         0       4       0       0       0
 10847 ;;      Locals:         0       3       0       0       0
 10848 ;;      Temps:          0       2       0       0       0
 10849 ;;      Totals:         0       9       0       0       0
 10850 ;;Total ram usage:        9 bytes
 10851 ;; Hardware stack levels used: 1
 10852 ;; Hardware stack levels required when called: 4
 10853 ;; This function calls:
 10854 ;;		_EEPROM_24C1025_Read_Buffer
 10855 ;; This function is called by:
 10856 ;;		_Decodify_Command
 10857 ;; This function uses a non-reentrant model
 10858 ;;
 10859                           
 10860                           
 10861                           ;psect for function _EEPROM_24C1025_Read_Int
 10862  1B32                     _EEPROM_24C1025_Read_Int:
 10863                           
 10864                           ;incstack = 0
 10865                           ; Regs used in _EEPROM_24C1025_Read_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 10866                           ;EEPROM_24C1025_Read_Int@chip_add stored from wreg
 10867  1B32  1283               	bcf	3,5	;RP0=0, select bank0
 10868  1B33  1303               	bcf	3,6	;RP1=0, select bank0
 10869  1B34  00BC               	movwf	EEPROM_24C1025_Read_Int@chip_add
 10870                           
 10871                           ;EEPROM_24C1025.c: 361:     char data[2];;EEPROM_24C1025.c: 362:     EEPROM_24C1025_Read
      +                          _Buffer(chip_add, mem_add, 2, data);
 10872  1B35  0839               	movf	EEPROM_24C1025_Read_Int@mem_add+3,w
 10873  1B36  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 10874  1B37  0838               	movf	EEPROM_24C1025_Read_Int@mem_add+2,w
 10875  1B38  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 10876  1B39  0837               	movf	EEPROM_24C1025_Read_Int@mem_add+1,w
 10877  1B3A  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 10878  1B3B  0836               	movf	EEPROM_24C1025_Read_Int@mem_add,w
 10879  1B3C  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 10880  1B3D  3002               	movlw	2
 10881  1B3E  00BA               	movwf	??_EEPROM_24C1025_Read_Int
 10882  1B3F  083A               	movf	??_EEPROM_24C1025_Read_Int,w
 10883  1B40  00AE               	movwf	EEPROM_24C1025_Read_Buffer@sizedata
 10884  1B41  303D               	movlw	(low (EEPROM_24C1025_Read_Int@data| 0))& (0+255)
 10885  1B42  00BB               	movwf	??_EEPROM_24C1025_Read_Int+1
 10886  1B43  083B               	movf	??_EEPROM_24C1025_Read_Int+1,w
 10887  1B44  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 10888  1B45  083C               	movf	EEPROM_24C1025_Read_Int@chip_add,w
 10889  1B46  120A  118A  2678   	fcall	_EEPROM_24C1025_Read_Buffer
 10890                           
 10891                           ;EEPROM_24C1025.c: 363:     return (data[0]<<8)+data[1];
 10892  1B49  1283               	bcf	3,5	;RP0=0, select bank0
 10893  1B4A  1303               	bcf	3,6	;RP1=0, select bank0
 10894  1B4B  083D               	movf	EEPROM_24C1025_Read_Int@data,w
 10895  1B4C  00BA               	movwf	??_EEPROM_24C1025_Read_Int
 10896  1B4D  01BB               	clrf	??_EEPROM_24C1025_Read_Int+1
 10897  1B4E  083A               	movf	??_EEPROM_24C1025_Read_Int,w
 10898  1B4F  00BB               	movwf	??_EEPROM_24C1025_Read_Int+1
 10899  1B50  01BA               	clrf	??_EEPROM_24C1025_Read_Int
 10900  1B51  083E               	movf	EEPROM_24C1025_Read_Int@data+1,w
 10901  1B52  073A               	addwf	??_EEPROM_24C1025_Read_Int,w
 10902  1B53  00B6               	movwf	?_EEPROM_24C1025_Read_Int
 10903  1B54  3000               	movlw	0
 10904  1B55  1803               	skipnc
 10905  1B56  3001               	movlw	1
 10906  1B57  073B               	addwf	??_EEPROM_24C1025_Read_Int+1,w
 10907  1B58  00B7               	movwf	?_EEPROM_24C1025_Read_Int+1
 10908  1B59  0008               	return
 10909  1B5A                     __end_of_EEPROM_24C1025_Read_Int:
 10910                           
 10911                           	psect	text43
 10912  1A08                     __ptext43:	
 10913 ;; *************** function _EEPROM_24C1025_Read_Byte *****************
 10914 ;; Defined at:
 10915 ;;		line 346 in file "EEPROM_24C1025.c"
 10916 ;; Parameters:    Size  Location     Type
 10917 ;;  chip_add        1    wreg     unsigned char 
 10918 ;;  mem_add         4   22[BANK0 ] unsigned long 
 10919 ;; Auto vars:     Size  Location     Type
 10920 ;;  chip_add        1   27[BANK0 ] unsigned char 
 10921 ;;  data            1   28[BANK0 ] unsigned char 
 10922 ;; Return value:  Size  Location     Type
 10923 ;;                  1    wreg      unsigned char 
 10924 ;; Registers used:
 10925 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10926 ;; Tracked objects:
 10927 ;;		On entry : 300/300
 10928 ;;		On exit  : 300/0
 10929 ;;		Unchanged: 0/0
 10930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10931 ;;      Params:         0       4       0       0       0
 10932 ;;      Locals:         0       2       0       0       0
 10933 ;;      Temps:          0       1       0       0       0
 10934 ;;      Totals:         0       7       0       0       0
 10935 ;;Total ram usage:        7 bytes
 10936 ;; Hardware stack levels used: 1
 10937 ;; Hardware stack levels required when called: 4
 10938 ;; This function calls:
 10939 ;;		_EEPROM_24C1025_Read_Buffer
 10940 ;; This function is called by:
 10941 ;;		_Decodify_Command
 10942 ;; This function uses a non-reentrant model
 10943 ;;
 10944                           
 10945                           
 10946                           ;psect for function _EEPROM_24C1025_Read_Byte
 10947  1A08                     _EEPROM_24C1025_Read_Byte:
 10948                           
 10949                           ;incstack = 0
 10950                           ; Regs used in _EEPROM_24C1025_Read_Byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 10951                           ;EEPROM_24C1025_Read_Byte@chip_add stored from wreg
 10952  1A08  1283               	bcf	3,5	;RP0=0, select bank0
 10953  1A09  1303               	bcf	3,6	;RP1=0, select bank0
 10954  1A0A  00BB               	movwf	EEPROM_24C1025_Read_Byte@chip_add
 10955                           
 10956                           ;EEPROM_24C1025.c: 347:     char data;;EEPROM_24C1025.c: 348:     EEPROM_24C1025_Read_Bu
      +                          ffer(chip_add, mem_add, 1, &data);
 10957  1A0B  0839               	movf	EEPROM_24C1025_Read_Byte@mem_add+3,w
 10958  1A0C  00AD               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+3
 10959  1A0D  0838               	movf	EEPROM_24C1025_Read_Byte@mem_add+2,w
 10960  1A0E  00AC               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+2
 10961  1A0F  0837               	movf	EEPROM_24C1025_Read_Byte@mem_add+1,w
 10962  1A10  00AB               	movwf	EEPROM_24C1025_Read_Buffer@mem_add+1
 10963  1A11  0836               	movf	EEPROM_24C1025_Read_Byte@mem_add,w
 10964  1A12  00AA               	movwf	EEPROM_24C1025_Read_Buffer@mem_add
 10965  1A13  01AE               	clrf	EEPROM_24C1025_Read_Buffer@sizedata
 10966  1A14  0AAE               	incf	EEPROM_24C1025_Read_Buffer@sizedata,f
 10967  1A15  303C               	movlw	(low (EEPROM_24C1025_Read_Byte@data| 0))& (0+255)
 10968  1A16  00BA               	movwf	??_EEPROM_24C1025_Read_Byte
 10969  1A17  083A               	movf	??_EEPROM_24C1025_Read_Byte,w
 10970  1A18  00AF               	movwf	EEPROM_24C1025_Read_Buffer@data
 10971  1A19  083B               	movf	EEPROM_24C1025_Read_Byte@chip_add,w
 10972  1A1A  120A  118A  2678   	fcall	_EEPROM_24C1025_Read_Buffer
 10973                           
 10974                           ;EEPROM_24C1025.c: 349:     return data;
 10975  1A1D  1283               	bcf	3,5	;RP0=0, select bank0
 10976  1A1E  1303               	bcf	3,6	;RP1=0, select bank0
 10977  1A1F  083C               	movf	EEPROM_24C1025_Read_Byte@data,w
 10978  1A20  0008               	return
 10979  1A21                     __end_of_EEPROM_24C1025_Read_Byte:
 10980                           
 10981                           	psect	text44
 10982  0678                     __ptext44:	
 10983 ;; *************** function _EEPROM_24C1025_Read_Buffer *****************
 10984 ;; Defined at:
 10985 ;;		line 77 in file "EEPROM_24C1025.c"
 10986 ;; Parameters:    Size  Location     Type
 10987 ;;  chip_add        1    wreg     unsigned char 
 10988 ;;  mem_add         4   10[BANK0 ] unsigned long 
 10989 ;;  sizedata        1   14[BANK0 ] unsigned char 
 10990 ;;  data            1   15[BANK0 ] PTR unsigned char 
 10991 ;;		 -> EEPROM_24C1025_Read_Int@data(2), EEPROM_24C1025_Read_Byte@data(1), 
 10992 ;; Auto vars:     Size  Location     Type
 10993 ;;  chip_add        1   19[BANK0 ] unsigned char 
 10994 ;;  cnt             1   18[BANK0 ] unsigned char 
 10995 ;;  ctrl            1   21[BANK0 ] unsigned char 
 10996 ;;  range           1   20[BANK0 ] unsigned char 
 10997 ;;  cnt             1    0        unsigned char 
 10998 ;; Return value:  Size  Location     Type
 10999 ;;                  1    wreg      void 
 11000 ;; Registers used:
 11001 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11002 ;; Tracked objects:
 11003 ;;		On entry : 300/0
 11004 ;;		On exit  : 0/0
 11005 ;;		Unchanged: 0/0
 11006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11007 ;;      Params:         0       6       0       0       0
 11008 ;;      Locals:         0       4       0       0       0
 11009 ;;      Temps:          0       2       0       0       0
 11010 ;;      Totals:         0      12       0       0       0
 11011 ;;Total ram usage:       12 bytes
 11012 ;; Hardware stack levels used: 1
 11013 ;; Hardware stack levels required when called: 3
 11014 ;; This function calls:
 11015 ;;		_I2C_Master_Read
 11016 ;;		_I2C_Master_RepeatedStart
 11017 ;;		_I2C_Master_Start
 11018 ;;		_I2C_Master_Stop
 11019 ;;		_I2C_Master_Write
 11020 ;;		_my_delay_ms_WDT
 11021 ;; This function is called by:
 11022 ;;		_EEPROM_24C1025_Read_Byte
 11023 ;;		_EEPROM_24C1025_Read_Int
 11024 ;; This function uses a non-reentrant model
 11025 ;;
 11026                           
 11027                           
 11028                           ;psect for function _EEPROM_24C1025_Read_Buffer
 11029  0678                     _EEPROM_24C1025_Read_Buffer:
 11030                           
 11031                           ;incstack = 0
 11032                           ; Regs used in _EEPROM_24C1025_Read_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
 11033                           ;EEPROM_24C1025_Read_Buffer@chip_add stored from wreg
 11034  0678  00B3               	movwf	EEPROM_24C1025_Read_Buffer@chip_add
 11035                           
 11036                           ;EEPROM_24C1025.c: 83:      unsigned char range=0;
 11037  0679  01B4               	clrf	EEPROM_24C1025_Read_Buffer@range
 11038                           
 11039                           ;EEPROM_24C1025.c: 84:      unsigned char ctrl;;EEPROM_24C1025.c: 86:      Delay_Led_Mem
      +                          ory=20;
 11040  067A  3014               	movlw	20
 11041  067B  1683               	bsf	3,5	;RP0=1, select bank1
 11042  067C  00DD               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 11043  067D  3000               	movlw	0
 11044  067E  00DE               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 11045                           
 11046                           ;EEPROM_24C1025.c: 88:      if(mem_add>0x1FFFF) return;
 11047  067F  1283               	bcf	3,5	;RP0=0, select bank0
 11048  0680  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11049  0681  1D03               	btfss	3,2
 11050  0682  0008               	return
 11051  0683  3002               	movlw	2
 11052  0684  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11053  0685  1D03               	skipz
 11054  0686  2E8F               	goto	u2873
 11055  0687  3000               	movlw	0
 11056  0688  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11057  0689  1D03               	skipz
 11058  068A  2E8F               	goto	u2873
 11059  068B  3000               	movlw	0
 11060  068C  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11061  068D  1D03               	skipz
 11062  068E  2E8F               	goto	u2873
 11063  068F                     u2873:
 11064  068F  1803               	btfsc	3,0
 11065  0690  0008               	return
 11066                           
 11067                           ;EEPROM_24C1025.c: 90:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11068  0691  1283               	bcf	3,5	;RP0=0, select bank0
 11069  0692  1303               	bcf	3,6	;RP1=0, select bank0
 11070  0693  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11071  0694  1D03               	btfss	3,2
 11072  0695  2EA4               	goto	l3739
 11073  0696  3001               	movlw	1
 11074  0697  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11075  0698  1D03               	skipz
 11076  0699  2EA2               	goto	u2883
 11077  069A  3000               	movlw	0
 11078  069B  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11079  069C  1D03               	skipz
 11080  069D  2EA2               	goto	u2883
 11081  069E  3000               	movlw	0
 11082  069F  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11083  06A0  1D03               	skipz
 11084  06A1  2EA2               	goto	u2883
 11085  06A2                     u2883:
 11086  06A2  1C03               	btfss	3,0
 11087  06A3  2EAB               	goto	l3741
 11088  06A4                     l3739:
 11089  06A4  3008               	movlw	8
 11090  06A5  1283               	bcf	3,5	;RP0=0, select bank0
 11091  06A6  1303               	bcf	3,6	;RP1=0, select bank0
 11092  06A7  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11093  06A8  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11094  06A9  00B4               	movwf	EEPROM_24C1025_Read_Buffer@range
 11095  06AA  2EAE               	goto	l3743
 11096  06AB                     l3741:
 11097  06AB  1283               	bcf	3,5	;RP0=0, select bank0
 11098  06AC  1303               	bcf	3,6	;RP1=0, select bank0
 11099  06AD  01B4               	clrf	EEPROM_24C1025_Read_Buffer@range
 11100  06AE                     l3743:
 11101                           
 11102                           ;EEPROM_24C1025.c: 91:      ctrl=chip_add;
 11103  06AE  0833               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11104  06AF  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11105  06B0  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11106  06B1  00B5               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11107                           
 11108                           ;EEPROM_24C1025.c: 92:      ctrl<<=1;
 11109  06B2  1003               	clrc
 11110  06B3  0DB5               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11111                           
 11112                           ;EEPROM_24C1025.c: 93:      ctrl |= 0xA0;
 11113  06B4  30A0               	movlw	160
 11114  06B5  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11115  06B6  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11116  06B7  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11117                           
 11118                           ;EEPROM_24C1025.c: 94:      ctrl |= 0b00000001;
 11119  06B8  1435               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11120                           
 11121                           ;EEPROM_24C1025.c: 95:      ctrl |= range;
 11122  06B9  0834               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11123  06BA  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11124  06BB  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11125  06BC  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11126                           
 11127                           ;EEPROM_24C1025.c: 97:      I2C_Master_Start();
 11128  06BD  160A  158A  21B4  120A  118A  	fcall	_I2C_Master_Start
 11129                           
 11130                           ;EEPROM_24C1025.c: 98:      I2C_Master_Write(ctrl & 0xFE);
 11131  06C2  1283               	bcf	3,5	;RP0=0, select bank0
 11132  06C3  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11133  06C4  39FE               	andlw	254
 11134  06C5  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11135  06C6  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11136  06C7  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11137  06C8  00A3               	movwf	I2C_Master_Write@d
 11138  06C9  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11139  06CA  00A4               	movwf	I2C_Master_Write@d+1
 11140  06CB  160A  158A  218E  120A  118A  	fcall	_I2C_Master_Write
 11141                           
 11142                           ;EEPROM_24C1025.c: 99:      I2C_Master_Write(((char *)&mem_add)[1]);
 11143  06D0  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11144  06D1  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11145  06D2  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11146  06D3  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11147  06D4  00A3               	movwf	I2C_Master_Write@d
 11148  06D5  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11149  06D6  00A4               	movwf	I2C_Master_Write@d+1
 11150  06D7  160A  158A  218E  120A  118A  	fcall	_I2C_Master_Write
 11151                           
 11152                           ;EEPROM_24C1025.c: 100:      I2C_Master_Write(((char *)&mem_add)[0]);
 11153  06DC  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11154  06DD  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11155  06DE  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11156  06DF  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11157  06E0  00A3               	movwf	I2C_Master_Write@d
 11158  06E1  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11159  06E2  00A4               	movwf	I2C_Master_Write@d+1
 11160  06E3  160A  158A  218E  120A  118A  	fcall	_I2C_Master_Write
 11161                           
 11162                           ;EEPROM_24C1025.c: 101:      I2C_Master_RepeatedStart();
 11163  06E8  160A  158A  2199  120A  118A  	fcall	_I2C_Master_RepeatedStart
 11164                           
 11165                           ;EEPROM_24C1025.c: 102:      I2C_Master_Write(ctrl);
 11166  06ED  1283               	bcf	3,5	;RP0=0, select bank0
 11167  06EE  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11168  06EF  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11169  06F0  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11170  06F1  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11171  06F2  00A3               	movwf	I2C_Master_Write@d
 11172  06F3  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11173  06F4  00A4               	movwf	I2C_Master_Write@d+1
 11174  06F5  160A  158A  218E  120A  118A  	fcall	_I2C_Master_Write
 11175                           
 11176                           ;EEPROM_24C1025.c: 104:      for(char cnt=0;cnt<(sizedata);cnt++)
 11177  06FA  01B2               	clrf	EEPROM_24C1025_Read_Buffer@cnt_108
 11178  06FB                     l3817:
 11179  06FB  082E               	movf	EEPROM_24C1025_Read_Buffer@sizedata,w
 11180  06FC  0232               	subwf	EEPROM_24C1025_Read_Buffer@cnt_108,w
 11181  06FD  1803               	btfsc	3,0
 11182  06FE  2FDD               	goto	l3819
 11183  06FF  0064               	clrwdt	;# 
 11184                           
 11185                           ;EEPROM_24C1025.c: 107:            if(mem_add>0x1FFFF) break;
 11186  0700  1283               	bcf	3,5	;RP0=0, select bank0
 11187  0701  1303               	bcf	3,6	;RP1=0, select bank0
 11188  0702  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11189  0703  1D03               	btfss	3,2
 11190  0704  2FDD               	goto	l3819
 11191  0705  3002               	movlw	2
 11192  0706  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11193  0707  1D03               	skipz
 11194  0708  2F11               	goto	u2893
 11195  0709  3000               	movlw	0
 11196  070A  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11197  070B  1D03               	skipz
 11198  070C  2F11               	goto	u2893
 11199  070D  3000               	movlw	0
 11200  070E  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11201  070F  1D03               	skipz
 11202  0710  2F11               	goto	u2893
 11203  0711                     u2893:
 11204  0711  1803               	btfsc	3,0
 11205  0712  2FDD               	goto	l3819
 11206                           
 11207                           ;EEPROM_24C1025.c: 108:            if((mem_add+1)%128==0)
 11208  0713  1283               	bcf	3,5	;RP0=0, select bank0
 11209  0714  1303               	bcf	3,6	;RP1=0, select bank0
 11210  0715  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11211  0716  3E01               	addlw	1
 11212  0717  397F               	andlw	127
 11213  0718  1D03               	btfss	3,2
 11214  0719  2FB6               	goto	l3809
 11215                           
 11216                           ;EEPROM_24C1025.c: 109:              {;EEPROM_24C1025.c: 110:              (*data)=I2C_M
      +                          aster_Read(0);
 11217  071A  3000               	movlw	0
 11218  071B  00A3               	movwf	I2C_Master_Read@a
 11219  071C  00A4               	movwf	I2C_Master_Read@a+1
 11220  071D  160A  158A  24C0  120A  118A  	fcall	_I2C_Master_Read
 11221  0722  0823               	movf	?_I2C_Master_Read,w
 11222  0723  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11223  0724  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 11224  0725  0084               	movwf	4
 11225  0726  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11226  0727  1383               	bcf	3,7	;select IRP bank0
 11227  0728  0080               	movwf	0
 11228                           
 11229                           ;EEPROM_24C1025.c: 111:              I2C_Master_Stop();
 11230  0729  160A  158A  2171  120A  118A  	fcall	_I2C_Master_Stop
 11231                           
 11232                           ;EEPROM_24C1025.c: 113:              my_delay_ms_WDT(5);
 11233  072E  3000               	movlw	0
 11234  072F  1283               	bcf	3,5	;RP0=0, select bank0
 11235  0730  00A3               	movwf	my_delay_ms_WDT@time+3
 11236  0731  3000               	movlw	0
 11237  0732  00A2               	movwf	my_delay_ms_WDT@time+2
 11238  0733  3000               	movlw	0
 11239  0734  00A1               	movwf	my_delay_ms_WDT@time+1
 11240  0735  3005               	movlw	5
 11241  0736  00A0               	movwf	my_delay_ms_WDT@time
 11242  0737  160A  158A  2562  120A  118A  	fcall	_my_delay_ms_WDT
 11243                           
 11244                           ;EEPROM_24C1025.c: 114:              mem_add++;
 11245  073C  3001               	movlw	1
 11246  073D  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11247  073E  3000               	movlw	0
 11248  073F  1803               	skipnc
 11249  0740  3001               	movlw	1
 11250  0741  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11251  0742  3000               	movlw	0
 11252  0743  1803               	skipnc
 11253  0744  3001               	movlw	1
 11254  0745  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11255  0746  3000               	movlw	0
 11256  0747  1803               	skipnc
 11257  0748  3001               	movlw	1
 11258  0749  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11259                           
 11260                           ;EEPROM_24C1025.c: 115:              data++;
 11261  074A  3001               	movlw	1
 11262  074B  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11263  074C  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11264  074D  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 11265                           
 11266                           ;EEPROM_24C1025.c: 116:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11267  074E  082D               	movf	EEPROM_24C1025_Read_Buffer@mem_add+3,w
 11268  074F  1D03               	btfss	3,2
 11269  0750  2F5F               	goto	l3783
 11270  0751  3001               	movlw	1
 11271  0752  022C               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+2,w
 11272  0753  1D03               	skipz
 11273  0754  2F5D               	goto	u2913
 11274  0755  3000               	movlw	0
 11275  0756  022B               	subwf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11276  0757  1D03               	skipz
 11277  0758  2F5D               	goto	u2913
 11278  0759  3000               	movlw	0
 11279  075A  022A               	subwf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11280  075B  1D03               	skipz
 11281  075C  2F5D               	goto	u2913
 11282  075D                     u2913:
 11283  075D  1C03               	btfss	3,0
 11284  075E  2F66               	goto	l3785
 11285  075F                     l3783:
 11286  075F  3008               	movlw	8
 11287  0760  1283               	bcf	3,5	;RP0=0, select bank0
 11288  0761  1303               	bcf	3,6	;RP1=0, select bank0
 11289  0762  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11290  0763  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11291  0764  00B4               	movwf	EEPROM_24C1025_Read_Buffer@range
 11292  0765  2F69               	goto	l3787
 11293  0766                     l3785:
 11294  0766  1283               	bcf	3,5	;RP0=0, select bank0
 11295  0767  1303               	bcf	3,6	;RP1=0, select bank0
 11296  0768  01B4               	clrf	EEPROM_24C1025_Read_Buffer@range
 11297  0769                     l3787:
 11298                           
 11299                           ;EEPROM_24C1025.c: 117:              ctrl=chip_add;
 11300  0769  0833               	movf	EEPROM_24C1025_Read_Buffer@chip_add,w
 11301  076A  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11302  076B  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11303  076C  00B5               	movwf	EEPROM_24C1025_Read_Buffer@ctrl
 11304                           
 11305                           ;EEPROM_24C1025.c: 118:              ctrl<<=1;
 11306  076D  1003               	clrc
 11307  076E  0DB5               	rlf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11308                           
 11309                           ;EEPROM_24C1025.c: 119:              ctrl |= 0xA0;
 11310  076F  30A0               	movlw	160
 11311  0770  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11312  0771  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11313  0772  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11314                           
 11315                           ;EEPROM_24C1025.c: 120:              ctrl |= 0b00000001;
 11316  0773  1435               	bsf	EEPROM_24C1025_Read_Buffer@ctrl,0
 11317                           
 11318                           ;EEPROM_24C1025.c: 121:              ctrl |= range;
 11319  0774  0834               	movf	EEPROM_24C1025_Read_Buffer@range,w
 11320  0775  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11321  0776  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11322  0777  04B5               	iorwf	EEPROM_24C1025_Read_Buffer@ctrl,f
 11323                           
 11324                           ;EEPROM_24C1025.c: 123:              I2C_Master_Start();
 11325  0778  160A  158A  21B4  120A  118A  	fcall	_I2C_Master_Start
 11326                           
 11327                           ;EEPROM_24C1025.c: 124:              I2C_Master_Write(ctrl & 0xFE);
 11328  077D  1283               	bcf	3,5	;RP0=0, select bank0
 11329  077E  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11330  077F  39FE               	andlw	254
 11331  0780  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11332  0781  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11333  0782  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11334  0783  00A3               	movwf	I2C_Master_Write@d
 11335  0784  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11336  0785  00A4               	movwf	I2C_Master_Write@d+1
 11337  0786  160A  158A  218E  120A  118A  	fcall	_I2C_Master_Write
 11338                           
 11339                           ;EEPROM_24C1025.c: 125:              I2C_Master_Write(((char *)&mem_add)[1]);
 11340  078B  082B               	movf	EEPROM_24C1025_Read_Buffer@mem_add+1,w
 11341  078C  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11342  078D  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11343  078E  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11344  078F  00A3               	movwf	I2C_Master_Write@d
 11345  0790  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11346  0791  00A4               	movwf	I2C_Master_Write@d+1
 11347  0792  160A  158A  218E  120A  118A  	fcall	_I2C_Master_Write
 11348                           
 11349                           ;EEPROM_24C1025.c: 126:              I2C_Master_Write(((char *)&mem_add)[0]);
 11350  0797  082A               	movf	EEPROM_24C1025_Read_Buffer@mem_add,w
 11351  0798  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11352  0799  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11353  079A  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11354  079B  00A3               	movwf	I2C_Master_Write@d
 11355  079C  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11356  079D  00A4               	movwf	I2C_Master_Write@d+1
 11357  079E  160A  158A  218E  120A  118A  	fcall	_I2C_Master_Write
 11358                           
 11359                           ;EEPROM_24C1025.c: 127:              I2C_Master_RepeatedStart();
 11360  07A3  160A  158A  2199  120A  118A  	fcall	_I2C_Master_RepeatedStart
 11361                           
 11362                           ;EEPROM_24C1025.c: 128:              I2C_Master_Write(ctrl);
 11363  07A8  1283               	bcf	3,5	;RP0=0, select bank0
 11364  07A9  0835               	movf	EEPROM_24C1025_Read_Buffer@ctrl,w
 11365  07AA  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11366  07AB  01B1               	clrf	??_EEPROM_24C1025_Read_Buffer+1
 11367  07AC  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11368  07AD  00A3               	movwf	I2C_Master_Write@d
 11369  07AE  0831               	movf	??_EEPROM_24C1025_Read_Buffer+1,w
 11370  07AF  00A4               	movwf	I2C_Master_Write@d+1
 11371  07B0  160A  158A  218E  120A  118A  	fcall	_I2C_Master_Write
 11372                           
 11373                           ;EEPROM_24C1025.c: 129:              }
 11374  07B5  2FD8               	goto	l3815
 11375  07B6                     l3809:
 11376                           
 11377                           ;EEPROM_24C1025.c: 131:              {;EEPROM_24C1025.c: 132:              (*data)=I2C_M
      +                          aster_Read(1);
 11378  07B6  3001               	movlw	1
 11379  07B7  00A3               	movwf	I2C_Master_Read@a
 11380  07B8  3000               	movlw	0
 11381  07B9  00A4               	movwf	I2C_Master_Read@a+1
 11382  07BA  160A  158A  24C0  120A  118A  	fcall	_I2C_Master_Read
 11383  07BF  0823               	movf	?_I2C_Master_Read,w
 11384  07C0  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11385  07C1  082F               	movf	EEPROM_24C1025_Read_Buffer@data,w
 11386  07C2  0084               	movwf	4
 11387  07C3  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11388  07C4  1383               	bcf	3,7	;select IRP bank0
 11389  07C5  0080               	movwf	0
 11390                           
 11391                           ;EEPROM_24C1025.c: 133:              data++;
 11392  07C6  3001               	movlw	1
 11393  07C7  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11394  07C8  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11395  07C9  07AF               	addwf	EEPROM_24C1025_Read_Buffer@data,f
 11396                           
 11397                           ;EEPROM_24C1025.c: 134:              mem_add++;
 11398  07CA  3001               	movlw	1
 11399  07CB  07AA               	addwf	EEPROM_24C1025_Read_Buffer@mem_add,f
 11400  07CC  3000               	movlw	0
 11401  07CD  1803               	skipnc
 11402  07CE  3001               	movlw	1
 11403  07CF  07AB               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+1,f
 11404  07D0  3000               	movlw	0
 11405  07D1  1803               	skipnc
 11406  07D2  3001               	movlw	1
 11407  07D3  07AC               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+2,f
 11408  07D4  3000               	movlw	0
 11409  07D5  1803               	skipnc
 11410  07D6  3001               	movlw	1
 11411  07D7  07AD               	addwf	EEPROM_24C1025_Read_Buffer@mem_add+3,f
 11412  07D8                     l3815:
 11413                           
 11414                           ;EEPROM_24C1025.c: 136:         }
 11415  07D8  3001               	movlw	1
 11416  07D9  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11417  07DA  0830               	movf	??_EEPROM_24C1025_Read_Buffer,w
 11418  07DB  07B2               	addwf	EEPROM_24C1025_Read_Buffer@cnt_108,f
 11419  07DC  2EFB               	goto	l3817
 11420  07DD                     l3819:
 11421                           
 11422                           ;EEPROM_24C1025.c: 137:         I2C_Master_Read(0);
 11423  07DD  3000               	movlw	0
 11424  07DE  1283               	bcf	3,5	;RP0=0, select bank0
 11425  07DF  1303               	bcf	3,6	;RP1=0, select bank0
 11426  07E0  00A3               	movwf	I2C_Master_Read@a
 11427  07E1  00A4               	movwf	I2C_Master_Read@a+1
 11428  07E2  160A  158A  24C0  120A  118A  	fcall	_I2C_Master_Read
 11429                           
 11430                           ;EEPROM_24C1025.c: 138:         I2C_Master_Stop();
 11431  07E7  160A  158A  2171  120A  118A  	fcall	_I2C_Master_Stop
 11432                           
 11433                           ;EEPROM_24C1025.c: 139:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 11434  07EC  30B9               	movlw	185
 11435  07ED  1283               	bcf	3,5	;RP0=0, select bank0
 11436  07EE  1303               	bcf	3,6	;RP1=0, select bank0
 11437  07EF  00B0               	movwf	??_EEPROM_24C1025_Read_Buffer
 11438  07F0                     u5597:
 11439  07F0  2FF1               	nop2
 11440  07F1  2FF2               	nop2
 11441  07F2  0BB0               	decfsz	??_EEPROM_24C1025_Read_Buffer,f
 11442  07F3  2FF0               	goto	u5597
 11443  07F4  2FF5               	nop2
 11444  07F5  0008               	return
 11445  07F6                     __end_of_EEPROM_24C1025_Read_Buffer:
 11446                           
 11447                           	psect	text45
 11448  1682                     __ptext45:	
 11449 ;; *************** function _EEPROM_24C1025_Read_Buffer_USART *****************
 11450 ;; Defined at:
 11451 ;;		line 148 in file "EEPROM_24C1025.c"
 11452 ;; Parameters:    Size  Location     Type
 11453 ;;  chip_add        1    wreg     unsigned char 
 11454 ;;  mem_add         4    9[BANK0 ] unsigned long 
 11455 ;;  sizedata        1   13[BANK0 ] unsigned char 
 11456 ;;  data            1   14[BANK0 ] PTR unsigned char 
 11457 ;;		 -> buffer(33), 
 11458 ;; Auto vars:     Size  Location     Type
 11459 ;;  chip_add        1   18[BANK0 ] unsigned char 
 11460 ;;  cnt             1   17[BANK0 ] unsigned char 
 11461 ;;  ctrl            1   20[BANK0 ] unsigned char 
 11462 ;;  range           1   19[BANK0 ] unsigned char 
 11463 ;;  cnt             1    0        unsigned char 
 11464 ;; Return value:  Size  Location     Type
 11465 ;;                  1    wreg      void 
 11466 ;; Registers used:
 11467 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11468 ;; Tracked objects:
 11469 ;;		On entry : 300/300
 11470 ;;		On exit  : 0/0
 11471 ;;		Unchanged: 0/0
 11472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11473 ;;      Params:         0       6       0       0       0
 11474 ;;      Locals:         0       4       0       0       0
 11475 ;;      Temps:          0       2       0       0       0
 11476 ;;      Totals:         0      12       0       0       0
 11477 ;;Total ram usage:       12 bytes
 11478 ;; Hardware stack levels used: 1
 11479 ;; Hardware stack levels required when called: 3
 11480 ;; This function calls:
 11481 ;;		_I2C_Master_Read
 11482 ;;		_I2C_Master_RepeatedStart
 11483 ;;		_I2C_Master_Start
 11484 ;;		_I2C_Master_Stop
 11485 ;;		_I2C_Master_Write
 11486 ;;		_USART_putc
 11487 ;; This function is called by:
 11488 ;;		_Decodify_Command
 11489 ;; This function uses a non-reentrant model
 11490 ;;
 11491                           
 11492                           
 11493                           ;psect for function _EEPROM_24C1025_Read_Buffer_USART
 11494  1682                     _EEPROM_24C1025_Read_Buffer_USART:
 11495                           
 11496                           ;incstack = 0
 11497                           ; Regs used in _EEPROM_24C1025_Read_Buffer_USART: [wreg-fsr0h+status,2+status,0+pclath+c
      +                          stack]
 11498                           ;EEPROM_24C1025_Read_Buffer_USART@chip_add stored from wreg
 11499  1682  1283               	bcf	3,5	;RP0=0, select bank0
 11500  1683  1303               	bcf	3,6	;RP1=0, select bank0
 11501  1684  00B2               	movwf	EEPROM_24C1025_Read_Buffer_USART@chip_add
 11502                           
 11503                           ;EEPROM_24C1025.c: 154:      unsigned char range=0;
 11504  1685  01B3               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11505                           
 11506                           ;EEPROM_24C1025.c: 155:      unsigned char ctrl;;EEPROM_24C1025.c: 157:      Delay_Led_M
      +                          emory=20;
 11507  1686  3014               	movlw	20
 11508  1687  1683               	bsf	3,5	;RP0=1, select bank1
 11509  1688  00DD               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 11510  1689  3000               	movlw	0
 11511  168A  00DE               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 11512                           
 11513                           ;EEPROM_24C1025.c: 159:      if(mem_add>0x1FFFF) return;
 11514  168B  1283               	bcf	3,5	;RP0=0, select bank0
 11515  168C  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11516  168D  1D03               	btfss	3,2
 11517  168E  0008               	return
 11518  168F  3002               	movlw	2
 11519  1690  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11520  1691  1D03               	skipz
 11521  1692  2E9B               	goto	u4163
 11522  1693  3000               	movlw	0
 11523  1694  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11524  1695  1D03               	skipz
 11525  1696  2E9B               	goto	u4163
 11526  1697  3000               	movlw	0
 11527  1698  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11528  1699  1D03               	skipz
 11529  169A  2E9B               	goto	u4163
 11530  169B                     u4163:
 11531  169B  1803               	btfsc	3,0
 11532  169C  0008               	return
 11533                           
 11534                           ;EEPROM_24C1025.c: 161:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11535  169D  1283               	bcf	3,5	;RP0=0, select bank0
 11536  169E  1303               	bcf	3,6	;RP1=0, select bank0
 11537  169F  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11538  16A0  1D03               	btfss	3,2
 11539  16A1  2EB0               	goto	l4379
 11540  16A2  3001               	movlw	1
 11541  16A3  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11542  16A4  1D03               	skipz
 11543  16A5  2EAE               	goto	u4173
 11544  16A6  3000               	movlw	0
 11545  16A7  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11546  16A8  1D03               	skipz
 11547  16A9  2EAE               	goto	u4173
 11548  16AA  3000               	movlw	0
 11549  16AB  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11550  16AC  1D03               	skipz
 11551  16AD  2EAE               	goto	u4173
 11552  16AE                     u4173:
 11553  16AE  1C03               	btfss	3,0
 11554  16AF  2EB7               	goto	l4381
 11555  16B0                     l4379:
 11556  16B0  3008               	movlw	8
 11557  16B1  1283               	bcf	3,5	;RP0=0, select bank0
 11558  16B2  1303               	bcf	3,6	;RP1=0, select bank0
 11559  16B3  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11560  16B4  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11561  16B5  00B3               	movwf	EEPROM_24C1025_Read_Buffer_USART@range
 11562  16B6  2EBA               	goto	l4383
 11563  16B7                     l4381:
 11564  16B7  1283               	bcf	3,5	;RP0=0, select bank0
 11565  16B8  1303               	bcf	3,6	;RP1=0, select bank0
 11566  16B9  01B3               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11567  16BA                     l4383:
 11568                           
 11569                           ;EEPROM_24C1025.c: 162:      ctrl=chip_add;
 11570  16BA  0832               	movf	EEPROM_24C1025_Read_Buffer_USART@chip_add,w
 11571  16BB  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11572  16BC  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11573  16BD  00B4               	movwf	EEPROM_24C1025_Read_Buffer_USART@ctrl
 11574                           
 11575                           ;EEPROM_24C1025.c: 163:      ctrl<<=1;
 11576  16BE  1003               	clrc
 11577  16BF  0DB4               	rlf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11578                           
 11579                           ;EEPROM_24C1025.c: 164:      ctrl |= 0xA0;
 11580  16C0  30A0               	movlw	160
 11581  16C1  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11582  16C2  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11583  16C3  04B4               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11584                           
 11585                           ;EEPROM_24C1025.c: 165:      ctrl |= 0b00000001;
 11586  16C4  1434               	bsf	EEPROM_24C1025_Read_Buffer_USART@ctrl,0
 11587                           
 11588                           ;EEPROM_24C1025.c: 166:      ctrl |= range;
 11589  16C5  0833               	movf	EEPROM_24C1025_Read_Buffer_USART@range,w
 11590  16C6  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11591  16C7  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11592  16C8  04B4               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11593                           
 11594                           ;EEPROM_24C1025.c: 168:      I2C_Master_Start();
 11595  16C9  160A  158A  21B4  160A  118A  	fcall	_I2C_Master_Start
 11596                           
 11597                           ;EEPROM_24C1025.c: 169:      I2C_Master_Write(ctrl & 0xFE);
 11598  16CE  1283               	bcf	3,5	;RP0=0, select bank0
 11599  16CF  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11600  16D0  39FE               	andlw	254
 11601  16D1  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11602  16D2  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11603  16D3  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11604  16D4  00A3               	movwf	I2C_Master_Write@d
 11605  16D5  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11606  16D6  00A4               	movwf	I2C_Master_Write@d+1
 11607  16D7  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 11608                           
 11609                           ;EEPROM_24C1025.c: 170:      I2C_Master_Write(((char *)&mem_add)[1]);
 11610  16DC  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11611  16DD  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11612  16DE  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11613  16DF  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11614  16E0  00A3               	movwf	I2C_Master_Write@d
 11615  16E1  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11616  16E2  00A4               	movwf	I2C_Master_Write@d+1
 11617  16E3  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 11618                           
 11619                           ;EEPROM_24C1025.c: 171:      I2C_Master_Write(((char *)&mem_add)[0]);
 11620  16E8  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11621  16E9  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11622  16EA  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11623  16EB  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11624  16EC  00A3               	movwf	I2C_Master_Write@d
 11625  16ED  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11626  16EE  00A4               	movwf	I2C_Master_Write@d+1
 11627  16EF  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 11628                           
 11629                           ;EEPROM_24C1025.c: 172:      I2C_Master_RepeatedStart();
 11630  16F4  160A  158A  2199  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11631                           
 11632                           ;EEPROM_24C1025.c: 173:      I2C_Master_Write(ctrl);
 11633  16F9  1283               	bcf	3,5	;RP0=0, select bank0
 11634  16FA  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11635  16FB  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11636  16FC  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11637  16FD  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11638  16FE  00A3               	movwf	I2C_Master_Write@d
 11639  16FF  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11640  1700  00A4               	movwf	I2C_Master_Write@d+1
 11641  1701  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 11642                           
 11643                           ;EEPROM_24C1025.c: 175:      for(char cnt=0;cnt<(sizedata);cnt++)
 11644  1706  01B1               	clrf	EEPROM_24C1025_Read_Buffer_USART@cnt_117
 11645  1707                     l4453:
 11646  1707  082D               	movf	EEPROM_24C1025_Read_Buffer_USART@sizedata,w
 11647  1708  0231               	subwf	EEPROM_24C1025_Read_Buffer_USART@cnt_117,w
 11648  1709  1803               	btfsc	3,0
 11649  170A  2FE7               	goto	l4455
 11650  170B  0064               	clrwdt	;# 
 11651                           
 11652                           ;EEPROM_24C1025.c: 178:            if(mem_add>0x1FFFF) break;
 11653  170C  1283               	bcf	3,5	;RP0=0, select bank0
 11654  170D  1303               	bcf	3,6	;RP1=0, select bank0
 11655  170E  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11656  170F  1D03               	btfss	3,2
 11657  1710  2FE7               	goto	l4455
 11658  1711  3002               	movlw	2
 11659  1712  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11660  1713  1D03               	skipz
 11661  1714  2F1D               	goto	u4183
 11662  1715  3000               	movlw	0
 11663  1716  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11664  1717  1D03               	skipz
 11665  1718  2F1D               	goto	u4183
 11666  1719  3000               	movlw	0
 11667  171A  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11668  171B  1D03               	skipz
 11669  171C  2F1D               	goto	u4183
 11670  171D                     u4183:
 11671  171D  1803               	btfsc	3,0
 11672  171E  2FE7               	goto	l4455
 11673                           
 11674                           ;EEPROM_24C1025.c: 179:            if((mem_add+1)%128==0)
 11675  171F  1283               	bcf	3,5	;RP0=0, select bank0
 11676  1720  1303               	bcf	3,6	;RP1=0, select bank0
 11677  1721  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11678  1722  3E01               	addlw	1
 11679  1723  397F               	andlw	127
 11680  1724  1D03               	btfss	3,2
 11681  1725  2FBB               	goto	l4447
 11682                           
 11683                           ;EEPROM_24C1025.c: 180:              {;EEPROM_24C1025.c: 181:              (*data)=I2C_M
      +                          aster_Read(0);
 11684  1726  3000               	movlw	0
 11685  1727  00A3               	movwf	I2C_Master_Read@a
 11686  1728  00A4               	movwf	I2C_Master_Read@a+1
 11687  1729  160A  158A  24C0  160A  118A  	fcall	_I2C_Master_Read
 11688  172E  0823               	movf	?_I2C_Master_Read,w
 11689  172F  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11690  1730  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11691  1731  0084               	movwf	4
 11692  1732  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11693  1733  1783               	bsf	3,7	;select IRP bank2
 11694  1734  0080               	movwf	0
 11695                           
 11696                           ;EEPROM_24C1025.c: 182:              I2C_Master_Stop();
 11697  1735  160A  158A  2171  160A  118A  	fcall	_I2C_Master_Stop
 11698                           
 11699                           ;EEPROM_24C1025.c: 183:              USART_putc(*data);
 11700  173A  1283               	bcf	3,5	;RP0=0, select bank0
 11701  173B  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11702  173C  0084               	movwf	4
 11703  173D  1783               	bsf	3,7	;select IRP bank2
 11704  173E  0800               	movf	0,w
 11705  173F  160A  158A  21A4  160A  118A  	fcall	_USART_putc
 11706                           
 11707                           ;EEPROM_24C1025.c: 186:              mem_add++;
 11708  1744  3001               	movlw	1
 11709  1745  1283               	bcf	3,5	;RP0=0, select bank0
 11710  1746  07A9               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,f
 11711  1747  3000               	movlw	0
 11712  1748  1803               	skipnc
 11713  1749  3001               	movlw	1
 11714  174A  07AA               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,f
 11715  174B  3000               	movlw	0
 11716  174C  1803               	skipnc
 11717  174D  3001               	movlw	1
 11718  174E  07AB               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,f
 11719  174F  3000               	movlw	0
 11720  1750  1803               	skipnc
 11721  1751  3001               	movlw	1
 11722  1752  07AC               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,f
 11723                           
 11724                           ;EEPROM_24C1025.c: 188:              if(mem_add>0xFFFF) range=0x08; else range=0x00;
 11725  1753  082C               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,w
 11726  1754  1D03               	btfss	3,2
 11727  1755  2F64               	goto	l4421
 11728  1756  3001               	movlw	1
 11729  1757  022B               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,w
 11730  1758  1D03               	skipz
 11731  1759  2F62               	goto	u4203
 11732  175A  3000               	movlw	0
 11733  175B  022A               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11734  175C  1D03               	skipz
 11735  175D  2F62               	goto	u4203
 11736  175E  3000               	movlw	0
 11737  175F  0229               	subwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11738  1760  1D03               	skipz
 11739  1761  2F62               	goto	u4203
 11740  1762                     u4203:
 11741  1762  1C03               	btfss	3,0
 11742  1763  2F6B               	goto	l4423
 11743  1764                     l4421:
 11744  1764  3008               	movlw	8
 11745  1765  1283               	bcf	3,5	;RP0=0, select bank0
 11746  1766  1303               	bcf	3,6	;RP1=0, select bank0
 11747  1767  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11748  1768  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11749  1769  00B3               	movwf	EEPROM_24C1025_Read_Buffer_USART@range
 11750  176A  2F6E               	goto	l4425
 11751  176B                     l4423:
 11752  176B  1283               	bcf	3,5	;RP0=0, select bank0
 11753  176C  1303               	bcf	3,6	;RP1=0, select bank0
 11754  176D  01B3               	clrf	EEPROM_24C1025_Read_Buffer_USART@range
 11755  176E                     l4425:
 11756                           
 11757                           ;EEPROM_24C1025.c: 189:              ctrl=chip_add;
 11758  176E  0832               	movf	EEPROM_24C1025_Read_Buffer_USART@chip_add,w
 11759  176F  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11760  1770  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11761  1771  00B4               	movwf	EEPROM_24C1025_Read_Buffer_USART@ctrl
 11762                           
 11763                           ;EEPROM_24C1025.c: 190:              ctrl<<=1;
 11764  1772  1003               	clrc
 11765  1773  0DB4               	rlf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11766                           
 11767                           ;EEPROM_24C1025.c: 191:              ctrl |= 0xA0;
 11768  1774  30A0               	movlw	160
 11769  1775  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11770  1776  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11771  1777  04B4               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11772                           
 11773                           ;EEPROM_24C1025.c: 192:              ctrl |= 0b00000001;
 11774  1778  1434               	bsf	EEPROM_24C1025_Read_Buffer_USART@ctrl,0
 11775                           
 11776                           ;EEPROM_24C1025.c: 193:              ctrl |= range;
 11777  1779  0833               	movf	EEPROM_24C1025_Read_Buffer_USART@range,w
 11778  177A  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11779  177B  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11780  177C  04B4               	iorwf	EEPROM_24C1025_Read_Buffer_USART@ctrl,f
 11781                           
 11782                           ;EEPROM_24C1025.c: 195:              I2C_Master_Start();
 11783  177D  160A  158A  21B4  160A  118A  	fcall	_I2C_Master_Start
 11784                           
 11785                           ;EEPROM_24C1025.c: 196:              I2C_Master_Write(ctrl & 0xFE);
 11786  1782  1283               	bcf	3,5	;RP0=0, select bank0
 11787  1783  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11788  1784  39FE               	andlw	254
 11789  1785  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11790  1786  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11791  1787  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11792  1788  00A3               	movwf	I2C_Master_Write@d
 11793  1789  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11794  178A  00A4               	movwf	I2C_Master_Write@d+1
 11795  178B  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 11796                           
 11797                           ;EEPROM_24C1025.c: 197:              I2C_Master_Write(((char *)&mem_add)[1]);
 11798  1790  082A               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,w
 11799  1791  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11800  1792  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11801  1793  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11802  1794  00A3               	movwf	I2C_Master_Write@d
 11803  1795  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11804  1796  00A4               	movwf	I2C_Master_Write@d+1
 11805  1797  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 11806                           
 11807                           ;EEPROM_24C1025.c: 198:              I2C_Master_Write(((char *)&mem_add)[0]);
 11808  179C  0829               	movf	EEPROM_24C1025_Read_Buffer_USART@mem_add,w
 11809  179D  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11810  179E  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11811  179F  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11812  17A0  00A3               	movwf	I2C_Master_Write@d
 11813  17A1  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11814  17A2  00A4               	movwf	I2C_Master_Write@d+1
 11815  17A3  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 11816                           
 11817                           ;EEPROM_24C1025.c: 199:              I2C_Master_RepeatedStart();
 11818  17A8  160A  158A  2199  160A  118A  	fcall	_I2C_Master_RepeatedStart
 11819                           
 11820                           ;EEPROM_24C1025.c: 200:              I2C_Master_Write(ctrl);
 11821  17AD  1283               	bcf	3,5	;RP0=0, select bank0
 11822  17AE  0834               	movf	EEPROM_24C1025_Read_Buffer_USART@ctrl,w
 11823  17AF  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11824  17B0  01B0               	clrf	??_EEPROM_24C1025_Read_Buffer_USART+1
 11825  17B1  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11826  17B2  00A3               	movwf	I2C_Master_Write@d
 11827  17B3  0830               	movf	??_EEPROM_24C1025_Read_Buffer_USART+1,w
 11828  17B4  00A4               	movwf	I2C_Master_Write@d+1
 11829  17B5  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 11830                           
 11831                           ;EEPROM_24C1025.c: 201:              }
 11832  17BA  2FE2               	goto	l4451
 11833  17BB                     l4447:
 11834                           
 11835                           ;EEPROM_24C1025.c: 203:              {;EEPROM_24C1025.c: 204:              (*data)=I2C_M
      +                          aster_Read(1);
 11836  17BB  3001               	movlw	1
 11837  17BC  00A3               	movwf	I2C_Master_Read@a
 11838  17BD  3000               	movlw	0
 11839  17BE  00A4               	movwf	I2C_Master_Read@a+1
 11840  17BF  160A  158A  24C0  160A  118A  	fcall	_I2C_Master_Read
 11841  17C4  0823               	movf	?_I2C_Master_Read,w
 11842  17C5  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11843  17C6  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11844  17C7  0084               	movwf	4
 11845  17C8  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11846  17C9  1783               	bsf	3,7	;select IRP bank2
 11847  17CA  0080               	movwf	0
 11848                           
 11849                           ;EEPROM_24C1025.c: 205:              USART_putc(*data);
 11850  17CB  082E               	movf	EEPROM_24C1025_Read_Buffer_USART@data,w
 11851  17CC  0084               	movwf	4
 11852  17CD  0800               	movf	0,w
 11853  17CE  160A  158A  21A4  160A  118A  	fcall	_USART_putc
 11854                           
 11855                           ;EEPROM_24C1025.c: 207:              mem_add++;
 11856  17D3  3001               	movlw	1
 11857  17D4  1283               	bcf	3,5	;RP0=0, select bank0
 11858  17D5  07A9               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add,f
 11859  17D6  3000               	movlw	0
 11860  17D7  1803               	skipnc
 11861  17D8  3001               	movlw	1
 11862  17D9  07AA               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+1,f
 11863  17DA  3000               	movlw	0
 11864  17DB  1803               	skipnc
 11865  17DC  3001               	movlw	1
 11866  17DD  07AB               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+2,f
 11867  17DE  3000               	movlw	0
 11868  17DF  1803               	skipnc
 11869  17E0  3001               	movlw	1
 11870  17E1  07AC               	addwf	EEPROM_24C1025_Read_Buffer_USART@mem_add+3,f
 11871  17E2                     l4451:
 11872                           
 11873                           ;EEPROM_24C1025.c: 209:         }
 11874  17E2  3001               	movlw	1
 11875  17E3  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11876  17E4  082F               	movf	??_EEPROM_24C1025_Read_Buffer_USART,w
 11877  17E5  07B1               	addwf	EEPROM_24C1025_Read_Buffer_USART@cnt_117,f
 11878  17E6  2F07               	goto	l4453
 11879  17E7                     l4455:
 11880                           
 11881                           ;EEPROM_24C1025.c: 210:         I2C_Master_Read(0);
 11882  17E7  3000               	movlw	0
 11883  17E8  1283               	bcf	3,5	;RP0=0, select bank0
 11884  17E9  1303               	bcf	3,6	;RP1=0, select bank0
 11885  17EA  00A3               	movwf	I2C_Master_Read@a
 11886  17EB  00A4               	movwf	I2C_Master_Read@a+1
 11887  17EC  160A  158A  24C0  160A  118A  	fcall	_I2C_Master_Read
 11888                           
 11889                           ;EEPROM_24C1025.c: 211:         I2C_Master_Stop();
 11890  17F1  160A  158A  2171  160A  118A  	fcall	_I2C_Master_Stop
 11891                           
 11892                           ;EEPROM_24C1025.c: 212:         _delay((unsigned long)((650)*(8000000/4000000.0)));
 11893  17F6  30B9               	movlw	185
 11894  17F7  1283               	bcf	3,5	;RP0=0, select bank0
 11895  17F8  1303               	bcf	3,6	;RP1=0, select bank0
 11896  17F9  00AF               	movwf	??_EEPROM_24C1025_Read_Buffer_USART
 11897  17FA                     u5607:
 11898  17FA  2FFB               	nop2
 11899  17FB  2FFC               	nop2
 11900  17FC  0BAF               	decfsz	??_EEPROM_24C1025_Read_Buffer_USART,f
 11901  17FD  2FFA               	goto	u5607
 11902  17FE  2FFF               	nop2
 11903  17FF  0008               	return
 11904  1800                     __end_of_EEPROM_24C1025_Read_Buffer_USART:
 11905                           
 11906                           	psect	text46
 11907  19A4                     __ptext46:	
 11908 ;; *************** function _USART_putc *****************
 11909 ;; Defined at:
 11910 ;;		line 89 in file "usart.c"
 11911 ;; Parameters:    Size  Location     Type
 11912 ;;  value           1    wreg     unsigned char 
 11913 ;; Auto vars:     Size  Location     Type
 11914 ;;  value           1    0[BANK0 ] unsigned char 
 11915 ;; Return value:  Size  Location     Type
 11916 ;;                  1    wreg      void 
 11917 ;; Registers used:
 11918 ;;		wreg
 11919 ;; Tracked objects:
 11920 ;;		On entry : 0/100
 11921 ;;		On exit  : 300/100
 11922 ;;		Unchanged: 0/0
 11923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11924 ;;      Params:         0       0       0       0       0
 11925 ;;      Locals:         0       1       0       0       0
 11926 ;;      Temps:          0       0       0       0       0
 11927 ;;      Totals:         0       1       0       0       0
 11928 ;;Total ram usage:        1 bytes
 11929 ;; Hardware stack levels used: 1
 11930 ;; Hardware stack levels required when called: 1
 11931 ;; This function calls:
 11932 ;;		Nothing
 11933 ;; This function is called by:
 11934 ;;		_EEPROM_24C1025_Read_Buffer_USART
 11935 ;;		_Decodify_Command
 11936 ;;		_Send_To_MB
 11937 ;;		_PROCULUS_Control_Register_Write
 11938 ;;		_PROCULUS_VP_Write
 11939 ;;		_USART_put_int
 11940 ;;		_USART_put_string
 11941 ;; This function uses a non-reentrant model
 11942 ;;
 11943                           
 11944                           
 11945                           ;psect for function _USART_putc
 11946  19A4                     _USART_putc:
 11947                           
 11948                           ;incstack = 0
 11949                           ; Regs used in _USART_putc: [wreg]
 11950                           ;USART_putc@value stored from wreg
 11951  19A4  1283               	bcf	3,5	;RP0=0, select bank0
 11952  19A5  1303               	bcf	3,6	;RP1=0, select bank0
 11953  19A6  00A0               	movwf	USART_putc@value
 11954                           
 11955                           ;usart.c: 89: void USART_putc(char value);usart.c: 90: {;usart.c: 91:     Delay_Led_Usar
      +                          t = 20;
 11956  19A7  3014               	movlw	20
 11957  19A8  1683               	bsf	3,5	;RP0=1, select bank1
 11958  19A9  00DB               	movwf	_Delay_Led_Usart^(0+128)	;volatile
 11959  19AA  3000               	movlw	0
 11960  19AB  00DC               	movwf	(_Delay_Led_Usart^(0+128)+1)	;volatile
 11961  19AC                     l880:	
 11962                           ;usart.c: 92:     while(!TXSTAbits.TRMT) continue;
 11963                           
 11964  19AC  1C98               	btfss	24,1	;volatile
 11965  19AD  29AC               	goto	l880
 11966                           
 11967                           ;usart.c: 93:     TXREG=value;
 11968  19AE  1283               	bcf	3,5	;RP0=0, select bank0
 11969  19AF  0820               	movf	USART_putc@value,w
 11970  19B0  0099               	movwf	25	;volatile
 11971                           
 11972                           ;usart.c: 94:     TXSTAbits.TXEN = 1;
 11973  19B1  1683               	bsf	3,5	;RP0=1, select bank1
 11974  19B2  1698               	bsf	24,5	;volatile
 11975  19B3  0008               	return
 11976  19B4                     __end_of_USART_putc:
 11977                           
 11978                           	psect	text47
 11979  1999                     __ptext47:	
 11980 ;; *************** function _I2C_Master_RepeatedStart *****************
 11981 ;; Defined at:
 11982 ;;		line 62 in file "I2C.c"
 11983 ;; Parameters:    Size  Location     Type
 11984 ;;		None
 11985 ;; Auto vars:     Size  Location     Type
 11986 ;;		None
 11987 ;; Return value:  Size  Location     Type
 11988 ;;                  1    wreg      void 
 11989 ;; Registers used:
 11990 ;;		wreg, status,2, status,0, pclath, cstack
 11991 ;; Tracked objects:
 11992 ;;		On entry : 300/0
 11993 ;;		On exit  : 200/0
 11994 ;;		Unchanged: 0/0
 11995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11996 ;;      Params:         0       0       0       0       0
 11997 ;;      Locals:         0       0       0       0       0
 11998 ;;      Temps:          0       0       0       0       0
 11999 ;;      Totals:         0       0       0       0       0
 12000 ;;Total ram usage:        0 bytes
 12001 ;; Hardware stack levels used: 1
 12002 ;; Hardware stack levels required when called: 2
 12003 ;; This function calls:
 12004 ;;		_I2C_Master_Wait
 12005 ;; This function is called by:
 12006 ;;		_EEPROM_24C1025_Read_Buffer
 12007 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12008 ;;		_EEPROM_24C1025_Read_Str
 12009 ;; This function uses a non-reentrant model
 12010 ;;
 12011                           
 12012                           
 12013                           ;psect for function _I2C_Master_RepeatedStart
 12014  1999                     _I2C_Master_RepeatedStart:
 12015                           
 12016                           ;I2C.c: 64:   if(I2C_Master_Wait())
 12017                           
 12018                           ;incstack = 0
 12019                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
 12020  1999  160A  158A  22CC  160A  158A  	fcall	_I2C_Master_Wait
 12021  199E  3A00               	xorlw	0
 12022  199F  1903               	skipnz
 12023  19A0  0008               	return
 12024                           
 12025                           ;I2C.c: 65:     {;I2C.c: 66:     SSPCON2bits.RSEN = 1;
 12026  19A1  1683               	bsf	3,5	;RP0=1, select bank1
 12027  19A2  1491               	bsf	17,1	;volatile
 12028  19A3  0008               	return
 12029  19A4                     __end_of_I2C_Master_RepeatedStart:
 12030                           
 12031                           	psect	text48
 12032  1CC0                     __ptext48:	
 12033 ;; *************** function _I2C_Master_Read *****************
 12034 ;; Defined at:
 12035 ;;		line 87 in file "I2C.c"
 12036 ;; Parameters:    Size  Location     Type
 12037 ;;  a               2    3[BANK0 ] unsigned short 
 12038 ;; Auto vars:     Size  Location     Type
 12039 ;;  temp            2    7[BANK0 ] unsigned short 
 12040 ;; Return value:  Size  Location     Type
 12041 ;;                  2    3[BANK0 ] unsigned short 
 12042 ;; Registers used:
 12043 ;;		wreg, status,2, status,0, pclath, cstack
 12044 ;; Tracked objects:
 12045 ;;		On entry : 300/0
 12046 ;;		On exit  : 300/0
 12047 ;;		Unchanged: 0/0
 12048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12049 ;;      Params:         0       2       0       0       0
 12050 ;;      Locals:         0       2       0       0       0
 12051 ;;      Temps:          0       2       0       0       0
 12052 ;;      Totals:         0       6       0       0       0
 12053 ;;Total ram usage:        6 bytes
 12054 ;; Hardware stack levels used: 1
 12055 ;; Hardware stack levels required when called: 2
 12056 ;; This function calls:
 12057 ;;		_I2C_Master_Wait
 12058 ;; This function is called by:
 12059 ;;		_EEPROM_24C1025_Read_Buffer
 12060 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12061 ;;		_EEPROM_24C1025_Read_Str
 12062 ;; This function uses a non-reentrant model
 12063 ;;
 12064                           
 12065                           
 12066                           ;psect for function _I2C_Master_Read
 12067  1CC0                     _I2C_Master_Read:
 12068                           
 12069                           ;I2C.c: 87: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 88: {;I2C.c: 89:   u
      +                          nsigned short temp;;I2C.c: 90:   if(I2C_Master_Wait())SSPCON2bits.RCEN = 1;
 12070                           
 12071                           ;incstack = 0
 12072                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 12073  1CC0  160A  158A  22CC  160A  158A  	fcall	_I2C_Master_Wait
 12074  1CC5  3A00               	xorlw	0
 12075  1CC6  1683               	bsf	3,5	;RP0=1, select bank1
 12076  1CC7  1D03               	btfss	3,2
 12077  1CC8  1591               	bsf	17,3	;volatile
 12078                           
 12079                           ;I2C.c: 91:   if(I2C_Master_Wait())temp = SSPBUF;
 12080  1CC9  160A  158A  22CC  160A  158A  	fcall	_I2C_Master_Wait
 12081  1CCE  3A00               	xorlw	0
 12082  1CCF  1903               	skipnz
 12083  1CD0  2CD8               	goto	l3689
 12084  1CD1  0813               	movf	19,w	;volatile
 12085  1CD2  00A5               	movwf	??_I2C_Master_Read
 12086  1CD3  01A6               	clrf	??_I2C_Master_Read+1
 12087  1CD4  0825               	movf	??_I2C_Master_Read,w
 12088  1CD5  00A7               	movwf	I2C_Master_Read@temp
 12089  1CD6  0826               	movf	??_I2C_Master_Read+1,w
 12090  1CD7  00A8               	movwf	I2C_Master_Read@temp+1
 12091  1CD8                     l3689:
 12092                           
 12093                           ;I2C.c: 92:   if(I2C_Master_Wait())
 12094  1CD8  160A  158A  22CC  160A  158A  	fcall	_I2C_Master_Wait
 12095  1CDD  3A00               	xorlw	0
 12096  1CDE  1903               	skipnz
 12097  1CDF  2CF2               	goto	l3701
 12098                           
 12099                           ;I2C.c: 93:     {;I2C.c: 94:     SSPCON2bits.ACKDT = (a)?0:1;
 12100  1CE0  0823               	movf	I2C_Master_Read@a,w
 12101  1CE1  0424               	iorwf	I2C_Master_Read@a+1,w
 12102  1CE2  1D03               	btfss	3,2
 12103  1CE3  2CE8               	goto	u2810
 12104  1CE4  1683               	bsf	3,5	;RP0=1, select bank1
 12105  1CE5  1303               	bcf	3,6	;RP1=0, select bank1
 12106  1CE6  1691               	bsf	17,5	;volatile
 12107  1CE7  2CEB               	goto	l3693
 12108  1CE8                     u2810:
 12109  1CE8  1683               	bsf	3,5	;RP0=1, select bank1
 12110  1CE9  1303               	bcf	3,6	;RP1=0, select bank1
 12111  1CEA  1291               	bcf	17,5	;volatile
 12112  1CEB                     l3693:
 12113                           
 12114                           ;I2C.c: 95:     SSPCON2bits.ACKEN = 1;
 12115  1CEB  1611               	bsf	17,4	;volatile
 12116                           
 12117                           ;I2C.c: 96:     return temp;
 12118  1CEC  1283               	bcf	3,5	;RP0=0, select bank0
 12119  1CED  0828               	movf	I2C_Master_Read@temp+1,w
 12120  1CEE  00A4               	movwf	?_I2C_Master_Read+1
 12121  1CEF  0827               	movf	I2C_Master_Read@temp,w
 12122  1CF0  00A3               	movwf	?_I2C_Master_Read
 12123  1CF1  0008               	return
 12124  1CF2                     l3701:
 12125                           
 12126                           ;I2C.c: 99:     {;I2C.c: 100:     return 0x00;
 12127  1CF2  01A3               	clrf	?_I2C_Master_Read
 12128  1CF3  01A4               	clrf	?_I2C_Master_Read+1
 12129  1CF4  0008               	return
 12130  1CF5                     __end_of_I2C_Master_Read:
 12131                           
 12132                           	psect	text49
 12133  1E12                     __ptext49:	
 12134 ;; *************** function _EEPROM_24C1025_Fill_All *****************
 12135 ;; Defined at:
 12136 ;;		line 367 in file "EEPROM_24C1025.c"
 12137 ;; Parameters:    Size  Location     Type
 12138 ;;  chip_add        1    wreg     unsigned char 
 12139 ;;  value           2   10[BANK1 ] unsigned int 
 12140 ;; Auto vars:     Size  Location     Type
 12141 ;;  chip_add        1   12[BANK1 ] unsigned char 
 12142 ;;  mem_add         4   13[BANK1 ] unsigned long 
 12143 ;; Return value:  Size  Location     Type
 12144 ;;                  1    wreg      void 
 12145 ;; Registers used:
 12146 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12147 ;; Tracked objects:
 12148 ;;		On entry : 300/300
 12149 ;;		On exit  : 0/0
 12150 ;;		Unchanged: 0/0
 12151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12152 ;;      Params:         0       0       2       0       0
 12153 ;;      Locals:         0       0       5       0       0
 12154 ;;      Temps:          0       0       0       0       0
 12155 ;;      Totals:         0       0       7       0       0
 12156 ;;Total ram usage:        7 bytes
 12157 ;; Hardware stack levels used: 1
 12158 ;; Hardware stack levels required when called: 5
 12159 ;; This function calls:
 12160 ;;		_EEPROM_24C1025_Write_Int
 12161 ;; This function is called by:
 12162 ;;		_Decodify_Command
 12163 ;; This function uses a non-reentrant model
 12164 ;;
 12165                           
 12166                           
 12167                           ;psect for function _EEPROM_24C1025_Fill_All
 12168  1E12                     _EEPROM_24C1025_Fill_All:
 12169                           
 12170                           ;incstack = 0
 12171                           ; Regs used in _EEPROM_24C1025_Fill_All: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
 12172                           ;EEPROM_24C1025_Fill_All@chip_add stored from wreg
 12173  1E12  1303               	bcf	3,6	;RP1=0, select bank1
 12174  1E13  00AC               	movwf	EEPROM_24C1025_Fill_All@chip_add^(0+128)
 12175                           
 12176                           ;EEPROM_24C1025.c: 368:      unsigned long mem_add;;EEPROM_24C1025.c: 369:      for(mem_
      +                          add=0;mem_add<=0x3FF;mem_add+=2)
 12177  1E14  3000               	movlw	0
 12178  1E15  00B0               	movwf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128)
 12179  1E16  3000               	movlw	0
 12180  1E17  00AF               	movwf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128)
 12181  1E18  3000               	movlw	0
 12182  1E19  00AE               	movwf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128)
 12183  1E1A  3000               	movlw	0
 12184  1E1B  00AD               	movwf	EEPROM_24C1025_Fill_All@mem_add^(0+128)
 12185  1E1C                     l5669:
 12186                           
 12187                           ;EEPROM_24C1025.c: 370:         {;EEPROM_24C1025.c: 371:         EEPROM_24C1025_Write_In
      +                          t(chip_add, mem_add, value);
 12188  1E1C  1683               	bsf	3,5	;RP0=1, select bank1
 12189  1E1D  1303               	bcf	3,6	;RP1=0, select bank1
 12190  1E1E  0830               	movf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),w
 12191  1E1F  00A3               	movwf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128)
 12192  1E20  082F               	movf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),w
 12193  1E21  00A2               	movwf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128)
 12194  1E22  082E               	movf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),w
 12195  1E23  00A1               	movwf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128)
 12196  1E24  082D               	movf	EEPROM_24C1025_Fill_All@mem_add^(0+128),w
 12197  1E25  00A0               	movwf	EEPROM_24C1025_Write_Int@mem_add^(0+128)
 12198  1E26  082B               	movf	(EEPROM_24C1025_Fill_All@value+1)^(0+128),w
 12199  1E27  00A5               	movwf	(EEPROM_24C1025_Write_Int@data+1)^(0+128)
 12200  1E28  082A               	movf	EEPROM_24C1025_Fill_All@value^(0+128),w
 12201  1E29  00A4               	movwf	EEPROM_24C1025_Write_Int@data^(0+128)
 12202  1E2A  082C               	movf	EEPROM_24C1025_Fill_All@chip_add^(0+128),w
 12203  1E2B  160A  158A  2382  160A  158A  	fcall	_EEPROM_24C1025_Write_Int
 12204  1E30  0064               	clrwdt	;# 
 12205                           
 12206                           ;EEPROM_24C1025.c: 373:         }
 12207  1E31  3002               	movlw	2
 12208  1E32  1683               	bsf	3,5	;RP0=1, select bank1
 12209  1E33  1303               	bcf	3,6	;RP1=0, select bank1
 12210  1E34  07AD               	addwf	EEPROM_24C1025_Fill_All@mem_add^(0+128),f
 12211  1E35  3000               	movlw	0
 12212  1E36  1803               	skipnc
 12213  1E37  3001               	movlw	1
 12214  1E38  07AE               	addwf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),f
 12215  1E39  3000               	movlw	0
 12216  1E3A  1803               	skipnc
 12217  1E3B  3001               	movlw	1
 12218  1E3C  07AF               	addwf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),f
 12219  1E3D  3000               	movlw	0
 12220  1E3E  1803               	skipnc
 12221  1E3F  3001               	movlw	1
 12222  1E40  07B0               	addwf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),f
 12223  1E41  0830               	movf	(EEPROM_24C1025_Fill_All@mem_add+3)^(0+128),w
 12224  1E42  1D03               	btfss	3,2
 12225  1E43  0008               	return
 12226  1E44  082F               	movf	(EEPROM_24C1025_Fill_All@mem_add+2)^(0+128),w
 12227  1E45  1D03               	btfss	3,2
 12228  1E46  0008               	return
 12229  1E47  3004               	movlw	4
 12230  1E48  022E               	subwf	(EEPROM_24C1025_Fill_All@mem_add+1)^(0+128),w
 12231  1E49  1D03               	skipz
 12232  1E4A  2E4F               	goto	u5393
 12233  1E4B  3000               	movlw	0
 12234  1E4C  022D               	subwf	EEPROM_24C1025_Fill_All@mem_add^(0+128),w
 12235  1E4D  1D03               	skipz
 12236  1E4E  2E4F               	goto	u5393
 12237  1E4F                     u5393:
 12238  1E4F  1803               	btfsc	3,0
 12239  1E50  0008               	return
 12240  1E51  2E1C               	goto	l5669
 12241  1E52                     __end_of_EEPROM_24C1025_Fill_All:
 12242                           
 12243                           	psect	text50
 12244  1B82                     __ptext50:	
 12245 ;; *************** function _EEPROM_24C1025_Write_Int *****************
 12246 ;; Defined at:
 12247 ;;		line 352 in file "EEPROM_24C1025.c"
 12248 ;; Parameters:    Size  Location     Type
 12249 ;;  chip_add        1    wreg     unsigned char 
 12250 ;;  mem_add         4    0[BANK1 ] unsigned long 
 12251 ;;  data            2    4[BANK1 ] int 
 12252 ;; Auto vars:     Size  Location     Type
 12253 ;;  chip_add        1    7[BANK1 ] unsigned char 
 12254 ;;  local           2    8[BANK1 ] unsigned char [2]
 12255 ;; Return value:  Size  Location     Type
 12256 ;;                  1    wreg      void 
 12257 ;; Registers used:
 12258 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12259 ;; Tracked objects:
 12260 ;;		On entry : 100/300
 12261 ;;		On exit  : 0/0
 12262 ;;		Unchanged: 0/0
 12263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12264 ;;      Params:         0       0       6       0       0
 12265 ;;      Locals:         0       0       3       0       0
 12266 ;;      Temps:          0       0       1       0       0
 12267 ;;      Totals:         0       0      10       0       0
 12268 ;;Total ram usage:       10 bytes
 12269 ;; Hardware stack levels used: 1
 12270 ;; Hardware stack levels required when called: 4
 12271 ;; This function calls:
 12272 ;;		_EEPROM_24C1025_Write_Buffer
 12273 ;; This function is called by:
 12274 ;;		_EEPROM_24C1025_Fill_All
 12275 ;;		_Decodify_Command
 12276 ;;		_Save_Log
 12277 ;; This function uses a non-reentrant model
 12278 ;;
 12279                           
 12280                           
 12281                           ;psect for function _EEPROM_24C1025_Write_Int
 12282  1B82                     _EEPROM_24C1025_Write_Int:
 12283                           
 12284                           ;incstack = 0
 12285                           ; Regs used in _EEPROM_24C1025_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
 12286                           ;EEPROM_24C1025_Write_Int@chip_add stored from wreg
 12287  1B82  1303               	bcf	3,6	;RP1=0, select bank1
 12288  1B83  00A7               	movwf	EEPROM_24C1025_Write_Int@chip_add^(0+128)
 12289                           
 12290                           ;EEPROM_24C1025.c: 353:      char local[2];;EEPROM_24C1025.c: 354:      local[0]=((char 
      +                          *)&data)[1];
 12291  1B84  0825               	movf	(EEPROM_24C1025_Write_Int@data^(0+128)+1),w
 12292  1B85  00A6               	movwf	??_EEPROM_24C1025_Write_Int^(0+128)
 12293  1B86  0826               	movf	??_EEPROM_24C1025_Write_Int^(0+128),w
 12294  1B87  00A8               	movwf	EEPROM_24C1025_Write_Int@local^(0+128)
 12295                           
 12296                           ;EEPROM_24C1025.c: 355:      local[1]=((char *)&data)[0];
 12297  1B88  0824               	movf	EEPROM_24C1025_Write_Int@data^(0+128),w
 12298  1B89  00A6               	movwf	??_EEPROM_24C1025_Write_Int^(0+128)
 12299  1B8A  0826               	movf	??_EEPROM_24C1025_Write_Int^(0+128),w
 12300  1B8B  00A9               	movwf	(EEPROM_24C1025_Write_Int@local^(0+128)+1)
 12301                           
 12302                           ;EEPROM_24C1025.c: 356:      EEPROM_24C1025_Write_Buffer(chip_add, mem_add, 2, local);
 12303  1B8C  0823               	movf	(EEPROM_24C1025_Write_Int@mem_add+3)^(0+128),w
 12304  1B8D  1283               	bcf	3,5	;RP0=0, select bank0
 12305  1B8E  00AD               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+3
 12306  1B8F  1683               	bsf	3,5	;RP0=1, select bank1
 12307  1B90  0822               	movf	(EEPROM_24C1025_Write_Int@mem_add+2)^(0+128),w
 12308  1B91  1283               	bcf	3,5	;RP0=0, select bank0
 12309  1B92  00AC               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+2
 12310  1B93  1683               	bsf	3,5	;RP0=1, select bank1
 12311  1B94  0821               	movf	(EEPROM_24C1025_Write_Int@mem_add+1)^(0+128),w
 12312  1B95  1283               	bcf	3,5	;RP0=0, select bank0
 12313  1B96  00AB               	movwf	EEPROM_24C1025_Write_Buffer@mem_add+1
 12314  1B97  1683               	bsf	3,5	;RP0=1, select bank1
 12315  1B98  0820               	movf	EEPROM_24C1025_Write_Int@mem_add^(0+128),w
 12316  1B99  1283               	bcf	3,5	;RP0=0, select bank0
 12317  1B9A  00AA               	movwf	EEPROM_24C1025_Write_Buffer@mem_add
 12318  1B9B  3002               	movlw	2
 12319  1B9C  1683               	bsf	3,5	;RP0=1, select bank1
 12320  1B9D  00A6               	movwf	??_EEPROM_24C1025_Write_Int^(0+128)
 12321  1B9E  0826               	movf	??_EEPROM_24C1025_Write_Int^(0+128),w
 12322  1B9F  1283               	bcf	3,5	;RP0=0, select bank0
 12323  1BA0  00AE               	movwf	EEPROM_24C1025_Write_Buffer@sizedata
 12324  1BA1  30A8               	movlw	(low (EEPROM_24C1025_Write_Int@local| 0))& (0+255)
 12325  1BA2  00AF               	movwf	EEPROM_24C1025_Write_Buffer@data
 12326  1BA3  3000               	movlw	0
 12327  1BA4  00B0               	movwf	EEPROM_24C1025_Write_Buffer@data+1
 12328  1BA5  1683               	bsf	3,5	;RP0=1, select bank1
 12329  1BA6  0827               	movf	EEPROM_24C1025_Write_Int@chip_add^(0+128),w
 12330  1BA7  160A  118A  2392   	fcall	_EEPROM_24C1025_Write_Buffer
 12331  1BAA  0008               	return
 12332  1BAB                     __end_of_EEPROM_24C1025_Write_Int:
 12333                           
 12334                           	psect	text51
 12335  1392                     __ptext51:	
 12336 ;; *************** function _EEPROM_24C1025_Write_Buffer *****************
 12337 ;; Defined at:
 12338 ;;		line 15 in file "EEPROM_24C1025.c"
 12339 ;; Parameters:    Size  Location     Type
 12340 ;;  chip_add        1    wreg     unsigned char 
 12341 ;;  mem_add         4   10[BANK0 ] unsigned long 
 12342 ;;  sizedata        1   14[BANK0 ] unsigned char 
 12343 ;;  data            2   15[BANK0 ] PTR unsigned char 
 12344 ;;		 -> usart_protocol.value(52), usart_protocol(58), EEPROM_24C1025_Write_Int@local(2), EEPROM_24C1025_Write_Byte@data(
      +1), 
 12345 ;; Auto vars:     Size  Location     Type
 12346 ;;  chip_add        1   20[BANK0 ] unsigned char 
 12347 ;;  ctrl            1   22[BANK0 ] unsigned char 
 12348 ;;  range           1   21[BANK0 ] unsigned char 
 12349 ;;  count           1   19[BANK0 ] unsigned char 
 12350 ;; Return value:  Size  Location     Type
 12351 ;;                  1    wreg      void 
 12352 ;; Registers used:
 12353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12354 ;; Tracked objects:
 12355 ;;		On entry : 0/300
 12356 ;;		On exit  : 0/0
 12357 ;;		Unchanged: 0/0
 12358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12359 ;;      Params:         0       7       0       0       0
 12360 ;;      Locals:         0       4       0       0       0
 12361 ;;      Temps:          0       2       0       0       0
 12362 ;;      Totals:         0      13       0       0       0
 12363 ;;Total ram usage:       13 bytes
 12364 ;; Hardware stack levels used: 1
 12365 ;; Hardware stack levels required when called: 3
 12366 ;; This function calls:
 12367 ;;		_I2C_Master_Start
 12368 ;;		_I2C_Master_Stop
 12369 ;;		_I2C_Master_Write
 12370 ;;		_my_delay_ms_WDT
 12371 ;; This function is called by:
 12372 ;;		_EEPROM_24C1025_Write_Byte
 12373 ;;		_EEPROM_24C1025_Write_Int
 12374 ;;		_Decodify_Command
 12375 ;; This function uses a non-reentrant model
 12376 ;;
 12377                           
 12378                           
 12379                           ;psect for function _EEPROM_24C1025_Write_Buffer
 12380  1392                     _EEPROM_24C1025_Write_Buffer:
 12381                           
 12382                           ;incstack = 0
 12383                           ; Regs used in _EEPROM_24C1025_Write_Buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
 12384                           ;EEPROM_24C1025_Write_Buffer@chip_add stored from wreg
 12385  1392  1283               	bcf	3,5	;RP0=0, select bank0
 12386  1393  1303               	bcf	3,6	;RP1=0, select bank0
 12387  1394  00B4               	movwf	EEPROM_24C1025_Write_Buffer@chip_add
 12388                           
 12389                           ;EEPROM_24C1025.c: 21:      unsigned char ctrl;;EEPROM_24C1025.c: 22:      unsigned char
      +                           count;;EEPROM_24C1025.c: 24:      Delay_Led_Memory=20;
 12390  1395  3014               	movlw	20
 12391  1396  1683               	bsf	3,5	;RP0=1, select bank1
 12392  1397  00DD               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 12393  1398  3000               	movlw	0
 12394  1399  00DE               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 12395                           
 12396                           ;EEPROM_24C1025.c: 26:      if(mem_add>0x1FFFF) return;
 12397  139A  1283               	bcf	3,5	;RP0=0, select bank0
 12398  139B  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12399  139C  1D03               	btfss	3,2
 12400  139D  0008               	return
 12401  139E  3002               	movlw	2
 12402  139F  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12403  13A0  1D03               	skipz
 12404  13A1  2BAA               	goto	u5323
 12405  13A2  3000               	movlw	0
 12406  13A3  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12407  13A4  1D03               	skipz
 12408  13A5  2BAA               	goto	u5323
 12409  13A6  3000               	movlw	0
 12410  13A7  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12411  13A8  1D03               	skipz
 12412  13A9  2BAA               	goto	u5323
 12413  13AA                     u5323:
 12414  13AA  1803               	btfsc	3,0
 12415  13AB  0008               	return
 12416                           
 12417                           ;EEPROM_24C1025.c: 28:      if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12418  13AC  1283               	bcf	3,5	;RP0=0, select bank0
 12419  13AD  1303               	bcf	3,6	;RP1=0, select bank0
 12420  13AE  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12421  13AF  1D03               	btfss	3,2
 12422  13B0  2BBF               	goto	l5567
 12423  13B1  3001               	movlw	1
 12424  13B2  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12425  13B3  1D03               	skipz
 12426  13B4  2BBD               	goto	u5333
 12427  13B5  3000               	movlw	0
 12428  13B6  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12429  13B7  1D03               	skipz
 12430  13B8  2BBD               	goto	u5333
 12431  13B9  3000               	movlw	0
 12432  13BA  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12433  13BB  1D03               	skipz
 12434  13BC  2BBD               	goto	u5333
 12435  13BD                     u5333:
 12436  13BD  1C03               	btfss	3,0
 12437  13BE  2BC6               	goto	l5569
 12438  13BF                     l5567:
 12439  13BF  3008               	movlw	8
 12440  13C0  1283               	bcf	3,5	;RP0=0, select bank0
 12441  13C1  1303               	bcf	3,6	;RP1=0, select bank0
 12442  13C2  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12443  13C3  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12444  13C4  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 12445  13C5  2BC9               	goto	l5571
 12446  13C6                     l5569:
 12447  13C6  1283               	bcf	3,5	;RP0=0, select bank0
 12448  13C7  1303               	bcf	3,6	;RP1=0, select bank0
 12449  13C8  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 12450  13C9                     l5571:
 12451                           
 12452                           ;EEPROM_24C1025.c: 29:      ctrl=chip_add;
 12453  13C9  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12454  13CA  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12455  13CB  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12456  13CC  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12457                           
 12458                           ;EEPROM_24C1025.c: 30:      ctrl<<=1;
 12459  13CD  1003               	clrc
 12460  13CE  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12461                           
 12462                           ;EEPROM_24C1025.c: 31:      ctrl |= 0xA0;
 12463  13CF  30A0               	movlw	160
 12464  13D0  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12465  13D1  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12466  13D2  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12467                           
 12468                           ;EEPROM_24C1025.c: 32:      ctrl |= range;
 12469  13D3  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12470  13D4  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12471  13D5  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12472  13D6  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12473                           
 12474                           ;EEPROM_24C1025.c: 34:      I2C_Master_Start();
 12475  13D7  160A  158A  21B4  160A  118A  	fcall	_I2C_Master_Start
 12476                           
 12477                           ;EEPROM_24C1025.c: 35:      I2C_Master_Write(ctrl);
 12478  13DC  1283               	bcf	3,5	;RP0=0, select bank0
 12479  13DD  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12480  13DE  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12481  13DF  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12482  13E0  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12483  13E1  00A3               	movwf	I2C_Master_Write@d
 12484  13E2  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12485  13E3  00A4               	movwf	I2C_Master_Write@d+1
 12486  13E4  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 12487                           
 12488                           ;EEPROM_24C1025.c: 36:      I2C_Master_Write(((char *)&mem_add)[1]);
 12489  13E9  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12490  13EA  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12491  13EB  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12492  13EC  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12493  13ED  00A3               	movwf	I2C_Master_Write@d
 12494  13EE  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12495  13EF  00A4               	movwf	I2C_Master_Write@d+1
 12496  13F0  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 12497                           
 12498                           ;EEPROM_24C1025.c: 37:      I2C_Master_Write(((char *)&mem_add)[0]);
 12499  13F5  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12500  13F6  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12501  13F7  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12502  13F8  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12503  13F9  00A3               	movwf	I2C_Master_Write@d
 12504  13FA  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12505  13FB  00A4               	movwf	I2C_Master_Write@d+1
 12506  13FC  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 12507                           
 12508                           ;EEPROM_24C1025.c: 38:      for(count=0;count<(sizedata-1);count++)
 12509  1401  01B3               	clrf	EEPROM_24C1025_Write_Buffer@count
 12510  1402                     l5633:
 12511  1402  082E               	movf	EEPROM_24C1025_Write_Buffer@sizedata,w
 12512  1403  3EFF               	addlw	255
 12513  1404  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12514  1405  30FF               	movlw	255
 12515  1406  1803               	skipnc
 12516  1407  3000               	movlw	0
 12517  1408  00B2               	movwf	??_EEPROM_24C1025_Write_Buffer+1
 12518  1409  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12519  140A  3A80               	xorlw	128
 12520  140B  3C80               	sublw	128
 12521  140C  1D03               	skipz
 12522  140D  2C10               	goto	u5375
 12523  140E  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12524  140F  0233               	subwf	EEPROM_24C1025_Write_Buffer@count,w
 12525  1410                     u5375:
 12526  1410  1803               	btfsc	3,0
 12527  1411  2CE3               	goto	l5635
 12528  1412  0064               	clrwdt	;# 
 12529                           
 12530                           ;EEPROM_24C1025.c: 41:           if(mem_add>0x1FFFF) return;
 12531  1413  1283               	bcf	3,5	;RP0=0, select bank0
 12532  1414  1303               	bcf	3,6	;RP1=0, select bank0
 12533  1415  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12534  1416  1D03               	btfss	3,2
 12535  1417  0008               	return
 12536  1418  3002               	movlw	2
 12537  1419  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12538  141A  1D03               	skipz
 12539  141B  2C24               	goto	u5343
 12540  141C  3000               	movlw	0
 12541  141D  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12542  141E  1D03               	skipz
 12543  141F  2C24               	goto	u5343
 12544  1420  3000               	movlw	0
 12545  1421  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12546  1422  1D03               	skipz
 12547  1423  2C24               	goto	u5343
 12548  1424                     u5343:
 12549  1424  1803               	btfsc	3,0
 12550  1425  0008               	return
 12551                           
 12552                           ;EEPROM_24C1025.c: 42:           if((mem_add+1)%128==0)
 12553  1426  1283               	bcf	3,5	;RP0=0, select bank0
 12554  1427  1303               	bcf	3,6	;RP1=0, select bank0
 12555  1428  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12556  1429  3E01               	addlw	1
 12557  142A  397F               	andlw	127
 12558  142B  1D03               	btfss	3,2
 12559  142C  2CB9               	goto	l5625
 12560                           
 12561                           ;EEPROM_24C1025.c: 43:             {;EEPROM_24C1025.c: 44:             I2C_Master_Write(
      +                          *data);
 12562  142D  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12563  142E  0084               	movwf	4
 12564  142F  1783               	bsf	3,7
 12565  1430  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12566  1431  1383               	bcf	3,7
 12567  1432  0800               	movf	0,w
 12568  1433  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12569  1434  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12570  1435  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12571  1436  00A3               	movwf	I2C_Master_Write@d
 12572  1437  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12573  1438  00A4               	movwf	I2C_Master_Write@d+1
 12574  1439  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 12575                           
 12576                           ;EEPROM_24C1025.c: 45:             I2C_Master_Stop();
 12577  143E  160A  158A  2171  160A  118A  	fcall	_I2C_Master_Stop
 12578                           
 12579                           ;EEPROM_24C1025.c: 47:             my_delay_ms_WDT(5);
 12580  1443  3000               	movlw	0
 12581  1444  1283               	bcf	3,5	;RP0=0, select bank0
 12582  1445  00A3               	movwf	my_delay_ms_WDT@time+3
 12583  1446  3000               	movlw	0
 12584  1447  00A2               	movwf	my_delay_ms_WDT@time+2
 12585  1448  3000               	movlw	0
 12586  1449  00A1               	movwf	my_delay_ms_WDT@time+1
 12587  144A  3005               	movlw	5
 12588  144B  00A0               	movwf	my_delay_ms_WDT@time
 12589  144C  160A  158A  2562  160A  118A  	fcall	_my_delay_ms_WDT
 12590                           
 12591                           ;EEPROM_24C1025.c: 48:             mem_add++;
 12592  1451  3001               	movlw	1
 12593  1452  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12594  1453  3000               	movlw	0
 12595  1454  1803               	skipnc
 12596  1455  3001               	movlw	1
 12597  1456  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12598  1457  3000               	movlw	0
 12599  1458  1803               	skipnc
 12600  1459  3001               	movlw	1
 12601  145A  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12602  145B  3000               	movlw	0
 12603  145C  1803               	skipnc
 12604  145D  3001               	movlw	1
 12605  145E  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12606                           
 12607                           ;EEPROM_24C1025.c: 49:             data++;
 12608  145F  3001               	movlw	1
 12609  1460  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12610  1461  1803               	skipnc
 12611  1462  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 12612  1463  3000               	movlw	0
 12613  1464  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 12614                           
 12615                           ;EEPROM_24C1025.c: 50:             if(mem_add>0xFFFF) range=0x08; else range=0x00;
 12616  1465  082D               	movf	EEPROM_24C1025_Write_Buffer@mem_add+3,w
 12617  1466  1D03               	btfss	3,2
 12618  1467  2C76               	goto	l5605
 12619  1468  3001               	movlw	1
 12620  1469  022C               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+2,w
 12621  146A  1D03               	skipz
 12622  146B  2C74               	goto	u5363
 12623  146C  3000               	movlw	0
 12624  146D  022B               	subwf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12625  146E  1D03               	skipz
 12626  146F  2C74               	goto	u5363
 12627  1470  3000               	movlw	0
 12628  1471  022A               	subwf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12629  1472  1D03               	skipz
 12630  1473  2C74               	goto	u5363
 12631  1474                     u5363:
 12632  1474  1C03               	btfss	3,0
 12633  1475  2C7D               	goto	l5607
 12634  1476                     l5605:
 12635  1476  3008               	movlw	8
 12636  1477  1283               	bcf	3,5	;RP0=0, select bank0
 12637  1478  1303               	bcf	3,6	;RP1=0, select bank0
 12638  1479  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12639  147A  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12640  147B  00B5               	movwf	EEPROM_24C1025_Write_Buffer@range
 12641  147C  2C80               	goto	l5609
 12642  147D                     l5607:
 12643  147D  1283               	bcf	3,5	;RP0=0, select bank0
 12644  147E  1303               	bcf	3,6	;RP1=0, select bank0
 12645  147F  01B5               	clrf	EEPROM_24C1025_Write_Buffer@range
 12646  1480                     l5609:
 12647                           
 12648                           ;EEPROM_24C1025.c: 51:             ctrl=chip_add;
 12649  1480  0834               	movf	EEPROM_24C1025_Write_Buffer@chip_add,w
 12650  1481  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12651  1482  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12652  1483  00B6               	movwf	EEPROM_24C1025_Write_Buffer@ctrl
 12653                           
 12654                           ;EEPROM_24C1025.c: 52:             ctrl<<=1;
 12655  1484  1003               	clrc
 12656  1485  0DB6               	rlf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12657                           
 12658                           ;EEPROM_24C1025.c: 53:             ctrl |= 0xA0;
 12659  1486  30A0               	movlw	160
 12660  1487  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12661  1488  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12662  1489  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12663                           
 12664                           ;EEPROM_24C1025.c: 54:             ctrl |= range;
 12665  148A  0835               	movf	EEPROM_24C1025_Write_Buffer@range,w
 12666  148B  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12667  148C  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12668  148D  04B6               	iorwf	EEPROM_24C1025_Write_Buffer@ctrl,f
 12669                           
 12670                           ;EEPROM_24C1025.c: 56:             I2C_Master_Start();
 12671  148E  160A  158A  21B4  160A  118A  	fcall	_I2C_Master_Start
 12672                           
 12673                           ;EEPROM_24C1025.c: 57:             I2C_Master_Write(ctrl);
 12674  1493  1283               	bcf	3,5	;RP0=0, select bank0
 12675  1494  0836               	movf	EEPROM_24C1025_Write_Buffer@ctrl,w
 12676  1495  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12677  1496  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12678  1497  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12679  1498  00A3               	movwf	I2C_Master_Write@d
 12680  1499  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12681  149A  00A4               	movwf	I2C_Master_Write@d+1
 12682  149B  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 12683                           
 12684                           ;EEPROM_24C1025.c: 58:             I2C_Master_Write(((char *)&mem_add)[1]);
 12685  14A0  082B               	movf	EEPROM_24C1025_Write_Buffer@mem_add+1,w
 12686  14A1  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12687  14A2  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12688  14A3  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12689  14A4  00A3               	movwf	I2C_Master_Write@d
 12690  14A5  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12691  14A6  00A4               	movwf	I2C_Master_Write@d+1
 12692  14A7  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 12693                           
 12694                           ;EEPROM_24C1025.c: 59:             I2C_Master_Write(((char *)&mem_add)[0]);
 12695  14AC  082A               	movf	EEPROM_24C1025_Write_Buffer@mem_add,w
 12696  14AD  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12697  14AE  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12698  14AF  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12699  14B0  00A3               	movwf	I2C_Master_Write@d
 12700  14B1  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12701  14B2  00A4               	movwf	I2C_Master_Write@d+1
 12702  14B3  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 12703                           
 12704                           ;EEPROM_24C1025.c: 60:             }
 12705  14B8  2CDE               	goto	l5631
 12706  14B9                     l5625:
 12707                           
 12708                           ;EEPROM_24C1025.c: 62:             {;EEPROM_24C1025.c: 63:             I2C_Master_Write(
      +                          *data);
 12709  14B9  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12710  14BA  0084               	movwf	4
 12711  14BB  1783               	bsf	3,7
 12712  14BC  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12713  14BD  1383               	bcf	3,7
 12714  14BE  0800               	movf	0,w
 12715  14BF  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12716  14C0  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12717  14C1  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12718  14C2  00A3               	movwf	I2C_Master_Write@d
 12719  14C3  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12720  14C4  00A4               	movwf	I2C_Master_Write@d+1
 12721  14C5  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 12722                           
 12723                           ;EEPROM_24C1025.c: 64:             data++;
 12724  14CA  3001               	movlw	1
 12725  14CB  07AF               	addwf	EEPROM_24C1025_Write_Buffer@data,f
 12726  14CC  1803               	skipnc
 12727  14CD  0AB0               	incf	EEPROM_24C1025_Write_Buffer@data+1,f
 12728  14CE  3000               	movlw	0
 12729  14CF  07B0               	addwf	EEPROM_24C1025_Write_Buffer@data+1,f
 12730                           
 12731                           ;EEPROM_24C1025.c: 65:             mem_add++;
 12732  14D0  3001               	movlw	1
 12733  14D1  07AA               	addwf	EEPROM_24C1025_Write_Buffer@mem_add,f
 12734  14D2  3000               	movlw	0
 12735  14D3  1803               	skipnc
 12736  14D4  3001               	movlw	1
 12737  14D5  07AB               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+1,f
 12738  14D6  3000               	movlw	0
 12739  14D7  1803               	skipnc
 12740  14D8  3001               	movlw	1
 12741  14D9  07AC               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+2,f
 12742  14DA  3000               	movlw	0
 12743  14DB  1803               	skipnc
 12744  14DC  3001               	movlw	1
 12745  14DD  07AD               	addwf	EEPROM_24C1025_Write_Buffer@mem_add+3,f
 12746  14DE                     l5631:
 12747                           
 12748                           ;EEPROM_24C1025.c: 67:      }
 12749  14DE  3001               	movlw	1
 12750  14DF  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12751  14E0  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12752  14E1  07B3               	addwf	EEPROM_24C1025_Write_Buffer@count,f
 12753  14E2  2C02               	goto	l5633
 12754  14E3                     l5635:
 12755                           
 12756                           ;EEPROM_24C1025.c: 68:      I2C_Master_Write(*data);
 12757  14E3  1283               	bcf	3,5	;RP0=0, select bank0
 12758  14E4  1303               	bcf	3,6	;RP1=0, select bank0
 12759  14E5  082F               	movf	EEPROM_24C1025_Write_Buffer@data,w
 12760  14E6  0084               	movwf	4
 12761  14E7  1783               	bsf	3,7
 12762  14E8  1C30               	btfss	EEPROM_24C1025_Write_Buffer@data+1,0
 12763  14E9  1383               	bcf	3,7
 12764  14EA  0800               	movf	0,w
 12765  14EB  00B1               	movwf	??_EEPROM_24C1025_Write_Buffer
 12766  14EC  01B2               	clrf	??_EEPROM_24C1025_Write_Buffer+1
 12767  14ED  0831               	movf	??_EEPROM_24C1025_Write_Buffer,w
 12768  14EE  00A3               	movwf	I2C_Master_Write@d
 12769  14EF  0832               	movf	??_EEPROM_24C1025_Write_Buffer+1,w
 12770  14F0  00A4               	movwf	I2C_Master_Write@d+1
 12771  14F1  160A  158A  218E  160A  118A  	fcall	_I2C_Master_Write
 12772                           
 12773                           ;EEPROM_24C1025.c: 69:      I2C_Master_Stop();
 12774  14F6  160A  158A  2171  160A  118A  	fcall	_I2C_Master_Stop
 12775                           
 12776                           ;EEPROM_24C1025.c: 71:      my_delay_ms_WDT(5);
 12777  14FB  3000               	movlw	0
 12778  14FC  1283               	bcf	3,5	;RP0=0, select bank0
 12779  14FD  00A3               	movwf	my_delay_ms_WDT@time+3
 12780  14FE  3000               	movlw	0
 12781  14FF  00A2               	movwf	my_delay_ms_WDT@time+2
 12782  1500  3000               	movlw	0
 12783  1501  00A1               	movwf	my_delay_ms_WDT@time+1
 12784  1502  3005               	movlw	5
 12785  1503  00A0               	movwf	my_delay_ms_WDT@time
 12786  1504  160A  158A  2562   	fcall	_my_delay_ms_WDT
 12787  1507  0008               	return
 12788  1508                     __end_of_EEPROM_24C1025_Write_Buffer:
 12789                           
 12790                           	psect	text52
 12791  1D62                     __ptext52:	
 12792 ;; *************** function _my_delay_ms_WDT *****************
 12793 ;; Defined at:
 12794 ;;		line 13 in file "my_delay.c"
 12795 ;; Parameters:    Size  Location     Type
 12796 ;;  time            4    0[BANK0 ] long 
 12797 ;; Auto vars:     Size  Location     Type
 12798 ;;  i               4    6[BANK0 ] long 
 12799 ;; Return value:  Size  Location     Type
 12800 ;;                  1    wreg      void 
 12801 ;; Registers used:
 12802 ;;		wreg, btemp+1
 12803 ;; Tracked objects:
 12804 ;;		On entry : 300/0
 12805 ;;		On exit  : 300/0
 12806 ;;		Unchanged: 0/0
 12807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12808 ;;      Params:         0       4       0       0       0
 12809 ;;      Locals:         0       4       0       0       0
 12810 ;;      Temps:          0       2       0       0       0
 12811 ;;      Totals:         0      10       0       0       0
 12812 ;;Total ram usage:       10 bytes
 12813 ;; Hardware stack levels used: 1
 12814 ;; Hardware stack levels required when called: 1
 12815 ;; This function calls:
 12816 ;;		Nothing
 12817 ;; This function is called by:
 12818 ;;		_EEPROM_24C1025_Write_Buffer
 12819 ;;		_EEPROM_24C1025_Read_Buffer
 12820 ;;		_EEPROM_24C1025_Write_Str
 12821 ;;		_main
 12822 ;; This function uses a non-reentrant model
 12823 ;;
 12824                           
 12825                           
 12826                           ;psect for function _my_delay_ms_WDT
 12827  1D62                     _my_delay_ms_WDT:
 12828                           
 12829                           ;my_delay.c: 14:         long i;;my_delay.c: 15:         for(i=0;i<time;i++)
 12830                           
 12831                           ;incstack = 0
 12832                           ; Regs used in _my_delay_ms_WDT: [wreg+btemp+1]
 12833  1D62  3000               	movlw	0
 12834  1D63  00A9               	movwf	my_delay_ms_WDT@i+3
 12835  1D64  3000               	movlw	0
 12836  1D65  00A8               	movwf	my_delay_ms_WDT@i+2
 12837  1D66  3000               	movlw	0
 12838  1D67  00A7               	movwf	my_delay_ms_WDT@i+1
 12839  1D68  3000               	movlw	0
 12840  1D69  00A6               	movwf	my_delay_ms_WDT@i
 12841  1D6A                     l3585:
 12842  1D6A  0829               	movf	my_delay_ms_WDT@i+3,w
 12843  1D6B  3A80               	xorlw	128
 12844  1D6C  00FF               	movwf	127
 12845  1D6D  0823               	movf	my_delay_ms_WDT@time+3,w
 12846  1D6E  3A80               	xorlw	128
 12847  1D6F  027F               	subwf	127,w
 12848  1D70  1D03               	skipz
 12849  1D71  2D7C               	goto	u2693
 12850  1D72  0822               	movf	my_delay_ms_WDT@time+2,w
 12851  1D73  0228               	subwf	my_delay_ms_WDT@i+2,w
 12852  1D74  1D03               	skipz
 12853  1D75  2D7C               	goto	u2693
 12854  1D76  0821               	movf	my_delay_ms_WDT@time+1,w
 12855  1D77  0227               	subwf	my_delay_ms_WDT@i+1,w
 12856  1D78  1D03               	skipz
 12857  1D79  2D7C               	goto	u2693
 12858  1D7A  0820               	movf	my_delay_ms_WDT@time,w
 12859  1D7B  0226               	subwf	my_delay_ms_WDT@i,w
 12860  1D7C                     u2693:
 12861  1D7C  1803               	btfsc	3,0
 12862  1D7D  0008               	return
 12863  1D7E  0064               	clrwdt	;# 
 12864                           
 12865                           ;my_delay.c: 18:             _delay((unsigned long)((1)*(8000000/4000.0)));
 12866  1D7F  3003               	movlw	3
 12867  1D80  1283               	bcf	3,5	;RP0=0, select bank0
 12868  1D81  1303               	bcf	3,6	;RP1=0, select bank0
 12869  1D82  00A5               	movwf	??_my_delay_ms_WDT+1
 12870  1D83  3097               	movlw	151
 12871  1D84  00A4               	movwf	??_my_delay_ms_WDT
 12872  1D85                     u5617:
 12873  1D85  0BA4               	decfsz	??_my_delay_ms_WDT,f
 12874  1D86  2D85               	goto	u5617
 12875  1D87  0BA5               	decfsz	??_my_delay_ms_WDT+1,f
 12876  1D88  2D85               	goto	u5617
 12877                           
 12878                           ;my_delay.c: 19:             }
 12879  1D89  3001               	movlw	1
 12880  1D8A  1283               	bcf	3,5	;RP0=0, select bank0
 12881  1D8B  1303               	bcf	3,6	;RP1=0, select bank0
 12882  1D8C  07A6               	addwf	my_delay_ms_WDT@i,f
 12883  1D8D  3000               	movlw	0
 12884  1D8E  1803               	skipnc
 12885  1D8F  3001               	movlw	1
 12886  1D90  07A7               	addwf	my_delay_ms_WDT@i+1,f
 12887  1D91  3000               	movlw	0
 12888  1D92  1803               	skipnc
 12889  1D93  3001               	movlw	1
 12890  1D94  07A8               	addwf	my_delay_ms_WDT@i+2,f
 12891  1D95  3000               	movlw	0
 12892  1D96  1803               	skipnc
 12893  1D97  3001               	movlw	1
 12894  1D98  07A9               	addwf	my_delay_ms_WDT@i+3,f
 12895  1D99  2D6A               	goto	l3585
 12896  1D9A                     __end_of_my_delay_ms_WDT:
 12897                           
 12898                           	psect	text53
 12899  198E                     __ptext53:	
 12900 ;; *************** function _I2C_Master_Write *****************
 12901 ;; Defined at:
 12902 ;;		line 79 in file "I2C.c"
 12903 ;; Parameters:    Size  Location     Type
 12904 ;;  d               2    3[BANK0 ] unsigned int 
 12905 ;; Auto vars:     Size  Location     Type
 12906 ;;		None
 12907 ;; Return value:  Size  Location     Type
 12908 ;;                  1    wreg      void 
 12909 ;; Registers used:
 12910 ;;		wreg, status,2, status,0, pclath, cstack
 12911 ;; Tracked objects:
 12912 ;;		On entry : 300/0
 12913 ;;		On exit  : 300/0
 12914 ;;		Unchanged: 0/0
 12915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12916 ;;      Params:         0       2       0       0       0
 12917 ;;      Locals:         0       0       0       0       0
 12918 ;;      Temps:          0       0       0       0       0
 12919 ;;      Totals:         0       2       0       0       0
 12920 ;;Total ram usage:        2 bytes
 12921 ;; Hardware stack levels used: 1
 12922 ;; Hardware stack levels required when called: 2
 12923 ;; This function calls:
 12924 ;;		_I2C_Master_Wait
 12925 ;; This function is called by:
 12926 ;;		_EEPROM_24C1025_Write_Buffer
 12927 ;;		_EEPROM_24C1025_Read_Buffer
 12928 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12929 ;;		_EEPROM_24C1025_Write_Str
 12930 ;;		_EEPROM_24C1025_Read_Str
 12931 ;; This function uses a non-reentrant model
 12932 ;;
 12933                           
 12934                           
 12935                           ;psect for function _I2C_Master_Write
 12936  198E                     _I2C_Master_Write:
 12937                           
 12938                           ;I2C.c: 79: void I2C_Master_Write(unsigned d);I2C.c: 80: {;I2C.c: 81:   if(I2C_Master_Wa
      +                          it())
 12939                           
 12940                           ;incstack = 0
 12941                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 12942  198E  160A  158A  22CC  160A  158A  	fcall	_I2C_Master_Wait
 12943  1993  3A00               	xorlw	0
 12944  1994  1903               	skipnz
 12945  1995  0008               	return
 12946                           
 12947                           ;I2C.c: 82:     {;I2C.c: 83:     SSPBUF = d;
 12948  1996  0823               	movf	I2C_Master_Write@d,w
 12949  1997  0093               	movwf	19	;volatile
 12950  1998  0008               	return
 12951  1999                     __end_of_I2C_Master_Write:
 12952                           
 12953                           	psect	text54
 12954  1971                     __ptext54:	
 12955 ;; *************** function _I2C_Master_Stop *****************
 12956 ;; Defined at:
 12957 ;;		line 70 in file "I2C.c"
 12958 ;; Parameters:    Size  Location     Type
 12959 ;;		None
 12960 ;; Auto vars:     Size  Location     Type
 12961 ;;		None
 12962 ;; Return value:  Size  Location     Type
 12963 ;;                  1    wreg      void 
 12964 ;; Registers used:
 12965 ;;		wreg, status,2, status,0, pclath, cstack
 12966 ;; Tracked objects:
 12967 ;;		On entry : 300/800
 12968 ;;		On exit  : 200/0
 12969 ;;		Unchanged: 0/0
 12970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12971 ;;      Params:         0       0       0       0       0
 12972 ;;      Locals:         0       0       0       0       0
 12973 ;;      Temps:          0       0       0       0       0
 12974 ;;      Totals:         0       0       0       0       0
 12975 ;;Total ram usage:        0 bytes
 12976 ;; Hardware stack levels used: 1
 12977 ;; Hardware stack levels required when called: 2
 12978 ;; This function calls:
 12979 ;;		_I2C_Master_Wait
 12980 ;; This function is called by:
 12981 ;;		_EEPROM_24C1025_Write_Buffer
 12982 ;;		_EEPROM_24C1025_Read_Buffer
 12983 ;;		_EEPROM_24C1025_Read_Buffer_USART
 12984 ;;		_EEPROM_24C1025_Write_Str
 12985 ;;		_EEPROM_24C1025_Read_Str
 12986 ;; This function uses a non-reentrant model
 12987 ;;
 12988                           
 12989                           
 12990                           ;psect for function _I2C_Master_Stop
 12991  1971                     _I2C_Master_Stop:
 12992                           
 12993                           ;I2C.c: 72:   if(I2C_Master_Wait())
 12994                           
 12995                           ;incstack = 0
 12996                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 12997  1971  160A  158A  22CC   	fcall	_I2C_Master_Wait
 12998  1974  3A00               	xorlw	0
 12999                           
 13000                           ;I2C.c: 73:     {;I2C.c: 74:     SSPCON2bits.PEN = 1;
 13001  1975  1683               	bsf	3,5	;RP0=1, select bank1
 13002  1976  1D03               	btfss	3,2
 13003  1977  1511               	bsf	17,2	;volatile
 13004                           
 13005                           ;I2C.c: 76:   INTCONbits.GIE=1;
 13006                           
 13007                           ;I2C.c: 75:     }
 13008  1978  178B               	bsf	11,7	;volatile
 13009  1979  0008               	return
 13010  197A                     __end_of_I2C_Master_Stop:
 13011                           
 13012                           	psect	text55
 13013  19B4                     __ptext55:	
 13014 ;; *************** function _I2C_Master_Start *****************
 13015 ;; Defined at:
 13016 ;;		line 52 in file "I2C.c"
 13017 ;; Parameters:    Size  Location     Type
 13018 ;;		None
 13019 ;; Auto vars:     Size  Location     Type
 13020 ;;		None
 13021 ;; Return value:  Size  Location     Type
 13022 ;;                  1    wreg      void 
 13023 ;; Registers used:
 13024 ;;		wreg, status,2, status,0, pclath, cstack
 13025 ;; Tracked objects:
 13026 ;;		On entry : 300/0
 13027 ;;		On exit  : 200/0
 13028 ;;		Unchanged: 0/0
 13029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13030 ;;      Params:         0       0       0       0       0
 13031 ;;      Locals:         0       0       0       0       0
 13032 ;;      Temps:          0       0       0       0       0
 13033 ;;      Totals:         0       0       0       0       0
 13034 ;;Total ram usage:        0 bytes
 13035 ;; Hardware stack levels used: 1
 13036 ;; Hardware stack levels required when called: 2
 13037 ;; This function calls:
 13038 ;;		_I2C_Master_Wait
 13039 ;; This function is called by:
 13040 ;;		_EEPROM_24C1025_Write_Buffer
 13041 ;;		_EEPROM_24C1025_Read_Buffer
 13042 ;;		_EEPROM_24C1025_Read_Buffer_USART
 13043 ;;		_EEPROM_24C1025_Write_Str
 13044 ;;		_EEPROM_24C1025_Read_Str
 13045 ;; This function uses a non-reentrant model
 13046 ;;
 13047                           
 13048                           
 13049                           ;psect for function _I2C_Master_Start
 13050  19B4                     _I2C_Master_Start:
 13051                           
 13052                           ;I2C.c: 54:   INTCONbits.GIE=0;
 13053                           
 13054                           ;incstack = 0
 13055                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 13056  19B4  138B               	bcf	11,7	;volatile
 13057                           
 13058                           ;I2C.c: 55:   Delay_Led_Memory=20;
 13059  19B5  3014               	movlw	20
 13060  19B6  1683               	bsf	3,5	;RP0=1, select bank1
 13061  19B7  00DD               	movwf	_Delay_Led_Memory^(0+128)	;volatile
 13062  19B8  3000               	movlw	0
 13063  19B9  00DE               	movwf	(_Delay_Led_Memory^(0+128)+1)	;volatile
 13064                           
 13065                           ;I2C.c: 56:   if(I2C_Master_Wait())
 13066  19BA  160A  158A  22CC  160A  158A  	fcall	_I2C_Master_Wait
 13067  19BF  3A00               	xorlw	0
 13068  19C0  1903               	skipnz
 13069  19C1  0008               	return
 13070                           
 13071                           ;I2C.c: 57:     {;I2C.c: 58:     SSPCON2bits.SEN = 1;
 13072  19C2  1683               	bsf	3,5	;RP0=1, select bank1
 13073  19C3  1411               	bsf	17,0	;volatile
 13074  19C4  0008               	return
 13075  19C5                     __end_of_I2C_Master_Start:
 13076                           
 13077                           	psect	text56
 13078  1ACC                     __ptext56:	
 13079 ;; *************** function _I2C_Master_Wait *****************
 13080 ;; Defined at:
 13081 ;;		line 37 in file "I2C.c"
 13082 ;; Parameters:    Size  Location     Type
 13083 ;;		None
 13084 ;; Auto vars:     Size  Location     Type
 13085 ;;  tempo           1    2[BANK0 ] unsigned char 
 13086 ;; Return value:  Size  Location     Type
 13087 ;;                  1    wreg      unsigned char 
 13088 ;; Registers used:
 13089 ;;		wreg, status,2, status,0
 13090 ;; Tracked objects:
 13091 ;;		On entry : 200/0
 13092 ;;		On exit  : 300/0
 13093 ;;		Unchanged: 0/0
 13094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13095 ;;      Params:         0       0       0       0       0
 13096 ;;      Locals:         0       1       0       0       0
 13097 ;;      Temps:          0       2       0       0       0
 13098 ;;      Totals:         0       3       0       0       0
 13099 ;;Total ram usage:        3 bytes
 13100 ;; Hardware stack levels used: 1
 13101 ;; Hardware stack levels required when called: 1
 13102 ;; This function calls:
 13103 ;;		Nothing
 13104 ;; This function is called by:
 13105 ;;		_I2C_Master_Start
 13106 ;;		_I2C_Master_RepeatedStart
 13107 ;;		_I2C_Master_Stop
 13108 ;;		_I2C_Master_Write
 13109 ;;		_I2C_Master_Read
 13110 ;; This function uses a non-reentrant model
 13111 ;;
 13112                           
 13113                           
 13114                           ;psect for function _I2C_Master_Wait
 13115  1ACC                     _I2C_Master_Wait:
 13116                           
 13117                           ;I2C.c: 39:   char tempo;;I2C.c: 40:   tempo=200;
 13118                           
 13119                           ;incstack = 0
 13120                           ; Regs used in _I2C_Master_Wait: [wreg+status,2+status,0]
 13121  1ACC  30C8               	movlw	200
 13122  1ACD  1283               	bcf	3,5	;RP0=0, select bank0
 13123  1ACE  00A0               	movwf	??_I2C_Master_Wait
 13124  1ACF  0820               	movf	??_I2C_Master_Wait,w
 13125  1AD0  00A2               	movwf	I2C_Master_Wait@tempo
 13126                           
 13127                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 13128  1AD1  2ADE               	goto	l3557
 13129  1AD2                     l3553:
 13130                           
 13131                           ;I2C.c: 44:          tempo--;
 13132  1AD2  3001               	movlw	1
 13133  1AD3  02A2               	subwf	I2C_Master_Wait@tempo,f
 13134                           
 13135                           ;I2C.c: 47:       _delay((unsigned long)((1)*(8000000/4000.0)));
 13136  1AD4  3003               	movlw	3
 13137  1AD5  1283               	bcf	3,5	;RP0=0, select bank0
 13138  1AD6  1303               	bcf	3,6	;RP1=0, select bank0
 13139  1AD7  00A1               	movwf	??_I2C_Master_Wait+1
 13140  1AD8  3097               	movlw	151
 13141  1AD9  00A0               	movwf	??_I2C_Master_Wait
 13142  1ADA                     u5627:
 13143  1ADA  0BA0               	decfsz	??_I2C_Master_Wait,f
 13144  1ADB  2ADA               	goto	u5627
 13145  1ADC  0BA1               	decfsz	??_I2C_Master_Wait+1,f
 13146  1ADD  2ADA               	goto	u5627
 13147  1ADE                     l3557:
 13148                           
 13149                           ;I2C.c: 41:   while ((SSPSTAT & 0b00000100) || (SSPCON2 & 0b00011111))
 13150  1ADE  1683               	bsf	3,5	;RP0=1, select bank1
 13151  1ADF  1303               	bcf	3,6	;RP1=0, select bank1
 13152  1AE0  1914               	btfsc	20,2	;volatile
 13153  1AE1  2AE6               	goto	l3551
 13154  1AE2  0811               	movf	17,w	;volatile
 13155  1AE3  391F               	andlw	31
 13156  1AE4  1903               	btfsc	3,2
 13157  1AE5  2AEA               	goto	l3561
 13158  1AE6                     l3551:
 13159                           
 13160                           ;I2C.c: 42:       {;I2C.c: 43:       if(tempo)
 13161  1AE6  1283               	bcf	3,5	;RP0=0, select bank0
 13162  1AE7  0822               	movf	I2C_Master_Wait@tempo,w
 13163  1AE8  1D03               	btfss	3,2
 13164  1AE9  2AD2               	goto	l3553
 13165  1AEA                     l3561:
 13166                           
 13167                           ;I2C.c: 49:   return tempo ;
 13168  1AEA  1283               	bcf	3,5	;RP0=0, select bank0
 13169  1AEB  0822               	movf	I2C_Master_Wait@tempo,w
 13170  1AEC  0008               	return
 13171  1AED                     __end_of_I2C_Master_Wait:
 13172                           
 13173                           	psect	text57
 13174  1983                     __ptext57:	
 13175 ;; *************** function _ADC_init *****************
 13176 ;; Defined at:
 13177 ;;		line 10 in file "adc.c"
 13178 ;; Parameters:    Size  Location     Type
 13179 ;;		None
 13180 ;; Auto vars:     Size  Location     Type
 13181 ;;		None
 13182 ;; Return value:  Size  Location     Type
 13183 ;;                  1    wreg      void 
 13184 ;; Registers used:
 13185 ;;		wreg, status,2, status,0
 13186 ;; Tracked objects:
 13187 ;;		On entry : 0/100
 13188 ;;		On exit  : 300/0
 13189 ;;		Unchanged: 0/0
 13190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13191 ;;      Params:         0       0       0       0       0
 13192 ;;      Locals:         0       0       0       0       0
 13193 ;;      Temps:          0       0       0       0       0
 13194 ;;      Totals:         0       0       0       0       0
 13195 ;;Total ram usage:        0 bytes
 13196 ;; Hardware stack levels used: 1
 13197 ;; Hardware stack levels required when called: 1
 13198 ;; This function calls:
 13199 ;;		Nothing
 13200 ;; This function is called by:
 13201 ;;		_main
 13202 ;; This function uses a non-reentrant model
 13203 ;;
 13204                           
 13205                           
 13206                           ;psect for function _ADC_init
 13207  1983                     _ADC_init:
 13208                           
 13209                           ;adc.c: 11:      ADCON0bits.ADCS=3;
 13210                           
 13211                           ;incstack = 0
 13212                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
 13213  1983  30C0               	movlw	192
 13214  1984  1283               	bcf	3,5	;RP0=0, select bank0
 13215  1985  1303               	bcf	3,6	;RP1=0, select bank0
 13216  1986  049F               	iorwf	31,f	;volatile
 13217                           
 13218                           ;adc.c: 12:      ADCON1=0b10000000;
 13219  1987  3080               	movlw	128
 13220  1988  1683               	bsf	3,5	;RP0=1, select bank1
 13221  1989  009F               	movwf	31	;volatile
 13222                           
 13223                           ;adc.c: 13:      ADCON1bits.ADFM=1;
 13224  198A  179F               	bsf	31,7	;volatile
 13225                           
 13226                           ;adc.c: 14:      ADCON0bits.ADON=1;
 13227  198B  1283               	bcf	3,5	;RP0=0, select bank0
 13228  198C  141F               	bsf	31,0	;volatile
 13229  198D  0008               	return
 13230  198E                     __end_of_ADC_init:
 13231                           
 13232                           	psect	text58
 13233  11A9                     __ptext58:	
 13234 ;; *************** function _isr *****************
 13235 ;; Defined at:
 13236 ;;		line 29 in file "isr.c"
 13237 ;; Parameters:    Size  Location     Type
 13238 ;;		None
 13239 ;; Auto vars:     Size  Location     Type
 13240 ;;  tempo           2    6[COMMON] unsigned int 
 13241 ;; Return value:  Size  Location     Type
 13242 ;;                  1    wreg      void 
 13243 ;; Registers used:
 13244 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 13245 ;; Tracked objects:
 13246 ;;		On entry : 0/0
 13247 ;;		On exit  : 300/0
 13248 ;;		Unchanged: 0/0
 13249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13250 ;;      Params:         0       0       0       0       0
 13251 ;;      Locals:         2       0       0       0       0
 13252 ;;      Temps:          6       0       0       0       0
 13253 ;;      Totals:         8       0       0       0       0
 13254 ;;Total ram usage:        8 bytes
 13255 ;; Hardware stack levels used: 1
 13256 ;; This function calls:
 13257 ;;		Nothing
 13258 ;; This function is called by:
 13259 ;;		Interrupt level 1
 13260 ;; This function uses a non-reentrant model
 13261 ;;
 13262                           
 13263                           
 13264                           ;psect for function _isr
 13265  11A9                     _isr:
 13266                           
 13267                           ;isr.c: 31: unsigned int tempo;;isr.c: 34:     if(INTCONbits.INTF)
 13268  11A9  188B               	btfsc	11,1	;volatile
 13269                           
 13270                           ;isr.c: 35:       {;isr.c: 36:       INTCONbits.INTF=0;
 13271  11AA  108B               	bcf	11,1	;volatile
 13272                           
 13273                           ;isr.c: 39:     if(PIR1bits.TMR1IF)
 13274                           
 13275                           ;isr.c: 37:       }
 13276  11AB  1C0C               	btfss	12,0	;volatile
 13277  11AC  2A24               	goto	i1l5501
 13278                           
 13279                           ;isr.c: 40:                 {;isr.c: 41:                 TMR1H=0xB1;
 13280  11AD  30B1               	movlw	177
 13281  11AE  008F               	movwf	15	;volatile
 13282                           
 13283                           ;isr.c: 42:                 TMR1L=0xF3;
 13284  11AF  30F3               	movlw	243
 13285  11B0  008E               	movwf	14	;volatile
 13286                           
 13287                           ;isr.c: 43:                 PIR1bits.TMR1IF=0;
 13288  11B1  100C               	bcf	12,0	;volatile
 13289                           
 13290                           ;isr.c: 45:                 if(generic_status.flag_main_loop_WDT==1)
 13291  11B2  1683               	bsf	3,5	;RP0=1, select bank1
 13292  11B3  1FE4               	btfss	_generic_status^(0+128),7
 13293  11B4  29B7               	goto	i1l5457
 13294                           
 13295                           ;isr.c: 46:                   {;isr.c: 47:                   generic_status.flag_main_lo
      +                          op_WDT=0;
 13296  11B5  13E4               	bcf	_generic_status^(0+128),7
 13297  11B6  0064               	clrwdt	;# 
 13298  11B7                     i1l5457:
 13299                           
 13300                           ;isr.c: 51:                 Delay_Led_Tmr0+=10;
 13301  11B7  300A               	movlw	10
 13302  11B8  07F8               	addwf	_Delay_Led_Tmr0,f	;volatile
 13303  11B9  1803               	skipnc
 13304  11BA  0AF9               	incf	_Delay_Led_Tmr0+1,f	;volatile
 13305  11BB  3000               	movlw	0
 13306  11BC  07F9               	addwf	_Delay_Led_Tmr0+1,f	;volatile
 13307                           
 13308                           ;isr.c: 52:                 if(Delay_Led_Tmr0>=1000)
 13309  11BD  3003               	movlw	3
 13310  11BE  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13311  11BF  30E8               	movlw	232
 13312  11C0  1903               	skipnz
 13313  11C1  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13314  11C2  1C03               	skipc
 13315  11C3  29C6               	goto	i1l5461
 13316                           
 13317                           ;isr.c: 53:                     Delay_Led_Tmr0=0;
 13318  11C4  01F8               	clrf	_Delay_Led_Tmr0	;volatile
 13319  11C5  01F9               	clrf	_Delay_Led_Tmr0+1	;volatile
 13320  11C6                     i1l5461:
 13321                           
 13322                           ;isr.c: 54:                 if(Delay_Led_Tmr0<500)
 13323  11C6  3001               	movlw	1
 13324  11C7  0279               	subwf	_Delay_Led_Tmr0+1,w	;volatile
 13325  11C8  30F4               	movlw	244
 13326  11C9  1903               	skipnz
 13327  11CA  0278               	subwf	_Delay_Led_Tmr0,w	;volatile
 13328  11CB  1803               	skipnc
 13329  11CC  29D1               	goto	i1l644
 13330                           
 13331                           ;isr.c: 55:                    PORTBbits.RB7=1;
 13332  11CD  1283               	bcf	3,5	;RP0=0, select bank0
 13333  11CE  1303               	bcf	3,6	;RP1=0, select bank0
 13334  11CF  1786               	bsf	6,7	;volatile
 13335  11D0  29D4               	goto	i1l5465
 13336  11D1                     i1l644:	
 13337                           ;isr.c: 56:                 else
 13338                           
 13339                           
 13340                           ;isr.c: 57:                    PORTBbits.RB7=0;
 13341  11D1  1283               	bcf	3,5	;RP0=0, select bank0
 13342  11D2  1303               	bcf	3,6	;RP1=0, select bank0
 13343  11D3  1386               	bcf	6,7	;volatile
 13344  11D4                     i1l5465:
 13345                           
 13346                           ;isr.c: 60:                 if(Delay_Led_Usart){
 13347  11D4  1683               	bsf	3,5	;RP0=1, select bank1
 13348  11D5  085B               	movf	_Delay_Led_Usart^(0+128),w	;volatile
 13349  11D6  045C               	iorwf	(_Delay_Led_Usart+1)^(0+128),w	;volatile
 13350  11D7  1903               	btfsc	3,2
 13351  11D8  29E2               	goto	i1l646
 13352                           
 13353                           ;isr.c: 61:                    Delay_Led_Usart-=10;
 13354  11D9  300A               	movlw	10
 13355  11DA  02DB               	subwf	_Delay_Led_Usart^(0+128),f	;volatile
 13356  11DB  3000               	movlw	0
 13357  11DC  1C03               	skipc
 13358  11DD  03DC               	decf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13359  11DE  02DC               	subwf	(_Delay_Led_Usart+1)^(0+128),f	;volatile
 13360                           
 13361                           ;isr.c: 62:                    PORTBbits.RB6=1;
 13362  11DF  1283               	bcf	3,5	;RP0=0, select bank0
 13363  11E0  1706               	bsf	6,6	;volatile
 13364                           
 13365                           ;isr.c: 63:                    }
 13366  11E1  29E4               	goto	i1l5471
 13367  11E2                     i1l646:	
 13368                           ;isr.c: 64:                 else{
 13369                           
 13370                           
 13371                           ;isr.c: 65:                    PORTBbits.RB6=0;
 13372  11E2  1283               	bcf	3,5	;RP0=0, select bank0
 13373  11E3  1306               	bcf	6,6	;volatile
 13374  11E4                     i1l5471:
 13375                           
 13376                           ;isr.c: 68:                 if(Delay_Led_Memory){
 13377  11E4  1683               	bsf	3,5	;RP0=1, select bank1
 13378  11E5  085D               	movf	_Delay_Led_Memory^(0+128),w	;volatile
 13379  11E6  045E               	iorwf	(_Delay_Led_Memory+1)^(0+128),w	;volatile
 13380  11E7  1903               	btfsc	3,2
 13381  11E8  29F2               	goto	i1l648
 13382                           
 13383                           ;isr.c: 69:                    Delay_Led_Memory-=10;
 13384  11E9  300A               	movlw	10
 13385  11EA  02DD               	subwf	_Delay_Led_Memory^(0+128),f	;volatile
 13386  11EB  3000               	movlw	0
 13387  11EC  1C03               	skipc
 13388  11ED  03DE               	decf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 13389  11EE  02DE               	subwf	(_Delay_Led_Memory+1)^(0+128),f	;volatile
 13390                           
 13391                           ;isr.c: 70:                    PORTBbits.RB5=1;
 13392  11EF  1283               	bcf	3,5	;RP0=0, select bank0
 13393  11F0  1686               	bsf	6,5	;volatile
 13394                           
 13395                           ;isr.c: 71:                    }
 13396  11F1  29F4               	goto	i1l5477
 13397  11F2                     i1l648:	
 13398                           ;isr.c: 72:                 else{
 13399                           
 13400                           
 13401                           ;isr.c: 73:                    PORTBbits.RB5=0;
 13402  11F2  1283               	bcf	3,5	;RP0=0, select bank0
 13403  11F3  1286               	bcf	6,5	;volatile
 13404  11F4                     i1l5477:
 13405                           
 13406                           ;isr.c: 77:                 tempodecorrido+=10;
 13407  11F4  300A               	movlw	10
 13408  11F5  1683               	bsf	3,5	;RP0=1, select bank1
 13409  11F6  07D3               	addwf	_tempodecorrido^(0+128),f	;volatile
 13410  11F7  1803               	skipnc
 13411  11F8  0AD4               	incf	(_tempodecorrido+1)^(0+128),f	;volatile
 13412  11F9  3000               	movlw	0
 13413  11FA  07D4               	addwf	(_tempodecorrido+1)^(0+128),f	;volatile
 13414                           
 13415                           ;isr.c: 78:                 milisegundo+=10;
 13416  11FB  300A               	movlw	10
 13417  11FC  07D9               	addwf	_milisegundo^(0+128),f	;volatile
 13418  11FD  1803               	skipnc
 13419  11FE  0ADA               	incf	(_milisegundo+1)^(0+128),f	;volatile
 13420  11FF  3000               	movlw	0
 13421  1200  07DA               	addwf	(_milisegundo+1)^(0+128),f	;volatile
 13422                           
 13423                           ;isr.c: 79:                 if(milisegundo==1000){
 13424  1201  30E8               	movlw	232
 13425  1202  0659               	xorwf	_milisegundo^(0+128),w	;volatile
 13426  1203  3003               	movlw	3
 13427  1204  1903               	skipnz
 13428  1205  065A               	xorwf	(_milisegundo+1)^(0+128),w	;volatile
 13429  1206  1D03               	btfss	3,2
 13430  1207  2A24               	goto	i1l5501
 13431                           
 13432                           ;isr.c: 80:                    milisegundo=0;
 13433  1208  01D9               	clrf	_milisegundo^(0+128)	;volatile
 13434  1209  01DA               	clrf	(_milisegundo+1)^(0+128)	;volatile
 13435                           
 13436                           ;isr.c: 81:                    segundo++;
 13437  120A  3001               	movlw	1
 13438  120B  00F0               	movwf	??_isr
 13439  120C  0870               	movf	??_isr,w
 13440  120D  07FD               	addwf	_segundo,f	;volatile
 13441                           
 13442                           ;isr.c: 88:                    if(segundo==60){
 13443  120E  303C               	movlw	60
 13444  120F  067D               	xorwf	_segundo,w	;volatile
 13445  1210  1D03               	btfss	3,2
 13446  1211  2A24               	goto	i1l5501
 13447                           
 13448                           ;isr.c: 89:                       segundo=0;
 13449  1212  01FD               	clrf	_segundo	;volatile
 13450                           
 13451                           ;isr.c: 90:                       minuto++;
 13452  1213  3001               	movlw	1
 13453  1214  00F0               	movwf	??_isr
 13454  1215  0870               	movf	??_isr,w
 13455  1216  07FA               	addwf	_minuto,f	;volatile
 13456                           
 13457                           ;isr.c: 91:                       if(minuto==60){
 13458  1217  303C               	movlw	60
 13459  1218  067A               	xorwf	_minuto,w	;volatile
 13460  1219  1D03               	btfss	3,2
 13461  121A  2A24               	goto	i1l5501
 13462                           
 13463                           ;isr.c: 92:                          minuto=0;
 13464  121B  01FA               	clrf	_minuto	;volatile
 13465                           
 13466                           ;isr.c: 93:                          hora++;
 13467  121C  3001               	movlw	1
 13468  121D  00F0               	movwf	??_isr
 13469  121E  0870               	movf	??_isr,w
 13470  121F  07FC               	addwf	_hora,f	;volatile
 13471                           
 13472                           ;isr.c: 94:                          if(hora==24){
 13473  1220  3018               	movlw	24
 13474  1221  067C               	xorwf	_hora,w	;volatile
 13475  1222  1903               	btfsc	3,2
 13476                           
 13477                           ;isr.c: 95:                             hora=0;
 13478  1223  01FC               	clrf	_hora	;volatile
 13479  1224                     i1l5501:	
 13480                           ;isr.c: 99:                 }
 13481                           
 13482                           
 13483                           ;isr.c: 104:     if(PIR1bits.RCIF)
 13484  1224  1283               	bcf	3,5	;RP0=0, select bank0
 13485  1225  1E8C               	btfss	12,5	;volatile
 13486  1226  2A8B               	goto	i1l662
 13487                           
 13488                           ;isr.c: 105:         {;isr.c: 108:         generic_status.flag_usart_rx=1;
 13489  1227  1683               	bsf	3,5	;RP0=1, select bank1
 13490  1228  1464               	bsf	_generic_status^(0+128),0
 13491                           
 13492                           ;isr.c: 109:         tempo=30;
 13493  1229  301E               	movlw	30
 13494  122A  00F6               	movwf	isr@tempo
 13495  122B  3000               	movlw	0
 13496  122C  00F7               	movwf	isr@tempo+1
 13497                           
 13498                           ;isr.c: 110:         count=0;
 13499  122D  01D5               	clrf	_count^(0+128)	;volatile
 13500  122E  01D6               	clrf	(_count+1)^(0+128)	;volatile
 13501                           
 13502                           ;isr.c: 111:         pointer=usart_buffer;
 13503  122F  3010               	movlw	(low (_usart_buffer| (0+256)))& (0+255)
 13504  1230  00F0               	movwf	??_isr
 13505  1231  0870               	movf	??_isr,w
 13506  1232  00DF               	movwf	_pointer^(0+128)
 13507  1233                     i1l5523:	
 13508                           ;isr.c: 112:         while(tempo)
 13509                           
 13510                           
 13511                           ;isr.c: 112:         while(tempo)
 13512  1233  0876               	movf	isr@tempo,w
 13513  1234  0477               	iorwf	isr@tempo+1,w
 13514  1235  1903               	btfsc	3,2
 13515  1236  2A66               	goto	i1l5525
 13516                           
 13517                           ;isr.c: 113:         {;isr.c: 114:             if (PIR1bits.RCIF)
 13518  1237  1283               	bcf	3,5	;RP0=0, select bank0
 13519  1238  1303               	bcf	3,6	;RP1=0, select bank0
 13520  1239  1E8C               	btfss	12,5	;volatile
 13521  123A  2A5F               	goto	i1l5521
 13522                           
 13523                           ;isr.c: 115:             {;isr.c: 116:                 (*pointer)=RCREG;
 13524  123B  081A               	movf	26,w	;volatile
 13525  123C  00F0               	movwf	??_isr
 13526  123D  1683               	bsf	3,5	;RP0=1, select bank1
 13527  123E  085F               	movf	_pointer^(0+128),w
 13528  123F  0084               	movwf	4
 13529  1240  0870               	movf	??_isr,w
 13530  1241  1783               	bsf	3,7	;select IRP bank2
 13531  1242  0080               	movwf	0
 13532                           
 13533                           ;isr.c: 118:                 if(count<32+20 -1)
 13534  1243  0856               	movf	(_count+1)^(0+128),w	;volatile
 13535  1244  3A80               	xorlw	128
 13536  1245  00FF               	movwf	127
 13537  1246  3080               	movlw	128
 13538  1247  027F               	subwf	127,w
 13539  1248  1D03               	skipz
 13540  1249  2A4C               	goto	u529_25
 13541  124A  3033               	movlw	51
 13542  124B  0255               	subwf	_count^(0+128),w	;volatile
 13543  124C                     u529_25:
 13544  124C  1803               	skipnc
 13545  124D  2A5A               	goto	i1l5519
 13546                           
 13547                           ;isr.c: 119:                    {;isr.c: 120:                    count++;
 13548  124E  3001               	movlw	1
 13549  124F  1683               	bsf	3,5	;RP0=1, select bank1
 13550  1250  1303               	bcf	3,6	;RP1=0, select bank1
 13551  1251  07D5               	addwf	_count^(0+128),f	;volatile
 13552  1252  1803               	skipnc
 13553  1253  0AD6               	incf	(_count+1)^(0+128),f	;volatile
 13554  1254  3000               	movlw	0
 13555  1255  07D6               	addwf	(_count+1)^(0+128),f	;volatile
 13556                           
 13557                           ;isr.c: 121:                    pointer++;
 13558  1256  3001               	movlw	1
 13559  1257  00F0               	movwf	??_isr
 13560  1258  0870               	movf	??_isr,w
 13561  1259  07DF               	addwf	_pointer^(0+128),f
 13562  125A                     i1l5519:
 13563                           
 13564                           ;isr.c: 123:                 tempo=30;
 13565  125A  301E               	movlw	30
 13566  125B  00F6               	movwf	isr@tempo
 13567  125C  3000               	movlw	0
 13568  125D  00F7               	movwf	isr@tempo+1
 13569                           
 13570                           ;isr.c: 124:             }
 13571  125E  2A33               	goto	i1l5523
 13572  125F                     i1l5521:
 13573                           
 13574                           ;isr.c: 126:             {;isr.c: 127:                 tempo--;
 13575  125F  3001               	movlw	1
 13576  1260  02F6               	subwf	isr@tempo,f
 13577  1261  3000               	movlw	0
 13578  1262  1C03               	skipc
 13579  1263  03F7               	decf	isr@tempo+1,f
 13580  1264  02F7               	subwf	isr@tempo+1,f
 13581  1265  2A33               	goto	i1l5523
 13582  1266                     i1l5525:
 13583                           
 13584                           ;isr.c: 131:         (*pointer)=0;
 13585  1266  1683               	bsf	3,5	;RP0=1, select bank1
 13586  1267  1303               	bcf	3,6	;RP1=0, select bank1
 13587  1268  085F               	movf	_pointer^(0+128),w
 13588  1269  0084               	movwf	4
 13589  126A  1783               	bsf	3,7	;select IRP bank2
 13590  126B  0180               	clrf	0
 13591                           
 13592                           ;isr.c: 133:         if(RCSTAbits.OERR){
 13593  126C  1283               	bcf	3,5	;RP0=0, select bank0
 13594  126D  1C98               	btfss	24,1	;volatile
 13595  126E  2A8B               	goto	i1l662
 13596                           
 13597                           ;isr.c: 134:            CREN=0;
 13598  126F  1218               	bcf	24,4	;volatile
 13599                           
 13600                           ;isr.c: 135:            CREN=1;
 13601  1270  1618               	bsf	24,4	;volatile
 13602                           
 13603                           ;isr.c: 136:            tempo=RCREG;
 13604  1271  081A               	movf	26,w	;volatile
 13605  1272  00F0               	movwf	??_isr
 13606  1273  01F1               	clrf	??_isr+1
 13607  1274  0870               	movf	??_isr,w
 13608  1275  00F6               	movwf	isr@tempo
 13609  1276  0871               	movf	??_isr+1,w
 13610  1277  00F7               	movwf	isr@tempo+1
 13611                           
 13612                           ;isr.c: 137:            tempo=RCREG;
 13613  1278  081A               	movf	26,w	;volatile
 13614  1279  00F0               	movwf	??_isr
 13615  127A  01F1               	clrf	??_isr+1
 13616  127B  0870               	movf	??_isr,w
 13617  127C  00F6               	movwf	isr@tempo
 13618  127D  0871               	movf	??_isr+1,w
 13619  127E  00F7               	movwf	isr@tempo+1
 13620                           
 13621                           ;isr.c: 138:            tempo=RCREG;
 13622  127F  081A               	movf	26,w	;volatile
 13623  1280  00F0               	movwf	??_isr
 13624  1281  01F1               	clrf	??_isr+1
 13625  1282  0870               	movf	??_isr,w
 13626  1283  00F6               	movwf	isr@tempo
 13627  1284  0871               	movf	??_isr+1,w
 13628  1285  00F7               	movwf	isr@tempo+1
 13629                           
 13630                           ;isr.c: 139:            usart_buffer[0]=0;
 13631  1286  1703               	bsf	3,6	;RP1=1, select bank2
 13632  1287  0190               	clrf	_usart_buffer^(0+256)	;volatile
 13633                           
 13634                           ;isr.c: 140:            generic_status.flag_usart_error=1;
 13635  1288  1683               	bsf	3,5	;RP0=1, select bank1
 13636  1289  1303               	bcf	3,6	;RP1=0, select bank1
 13637  128A  14E4               	bsf	_generic_status^(0+128),1
 13638  128B                     i1l662:
 13639  128B  0875               	movf	??_isr+5,w
 13640  128C  1283               	bcf	3,5	;RP0=0, select bank0
 13641  128D  00FF               	movwf	127
 13642  128E  0874               	movf	??_isr+4,w
 13643  128F  008A               	movwf	10
 13644  1290  0873               	movf	??_isr+3,w
 13645  1291  0084               	movwf	4
 13646  1292  0E72               	swapf	??_isr+2,w
 13647  1293  0083               	movwf	3
 13648  1294  0EFE               	swapf	126,f
 13649  1295  0E7E               	swapf	126,w
 13650  1296  0009               	retfie
 13651  1297                     __end_of_isr:
 13652  007E                     btemp	set	126	;btemp
 13653  007E                     wtemp0	set	126
 13654                           
 13655                           	psect	intentry
 13656  0004                     __pintentry:	
 13657                           ;incstack = 0
 13658                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1]
 13659                           
 13660  0004                     interrupt_function:
 13661  007E                     saved_w	set	btemp
 13662  0004  00FE               	movwf	btemp
 13663  0005  0E03               	swapf	3,w
 13664  0006  00F2               	movwf	??_isr+2
 13665  0007  0804               	movf	4,w
 13666  0008  00F3               	movwf	??_isr+3
 13667  0009  080A               	movf	10,w
 13668  000A  00F4               	movwf	??_isr+4
 13669  000B  1283               	bcf	3,5	;RP0=0, select bank0
 13670  000C  1303               	bcf	3,6	;RP1=0, select bank0
 13671  000D  087F               	movf	btemp+1,w
 13672  000E  00F5               	movwf	??_isr+5
 13673  000F  160A  118A  29A9   	ljmp	_isr
 13674                           
 13675                           	psect	config
 13676                           
 13677                           ;Config register CONFIG1 @ 0x2007
 13678                           ;	Oscillator Selection bits
 13679                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 13680                           ;	Watchdog Timer Enable bit
 13681                           ;	WDTE = ON, WDT enabled
 13682                           ;	Power-up Timer Enable bit
 13683                           ;	PWRTE = ON, PWRT enabled
 13684                           ;	RE3/MCLR pin function select bit
 13685                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 13686                           ;	Code Protection bit
 13687                           ;	CP = ON, Program memory code protection is enabled
 13688                           ;	Data Code Protection bit
 13689                           ;	CPD = OFF, Data memory code protection is disabled
 13690                           ;	Brown Out Reset Selection bits
 13691                           ;	BOREN = ON, BOR enabled
 13692                           ;	Internal External Switchover bit
 13693                           ;	IESO = ON, Internal/External Switchover mode is enabled
 13694                           ;	Fail-Safe Clock Monitor Enabled bit
 13695                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 13696                           ;	Low Voltage Programming Enable bit
 13697                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 13698                           ;	In-Circuit Debugger Mode bit
 13699                           ;	DEBUG = 0x1, unprogrammed default
 13700  2007                     	org	8199
 13701  2007  2F8C               	dw	12172
 13702                           
 13703                           ;Config register CONFIG2 @ 0x2008
 13704                           ;	Brown-out Reset Selection bit
 13705                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 13706                           ;	Flash Program Memory Self Write Enable bits
 13707                           ;	WRT = OFF, Write protection off
 13708  2008                     	org	8200
 13709  2008  3FFF               	dw	16383

Data Sizes:
    Strings     11
    Constant    64
    Data        0
    BSS         177
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     80      80
    BANK1            80     41      69
    BANK3            96      0      91
    BANK2            96      0      52

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 58
		 -> buffer(BANK3[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 58
		 -> buffer(BANK3[33]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    USART_put_string@vetor	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK3[33]), 

    USART_put_string@ptr	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[3]), buffer(BANK3[33]), 

    USART_put_int@dado	PTR unsigned char  size(1) Largest target is 2
		 -> USART_put_int@value(BANK1[2]), 

    USART_to_Protocol@usart_protocol	PTR struct . size(1) Largest target is 58
		 -> usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write_String@text	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_VP_Write@vetor	PTR unsigned char  size(2) Largest target is 58
		 -> PROCULUS_VP_Write_Double32@vetor(COMMON[4]), PROCULUS_VP_Write_Float32@vetor(COMMON[4]), PROCULUS_VP_Write_Long32@vetor(COMMON[4]), PROCULUS_VP_Write_UInt16@vetor(COMMON[2]), 
		 -> PROCULUS_VP_Write_Byte@vetor(COMMON[1]), usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    PROCULUS_Control_Register_Write@vetor	PTR unsigned char  size(1) Largest target is 3
		 -> PROCULUS_Show_Screen@vetor(BANK1[3]), PROCULUS_Reset@vetor(COMMON[3]), PROCULUS_Buzzer@vetor(BANK1[2]), 

    pointer	PTR volatile unsigned char  size(1) Largest target is 52
		 -> NULL(NULL[0]), usart_buffer(BANK2[52]), 

    EEPROM_Read_String@dado	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_Write_String@dado	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_Read_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Read_Integer@result(BANK0[2]), 

    EEPROM_Write_Integer@ptr	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_Write_Integer@dado(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_24C1025_Read_Str@buffer	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_24C1025_Write_Str@data	PTR unsigned char  size(1) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), 

    EEPROM_24C1025_Read_Buffer_USART@data	PTR unsigned char  size(1) Largest target is 33
		 -> buffer(BANK3[33]), 

    EEPROM_24C1025_Read_Buffer@data	PTR unsigned char  size(1) Largest target is 2
		 -> EEPROM_24C1025_Read_Int@data(BANK0[2]), EEPROM_24C1025_Read_Byte@data(BANK0[1]), 

    EEPROM_24C1025_Write_Buffer@data	PTR unsigned char  size(2) Largest target is 58
		 -> usart_protocol.value(BANK3[52]), usart_protocol(BANK3[58]), EEPROM_24C1025_Write_Int@local(BANK1[2]), EEPROM_24C1025_Write_Byte@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _MediaPlacaVaccum->___flmul
    ___flsub->___fladd
    ___fladd->_ADC_Media_10bits
    ___fldiv->___xxtofl
    _ADC_Media_10bits->___xxtofl
    _I2C_Master_Init->___lldiv
    _Decodify_Command->___fltol
    _Send_To_MB->_USART_putc
    _Send_Reply_OK->_USART_put_string
    _USART_put_string->_USART_putc
    _Save_Log->___fltol
    ___fltol->___flmul
    ___flmul->___fladd
    _USART_put_int->___fltol
    _EEPROM_Write_String->_EEPROM_Write_Byte
    _EEPROM_Write_Integer->_EEPROM_Write_Byte
    _EEPROM_Read_String->_EEPROM_Read_Byte
    _EEPROM_Read_Integer->_EEPROM_Read_Byte
    _EEPROM_24C1025_Write_Str->_my_delay_ms_WDT
    _EEPROM_24C1025_Write_Byte->_EEPROM_24C1025_Write_Buffer
    _EEPROM_24C1025_Read_Str->_I2C_Master_Read
    _EEPROM_24C1025_Read_Int->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Byte->_EEPROM_24C1025_Read_Buffer
    _EEPROM_24C1025_Read_Buffer->_my_delay_ms_WDT
    _EEPROM_24C1025_Read_Buffer_USART->_I2C_Master_Read
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _EEPROM_24C1025_Write_Int->___fltol
    _EEPROM_24C1025_Write_Buffer->_my_delay_ms_WDT
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Decodify_Command
    _Decodify_Command->_EEPROM_24C1025_Fill_All
    _Save_Log->_EEPROM_24C1025_Write_Int
    _PROCULUS_VP_Write_String->_PROCULUS_VP_Write
    _PROCULUS_VP_Write->_USART_put_int
    _PROCULUS_Show_Screen->_PROCULUS_Control_Register_Write
    _PROCULUS_Buzzer->_PROCULUS_Control_Register_Write
    _PROCULUS_Control_Register_Write->_USART_put_int
    _EEPROM_24C1025_Fill_All->_EEPROM_24C1025_Write_Int

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  117192
                                             36 BANK1      5     5      0
                           _ADC_init
                   _Decodify_Command
                _EEPROM_Read_Integer
               _EEPROM_Write_Integer
                    _I2C_Master_Init
                   _MediaPlacaVaccum
                         _USART_init
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           7     3      4     167
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _MediaPlacaVaccum                                    16    16      0   18995
                                             69 BANK0      1     1      0
                                              0 BANK1     11    11      0
                   _ADC_Media_10bits
            _Package_Usart_is_for_me
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    4201
                                             43 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    4004
                                             23 BANK0     20    12      8
                   _ADC_Media_10bits (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1016
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    2107
                                             14 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Package_Usart_is_for_me                              1     1      0      26
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Media_10bits                                     9     5      4    1705
                                             14 BANK0      9     5      4
                            ___lwdiv
                           ___xxtofl
                            _captura
                        _my_delay_ms
 ---------------------------------------------------------------------------------
 (2) _my_delay_ms                                         10     6      4     337
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) _captura                                              2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     765
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Decodify_Command                                    19    19      0   95896
                                             17 BANK1     19    19      0
            _EEPROM_24C1025_Fill_All
   _EEPROM_24C1025_Read_Buffer_USART
           _EEPROM_24C1025_Read_Byte
            _EEPROM_24C1025_Read_Int
            _EEPROM_24C1025_Read_Str
        _EEPROM_24C1025_Write_Buffer
          _EEPROM_24C1025_Write_Byte
           _EEPROM_24C1025_Write_Int
           _EEPROM_24C1025_Write_Str
                   _EEPROM_Read_Byte
                _EEPROM_Read_Integer
                 _EEPROM_Read_String
                  _EEPROM_Write_Byte
               _EEPROM_Write_Integer
                _EEPROM_Write_String
                    _PROCULUS_Buzzer
               _PROCULUS_Show_Screen
           _PROCULUS_VP_Write_String
                           _Save_Log
                      _Send_Reply_OK
                         _Send_To_MB
                      _USART_put_int
                   _USART_put_string
                         _USART_putc
                  _USART_to_Protocol
                            ___flmul
                            ___fltol
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     184
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _USART_to_Protocol                                    5     5      0     255
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _Send_To_MB                                           1     1      0      44
                                              1 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Send_Reply_OK                                        0     0      0     416
                   _USART_put_string
 ---------------------------------------------------------------------------------
 (2) _USART_put_string                                     4     2      2     416
                                              1 BANK0      4     2      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _Save_Log                                             4     0      4   12681
                                             10 BANK1      4     0      4
           _EEPROM_24C1025_Write_Int
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             69 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    4160
                                             43 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_VP_Write_String                             4     1      3    3099
                                             12 BANK1      4     1      3
                  _PROCULUS_VP_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     156
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_VP_Write                                    8     3      5    2670
                                              4 BANK1      8     3      5
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Show_Screen                                 6     4      2    1777
                                              8 BANK1      6     4      2
    _PROCULUS_Control_Register_Write
 ---------------------------------------------------------------------------------
 (2) _PROCULUS_Buzzer                                      5     3      2    2219
                                              8 BANK1      5     3      2
    _PROCULUS_Control_Register_Write
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _PROCULUS_Control_Register_Write                      4     3      1    1584
                                              4 BANK1      4     3      1
                     _PROCULUS_Delay
                      _USART_put_int
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_put_int                                        4     2      2     812
                                              0 BANK1      4     2      2
                         _USART_putc
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _PROCULUS_Delay                                       6     4      2     324
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_String                                  3     2      1     812
                                              5 BANK0      3     2      1
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write_Integer                                 8     6      2     991
                                              5 BANK0      7     5      2
                  _EEPROM_Write_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write_Byte                                    5     4      1     624
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_String                                   4     3      1     189
                                              3 BANK0      4     3      1
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read_Integer                                  8     6      2     161
                                              3 BANK0      8     6      2
                   _EEPROM_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read_Byte                                     3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Str                            10     5      5    6059
                                             10 BANK0     10     5      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Write_Byte                            6     1      5    7267
                                             23 BANK0      6     1      5
        _EEPROM_24C1025_Write_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Str                             11     6      5    6763
                                              9 BANK0     11     6      5
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Int                              9     5      4    7761
                                             22 BANK0      9     5      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Byte                             7     3      4    7738
                                             22 BANK0      7     3      4
         _EEPROM_24C1025_Read_Buffer
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Read_Buffer                          13     7      6    7570
                                             10 BANK0     12     6      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Read_Buffer_USART                    13     7      6    6904
                                              9 BANK0     12     6      6
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      6     4      2    1090
                                              3 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _EEPROM_24C1025_Fill_All                              7     5      2    8163
                                             10 BANK1      7     5      2
           _EEPROM_24C1025_Write_Int
 ---------------------------------------------------------------------------------
 (3) _EEPROM_24C1025_Write_Int                            10     4      6    7912
                                              0 BANK1     10     4      6
        _EEPROM_24C1025_Write_Buffer
                            ___flmul (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _EEPROM_24C1025_Write_Buffer                         13     6      7    6985
                                             10 BANK0     13     6      7
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _my_delay_ms_WDT
 ---------------------------------------------------------------------------------
 (1) _my_delay_ms_WDT                                     10     6      4     502
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     2     0      2    4898
                                              3 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0      46
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  8     8      0      28
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _Decodify_Command
     _EEPROM_24C1025_Fill_All
       _EEPROM_24C1025_Write_Int
         _EEPROM_24C1025_Write_Buffer
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _my_delay_ms_WDT
         ___flmul (ARG)
           __Umul8_16
           ___fladd (ARG)
             _ADC_Media_10bits (ARG)
               ___lwdiv
               ___xxtofl
               _captura
               _my_delay_ms
         ___fltol (ARG)
           ___flmul (ARG)
     _EEPROM_24C1025_Read_Buffer_USART
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
       _USART_putc
     _EEPROM_24C1025_Read_Byte
       _EEPROM_24C1025_Read_Buffer
         _I2C_Master_Read
         _I2C_Master_RepeatedStart
         _I2C_Master_Start
         _I2C_Master_Stop
         _I2C_Master_Write
         _my_delay_ms_WDT
     _EEPROM_24C1025_Read_Int
       _EEPROM_24C1025_Read_Buffer
     _EEPROM_24C1025_Read_Str
       _I2C_Master_Read
       _I2C_Master_RepeatedStart
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
     _EEPROM_24C1025_Write_Buffer
     _EEPROM_24C1025_Write_Byte
       _EEPROM_24C1025_Write_Buffer
     _EEPROM_24C1025_Write_Int
     _EEPROM_24C1025_Write_Str
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
       _my_delay_ms_WDT
     _EEPROM_Read_Byte
     _EEPROM_Read_Integer
       _EEPROM_Read_Byte
     _EEPROM_Read_String
       _EEPROM_Read_Byte
     _EEPROM_Write_Byte
     _EEPROM_Write_Integer
       _EEPROM_Write_Byte
     _EEPROM_Write_String
       _EEPROM_Write_Byte
     _PROCULUS_Buzzer
       _PROCULUS_Control_Register_Write
         _PROCULUS_Delay
         _USART_put_int
           _USART_putc
           ___fltol (ARG)
         _USART_putc
       ___lwdiv
     _PROCULUS_Show_Screen
       _PROCULUS_Control_Register_Write
     _PROCULUS_VP_Write_String
       _PROCULUS_VP_Write
         _PROCULUS_Delay
         _USART_put_int
         _USART_putc
         _strlen (ARG)
       _strlen
     _Save_Log
       _EEPROM_24C1025_Write_Int
       ___flmul
       ___fltol
     _Send_Reply_OK
       _USART_put_string
         _USART_putc
     _Send_To_MB
       _USART_putc
     _USART_put_int
     _USART_put_string
     _USART_putc
     _USART_to_Protocol
     ___flmul
     ___fltol
     _strcpy
     _strlen
   _EEPROM_Read_Integer
   _EEPROM_Write_Integer
   _I2C_Master_Init
     ___lldiv
   _MediaPlacaVaccum
     _ADC_Media_10bits
     _Package_Usart_is_for_me
     ___fladd
     ___fldiv
       ___xxtofl (ARG)
     ___flge
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _my_delay_ms
   _USART_init
   _my_delay_ms_WDT

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     132       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     29      45       7       86.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      5B       9       94.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      34      11       54.2%
DATA                 0      0     132      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Nov 12 13:58:20 2021

                               _USART_putc 19A4                               ___fldiv@aexp 0047  
                             ___fldiv@bexp 0046                                          pc 0002  
                             ___fldiv@sign 003F                           _MediaPlacaVaccum 0D37  
          EEPROM_24C1025_Read_Buffer@range 0034           EEPROM_24C1025_Write_Str@chip_add 0031  
                                       fsr 0004   __end_of_EEPROM_24C1025_Read_Buffer_USART 1800  
__size_of_EEPROM_24C1025_Read_Buffer_USART 017E         ??_EEPROM_24C1025_Read_Buffer_USART 002F  
        ?_EEPROM_24C1025_Read_Buffer_USART 0029           _EEPROM_24C1025_Read_Buffer_USART 1682  
                            _USART_put_int 19C5                   Decodify_Command@tempchar 00BF  
                      __Umul8_16@word_mpld 0026                 __end_of_RESISTOR_ROOM_TEMP 181C  
             PROCULUS_VP_Write_String@text 00AE                                        l430 0382  
                                      l424 031F                                        l524 1DC6  
                                      l428 032D                                        l525 1DC7  
                                      l551 1AAF                                        l519 1DA2  
                                      l439 0EEB                                        l800 1A55  
                                      l529 1AF5                                        l495 07F7  
                                      l817 1A49                                        l880 19AC  
       EEPROM_24C1025_Read_Buffer@chip_add 0033                   Decodify_Command@sizedata 00B8  
                                      _isr 11A9                                        fsr0 0004  
                                      indf 0000                  __end_of_EEPROM_Write_Byte 1DD6  
                         _ADC_Media_10bits 1F2D                               ___flmul@aexp 0059  
                             ___flmul@bexp 005E                     PROCULUS_VP_Write@vetor 00A6  
             ?_EEPROM_24C1025_Write_Buffer 002A                               ___flmul@sign 0058  
                             ___flmul@temp 0063                               ___flmul@prod 005F  
  __end_of_PROCULUS_Control_Register_Write 1D2B   __size_of_PROCULUS_Control_Register_Write 0036  
        ??_PROCULUS_Control_Register_Write 00A5           ?_PROCULUS_Control_Register_Write 00A4  
          _PROCULUS_Control_Register_Write 1CF5                               ___fltol@exp1 006F  
                          __end_of_MAX_ADC 1824                                       l1311 0CAC  
                                     l1171 108D                                       l1332 0D2C  
                                     l1324 0D14                                       l1405 1B21  
                                     l1190 084F                                       l1430 1123  
                                     l1174 10F3                                       l1370 0B02  
                                     l1346 09B5                                       l1290 0B5A  
                                     l1443 1179                                       l4011 0B30  
                                     l1444 1183                                       l1436 1163  
                                     l4005 0B25                                       l1294 0BF3  
                                     l4103 0C22                                       l1368 0AF4  
                                     l1296 0BD1                                       l4201 03A0  
                                     l4105 0C24                                       l4113 0C34  
                                     l4033 0B52                                       l4009 0B28  
                                     l4203 03A8                                       l4131 0CBE  
                                     l4123 0C9E                                       l4221 03CD  
                                     l4029 0B4F                                       l1398 066B  
                                     l4303 0625                                       l4039 0B64  
                                     l4313 0654                                       l4217 03C3  
                                     l4153 0CDF                                       l4145 0CD4  
                                     l5105 0E4D                                       l4307 063B  
                                     l4219 03C5                                       l4331 111B  
                                     l4139 0CCD                                       l4147 0CD6  
                                     l5131 0F59                                       l5123 0F11  
                                     l5027 1E65                                       l3701 1CF2  
                                     l4421 1764                                       l4229 03DB  
                                     l4341 1136                                       l4157 0CE1  
                                     l4077 0BDC                                       l4069 0BA0  
                                     l5061 1E8A                                       l3551 1AE6  
                                     l4423 176B                                       l4351 1177  
                                     l4343 1148                                       l4175 0D24  
                                     l4095 0C01                                       l4079 0BDE  
                                     l4087 0BED                                       l5047 1E82  
                                     l3553 1AD2                                       l3561 1AEA  
                                     l4425 176E                                       l4281 05BD  
                                     l4353 1168                                       l4337 1132  
                                     l4451 17E2                                       l4531 1300  
                                     l4283 05DA                                       l4179 0D28  
                                     l5139 0F70                                       l5091 0DA9  
                                     l5083 0D61                                       l3557 1ADE  
                                     l4453 1707                                       l4381 16B7  
                                     l3741 06AB                                       l4533 1378  
                                     l4525 1356                                       l4293 05F3  
                                     l4365 11A0                                       l4447 17BB  
                                     l4455 17E7                                       l4383 16BA  
                                     l3815 07D8                                       l3743 06AE  
                                     l4615 1639                                       l4471 12C8  
                                     l3911 1D22                                       l3719 1B19  
                                     l4199 039E                                       l3585 1D6A  
                                     l3809 07B6                                       l3817 06FB  
                                     l4625 1660                                       l4545 1530  
                                     l3841 1DAC                                       l4289 05F1  
                                     l3833 1C91                                       l4801 1A51  
                                     l4379 16B0                                       l3819 07DD  
                                     l3739 06A4                                       l4627 1669  
                                     l4571 1587                                       l4547 1537  
                                     l4467 12BE                                       l3843 1DAF  
                                     l3931 080B                                       l3835 1CB3  
                                     l4723 1A75                                       l4811 1025  
                                     l5099 0DC0                                       l5605 1476  
                                     l3693 1CEB                                       l4549 153A  
                                     l4469 12C5                                       l4741 1C1F  
                                     l3909 1D0D                                       l4717 1F08  
                                     l4821 105D                                       l4813 1035  
                                     l5631 14DE                                       l5607 147D  
                                     l3783 075F                                       l4591 15E9  
                                     l3951 083B                                       l3935 0814  
                                     l5711 00DB                                       l4903 09D4  
                                     l5609 1480                                       l5625 14B9  
                                     l5633 1402                                       l3689 1CD8  
                                     l3785 0766                                       l4593 15EC  
                                     l4665 1BB3                                       l3881 1A33  
                                     l3961 085E                                       l3953 084B  
                                     l4825 106A                                       l5635 14E3  
                                     l5571 13C9                                       l3787 0769  
                                     l4739 1C02                                       l5803 029A  
                                     l5723 0113                                       l4835 10A7  
                                     l4589 15E2                                       l5813 02D1  
                                     l5733 0143                                       l4909 09E0  
                                     l5567 13BF                                       l3983 1E02  
                                     l3975 1DDE                                       l3879 1A28  
                                     l5831 0314                                       l5807 02C0  
                                     l5743 016B                                       l5727 012C  
                                     l5719 0105                                       l4935 0A4E  
                                     l4839 10CD                                       l5569 13C6  
                                     l4689 1C62                                       l3977 1DEC  
                                     l5657 1EB4                                       l5825 02F8  
                                     l5761 01A4                                       l3889 1D33  
                                     l4961 0A8D                                       l4953 0A59  
                                     l4929 0A2F                                       l4937 0A0B  
                                     l4873 0987                                       l3987 1E0D  
                                     l5659 1ECF                                       l5819 02E0  
                                     l5755 0195                                       l4779 1F49  
                                     l4955 0A76                                       l4939 0A53  
                                     l4875 098F                                       ?_isr 0070  
                                     l5669 1E1C                                       l5837 0323  
                                     l5773 01EA                                       l5749 0187  
                                     l4797 1A4E                                       l4965 0A8F  
                                     l4893 09AD                                       l4869 0984  
                                     l5791 0258                                       l5767 01C4  
                                     l5695 0071                                       l4991 0AFE  
                                     l4975 0AC1                                       l5927 08FC  
                                     l5785 022A                                       l5689 0057  
                                     l5849 0331                                       l4889 09AA  
                                     l5953 0929                                       l5779 020D  
                                     l5699 007E                                       l4979 0ADA  
                                     l5797 027C                                       l5997 033B  
                                     _BETA 1848                                       STR_1 1850  
                                     STR_2 1858                                _statuspower 00E3  
                                     _CREN 00C4                                       u3105 0854  
                                     u3300 0BC0                                       u4005 0646  
                                     u3045 081D                                       u3310 0BC1  
                                     u3145 1DE1                                       u4203 1762  
                                     u3075 083C                                       u3165 1DED  
                                     u4303 1596                                       u4223 12A9  
                                     u3175 1DF9                                       u4135 118B  
                                     u4055 113F                                       u4233 12BC  
                                     u3185 1E03                                       u3441 0C5F  
                                     u3433 0C46                                       u3425 0C28  
                                     u3345 0BE2                                       u2810 1CE8  
                                     u3450 0C73                                       u3442 0C60  
                                     u4163 169B                                       u4323 15E0  
                                     u4243 1318                                       u4075 115B  
                                     u3451 0C74                                       u3443 0C65  
                                     u3452 0C79                                       u3444 0C66  
                                     u4173 16AE                                       u3453 0C7A  
                                     u3445 0C6B                                       u3446 0C6C  
                                     u4183 171D                                       u4095 1170  
                                     u3295 0BB4                                       u2913 075D  
                                     u4505 104C                                       u5323 13AA  
                                     u4283 151B                                       u2835 1A5B  
                                     u4515 105E                                       u2693 1D7C  
                                     u5333 13BD                                       u4293 152E  
                                     u5343 1424                                       u2855 1B22  
                                     u3815 04DE                                       u3495 0CC0  
                                     u2873 068F                                       u4385 1F14  
                                     u4705 0A1D                                       u4561 10B8  
                                     u4562 10B9                                       u5363 1474  
                                     u2883 06A2                                       u3915 05CC  
                                     u4475 1029                                       u4563 10BE  
                                     u3595 0CFE                                       u4564 10BF  
                                     u2893 0711                                       u4725 0A28  
                                     u4581 10DE                                       u4565 10C4  
                                     u5517 0875                                       u4582 10DF  
                                     u4566 10C5                                       u5375 1410  
                                     u5607 17FA                                       u3855 0572  
                                     u4495 1037                                       u5527 1D4D  
                                     u4735 0A3D                                       u4583 10E4  
                                     u4584 10E5                                       u5617 1D85  
                                     u5393 1E4F                                       u5537 1A63  
                                     u3785 0485                                       u2993 1D45  
                                     u4585 10EA                                       u4586 10EB  
                                     u5627 1ADA                                       u5547 1C87  
                                     u5557 1DD0                                       u3885 05A9  
                                     u4765 0A5D                                       u5567 1B06  
                                     u3895 05C1                                       u4855 0AAC  
                                     u4695 0A14                                       u5577 15B9  
                                     u3985 0610                                       u4865 0ACA  
                                     u4785 0A68                                       u5587 167C  
                                     u3995 062E                                       u4875 0AE5  
                                     u5597 07F0                                       u4895 1C38  
                                     _WPUB 0095                       PROCULUS_Buzzer@vetor 00AB  
         __end_of_I2C_Master_RepeatedStart 19A4                                       _main 086D  
                                     _hora 007C          __size_of_EEPROM_24C1025_Write_Int 0029  
                                     btemp 007E          __size_of_EEPROM_24C1025_Write_Str 00FB  
                ?_EEPROM_24C1025_Write_Int 00A0                  ?_EEPROM_24C1025_Write_Str 002A  
              __size_of_EEPROM_Read_String 0020                                       start 0012  
                         __end_of_ADC_init 198E                           _BALANCE_RESISTOR 184C  
                          ___fldiv@new_exp 0040         EEPROM_24C1025_Read_Buffer@sizedata 002E  
                                    ??_isr 0070                           ?_I2C_Master_Init 002E  
                         ?_I2C_Master_Read 0023                           ?_I2C_Master_Wait 0070  
                         ?_I2C_Master_Stop 0070                             ?_USART_put_int 00A0  
                            ___fltol@sign1 006E                            __end_of___fladd 0D37  
                                    ?_main 0070                            __end_of___fldiv 0B0A  
                                    _EEADR 010D                            __end_of___flmul 0678  
                          __end_of___flsub 1AAC                            __end_of___fltol 086D  
                                    _ANSEL 0188                            __end_of___lldiv 1073  
                                    _T1CON 0010                            __end_of___lwdiv 1E12  
                                    i1l644 11D1                                      i1l662 128B  
                                    i1l646 11E2                                      i1l648 11F2  
                                    _RCREG 001A                                      _TMR1H 000F  
                                    _TMR1L 000E                                      _SPBRG 0099  
                                    _PORTA 0005                                      _PORTB 0006  
                                    _PORTC 0007                                      _PORTE 0009  
                                    _TRISA 0085                                      _TRISB 0086  
                                    _TRISC 0087            EEPROM_24C1025_Read_Int@chip_add 003C  
                                    _TRISE 0089                                      _TXREG 0019  
                    ADC_Media_10bits@canal 0033                            __end_of_captura 0800  
                             _usart_buffer 0110                      ADC_Media_10bits@value 0034  
                EEPROM_Read_Integer@result 0028                                      _canal 00E2  
             __size_of_EEPROM_Read_Integer 002A                                      _count 00D5  
                                    _errno 00D1              ??_EEPROM_24C1025_Write_Buffer 0031  
       __size_of_EEPROM_24C1025_Write_Byte 0016                 ?_EEPROM_24C1025_Write_Byte 0037  
                                    pclath 000A                                      status 0003  
                                    wtemp0 007E            EEPROM_24C1025_Read_Byte@mem_add 0036  
                             __end_of_BETA 184C                    __size_of_PROCULUS_Delay 001D  
        __size_of_PROCULUS_VP_Write_String 0018                                ?_USART_init 0020  
                          __initialization 0015                  ?_PROCULUS_VP_Write_String 00AC  
                              ?_USART_putc 0070                               __end_of_main 0969  
                           Send_To_MB@size 0021                   __end_of_EEPROM_Read_Byte 1B0F  
                                   ??_main 00C4                           __end_of_Save_Log 2000  
                         _USART_put_string 1C8D                      EEPROM_Write_Byte@addr 0023  
                    EEPROM_Write_Byte@dado 0020                 __size_of_EEPROM_Write_Byte 003C  
                        ?_I2C_Master_Start 0070                  EEPROM_Write_Byte@last_GIE 0024  
                        ?_I2C_Master_Write 0023                         ??_I2C_Master_Start 0023  
                                   _ADCON1 009F                         ??_I2C_Master_Write 0025  
                PROCULUS_Show_Screen@vetor 00AB                                     _ADRESH 001E  
                                   _ADRESL 009E                                     _EEDATA 010C  
                                   _EECON2 018D                                 _Send_To_MB 1B5A  
                    EEPROM_Write_Integer@i 002B                                     _ANSELH 0189  
             __end_of_PROCULUS_Show_Screen 1015                                     i1l5501 1224  
                                   i1l5521 125F                                     i1l5523 1233  
                                   i1l5525 1266                                     i1l5461 11C6  
                                   i1l5519 125A                                     i1l5471 11E4  
                                   i1l5465 11D4                                     i1l5457 11B7  
                                   i1l5477 11F4          __end_of_EEPROM_24C1025_Write_Byte 19F0  
                                   u529_25 124C                               ?_my_delay_ms 0020  
                                   _TMR1IE 0460                                     _TMR1CS 0081  
                 ?_EEPROM_24C1025_Fill_All 00AA                                     _SSPADD 0093  
                                   _TRISC3 043B                                     _TRISC4 043C  
                                   _TRISC6 043E                                     _TRISC7 043F  
                                   _SSPCON 0014                                     _SSPBUF 0013  
           EEPROM_24C1025_Fill_All@mem_add 00AD                           __end_of___xxtofl 11A9  
            EEPROM_24C1025_Read_Str@buffer 002D                         PROCULUS_VP_Write@i 00AB  
                 __end_of_Decodify_Command 0383                   ?_EEPROM_24C1025_Read_Int 0036  
                 ?_EEPROM_24C1025_Read_Str 0029                   _I2C_Master_RepeatedStart 1999  
     __size_of_EEPROM_24C1025_Write_Buffer 0176                                     ___flge 1073  
                                ??___fladd 003F                                  ??___fldiv 0036  
                                ??___flmul 0053                                  ??___flsub 0053  
                                ??___fltol 0069                            ??_USART_put_int 00A2  
                                ??___lldiv 0028                                     _header 00D7  
                        __end_of_ROOM_TEMP 1820                                  ??___lwdiv 0024  
                                   _buffer 01CA                          _USART_to_Protocol 1ED8  
                          USART_putc@value 0020                                     _minuto 007A  
        EEPROM_24C1025_Read_Buffer@cnt_108 0032                                  ??_captura 0022  
                       ?_USART_to_Protocol 0070               Decodify_Command@add_24LCxxxx 00C0  
                                   _strcpy 1A70                                     _strlen 1A21  
        EEPROM_24C1025_Read_Buffer@mem_add 002A           __end_of_EEPROM_24C1025_Read_Byte 1A21  
                       __size_of__Umul8_16 0023                                     saved_w 007E  
        EEPROM_24C1025_Write_Byte@chip_add 003C                                  ?_ADC_init 0070  
                      ??_USART_to_Protocol 0020                        __size_of_USART_init 0042  
                      __size_of_USART_putc 0010                   __end_of_MediaPlacaVaccum 1000  
                               ___flge@ff1 0020                                 ___flge@ff2 0024  
                             ___xxtofl@arg 002A                               ___xxtofl@exp 0029  
                             ___xxtofl@val 0020                           __end_oflog@coeff 1848  
                  __end_of__initialization 0033                      _MediaPlacaVaccum$2372 00A0  
      PROCULUS_Control_Register_Write@size 00A4                                 ___fltol@f1 0065  
                             _Board_Number 00E1                   __end_of_ADC_Media_10bits 1F83  
                           __pcstackCOMMON 0070                   __size_of_PROCULUS_Buzzer 002A  
                __end_of_USART_to_Protocol 1F2D                      USART_put_string@vetor 0021  
                      my_delay_ms_WDT@time 0020              __size_of_EEPROM_Write_Integer 0032  
                 __size_of_my_delay_ms_WDT 0038                             _OPTION_REGbits 0081  
                 __end_of_BALANCE_RESISTOR 1850           __end_of_EEPROM_24C1025_Write_Int 1BAB  
         __end_of_EEPROM_24C1025_Write_Str 1392                                 ??_ADC_init 0020  
              __end_of_EEPROM_Write_String 1C2A            __end_of_EEPROM_24C1025_Fill_All 1E52  
                              ?_Send_To_MB 0070                     __size_of_Send_Reply_OK 0009  
                               __pbssBANK1 00C9                                 __pbssBANK2 0110  
                               __pbssBANK3 0190                         _RESISTOR_ROOM_TEMP 1818  
          __end_of_EEPROM_24C1025_Read_Int 1B5A            __end_of_EEPROM_24C1025_Read_Str 1682  
                 ?_Package_Usart_is_for_me 0070                                  ?_Save_Log 00AA  
                           _PROCULUS_Delay 1A53                          __end_of__Umul8_16 1B32  
                               __pmaintext 086D                                    ?___flge 0020  
                      Save_Log@add_datalog 00AA                        _EEPROM_Read_Integer 1BAB  
               PROCULUS_Show_Screen@screen 00A8                                 __pintentry 0004  
                     _PROCULUS_Show_Screen 1000                                    _T1CKPS0 0084  
                                  _T1CKPS1 0085                                    ?_strcpy 0020  
                                  ?_strlen 0020                          MediaPlacaVaccum@i 00A5  
                                ?___xxtofl 0020                                    _MAX_ADC 1820  
                     ?_EEPROM_Read_Integer 0023                      Decodify_Command@dados 00B5  
              EEPROM_24C1025_Read_Int@data 003D                                    _SSPCON2 0091  
         __end_of_PROCULUS_VP_Write_String 1A08                    EEPROM_Read_Integer@addr 0026  
                                  _SSPSTAT 0094                   _EEPROM_24C1025_Read_Byte 1A08  
                               __stringtab 1800                        PROCULUS_VP_Write@vp 00A4  
              ??_EEPROM_24C1025_Write_Byte 003C                 __end_of_EEPROM_Read_String 1ACC  
                   __end_of_PROCULUS_Delay 1A70                   __end_of_USART_put_string 1CC0  
                     __size_of_my_delay_ms 0037                                 ??_Save_Log 0070  
                          PROCULUS_Delay@i 0024                                    _Vaccum0 00CD  
                             ??_USART_init 0024                EEPROM_24C1025_Read_Str@ctrl 0033  
                                  _Tensao1 00C9                               ??_USART_putc 0020  
               __size_of_USART_to_Protocol 0055                PROCULUS_Buzzer@time_ms_x_10 00A8  
                          __size_of___flge 0093                                    ___fladd 0B0A  
                                  ___fldiv 0969                   EEPROM_Write_Integer@addr 002A  
                                  ___flmul 0383                   EEPROM_Write_Integer@dado 0025  
                                  ___flsub 1A8E                                    ___fltol 0802  
                                  ___lldiv 1015                                    ___lwdiv 1DD6  
                            _Send_Reply_OK 197A                        __size_of_Send_To_MB 0028  
                    ?_PROCULUS_Show_Screen 00A8                                    _captura 07F6  
                         _statuspower_memo 007B                                    __ptext1 1E52  
                                  __ptext2 0D37                                    __ptext3 1A8E  
                                  __ptext4 0B0A                                    __ptext5 1073  
                                  __ptext6 0969                                    __ptext7 1A3A  
                                  __ptext8 1F2D                                    __ptext9 1D2B  
                        ??_PROCULUS_Buzzer 00AA                                    _destino 00E0  
                        ?_EEPROM_Read_Byte 0070                            __size_of_strcpy 001E  
                          __size_of_strlen 0019                               __size_of_isr 00EE  
                               ??___xxtofl 0024                         ??_EEPROM_Read_Byte 0020  
                                  _segundo 007D                   __size_of_I2C_Master_Init 0031  
                 __size_of_I2C_Master_Read 0035                             _usart_protocol 0190  
                    ??_EEPROM_Read_Integer 0025                   __size_of_I2C_Master_Wait 0021  
                 __size_of_I2C_Master_Stop 0009              EEPROM_24C1025_Write_Int@local 00A8  
                                  _pointer 00DF              EEPROM_24C1025_Write_Byte@data 003B  
                                  clrloop0 196A                         __end_of_USART_init 1E94  
          __end_of_Package_Usart_is_for_me 1A53                         __end_of_USART_putc 19B4  
                        ADC_Media_10bits@i 0036                       end_of_initialization 0033  
                 _EEPROM_24C1025_Write_Int 1B82                          ??_my_delay_ms_WDT 0024  
                 _EEPROM_24C1025_Write_Str 1297                 ??_I2C_Master_RepeatedStart 0023  
                          ?_PROCULUS_Delay 0020                            my_delay_ms@time 0020  
          EEPROM_24C1025_Write_Buffer@data 002F            EEPROM_24C1025_Write_Buffer@ctrl 0036  
                __size_of_I2C_Master_Start 0011                  __size_of_I2C_Master_Write 000B  
                        ?_Decodify_Command 0070                            ___lldiv@divisor 0020  
                          ___lldiv@counter 002D       EEPROM_24C1025_Read_Buffer_USART@data 002E  
     EEPROM_24C1025_Read_Buffer_USART@ctrl 0034                         ??_Decodify_Command 00B1  
                                _RCSTAbits 0018                           I2C_Master_Init@c 002E  
                         I2C_Master_Read@a 0023                             ?_Send_Reply_OK 0070  
                _EEPROM_24C1025_Write_Byte 19DA           __size_of_EEPROM_24C1025_Fill_All 0040  
                                  strlen@s 0024                         USART_to_Protocol@i 0022  
                                _PORTAbits 0005                                  _PORTBbits 0006  
                                _PORTCbits 0007                           _Delay_Led_Memory 00DD  
             ??_EEPROM_24C1025_Read_Buffer 0030              EEPROM_24C1025_Write_Str@range 0032  
                                _ROOM_TEMP 181C                                ___fladd@grs 004A  
         __size_of_EEPROM_24C1025_Read_Int 0028    EEPROM_24C1025_Read_Buffer_USART@cnt_117 0031  
         __size_of_EEPROM_24C1025_Read_Str 017A                              ___xxtofl@sign 0028  
      __end_of_EEPROM_24C1025_Write_Buffer 1508                _EEPROM_24C1025_Write_Buffer 1392  
  EEPROM_24C1025_Read_Buffer_USART@mem_add 0029                                ___fldiv@grs 0042  
                              ___fldiv@rem 003B       PROCULUS_Control_Register_Write@vetor 00A6  
         EEPROM_24C1025_Write_Buffer@count 0033            EEPROM_24C1025_Write_Int@mem_add 00A0  
         EEPROM_24C1025_Write_Buffer@range 0035                          __size_of_ADC_init 000B  
                  Decodify_Command@tempint 00B9                          ?_MediaPlacaVaccum 0070  
                    PROCULUS_VP_Write@size 00A8            EEPROM_24C1025_Read_Str@chip_add 0031  
                              ___flmul@grs 005A                         ??_MediaPlacaVaccum 0065  
                 _PROCULUS_VP_Write_String 19F0                                  _TXSTAbits 0098  
      __size_of_EEPROM_24C1025_Read_Buffer 017E                          ?_ADC_Media_10bits 002E  
                   PROCULUS_Delay@tempo_ms 0020                     ??_PROCULUS_Show_Screen 00AA  
                       ??_ADC_Media_10bits 0032                             __end_of___flge 1106  
                    __end_of_USART_put_int 19DA                                _BAUDCTLbits 0187  
                           __end_of_strcpy 1A8E                             __end_of_strlen 1A3A  
                      start_initialization 0015                                __end_of_isr 1297  
                              USART_init@i 0025                               ??_Send_To_MB 0021  
 EEPROM_24C1025_Read_Buffer_USART@chip_add 0032                          ??_I2C_Master_Init 0032  
                        ??_I2C_Master_Read 0025                          ??_I2C_Master_Wait 0020  
                        ??_I2C_Master_Stop 0023               __end_of_EEPROM_Write_Integer 1C8D  
         EEPROM_24C1025_Write_Int@chip_add 00A7                        Decodify_Command@add 00B7  
                          ??_Send_Reply_OK 0025                                   ??___flge 0028  
                        __size_of_Save_Log 007D                       I2C_Master_Wait@tempo 0022  
                                __Umul8_16 1B0F                         __end_of_Send_To_MB 1B82  
         __size_of_Package_Usart_is_for_me 0019                                   ??_strcpy 0021  
                                 ??_strlen 0022   EEPROM_24C1025_Read_Buffer_USART@sizedata 002D  
               ??_EEPROM_24C1025_Read_Byte 003A         EEPROM_24C1025_Write_Buffer@mem_add 002A  
                                ___fladd@a 003B                                  ___fladd@b 0037  
         EEPROM_24C1025_Write_Byte@mem_add 0037                                  ___fldiv@a 002E  
                                ___fldiv@b 0032                                  ___flmul@a 004F  
                                ___flmul@b 004B                                __pbssCOMMON 0078  
                                ___flsub@a 004B                                  ___flsub@b 004F  
                                ___latbits 0002                              __pcstackBANK0 0020  
                            __pcstackBANK1 00A0                          _PROCULUS_VP_Write 1E94  
                        __size_of___xxtofl 00A3                         ?_PROCULUS_VP_Write 00A4  
             __size_of_EEPROM_Write_String 002B                           _I2C_Master_Start 19B4  
                         _I2C_Master_Write 198E                        ??_PROCULUS_VP_Write 00A9  
                           _tempodecorrido 00D3                          ?_USART_put_string 0021  
                          _PROCULUS_Buzzer 1BD5                           ___lwdiv@dividend 0022  
           Package_Usart_is_for_me@retorno 0020                         ??_USART_put_string 0023  
                                 ?___fladd 0037                                   ?___fldiv 002E  
                  _EEPROM_24C1025_Fill_All 1E12                                   ?___flmul 004B  
                                 ?___flsub 004B                                   ?___fltol 0065  
                                 ?___lldiv 0020                                 ?__Umul8_16 0020  
                       _EEPROM_Read_String 1AAC                                   ?___lwdiv 0020  
       __end_of_EEPROM_24C1025_Read_Buffer 07F6                 _EEPROM_24C1025_Read_Buffer 0678  
                                 ?_captura 0020                                  __pstrings 1800  
                    MediaPlacaVaccum@canal 00A4                            _my_delay_ms_WDT 1D62  
                  _EEPROM_24C1025_Read_Int 1B32                    _EEPROM_24C1025_Read_Str 1508  
                   EEPROM_Read_Integer@ptr 0027                 ??_EEPROM_24C1025_Write_Int 00A6  
               ??_EEPROM_24C1025_Write_Str 002F                        ?_EEPROM_Read_String 0023  
                __end_of_PROCULUS_VP_Write 1ED8                 EEPROM_24C1025_Read_Str@cnt 0030  
                                 _ADC_init 1983                           ___lwdiv@quotient 0025  
                  EEPROM_Write_Integer@ptr 0029                           ??_PROCULUS_Delay 0022  
           EEPROM_24C1025_Read_Buffer@data 002F             EEPROM_24C1025_Read_Buffer@ctrl 0035  
                            ??_my_delay_ms 0024                  __size_of_EEPROM_Read_Byte 0022  
                        interrupt_function 0004            EEPROM_24C1025_Write_Str@mem_add 002A  
                     ??_EEPROM_Read_String 0024                                  clear_ram0 1969  
                                 _PIE1bits 008C                                   _PIR1bits 000C  
         PROCULUS_Control_Register_Write@i 00A7                     Decodify_Command@OutPut 00BB  
                          _PT100_TRANSLADA 1810                            _Delay_Led_Usart 00DB  
             EEPROM_24C1025_Read_Byte@data 003C                __end_of_EEPROM_Read_Integer 1BD5  
                               _ADCON0bits 001F                                __stringbase 180F  
                               _ADCON1bits 009F                  __size_of_Decodify_Command 034C  
                     _EEPROM_Write_Integer 1C5B             EEPROM_24C1025_Read_Int@mem_add 0036  
                                main@reset 00C7                 ??_PROCULUS_VP_Write_String 00AF  
                      I2C_Master_Read@temp 0027                    __end_of_PROCULUS_Buzzer 1BFF  
                           _generic_status 00E4                                 _EECON1bits 018C  
                                 _Save_Log 1F83                  ??_EEPROM_24C1025_Fill_All 0070  
                      __end_of_my_delay_ms 1D62               EEPROM_24C1025_Read_Str@range 0032  
                  __end_of_my_delay_ms_WDT 1D9A                               my_delay_ms@i 0026  
                              ??__Umul8_16 0022                  __size_of_MediaPlacaVaccum 02C9  
        __size_of_I2C_Master_RepeatedStart 000B                           __size_of___fladd 022D  
                ??_EEPROM_24C1025_Read_Int 003A                    _Package_Usart_is_for_me 1A3A  
                         __size_of___fldiv 01A1                  ??_EEPROM_24C1025_Read_Str 002E  
                         __size_of___flmul 02F5                  ?_I2C_Master_RepeatedStart 0070  
                         __size_of___flsub 001E                           __size_of___fltol 006B  
                         __size_of___lldiv 005E                           __size_of___lwdiv 003C  
                       __end_of__stringtab 1810        EEPROM_24C1025_Write_Buffer@chip_add 0034  
                      USART_put_string@ptr 0023                           __size_of_captura 000A  
                    ?_EEPROM_Write_Integer 0025                            _I2C_Master_Init 1C2A  
                          _I2C_Master_Read 1CC0                                   ___xxtofl 1106  
               __size_of_PROCULUS_VP_Write 0044                            _I2C_Master_Wait 1ACC  
         EEPROM_24C1025_Read_Byte@chip_add 003B                            _I2C_Master_Stop 1971  
                __size_of_ADC_Media_10bits 0056                            ___lwdiv@divisor 0020  
                          ___lwdiv@counter 0027                                   __ptext10 07F6  
                                 __ptext11 1106                                   __ptext20 1F83  
                                 __ptext12 1C2A                                   __ptext21 0802  
                                 __ptext13 1015                                   __ptext30 1CF5  
                                 __ptext22 0383                                   __ptext14 0037  
                                 __ptext31 19C5                                   __ptext23 1B0F  
                                 __ptext15 1A70                                   __ptext40 19DA  
                                 __ptext32 1A53                                   __ptext24 19F0  
                                 __ptext16 1ED8                                   __ptext41 1508  
                                 __ptext33 1BFF                                   __ptext25 1A21  
                                 __ptext17 1B5A                                   __ptext50 1B82  
                                 __ptext42 1B32                                   __ptext34 1C5B  
                                 __ptext26 1E94                                   __ptext18 197A  
                                 __ptext51 1392                                   __ptext43 1A08  
                                 __ptext35 1D9A                                   __ptext27 1000  
                                 __ptext19 1C8D                                   __ptext52 1D62  
                                 __ptext44 0678                                   __ptext36 1AAC  
                                 __ptext28 1BD5                                   __ptext53 198E  
                                 __ptext45 1682                                   __ptext37 1BAB  
                                 __ptext29 1DD6                                   __ptext54 1971  
                                 __ptext46 19A4                                   __ptext38 1AED  
                                 __ptext55 19B4                                   __ptext47 1999  
                                 __ptext39 1297                                   __ptext56 1ACC  
                                 __ptext48 1CC0                                   __ptext57 1983  
                                 __ptext49 1E12                                   __ptext58 11A9  
                       USART_put_int@value 00A0                             _PT100_CONSTANT 1814  
                     MediaPlacaVaccum@Temp 00A7                                 strcpy@from 0020  
                            __size_of_main 00FC               EEPROM_24C1025_Fill_All@value 00AA  
               PROCULUS_VP_Write_String@vp 00AC                    __end_of_PT100_TRANSLADA 1814  
      EEPROM_24C1025_Write_Buffer@sizedata 002E                                _milisegundo 00D9  
                           _Delay_Led_Tmr0 0078              __size_of_PROCULUS_Show_Screen 0015  
                      _EEPROM_Write_String 1BFF                                   log@coeff 1824  
                 __end_of_I2C_Master_Start 19C5                   __end_of_I2C_Master_Write 1999  
                               _INTCONbits 000B                     __end_of_PT100_CONSTANT 1818  
                                 isr@tempo 0076                       EEPROM_Read_Byte@addr 0022  
                   EEPROM_Read_String@addr 0025                     EEPROM_Read_String@dado 0023  
                         my_delay_ms_WDT@i 0026                                   intlevel1 0000  
                         ?_PROCULUS_Buzzer 00A8                          USART_put_int@dado 00A3  
                         _EEPROM_Read_Byte 1AED                                _my_delay_ms 1D2B  
                     ?_EEPROM_Write_String 0025                           ___lldiv@dividend 0024  
                   __size_of_USART_put_int 0015               EEPROM_24C1025_Write_Int@data 00A4  
                     EEPROM_Read_Integer@i 002A                    EEPROM_Write_String@addr 0027  
                  EEPROM_Write_String@dado 0025                         USART_init@baudrate 0020  
                                stringcode 180A                                 _OSCCONbits 008F  
    EEPROM_24C1025_Read_Buffer_USART@range 0033                  ??_Package_Usart_is_for_me 0020  
                         ?_my_delay_ms_WDT 0020                      __end_of_Send_Reply_OK 1983  
                  __end_of_I2C_Master_Init 1C5B                    __end_of_I2C_Master_Read 1CF5  
                  __end_of_I2C_Master_Wait 1AED                    __end_of_I2C_Master_Stop 197A  
             EEPROM_24C1025_Write_Str@data 002E               EEPROM_24C1025_Write_Str@ctrl 0033  
              ?_EEPROM_24C1025_Read_Buffer 002A            EEPROM_24C1025_Fill_All@chip_add 00AC  
                   ??_EEPROM_Write_Integer 0027                     __Umul8_16@multiplicand 0020  
          USART_to_Protocol@usart_protocol 0024                           _Decodify_Command 0037  
                __size_of_USART_put_string 0033                           ___lldiv@quotient 0029  
                        I2C_Master_Write@d 0023                                   strcpy@cp 0023  
                                 strlen@cp 0023                                   strcpy@to 0022  
                                 stringdir 180A                                   stringtab 1800  
                              _SSPCON2bits 0091                          _EEPROM_Write_Byte 1D9A  
           EEPROM_24C1025_Read_Str@mem_add 0029                              ___fladd@signs 0047  
                       ?_EEPROM_Write_Byte 0020                      ??_EEPROM_Write_String 0026  
                             ___fladd@aexp 0048                               ___fladd@bexp 0049  
        __size_of_EEPROM_24C1025_Read_Byte 0019                  ?_EEPROM_24C1025_Read_Byte 0036  
                      EEPROM_Read_String@c 0026                       __Umul8_16@multiplier 0028  
                      ??_EEPROM_Write_Byte 0021                          __Umul8_16@product 0024  
                               _USART_init 1E52  
